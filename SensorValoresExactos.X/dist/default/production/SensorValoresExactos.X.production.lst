

Microchip MPLAB XC8 Assembler V2.31 build 20201012212115 
                                                                                               Fri Apr 30 12:22:28 2021

Microchip MPLAB XC8 C Compiler v2.31 (Free license) build 20201012212115 Og1 
     1                           	processor	18F45K50
     2                           	fnconf	rparam,??,?,0
     3                           	pagewidth 120
     4                           	opt	flic
     5                           	psect	smallconst,global,reloc=2,class=SMALLCONST,delta=1,noexec
     6                           	psect	cinit,global,reloc=2,class=CODE,delta=1
     7                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1,lowdata,noexec
     8                           	psect	bssBANK1,global,class=BANK1,space=1,delta=1,lowdata,noexec
     9                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1,lowdata,noexec
    10                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
    11                           	psect	text0,global,reloc=2,class=CODE,delta=1
    12                           	psect	text1,global,reloc=2,class=CODE,delta=1
    13                           	psect	text2,global,reloc=2,class=CODE,delta=1
    14                           	psect	text3,global,reloc=2,class=CODE,delta=1,group=3
    15                           	psect	text4,global,reloc=2,class=CODE,delta=1,group=3
    16                           	psect	text5,global,reloc=2,class=CODE,delta=1,group=2
    17                           	psect	text6,global,reloc=2,class=CODE,delta=1
    18                           	psect	text7,global,reloc=2,class=CODE,delta=1
    19                           	psect	text8,global,reloc=2,class=CODE,delta=1
    20                           	psect	text9,global,reloc=2,class=CODE,delta=1
    21                           	psect	text10,global,reloc=2,class=CODE,delta=1
    22                           	psect	text11,global,reloc=2,class=CODE,delta=1
    23                           	psect	text12,global,reloc=2,class=CODE,delta=1
    24                           	psect	text13,global,reloc=2,class=CODE,delta=1
    25                           	psect	text14,global,reloc=2,class=CODE,delta=1
    26                           	psect	text15,global,reloc=2,class=CODE,delta=1
    27                           	psect	text16,global,reloc=2,class=CODE,delta=1
    28                           	psect	text17,global,reloc=2,class=CODE,delta=1,group=3
    29                           	psect	text18,global,reloc=2,class=CODE,delta=1,group=1
    30                           	psect	text19,global,reloc=2,class=CODE,delta=1,group=1
    31                           	psect	text20,global,reloc=2,class=CODE,delta=1,group=3
    32                           	psect	text21,global,reloc=2,class=CODE,delta=1,group=1
    33                           	psect	text22,global,reloc=2,class=CODE,delta=1,group=3
    34                           	psect	text23,global,reloc=2,class=CODE,delta=1,group=3
    35                           	psect	text24,global,reloc=2,class=CODE,delta=1,group=3
    36                           	psect	text25,global,reloc=2,class=CODE,delta=1,group=3
    37                           	psect	text26,global,reloc=2,class=CODE,delta=1,group=3
    38                           	psect	text27,global,reloc=2,class=CODE,delta=1,group=2
    39                           	psect	text28,global,reloc=2,class=CODE,delta=1,group=2
    40                           	psect	text29,global,reloc=2,class=CODE,delta=1,group=2
    41                           	psect	text30,global,reloc=2,class=CODE,delta=1,group=2
    42                           	psect	text31,global,reloc=2,class=CODE,delta=1,group=2
    43                           	psect	text32,global,reloc=2,class=CODE,delta=1,group=2
    44                           	psect	text33,global,reloc=2,class=CODE,delta=1,group=2
    45                           	psect	text34,global,reloc=2,class=CODE,delta=1,group=2
    46                           	psect	text35,global,reloc=2,class=CODE,delta=1,group=2
    47                           	psect	text36,global,reloc=2,class=CODE,delta=1,group=2
    48                           	psect	text37,global,reloc=2,class=CODE,delta=1,group=1
    49                           	psect	text38,global,reloc=2,class=CODE,delta=1,group=1
    50                           	psect	text39,global,reloc=2,class=CODE,delta=1,group=3
    51                           	psect	text40,global,reloc=2,class=CODE,delta=1,group=3
    52                           	psect	text41,global,reloc=2,class=CODE,delta=1,group=3
    53                           	psect	text42,global,reloc=2,class=CODE,delta=1,group=2
    54                           	psect	text43,global,reloc=2,class=CODE,delta=1,group=2
    55                           	psect	text44,global,reloc=2,class=CODE,delta=1,group=1
    56                           	psect	text45,global,reloc=2,class=CODE,delta=1,group=3
    57                           	psect	text46,global,reloc=2,class=CODE,delta=1
    58                           	psect	text47,global,reloc=2,class=CODE,delta=1,group=3
    59                           	psect	text48,global,reloc=2,class=CODE,delta=1,group=3
    60                           	psect	text49,global,reloc=2,class=CODE,delta=1,group=3
    61                           	psect	text50,global,reloc=2,class=CODE,delta=1,group=2
    62                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1,noexec
    63                           	psect	rparam,global,class=COMRAM,space=1,delta=1,noexec
    64                           	psect	idloc,global,abs,ovrld,class=IDLOC,space=5,delta=1,noexec
    65                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=1,noexec
    66  0000                     
    67                           ; Version 2.20
    68                           ; Generated 05/05/2020 GMT
    69                           ; 
    70                           ; Copyright Â© 2020, Microchip Technology Inc. and its subsidiaries ("Microchip")
    71                           ; All rights reserved.
    72                           ; 
    73                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    74                           ; 
    75                           ; Redistribution and use in source and binary forms, with or without modification, are
    76                           ; permitted provided that the following conditions are met:
    77                           ; 
    78                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    79                           ;        conditions and the following disclaimer.
    80                           ; 
    81                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    82                           ;        of conditions and the following disclaimer in the documentation and/or other
    83                           ;        materials provided with the distribution.
    84                           ; 
    85                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    86                           ;        software without specific prior written permission.
    87                           ; 
    88                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    89                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    90                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    91                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    92                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    93                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    94                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    95                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    96                           ; 
    97                           ; 
    98                           ; Code-generator required, PIC18F45K50 Definitions
    99                           ; 
   100                           ; SFR Addresses
   101  0000                     _ANSELB	set	3932
   102  0000                     _ANSELCbits	set	3933
   103  0000                     _ANSELAbits	set	3931
   104  0000                     _PORTB	set	3969
   105  0000                     _PORTCbits	set	3970
   106  0000                     _PORTAbits	set	3968
   107  0000                     _INTCONbits	set	4082
   108  0000                     _TMR0L	set	4054
   109  0000                     _T0CONbits	set	4053
   110  0000                     _LATD	set	3980
   111  0000                     _LATDbits	set	3980
   112  0000                     _LATB	set	3978
   113  0000                     _TRISB	set	3987
   114  0000                     _LATCbits	set	3979
   115  0000                     _TRISCbits	set	3988
   116  0000                     _OSCCON	set	4051
   117  0000                     _TRISD	set	3989
   118  0000                     _TRISA	set	3986
   119  0000                     _ADRESH	set	4036
   120  0000                     _ADRESL	set	4035
   121  0000                     _ADCON2	set	4032
   122  0000                     _ADCON0	set	4034
   123  0000                     _ADCON0bits	set	4034
   124  0000                     _ADCON1bits	set	4033
   125                           
   126                           	psect	smallconst
   127  000800                     __psmallconst:
   128                           	callstack 0
   129  000800  00                 	db	0
   130  000801                     STR_3:
   131  000801  25                 	db	37
   132  000802  64                 	db	100	;'d'
   133  000803  25                 	db	37
   134  000804  64                 	db	100	;'d'
   135  000805  3A                 	db	58	;':'
   136  000806  25                 	db	37
   137  000807  64                 	db	100	;'d'
   138  000808  25                 	db	37
   139  000809  64                 	db	100	;'d'
   140  00080A  3A                 	db	58	;':'
   141  00080B  25                 	db	37
   142  00080C  64                 	db	100	;'d'
   143  00080D  25                 	db	37
   144  00080E  64                 	db	100	;'d'
   145  00080F  20                 	db	32
   146  000810  41                 	db	65	;'A'
   147  000811  2E                 	db	46
   148  000812  4D                 	db	77	;'M'
   149  000813  00                 	db	0
   150  000814                     STR_4:
   151  000814  25                 	db	37
   152  000815  64                 	db	100	;'d'
   153  000816  25                 	db	37
   154  000817  64                 	db	100	;'d'
   155  000818  3A                 	db	58	;':'
   156  000819  25                 	db	37
   157  00081A  64                 	db	100	;'d'
   158  00081B  25                 	db	37
   159  00081C  64                 	db	100	;'d'
   160  00081D  3A                 	db	58	;':'
   161  00081E  25                 	db	37
   162  00081F  64                 	db	100	;'d'
   163  000820  25                 	db	37
   164  000821  64                 	db	100	;'d'
   165  000822  20                 	db	32
   166  000823  50                 	db	80	;'P'
   167  000824  2E                 	db	46
   168  000825  4D                 	db	77	;'M'
   169  000826  00                 	db	0
   170  000827                     STR_1:
   171  000827  54                 	db	84	;'T'
   172  000828  65                 	db	101	;'e'
   173  000829  6D                 	db	109	;'m'
   174  00082A  70                 	db	112	;'p'
   175  00082B  2E                 	db	46
   176  00082C  20                 	db	32
   177  00082D  3D                 	db	61	;'='
   178  00082E  20                 	db	32
   179  00082F  25                 	db	37
   180  000830  33                 	db	51	;'3'
   181  000831  2E                 	db	46
   182  000832  32                 	db	50	;'2'
   183  000833  66                 	db	102	;'f'
   184  000834  20                 	db	32
   185  000835  25                 	db	37
   186  000836  63                 	db	99	;'c'
   187  000837  43                 	db	67	;'C'
   188  000838  00                 	db	0
   189  000839                     STR_5:
   190  000839  20                 	db	32
   191  00083A  4D                 	db	77	;'M'
   192  00083B  6F                 	db	111	;'o'
   193  00083C  64                 	db	100	;'d'
   194  00083D  6F                 	db	111	;'o'
   195  00083E  20                 	db	32
   196  00083F  41                 	db	65	;'A'
   197  000840  6C                 	db	108	;'l'
   198  000841  61                 	db	97	;'a'
   199  000842  72                 	db	114	;'r'
   200  000843  6D                 	db	109	;'m'
   201  000844  61                 	db	97	;'a'
   202  000845  20                 	db	32
   203  000846  00                 	db	0
   204  000847                     STR_8:
   205  000847  49                 	db	73	;'I'
   206  000848  4E                 	db	78	;'N'
   207  000849  46                 	db	70	;'F'
   208  00084A  00                 	db	0
   209  00084B                     STR_12:
   210  00084B  4E                 	db	78	;'N'
   211  00084C  41                 	db	65	;'A'
   212  00084D  4E                 	db	78	;'N'
   213  00084E  00                 	db	0
   214  00084F                     STR_9:
   215  00084F  69                 	db	105	;'i'
   216  000850  6E                 	db	110	;'n'
   217  000851  66                 	db	102	;'f'
   218  000852  00                 	db	0
   219  000853                     STR_13:
   220  000853  6E                 	db	110	;'n'
   221  000854  61                 	db	97	;'a'
   222  000855  6E                 	db	110	;'n'
   223  000856  00                 	db	0
   224  000857                     STR_16:
   225  000857  6C                 	db	108	;'l'
   226  000858  66                 	db	102	;'f'
   227  000859  00                 	db	0
   228  00085A  00                 	db	0	; dummy byte at the end
   229  0000                     
   230                           ; #config settings
   231                           
   232                           	psect	cinit
   233  004D76                     __pcinit:
   234                           	callstack 0
   235  004D76                     start_initialization:
   236                           	callstack 0
   237  004D76                     __initialization:
   238                           	callstack 0
   239                           
   240                           ; Clear objects allocated to BANK1 (118 bytes)
   241  004D76  EE01  F000         	lfsr	0,__pbssBANK1
   242  004D7A  0E76               	movlw	118
   243  004D7C                     clear_0:
   244  004D7C  6AEE               	clrf	postinc0,c
   245  004D7E  06E8               	decf	wreg,f,c
   246  004D80  E1FD               	bnz	clear_0
   247                           
   248                           ; Clear objects allocated to BANK0 (50 bytes)
   249  004D82  EE00  F0CE         	lfsr	0,__pbssBANK0
   250  004D86  0E32               	movlw	50
   251  004D88                     clear_1:
   252  004D88  6AEE               	clrf	postinc0,c
   253  004D8A  06E8               	decf	wreg,f,c
   254  004D8C  E1FD               	bnz	clear_1
   255  004D8E                     end_of_initialization:
   256                           	callstack 0
   257  004D8E                     __end_of__initialization:
   258                           	callstack 0
   259  004D8E  0E00               	movlw	low (__Lmediumconst shr (0+16))
   260  004D90  6EF8               	movwf	tblptru,c
   261  004D92  0100               	movlb	0
   262  004D94  EF46  F025         	goto	_main	;jump to C main() function
   263                           
   264                           	psect	bssBANK0
   265  0000CE                     __pbssBANK0:
   266                           	callstack 0
   267  0000CE                     _temperatura:
   268                           	callstack 0
   269  0000CE                     	ds	4
   270  0000D2                     _nout:
   271                           	callstack 0
   272  0000D2                     	ds	2
   273  0000D4                     _width:
   274                           	callstack 0
   275  0000D4                     	ds	2
   276  0000D6                     _prec:
   277                           	callstack 0
   278  0000D6                     	ds	2
   279  0000D8                     _flags:
   280                           	callstack 0
   281  0000D8                     	ds	2
   282  0000DA                     _US:
   283                           	callstack 0
   284  0000DA                     	ds	2
   285  0000DC                     _DS:
   286                           	callstack 0
   287  0000DC                     	ds	2
   288  0000DE                     _UM:
   289                           	callstack 0
   290  0000DE                     	ds	2
   291  0000E0                     _DM:
   292                           	callstack 0
   293  0000E0                     	ds	2
   294  0000E2                     _UH:
   295                           	callstack 0
   296  0000E2                     	ds	2
   297  0000E4                     _DH:
   298                           	callstack 0
   299  0000E4                     	ds	2
   300  0000E6                     _MINUTO:
   301                           	callstack 0
   302  0000E6                     	ds	2
   303  0000E8                     _HORA:
   304                           	callstack 0
   305  0000E8                     	ds	2
   306  0000EA                     _Decenas_Segundos:
   307                           	callstack 0
   308  0000EA                     	ds	2
   309  0000EC                     _Unidades_Segundos:
   310                           	callstack 0
   311  0000EC                     	ds	2
   312  0000EE                     _Decenas_Minutos:
   313                           	callstack 0
   314  0000EE                     	ds	2
   315  0000F0                     _Unidades_Minutos:
   316                           	callstack 0
   317  0000F0                     	ds	2
   318  0000F2                     _Decenas_Horas:
   319                           	callstack 0
   320  0000F2                     	ds	2
   321  0000F4                     _Unidades_Horas:
   322                           	callstack 0
   323  0000F4                     	ds	2
   324  0000F6                     _segundos:
   325                           	callstack 0
   326  0000F6                     	ds	2
   327  0000F8                     _horas:
   328                           	callstack 0
   329  0000F8                     	ds	2
   330  0000FA                     _minutos:
   331                           	callstack 0
   332  0000FA                     	ds	2
   333  0000FC                     _cambio:
   334                           	callstack 0
   335  0000FC                     	ds	2
   336  0000FE                     _ADC:
   337                           	callstack 0
   338  0000FE                     	ds	2
   339                           
   340                           	psect	bssBANK1
   341  000100                     __pbssBANK1:
   342                           	callstack 0
   343  000100                     ___fpclassifyf@F465:
   344                           	callstack 0
   345  000100                     	ds	4
   346  000104                     floorf@F527:
   347                           	callstack 0
   348  000104                     	ds	4
   349  000108                     ceilf@F527:
   350                           	callstack 0
   351  000108                     	ds	4
   352  00010C                     _R_CAD:
   353                           	callstack 0
   354  00010C                     	ds	4
   355  000110                     _R_LM35:
   356                           	callstack 0
   357  000110                     	ds	4
   358  000114                     _SEGUNDO:
   359                           	callstack 0
   360  000114                     	ds	2
   361  000116                     _dbuf:
   362                           	callstack 0
   363  000116                     	ds	80
   364  000166                     _Valores:
   365                           	callstack 0
   366  000166                     	ds	16
   367                           
   368                           	psect	cstackBANK0
   369  000060                     __pcstackBANK0:
   370                           	callstack 0
   371  000060                     _efgtoa$1267:
   372                           	callstack 0
   373                           
   374                           ; 2 bytes @ 0x0
   375  000060                     	ds	2
   376  000062                     _efgtoa$1268:
   377                           	callstack 0
   378                           
   379                           ; 2 bytes @ 0x2
   380  000062                     	ds	2
   381  000064                     _efgtoa$1272:
   382                           	callstack 0
   383                           
   384                           ; 2 bytes @ 0x4
   385  000064                     	ds	2
   386  000066                     _efgtoa$1276:
   387                           	callstack 0
   388                           
   389                           ; 2 bytes @ 0x6
   390  000066                     	ds	2
   391  000068                     _efgtoa$1277:
   392                           	callstack 0
   393                           
   394                           ; 2 bytes @ 0x8
   395  000068                     	ds	2
   396  00006A                     _efgtoa$1278:
   397                           	callstack 0
   398                           
   399                           ; 2 bytes @ 0xA
   400  00006A                     	ds	2
   401  00006C                     efgtoa@t:
   402                           	callstack 0
   403                           
   404                           ; 2 bytes @ 0xC
   405  00006C                     	ds	2
   406  00006E                     efgtoa@pp:
   407                           	callstack 0
   408                           
   409                           ; 2 bytes @ 0xE
   410  00006E                     	ds	2
   411  000070                     efgtoa@ne:
   412                           	callstack 0
   413                           
   414                           ; 2 bytes @ 0x10
   415  000070                     	ds	2
   416  000072                     efgtoa@m:
   417                           	callstack 0
   418                           
   419                           ; 2 bytes @ 0x12
   420  000072                     	ds	2
   421  000074                     efgtoa@ou:
   422                           	callstack 0
   423                           
   424                           ; 4 bytes @ 0x14
   425  000074                     	ds	4
   426  000078                     efgtoa@d:
   427                           	callstack 0
   428                           
   429                           ; 2 bytes @ 0x18
   430  000078                     	ds	2
   431  00007A                     efgtoa@sign:
   432                           	callstack 0
   433                           
   434                           ; 2 bytes @ 0x1A
   435  00007A                     	ds	2
   436  00007C                     efgtoa@p:
   437                           	callstack 0
   438                           
   439                           ; 2 bytes @ 0x1C
   440  00007C                     	ds	2
   441  00007E                     efgtoa@w:
   442                           	callstack 0
   443                           
   444                           ; 2 bytes @ 0x1E
   445  00007E                     	ds	2
   446  000080                     efgtoa@nmode:
   447                           	callstack 0
   448                           
   449                           ; 1 bytes @ 0x20
   450  000080                     	ds	1
   451  000081                     efgtoa@mode:
   452                           	callstack 0
   453                           
   454                           ; 1 bytes @ 0x21
   455  000081                     	ds	1
   456  000082                     efgtoa@h:
   457                           	callstack 0
   458                           
   459                           ; 4 bytes @ 0x22
   460  000082                     	ds	4
   461  000086                     efgtoa@l:
   462                           	callstack 0
   463                           
   464                           ; 4 bytes @ 0x26
   465  000086                     	ds	4
   466  00008A                     efgtoa@i:
   467                           	callstack 0
   468                           
   469                           ; 2 bytes @ 0x2A
   470  00008A                     	ds	2
   471  00008C                     efgtoa@g:
   472                           	callstack 0
   473                           
   474                           ; 4 bytes @ 0x2C
   475  00008C                     	ds	4
   476  000090                     efgtoa@e:
   477                           	callstack 0
   478                           
   479                           ; 2 bytes @ 0x30
   480  000090                     	ds	2
   481  000092                     efgtoa@n:
   482                           	callstack 0
   483                           
   484                           ; 2 bytes @ 0x32
   485  000092                     	ds	2
   486  000094                     efgtoa@u:
   487                           	callstack 0
   488                           
   489                           ; 4 bytes @ 0x34
   490  000094                     	ds	4
   491  000098                     vfpfcnvrt@ll:
   492                           	callstack 0
   493                           
   494                           ; 8 bytes @ 0x38
   495  000098                     	ds	8
   496  0000A0                     vfpfcnvrt@vp:
   497                           	callstack 0
   498                           
   499                           ; 2 bytes @ 0x40
   500  0000A0                     	ds	2
   501  0000A2                     _vfpfcnvrt$1292:
   502                           	callstack 0
   503                           
   504                           ; 2 bytes @ 0x42
   505  0000A2                     	ds	2
   506  0000A4                     _vfpfcnvrt$1293:
   507                           	callstack 0
   508                           
   509                           ; 2 bytes @ 0x44
   510  0000A4                     	ds	2
   511  0000A6                     _vfpfcnvrt$1299:
   512                           	callstack 0
   513                           
   514                           ; 2 bytes @ 0x46
   515  0000A6                     	ds	2
   516  0000A8                     vfpfcnvrt@f:
   517                           	callstack 0
   518                           
   519                           ; 4 bytes @ 0x48
   520  0000A8                     	ds	4
   521  0000AC                     vfpfcnvrt@ct:
   522                           	callstack 0
   523                           
   524                           ; 3 bytes @ 0x4C
   525  0000AC                     	ds	3
   526  0000AF                     vfpfcnvrt@c:
   527                           	callstack 0
   528                           
   529                           ; 1 bytes @ 0x4F
   530  0000AF                     	ds	1
   531  0000B0                     ?_vfprintf:
   532                           	callstack 0
   533  0000B0                     vfprintf@fp:
   534                           	callstack 0
   535                           
   536                           ; 2 bytes @ 0x50
   537  0000B0                     	ds	2
   538  0000B2                     vfprintf@fmt:
   539                           	callstack 0
   540                           
   541                           ; 2 bytes @ 0x52
   542  0000B2                     	ds	2
   543  0000B4                     vfprintf@ap:
   544                           	callstack 0
   545                           
   546                           ; 2 bytes @ 0x54
   547  0000B4                     	ds	2
   548  0000B6                     ?_sprintf:
   549                           	callstack 0
   550  0000B6                     ?_printf:
   551                           	callstack 0
   552  0000B6                     sprintf@s:
   553                           	callstack 0
   554  0000B6                     printf@fmt:
   555                           	callstack 0
   556                           
   557                           ; 2 bytes @ 0x56
   558  0000B6                     	ds	2
   559  0000B8                     sprintf@fmt:
   560                           	callstack 0
   561                           
   562                           ; 2 bytes @ 0x58
   563  0000B8                     	ds	10
   564  0000C2                     sprintf@ap:
   565                           	callstack 0
   566                           
   567                           ; 2 bytes @ 0x62
   568  0000C2                     	ds	2
   569  0000C4                     sprintf@f:
   570                           	callstack 0
   571                           
   572                           ; 6 bytes @ 0x64
   573  0000C4                     	ds	2
   574  0000C6                     printf@ap:
   575                           	callstack 0
   576                           
   577                           ; 2 bytes @ 0x66
   578  0000C6                     	ds	2
   579  0000C8                     ??_Alarma:
   580                           
   581                           ; 1 bytes @ 0x68
   582  0000C8                     	ds	2
   583  0000CA                     _SensorLM35$1646:
   584                           	callstack 0
   585                           
   586                           ; 4 bytes @ 0x6A
   587  0000CA                     	ds	4
   588                           
   589                           	psect	cstackCOMRAM
   590  000001                     __pcstackCOMRAM:
   591                           	callstack 0
   592  000001                     ??_Set_DATA:
   593  000001                     ??_putch:
   594  000001                     ??_putcm:
   595  000001                     ??_Alarma_LED:
   596  000001                     ?_strlen:
   597                           	callstack 0
   598  000001                     ?___fpclassifyf:
   599                           	callstack 0
   600  000001                     ?_isupper:
   601                           	callstack 0
   602  000001                     ?_isdigit:
   603                           	callstack 0
   604  000001                     ?_strncmp:
   605                           	callstack 0
   606  000001                     ?_isspace:
   607                           	callstack 0
   608  000001                     ?_Read_ADC:
   609                           	callstack 0
   610  000001                     ?___wmul:
   611                           	callstack 0
   612  000001                     ?___awmod:
   613                           	callstack 0
   614  000001                     ?_ceilf:
   615                           	callstack 0
   616  000001                     ?___fladd:
   617                           	callstack 0
   618  000001                     ?___fldiv:
   619                           	callstack 0
   620  000001                     ?___flneg:
   621                           	callstack 0
   622  000001                     ?___fltol:
   623                           	callstack 0
   624  000001                     ?___aodiv:
   625                           	callstack 0
   626  000001                     ?___aomod:
   627                           	callstack 0
   628  000001                     ___wmul@multiplier:
   629                           	callstack 0
   630  000001                     ___awmod@dividend:
   631                           	callstack 0
   632  000001                     isdigit@c:
   633                           	callstack 0
   634  000001                     isspace@c:
   635                           	callstack 0
   636  000001                     isupper@c:
   637                           	callstack 0
   638  000001                     strcpy@dest:
   639                           	callstack 0
   640  000001                     strlen@s:
   641                           	callstack 0
   642  000001                     strncmp@_l:
   643                           	callstack 0
   644  000001                     ___fleq@ff1:
   645                           	callstack 0
   646  000001                     ___flneg@f1:
   647                           	callstack 0
   648  000001                     ___fltol@f1:
   649                           	callstack 0
   650  000001                     ___fladd@b:
   651                           	callstack 0
   652  000001                     ___fldiv@b:
   653                           	callstack 0
   654  000001                     ceilf@x:
   655                           	callstack 0
   656  000001                     ___fpclassifyf@x:
   657                           	callstack 0
   658  000001                     ___aodiv@dividend:
   659                           	callstack 0
   660  000001                     ___aomod@dividend:
   661                           	callstack 0
   662                           
   663                           ; 8 bytes @ 0x0
   664  000001                     	ds	1
   665  000002                     ??_Get_DATA:
   666  000002                     putch@data:
   667                           	callstack 0
   668  000002                     putcm@data:
   669                           	callstack 0
   670                           
   671                           ; 1 bytes @ 0x1
   672  000002                     	ds	1
   673  000003                     ??_isupper:
   674  000003                     ??_isdigit:
   675  000003                     ??_isspace:
   676  000003                     ??_Read_ADC:
   677  000003                     Get_DATA@data:
   678                           	callstack 0
   679  000003                     putch@Activa:
   680                           	callstack 0
   681  000003                     putcm@Activa:
   682                           	callstack 0
   683  000003                     Alarma_LED@A:
   684                           	callstack 0
   685  000003                     ___wmul@multiplicand:
   686                           	callstack 0
   687  000003                     ___awmod@divisor:
   688                           	callstack 0
   689  000003                     strcpy@src:
   690                           	callstack 0
   691  000003                     strlen@a:
   692                           	callstack 0
   693  000003                     strncmp@_r:
   694                           	callstack 0
   695                           
   696                           ; 2 bytes @ 0x2
   697  000003                     	ds	1
   698  000004                     ??_InicializaLCD:
   699  000004                     LCD_COMANDOS@comando:
   700                           	callstack 0
   701  000004                     fputc@c:
   702                           	callstack 0
   703                           
   704                           ; 2 bytes @ 0x3
   705  000004                     	ds	1
   706  000005                     ??_ceilf:
   707  000005                     ??___fpclassifyf:
   708  000005                     ??_strcpy:
   709  000005                     ??___fltol:
   710  000005                     Read_ADC@canal:
   711                           	callstack 0
   712  000005                     ___awmod@counter:
   713                           	callstack 0
   714  000005                     ___wmul@product:
   715                           	callstack 0
   716  000005                     strncmp@n:
   717                           	callstack 0
   718  000005                     ___fleq@ff2:
   719                           	callstack 0
   720  000005                     ___fladd@a:
   721                           	callstack 0
   722  000005                     ___fldiv@a:
   723                           	callstack 0
   724                           
   725                           ; 4 bytes @ 0x4
   726  000005                     	ds	1
   727  000006                     ?___awdiv:
   728                           	callstack 0
   729  000006                     ___awmod@sign:
   730                           	callstack 0
   731  000006                     ___awdiv@dividend:
   732                           	callstack 0
   733  000006                     fputc@fp:
   734                           	callstack 0
   735                           
   736                           ; 2 bytes @ 0x5
   737  000006                     	ds	1
   738  000007                     ??_strncmp:
   739  000007                     ?_tolower:
   740                           	callstack 0
   741  000007                     _isspace$1354:
   742                           	callstack 0
   743  000007                     strcpy@s:
   744                           	callstack 0
   745  000007                     tolower@c:
   746                           	callstack 0
   747                           
   748                           ; 2 bytes @ 0x6
   749  000007                     	ds	1
   750  000008                     ??_fputc:
   751  000008                     ?_atoi:
   752                           	callstack 0
   753  000008                     ___awdiv@divisor:
   754                           	callstack 0
   755  000008                     atoi@s:
   756                           	callstack 0
   757  000008                     strncmp@l:
   758                           	callstack 0
   759                           
   760                           ; 2 bytes @ 0x7
   761  000008                     	ds	1
   762  000009                     ??___fladd:
   763  000009                     ??___fldiv:
   764  000009                     ??_tolower:
   765  000009                     ??___fleq:
   766  000009                     ___fltol@sign1:
   767                           	callstack 0
   768  000009                     ___fpclassifyf@e:
   769                           	callstack 0
   770  000009                     strcpy@d:
   771                           	callstack 0
   772  000009                     ___aodiv@divisor:
   773                           	callstack 0
   774  000009                     ___aomod@divisor:
   775                           	callstack 0
   776                           
   777                           ; 8 bytes @ 0x8
   778  000009                     	ds	1
   779  00000A                     ??_atoi:
   780  00000A                     ___awdiv@counter:
   781                           	callstack 0
   782  00000A                     ___fltol@exp1:
   783                           	callstack 0
   784  00000A                     strncmp@r:
   785                           	callstack 0
   786                           
   787                           ; 2 bytes @ 0x9
   788  00000A                     	ds	1
   789  00000B                     ?___xxtofl:
   790                           	callstack 0
   791  00000B                     ___awdiv@sign:
   792                           	callstack 0
   793  00000B                     ___xxtofl@val:
   794                           	callstack 0
   795  00000B                     ceilf@m:
   796                           	callstack 0
   797  00000B                     ___fpclassifyf@u:
   798                           	callstack 0
   799                           
   800                           ; 4 bytes @ 0xA
   801  00000B                     	ds	1
   802  00000C                     ___awdiv@quotient:
   803                           	callstack 0
   804                           
   805                           ; 2 bytes @ 0xB
   806  00000C                     	ds	1
   807  00000D                     ?_ctoa:
   808                           	callstack 0
   809  00000D                     ___fladd@signs:
   810                           	callstack 0
   811  00000D                     ctoa@fp:
   812                           	callstack 0
   813  00000D                     fputs@s:
   814                           	callstack 0
   815  00000D                     _tolower$1423:
   816                           	callstack 0
   817  00000D                     ___fldiv@rem:
   818                           	callstack 0
   819                           
   820                           ; 4 bytes @ 0xC
   821  00000D                     	ds	1
   822  00000E                     ___fladd@aexp:
   823                           	callstack 0
   824  00000E                     atoi@neg:
   825                           	callstack 0
   826                           
   827                           ; 2 bytes @ 0xD
   828  00000E                     	ds	1
   829  00000F                     ??___xxtofl:
   830  00000F                     ___fladd@bexp:
   831                           	callstack 0
   832  00000F                     ctoa@c:
   833                           	callstack 0
   834  00000F                     ceilf@e:
   835                           	callstack 0
   836  00000F                     fputs@fp:
   837                           	callstack 0
   838                           
   839                           ; 2 bytes @ 0xE
   840  00000F                     	ds	1
   841  000010                     ??_ctoa:
   842  000010                     ___fladd@grs:
   843                           	callstack 0
   844  000010                     _atoi$1336:
   845                           	callstack 0
   846                           
   847                           ; 2 bytes @ 0xF
   848  000010                     	ds	1
   849  000011                     ___aodiv@counter:
   850                           	callstack 0
   851  000011                     ___aomod@counter:
   852                           	callstack 0
   853  000011                     ___fldiv@sign:
   854                           	callstack 0
   855  000011                     fputs@c:
   856                           	callstack 0
   857  000011                     ctoa@l:
   858                           	callstack 0
   859  000011                     ceilf@u:
   860                           	callstack 0
   861                           
   862                           ; 4 bytes @ 0x10
   863  000011                     	ds	1
   864  000012                     ___aodiv@sign:
   865                           	callstack 0
   866  000012                     ___aomod@sign:
   867                           	callstack 0
   868  000012                     ___fldiv@new_exp:
   869                           	callstack 0
   870  000012                     _atoi$1338:
   871                           	callstack 0
   872  000012                     fputs@i:
   873                           	callstack 0
   874                           
   875                           ; 2 bytes @ 0x11
   876  000012                     	ds	1
   877  000013                     ?_abs:
   878                           	callstack 0
   879  000013                     ___xxtofl@sign:
   880                           	callstack 0
   881  000013                     ctoa@w:
   882                           	callstack 0
   883  000013                     abs@a:
   884                           	callstack 0
   885  000013                     ___aodiv@quotient:
   886                           	callstack 0
   887                           
   888                           ; 8 bytes @ 0x12
   889  000013                     	ds	1
   890  000014                     ?_pad:
   891                           	callstack 0
   892  000014                     ___xxtofl@exp:
   893                           	callstack 0
   894  000014                     _atoi$1337:
   895                           	callstack 0
   896  000014                     pad@fp:
   897                           	callstack 0
   898  000014                     ___fldiv@grs:
   899                           	callstack 0
   900                           
   901                           ; 4 bytes @ 0x13
   902  000014                     	ds	1
   903  000015                     ??_abs:
   904  000015                     atoi@n:
   905                           	callstack 0
   906  000015                     ___xxtofl@arg:
   907                           	callstack 0
   908                           
   909                           ; 4 bytes @ 0x14
   910  000015                     	ds	1
   911  000016                     pad@buf:
   912                           	callstack 0
   913                           
   914                           ; 2 bytes @ 0x15
   915  000016                     	ds	2
   916  000018                     ___fldiv@bexp:
   917                           	callstack 0
   918  000018                     pad@p:
   919                           	callstack 0
   920                           
   921                           ; 2 bytes @ 0x17
   922  000018                     	ds	1
   923  000019                     ?___flmul:
   924                           	callstack 0
   925  000019                     ___fldiv@aexp:
   926                           	callstack 0
   927  000019                     ___flmul@b:
   928                           	callstack 0
   929                           
   930                           ; 4 bytes @ 0x18
   931  000019                     	ds	1
   932  00001A                     ??_pad:
   933  00001A                     ?_floorf:
   934                           	callstack 0
   935  00001A                     floorf@x:
   936                           	callstack 0
   937                           
   938                           ; 4 bytes @ 0x19
   939  00001A                     	ds	1
   940  00001B                     pad@i:
   941                           	callstack 0
   942                           
   943                           ; 2 bytes @ 0x1A
   944  00001B                     	ds	2
   945  00001D                     pad@w:
   946                           	callstack 0
   947  00001D                     ___flmul@a:
   948                           	callstack 0
   949                           
   950                           ; 4 bytes @ 0x1C
   951  00001D                     	ds	1
   952  00001E                     ??_floorf:
   953                           
   954                           ; 1 bytes @ 0x1D
   955  00001E                     	ds	1
   956  00001F                     ?_dtoa:
   957                           	callstack 0
   958  00001F                     dtoa@fp:
   959                           	callstack 0
   960                           
   961                           ; 2 bytes @ 0x1E
   962  00001F                     	ds	2
   963  000021                     ??___flmul:
   964  000021                     dtoa@d:
   965                           	callstack 0
   966                           
   967                           ; 8 bytes @ 0x20
   968  000021                     	ds	3
   969  000024                     floorf@m:
   970                           	callstack 0
   971                           
   972                           ; 4 bytes @ 0x23
   973  000024                     	ds	1
   974  000025                     ___flmul@sign:
   975                           	callstack 0
   976                           
   977                           ; 1 bytes @ 0x24
   978  000025                     	ds	1
   979  000026                     ___flmul@grs:
   980                           	callstack 0
   981                           
   982                           ; 4 bytes @ 0x25
   983  000026                     	ds	2
   984  000028                     floorf@e:
   985                           	callstack 0
   986                           
   987                           ; 2 bytes @ 0x27
   988  000028                     	ds	1
   989  000029                     ??_dtoa:
   990                           
   991                           ; 1 bytes @ 0x28
   992  000029                     	ds	1
   993  00002A                     ___flmul@aexp:
   994                           	callstack 0
   995  00002A                     floorf@u:
   996                           	callstack 0
   997                           
   998                           ; 4 bytes @ 0x29
   999  00002A                     	ds	1
  1000  00002B                     ___flmul@bexp:
  1001                           	callstack 0
  1002                           
  1003                           ; 1 bytes @ 0x2A
  1004  00002B                     	ds	1
  1005  00002C                     ___flmul@prod:
  1006                           	callstack 0
  1007                           
  1008                           ; 4 bytes @ 0x2B
  1009  00002C                     	ds	4
  1010  000030                     ___flmul@temp:
  1011                           	callstack 0
  1012                           
  1013                           ; 2 bytes @ 0x2F
  1014  000030                     	ds	1
  1015  000031                     _dtoa$1243:
  1016                           	callstack 0
  1017                           
  1018                           ; 2 bytes @ 0x30
  1019  000031                     	ds	1
  1020  000032                     ?___flsub:
  1021                           	callstack 0
  1022  000032                     ___flsub@b:
  1023                           	callstack 0
  1024                           
  1025                           ; 4 bytes @ 0x31
  1026  000032                     	ds	1
  1027  000033                     dtoa@p:
  1028                           	callstack 0
  1029                           
  1030                           ; 2 bytes @ 0x32
  1031  000033                     	ds	2
  1032  000035                     dtoa@w:
  1033                           	callstack 0
  1034                           
  1035                           ; 2 bytes @ 0x34
  1036  000035                     	ds	1
  1037  000036                     ___flsub@a:
  1038                           	callstack 0
  1039                           
  1040                           ; 4 bytes @ 0x35
  1041  000036                     	ds	1
  1042  000037                     dtoa@s:
  1043                           	callstack 0
  1044                           
  1045                           ; 2 bytes @ 0x36
  1046  000037                     	ds	2
  1047  000039                     dtoa@n:
  1048                           	callstack 0
  1049                           
  1050                           ; 8 bytes @ 0x38
  1051  000039                     	ds	1
  1052  00003A                     ___flge@ff1:
  1053                           	callstack 0
  1054                           
  1055                           ; 4 bytes @ 0x39
  1056  00003A                     	ds	4
  1057  00003E                     ___flge@ff2:
  1058                           	callstack 0
  1059                           
  1060                           ; 4 bytes @ 0x3D
  1061  00003E                     	ds	3
  1062  000041                     dtoa@i:
  1063                           	callstack 0
  1064                           
  1065                           ; 2 bytes @ 0x40
  1066  000041                     	ds	1
  1067  000042                     ??___flge:
  1068                           
  1069                           ; 1 bytes @ 0x41
  1070  000042                     	ds	4
  1071  000046                     ?_efgtoa:
  1072                           	callstack 0
  1073  000046                     efgtoa@fp:
  1074                           	callstack 0
  1075                           
  1076                           ; 2 bytes @ 0x45
  1077  000046                     	ds	2
  1078  000048                     efgtoa@f:
  1079                           	callstack 0
  1080                           
  1081                           ; 4 bytes @ 0x47
  1082  000048                     	ds	4
  1083  00004C                     efgtoa@c:
  1084                           	callstack 0
  1085                           
  1086                           ; 1 bytes @ 0x4B
  1087  00004C                     	ds	1
  1088  00004D                     ??_efgtoa:
  1089                           
  1090                           ; 1 bytes @ 0x4C
  1091  00004D                     	ds	5
  1092  000052                     ?_vfpfcnvrt:
  1093                           	callstack 0
  1094  000052                     vfpfcnvrt@fp:
  1095                           	callstack 0
  1096                           
  1097                           ; 2 bytes @ 0x51
  1098  000052                     	ds	2
  1099  000054                     vfpfcnvrt@fmt:
  1100                           	callstack 0
  1101                           
  1102                           ; 2 bytes @ 0x53
  1103  000054                     	ds	2
  1104  000056                     vfpfcnvrt@ap:
  1105                           	callstack 0
  1106                           
  1107                           ; 2 bytes @ 0x55
  1108  000056                     	ds	2
  1109  000058                     ??_vfpfcnvrt:
  1110                           
  1111                           ; 1 bytes @ 0x57
  1112  000058                     	ds	4
  1113  00005C                     vfprintf@cfmt:
  1114                           	callstack 0
  1115                           
  1116                           ; 2 bytes @ 0x5B
  1117  00005C                     	ds	2
  1118  00005E                     ??_SensorLM35:
  1119  00005E                     ??_Cronometro:
  1120                           
  1121                           ; 1 bytes @ 0x5D
  1122  00005E                     	ds	2
  1123  000060                     
  1124                           ; 1 bytes @ 0x5F
  1125 ;;
  1126 ;;Main: autosize = 0, tempsize = 0, incstack = 0, save=0
  1127 ;;
  1128 ;; *************** function _main *****************
  1129 ;; Defined at:
  1130 ;;		line 465 in file "SensorValoresExactos.c"
  1131 ;; Parameters:    Size  Location     Type
  1132 ;;		None
  1133 ;; Auto vars:     Size  Location     Type
  1134 ;;		None
  1135 ;; Return value:  Size  Location     Type
  1136 ;;                  1    wreg      void 
  1137 ;; Registers used:
  1138 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  1139 ;; Tracked objects:
  1140 ;;		On entry : 0/0
  1141 ;;		On exit  : 0/0
  1142 ;;		Unchanged: 0/0
  1143 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  1144 ;;      Params:         0       0       0       0       0       0       0       0       0
  1145 ;;      Locals:         0       0       0       0       0       0       0       0       0
  1146 ;;      Temps:          0       0       0       0       0       0       0       0       0
  1147 ;;      Totals:         0       0       0       0       0       0       0       0       0
  1148 ;;Total ram usage:        0 bytes
  1149 ;; Hardware stack levels required when called:   11
  1150 ;; This function calls:
  1151 ;;		_Alarma
  1152 ;;		_Alarma_LED
  1153 ;;		_Configuracion
  1154 ;;		_InicializaLCD
  1155 ;;		_LCD_COMANDOS
  1156 ;;		_SensorLM35
  1157 ;;		_Timer0Configuration
  1158 ;; This function is called by:
  1159 ;;		Startup code after reset
  1160 ;; This function uses a non-reentrant model
  1161 ;;
  1162                           
  1163                           	psect	text0
  1164  004A8C                     __ptext0:
  1165                           	callstack 0
  1166  004A8C                     _main:
  1167                           	callstack 20
  1168  004A8C                     
  1169                           ;SensorValoresExactos.c: 467:  Configuracion();
  1170  004A8C  EC95  F026         	call	_Configuracion	;wreg free
  1171                           
  1172                           ;SensorValoresExactos.c: 469:     Timer0Configuration();
  1173  004A90  ECCC  F026         	call	_Timer0Configuration	;wreg free
  1174  004A94                     
  1175                           ;SensorValoresExactos.c: 471:     InicializaLCD();
  1176  004A94  ECAF  F023         	call	_InicializaLCD	;wreg free
  1177  004A98                     
  1178                           ;SensorValoresExactos.c: 472:     LCD_COMANDOS(1);
  1179  004A98  0E01               	movlw	1
  1180  004A9A  ECD9  F026         	call	_LCD_COMANDOS
  1181  004A9E                     
  1182                           ;SensorValoresExactos.c: 473:     LCD_COMANDOS(12);
  1183  004A9E  0E0C               	movlw	12
  1184  004AA0  ECD9  F026         	call	_LCD_COMANDOS
  1185  004AA4                     
  1186                           ;SensorValoresExactos.c: 476:     horas = 12;
  1187  004AA4  0E00               	movlw	0
  1188  004AA6  0100               	movlb	0	; () banked
  1189  004AA8  6FF9               	movwf	(_horas+1)& (0+255),b
  1190  004AAA  0E0C               	movlw	12
  1191  004AAC  6FF8               	movwf	_horas& (0+255),b
  1192  004AAE                     
  1193                           ; BSR set to: 0
  1194                           ;SensorValoresExactos.c: 477:  minutos = 59;
  1195  004AAE  0E00               	movlw	0
  1196  004AB0  6FFB               	movwf	(_minutos+1)& (0+255),b
  1197  004AB2  0E3B               	movlw	59
  1198  004AB4  6FFA               	movwf	_minutos& (0+255),b
  1199  004AB6                     
  1200                           ; BSR set to: 0
  1201                           ;SensorValoresExactos.c: 478:  segundos = 50;
  1202  004AB6  0E00               	movlw	0
  1203  004AB8  6FF7               	movwf	(_segundos+1)& (0+255),b
  1204  004ABA  0E32               	movlw	50
  1205  004ABC  6FF6               	movwf	_segundos& (0+255),b
  1206  004ABE                     l5012:
  1207                           
  1208                           ;SensorValoresExactos.c: 481:  {;SensorValoresExactos.c: 482:         SensorLM35();
  1209  004ABE  EC8C  F017         	call	_SensorLM35	;wreg free
  1210  004AC2                     
  1211                           ;SensorValoresExactos.c: 487:         Alarma();
  1212  004AC2  EC4A  F016         	call	_Alarma	;wreg free
  1213  004AC6                     
  1214                           ;SensorValoresExactos.c: 489:         Alarma_LED();
  1215  004AC6  EC27  F01F         	call	_Alarma_LED	;wreg free
  1216  004ACA  EF5F  F025         	goto	l5012
  1217  004ACE  EF00  F000         	goto	start
  1218  004AD2                     __end_of_main:
  1219                           	callstack 0
  1220                           
  1221 ;; *************** function _Timer0Configuration *****************
  1222 ;; Defined at:
  1223 ;;		line 301 in file "SensorValoresExactos.c"
  1224 ;; Parameters:    Size  Location     Type
  1225 ;;		None
  1226 ;; Auto vars:     Size  Location     Type
  1227 ;;		None
  1228 ;; Return value:  Size  Location     Type
  1229 ;;                  1    wreg      void 
  1230 ;; Registers used:
  1231 ;;		wreg, status,2
  1232 ;; Tracked objects:
  1233 ;;		On entry : 0/0
  1234 ;;		On exit  : 0/0
  1235 ;;		Unchanged: 0/0
  1236 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  1237 ;;      Params:         0       0       0       0       0       0       0       0       0
  1238 ;;      Locals:         0       0       0       0       0       0       0       0       0
  1239 ;;      Temps:          0       0       0       0       0       0       0       0       0
  1240 ;;      Totals:         0       0       0       0       0       0       0       0       0
  1241 ;;Total ram usage:        0 bytes
  1242 ;; Hardware stack levels used:    1
  1243 ;; This function calls:
  1244 ;;		Nothing
  1245 ;; This function is called by:
  1246 ;;		_main
  1247 ;; This function uses a non-reentrant model
  1248 ;;
  1249                           
  1250                           	psect	text1
  1251  004D98                     __ptext1:
  1252                           	callstack 0
  1253  004D98                     _Timer0Configuration:
  1254                           	callstack 30
  1255  004D98                     
  1256                           ;SensorValoresExactos.c: 303:     T0CONbits.T08BIT = 1;
  1257  004D98  8CD5               	bsf	213,6,c	;volatile
  1258                           
  1259                           ;SensorValoresExactos.c: 304:     T0CONbits.T0CS = 1;
  1260  004D9A  8AD5               	bsf	213,5,c	;volatile
  1261                           
  1262                           ;SensorValoresExactos.c: 305:     T0CONbits.T0SE = 0;
  1263  004D9C  98D5               	bcf	213,4,c	;volatile
  1264                           
  1265                           ;SensorValoresExactos.c: 306:     T0CONbits.PSA = 1;
  1266  004D9E  86D5               	bsf	213,3,c	;volatile
  1267  004DA0                     
  1268                           ;SensorValoresExactos.c: 307:     T0CONbits.T0PS = 0b000;
  1269  004DA0  0EF8               	movlw	-8
  1270  004DA2  16D5               	andwf	213,f,c	;volatile
  1271  004DA4                     
  1272                           ;SensorValoresExactos.c: 309:     TMR0L = 0xFF;
  1273  004DA4  68D6               	setf	214,c	;volatile
  1274  004DA6                     
  1275                           ;SensorValoresExactos.c: 310:     T0CONbits.TMR0ON = 1;
  1276  004DA6  8ED5               	bsf	213,7,c	;volatile
  1277  004DA8                     
  1278                           ;SensorValoresExactos.c: 313:     INTCONbits.GIE = 1;
  1279  004DA8  8EF2               	bsf	242,7,c	;volatile
  1280  004DAA                     
  1281                           ;SensorValoresExactos.c: 314:     INTCONbits.PEIE = 1;
  1282  004DAA  8CF2               	bsf	242,6,c	;volatile
  1283  004DAC                     
  1284                           ;SensorValoresExactos.c: 315:     INTCONbits.TMR0IE = 1;
  1285  004DAC  8AF2               	bsf	242,5,c	;volatile
  1286  004DAE                     
  1287                           ;SensorValoresExactos.c: 316:     INTCONbits.TMR0IF =0;
  1288  004DAE  94F2               	bcf	242,2,c	;volatile
  1289  004DB0  0012               	return		;funcret
  1290  004DB2                     __end_of_Timer0Configuration:
  1291                           	callstack 0
  1292                           
  1293 ;; *************** function _SensorLM35 *****************
  1294 ;; Defined at:
  1295 ;;		line 270 in file "SensorValoresExactos.c"
  1296 ;; Parameters:    Size  Location     Type
  1297 ;;		None
  1298 ;; Auto vars:     Size  Location     Type
  1299 ;;		None
  1300 ;; Return value:  Size  Location     Type
  1301 ;;                  1    wreg      void 
  1302 ;; Registers used:
  1303 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  1304 ;; Tracked objects:
  1305 ;;		On entry : 0/0
  1306 ;;		On exit  : 0/0
  1307 ;;		Unchanged: 0/0
  1308 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  1309 ;;      Params:         0       0       0       0       0       0       0       0       0
  1310 ;;      Locals:         0       4       0       0       0       0       0       0       0
  1311 ;;      Temps:          2       0       0       0       0       0       0       0       0
  1312 ;;      Totals:         2       4       0       0       0       0       0       0       0
  1313 ;;Total ram usage:        6 bytes
  1314 ;; Hardware stack levels used:    1
  1315 ;; Hardware stack levels required when called:    8
  1316 ;; This function calls:
  1317 ;;		_Read_ADC
  1318 ;;		___awdiv
  1319 ;;		___flge
  1320 ;;		___flmul
  1321 ;;		___flsub
  1322 ;;		___fltol
  1323 ;;		___xxtofl
  1324 ;;		_ceilf
  1325 ;;		_floorf
  1326 ;;		_printf
  1327 ;;		_putcm
  1328 ;;		_sprintf
  1329 ;; This function is called by:
  1330 ;;		_main
  1331 ;; This function uses a non-reentrant model
  1332 ;;
  1333                           
  1334                           	psect	text2
  1335  002F18                     __ptext2:
  1336                           	callstack 0
  1337  002F18                     _SensorLM35:
  1338                           	callstack 22
  1339  002F18                     
  1340                           ;SensorValoresExactos.c: 274:     ADC = Read_ADC(0)/64;
  1341  002F18  0E00               	movlw	0
  1342  002F1A  EC2E  F024         	call	_Read_ADC
  1343  002F1E  C001  F006         	movff	?_Read_ADC,___awdiv@dividend
  1344  002F22  C002  F007         	movff	?_Read_ADC+1,___awdiv@dividend+1
  1345  002F26  0E00               	movlw	0
  1346  002F28  6E09               	movwf	(___awdiv@divisor+1)^0,c
  1347  002F2A  0E40               	movlw	64
  1348  002F2C  6E08               	movwf	___awdiv@divisor^0,c
  1349  002F2E  EC49  F022         	call	___awdiv	;wreg free
  1350  002F32  C006  F0FE         	movff	?___awdiv,_ADC
  1351  002F36  C007  F0FF         	movff	?___awdiv+1,_ADC+1
  1352  002F3A                     
  1353                           ;SensorValoresExactos.c: 275:     R_LM35 = 500.00001 / 1024;
  1354  002F3A  0E00               	movlw	0
  1355  002F3C  0101               	movlb	1	; () banked
  1356  002F3E  6F10               	movwf	_R_LM35& (0+255),b
  1357  002F40  0E00               	movlw	0
  1358  002F42  6F11               	movwf	(_R_LM35+1)& (0+255),b
  1359  002F44  0EFA               	movlw	250
  1360  002F46  6F12               	movwf	(_R_LM35+2)& (0+255),b
  1361  002F48  0E3E               	movlw	62
  1362  002F4A  6F13               	movwf	(_R_LM35+3)& (0+255),b
  1363  002F4C                     
  1364                           ; BSR set to: 1
  1365                           ;SensorValoresExactos.c: 279:     temperatura = ADC*R_LM35;
  1366  002F4C  C0FE  F00B         	movff	_ADC,___xxtofl@val
  1367  002F50  C0FF  F00C         	movff	_ADC+1,___xxtofl@val+1
  1368  002F54  0E00               	movlw	0
  1369  002F56  BE0C               	btfsc	(___xxtofl@val+1)^0,7,c
  1370  002F58  0EFF               	movlw	-1
  1371  002F5A  6E0D               	movwf	(___xxtofl@val+2)^0,c
  1372  002F5C  6E0E               	movwf	(___xxtofl@val+3)^0,c
  1373  002F5E  0E01               	movlw	1
  1374  002F60  ECAA  F01B         	call	___xxtofl
  1375  002F64  C00B  F019         	movff	?___xxtofl,___flmul@b
  1376  002F68  C00C  F01A         	movff	?___xxtofl+1,___flmul@b+1
  1377  002F6C  C00D  F01B         	movff	?___xxtofl+2,___flmul@b+2
  1378  002F70  C00E  F01C         	movff	?___xxtofl+3,___flmul@b+3
  1379  002F74  C110  F01D         	movff	_R_LM35,___flmul@a
  1380  002F78  C111  F01E         	movff	_R_LM35+1,___flmul@a+1
  1381  002F7C  C112  F01F         	movff	_R_LM35+2,___flmul@a+2
  1382  002F80  C113  F020         	movff	_R_LM35+3,___flmul@a+3
  1383  002F84  ECF6  F010         	call	___flmul	;wreg free
  1384  002F88  C019  F0CE         	movff	?___flmul,_temperatura
  1385  002F8C  C01A  F0CF         	movff	?___flmul+1,_temperatura+1
  1386  002F90  C01B  F0D0         	movff	?___flmul+2,_temperatura+2
  1387  002F94  C01C  F0D1         	movff	?___flmul+3,_temperatura+3
  1388  002F98                     
  1389                           ;SensorValoresExactos.c: 280:     putcm(0x80);
  1390  002F98  0E80               	movlw	128
  1391  002F9A  ECD1  F025         	call	_putcm
  1392  002F9E                     
  1393                           ;SensorValoresExactos.c: 281:     if(temperatura - (int)temperatura >= 0.5)
  1394  002F9E  C0CE  F001         	movff	_temperatura,___fltol@f1
  1395  002FA2  C0CF  F002         	movff	_temperatura+1,___fltol@f1+1
  1396  002FA6  C0D0  F003         	movff	_temperatura+2,___fltol@f1+2
  1397  002FAA  C0D1  F004         	movff	_temperatura+3,___fltol@f1+3
  1398  002FAE  ECA4  F01E         	call	___fltol	;wreg free
  1399  002FB2  C001  F00B         	movff	?___fltol,___xxtofl@val
  1400  002FB6  C002  F00C         	movff	?___fltol+1,___xxtofl@val+1
  1401  002FBA  0E00               	movlw	0
  1402  002FBC  BE0C               	btfsc	(___xxtofl@val+1)^0,7,c
  1403  002FBE  0EFF               	movlw	-1
  1404  002FC0  6E0D               	movwf	(___xxtofl@val+2)^0,c
  1405  002FC2  6E0E               	movwf	(___xxtofl@val+3)^0,c
  1406  002FC4  0E01               	movlw	1
  1407  002FC6  ECAA  F01B         	call	___xxtofl
  1408  002FCA  C00B  F036         	movff	?___xxtofl,___flsub@a
  1409  002FCE  C00C  F037         	movff	?___xxtofl+1,___flsub@a+1
  1410  002FD2  C00D  F038         	movff	?___xxtofl+2,___flsub@a+2
  1411  002FD6  C00E  F039         	movff	?___xxtofl+3,___flsub@a+3
  1412  002FDA  C0CE  F032         	movff	_temperatura,___flsub@b
  1413  002FDE  C0CF  F033         	movff	_temperatura+1,___flsub@b+1
  1414  002FE2  C0D0  F034         	movff	_temperatura+2,___flsub@b+2
  1415  002FE6  C0D1  F035         	movff	_temperatura+3,___flsub@b+3
  1416  002FEA  EC69  F025         	call	___flsub	;wreg free
  1417  002FEE  C032  F03A         	movff	?___flsub,___flge@ff1
  1418  002FF2  C033  F03B         	movff	?___flsub+1,___flge@ff1+1
  1419  002FF6  C034  F03C         	movff	?___flsub+2,___flge@ff1+2
  1420  002FFA  C035  F03D         	movff	?___flsub+3,___flge@ff1+3
  1421  002FFE  0E00               	movlw	0
  1422  003000  6E3E               	movwf	___flge@ff2^0,c
  1423  003002  0E00               	movlw	0
  1424  003004  6E3F               	movwf	(___flge@ff2+1)^0,c
  1425  003006  0E00               	movlw	0
  1426  003008  6E40               	movwf	(___flge@ff2+2)^0,c
  1427  00300A  0E3F               	movlw	63
  1428  00300C  6E41               	movwf	(___flge@ff2+3)^0,c
  1429  00300E  ECA9  F01F         	call	___flge	;wreg free
  1430  003012  A0D8               	btfss	status,0,c
  1431  003014  EF0E  F018         	goto	u6581
  1432  003018  EF10  F018         	goto	u6580
  1433  00301C                     u6581:
  1434  00301C  EF53  F018         	goto	l4882
  1435  003020                     u6580:
  1436  003020                     
  1437                           ;SensorValoresExactos.c: 282:     {;SensorValoresExactos.c: 283:         sprintf(Valores
      +                          , "Temp. = %3.2f %cC",ceilf(temperatura), 0xDF);
  1438  003020  0E66               	movlw	low _Valores
  1439  003022  0100               	movlb	0	; () banked
  1440  003024  6FB6               	movwf	sprintf@s& (0+255),b
  1441  003026  0E01               	movlw	high _Valores
  1442  003028  6FB7               	movwf	(sprintf@s+1)& (0+255),b
  1443  00302A  0E27               	movlw	low STR_1
  1444  00302C  6FB8               	movwf	sprintf@fmt& (0+255),b
  1445  00302E  0E08               	movlw	high STR_1
  1446  003030  6FB9               	movwf	(sprintf@fmt+1)& (0+255),b
  1447  003032  C0CE  F001         	movff	_temperatura,ceilf@x
  1448  003036  C0CF  F002         	movff	_temperatura+1,ceilf@x+1
  1449  00303A  C0D0  F003         	movff	_temperatura+2,ceilf@x+2
  1450  00303E  C0D1  F004         	movff	_temperatura+3,ceilf@x+3
  1451  003042  EC9C  F018         	call	_ceilf	;wreg free
  1452  003046  C001  F0BA         	movff	?_ceilf,?_sprintf+4
  1453  00304A  C002  F0BB         	movff	?_ceilf+1,?_sprintf+5
  1454  00304E  C003  F0BC         	movff	?_ceilf+2,?_sprintf+6
  1455  003052  C004  F0BD         	movff	?_ceilf+3,?_sprintf+7
  1456  003056  0E00               	movlw	0
  1457  003058  0100               	movlb	0	; () banked
  1458  00305A  6FBF               	movwf	(?_sprintf+9)& (0+255),b
  1459  00305C  0EDF               	movlw	223
  1460  00305E  6FBE               	movwf	(?_sprintf+8)& (0+255),b
  1461  003060  ECF4  F024         	call	_sprintf	;wreg free
  1462  003064                     
  1463                           ;SensorValoresExactos.c: 284:         _delay((unsigned long)((100)*(8000000/4000.0)));
  1464  003064  0E02               	movlw	2
  1465  003066  6E5F               	movwf	(??_SensorLM35+1)^0,c
  1466  003068  0E04               	movlw	4
  1467  00306A  6E5E               	movwf	??_SensorLM35^0,c
  1468  00306C  0EBA               	movlw	186
  1469  00306E                     u6737:
  1470  00306E  2EE8               	decfsz	wreg,f,c
  1471  003070  D7FE               	bra	u6737
  1472  003072  2E5E               	decfsz	??_SensorLM35^0,f,c
  1473  003074  D7FC               	bra	u6737
  1474  003076  2E5F               	decfsz	(??_SensorLM35+1)^0,f,c
  1475  003078  D7FA               	bra	u6737
  1476  00307A  D000               	nop2	
  1477  00307C                     
  1478                           ;SensorValoresExactos.c: 285:         printf(Valores);
  1479  00307C  0E66               	movlw	low _Valores
  1480  00307E  0100               	movlb	0	; () banked
  1481  003080  6FB6               	movwf	printf@fmt& (0+255),b
  1482  003082  0E01               	movlw	high _Valores
  1483  003084  6FB7               	movwf	(printf@fmt+1)& (0+255),b
  1484  003086  EC81  F026         	call	_printf	;wreg free
  1485                           
  1486                           ;SensorValoresExactos.c: 286:         _delay((unsigned long)((100)*(8000000/4000.0)));
  1487  00308A  0E02               	movlw	2
  1488  00308C  6E5F               	movwf	(??_SensorLM35+1)^0,c
  1489  00308E  0E04               	movlw	4
  1490  003090  6E5E               	movwf	??_SensorLM35^0,c
  1491  003092  0EBA               	movlw	186
  1492  003094                     u6747:
  1493  003094  2EE8               	decfsz	wreg,f,c
  1494  003096  D7FE               	bra	u6747
  1495  003098  2E5E               	decfsz	??_SensorLM35^0,f,c
  1496  00309A  D7FC               	bra	u6747
  1497  00309C  2E5F               	decfsz	(??_SensorLM35+1)^0,f,c
  1498  00309E  D7FA               	bra	u6747
  1499  0030A0  D000               	nop2	
  1500                           
  1501                           ;SensorValoresExactos.c: 287:     }
  1502  0030A2  EF9B  F018         	goto	l141
  1503  0030A6                     l4882:
  1504                           
  1505                           ;SensorValoresExactos.c: 289:     {;SensorValoresExactos.c: 290:         sprintf(Valores
      +                          , "Temp. = %3.2f %cC",floorf(temperatura), 0xDF);
  1506  0030A6  C0CE  F01A         	movff	_temperatura,floorf@x
  1507  0030AA  C0CF  F01B         	movff	_temperatura+1,floorf@x+1
  1508  0030AE  C0D0  F01C         	movff	_temperatura+2,floorf@x+2
  1509  0030B2  C0D1  F01D         	movff	_temperatura+3,floorf@x+3
  1510  0030B6  ECA5  F019         	call	_floorf	;wreg free
  1511  0030BA  C01A  F0CA         	movff	?_floorf,_SensorLM35$1646
  1512  0030BE  C01B  F0CB         	movff	?_floorf+1,_SensorLM35$1646+1
  1513  0030C2  C01C  F0CC         	movff	?_floorf+2,_SensorLM35$1646+2
  1514  0030C6  C01D  F0CD         	movff	?_floorf+3,_SensorLM35$1646+3
  1515  0030CA                     
  1516                           ;SensorValoresExactos.c: 289:     {;SensorValoresExactos.c: 290:         sprintf(Valores
      +                          , "Temp. = %3.2f %cC",floorf(temperatura), 0xDF);
  1517  0030CA  0E66               	movlw	low _Valores
  1518  0030CC  0100               	movlb	0	; () banked
  1519  0030CE  6FB6               	movwf	sprintf@s& (0+255),b
  1520  0030D0  0E01               	movlw	high _Valores
  1521  0030D2  6FB7               	movwf	(sprintf@s+1)& (0+255),b
  1522  0030D4  0E27               	movlw	low STR_1
  1523  0030D6  6FB8               	movwf	sprintf@fmt& (0+255),b
  1524  0030D8  0E08               	movlw	high STR_1
  1525  0030DA  6FB9               	movwf	(sprintf@fmt+1)& (0+255),b
  1526  0030DC  C0CA  F0BA         	movff	_SensorLM35$1646,?_sprintf+4
  1527  0030E0  C0CB  F0BB         	movff	_SensorLM35$1646+1,?_sprintf+5
  1528  0030E4  C0CC  F0BC         	movff	_SensorLM35$1646+2,?_sprintf+6
  1529  0030E8  C0CD  F0BD         	movff	_SensorLM35$1646+3,?_sprintf+7
  1530  0030EC  0E00               	movlw	0
  1531  0030EE  6FBF               	movwf	(?_sprintf+9)& (0+255),b
  1532  0030F0  0EDF               	movlw	223
  1533  0030F2  6FBE               	movwf	(?_sprintf+8)& (0+255),b
  1534  0030F4  ECF4  F024         	call	_sprintf	;wreg free
  1535  0030F8                     
  1536                           ;SensorValoresExactos.c: 291:         _delay((unsigned long)((100)*(8000000/4000.0)));
  1537  0030F8  0E02               	movlw	2
  1538  0030FA  6E5F               	movwf	(??_SensorLM35+1)^0,c
  1539  0030FC  0E04               	movlw	4
  1540  0030FE  6E5E               	movwf	??_SensorLM35^0,c
  1541  003100  0EBA               	movlw	186
  1542  003102                     u6757:
  1543  003102  2EE8               	decfsz	wreg,f,c
  1544  003104  D7FE               	bra	u6757
  1545  003106  2E5E               	decfsz	??_SensorLM35^0,f,c
  1546  003108  D7FC               	bra	u6757
  1547  00310A  2E5F               	decfsz	(??_SensorLM35+1)^0,f,c
  1548  00310C  D7FA               	bra	u6757
  1549  00310E  D000               	nop2	
  1550  003110                     
  1551                           ;SensorValoresExactos.c: 292:         printf(Valores);
  1552  003110  0E66               	movlw	low _Valores
  1553  003112  0100               	movlb	0	; () banked
  1554  003114  6FB6               	movwf	printf@fmt& (0+255),b
  1555  003116  0E01               	movlw	high _Valores
  1556  003118  6FB7               	movwf	(printf@fmt+1)& (0+255),b
  1557  00311A  EC81  F026         	call	_printf	;wreg free
  1558  00311E                     
  1559                           ;SensorValoresExactos.c: 293:         _delay((unsigned long)((100)*(8000000/4000.0)));
  1560  00311E  0E02               	movlw	2
  1561  003120  6E5F               	movwf	(??_SensorLM35+1)^0,c
  1562  003122  0E04               	movlw	4
  1563  003124  6E5E               	movwf	??_SensorLM35^0,c
  1564  003126  0EBA               	movlw	186
  1565  003128                     u6767:
  1566  003128  2EE8               	decfsz	wreg,f,c
  1567  00312A  D7FE               	bra	u6767
  1568  00312C  2E5E               	decfsz	??_SensorLM35^0,f,c
  1569  00312E  D7FC               	bra	u6767
  1570  003130  2E5F               	decfsz	(??_SensorLM35+1)^0,f,c
  1571  003132  D7FA               	bra	u6767
  1572  003134  D000               	nop2	
  1573  003136                     l141:
  1574  003136  0012               	return		;funcret
  1575  003138                     __end_of_SensorLM35:
  1576                           	callstack 0
  1577                           
  1578 ;; *************** function _sprintf *****************
  1579 ;; Defined at:
  1580 ;;		line 9 in file "/Applications/microchip/xc8/v2.31/pic/sources/c99/common/nf_sprintf.c"
  1581 ;; Parameters:    Size  Location     Type
  1582 ;;  s               2   86[BANK0 ] PTR unsigned char 
  1583 ;;		 -> Valores(16), 
  1584 ;;  fmt             2   88[BANK0 ] PTR const unsigned char 
  1585 ;;		 -> STR_2(18), STR_1(18), 
  1586 ;; Auto vars:     Size  Location     Type
  1587 ;;  f               6  100[BANK0 ] struct _IO_FILE
  1588 ;;  ap              2   98[BANK0 ] PTR void [1]
  1589 ;;		 -> ?_printf(2), ?_sprintf(2), 
  1590 ;;  ret             2    0        int 
  1591 ;; Return value:  Size  Location     Type
  1592 ;;                  2   86[BANK0 ] int 
  1593 ;; Registers used:
  1594 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  1595 ;; Tracked objects:
  1596 ;;		On entry : 0/0
  1597 ;;		On exit  : 0/0
  1598 ;;		Unchanged: 0/0
  1599 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  1600 ;;      Params:         0      10       0       0       0       0       0       0       0
  1601 ;;      Locals:         0      10       0       0       0       0       0       0       0
  1602 ;;      Temps:          0       0       0       0       0       0       0       0       0
  1603 ;;      Totals:         0      20       0       0       0       0       0       0       0
  1604 ;;Total ram usage:       20 bytes
  1605 ;; Hardware stack levels used:    1
  1606 ;; Hardware stack levels required when called:    7
  1607 ;; This function calls:
  1608 ;;		_vfprintf
  1609 ;; This function is called by:
  1610 ;;		_SensorLM35
  1611 ;; This function uses a non-reentrant model
  1612 ;;
  1613                           
  1614                           	psect	text3
  1615  0049E8                     __ptext3:
  1616                           	callstack 0
  1617  0049E8                     _sprintf:
  1618                           	callstack 22
  1619  0049E8  0EBA               	movlw	low (?_sprintf+4)
  1620  0049EA  0100               	movlb	0	; () banked
  1621  0049EC  6FC2               	movwf	sprintf@ap& (0+255),b
  1622  0049EE  0E00               	movlw	high (?_sprintf+4)
  1623  0049F0  6FC3               	movwf	(sprintf@ap+1)& (0+255),b
  1624  0049F2  C0B6  F0C4         	movff	sprintf@s,sprintf@f
  1625  0049F6  C0B7  F0C5         	movff	sprintf@s+1,sprintf@f+1
  1626  0049FA                     
  1627                           ; BSR set to: 0
  1628  0049FA  0E00               	movlw	0
  1629  0049FC  6FC7               	movwf	(sprintf@f+3)& (0+255),b
  1630  0049FE  0E00               	movlw	0
  1631  004A00  6FC6               	movwf	(sprintf@f+2)& (0+255),b
  1632  004A02                     
  1633                           ; BSR set to: 0
  1634  004A02  0E00               	movlw	0
  1635  004A04  6FC9               	movwf	(sprintf@f+5)& (0+255),b
  1636  004A06  0E00               	movlw	0
  1637  004A08  6FC8               	movwf	(sprintf@f+4)& (0+255),b
  1638  004A0A                     
  1639                           ; BSR set to: 0
  1640  004A0A  0EC4               	movlw	low sprintf@f
  1641  004A0C  6FB0               	movwf	vfprintf@fp& (0+255),b
  1642  004A0E  0E00               	movlw	high sprintf@f
  1643  004A10  6FB1               	movwf	(vfprintf@fp+1)& (0+255),b
  1644  004A12  C0B8  F0B2         	movff	sprintf@fmt,vfprintf@fmt
  1645  004A16  C0B9  F0B3         	movff	sprintf@fmt+1,vfprintf@fmt+1
  1646  004A1A  0EC2               	movlw	low sprintf@ap
  1647  004A1C  6FB4               	movwf	vfprintf@ap& (0+255),b
  1648  004A1E  0E00               	movlw	high sprintf@ap
  1649  004A20  6FB5               	movwf	(vfprintf@ap+1)& (0+255),b
  1650  004A22  ECF3  F023         	call	_vfprintf	;wreg free
  1651  004A26  0100               	movlb	0	; () banked
  1652  004A28  51C6               	movf	(sprintf@f+2)& (0+255),w,b
  1653  004A2A  25B6               	addwf	sprintf@s& (0+255),w,b
  1654  004A2C  6ED9               	movwf	fsr2l,c
  1655  004A2E  51C7               	movf	(sprintf@f+3)& (0+255),w,b
  1656  004A30  21B7               	addwfc	(sprintf@s+1)& (0+255),w,b
  1657  004A32  6EDA               	movwf	fsr2h,c
  1658  004A34  0E00               	movlw	0
  1659  004A36  6EDF               	movwf	indf2,c
  1660  004A38                     
  1661                           ; BSR set to: 0
  1662  004A38  0012               	return		;funcret
  1663  004A3A                     __end_of_sprintf:
  1664                           	callstack 0
  1665                           
  1666 ;; *************** function _ceilf *****************
  1667 ;; Defined at:
  1668 ;;		line 3 in file "/Applications/microchip/xc8/v2.31/pic/sources/c99/common/ceilf.c"
  1669 ;; Parameters:    Size  Location     Type
  1670 ;;  x               4    0[COMRAM] float 
  1671 ;; Auto vars:     Size  Location     Type
  1672 ;;  u               4   16[COMRAM] struct .
  1673 ;;  m               4   10[COMRAM] unsigned long 
  1674 ;;  e               2   14[COMRAM] int 
  1675 ;; Return value:  Size  Location     Type
  1676 ;;                  4    0[COMRAM] float 
  1677 ;; Registers used:
  1678 ;;		wreg, status,2, status,0
  1679 ;; Tracked objects:
  1680 ;;		On entry : 0/0
  1681 ;;		On exit  : 0/0
  1682 ;;		Unchanged: 0/0
  1683 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  1684 ;;      Params:         4       0       0       0       0       0       0       0       0
  1685 ;;      Locals:        10       0       0       0       0       0       0       0       0
  1686 ;;      Temps:          6       0       0       0       0       0       0       0       0
  1687 ;;      Totals:        20       0       0       0       0       0       0       0       0
  1688 ;;Total ram usage:       20 bytes
  1689 ;; Hardware stack levels used:    1
  1690 ;; This function calls:
  1691 ;;		Nothing
  1692 ;; This function is called by:
  1693 ;;		_SensorLM35
  1694 ;; This function uses a non-reentrant model
  1695 ;;
  1696                           
  1697                           	psect	text4
  1698  003138                     __ptext4:
  1699                           	callstack 0
  1700  003138                     _ceilf:
  1701                           	callstack 29
  1702  003138  C108  F011         	movff	ceilf@F527,ceilf@u
  1703  00313C  C109  F012         	movff	ceilf@F527+1,ceilf@u+1
  1704  003140  C10A  F013         	movff	ceilf@F527+2,ceilf@u+2
  1705  003144  C10B  F014         	movff	ceilf@F527+3,ceilf@u+3
  1706  003148  C001  F011         	movff	ceilf@x,ceilf@u
  1707  00314C  C002  F012         	movff	ceilf@x+1,ceilf@u+1
  1708  003150  C003  F013         	movff	ceilf@x+2,ceilf@u+2
  1709  003154  C004  F014         	movff	ceilf@x+3,ceilf@u+3
  1710  003158  0E81               	movlw	129
  1711  00315A  6E05               	movwf	??_ceilf^0,c
  1712  00315C  0EFF               	movlw	255
  1713  00315E  6E06               	movwf	(??_ceilf+1)^0,c
  1714  003160  C011  F007         	movff	ceilf@u,??_ceilf+2
  1715  003164  C012  F008         	movff	ceilf@u+1,??_ceilf+3
  1716  003168  C013  F009         	movff	ceilf@u+2,??_ceilf+4
  1717  00316C  C014  F00A         	movff	ceilf@u+3,??_ceilf+5
  1718  003170  0E18               	movlw	24
  1719  003172  EFC0  F018         	goto	u6350
  1720  003176                     u6355:
  1721  003176  90D8               	bcf	status,0,c
  1722  003178  320A               	rrcf	(??_ceilf+5)^0,f,c
  1723  00317A  3209               	rrcf	(??_ceilf+4)^0,f,c
  1724  00317C  3208               	rrcf	(??_ceilf+3)^0,f,c
  1725  00317E  3207               	rrcf	(??_ceilf+2)^0,f,c
  1726  003180                     u6350:
  1727  003180  2EE8               	decfsz	wreg,f,c
  1728  003182  EFBB  F018         	goto	u6355
  1729  003186  5007               	movf	(??_ceilf+2)^0,w,c
  1730  003188  2405               	addwf	??_ceilf^0,w,c
  1731  00318A  6E0F               	movwf	ceilf@e^0,c
  1732  00318C  0E00               	movlw	0
  1733  00318E  2006               	addwfc	(??_ceilf+1)^0,w,c
  1734  003190  6E10               	movwf	(ceilf@e+1)^0,c
  1735  003192  BE10               	btfsc	(ceilf@e+1)^0,7,c
  1736  003194  EFD5  F018         	goto	u6361
  1737  003198  5010               	movf	(ceilf@e+1)^0,w,c
  1738  00319A  E109               	bnz	u6360
  1739  00319C  0E17               	movlw	23
  1740  00319E  5C0F               	subwf	ceilf@e^0,w,c
  1741  0031A0  A0D8               	btfss	status,0,c
  1742  0031A2  EFD5  F018         	goto	u6361
  1743  0031A6  EFD7  F018         	goto	u6360
  1744  0031AA                     u6361:
  1745  0031AA  EFE1  F018         	goto	l4724
  1746  0031AE                     u6360:
  1747  0031AE                     l4722:
  1748  0031AE  C001  F001         	movff	ceilf@x,?_ceilf
  1749  0031B2  C002  F002         	movff	ceilf@x+1,?_ceilf+1
  1750  0031B6  C003  F003         	movff	ceilf@x+2,?_ceilf+2
  1751  0031BA  C004  F004         	movff	ceilf@x+3,?_ceilf+3
  1752  0031BE  EFA4  F019         	goto	l866
  1753  0031C2                     l4724:
  1754  0031C2  BE10               	btfsc	(ceilf@e+1)^0,7,c
  1755  0031C4  EFE6  F018         	goto	u6371
  1756  0031C8  EFE8  F018         	goto	u6370
  1757  0031CC                     u6371:
  1758  0031CC  EF58  F019         	goto	l4734
  1759  0031D0                     u6370:
  1760  0031D0  C00F  F005         	movff	ceilf@e,??_ceilf
  1761  0031D4  0EFF               	movlw	255
  1762  0031D6  6E06               	movwf	(??_ceilf+1)^0,c
  1763  0031D8  0EFF               	movlw	255
  1764  0031DA  6E07               	movwf	(??_ceilf+2)^0,c
  1765  0031DC  0E7F               	movlw	127
  1766  0031DE  6E08               	movwf	(??_ceilf+3)^0,c
  1767  0031E0  0E00               	movlw	0
  1768  0031E2  6E09               	movwf	(??_ceilf+4)^0,c
  1769  0031E4                     u6385:
  1770  0031E4  6605               	tstfsz	??_ceilf^0,c
  1771  0031E6  EFF7  F018         	goto	u6386
  1772  0031EA  EFFF  F018         	goto	u6387
  1773  0031EE                     u6386:
  1774  0031EE  3409               	rlcf	(??_ceilf+4)^0,w,c
  1775  0031F0  3209               	rrcf	(??_ceilf+4)^0,f,c
  1776  0031F2  3208               	rrcf	(??_ceilf+3)^0,f,c
  1777  0031F4  3207               	rrcf	(??_ceilf+2)^0,f,c
  1778  0031F6  3206               	rrcf	(??_ceilf+1)^0,f,c
  1779  0031F8  2E05               	decfsz	??_ceilf^0,f,c
  1780  0031FA  EFF2  F018         	goto	u6385
  1781  0031FE                     u6387:
  1782  0031FE  C006  F00B         	movff	??_ceilf+1,ceilf@m
  1783  003202  C007  F00C         	movff	??_ceilf+2,ceilf@m+1
  1784  003206  C008  F00D         	movff	??_ceilf+3,ceilf@m+2
  1785  00320A  C009  F00E         	movff	??_ceilf+4,ceilf@m+3
  1786  00320E  500B               	movf	ceilf@m^0,w,c
  1787  003210  1411               	andwf	ceilf@u^0,w,c
  1788  003212  6E05               	movwf	??_ceilf^0,c
  1789  003214  500C               	movf	(ceilf@m+1)^0,w,c
  1790  003216  1412               	andwf	(ceilf@u+1)^0,w,c
  1791  003218  6E06               	movwf	(??_ceilf+1)^0,c
  1792  00321A  500D               	movf	(ceilf@m+2)^0,w,c
  1793  00321C  1413               	andwf	(ceilf@u+2)^0,w,c
  1794  00321E  6E07               	movwf	(??_ceilf+2)^0,c
  1795  003220  500E               	movf	(ceilf@m+3)^0,w,c
  1796  003222  1414               	andwf	(ceilf@u+3)^0,w,c
  1797  003224  6E08               	movwf	(??_ceilf+3)^0,c
  1798  003226  5005               	movf	??_ceilf^0,w,c
  1799  003228  1006               	iorwf	(??_ceilf+1)^0,w,c
  1800  00322A  1007               	iorwf	(??_ceilf+2)^0,w,c
  1801  00322C  1008               	iorwf	(??_ceilf+3)^0,w,c
  1802  00322E  A4D8               	btfss	status,2,c
  1803  003230  EF1C  F019         	goto	u6391
  1804  003234  EF1E  F019         	goto	u6390
  1805  003238                     u6391:
  1806  003238  EF20  F019         	goto	l4730
  1807  00323C                     u6390:
  1808  00323C  EFD7  F018         	goto	l4722
  1809  003240                     l4730:
  1810  003240  C011  F005         	movff	ceilf@u,??_ceilf
  1811  003244  C012  F006         	movff	ceilf@u+1,??_ceilf+1
  1812  003248  C013  F007         	movff	ceilf@u+2,??_ceilf+2
  1813  00324C  C014  F008         	movff	ceilf@u+3,??_ceilf+3
  1814  003250  0E20               	movlw	32
  1815  003252  EF30  F019         	goto	u6400
  1816  003256                     u6405:
  1817  003256  90D8               	bcf	status,0,c
  1818  003258  3208               	rrcf	(??_ceilf+3)^0,f,c
  1819  00325A  3207               	rrcf	(??_ceilf+2)^0,f,c
  1820  00325C  3206               	rrcf	(??_ceilf+1)^0,f,c
  1821  00325E  3205               	rrcf	??_ceilf^0,f,c
  1822  003260                     u6400:
  1823  003260  2EE8               	decfsz	wreg,f,c
  1824  003262  EF2B  F019         	goto	u6405
  1825  003266  5005               	movf	??_ceilf^0,w,c
  1826  003268  1006               	iorwf	(??_ceilf+1)^0,w,c
  1827  00326A  1007               	iorwf	(??_ceilf+2)^0,w,c
  1828  00326C  1008               	iorwf	(??_ceilf+3)^0,w,c
  1829  00326E  A4D8               	btfss	status,2,c
  1830  003270  EF3C  F019         	goto	u6411
  1831  003274  EF3E  F019         	goto	u6410
  1832  003278                     u6411:
  1833  003278  EF46  F019         	goto	l869
  1834  00327C                     u6410:
  1835  00327C  500B               	movf	ceilf@m^0,w,c
  1836  00327E  2611               	addwf	ceilf@u^0,f,c
  1837  003280  500C               	movf	(ceilf@m+1)^0,w,c
  1838  003282  2212               	addwfc	(ceilf@u+1)^0,f,c
  1839  003284  500D               	movf	(ceilf@m+2)^0,w,c
  1840  003286  2213               	addwfc	(ceilf@u+2)^0,f,c
  1841  003288  500E               	movf	(ceilf@m+3)^0,w,c
  1842  00328A  2214               	addwfc	(ceilf@u+3)^0,f,c
  1843  00328C                     l869:
  1844  00328C  1C0B               	comf	ceilf@m^0,w,c
  1845  00328E  6E05               	movwf	??_ceilf^0,c
  1846  003290  1C0C               	comf	(ceilf@m+1)^0,w,c
  1847  003292  6E06               	movwf	(??_ceilf+1)^0,c
  1848  003294  1C0D               	comf	(ceilf@m+2)^0,w,c
  1849  003296  6E07               	movwf	(??_ceilf+2)^0,c
  1850  003298  1C0E               	comf	(ceilf@m+3)^0,w,c
  1851  00329A  6E08               	movwf	(??_ceilf+3)^0,c
  1852  00329C  5005               	movf	??_ceilf^0,w,c
  1853  00329E  1611               	andwf	ceilf@u^0,f,c
  1854  0032A0  5006               	movf	(??_ceilf+1)^0,w,c
  1855  0032A2  1612               	andwf	(ceilf@u+1)^0,f,c
  1856  0032A4  5007               	movf	(??_ceilf+2)^0,w,c
  1857  0032A6  1613               	andwf	(ceilf@u+2)^0,f,c
  1858  0032A8  5008               	movf	(??_ceilf+3)^0,w,c
  1859  0032AA  1614               	andwf	(ceilf@u+3)^0,f,c
  1860  0032AC  EF9C  F019         	goto	l4742
  1861  0032B0                     l4734:
  1862  0032B0  C011  F005         	movff	ceilf@u,??_ceilf
  1863  0032B4  C012  F006         	movff	ceilf@u+1,??_ceilf+1
  1864  0032B8  C013  F007         	movff	ceilf@u+2,??_ceilf+2
  1865  0032BC  C014  F008         	movff	ceilf@u+3,??_ceilf+3
  1866  0032C0  0E20               	movlw	32
  1867  0032C2  EF68  F019         	goto	u6420
  1868  0032C6                     u6425:
  1869  0032C6  90D8               	bcf	status,0,c
  1870  0032C8  3208               	rrcf	(??_ceilf+3)^0,f,c
  1871  0032CA  3207               	rrcf	(??_ceilf+2)^0,f,c
  1872  0032CC  3206               	rrcf	(??_ceilf+1)^0,f,c
  1873  0032CE  3205               	rrcf	??_ceilf^0,f,c
  1874  0032D0                     u6420:
  1875  0032D0  2EE8               	decfsz	wreg,f,c
  1876  0032D2  EF63  F019         	goto	u6425
  1877  0032D6  5005               	movf	??_ceilf^0,w,c
  1878  0032D8  1006               	iorwf	(??_ceilf+1)^0,w,c
  1879  0032DA  1007               	iorwf	(??_ceilf+2)^0,w,c
  1880  0032DC  1008               	iorwf	(??_ceilf+3)^0,w,c
  1881  0032DE  B4D8               	btfsc	status,2,c
  1882  0032E0  EF74  F019         	goto	u6431
  1883  0032E4  EF76  F019         	goto	u6430
  1884  0032E8                     u6431:
  1885  0032E8  EF80  F019         	goto	l4738
  1886  0032EC                     u6430:
  1887  0032EC  0E00               	movlw	0
  1888  0032EE  6E11               	movwf	ceilf@u^0,c
  1889  0032F0  0E00               	movlw	0
  1890  0032F2  6E12               	movwf	(ceilf@u+1)^0,c
  1891  0032F4  0E00               	movlw	0
  1892  0032F6  6E13               	movwf	(ceilf@u+2)^0,c
  1893  0032F8  0E80               	movlw	128
  1894  0032FA  6E14               	movwf	(ceilf@u+3)^0,c
  1895  0032FC  EF9C  F019         	goto	l4742
  1896  003300                     l4738:
  1897  003300  90D8               	bcf	status,0,c
  1898  003302  3411               	rlcf	ceilf@u^0,w,c
  1899  003304  6E05               	movwf	??_ceilf^0,c
  1900  003306  3412               	rlcf	(ceilf@u+1)^0,w,c
  1901  003308  6E06               	movwf	(??_ceilf+1)^0,c
  1902  00330A  3413               	rlcf	(ceilf@u+2)^0,w,c
  1903  00330C  6E07               	movwf	(??_ceilf+2)^0,c
  1904  00330E  3414               	rlcf	(ceilf@u+3)^0,w,c
  1905  003310  6E08               	movwf	(??_ceilf+3)^0,c
  1906  003312  5005               	movf	??_ceilf^0,w,c
  1907  003314  1006               	iorwf	(??_ceilf+1)^0,w,c
  1908  003316  1007               	iorwf	(??_ceilf+2)^0,w,c
  1909  003318  1008               	iorwf	(??_ceilf+3)^0,w,c
  1910  00331A  B4D8               	btfsc	status,2,c
  1911  00331C  EF92  F019         	goto	u6441
  1912  003320  EF94  F019         	goto	u6440
  1913  003324                     u6441:
  1914  003324  EF9C  F019         	goto	l4742
  1915  003328                     u6440:
  1916  003328  0E00               	movlw	0
  1917  00332A  6E11               	movwf	ceilf@u^0,c
  1918  00332C  0E00               	movlw	0
  1919  00332E  6E12               	movwf	(ceilf@u+1)^0,c
  1920  003330  0E80               	movlw	128
  1921  003332  6E13               	movwf	(ceilf@u+2)^0,c
  1922  003334  0E3F               	movlw	63
  1923  003336  6E14               	movwf	(ceilf@u+3)^0,c
  1924  003338                     l4742:
  1925  003338  C011  F001         	movff	ceilf@u,?_ceilf
  1926  00333C  C012  F002         	movff	ceilf@u+1,?_ceilf+1
  1927  003340  C013  F003         	movff	ceilf@u+2,?_ceilf+2
  1928  003344  C014  F004         	movff	ceilf@u+3,?_ceilf+3
  1929  003348                     l866:
  1930  003348  0012               	return		;funcret
  1931  00334A                     __end_of_ceilf:
  1932                           	callstack 0
  1933                           
  1934 ;; *************** function ___xxtofl *****************
  1935 ;; Defined at:
  1936 ;;		line 10 in file "/Applications/microchip/xc8/v2.31/pic/sources/c99/common/xxtofl.c"
  1937 ;; Parameters:    Size  Location     Type
  1938 ;;  sign            1    wreg     unsigned char 
  1939 ;;  val             4   10[COMRAM] long 
  1940 ;; Auto vars:     Size  Location     Type
  1941 ;;  sign            1   18[COMRAM] unsigned char 
  1942 ;;  arg             4   20[COMRAM] unsigned long 
  1943 ;;  exp             1   19[COMRAM] unsigned char 
  1944 ;; Return value:  Size  Location     Type
  1945 ;;                  4   10[COMRAM] unsigned char 
  1946 ;; Registers used:
  1947 ;;		wreg, status,2, status,0
  1948 ;; Tracked objects:
  1949 ;;		On entry : 0/0
  1950 ;;		On exit  : 0/0
  1951 ;;		Unchanged: 0/0
  1952 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  1953 ;;      Params:         4       0       0       0       0       0       0       0       0
  1954 ;;      Locals:         6       0       0       0       0       0       0       0       0
  1955 ;;      Temps:          4       0       0       0       0       0       0       0       0
  1956 ;;      Totals:        14       0       0       0       0       0       0       0       0
  1957 ;;Total ram usage:       14 bytes
  1958 ;; Hardware stack levels used:    1
  1959 ;; This function calls:
  1960 ;;		Nothing
  1961 ;; This function is called by:
  1962 ;;		_SensorLM35
  1963 ;; This function uses a non-reentrant model
  1964 ;;
  1965                           
  1966                           	psect	text5
  1967  003754                     __ptext5:
  1968                           	callstack 0
  1969  003754                     ___xxtofl:
  1970                           	callstack 29
  1971                           
  1972                           ;incstack = 0
  1973                           ;___xxtofl@sign stored from wreg
  1974  003754  6E13               	movwf	___xxtofl@sign^0,c
  1975  003756  5013               	movf	___xxtofl@sign^0,w,c
  1976  003758  B4D8               	btfsc	status,2,c
  1977  00375A  EFB1  F01B         	goto	u6481
  1978  00375E  EFB3  F01B         	goto	u6480
  1979  003762                     u6481:
  1980  003762  EFD5  F01B         	goto	l844
  1981  003766                     u6480:
  1982  003766  BE0E               	btfsc	(___xxtofl@val+3)^0,7,c
  1983  003768  EFBA  F01B         	goto	u6490
  1984  00376C  EFB8  F01B         	goto	u6491
  1985  003770                     u6491:
  1986  003770  EFD5  F01B         	goto	l844
  1987  003774                     u6490:
  1988  003774  C00B  F00F         	movff	___xxtofl@val,??___xxtofl
  1989  003778  C00C  F010         	movff	___xxtofl@val+1,??___xxtofl+1
  1990  00377C  C00D  F011         	movff	___xxtofl@val+2,??___xxtofl+2
  1991  003780  C00E  F012         	movff	___xxtofl@val+3,??___xxtofl+3
  1992  003784  1E0F               	comf	??___xxtofl^0,f,c
  1993  003786  1E10               	comf	(??___xxtofl+1)^0,f,c
  1994  003788  1E11               	comf	(??___xxtofl+2)^0,f,c
  1995  00378A  1E12               	comf	(??___xxtofl+3)^0,f,c
  1996  00378C  2A0F               	incf	??___xxtofl^0,f,c
  1997  00378E  0E00               	movlw	0
  1998  003790  2210               	addwfc	(??___xxtofl+1)^0,f,c
  1999  003792  2211               	addwfc	(??___xxtofl+2)^0,f,c
  2000  003794  2212               	addwfc	(??___xxtofl+3)^0,f,c
  2001  003796  C00F  F015         	movff	??___xxtofl,___xxtofl@arg
  2002  00379A  C010  F016         	movff	??___xxtofl+1,___xxtofl@arg+1
  2003  00379E  C011  F017         	movff	??___xxtofl+2,___xxtofl@arg+2
  2004  0037A2  C012  F018         	movff	??___xxtofl+3,___xxtofl@arg+3
  2005  0037A6  EFDD  F01B         	goto	l4786
  2006  0037AA                     l844:
  2007  0037AA  C00B  F015         	movff	___xxtofl@val,___xxtofl@arg
  2008  0037AE  C00C  F016         	movff	___xxtofl@val+1,___xxtofl@arg+1
  2009  0037B2  C00D  F017         	movff	___xxtofl@val+2,___xxtofl@arg+2
  2010  0037B6  C00E  F018         	movff	___xxtofl@val+3,___xxtofl@arg+3
  2011  0037BA                     l4786:
  2012  0037BA  500B               	movf	___xxtofl@val^0,w,c
  2013  0037BC  100C               	iorwf	(___xxtofl@val+1)^0,w,c
  2014  0037BE  100D               	iorwf	(___xxtofl@val+2)^0,w,c
  2015  0037C0  100E               	iorwf	(___xxtofl@val+3)^0,w,c
  2016  0037C2  A4D8               	btfss	status,2,c
  2017  0037C4  EFE6  F01B         	goto	u6501
  2018  0037C8  EFE8  F01B         	goto	u6500
  2019  0037CC                     u6501:
  2020  0037CC  EFF2  F01B         	goto	l4792
  2021  0037D0                     u6500:
  2022  0037D0  0E00               	movlw	0
  2023  0037D2  6E0B               	movwf	?___xxtofl^0,c
  2024  0037D4  0E00               	movlw	0
  2025  0037D6  6E0C               	movwf	(?___xxtofl+1)^0,c
  2026  0037D8  0E00               	movlw	0
  2027  0037DA  6E0D               	movwf	(?___xxtofl+2)^0,c
  2028  0037DC  0E00               	movlw	0
  2029  0037DE  6E0E               	movwf	(?___xxtofl+3)^0,c
  2030  0037E0  EF83  F01C         	goto	l847
  2031  0037E4                     l4792:
  2032  0037E4  0E96               	movlw	150
  2033  0037E6  6E14               	movwf	___xxtofl@exp^0,c
  2034  0037E8  EFFC  F01B         	goto	l4796
  2035  0037EC                     l4794:
  2036  0037EC  2A14               	incf	___xxtofl@exp^0,f,c
  2037  0037EE  90D8               	bcf	status,0,c
  2038  0037F0  3218               	rrcf	(___xxtofl@arg+3)^0,f,c
  2039  0037F2  3217               	rrcf	(___xxtofl@arg+2)^0,f,c
  2040  0037F4  3216               	rrcf	(___xxtofl@arg+1)^0,f,c
  2041  0037F6  3215               	rrcf	___xxtofl@arg^0,f,c
  2042  0037F8                     l4796:
  2043  0037F8  0E00               	movlw	0
  2044  0037FA  1415               	andwf	___xxtofl@arg^0,w,c
  2045  0037FC  6E0F               	movwf	??___xxtofl^0,c
  2046  0037FE  0E00               	movlw	0
  2047  003800  1416               	andwf	(___xxtofl@arg+1)^0,w,c
  2048  003802  6E10               	movwf	(??___xxtofl+1)^0,c
  2049  003804  0E00               	movlw	0
  2050  003806  1417               	andwf	(___xxtofl@arg+2)^0,w,c
  2051  003808  6E11               	movwf	(??___xxtofl+2)^0,c
  2052  00380A  0EFE               	movlw	254
  2053  00380C  1418               	andwf	(___xxtofl@arg+3)^0,w,c
  2054  00380E  6E12               	movwf	(??___xxtofl+3)^0,c
  2055  003810  500F               	movf	??___xxtofl^0,w,c
  2056  003812  1010               	iorwf	(??___xxtofl+1)^0,w,c
  2057  003814  1011               	iorwf	(??___xxtofl+2)^0,w,c
  2058  003816  1012               	iorwf	(??___xxtofl+3)^0,w,c
  2059  003818  A4D8               	btfss	status,2,c
  2060  00381A  EF11  F01C         	goto	u6511
  2061  00381E  EF13  F01C         	goto	u6510
  2062  003822                     u6511:
  2063  003822  EFF6  F01B         	goto	l4794
  2064  003826                     u6510:
  2065  003826  EF21  F01C         	goto	l851
  2066  00382A                     l4798:
  2067  00382A  2A14               	incf	___xxtofl@exp^0,f,c
  2068  00382C  0E01               	movlw	1
  2069  00382E  2615               	addwf	___xxtofl@arg^0,f,c
  2070  003830  0E00               	movlw	0
  2071  003832  2216               	addwfc	(___xxtofl@arg+1)^0,f,c
  2072  003834  2217               	addwfc	(___xxtofl@arg+2)^0,f,c
  2073  003836  2218               	addwfc	(___xxtofl@arg+3)^0,f,c
  2074  003838  90D8               	bcf	status,0,c
  2075  00383A  3218               	rrcf	(___xxtofl@arg+3)^0,f,c
  2076  00383C  3217               	rrcf	(___xxtofl@arg+2)^0,f,c
  2077  00383E  3216               	rrcf	(___xxtofl@arg+1)^0,f,c
  2078  003840  3215               	rrcf	___xxtofl@arg^0,f,c
  2079  003842                     l851:
  2080  003842  0E00               	movlw	0
  2081  003844  1415               	andwf	___xxtofl@arg^0,w,c
  2082  003846  6E0F               	movwf	??___xxtofl^0,c
  2083  003848  0E00               	movlw	0
  2084  00384A  1416               	andwf	(___xxtofl@arg+1)^0,w,c
  2085  00384C  6E10               	movwf	(??___xxtofl+1)^0,c
  2086  00384E  0E00               	movlw	0
  2087  003850  1417               	andwf	(___xxtofl@arg+2)^0,w,c
  2088  003852  6E11               	movwf	(??___xxtofl+2)^0,c
  2089  003854  0EFF               	movlw	255
  2090  003856  1418               	andwf	(___xxtofl@arg+3)^0,w,c
  2091  003858  6E12               	movwf	(??___xxtofl+3)^0,c
  2092  00385A  500F               	movf	??___xxtofl^0,w,c
  2093  00385C  1010               	iorwf	(??___xxtofl+1)^0,w,c
  2094  00385E  1011               	iorwf	(??___xxtofl+2)^0,w,c
  2095  003860  1012               	iorwf	(??___xxtofl+3)^0,w,c
  2096  003862  A4D8               	btfss	status,2,c
  2097  003864  EF36  F01C         	goto	u6521
  2098  003868  EF38  F01C         	goto	u6520
  2099  00386C                     u6521:
  2100  00386C  EF15  F01C         	goto	l4798
  2101  003870                     u6520:
  2102  003870  EF40  F01C         	goto	l4806
  2103  003874                     l4804:
  2104  003874  0614               	decf	___xxtofl@exp^0,f,c
  2105  003876  90D8               	bcf	status,0,c
  2106  003878  3615               	rlcf	___xxtofl@arg^0,f,c
  2107  00387A  3616               	rlcf	(___xxtofl@arg+1)^0,f,c
  2108  00387C  3617               	rlcf	(___xxtofl@arg+2)^0,f,c
  2109  00387E  3618               	rlcf	(___xxtofl@arg+3)^0,f,c
  2110  003880                     l4806:
  2111  003880  BE17               	btfsc	(___xxtofl@arg+2)^0,7,c
  2112  003882  EF45  F01C         	goto	u6531
  2113  003886  EF47  F01C         	goto	u6530
  2114  00388A                     u6531:
  2115  00388A  EF4F  F01C         	goto	l858
  2116  00388E                     u6530:
  2117  00388E  0E02               	movlw	2
  2118  003890  6014               	cpfslt	___xxtofl@exp^0,c
  2119  003892  EF4D  F01C         	goto	u6541
  2120  003896  EF4F  F01C         	goto	u6540
  2121  00389A                     u6541:
  2122  00389A  EF3A  F01C         	goto	l4804
  2123  00389E                     u6540:
  2124  00389E                     l858:
  2125  00389E  B014               	btfsc	___xxtofl@exp^0,0,c
  2126  0038A0  EF54  F01C         	goto	u6551
  2127  0038A4  EF56  F01C         	goto	u6550
  2128  0038A8                     u6551:
  2129  0038A8  EF57  F01C         	goto	l4812
  2130  0038AC                     u6550:
  2131  0038AC  9E17               	bcf	(___xxtofl@arg+2)^0,7,c
  2132  0038AE                     l4812:
  2133  0038AE  90D8               	bcf	status,0,c
  2134  0038B0  3214               	rrcf	___xxtofl@exp^0,f,c
  2135  0038B2  C014  F00F         	movff	___xxtofl@exp,??___xxtofl
  2136  0038B6  6A10               	clrf	(??___xxtofl+1)^0,c
  2137  0038B8  6A11               	clrf	(??___xxtofl+2)^0,c
  2138  0038BA  6A12               	clrf	(??___xxtofl+3)^0,c
  2139  0038BC  C00F  F012         	movff	??___xxtofl,??___xxtofl+3
  2140  0038C0  6A11               	clrf	(??___xxtofl+2)^0,c
  2141  0038C2  6A10               	clrf	(??___xxtofl+1)^0,c
  2142  0038C4  6A0F               	clrf	??___xxtofl^0,c
  2143  0038C6  500F               	movf	??___xxtofl^0,w,c
  2144  0038C8  1215               	iorwf	___xxtofl@arg^0,f,c
  2145  0038CA  5010               	movf	(??___xxtofl+1)^0,w,c
  2146  0038CC  1216               	iorwf	(___xxtofl@arg+1)^0,f,c
  2147  0038CE  5011               	movf	(??___xxtofl+2)^0,w,c
  2148  0038D0  1217               	iorwf	(___xxtofl@arg+2)^0,f,c
  2149  0038D2  5012               	movf	(??___xxtofl+3)^0,w,c
  2150  0038D4  1218               	iorwf	(___xxtofl@arg+3)^0,f,c
  2151  0038D6  5013               	movf	___xxtofl@sign^0,w,c
  2152  0038D8  B4D8               	btfsc	status,2,c
  2153  0038DA  EF71  F01C         	goto	u6561
  2154  0038DE  EF73  F01C         	goto	u6560
  2155  0038E2                     u6561:
  2156  0038E2  EF7B  F01C         	goto	l4822
  2157  0038E6                     u6560:
  2158  0038E6  BE0E               	btfsc	(___xxtofl@val+3)^0,7,c
  2159  0038E8  EF7A  F01C         	goto	u6570
  2160  0038EC  EF78  F01C         	goto	u6571
  2161  0038F0                     u6571:
  2162  0038F0  EF7B  F01C         	goto	l4822
  2163  0038F4                     u6570:
  2164  0038F4  8E18               	bsf	(___xxtofl@arg+3)^0,7,c
  2165  0038F6                     l4822:
  2166  0038F6  C015  F00B         	movff	___xxtofl@arg,?___xxtofl
  2167  0038FA  C016  F00C         	movff	___xxtofl@arg+1,?___xxtofl+1
  2168  0038FE  C017  F00D         	movff	___xxtofl@arg+2,?___xxtofl+2
  2169  003902  C018  F00E         	movff	___xxtofl@arg+3,?___xxtofl+3
  2170  003906                     l847:
  2171  003906  0012               	return		;funcret
  2172  003908                     __end_of___xxtofl:
  2173                           	callstack 0
  2174                           
  2175 ;; *************** function _Read_ADC *****************
  2176 ;; Defined at:
  2177 ;;		line 99 in file "SensorValoresExactos.c"
  2178 ;; Parameters:    Size  Location     Type
  2179 ;;  canal           1    wreg     unsigned char 
  2180 ;; Auto vars:     Size  Location     Type
  2181 ;;  canal           1    4[COMRAM] unsigned char 
  2182 ;; Return value:  Size  Location     Type
  2183 ;;                  2    0[COMRAM] short 
  2184 ;; Registers used:
  2185 ;;		wreg, status,2, status,0
  2186 ;; Tracked objects:
  2187 ;;		On entry : 0/0
  2188 ;;		On exit  : 0/0
  2189 ;;		Unchanged: 0/0
  2190 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  2191 ;;      Params:         2       0       0       0       0       0       0       0       0
  2192 ;;      Locals:         1       0       0       0       0       0       0       0       0
  2193 ;;      Temps:          2       0       0       0       0       0       0       0       0
  2194 ;;      Totals:         5       0       0       0       0       0       0       0       0
  2195 ;;Total ram usage:        5 bytes
  2196 ;; Hardware stack levels used:    1
  2197 ;; This function calls:
  2198 ;;		Nothing
  2199 ;; This function is called by:
  2200 ;;		_SensorLM35
  2201 ;; This function uses a non-reentrant model
  2202 ;;
  2203                           
  2204                           	psect	text6
  2205  00485C                     __ptext6:
  2206                           	callstack 0
  2207  00485C                     _Read_ADC:
  2208                           	callstack 29
  2209                           
  2210                           ;incstack = 0
  2211                           ;Read_ADC@canal stored from wreg
  2212  00485C  6E05               	movwf	Read_ADC@canal^0,c
  2213  00485E                     
  2214                           ;SensorValoresExactos.c: 99: short Read_ADC(char canal);SensorValoresExactos.c: 100: {;S
      +                          ensorValoresExactos.c: 102:     ADCON1bits.PVCFG = 0b00;
  2215  00485E  0EF3               	movlw	-13
  2216  004860  16C1               	andwf	193,f,c	;volatile
  2217                           
  2218                           ;SensorValoresExactos.c: 103:     ADCON1bits.NVCFG = 0b00;
  2219  004862  0EFC               	movlw	-4
  2220  004864  16C1               	andwf	193,f,c	;volatile
  2221                           
  2222                           ;SensorValoresExactos.c: 105:  ADCON0bits.CHS = 0b00000;
  2223  004866  0E83               	movlw	-125
  2224  004868  16C2               	andwf	194,f,c	;volatile
  2225                           
  2226                           ;SensorValoresExactos.c: 106:  ADCON0bits.CHS = 0b00010;
  2227  00486A  50C2               	movf	194,w,c	;volatile
  2228  00486C  0B83               	andlw	-125
  2229  00486E  0908               	iorlw	8
  2230  004870  6EC2               	movwf	194,c	;volatile
  2231                           
  2232                           ;SensorValoresExactos.c: 108:  switch(canal)
  2233  004872  EF3F  F024         	goto	l4690
  2234  004876                     l4686:
  2235                           
  2236                           ;SensorValoresExactos.c: 111:             ADCON0 = 0b00000010;
  2237  004876  0E02               	movlw	2
  2238  004878  6EC2               	movwf	194,c	;volatile
  2239                           
  2240                           ;SensorValoresExactos.c: 116:             break;
  2241  00487A  EF50  F024         	goto	l4692
  2242  00487E                     l4690:
  2243  00487E  5005               	movf	Read_ADC@canal^0,w,c
  2244  004880  6E03               	movwf	??_Read_ADC^0,c
  2245  004882  6A04               	clrf	(??_Read_ADC+1)^0,c
  2246                           
  2247                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  2248                           ; Switch size 1, requested type "simple"
  2249                           ; Number of cases is 1, Range of values is 0 to 0
  2250                           ; switch strategies available:
  2251                           ; Name         Instructions Cycles
  2252                           ; simple_byte            4     3 (average)
  2253                           ;	Chosen strategy is simple_byte
  2254  004884  5004               	movf	(??_Read_ADC+1)^0,w,c
  2255  004886  0A00               	xorlw	0	; case 0
  2256  004888  B4D8               	btfsc	status,2,c
  2257  00488A  EF49  F024         	goto	l5058
  2258  00488E  EF50  F024         	goto	l4692
  2259  004892                     l5058:
  2260                           
  2261                           ; Switch size 1, requested type "simple"
  2262                           ; Number of cases is 1, Range of values is 0 to 0
  2263                           ; switch strategies available:
  2264                           ; Name         Instructions Cycles
  2265                           ; simple_byte            4     3 (average)
  2266                           ;	Chosen strategy is simple_byte
  2267  004892  5003               	movf	??_Read_ADC^0,w,c
  2268  004894  0A00               	xorlw	0	; case 0
  2269  004896  B4D8               	btfsc	status,2,c
  2270  004898  EF3B  F024         	goto	l4686
  2271  00489C  EF50  F024         	goto	l4692
  2272  0048A0                     l4692:
  2273                           
  2274                           ;SensorValoresExactos.c: 122:  ADCON2 = 0b00100001;
  2275  0048A0  0E21               	movlw	33
  2276  0048A2  6EC0               	movwf	192,c	;volatile
  2277  0048A4                     
  2278                           ;SensorValoresExactos.c: 136:  ADCON0bits.ADON = 1;
  2279  0048A4  80C2               	bsf	194,0,c	;volatile
  2280  0048A6                     
  2281                           ;SensorValoresExactos.c: 138:     ADCON0bits.GO = 1;
  2282  0048A6  82C2               	bsf	194,1,c	;volatile
  2283  0048A8                     l112:
  2284  0048A8  B2C2               	btfsc	194,1,c	;volatile
  2285  0048AA  EF59  F024         	goto	u6331
  2286  0048AE  EF5B  F024         	goto	u6330
  2287  0048B2                     u6331:
  2288  0048B2  EF54  F024         	goto	l112
  2289  0048B6                     u6330:
  2290  0048B6                     
  2291                           ;SensorValoresExactos.c: 141:     return ADRESL + ADRESH*256;
  2292  0048B6  50C4               	movf	196,w,c	;volatile
  2293  0048B8  6E04               	movwf	(??_Read_ADC+1)^0,c
  2294  0048BA  6A03               	clrf	??_Read_ADC^0,c
  2295  0048BC  50C3               	movf	195,w,c	;volatile
  2296  0048BE  2403               	addwf	??_Read_ADC^0,w,c
  2297  0048C0  6E01               	movwf	?_Read_ADC^0,c
  2298  0048C2  0E00               	movlw	0
  2299  0048C4  2004               	addwfc	(??_Read_ADC+1)^0,w,c
  2300  0048C6  6E02               	movwf	(?_Read_ADC+1)^0,c
  2301  0048C8  0012               	return		;funcret
  2302  0048CA                     __end_of_Read_ADC:
  2303                           	callstack 0
  2304                           
  2305 ;; *************** function _LCD_COMANDOS *****************
  2306 ;; Defined at:
  2307 ;;		line 207 in file "SensorValoresExactos.c"
  2308 ;; Parameters:    Size  Location     Type
  2309 ;;  comando         1    wreg     unsigned char 
  2310 ;; Auto vars:     Size  Location     Type
  2311 ;;  comando         1    3[COMRAM] unsigned char 
  2312 ;; Return value:  Size  Location     Type
  2313 ;;                  1    wreg      void 
  2314 ;; Registers used:
  2315 ;;		wreg, status,2, status,0, cstack
  2316 ;; Tracked objects:
  2317 ;;		On entry : 0/0
  2318 ;;		On exit  : 0/0
  2319 ;;		Unchanged: 0/0
  2320 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  2321 ;;      Params:         0       0       0       0       0       0       0       0       0
  2322 ;;      Locals:         1       0       0       0       0       0       0       0       0
  2323 ;;      Temps:          0       0       0       0       0       0       0       0       0
  2324 ;;      Totals:         1       0       0       0       0       0       0       0       0
  2325 ;;Total ram usage:        1 bytes
  2326 ;; Hardware stack levels used:    1
  2327 ;; Hardware stack levels required when called:    2
  2328 ;; This function calls:
  2329 ;;		_Get_DATA
  2330 ;; This function is called by:
  2331 ;;		_main
  2332 ;; This function uses a non-reentrant model
  2333 ;;
  2334                           
  2335                           	psect	text7
  2336  004DB2                     __ptext7:
  2337                           	callstack 0
  2338  004DB2                     _LCD_COMANDOS:
  2339                           	callstack 28
  2340                           
  2341                           ;incstack = 0
  2342                           ;LCD_COMANDOS@comando stored from wreg
  2343  004DB2  6E04               	movwf	LCD_COMANDOS@comando^0,c
  2344  004DB4                     
  2345                           ;SensorValoresExactos.c: 207: void LCD_COMANDOS(char comando);SensorValoresExactos.c: 20
      +                          8: {;SensorValoresExactos.c: 209:     LATDbits.LD0 = 0;
  2346  004DB4  908C               	bcf	140,0,c	;volatile
  2347  004DB6                     
  2348                           ;SensorValoresExactos.c: 210:     Get_DATA((comando >> 4)&0b00001111);
  2349  004DB6  3804               	swapf	LCD_COMANDOS@comando^0,w,c
  2350  004DB8  0B0F               	andlw	15
  2351  004DBA  0B0F               	andlw	15
  2352  004DBC  EC65  F024         	call	_Get_DATA
  2353                           
  2354                           ;SensorValoresExactos.c: 211:     Get_DATA((comando)&0b00001111);
  2355  004DC0  5004               	movf	LCD_COMANDOS@comando^0,w,c
  2356  004DC2  0B0F               	andlw	15
  2357  004DC4  EC65  F024         	call	_Get_DATA
  2358  004DC8  0012               	return		;funcret
  2359  004DCA                     __end_of_LCD_COMANDOS:
  2360                           	callstack 0
  2361                           
  2362 ;; *************** function _Get_DATA *****************
  2363 ;; Defined at:
  2364 ;;		line 196 in file "SensorValoresExactos.c"
  2365 ;; Parameters:    Size  Location     Type
  2366 ;;  data            1    wreg     unsigned char 
  2367 ;; Auto vars:     Size  Location     Type
  2368 ;;  data            1    2[COMRAM] unsigned char 
  2369 ;; Return value:  Size  Location     Type
  2370 ;;                  1    wreg      void 
  2371 ;; Registers used:
  2372 ;;		wreg, status,2, status,0, cstack
  2373 ;; Tracked objects:
  2374 ;;		On entry : 0/0
  2375 ;;		On exit  : 0/0
  2376 ;;		Unchanged: 0/0
  2377 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  2378 ;;      Params:         0       0       0       0       0       0       0       0       0
  2379 ;;      Locals:         1       0       0       0       0       0       0       0       0
  2380 ;;      Temps:          1       0       0       0       0       0       0       0       0
  2381 ;;      Totals:         2       0       0       0       0       0       0       0       0
  2382 ;;Total ram usage:        2 bytes
  2383 ;; Hardware stack levels used:    1
  2384 ;; Hardware stack levels required when called:    1
  2385 ;; This function calls:
  2386 ;;		_Set_DATA
  2387 ;; This function is called by:
  2388 ;;		_LCD_COMANDOS
  2389 ;; This function uses a non-reentrant model
  2390 ;;
  2391                           
  2392                           	psect	text8
  2393  0048CA                     __ptext8:
  2394                           	callstack 0
  2395  0048CA                     _Get_DATA:
  2396                           	callstack 28
  2397                           
  2398                           ;incstack = 0
  2399                           ;Get_DATA@data stored from wreg
  2400  0048CA  6E03               	movwf	Get_DATA@data^0,c
  2401  0048CC                     
  2402                           ;SensorValoresExactos.c: 196: void Get_DATA(char data);SensorValoresExactos.c: 197: {;Se
      +                          nsorValoresExactos.c: 198:     LATDbits.LD4 = data;
  2403  0048CC  B003               	btfsc	Get_DATA@data^0,0,c
  2404  0048CE  D002               	bra	u6345
  2405  0048D0  988C               	bcf	140,4,c	;volatile
  2406  0048D2  D001               	bra	u6346
  2407  0048D4                     u6345:
  2408  0048D4  888C               	bsf	140,4,c	;volatile
  2409  0048D6                     u6346:
  2410  0048D6                     
  2411                           ;SensorValoresExactos.c: 199:     LATDbits.LD5 = data >> 1;
  2412  0048D6  C003  F002         	movff	Get_DATA@data,??_Get_DATA
  2413  0048DA  90D8               	bcf	status,0,c
  2414  0048DC  3202               	rrcf	??_Get_DATA^0,f,c
  2415  0048DE  3A02               	swapf	??_Get_DATA^0,f,c
  2416  0048E0  4602               	rlncf	??_Get_DATA^0,f,c
  2417  0048E2  508C               	movf	140,w,c	;volatile
  2418  0048E4  1802               	xorwf	??_Get_DATA^0,w,c
  2419  0048E6  0BDF               	andlw	-33
  2420  0048E8  1802               	xorwf	??_Get_DATA^0,w,c
  2421  0048EA  6E8C               	movwf	140,c	;volatile
  2422  0048EC                     
  2423                           ;SensorValoresExactos.c: 200:     LATDbits.LD6 = data >> 2;
  2424  0048EC  C003  F002         	movff	Get_DATA@data,??_Get_DATA
  2425  0048F0  90D8               	bcf	status,0,c
  2426  0048F2  3202               	rrcf	??_Get_DATA^0,f,c
  2427  0048F4  90D8               	bcf	status,0,c
  2428  0048F6  3202               	rrcf	??_Get_DATA^0,f,c
  2429  0048F8  3A02               	swapf	??_Get_DATA^0,f,c
  2430  0048FA  4602               	rlncf	??_Get_DATA^0,f,c
  2431  0048FC  4602               	rlncf	??_Get_DATA^0,f,c
  2432  0048FE  508C               	movf	140,w,c	;volatile
  2433  004900  1802               	xorwf	??_Get_DATA^0,w,c
  2434  004902  0BBF               	andlw	-65
  2435  004904  1802               	xorwf	??_Get_DATA^0,w,c
  2436  004906  6E8C               	movwf	140,c	;volatile
  2437  004908                     
  2438                           ;SensorValoresExactos.c: 201:     LATDbits.LD7 = data >> 3;
  2439  004908  C003  F002         	movff	Get_DATA@data,??_Get_DATA
  2440  00490C  90D8               	bcf	status,0,c
  2441  00490E  3202               	rrcf	??_Get_DATA^0,f,c
  2442  004910  90D8               	bcf	status,0,c
  2443  004912  3202               	rrcf	??_Get_DATA^0,f,c
  2444  004914  90D8               	bcf	status,0,c
  2445  004916  3202               	rrcf	??_Get_DATA^0,f,c
  2446  004918  3202               	rrcf	??_Get_DATA^0,f,c
  2447  00491A  3202               	rrcf	??_Get_DATA^0,f,c
  2448  00491C  508C               	movf	140,w,c	;volatile
  2449  00491E  1802               	xorwf	??_Get_DATA^0,w,c
  2450  004920  0B7F               	andlw	-129
  2451  004922  1802               	xorwf	??_Get_DATA^0,w,c
  2452  004924  6E8C               	movwf	140,c	;volatile
  2453  004926                     
  2454                           ;SensorValoresExactos.c: 203:     Set_DATA();
  2455  004926  ECE5  F026         	call	_Set_DATA	;wreg free
  2456  00492A  0012               	return		;funcret
  2457  00492C                     __end_of_Get_DATA:
  2458                           	callstack 0
  2459                           
  2460 ;; *************** function _Set_DATA *****************
  2461 ;; Defined at:
  2462 ;;		line 186 in file "SensorValoresExactos.c"
  2463 ;; Parameters:    Size  Location     Type
  2464 ;;		None
  2465 ;; Auto vars:     Size  Location     Type
  2466 ;;		None
  2467 ;; Return value:  Size  Location     Type
  2468 ;;                  1    wreg      void 
  2469 ;; Registers used:
  2470 ;;		wreg
  2471 ;; Tracked objects:
  2472 ;;		On entry : 0/0
  2473 ;;		On exit  : 0/0
  2474 ;;		Unchanged: 0/0
  2475 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  2476 ;;      Params:         0       0       0       0       0       0       0       0       0
  2477 ;;      Locals:         0       0       0       0       0       0       0       0       0
  2478 ;;      Temps:          1       0       0       0       0       0       0       0       0
  2479 ;;      Totals:         1       0       0       0       0       0       0       0       0
  2480 ;;Total ram usage:        1 bytes
  2481 ;; Hardware stack levels used:    1
  2482 ;; This function calls:
  2483 ;;		Nothing
  2484 ;; This function is called by:
  2485 ;;		_Get_DATA
  2486 ;; This function uses a non-reentrant model
  2487 ;;
  2488                           
  2489                           	psect	text9
  2490  004DCA                     __ptext9:
  2491                           	callstack 0
  2492  004DCA                     _Set_DATA:
  2493                           	callstack 28
  2494  004DCA                     
  2495                           ;SensorValoresExactos.c: 188:     LATDbits.LD2 = 1;
  2496  004DCA  848C               	bsf	140,2,c	;volatile
  2497  004DCC                     
  2498                           ;SensorValoresExactos.c: 189:     _delay((unsigned long)((1)*(8000000/4000.0)));
  2499  004DCC  0E03               	movlw	3
  2500  004DCE  6E01               	movwf	??_Set_DATA^0,c
  2501  004DD0  0E98               	movlw	152
  2502  004DD2                     u6777:
  2503  004DD2  2EE8               	decfsz	wreg,f,c
  2504  004DD4  D7FE               	bra	u6777
  2505  004DD6  2E01               	decfsz	??_Set_DATA^0,f,c
  2506  004DD8  D7FC               	bra	u6777
  2507  004DDA                     
  2508                           ;SensorValoresExactos.c: 190:     LATDbits.LD2 = 0;
  2509  004DDA  948C               	bcf	140,2,c	;volatile
  2510  004DDC  0012               	return		;funcret
  2511  004DDE                     __end_of_Set_DATA:
  2512                           	callstack 0
  2513                           
  2514 ;; *************** function _InicializaLCD *****************
  2515 ;; Defined at:
  2516 ;;		line 246 in file "SensorValoresExactos.c"
  2517 ;; Parameters:    Size  Location     Type
  2518 ;;		None
  2519 ;; Auto vars:     Size  Location     Type
  2520 ;;		None
  2521 ;; Return value:  Size  Location     Type
  2522 ;;                  1    wreg      void 
  2523 ;; Registers used:
  2524 ;;		wreg, status,2, status,0, cstack
  2525 ;; Tracked objects:
  2526 ;;		On entry : 0/0
  2527 ;;		On exit  : 0/0
  2528 ;;		Unchanged: 0/0
  2529 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  2530 ;;      Params:         0       0       0       0       0       0       0       0       0
  2531 ;;      Locals:         0       0       0       0       0       0       0       0       0
  2532 ;;      Temps:          1       0       0       0       0       0       0       0       0
  2533 ;;      Totals:         1       0       0       0       0       0       0       0       0
  2534 ;;Total ram usage:        1 bytes
  2535 ;; Hardware stack levels used:    1
  2536 ;; Hardware stack levels required when called:    1
  2537 ;; This function calls:
  2538 ;;		_putcm
  2539 ;; This function is called by:
  2540 ;;		_main
  2541 ;; This function uses a non-reentrant model
  2542 ;;
  2543                           
  2544                           	psect	text10
  2545  00475E                     __ptext10:
  2546                           	callstack 0
  2547  00475E                     _InicializaLCD:
  2548                           	callstack 29
  2549  00475E                     
  2550                           ;SensorValoresExactos.c: 248:     _delay((unsigned long)((50)*(8000000/4000.0)));
  2551  00475E  0E82               	movlw	130
  2552  004760  6E04               	movwf	??_InicializaLCD^0,c
  2553  004762  0EDE               	movlw	222
  2554  004764                     u6787:
  2555  004764  2EE8               	decfsz	wreg,f,c
  2556  004766  D7FE               	bra	u6787
  2557  004768  2E04               	decfsz	??_InicializaLCD^0,f,c
  2558  00476A  D7FC               	bra	u6787
  2559  00476C                     
  2560                           ;SensorValoresExactos.c: 249:     putcm(0x02);
  2561  00476C  0E02               	movlw	2
  2562  00476E  ECD1  F025         	call	_putcm
  2563  004772                     
  2564                           ;SensorValoresExactos.c: 250:     _delay((unsigned long)((1)*(8000000/4000.0)));
  2565  004772  0E03               	movlw	3
  2566  004774  6E04               	movwf	??_InicializaLCD^0,c
  2567  004776  0E98               	movlw	152
  2568  004778                     u6797:
  2569  004778  2EE8               	decfsz	wreg,f,c
  2570  00477A  D7FE               	bra	u6797
  2571  00477C  2E04               	decfsz	??_InicializaLCD^0,f,c
  2572  00477E  D7FC               	bra	u6797
  2573                           
  2574                           ;SensorValoresExactos.c: 252:     putcm(0x28);
  2575  004780  0E28               	movlw	40
  2576  004782  ECD1  F025         	call	_putcm
  2577  004786                     
  2578                           ;SensorValoresExactos.c: 253:     _delay((unsigned long)((1)*(8000000/4000.0)));
  2579  004786  0E03               	movlw	3
  2580  004788  6E04               	movwf	??_InicializaLCD^0,c
  2581  00478A  0E98               	movlw	152
  2582  00478C                     u6807:
  2583  00478C  2EE8               	decfsz	wreg,f,c
  2584  00478E  D7FE               	bra	u6807
  2585  004790  2E04               	decfsz	??_InicializaLCD^0,f,c
  2586  004792  D7FC               	bra	u6807
  2587  004794                     
  2588                           ;SensorValoresExactos.c: 255:     putcm(0x2C);
  2589  004794  0E2C               	movlw	44
  2590  004796  ECD1  F025         	call	_putcm
  2591                           
  2592                           ;SensorValoresExactos.c: 256:     _delay((unsigned long)((1)*(8000000/4000.0)));
  2593  00479A  0E03               	movlw	3
  2594  00479C  6E04               	movwf	??_InicializaLCD^0,c
  2595  00479E  0E98               	movlw	152
  2596  0047A0                     u6817:
  2597  0047A0  2EE8               	decfsz	wreg,f,c
  2598  0047A2  D7FE               	bra	u6817
  2599  0047A4  2E04               	decfsz	??_InicializaLCD^0,f,c
  2600  0047A6  D7FC               	bra	u6817
  2601  0047A8                     
  2602                           ;SensorValoresExactos.c: 258:     putcm(0x0C);
  2603  0047A8  0E0C               	movlw	12
  2604  0047AA  ECD1  F025         	call	_putcm
  2605  0047AE                     
  2606                           ;SensorValoresExactos.c: 259:     _delay((unsigned long)((1)*(8000000/4000.0)));
  2607  0047AE  0E03               	movlw	3
  2608  0047B0  6E04               	movwf	??_InicializaLCD^0,c
  2609  0047B2  0E98               	movlw	152
  2610  0047B4                     u6827:
  2611  0047B4  2EE8               	decfsz	wreg,f,c
  2612  0047B6  D7FE               	bra	u6827
  2613  0047B8  2E04               	decfsz	??_InicializaLCD^0,f,c
  2614  0047BA  D7FC               	bra	u6827
  2615                           
  2616                           ;SensorValoresExactos.c: 261:     putcm(0x06);
  2617  0047BC  0E06               	movlw	6
  2618  0047BE  ECD1  F025         	call	_putcm
  2619  0047C2                     
  2620                           ;SensorValoresExactos.c: 262:     _delay((unsigned long)((1)*(8000000/4000.0)));
  2621  0047C2  0E03               	movlw	3
  2622  0047C4  6E04               	movwf	??_InicializaLCD^0,c
  2623  0047C6  0E98               	movlw	152
  2624  0047C8                     u6837:
  2625  0047C8  2EE8               	decfsz	wreg,f,c
  2626  0047CA  D7FE               	bra	u6837
  2627  0047CC  2E04               	decfsz	??_InicializaLCD^0,f,c
  2628  0047CE  D7FC               	bra	u6837
  2629  0047D0                     
  2630                           ;SensorValoresExactos.c: 264:     putcm(0x80);
  2631  0047D0  0E80               	movlw	128
  2632  0047D2  ECD1  F025         	call	_putcm
  2633                           
  2634                           ;SensorValoresExactos.c: 265:     _delay((unsigned long)((1)*(8000000/4000.0)));
  2635  0047D6  0E03               	movlw	3
  2636  0047D8  6E04               	movwf	??_InicializaLCD^0,c
  2637  0047DA  0E98               	movlw	152
  2638  0047DC                     u6847:
  2639  0047DC  2EE8               	decfsz	wreg,f,c
  2640  0047DE  D7FE               	bra	u6847
  2641  0047E0  2E04               	decfsz	??_InicializaLCD^0,f,c
  2642  0047E2  D7FC               	bra	u6847
  2643  0047E4  0012               	return		;funcret
  2644  0047E6                     __end_of_InicializaLCD:
  2645                           	callstack 0
  2646                           
  2647 ;; *************** function _Configuracion *****************
  2648 ;; Defined at:
  2649 ;;		line 149 in file "SensorValoresExactos.c"
  2650 ;; Parameters:    Size  Location     Type
  2651 ;;		None
  2652 ;; Auto vars:     Size  Location     Type
  2653 ;;		None
  2654 ;; Return value:  Size  Location     Type
  2655 ;;                  1    wreg      void 
  2656 ;; Registers used:
  2657 ;;		wreg, status,2
  2658 ;; Tracked objects:
  2659 ;;		On entry : 0/0
  2660 ;;		On exit  : 0/0
  2661 ;;		Unchanged: 0/0
  2662 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  2663 ;;      Params:         0       0       0       0       0       0       0       0       0
  2664 ;;      Locals:         0       0       0       0       0       0       0       0       0
  2665 ;;      Temps:          0       0       0       0       0       0       0       0       0
  2666 ;;      Totals:         0       0       0       0       0       0       0       0       0
  2667 ;;Total ram usage:        0 bytes
  2668 ;; Hardware stack levels used:    1
  2669 ;; This function calls:
  2670 ;;		Nothing
  2671 ;; This function is called by:
  2672 ;;		_main
  2673 ;; This function uses a non-reentrant model
  2674 ;;
  2675                           
  2676                           	psect	text11
  2677  004D2A                     __ptext11:
  2678                           	callstack 0
  2679  004D2A                     _Configuracion:
  2680                           	callstack 30
  2681  004D2A                     
  2682                           ;SensorValoresExactos.c: 158:     TRISA = 0b11111111;
  2683  004D2A  6892               	setf	146,c	;volatile
  2684  004D2C                     
  2685                           ;SensorValoresExactos.c: 159:  TRISD = 0b00000000;
  2686  004D2C  0E00               	movlw	0
  2687  004D2E  6E95               	movwf	149,c	;volatile
  2688                           
  2689                           ;SensorValoresExactos.c: 163:     OSCCON = 0b01101100;
  2690  004D30  0E6C               	movlw	108
  2691  004D32  6ED3               	movwf	211,c	;volatile
  2692  004D34                     
  2693                           ;SensorValoresExactos.c: 171:     ANSELAbits.ANSA3 = 0;
  2694  004D34  010F               	movlb	15	; () banked
  2695  004D36  975B               	bcf	91,3,b	;volatile
  2696  004D38                     
  2697                           ; BSR set to: 15
  2698                           ;SensorValoresExactos.c: 172:     ANSELAbits.ANSA1 = 0;
  2699  004D38  935B               	bcf	91,1,b	;volatile
  2700  004D3A                     
  2701                           ; BSR set to: 15
  2702                           ;SensorValoresExactos.c: 173:     ANSELAbits.ANSA5 = 0;
  2703  004D3A  9B5B               	bcf	91,5,b	;volatile
  2704  004D3C                     
  2705                           ; BSR set to: 15
  2706                           ;SensorValoresExactos.c: 174:     TRISCbits.RC6 = 0;
  2707  004D3C  9C94               	bcf	148,6,c	;volatile
  2708  004D3E                     
  2709                           ; BSR set to: 15
  2710                           ;SensorValoresExactos.c: 175:     ANSELCbits.ANSC6 = 0;
  2711  004D3E  9D5D               	bcf	93,6,b	;volatile
  2712  004D40                     
  2713                           ; BSR set to: 15
  2714                           ;SensorValoresExactos.c: 176:     LATCbits.LATC6=0;
  2715  004D40  9C8B               	bcf	139,6,c	;volatile
  2716                           
  2717                           ;SensorValoresExactos.c: 179:     TRISB = 0;
  2718  004D42  0E00               	movlw	0
  2719  004D44  6E93               	movwf	147,c	;volatile
  2720                           
  2721                           ;SensorValoresExactos.c: 180:     ANSELB = 0;
  2722  004D46  0E00               	movlw	0
  2723  004D48  6F5C               	movwf	92,b	;volatile
  2724                           
  2725                           ;SensorValoresExactos.c: 181:     LATB = 0;
  2726  004D4A  0E00               	movlw	0
  2727  004D4C  6E8A               	movwf	138,c	;volatile
  2728  004D4E                     
  2729                           ; BSR set to: 15
  2730  004D4E  0012               	return		;funcret
  2731  004D50                     __end_of_Configuracion:
  2732                           	callstack 0
  2733                           
  2734 ;; *************** function _Alarma_LED *****************
  2735 ;; Defined at:
  2736 ;;		line 440 in file "SensorValoresExactos.c"
  2737 ;; Parameters:    Size  Location     Type
  2738 ;;		None
  2739 ;; Auto vars:     Size  Location     Type
  2740 ;;  A               1    2[COMRAM] unsigned char 
  2741 ;; Return value:  Size  Location     Type
  2742 ;;                  1    wreg      void 
  2743 ;; Registers used:
  2744 ;;		wreg, status,2, status,0
  2745 ;; Tracked objects:
  2746 ;;		On entry : 0/0
  2747 ;;		On exit  : 0/0
  2748 ;;		Unchanged: 0/0
  2749 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  2750 ;;      Params:         0       0       0       0       0       0       0       0       0
  2751 ;;      Locals:         1       0       0       0       0       0       0       0       0
  2752 ;;      Temps:          2       0       0       0       0       0       0       0       0
  2753 ;;      Totals:         3       0       0       0       0       0       0       0       0
  2754 ;;Total ram usage:        3 bytes
  2755 ;; Hardware stack levels used:    1
  2756 ;; This function calls:
  2757 ;;		Nothing
  2758 ;; This function is called by:
  2759 ;;		_main
  2760 ;; This function uses a non-reentrant model
  2761 ;;
  2762                           
  2763                           	psect	text12
  2764  003E4E                     __ptext12:
  2765                           	callstack 0
  2766  003E4E                     _Alarma_LED:
  2767                           	callstack 30
  2768  003E4E                     
  2769                           ;SensorValoresExactos.c: 445:     if(DH == Decenas_Horas && UH == Unidades_Horas && DM =
      +                          = Decenas_Minutos && UM == Unidades_Minutos && DS == Decenas_Segundos && US == Unidades_
      +                          Segundos)
  2770  003E4E  0100               	movlb	0	; () banked
  2771  003E50  51F2               	movf	_Decenas_Horas& (0+255),w,b
  2772  003E52  19E4               	xorwf	_DH& (0+255),w,b
  2773  003E54  E107               	bnz	u6661
  2774  003E56  51F3               	movf	(_Decenas_Horas+1)& (0+255),w,b
  2775  003E58  19E5               	xorwf	(_DH+1)& (0+255),w,b
  2776  003E5A  A4D8               	btfss	status,2,c
  2777  003E5C  EF32  F01F         	goto	u6661
  2778  003E60  EF34  F01F         	goto	u6660
  2779  003E64                     u6661:
  2780  003E64  EF9A  F01F         	goto	l4994
  2781  003E68                     u6660:
  2782  003E68                     
  2783                           ; BSR set to: 0
  2784  003E68  51F4               	movf	_Unidades_Horas& (0+255),w,b
  2785  003E6A  19E2               	xorwf	_UH& (0+255),w,b
  2786  003E6C  E107               	bnz	u6671
  2787  003E6E  51F5               	movf	(_Unidades_Horas+1)& (0+255),w,b
  2788  003E70  19E3               	xorwf	(_UH+1)& (0+255),w,b
  2789  003E72  A4D8               	btfss	status,2,c
  2790  003E74  EF3E  F01F         	goto	u6671
  2791  003E78  EF40  F01F         	goto	u6670
  2792  003E7C                     u6671:
  2793  003E7C  EF9A  F01F         	goto	l4994
  2794  003E80                     u6670:
  2795  003E80                     
  2796                           ; BSR set to: 0
  2797  003E80  51EE               	movf	_Decenas_Minutos& (0+255),w,b
  2798  003E82  19E0               	xorwf	_DM& (0+255),w,b
  2799  003E84  E107               	bnz	u6681
  2800  003E86  51EF               	movf	(_Decenas_Minutos+1)& (0+255),w,b
  2801  003E88  19E1               	xorwf	(_DM+1)& (0+255),w,b
  2802  003E8A  A4D8               	btfss	status,2,c
  2803  003E8C  EF4A  F01F         	goto	u6681
  2804  003E90  EF4C  F01F         	goto	u6680
  2805  003E94                     u6681:
  2806  003E94  EF9A  F01F         	goto	l4994
  2807  003E98                     u6680:
  2808  003E98                     
  2809                           ; BSR set to: 0
  2810  003E98  51F0               	movf	_Unidades_Minutos& (0+255),w,b
  2811  003E9A  19DE               	xorwf	_UM& (0+255),w,b
  2812  003E9C  E107               	bnz	u6691
  2813  003E9E  51F1               	movf	(_Unidades_Minutos+1)& (0+255),w,b
  2814  003EA0  19DF               	xorwf	(_UM+1)& (0+255),w,b
  2815  003EA2  A4D8               	btfss	status,2,c
  2816  003EA4  EF56  F01F         	goto	u6691
  2817  003EA8  EF58  F01F         	goto	u6690
  2818  003EAC                     u6691:
  2819  003EAC  EF9A  F01F         	goto	l4994
  2820  003EB0                     u6690:
  2821  003EB0                     
  2822                           ; BSR set to: 0
  2823  003EB0  51EA               	movf	_Decenas_Segundos& (0+255),w,b
  2824  003EB2  19DC               	xorwf	_DS& (0+255),w,b
  2825  003EB4  E107               	bnz	u6701
  2826  003EB6  51EB               	movf	(_Decenas_Segundos+1)& (0+255),w,b
  2827  003EB8  19DD               	xorwf	(_DS+1)& (0+255),w,b
  2828  003EBA  A4D8               	btfss	status,2,c
  2829  003EBC  EF62  F01F         	goto	u6701
  2830  003EC0  EF64  F01F         	goto	u6700
  2831  003EC4                     u6701:
  2832  003EC4  EF9A  F01F         	goto	l4994
  2833  003EC8                     u6700:
  2834  003EC8                     
  2835                           ; BSR set to: 0
  2836  003EC8  51EC               	movf	_Unidades_Segundos& (0+255),w,b
  2837  003ECA  19DA               	xorwf	_US& (0+255),w,b
  2838  003ECC  E107               	bnz	u6711
  2839  003ECE  51ED               	movf	(_Unidades_Segundos+1)& (0+255),w,b
  2840  003ED0  19DB               	xorwf	(_US+1)& (0+255),w,b
  2841  003ED2  A4D8               	btfss	status,2,c
  2842  003ED4  EF6E  F01F         	goto	u6711
  2843  003ED8  EF70  F01F         	goto	u6710
  2844  003EDC                     u6711:
  2845  003EDC  EF9A  F01F         	goto	l4994
  2846  003EE0                     u6710:
  2847  003EE0                     
  2848                           ; BSR set to: 0
  2849                           ;SensorValoresExactos.c: 446:     {;SensorValoresExactos.c: 447:         char A = 10;
  2850  003EE0  0E0A               	movlw	10
  2851  003EE2  6E03               	movwf	Alarma_LED@A^0,c
  2852                           
  2853                           ;SensorValoresExactos.c: 448:         while(A)
  2854  003EE4  EF90  F01F         	goto	l4992
  2855  003EE8                     l175:
  2856                           
  2857                           ;SensorValoresExactos.c: 449:         {;SensorValoresExactos.c: 450:             PORTB =
      +                           0xFF;
  2858  003EE8  6881               	setf	129,c	;volatile
  2859  003EEA                     
  2860                           ;SensorValoresExactos.c: 451:             _delay((unsigned long)((100)*(8000000/4000.0))
      +                          );
  2861  003EEA  0E02               	movlw	2
  2862  003EEC  6E02               	movwf	(??_Alarma_LED+1)^0,c
  2863  003EEE  0E04               	movlw	4
  2864  003EF0  6E01               	movwf	??_Alarma_LED^0,c
  2865  003EF2  0EBA               	movlw	186
  2866  003EF4                     u6857:
  2867  003EF4  2EE8               	decfsz	wreg,f,c
  2868  003EF6  D7FE               	bra	u6857
  2869  003EF8  2E01               	decfsz	??_Alarma_LED^0,f,c
  2870  003EFA  D7FC               	bra	u6857
  2871  003EFC  2E02               	decfsz	(??_Alarma_LED+1)^0,f,c
  2872  003EFE  D7FA               	bra	u6857
  2873  003F00  D000               	nop2	
  2874  003F02                     
  2875                           ;SensorValoresExactos.c: 452:             PORTB = 0x00;
  2876  003F02  0E00               	movlw	0
  2877  003F04  6E81               	movwf	129,c	;volatile
  2878  003F06                     
  2879                           ;SensorValoresExactos.c: 453:             _delay((unsigned long)((100)*(8000000/4000.0))
      +                          );
  2880  003F06  0E02               	movlw	2
  2881  003F08  6E02               	movwf	(??_Alarma_LED+1)^0,c
  2882  003F0A  0E04               	movlw	4
  2883  003F0C  6E01               	movwf	??_Alarma_LED^0,c
  2884  003F0E  0EBA               	movlw	186
  2885  003F10                     u6867:
  2886  003F10  2EE8               	decfsz	wreg,f,c
  2887  003F12  D7FE               	bra	u6867
  2888  003F14  2E01               	decfsz	??_Alarma_LED^0,f,c
  2889  003F16  D7FC               	bra	u6867
  2890  003F18  2E02               	decfsz	(??_Alarma_LED+1)^0,f,c
  2891  003F1A  D7FA               	bra	u6867
  2892  003F1C  D000               	nop2	
  2893  003F1E                     
  2894                           ;SensorValoresExactos.c: 454:             A -= 1;
  2895  003F1E  0603               	decf	Alarma_LED@A^0,f,c
  2896  003F20                     l4992:
  2897                           
  2898                           ;SensorValoresExactos.c: 448:         while(A)
  2899  003F20  5003               	movf	Alarma_LED@A^0,w,c
  2900  003F22  A4D8               	btfss	status,2,c
  2901  003F24  EF96  F01F         	goto	u6721
  2902  003F28  EF98  F01F         	goto	u6720
  2903  003F2C                     u6721:
  2904  003F2C  EF74  F01F         	goto	l175
  2905  003F30                     u6720:
  2906  003F30  EFA8  F01F         	goto	l178
  2907  003F34                     l4994:
  2908                           
  2909                           ; BSR set to: 0
  2910                           ;SensorValoresExactos.c: 458:     {;SensorValoresExactos.c: 459:         PORTB = 0x00;
  2911  003F34  0E00               	movlw	0
  2912  003F36  6E81               	movwf	129,c	;volatile
  2913  003F38                     
  2914                           ; BSR set to: 0
  2915                           ;SensorValoresExactos.c: 460:         _delay((unsigned long)((100)*(8000000/4000.0)));
  2916  003F38  0E02               	movlw	2
  2917  003F3A  6E02               	movwf	(??_Alarma_LED+1)^0,c
  2918  003F3C  0E04               	movlw	4
  2919  003F3E  6E01               	movwf	??_Alarma_LED^0,c
  2920  003F40  0EBA               	movlw	186
  2921  003F42                     u6877:
  2922  003F42  2EE8               	decfsz	wreg,f,c
  2923  003F44  D7FE               	bra	u6877
  2924  003F46  2E01               	decfsz	??_Alarma_LED^0,f,c
  2925  003F48  D7FC               	bra	u6877
  2926  003F4A  2E02               	decfsz	(??_Alarma_LED+1)^0,f,c
  2927  003F4C  D7FA               	bra	u6877
  2928  003F4E  D000               	nop2	
  2929  003F50                     l178:
  2930  003F50  0012               	return		;funcret
  2931  003F52                     __end_of_Alarma_LED:
  2932                           	callstack 0
  2933                           
  2934 ;; *************** function _Alarma *****************
  2935 ;; Defined at:
  2936 ;;		line 368 in file "SensorValoresExactos.c"
  2937 ;; Parameters:    Size  Location     Type
  2938 ;;		None
  2939 ;; Auto vars:     Size  Location     Type
  2940 ;;		None
  2941 ;; Return value:  Size  Location     Type
  2942 ;;                  1    wreg      void 
  2943 ;; Registers used:
  2944 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  2945 ;; Tracked objects:
  2946 ;;		On entry : 0/0
  2947 ;;		On exit  : 0/0
  2948 ;;		Unchanged: 0/0
  2949 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  2950 ;;      Params:         0       0       0       0       0       0       0       0       0
  2951 ;;      Locals:         0       0       0       0       0       0       0       0       0
  2952 ;;      Temps:          0       2       0       0       0       0       0       0       0
  2953 ;;      Totals:         0       2       0       0       0       0       0       0       0
  2954 ;;Total ram usage:        2 bytes
  2955 ;; Hardware stack levels used:    1
  2956 ;; Hardware stack levels required when called:   10
  2957 ;; This function calls:
  2958 ;;		_Cronometro
  2959 ;;		___awdiv
  2960 ;;		___awmod
  2961 ;;		_printf
  2962 ;;		_putcm
  2963 ;; This function is called by:
  2964 ;;		_main
  2965 ;; This function uses a non-reentrant model
  2966 ;;
  2967                           
  2968                           	psect	text13
  2969  002C94                     __ptext13:
  2970                           	callstack 0
  2971  002C94                     _Alarma:
  2972                           	callstack 20
  2973  002C94                     
  2974                           ;SensorValoresExactos.c: 370:     if(PORTAbits.RA1 == 0)
  2975  002C94  B280               	btfsc	128,1,c	;volatile
  2976  002C96  EF4F  F016         	goto	u6591
  2977  002C9A  EF51  F016         	goto	u6590
  2978  002C9E                     u6591:
  2979  002C9E  EF65  F016         	goto	l158
  2980  002CA2                     u6590:
  2981  002CA2                     
  2982                           ;SensorValoresExactos.c: 371:     {;SensorValoresExactos.c: 372:         PORTCbits.RC6 =
      +                           0;
  2983  002CA2  9C82               	bcf	130,6,c	;volatile
  2984  002CA4                     
  2985                           ;SensorValoresExactos.c: 373:         _delay((unsigned long)((300)*(8000000/4000.0)));
  2986  002CA4  0E04               	movlw	4
  2987  002CA6  0100               	movlb	0	; () banked
  2988  002CA8  6FC9               	movwf	(??_Alarma+1)& (0+255),b
  2989  002CAA  0E0C               	movlw	12
  2990  002CAC  6FC8               	movwf	??_Alarma& (0+255),b
  2991  002CAE  0E33               	movlw	51
  2992  002CB0                     u6887:
  2993  002CB0  2EE8               	decfsz	wreg,f,c
  2994  002CB2  D7FE               	bra	u6887
  2995  002CB4  2FC8               	decfsz	??_Alarma& (0+255),f,b
  2996  002CB6  D7FC               	bra	u6887
  2997  002CB8  2FC9               	decfsz	(??_Alarma+1)& (0+255),f,b
  2998  002CBA  D7FA               	bra	u6887
  2999  002CBC  D000               	nop2	
  3000  002CBE                     
  3001                           ;SensorValoresExactos.c: 374:         INTCONbits.GIE = 0;
  3002  002CBE  9EF2               	bcf	242,7,c	;volatile
  3003  002CC0                     
  3004                           ;SensorValoresExactos.c: 375:         INTCONbits.TMR0IF = 0;
  3005  002CC0  94F2               	bcf	242,2,c	;volatile
  3006  002CC2                     
  3007                           ;SensorValoresExactos.c: 376:         Cronometro();
  3008  002CC2  EC03  F023         	call	_Cronometro	;wreg free
  3009                           
  3010                           ;SensorValoresExactos.c: 377:     }
  3011  002CC6  EF8B  F017         	goto	l170
  3012  002CCA                     l158:
  3013                           
  3014                           ;SensorValoresExactos.c: 379:     {;SensorValoresExactos.c: 380:         PORTCbits.RC6 =
      +                           1;
  3015  002CCA  8C82               	bsf	130,6,c	;volatile
  3016  002CCC                     
  3017                           ;SensorValoresExactos.c: 381:         _delay((unsigned long)((300)*(8000000/4000.0)));
  3018  002CCC  0E04               	movlw	4
  3019  002CCE  0100               	movlb	0	; () banked
  3020  002CD0  6FC9               	movwf	(??_Alarma+1)& (0+255),b
  3021  002CD2  0E0C               	movlw	12
  3022  002CD4  6FC8               	movwf	??_Alarma& (0+255),b
  3023  002CD6  0E33               	movlw	51
  3024  002CD8                     u6897:
  3025  002CD8  2EE8               	decfsz	wreg,f,c
  3026  002CDA  D7FE               	bra	u6897
  3027  002CDC  2FC8               	decfsz	??_Alarma& (0+255),f,b
  3028  002CDE  D7FC               	bra	u6897
  3029  002CE0  2FC9               	decfsz	(??_Alarma+1)& (0+255),f,b
  3030  002CE2  D7FA               	bra	u6897
  3031  002CE4  D000               	nop2	
  3032  002CE6                     
  3033                           ;SensorValoresExactos.c: 383:         putcm(0xC2);
  3034  002CE6  0EC2               	movlw	194
  3035  002CE8  ECD1  F025         	call	_putcm
  3036  002CEC                     
  3037                           ;SensorValoresExactos.c: 384:         printf(" Modo Alarma ");
  3038  002CEC  0E39               	movlw	low STR_5
  3039  002CEE  0100               	movlb	0	; () banked
  3040  002CF0  6FB6               	movwf	printf@fmt& (0+255),b
  3041  002CF2  0E08               	movlw	high STR_5
  3042  002CF4  6FB7               	movwf	(printf@fmt+1)& (0+255),b
  3043  002CF6  EC81  F026         	call	_printf	;wreg free
  3044  002CFA                     
  3045                           ;SensorValoresExactos.c: 385:         _delay((unsigned long)((1000)*(8000000/4000.0)));
  3046  002CFA  0E0B               	movlw	11
  3047  002CFC  0100               	movlb	0	; () banked
  3048  002CFE  6FC9               	movwf	(??_Alarma+1)& (0+255),b
  3049  002D00  0E26               	movlw	38
  3050  002D02  6FC8               	movwf	??_Alarma& (0+255),b
  3051  002D04  0E5D               	movlw	93
  3052  002D06                     u6907:
  3053  002D06  2EE8               	decfsz	wreg,f,c
  3054  002D08  D7FE               	bra	u6907
  3055  002D0A  2FC8               	decfsz	??_Alarma& (0+255),f,b
  3056  002D0C  D7FC               	bra	u6907
  3057  002D0E  2FC9               	decfsz	(??_Alarma+1)& (0+255),f,b
  3058  002D10  D7FA               	bra	u6907
  3059  002D12  D000               	nop2	
  3060  002D14                     
  3061                           ;SensorValoresExactos.c: 387:         INTCONbits.GIE = 1;
  3062  002D14  8EF2               	bsf	242,7,c	;volatile
  3063  002D16                     
  3064                           ;SensorValoresExactos.c: 388:         INTCONbits.PEIE = 1;
  3065  002D16  8CF2               	bsf	242,6,c	;volatile
  3066                           
  3067                           ;SensorValoresExactos.c: 389:         while(PORTAbits.RA1 == 1)
  3068  002D18  EF79  F017         	goto	l4962
  3069  002D1C                     l162:
  3070                           
  3071                           ;SensorValoresExactos.c: 393:             if(PORTAbits.RA3 == 1)
  3072  002D1C  A680               	btfss	128,3,c	;volatile
  3073  002D1E  EF93  F016         	goto	u6601
  3074  002D22  EF95  F016         	goto	u6600
  3075  002D26                     u6601:
  3076  002D26  EFD9  F016         	goto	l163
  3077  002D2A                     u6600:
  3078  002D2A                     
  3079                           ;SensorValoresExactos.c: 394:    {;SensorValoresExactos.c: 395:                 DH = HOR
      +                          A / 10;
  3080  002D2A  C0E8  F006         	movff	_HORA,___awdiv@dividend
  3081  002D2E  C0E9  F007         	movff	_HORA+1,___awdiv@dividend+1
  3082  002D32  0E00               	movlw	0
  3083  002D34  6E09               	movwf	(___awdiv@divisor+1)^0,c
  3084  002D36  0E0A               	movlw	10
  3085  002D38  6E08               	movwf	___awdiv@divisor^0,c
  3086  002D3A  EC49  F022         	call	___awdiv	;wreg free
  3087  002D3E  C006  F0E4         	movff	?___awdiv,_DH
  3088  002D42  C007  F0E5         	movff	?___awdiv+1,_DH+1
  3089                           
  3090                           ;SensorValoresExactos.c: 396:                 UH = HORA % 10;
  3091  002D46  C0E8  F001         	movff	_HORA,___awmod@dividend
  3092  002D4A  C0E9  F002         	movff	_HORA+1,___awmod@dividend+1
  3093  002D4E  0E00               	movlw	0
  3094  002D50  6E04               	movwf	(___awmod@divisor+1)^0,c
  3095  002D52  0E0A               	movlw	10
  3096  002D54  6E03               	movwf	___awmod@divisor^0,c
  3097  002D56  ECAB  F022         	call	___awmod	;wreg free
  3098  002D5A  C001  F0E2         	movff	?___awmod,_UH
  3099  002D5E  C002  F0E3         	movff	?___awmod+1,_UH+1
  3100  002D62                     
  3101                           ;SensorValoresExactos.c: 397:                 _delay((unsigned long)((500)*(8000000/4000
      +                          .0)));
  3102  002D62  0E06               	movlw	6
  3103  002D64  0100               	movlb	0	; () banked
  3104  002D66  6FC9               	movwf	(??_Alarma+1)& (0+255),b
  3105  002D68  0E13               	movlw	19
  3106  002D6A  6FC8               	movwf	??_Alarma& (0+255),b
  3107  002D6C  0EAD               	movlw	173
  3108  002D6E                     u6917:
  3109  002D6E  2EE8               	decfsz	wreg,f,c
  3110  002D70  D7FE               	bra	u6917
  3111  002D72  2FC8               	decfsz	??_Alarma& (0+255),f,b
  3112  002D74  D7FC               	bra	u6917
  3113  002D76  2FC9               	decfsz	(??_Alarma+1)& (0+255),f,b
  3114  002D78  D7FA               	bra	u6917
  3115  002D7A  D000               	nop2	
  3116  002D7C                     
  3117                           ;SensorValoresExactos.c: 398:                 HORA = HORA + 1;
  3118  002D7C  0E01               	movlw	1
  3119  002D7E  0100               	movlb	0	; () banked
  3120  002D80  25E8               	addwf	_HORA& (0+255),w,b
  3121  002D82  6FE8               	movwf	_HORA& (0+255),b
  3122  002D84  0E00               	movlw	0
  3123  002D86  21E9               	addwfc	(_HORA+1)& (0+255),w,b
  3124  002D88  6FE9               	movwf	(_HORA+1)& (0+255),b
  3125  002D8A                     
  3126                           ; BSR set to: 0
  3127                           ;SensorValoresExactos.c: 399:                 if(HORA > 23)
  3128  002D8A  BFE9               	btfsc	(_HORA+1)& (0+255),7,b
  3129  002D8C  EFD1  F016         	goto	u6611
  3130  002D90  51E9               	movf	(_HORA+1)& (0+255),w,b
  3131  002D92  E109               	bnz	u6610
  3132  002D94  0E18               	movlw	24
  3133  002D96  5DE8               	subwf	_HORA& (0+255),w,b
  3134  002D98  A0D8               	btfss	status,0,c
  3135  002D9A  EFD1  F016         	goto	u6611
  3136  002D9E  EFD3  F016         	goto	u6610
  3137  002DA2                     u6611:
  3138  002DA2  EF8E  F016         	goto	l162
  3139  002DA6                     u6610:
  3140  002DA6                     
  3141                           ; BSR set to: 0
  3142                           ;SensorValoresExactos.c: 400:                 {;SensorValoresExactos.c: 401:            
      +                                   HORA=0;
  3143  002DA6  0E00               	movlw	0
  3144  002DA8  6FE9               	movwf	(_HORA+1)& (0+255),b
  3145  002DAA  0E00               	movlw	0
  3146  002DAC  6FE8               	movwf	_HORA& (0+255),b
  3147  002DAE  EF8E  F016         	goto	l162
  3148  002DB2                     l163:
  3149                           
  3150                           ;SensorValoresExactos.c: 406:    if(PORTAbits.RA5 == 1)
  3151  002DB2  AA80               	btfss	128,5,c	;volatile
  3152  002DB4  EFDE  F016         	goto	u6621
  3153  002DB8  EFE0  F016         	goto	u6620
  3154  002DBC                     u6621:
  3155  002DBC  EF24  F017         	goto	l4952
  3156  002DC0                     u6620:
  3157  002DC0                     
  3158                           ;SensorValoresExactos.c: 407:             {;SensorValoresExactos.c: 408:                
      +                           DM = MINUTO / 10;
  3159  002DC0  C0E6  F006         	movff	_MINUTO,___awdiv@dividend
  3160  002DC4  C0E7  F007         	movff	_MINUTO+1,___awdiv@dividend+1
  3161  002DC8  0E00               	movlw	0
  3162  002DCA  6E09               	movwf	(___awdiv@divisor+1)^0,c
  3163  002DCC  0E0A               	movlw	10
  3164  002DCE  6E08               	movwf	___awdiv@divisor^0,c
  3165  002DD0  EC49  F022         	call	___awdiv	;wreg free
  3166  002DD4  C006  F0E0         	movff	?___awdiv,_DM
  3167  002DD8  C007  F0E1         	movff	?___awdiv+1,_DM+1
  3168                           
  3169                           ;SensorValoresExactos.c: 409:                 UM = MINUTO % 10;
  3170  002DDC  C0E6  F001         	movff	_MINUTO,___awmod@dividend
  3171  002DE0  C0E7  F002         	movff	_MINUTO+1,___awmod@dividend+1
  3172  002DE4  0E00               	movlw	0
  3173  002DE6  6E04               	movwf	(___awmod@divisor+1)^0,c
  3174  002DE8  0E0A               	movlw	10
  3175  002DEA  6E03               	movwf	___awmod@divisor^0,c
  3176  002DEC  ECAB  F022         	call	___awmod	;wreg free
  3177  002DF0  C001  F0DE         	movff	?___awmod,_UM
  3178  002DF4  C002  F0DF         	movff	?___awmod+1,_UM+1
  3179  002DF8                     
  3180                           ;SensorValoresExactos.c: 410:                 _delay((unsigned long)((500)*(8000000/4000
      +                          .0)));
  3181  002DF8  0E06               	movlw	6
  3182  002DFA  0100               	movlb	0	; () banked
  3183  002DFC  6FC9               	movwf	(??_Alarma+1)& (0+255),b
  3184  002DFE  0E13               	movlw	19
  3185  002E00  6FC8               	movwf	??_Alarma& (0+255),b
  3186  002E02  0EAD               	movlw	173
  3187  002E04                     u6927:
  3188  002E04  2EE8               	decfsz	wreg,f,c
  3189  002E06  D7FE               	bra	u6927
  3190  002E08  2FC8               	decfsz	??_Alarma& (0+255),f,b
  3191  002E0A  D7FC               	bra	u6927
  3192  002E0C  2FC9               	decfsz	(??_Alarma+1)& (0+255),f,b
  3193  002E0E  D7FA               	bra	u6927
  3194  002E10  D000               	nop2	
  3195  002E12                     
  3196                           ;SensorValoresExactos.c: 411:                 MINUTO = MINUTO + 1;
  3197  002E12  0E01               	movlw	1
  3198  002E14  0100               	movlb	0	; () banked
  3199  002E16  25E6               	addwf	_MINUTO& (0+255),w,b
  3200  002E18  6FE6               	movwf	_MINUTO& (0+255),b
  3201  002E1A  0E00               	movlw	0
  3202  002E1C  21E7               	addwfc	(_MINUTO+1)& (0+255),w,b
  3203  002E1E  6FE7               	movwf	(_MINUTO+1)& (0+255),b
  3204  002E20                     
  3205                           ; BSR set to: 0
  3206                           ;SensorValoresExactos.c: 412:                 if(MINUTO > 59)
  3207  002E20  BFE7               	btfsc	(_MINUTO+1)& (0+255),7,b
  3208  002E22  EF1C  F017         	goto	u6631
  3209  002E26  51E7               	movf	(_MINUTO+1)& (0+255),w,b
  3210  002E28  E109               	bnz	u6630
  3211  002E2A  0E3C               	movlw	60
  3212  002E2C  5DE6               	subwf	_MINUTO& (0+255),w,b
  3213  002E2E  A0D8               	btfss	status,0,c
  3214  002E30  EF1C  F017         	goto	u6631
  3215  002E34  EF1E  F017         	goto	u6630
  3216  002E38                     u6631:
  3217  002E38  EF8E  F016         	goto	l162
  3218  002E3C                     u6630:
  3219  002E3C                     
  3220                           ; BSR set to: 0
  3221                           ;SensorValoresExactos.c: 413:                 {;SensorValoresExactos.c: 414:            
      +                                   MINUTO = 0;
  3222  002E3C  0E00               	movlw	0
  3223  002E3E  6FE7               	movwf	(_MINUTO+1)& (0+255),b
  3224  002E40  0E00               	movlw	0
  3225  002E42  6FE6               	movwf	_MINUTO& (0+255),b
  3226  002E44  EF8E  F016         	goto	l162
  3227  002E48                     l4952:
  3228                           
  3229                           ;SensorValoresExactos.c: 419:             if(HORA < 12)
  3230  002E48  0100               	movlb	0	; () banked
  3231  002E4A  BFE9               	btfsc	(_HORA+1)& (0+255),7,b
  3232  002E4C  EF33  F017         	goto	u6640
  3233  002E50  51E9               	movf	(_HORA+1)& (0+255),w,b
  3234  002E52  E107               	bnz	u6641
  3235  002E54  0E0C               	movlw	12
  3236  002E56  5DE8               	subwf	_HORA& (0+255),w,b
  3237  002E58  B0D8               	btfsc	status,0,c
  3238  002E5A  EF31  F017         	goto	u6641
  3239  002E5E  EF33  F017         	goto	u6640
  3240  002E62                     u6641:
  3241  002E62  EF57  F017         	goto	l4958
  3242  002E66                     u6640:
  3243  002E66                     
  3244                           ; BSR set to: 0
  3245                           ;SensorValoresExactos.c: 420:             {;SensorValoresExactos.c: 421:                
      +                           putcm(0xC2);
  3246  002E66  0EC2               	movlw	194
  3247  002E68  ECD1  F025         	call	_putcm
  3248  002E6C                     
  3249                           ;SensorValoresExactos.c: 422:                 printf("%d%d:%d%d:%d%d A.M",DH, UH, DM, UM
      +                          , DS, US);
  3250  002E6C  0E01               	movlw	low STR_3
  3251  002E6E  0100               	movlb	0	; () banked
  3252  002E70  6FB6               	movwf	printf@fmt& (0+255),b
  3253  002E72  0E08               	movlw	high STR_3
  3254  002E74  6FB7               	movwf	(printf@fmt+1)& (0+255),b
  3255  002E76  C0E4  F0B8         	movff	_DH,?_printf+2
  3256  002E7A  C0E5  F0B9         	movff	_DH+1,?_printf+3
  3257  002E7E  C0E2  F0BA         	movff	_UH,?_printf+4
  3258  002E82  C0E3  F0BB         	movff	_UH+1,?_printf+5
  3259  002E86  C0E0  F0BC         	movff	_DM,?_printf+6
  3260  002E8A  C0E1  F0BD         	movff	_DM+1,?_printf+7
  3261  002E8E  C0DE  F0BE         	movff	_UM,?_printf+8
  3262  002E92  C0DF  F0BF         	movff	_UM+1,?_printf+9
  3263  002E96  C0DC  F0C0         	movff	_DS,?_printf+10
  3264  002E9A  C0DD  F0C1         	movff	_DS+1,?_printf+11
  3265  002E9E  C0DA  F0C2         	movff	_US,?_printf+12
  3266  002EA2  C0DB  F0C3         	movff	_US+1,?_printf+13
  3267  002EA6  EC81  F026         	call	_printf	;wreg free
  3268                           
  3269                           ;SensorValoresExactos.c: 423:             }
  3270  002EAA  EF79  F017         	goto	l4962
  3271  002EAE                     l4958:
  3272                           
  3273                           ; BSR set to: 0
  3274                           ;SensorValoresExactos.c: 425:             {;SensorValoresExactos.c: 426:                
      +                           putcm(0xC2);
  3275  002EAE  0EC2               	movlw	194
  3276  002EB0  ECD1  F025         	call	_putcm
  3277  002EB4                     
  3278                           ;SensorValoresExactos.c: 427:                 printf("%d%d:%d%d:%d%d P.M",DH, UH, DM, UM
      +                          , DS, US);
  3279  002EB4  0E14               	movlw	low STR_4
  3280  002EB6  0100               	movlb	0	; () banked
  3281  002EB8  6FB6               	movwf	printf@fmt& (0+255),b
  3282  002EBA  0E08               	movlw	high STR_4
  3283  002EBC  6FB7               	movwf	(printf@fmt+1)& (0+255),b
  3284  002EBE  C0E4  F0B8         	movff	_DH,?_printf+2
  3285  002EC2  C0E5  F0B9         	movff	_DH+1,?_printf+3
  3286  002EC6  C0E2  F0BA         	movff	_UH,?_printf+4
  3287  002ECA  C0E3  F0BB         	movff	_UH+1,?_printf+5
  3288  002ECE  C0E0  F0BC         	movff	_DM,?_printf+6
  3289  002ED2  C0E1  F0BD         	movff	_DM+1,?_printf+7
  3290  002ED6  C0DE  F0BE         	movff	_UM,?_printf+8
  3291  002EDA  C0DF  F0BF         	movff	_UM+1,?_printf+9
  3292  002EDE  C0DC  F0C0         	movff	_DS,?_printf+10
  3293  002EE2  C0DD  F0C1         	movff	_DS+1,?_printf+11
  3294  002EE6  C0DA  F0C2         	movff	_US,?_printf+12
  3295  002EEA  C0DB  F0C3         	movff	_US+1,?_printf+13
  3296  002EEE  EC81  F026         	call	_printf	;wreg free
  3297  002EF2                     l4962:
  3298                           
  3299                           ;SensorValoresExactos.c: 389:         while(PORTAbits.RA1 == 1)
  3300  002EF2  B280               	btfsc	128,1,c	;volatile
  3301  002EF4  EF7E  F017         	goto	u6651
  3302  002EF8  EF80  F017         	goto	u6650
  3303  002EFC                     u6651:
  3304  002EFC  EF8E  F016         	goto	l162
  3305  002F00                     u6650:
  3306  002F00                     
  3307                           ;SensorValoresExactos.c: 430:   DS = 0;
  3308  002F00  0E00               	movlw	0
  3309  002F02  0100               	movlb	0	; () banked
  3310  002F04  6FDD               	movwf	(_DS+1)& (0+255),b
  3311  002F06  0E00               	movlw	0
  3312  002F08  6FDC               	movwf	_DS& (0+255),b
  3313                           
  3314                           ;SensorValoresExactos.c: 431:   US = 0;
  3315  002F0A  0E00               	movlw	0
  3316  002F0C  6FDB               	movwf	(_US+1)& (0+255),b
  3317  002F0E  0E00               	movlw	0
  3318  002F10  6FDA               	movwf	_US& (0+255),b
  3319  002F12                     
  3320                           ; BSR set to: 0
  3321                           ;SensorValoresExactos.c: 433:         INTCONbits.GIE = 1;
  3322  002F12  8EF2               	bsf	242,7,c	;volatile
  3323  002F14                     
  3324                           ; BSR set to: 0
  3325                           ;SensorValoresExactos.c: 434:         INTCONbits.PEIE = 1;
  3326  002F14  8CF2               	bsf	242,6,c	;volatile
  3327  002F16                     l170:
  3328  002F16  0012               	return		;funcret
  3329  002F18                     __end_of_Alarma:
  3330                           	callstack 0
  3331                           
  3332 ;; *************** function _Cronometro *****************
  3333 ;; Defined at:
  3334 ;;		line 345 in file "SensorValoresExactos.c"
  3335 ;; Parameters:    Size  Location     Type
  3336 ;;		None
  3337 ;; Auto vars:     Size  Location     Type
  3338 ;;		None
  3339 ;; Return value:  Size  Location     Type
  3340 ;;                  1    wreg      void 
  3341 ;; Registers used:
  3342 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  3343 ;; Tracked objects:
  3344 ;;		On entry : 0/0
  3345 ;;		On exit  : 0/0
  3346 ;;		Unchanged: 0/0
  3347 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  3348 ;;      Params:         0       0       0       0       0       0       0       0       0
  3349 ;;      Locals:         0       0       0       0       0       0       0       0       0
  3350 ;;      Temps:          2       0       0       0       0       0       0       0       0
  3351 ;;      Totals:         2       0       0       0       0       0       0       0       0
  3352 ;;Total ram usage:        2 bytes
  3353 ;; Hardware stack levels used:    1
  3354 ;; Hardware stack levels required when called:    9
  3355 ;; This function calls:
  3356 ;;		_Mostrar_Reloj
  3357 ;; This function is called by:
  3358 ;;		_Alarma
  3359 ;; This function uses a non-reentrant model
  3360 ;;
  3361                           
  3362                           	psect	text14
  3363  004606                     __ptext14:
  3364                           	callstack 0
  3365  004606                     _Cronometro:
  3366                           	callstack 20
  3367  004606                     
  3368                           ;SensorValoresExactos.c: 347:     Mostrar_Reloj();
  3369  004606  ECFA  F01D         	call	_Mostrar_Reloj	;wreg free
  3370  00460A                     
  3371                           ;SensorValoresExactos.c: 348:     segundos = segundos + 1;
  3372  00460A  0E01               	movlw	1
  3373  00460C  0100               	movlb	0	; () banked
  3374  00460E  25F6               	addwf	_segundos& (0+255),w,b
  3375  004610  6FF6               	movwf	_segundos& (0+255),b
  3376  004612  0E00               	movlw	0
  3377  004614  21F7               	addwfc	(_segundos+1)& (0+255),w,b
  3378  004616  6FF7               	movwf	(_segundos+1)& (0+255),b
  3379  004618                     
  3380                           ; BSR set to: 0
  3381                           ;SensorValoresExactos.c: 349:  if(segundos > 59)
  3382  004618  BFF7               	btfsc	(_segundos+1)& (0+255),7,b
  3383  00461A  EF18  F023         	goto	u6451
  3384  00461E  51F7               	movf	(_segundos+1)& (0+255),w,b
  3385  004620  E109               	bnz	u6450
  3386  004622  0E3C               	movlw	60
  3387  004624  5DF6               	subwf	_segundos& (0+255),w,b
  3388  004626  A0D8               	btfss	status,0,c
  3389  004628  EF18  F023         	goto	u6451
  3390  00462C  EF1A  F023         	goto	u6450
  3391  004630                     u6451:
  3392  004630  EF4E  F023         	goto	l4778
  3393  004634                     u6450:
  3394  004634                     
  3395                           ; BSR set to: 0
  3396                           ;SensorValoresExactos.c: 350:  {;SensorValoresExactos.c: 351:   segundos = 0;
  3397  004634  0E00               	movlw	0
  3398  004636  6FF7               	movwf	(_segundos+1)& (0+255),b
  3399  004638  0E00               	movlw	0
  3400  00463A  6FF6               	movwf	_segundos& (0+255),b
  3401  00463C                     
  3402                           ; BSR set to: 0
  3403                           ;SensorValoresExactos.c: 352:   minutos = minutos + 1;
  3404  00463C  0E01               	movlw	1
  3405  00463E  25FA               	addwf	_minutos& (0+255),w,b
  3406  004640  6FFA               	movwf	_minutos& (0+255),b
  3407  004642  0E00               	movlw	0
  3408  004644  21FB               	addwfc	(_minutos+1)& (0+255),w,b
  3409  004646  6FFB               	movwf	(_minutos+1)& (0+255),b
  3410  004648                     
  3411                           ; BSR set to: 0
  3412                           ;SensorValoresExactos.c: 353:   if(minutos > 59)
  3413  004648  BFFB               	btfsc	(_minutos+1)& (0+255),7,b
  3414  00464A  EF30  F023         	goto	u6461
  3415  00464E  51FB               	movf	(_minutos+1)& (0+255),w,b
  3416  004650  E109               	bnz	u6460
  3417  004652  0E3C               	movlw	60
  3418  004654  5DFA               	subwf	_minutos& (0+255),w,b
  3419  004656  A0D8               	btfss	status,0,c
  3420  004658  EF30  F023         	goto	u6461
  3421  00465C  EF32  F023         	goto	u6460
  3422  004660                     u6461:
  3423  004660  EF4E  F023         	goto	l4778
  3424  004664                     u6460:
  3425  004664                     
  3426                           ; BSR set to: 0
  3427                           ;SensorValoresExactos.c: 354:   {;SensorValoresExactos.c: 355:    minutos = 0;
  3428  004664  0E00               	movlw	0
  3429  004666  6FFB               	movwf	(_minutos+1)& (0+255),b
  3430  004668  0E00               	movlw	0
  3431  00466A  6FFA               	movwf	_minutos& (0+255),b
  3432  00466C                     
  3433                           ; BSR set to: 0
  3434                           ;SensorValoresExactos.c: 356:    horas = horas + 1;
  3435  00466C  0E01               	movlw	1
  3436  00466E  25F8               	addwf	_horas& (0+255),w,b
  3437  004670  6FF8               	movwf	_horas& (0+255),b
  3438  004672  0E00               	movlw	0
  3439  004674  21F9               	addwfc	(_horas+1)& (0+255),w,b
  3440  004676  6FF9               	movwf	(_horas+1)& (0+255),b
  3441  004678                     
  3442                           ; BSR set to: 0
  3443                           ;SensorValoresExactos.c: 357:    if(horas > 23)
  3444  004678  BFF9               	btfsc	(_horas+1)& (0+255),7,b
  3445  00467A  EF48  F023         	goto	u6471
  3446  00467E  51F9               	movf	(_horas+1)& (0+255),w,b
  3447  004680  E109               	bnz	u6470
  3448  004682  0E18               	movlw	24
  3449  004684  5DF8               	subwf	_horas& (0+255),w,b
  3450  004686  A0D8               	btfss	status,0,c
  3451  004688  EF48  F023         	goto	u6471
  3452  00468C  EF4A  F023         	goto	u6470
  3453  004690                     u6471:
  3454  004690  EF4E  F023         	goto	l4778
  3455  004694                     u6470:
  3456  004694                     
  3457                           ; BSR set to: 0
  3458                           ;SensorValoresExactos.c: 358:    {;SensorValoresExactos.c: 359:     horas=0;
  3459  004694  0E00               	movlw	0
  3460  004696  6FF9               	movwf	(_horas+1)& (0+255),b
  3461  004698  0E00               	movlw	0
  3462  00469A  6FF8               	movwf	_horas& (0+255),b
  3463  00469C                     l4778:
  3464                           
  3465                           ; BSR set to: 0
  3466                           ;SensorValoresExactos.c: 363:     _delay((unsigned long)((1000)*(8000000/4000.0)));
  3467  00469C  0E0B               	movlw	11
  3468  00469E  6E5F               	movwf	(??_Cronometro+1)^0,c
  3469  0046A0  0E26               	movlw	38
  3470  0046A2  6E5E               	movwf	??_Cronometro^0,c
  3471  0046A4  0E5E               	movlw	94
  3472  0046A6                     u6937:
  3473  0046A6  2EE8               	decfsz	wreg,f,c
  3474  0046A8  D7FE               	bra	u6937
  3475  0046AA  2E5E               	decfsz	??_Cronometro^0,f,c
  3476  0046AC  D7FC               	bra	u6937
  3477  0046AE  2E5F               	decfsz	(??_Cronometro+1)^0,f,c
  3478  0046B0  D7FA               	bra	u6937
  3479  0046B2  0012               	return		;funcret
  3480  0046B4                     __end_of_Cronometro:
  3481                           	callstack 0
  3482                           
  3483 ;; *************** function _Mostrar_Reloj *****************
  3484 ;; Defined at:
  3485 ;;		line 319 in file "SensorValoresExactos.c"
  3486 ;; Parameters:    Size  Location     Type
  3487 ;;		None
  3488 ;; Auto vars:     Size  Location     Type
  3489 ;;		None
  3490 ;; Return value:  Size  Location     Type
  3491 ;;                  1    wreg      void 
  3492 ;; Registers used:
  3493 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  3494 ;; Tracked objects:
  3495 ;;		On entry : 0/0
  3496 ;;		On exit  : 0/0
  3497 ;;		Unchanged: 0/0
  3498 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  3499 ;;      Params:         0       0       0       0       0       0       0       0       0
  3500 ;;      Locals:         0       0       0       0       0       0       0       0       0
  3501 ;;      Temps:          0       0       0       0       0       0       0       0       0
  3502 ;;      Totals:         0       0       0       0       0       0       0       0       0
  3503 ;;Total ram usage:        0 bytes
  3504 ;; Hardware stack levels used:    1
  3505 ;; Hardware stack levels required when called:    8
  3506 ;; This function calls:
  3507 ;;		___awdiv
  3508 ;;		___awmod
  3509 ;;		_printf
  3510 ;;		_putcm
  3511 ;; This function is called by:
  3512 ;;		_Cronometro
  3513 ;; This function uses a non-reentrant model
  3514 ;;
  3515                           
  3516                           	psect	text15
  3517  003BF4                     __ptext15:
  3518                           	callstack 0
  3519  003BF4                     _Mostrar_Reloj:
  3520                           	callstack 20
  3521  003BF4                     
  3522                           ;SensorValoresExactos.c: 322:  Decenas_Horas = horas / 10;
  3523  003BF4  C0F8  F006         	movff	_horas,___awdiv@dividend
  3524  003BF8  C0F9  F007         	movff	_horas+1,___awdiv@dividend+1
  3525  003BFC  0E00               	movlw	0
  3526  003BFE  6E09               	movwf	(___awdiv@divisor+1)^0,c
  3527  003C00  0E0A               	movlw	10
  3528  003C02  6E08               	movwf	___awdiv@divisor^0,c
  3529  003C04  EC49  F022         	call	___awdiv	;wreg free
  3530  003C08  C006  F0F2         	movff	?___awdiv,_Decenas_Horas
  3531  003C0C  C007  F0F3         	movff	?___awdiv+1,_Decenas_Horas+1
  3532                           
  3533                           ;SensorValoresExactos.c: 323:  Unidades_Horas = horas % 10;
  3534  003C10  C0F8  F001         	movff	_horas,___awmod@dividend
  3535  003C14  C0F9  F002         	movff	_horas+1,___awmod@dividend+1
  3536  003C18  0E00               	movlw	0
  3537  003C1A  6E04               	movwf	(___awmod@divisor+1)^0,c
  3538  003C1C  0E0A               	movlw	10
  3539  003C1E  6E03               	movwf	___awmod@divisor^0,c
  3540  003C20  ECAB  F022         	call	___awmod	;wreg free
  3541  003C24  C001  F0F4         	movff	?___awmod,_Unidades_Horas
  3542  003C28  C002  F0F5         	movff	?___awmod+1,_Unidades_Horas+1
  3543                           
  3544                           ;SensorValoresExactos.c: 324:  Decenas_Minutos = minutos / 10;
  3545  003C2C  C0FA  F006         	movff	_minutos,___awdiv@dividend
  3546  003C30  C0FB  F007         	movff	_minutos+1,___awdiv@dividend+1
  3547  003C34  0E00               	movlw	0
  3548  003C36  6E09               	movwf	(___awdiv@divisor+1)^0,c
  3549  003C38  0E0A               	movlw	10
  3550  003C3A  6E08               	movwf	___awdiv@divisor^0,c
  3551  003C3C  EC49  F022         	call	___awdiv	;wreg free
  3552  003C40  C006  F0EE         	movff	?___awdiv,_Decenas_Minutos
  3553  003C44  C007  F0EF         	movff	?___awdiv+1,_Decenas_Minutos+1
  3554                           
  3555                           ;SensorValoresExactos.c: 325:  Unidades_Minutos = minutos % 10;
  3556  003C48  C0FA  F001         	movff	_minutos,___awmod@dividend
  3557  003C4C  C0FB  F002         	movff	_minutos+1,___awmod@dividend+1
  3558  003C50  0E00               	movlw	0
  3559  003C52  6E04               	movwf	(___awmod@divisor+1)^0,c
  3560  003C54  0E0A               	movlw	10
  3561  003C56  6E03               	movwf	___awmod@divisor^0,c
  3562  003C58  ECAB  F022         	call	___awmod	;wreg free
  3563  003C5C  C001  F0F0         	movff	?___awmod,_Unidades_Minutos
  3564  003C60  C002  F0F1         	movff	?___awmod+1,_Unidades_Minutos+1
  3565                           
  3566                           ;SensorValoresExactos.c: 326:  Decenas_Segundos = segundos / 10;
  3567  003C64  C0F6  F006         	movff	_segundos,___awdiv@dividend
  3568  003C68  C0F7  F007         	movff	_segundos+1,___awdiv@dividend+1
  3569  003C6C  0E00               	movlw	0
  3570  003C6E  6E09               	movwf	(___awdiv@divisor+1)^0,c
  3571  003C70  0E0A               	movlw	10
  3572  003C72  6E08               	movwf	___awdiv@divisor^0,c
  3573  003C74  EC49  F022         	call	___awdiv	;wreg free
  3574  003C78  C006  F0EA         	movff	?___awdiv,_Decenas_Segundos
  3575  003C7C  C007  F0EB         	movff	?___awdiv+1,_Decenas_Segundos+1
  3576                           
  3577                           ;SensorValoresExactos.c: 327:  Unidades_Segundos = segundos % 10;
  3578  003C80  C0F6  F001         	movff	_segundos,___awmod@dividend
  3579  003C84  C0F7  F002         	movff	_segundos+1,___awmod@dividend+1
  3580  003C88  0E00               	movlw	0
  3581  003C8A  6E04               	movwf	(___awmod@divisor+1)^0,c
  3582  003C8C  0E0A               	movlw	10
  3583  003C8E  6E03               	movwf	___awmod@divisor^0,c
  3584  003C90  ECAB  F022         	call	___awmod	;wreg free
  3585  003C94  C001  F0EC         	movff	?___awmod,_Unidades_Segundos
  3586  003C98  C002  F0ED         	movff	?___awmod+1,_Unidades_Segundos+1
  3587  003C9C                     
  3588                           ;SensorValoresExactos.c: 333:     if(horas < 12)
  3589  003C9C  0100               	movlb	0	; () banked
  3590  003C9E  BFF9               	btfsc	(_horas+1)& (0+255),7,b
  3591  003CA0  EF5D  F01E         	goto	u6320
  3592  003CA4  51F9               	movf	(_horas+1)& (0+255),w,b
  3593  003CA6  E107               	bnz	u6321
  3594  003CA8  0E0C               	movlw	12
  3595  003CAA  5DF8               	subwf	_horas& (0+255),w,b
  3596  003CAC  B0D8               	btfsc	status,0,c
  3597  003CAE  EF5B  F01E         	goto	u6321
  3598  003CB2  EF5D  F01E         	goto	u6320
  3599  003CB6                     u6321:
  3600  003CB6  EF81  F01E         	goto	l4680
  3601  003CBA                     u6320:
  3602  003CBA                     
  3603                           ; BSR set to: 0
  3604                           ;SensorValoresExactos.c: 334:     {;SensorValoresExactos.c: 335:         putcm(0xC2);
  3605  003CBA  0EC2               	movlw	194
  3606  003CBC  ECD1  F025         	call	_putcm
  3607  003CC0                     
  3608                           ;SensorValoresExactos.c: 336:         printf("%d%d:%d%d:%d%d A.M",Decenas_Horas, Unidade
      +                          s_Horas, Decenas_Minutos, Unidades_Minutos, Decenas_Segundos, Unidades_Segundos);
  3609  003CC0  0E01               	movlw	low STR_3
  3610  003CC2  0100               	movlb	0	; () banked
  3611  003CC4  6FB6               	movwf	printf@fmt& (0+255),b
  3612  003CC6  0E08               	movlw	high STR_3
  3613  003CC8  6FB7               	movwf	(printf@fmt+1)& (0+255),b
  3614  003CCA  C0F2  F0B8         	movff	_Decenas_Horas,?_printf+2
  3615  003CCE  C0F3  F0B9         	movff	_Decenas_Horas+1,?_printf+3
  3616  003CD2  C0F4  F0BA         	movff	_Unidades_Horas,?_printf+4
  3617  003CD6  C0F5  F0BB         	movff	_Unidades_Horas+1,?_printf+5
  3618  003CDA  C0EE  F0BC         	movff	_Decenas_Minutos,?_printf+6
  3619  003CDE  C0EF  F0BD         	movff	_Decenas_Minutos+1,?_printf+7
  3620  003CE2  C0F0  F0BE         	movff	_Unidades_Minutos,?_printf+8
  3621  003CE6  C0F1  F0BF         	movff	_Unidades_Minutos+1,?_printf+9
  3622  003CEA  C0EA  F0C0         	movff	_Decenas_Segundos,?_printf+10
  3623  003CEE  C0EB  F0C1         	movff	_Decenas_Segundos+1,?_printf+11
  3624  003CF2  C0EC  F0C2         	movff	_Unidades_Segundos,?_printf+12
  3625  003CF6  C0ED  F0C3         	movff	_Unidades_Segundos+1,?_printf+13
  3626  003CFA  EC81  F026         	call	_printf	;wreg free
  3627                           
  3628                           ;SensorValoresExactos.c: 337:  }
  3629  003CFE  EFA3  F01E         	goto	l149
  3630  003D02                     l4680:
  3631                           
  3632                           ; BSR set to: 0
  3633                           ;SensorValoresExactos.c: 339:     {;SensorValoresExactos.c: 340:         putcm(0xC2);
  3634  003D02  0EC2               	movlw	194
  3635  003D04  ECD1  F025         	call	_putcm
  3636  003D08                     
  3637                           ;SensorValoresExactos.c: 341:         printf("%d%d:%d%d:%d%d P.M",Decenas_Horas, Unidade
      +                          s_Horas, Decenas_Minutos, Unidades_Minutos, Decenas_Segundos, Unidades_Segundos);
  3638  003D08  0E14               	movlw	low STR_4
  3639  003D0A  0100               	movlb	0	; () banked
  3640  003D0C  6FB6               	movwf	printf@fmt& (0+255),b
  3641  003D0E  0E08               	movlw	high STR_4
  3642  003D10  6FB7               	movwf	(printf@fmt+1)& (0+255),b
  3643  003D12  C0F2  F0B8         	movff	_Decenas_Horas,?_printf+2
  3644  003D16  C0F3  F0B9         	movff	_Decenas_Horas+1,?_printf+3
  3645  003D1A  C0F4  F0BA         	movff	_Unidades_Horas,?_printf+4
  3646  003D1E  C0F5  F0BB         	movff	_Unidades_Horas+1,?_printf+5
  3647  003D22  C0EE  F0BC         	movff	_Decenas_Minutos,?_printf+6
  3648  003D26  C0EF  F0BD         	movff	_Decenas_Minutos+1,?_printf+7
  3649  003D2A  C0F0  F0BE         	movff	_Unidades_Minutos,?_printf+8
  3650  003D2E  C0F1  F0BF         	movff	_Unidades_Minutos+1,?_printf+9
  3651  003D32  C0EA  F0C0         	movff	_Decenas_Segundos,?_printf+10
  3652  003D36  C0EB  F0C1         	movff	_Decenas_Segundos+1,?_printf+11
  3653  003D3A  C0EC  F0C2         	movff	_Unidades_Segundos,?_printf+12
  3654  003D3E  C0ED  F0C3         	movff	_Unidades_Segundos+1,?_printf+13
  3655  003D42  EC81  F026         	call	_printf	;wreg free
  3656  003D46                     l149:
  3657  003D46  0012               	return		;funcret
  3658  003D48                     __end_of_Mostrar_Reloj:
  3659                           	callstack 0
  3660                           
  3661 ;; *************** function _putcm *****************
  3662 ;; Defined at:
  3663 ;;		line 232 in file "SensorValoresExactos.c"
  3664 ;; Parameters:    Size  Location     Type
  3665 ;;  data            1    wreg     unsigned char 
  3666 ;; Auto vars:     Size  Location     Type
  3667 ;;  data            1    1[COMRAM] unsigned char 
  3668 ;;  Activa          1    2[COMRAM] unsigned char 
  3669 ;; Return value:  Size  Location     Type
  3670 ;;                  1    wreg      void 
  3671 ;; Registers used:
  3672 ;;		wreg, status,2, status,0
  3673 ;; Tracked objects:
  3674 ;;		On entry : 0/0
  3675 ;;		On exit  : 0/0
  3676 ;;		Unchanged: 0/0
  3677 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  3678 ;;      Params:         0       0       0       0       0       0       0       0       0
  3679 ;;      Locals:         2       0       0       0       0       0       0       0       0
  3680 ;;      Temps:          1       0       0       0       0       0       0       0       0
  3681 ;;      Totals:         3       0       0       0       0       0       0       0       0
  3682 ;;Total ram usage:        3 bytes
  3683 ;; Hardware stack levels used:    1
  3684 ;; This function calls:
  3685 ;;		Nothing
  3686 ;; This function is called by:
  3687 ;;		_InicializaLCD
  3688 ;;		_SensorLM35
  3689 ;;		_Mostrar_Reloj
  3690 ;;		_Alarma
  3691 ;; This function uses a non-reentrant model
  3692 ;;
  3693                           
  3694                           	psect	text16
  3695  004BA2                     __ptext16:
  3696                           	callstack 0
  3697  004BA2                     _putcm:
  3698                           	callstack 29
  3699                           
  3700                           ;incstack = 0
  3701                           ;putcm@data stored from wreg
  3702  004BA2  6E02               	movwf	putcm@data^0,c
  3703  004BA4                     
  3704                           ;SensorValoresExactos.c: 232: void putcm(char data);SensorValoresExactos.c: 233: {;Senso
      +                          rValoresExactos.c: 234:     char Activa;;SensorValoresExactos.c: 235:     Activa = data 
      +                          & 0xF0;
  3705  004BA4  5002               	movf	putcm@data^0,w,c
  3706  004BA6  0BF0               	andlw	240
  3707  004BA8  6E03               	movwf	putcm@Activa^0,c
  3708                           
  3709                           ;SensorValoresExactos.c: 236:     LATD = Activa | 0x04;
  3710  004BAA  5003               	movf	putcm@Activa^0,w,c
  3711  004BAC  0904               	iorlw	4
  3712  004BAE  6E8C               	movwf	140,c	;volatile
  3713  004BB0                     
  3714                           ;SensorValoresExactos.c: 237:     _delay((unsigned long)((10)*(8000000/4000000.0)));
  3715  004BB0  0E06               	movlw	6
  3716  004BB2                     u6947:
  3717  004BB2  2EE8               	decfsz	wreg,f,c
  3718  004BB4  D7FE               	bra	u6947
  3719  004BB6  D000               	nop2	
  3720  004BB8                     
  3721                           ;SensorValoresExactos.c: 238:     LATD = Activa;
  3722  004BB8  C003  FF8C         	movff	putcm@Activa,3980	;volatile
  3723  004BBC                     
  3724                           ;SensorValoresExactos.c: 239:     _delay((unsigned long)((1)*(8000000/4000.0)));
  3725  004BBC  0E03               	movlw	3
  3726  004BBE  6E01               	movwf	??_putcm^0,c
  3727  004BC0  0E98               	movlw	152
  3728  004BC2                     u6957:
  3729  004BC2  2EE8               	decfsz	wreg,f,c
  3730  004BC4  D7FE               	bra	u6957
  3731  004BC6  2E01               	decfsz	??_putcm^0,f,c
  3732  004BC8  D7FC               	bra	u6957
  3733                           
  3734                           ;SensorValoresExactos.c: 240:     Activa = (unsigned char)(data << 4);
  3735  004BCA  3802               	swapf	putcm@data^0,w,c
  3736  004BCC  0BF0               	andlw	240
  3737  004BCE  6E03               	movwf	putcm@Activa^0,c
  3738                           
  3739                           ;SensorValoresExactos.c: 241:     LATD = Activa | 0x04;
  3740  004BD0  5003               	movf	putcm@Activa^0,w,c
  3741  004BD2  0904               	iorlw	4
  3742  004BD4  6E8C               	movwf	140,c	;volatile
  3743  004BD6                     
  3744                           ;SensorValoresExactos.c: 242:     _delay((unsigned long)((10)*(8000000/4000000.0)));
  3745  004BD6  0E06               	movlw	6
  3746  004BD8                     u6967:
  3747  004BD8  2EE8               	decfsz	wreg,f,c
  3748  004BDA  D7FE               	bra	u6967
  3749  004BDC  D000               	nop2	
  3750  004BDE                     
  3751                           ;SensorValoresExactos.c: 243:     LATD = Activa;
  3752  004BDE  C003  FF8C         	movff	putcm@Activa,3980	;volatile
  3753  004BE2  0012               	return		;funcret
  3754  004BE4                     __end_of_putcm:
  3755                           	callstack 0
  3756                           
  3757 ;; *************** function _printf *****************
  3758 ;; Defined at:
  3759 ;;		line 5 in file "/Applications/microchip/xc8/v2.31/pic/sources/c99/common/printf.c"
  3760 ;; Parameters:    Size  Location     Type
  3761 ;;  fmt             2   86[BANK0 ] PTR const unsigned char 
  3762 ;;		 -> STR_7(19), STR_6(19), STR_5(14), STR_4(19), 
  3763 ;;		 -> STR_3(19), Valores(16), 
  3764 ;; Auto vars:     Size  Location     Type
  3765 ;;  ap              2  102[BANK0 ] PTR void [1]
  3766 ;;		 -> ?_printf(2), ?_sprintf(2), 
  3767 ;;  ret             2    0        int 
  3768 ;; Return value:  Size  Location     Type
  3769 ;;                  2   86[BANK0 ] int 
  3770 ;; Registers used:
  3771 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  3772 ;; Tracked objects:
  3773 ;;		On entry : 0/0
  3774 ;;		On exit  : 0/0
  3775 ;;		Unchanged: 0/0
  3776 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  3777 ;;      Params:         0      14       0       0       0       0       0       0       0
  3778 ;;      Locals:         0       4       0       0       0       0       0       0       0
  3779 ;;      Temps:          0       0       0       0       0       0       0       0       0
  3780 ;;      Totals:         0      18       0       0       0       0       0       0       0
  3781 ;;Total ram usage:       18 bytes
  3782 ;; Hardware stack levels used:    1
  3783 ;; Hardware stack levels required when called:    7
  3784 ;; This function calls:
  3785 ;;		_vfprintf
  3786 ;; This function is called by:
  3787 ;;		_SensorLM35
  3788 ;;		_Mostrar_Reloj
  3789 ;;		_Alarma
  3790 ;; This function uses a non-reentrant model
  3791 ;;
  3792                           
  3793                           	psect	text17
  3794  004D02                     __ptext17:
  3795                           	callstack 0
  3796  004D02                     _printf:
  3797                           	callstack 22
  3798  004D02  0EB8               	movlw	low (?_printf+2)
  3799  004D04  0100               	movlb	0	; () banked
  3800  004D06  6FC6               	movwf	printf@ap& (0+255),b
  3801  004D08  0E00               	movlw	high (?_printf+2)
  3802  004D0A  6FC7               	movwf	(printf@ap+1)& (0+255),b
  3803  004D0C                     
  3804                           ; BSR set to: 0
  3805  004D0C  0E00               	movlw	0
  3806  004D0E  6FB0               	movwf	vfprintf@fp& (0+255),b
  3807  004D10  0E00               	movlw	0
  3808  004D12  6FB1               	movwf	(vfprintf@fp+1)& (0+255),b
  3809  004D14  C0B6  F0B2         	movff	printf@fmt,vfprintf@fmt
  3810  004D18  C0B7  F0B3         	movff	printf@fmt+1,vfprintf@fmt+1
  3811  004D1C  0EC6               	movlw	low printf@ap
  3812  004D1E  6FB4               	movwf	vfprintf@ap& (0+255),b
  3813  004D20  0E00               	movlw	high printf@ap
  3814  004D22  6FB5               	movwf	(vfprintf@ap+1)& (0+255),b
  3815  004D24  ECF3  F023         	call	_vfprintf	;wreg free
  3816  004D28  0012               	return		;funcret
  3817  004D2A                     __end_of_printf:
  3818                           	callstack 0
  3819                           
  3820 ;; *************** function _vfprintf *****************
  3821 ;; Defined at:
  3822 ;;		line 1390 in file "/Applications/microchip/xc8/v2.31/pic/sources/c99/common/doprnt.c"
  3823 ;; Parameters:    Size  Location     Type
  3824 ;;  fp              2   80[BANK0 ] PTR struct _IO_FILE
  3825 ;;		 -> NULL(0), sprintf@f(6), 
  3826 ;;  fmt             2   82[BANK0 ] PTR const unsigned char 
  3827 ;;		 -> STR_7(19), STR_6(19), STR_5(14), STR_4(19), 
  3828 ;;		 -> STR_3(19), STR_2(18), STR_1(18), Valores(16), 
  3829 ;;  ap              2   84[BANK0 ] PTR PTR void 
  3830 ;;		 -> printf@ap(2), sprintf@ap(2), 
  3831 ;; Auto vars:     Size  Location     Type
  3832 ;;  cfmt            2   91[COMRAM] PTR unsigned char 
  3833 ;;		 -> STR_7(19), STR_6(19), STR_5(14), STR_4(19), 
  3834 ;;		 -> STR_3(19), STR_2(18), STR_1(18), Valores(16), 
  3835 ;; Return value:  Size  Location     Type
  3836 ;;                  2   80[BANK0 ] int 
  3837 ;; Registers used:
  3838 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  3839 ;; Tracked objects:
  3840 ;;		On entry : 0/0
  3841 ;;		On exit  : 0/0
  3842 ;;		Unchanged: 0/0
  3843 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  3844 ;;      Params:         0       6       0       0       0       0       0       0       0
  3845 ;;      Locals:         2       0       0       0       0       0       0       0       0
  3846 ;;      Temps:          0       0       0       0       0       0       0       0       0
  3847 ;;      Totals:         2       6       0       0       0       0       0       0       0
  3848 ;;Total ram usage:        8 bytes
  3849 ;; Hardware stack levels used:    1
  3850 ;; Hardware stack levels required when called:    6
  3851 ;; This function calls:
  3852 ;;		_vfpfcnvrt
  3853 ;; This function is called by:
  3854 ;;		_sprintf
  3855 ;;		_printf
  3856 ;; This function uses a non-reentrant model
  3857 ;;
  3858                           
  3859                           	psect	text18
  3860  0047E6                     __ptext18:
  3861                           	callstack 0
  3862  0047E6                     _vfprintf:
  3863                           	callstack 22
  3864  0047E6                     
  3865                           ;/Applications/microchip/xc8/v2.31/pic/sources/c99/common/doprnt.c: 1390: int vfprintf(F
      +                          ILE *fp, const char *fmt, va_list ap);/Applications/microchip/xc8/v2.31/pic/sources/c99/
      +                          common/doprnt.c: 1391: {;/Applications/microchip/xc8/v2.31/pic/sources/c99/common/doprnt
      +                          .c: 1393:     char *cfmt;;/Applications/microchip/xc8/v2.31/pic/sources/c99/common/doprn
      +                          t.c: 1395:     cfmt = (char *)fmt;
  3866  0047E6  C0B2  F05C         	movff	vfprintf@fmt,vfprintf@cfmt
  3867  0047EA  C0B3  F05D         	movff	vfprintf@fmt+1,vfprintf@cfmt+1
  3868  0047EE                     
  3869                           ;/Applications/microchip/xc8/v2.31/pic/sources/c99/common/doprnt.c: 1396:     nout = 0;
  3870  0047EE  0E00               	movlw	0
  3871  0047F0  0100               	movlb	0	; () banked
  3872  0047F2  6FD3               	movwf	(_nout+1)& (0+255),b
  3873  0047F4  0E00               	movlw	0
  3874  0047F6  6FD2               	movwf	_nout& (0+255),b
  3875                           
  3876                           ;/Applications/microchip/xc8/v2.31/pic/sources/c99/common/doprnt.c: 1397:     while (*cf
      +                          mt) {
  3877  0047F8  EF11  F024         	goto	l4644
  3878  0047FC                     l4642:
  3879                           
  3880                           ;/Applications/microchip/xc8/v2.31/pic/sources/c99/common/doprnt.c: 1398:         nout +
      +                          = vfpfcnvrt(fp, &cfmt, ap);
  3881  0047FC  C0B0  F052         	movff	vfprintf@fp,vfpfcnvrt@fp
  3882  004800  C0B1  F053         	movff	vfprintf@fp+1,vfpfcnvrt@fp+1
  3883  004804  0E5C               	movlw	low vfprintf@cfmt
  3884  004806  6E54               	movwf	vfpfcnvrt@fmt^0,c
  3885  004808  0E00               	movlw	high vfprintf@cfmt
  3886  00480A  6E55               	movwf	(vfpfcnvrt@fmt+1)^0,c
  3887  00480C  C0B4  F056         	movff	vfprintf@ap,vfpfcnvrt@ap
  3888  004810  C0B5  F057         	movff	vfprintf@ap+1,vfpfcnvrt@ap+1
  3889  004814  EC5A  F00A         	call	_vfpfcnvrt	;wreg free
  3890  004818  5052               	movf	?_vfpfcnvrt^0,w,c
  3891  00481A  0100               	movlb	0	; () banked
  3892  00481C  27D2               	addwf	_nout& (0+255),f,b
  3893  00481E  5053               	movf	(?_vfpfcnvrt+1)^0,w,c
  3894  004820  23D3               	addwfc	(_nout+1)& (0+255),f,b
  3895  004822                     l4644:
  3896                           
  3897                           ; BSR set to: 0
  3898                           ;/Applications/microchip/xc8/v2.31/pic/sources/c99/common/doprnt.c: 1397:     while (*cf
      +                          mt) {
  3899  004822  C05C  FFF6         	movff	vfprintf@cfmt,tblptrl
  3900  004826  C05D  FFF7         	movff	vfprintf@cfmt+1,tblptrh
  3901  00482A  6AF8               	clrf	tblptru,c
  3902  00482C  0E07               	movlw	(high __ramtop+-1)
  3903  00482E  64F7               	cpfsgt	tblptrh,c
  3904  004830  D003               	bra	u6307
  3905  004832  0008               	tblrd		*
  3906  004834  50F5               	movf	tablat,w,c
  3907  004836  D005               	bra	u6300
  3908  004838                     u6307:
  3909  004838  CFF6 FFE1          	movff	tblptrl,fsr1l
  3910  00483C  CFF7 FFE2          	movff	tblptrh,fsr1h
  3911  004840  50E7               	movf	indf1,w,c
  3912  004842                     u6300:
  3913  004842  0900               	iorlw	0
  3914  004844  A4D8               	btfss	status,2,c
  3915  004846  EF27  F024         	goto	u6311
  3916  00484A  EF29  F024         	goto	u6310
  3917  00484E                     u6311:
  3918  00484E  EFFE  F023         	goto	l4642
  3919  004852                     u6310:
  3920  004852                     
  3921                           ;/Applications/microchip/xc8/v2.31/pic/sources/c99/common/doprnt.c: 1400:     return nou
      +                          t;
  3922  004852  C0D2  F0B0         	movff	_nout,?_vfprintf
  3923  004856  C0D3  F0B1         	movff	_nout+1,?_vfprintf+1
  3924  00485A  0012               	return		;funcret
  3925  00485C                     __end_of_vfprintf:
  3926                           	callstack 0
  3927                           
  3928 ;; *************** function _vfpfcnvrt *****************
  3929 ;; Defined at:
  3930 ;;		line 692 in file "/Applications/microchip/xc8/v2.31/pic/sources/c99/common/doprnt.c"
  3931 ;; Parameters:    Size  Location     Type
  3932 ;;  fp              2   81[COMRAM] PTR struct _IO_FILE
  3933 ;;		 -> NULL(0), sprintf@f(6), 
  3934 ;;  fmt             2   83[COMRAM] PTR PTR unsigned char 
  3935 ;;		 -> vfprintf@cfmt(2), 
  3936 ;;  ap              2   85[COMRAM] PTR PTR void 
  3937 ;;		 -> printf@ap(2), sprintf@ap(2), 
  3938 ;; Auto vars:     Size  Location     Type
  3939 ;;  ll              8   56[BANK0 ] long long 
  3940 ;;  llu             8    0        unsigned long long 
  3941 ;;  f               4   72[BANK0 ] unsigned long long 
  3942 ;;  ct              3   76[BANK0 ] unsigned char [3]
  3943 ;;  cp              3    0        PTR unsigned char 
  3944 ;;  vp              2   64[BANK0 ] PTR void 
  3945 ;;		 -> ?_printf(2), ?_sprintf(2), 
  3946 ;;  i               2    0        int 
  3947 ;;  done            2    0        int 
  3948 ;;  c               1   79[BANK0 ] unsigned char 
  3949 ;; Return value:  Size  Location     Type
  3950 ;;                  2   81[COMRAM] int 
  3951 ;; Registers used:
  3952 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  3953 ;; Tracked objects:
  3954 ;;		On entry : 0/0
  3955 ;;		On exit  : 0/0
  3956 ;;		Unchanged: 0/0
  3957 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  3958 ;;      Params:         6       0       0       0       0       0       0       0       0
  3959 ;;      Locals:         0      24       0       0       0       0       0       0       0
  3960 ;;      Temps:          4       0       0       0       0       0       0       0       0
  3961 ;;      Totals:        10      24       0       0       0       0       0       0       0
  3962 ;;Total ram usage:       34 bytes
  3963 ;; Hardware stack levels used:    1
  3964 ;; Hardware stack levels required when called:    5
  3965 ;; This function calls:
  3966 ;;		_atoi
  3967 ;;		_ctoa
  3968 ;;		_dtoa
  3969 ;;		_efgtoa
  3970 ;;		_fputc
  3971 ;;		_isdigit
  3972 ;;		_isupper
  3973 ;;		_strncmp
  3974 ;;		_tolower
  3975 ;; This function is called by:
  3976 ;;		_vfprintf
  3977 ;; This function uses a non-reentrant model
  3978 ;;
  3979                           
  3980                           	psect	text19
  3981  0014B4                     __ptext19:
  3982                           	callstack 0
  3983  0014B4                     _vfpfcnvrt:
  3984                           	callstack 22
  3985  0014B4                     
  3986                           ;/Applications/microchip/xc8/v2.31/pic/sources/c99/common/doprnt.c: 692: static int vfpf
      +                          cnvrt(FILE *fp, char *fmt[], va_list ap);/Applications/microchip/xc8/v2.31/pic/sources/c
      +                          99/common/doprnt.c: 693: {;/Applications/microchip/xc8/v2.31/pic/sources/c99/common/dopr
      +                          nt.c: 694:     char c, *cp, ct[3];;/Applications/microchip/xc8/v2.31/pic/sources/c99/com
      +                          mon/doprnt.c: 695:     int done, i;;/Applications/microchip/xc8/v2.31/pic/sources/c99/co
      +                          mmon/doprnt.c: 696:     long long ll;;/Applications/microchip/xc8/v2.31/pic/sources/c99/
      +                          common/doprnt.c: 697:     unsigned long long llu;
  3987  0014B4  C054  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  3988  0014B8  C055  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  3989  0014BC  CFDE FFF6          	movff	postinc2,tblptrl
  3990  0014C0  CFDE FFF7          	movff	postinc2,tblptrh
  3991  0014C4  0E07               	movlw	(high __ramtop+-1)
  3992  0014C6  64F7               	cpfsgt	tblptrh,c
  3993  0014C8  D003               	bra	u5897
  3994  0014CA  0008               	tblrd		*
  3995  0014CC  50F5               	movf	tablat,w,c
  3996  0014CE  D005               	bra	u5890
  3997  0014D0                     u5897:
  3998  0014D0  CFF6 FFE1          	movff	tblptrl,fsr1l
  3999  0014D4  CFF7 FFE2          	movff	tblptrh,fsr1h
  4000  0014D8  50E7               	movf	indf1,w,c
  4001  0014DA                     u5890:
  4002  0014DA  0A25               	xorlw	37
  4003  0014DC  A4D8               	btfss	status,2,c
  4004  0014DE  EF73  F00A         	goto	u5901
  4005  0014E2  EF75  F00A         	goto	u5900
  4006  0014E6                     u5901:
  4007  0014E6  EF6F  F00E         	goto	l4630
  4008  0014EA                     u5900:
  4009  0014EA                     
  4010                           ;/Applications/microchip/xc8/v2.31/pic/sources/c99/common/doprnt.c: 703:         ++*fmt;
  4011  0014EA  C054  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  4012  0014EE  C055  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  4013  0014F2  2ADE               	incf	postinc2,f,c
  4014  0014F4  0E00               	movlw	0
  4015  0014F6  22DD               	addwfc	postdec2,f,c
  4016  0014F8                     
  4017                           ;/Applications/microchip/xc8/v2.31/pic/sources/c99/common/doprnt.c: 705:         flags =
      +                           width = 0;
  4018  0014F8  0E00               	movlw	0
  4019  0014FA  0100               	movlb	0	; () banked
  4020  0014FC  6FD5               	movwf	(_width+1)& (0+255),b
  4021  0014FE  0E00               	movlw	0
  4022  001500  6FD4               	movwf	_width& (0+255),b
  4023  001502  C0D4  F0D8         	movff	_width,_flags
  4024  001506  C0D5  F0D9         	movff	_width+1,_flags+1
  4025  00150A                     
  4026                           ; BSR set to: 0
  4027                           ;/Applications/microchip/xc8/v2.31/pic/sources/c99/common/doprnt.c: 706:         prec = 
      +                          -1;
  4028  00150A  69D6               	setf	_prec& (0+255),b
  4029  00150C  69D7               	setf	(_prec+1)& (0+255),b
  4030  00150E                     
  4031                           ; BSR set to: 0
  4032                           ;/Applications/microchip/xc8/v2.31/pic/sources/c99/common/doprnt.c: 745:         if ((*f
      +                          mt)[0] == '*') {
  4033  00150E  C054  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  4034  001512  C055  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  4035  001516  CFDE FFF6          	movff	postinc2,tblptrl
  4036  00151A  CFDE FFF7          	movff	postinc2,tblptrh
  4037  00151E  0E07               	movlw	(high __ramtop+-1)
  4038  001520  64F7               	cpfsgt	tblptrh,c
  4039  001522  D003               	bra	u5917
  4040  001524  0008               	tblrd		*
  4041  001526  50F5               	movf	tablat,w,c
  4042  001528  D005               	bra	u5910
  4043  00152A                     u5917:
  4044  00152A  CFF6 FFE1          	movff	tblptrl,fsr1l
  4045  00152E  CFF7 FFE2          	movff	tblptrh,fsr1h
  4046  001532  50E7               	movf	indf1,w,c
  4047  001534                     u5910:
  4048  001534  0A2A               	xorlw	42
  4049  001536  A4D8               	btfss	status,2,c
  4050  001538  EFA0  F00A         	goto	u5921
  4051  00153C  EFA2  F00A         	goto	u5920
  4052  001540                     u5921:
  4053  001540  EFCC  F00A         	goto	l4518
  4054  001544                     u5920:
  4055  001544                     
  4056                           ;/Applications/microchip/xc8/v2.31/pic/sources/c99/common/doprnt.c: 746:             ++*
      +                          fmt;
  4057  001544  C054  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  4058  001548  C055  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  4059  00154C  2ADE               	incf	postinc2,f,c
  4060  00154E  0E00               	movlw	0
  4061  001550  22DD               	addwfc	postdec2,f,c
  4062                           
  4063                           ;/Applications/microchip/xc8/v2.31/pic/sources/c99/common/doprnt.c: 747:             wid
      +                          th = (*(int *)__va_arg(*(int **)ap, (int)0));
  4064  001552  C056  FFD9         	movff	vfpfcnvrt@ap,fsr2l
  4065  001556  C057  FFDA         	movff	vfpfcnvrt@ap+1,fsr2h
  4066  00155A  CFDF F058          	movff	indf2,??_vfpfcnvrt
  4067  00155E  0E02               	movlw	2
  4068  001560  26DE               	addwf	postinc2,f,c
  4069  001562  CFDF F059          	movff	indf2,??_vfpfcnvrt+1
  4070  001566  0E00               	movlw	0
  4071  001568  22DD               	addwfc	postdec2,f,c
  4072  00156A  C058  FFD9         	movff	??_vfpfcnvrt,fsr2l
  4073  00156E  C059  FFDA         	movff	??_vfpfcnvrt+1,fsr2h
  4074  001572  CFDE F0D4          	movff	postinc2,_width
  4075  001576  CFDD F0D5          	movff	postdec2,_width+1
  4076  00157A                     
  4077                           ;/Applications/microchip/xc8/v2.31/pic/sources/c99/common/doprnt.c: 748:             if 
      +                          (width < 0) {
  4078  00157A  0100               	movlb	0	; () banked
  4079  00157C  BFD5               	btfsc	(_width+1)& (0+255),7,b
  4080  00157E  EFC5  F00A         	goto	u5930
  4081  001582  EFC3  F00A         	goto	u5931
  4082  001586                     u5931:
  4083  001586  EF19  F00B         	goto	l4528
  4084  00158A                     u5930:
  4085  00158A                     
  4086                           ; BSR set to: 0
  4087                           ;/Applications/microchip/xc8/v2.31/pic/sources/c99/common/doprnt.c: 749:                
      +                           flags |= (1 << 0);
  4088  00158A  81D8               	bsf	_flags& (0+255),0,b
  4089                           
  4090                           ;/Applications/microchip/xc8/v2.31/pic/sources/c99/common/doprnt.c: 750:                
      +                           width = -width;
  4091  00158C  6DD4               	negf	_width& (0+255),b
  4092  00158E  1FD5               	comf	(_width+1)& (0+255),f,b
  4093  001590  B0D8               	btfsc	status,0,c
  4094  001592  2BD5               	incf	(_width+1)& (0+255),f,b
  4095  001594  EF19  F00B         	goto	l4528
  4096  001598                     l4518:
  4097                           
  4098                           ;/Applications/microchip/xc8/v2.31/pic/sources/c99/common/doprnt.c: 753:             wid
      +                          th = atoi(*fmt);
  4099  001598  C054  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  4100  00159C  C055  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  4101  0015A0  CFDE F008          	movff	postinc2,atoi@s
  4102  0015A4  CFDD F009          	movff	postdec2,atoi@s+1
  4103  0015A8  ECAE  F01A         	call	_atoi	;wreg free
  4104  0015AC  C008  F0D4         	movff	?_atoi,_width
  4105  0015B0  C009  F0D5         	movff	?_atoi+1,_width+1
  4106                           
  4107                           ;/Applications/microchip/xc8/v2.31/pic/sources/c99/common/doprnt.c: 754:             whi
      +                          le ((0 ? isdigit((*fmt)[0]) : ((unsigned)((*fmt)[0])-'0') < 10)) {
  4108  0015B4  EFE3  F00A         	goto	l4522
  4109  0015B8                     l4520:
  4110                           
  4111                           ; BSR set to: 0
  4112                           ;/Applications/microchip/xc8/v2.31/pic/sources/c99/common/doprnt.c: 755:                
      +                           ++*fmt;
  4113  0015B8  C054  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  4114  0015BC  C055  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  4115  0015C0  2ADE               	incf	postinc2,f,c
  4116  0015C2  0E00               	movlw	0
  4117  0015C4  22DD               	addwfc	postdec2,f,c
  4118  0015C6                     l4522:
  4119  0015C6  0ED0               	movlw	208
  4120  0015C8  6E58               	movwf	??_vfpfcnvrt^0,c
  4121  0015CA  0EFF               	movlw	255
  4122  0015CC  6E59               	movwf	(??_vfpfcnvrt+1)^0,c
  4123  0015CE  C054  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  4124  0015D2  C055  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  4125  0015D6  CFDE FFF6          	movff	postinc2,tblptrl
  4126  0015DA  CFDE FFF7          	movff	postinc2,tblptrh
  4127  0015DE  0E07               	movlw	(high __ramtop+-1)
  4128  0015E0  64F7               	cpfsgt	tblptrh,c
  4129  0015E2  D003               	bra	u5947
  4130  0015E4  0008               	tblrd		*
  4131  0015E6  50F5               	movf	tablat,w,c
  4132  0015E8  D005               	bra	u5940
  4133  0015EA                     u5947:
  4134  0015EA  CFF6 FFE1          	movff	tblptrl,fsr1l
  4135  0015EE  CFF7 FFE2          	movff	tblptrh,fsr1h
  4136  0015F2  50E7               	movf	indf1,w,c
  4137  0015F4                     u5940:
  4138  0015F4  6E5A               	movwf	(??_vfpfcnvrt+2)^0,c
  4139  0015F6  6A5B               	clrf	(??_vfpfcnvrt+3)^0,c
  4140  0015F8  5058               	movf	??_vfpfcnvrt^0,w,c
  4141  0015FA  265A               	addwf	(??_vfpfcnvrt+2)^0,f,c
  4142  0015FC  5059               	movf	(??_vfpfcnvrt+1)^0,w,c
  4143  0015FE  225B               	addwfc	(??_vfpfcnvrt+3)^0,f,c
  4144  001600  505B               	movf	(??_vfpfcnvrt+3)^0,w,c
  4145  001602  E10A               	bnz	u5950
  4146  001604  0E0A               	movlw	10
  4147  001606  5C5A               	subwf	(??_vfpfcnvrt+2)^0,w,c
  4148  001608  A0D8               	btfss	status,0,c
  4149  00160A  EF09  F00B         	goto	u5951
  4150  00160E  EF0C  F00B         	goto	u5950
  4151  001612                     u5951:
  4152  001612  0E01               	movlw	1
  4153  001614  EF0D  F00B         	goto	u5960
  4154  001618                     u5950:
  4155  001618  0E00               	movlw	0
  4156  00161A                     u5960:
  4157  00161A  0100               	movlb	0	; () banked
  4158  00161C  6FA2               	movwf	_vfpfcnvrt$1292& (0+255),b
  4159  00161E  6BA3               	clrf	(_vfpfcnvrt$1292+1)& (0+255),b
  4160  001620                     
  4161                           ; BSR set to: 0
  4162  001620  51A2               	movf	_vfpfcnvrt$1292& (0+255),w,b
  4163  001622  11A3               	iorwf	(_vfpfcnvrt$1292+1)& (0+255),w,b
  4164  001624  A4D8               	btfss	status,2,c
  4165  001626  EF17  F00B         	goto	u5971
  4166  00162A  EF19  F00B         	goto	u5970
  4167  00162E                     u5971:
  4168  00162E  EFDC  F00A         	goto	l4520
  4169  001632                     u5970:
  4170  001632                     l4528:
  4171                           
  4172                           ; BSR set to: 0
  4173                           ;/Applications/microchip/xc8/v2.31/pic/sources/c99/common/doprnt.c: 762:         if ((*f
      +                          mt)[0] == '.') {
  4174  001632  C054  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  4175  001636  C055  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  4176  00163A  CFDE FFF6          	movff	postinc2,tblptrl
  4177  00163E  CFDE FFF7          	movff	postinc2,tblptrh
  4178  001642  0E07               	movlw	(high __ramtop+-1)
  4179  001644  64F7               	cpfsgt	tblptrh,c
  4180  001646  D003               	bra	u5987
  4181  001648  0008               	tblrd		*
  4182  00164A  50F5               	movf	tablat,w,c
  4183  00164C  D005               	bra	u5980
  4184  00164E                     u5987:
  4185  00164E  CFF6 FFE1          	movff	tblptrl,fsr1l
  4186  001652  CFF7 FFE2          	movff	tblptrh,fsr1h
  4187  001656  50E7               	movf	indf1,w,c
  4188  001658                     u5980:
  4189  001658  0A2E               	xorlw	46
  4190  00165A  A4D8               	btfss	status,2,c
  4191  00165C  EF32  F00B         	goto	u5991
  4192  001660  EF34  F00B         	goto	u5990
  4193  001664                     u5991:
  4194  001664  EFC5  F00B         	goto	l4548
  4195  001668                     u5990:
  4196  001668                     
  4197                           ;/Applications/microchip/xc8/v2.31/pic/sources/c99/common/doprnt.c: 763:             pre
      +                          c = 0;
  4198  001668  0E00               	movlw	0
  4199  00166A  0100               	movlb	0	; () banked
  4200  00166C  6FD7               	movwf	(_prec+1)& (0+255),b
  4201  00166E  0E00               	movlw	0
  4202  001670  6FD6               	movwf	_prec& (0+255),b
  4203  001672                     
  4204                           ; BSR set to: 0
  4205                           ;/Applications/microchip/xc8/v2.31/pic/sources/c99/common/doprnt.c: 764:             ++*
      +                          fmt;
  4206  001672  C054  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  4207  001676  C055  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  4208  00167A  2ADE               	incf	postinc2,f,c
  4209  00167C  0E00               	movlw	0
  4210  00167E  22DD               	addwfc	postdec2,f,c
  4211  001680                     
  4212                           ; BSR set to: 0
  4213                           ;/Applications/microchip/xc8/v2.31/pic/sources/c99/common/doprnt.c: 765:             if 
      +                          ((*fmt)[0] == '*') {
  4214  001680  C054  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  4215  001684  C055  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  4216  001688  CFDE FFF6          	movff	postinc2,tblptrl
  4217  00168C  CFDE FFF7          	movff	postinc2,tblptrh
  4218  001690  0E07               	movlw	(high __ramtop+-1)
  4219  001692  64F7               	cpfsgt	tblptrh,c
  4220  001694  D003               	bra	u6007
  4221  001696  0008               	tblrd		*
  4222  001698  50F5               	movf	tablat,w,c
  4223  00169A  D005               	bra	u6000
  4224  00169C                     u6007:
  4225  00169C  CFF6 FFE1          	movff	tblptrl,fsr1l
  4226  0016A0  CFF7 FFE2          	movff	tblptrh,fsr1h
  4227  0016A4  50E7               	movf	indf1,w,c
  4228  0016A6                     u6000:
  4229  0016A6  0A2A               	xorlw	42
  4230  0016A8  A4D8               	btfss	status,2,c
  4231  0016AA  EF59  F00B         	goto	u6011
  4232  0016AE  EF5B  F00B         	goto	u6010
  4233  0016B2                     u6011:
  4234  0016B2  EF78  F00B         	goto	l4538
  4235  0016B6                     u6010:
  4236  0016B6                     
  4237                           ;/Applications/microchip/xc8/v2.31/pic/sources/c99/common/doprnt.c: 766:                
      +                           ++*fmt;
  4238  0016B6  C054  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  4239  0016BA  C055  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  4240  0016BE  2ADE               	incf	postinc2,f,c
  4241  0016C0  0E00               	movlw	0
  4242  0016C2  22DD               	addwfc	postdec2,f,c
  4243                           
  4244                           ;/Applications/microchip/xc8/v2.31/pic/sources/c99/common/doprnt.c: 767:                
      +                           prec = (*(int *)__va_arg(*(int **)ap, (int)0));
  4245  0016C4  C056  FFD9         	movff	vfpfcnvrt@ap,fsr2l
  4246  0016C8  C057  FFDA         	movff	vfpfcnvrt@ap+1,fsr2h
  4247  0016CC  CFDF F058          	movff	indf2,??_vfpfcnvrt
  4248  0016D0  0E02               	movlw	2
  4249  0016D2  26DE               	addwf	postinc2,f,c
  4250  0016D4  CFDF F059          	movff	indf2,??_vfpfcnvrt+1
  4251  0016D8  0E00               	movlw	0
  4252  0016DA  22DD               	addwfc	postdec2,f,c
  4253  0016DC  C058  FFD9         	movff	??_vfpfcnvrt,fsr2l
  4254  0016E0  C059  FFDA         	movff	??_vfpfcnvrt+1,fsr2h
  4255  0016E4  CFDE F0D6          	movff	postinc2,_prec
  4256  0016E8  CFDD F0D7          	movff	postdec2,_prec+1
  4257                           
  4258                           ;/Applications/microchip/xc8/v2.31/pic/sources/c99/common/doprnt.c: 768:             } e
      +                          lse {
  4259  0016EC  EFC5  F00B         	goto	l4548
  4260  0016F0                     l4538:
  4261                           
  4262                           ;/Applications/microchip/xc8/v2.31/pic/sources/c99/common/doprnt.c: 769:                
      +                           prec = atoi(*fmt);
  4263  0016F0  C054  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  4264  0016F4  C055  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  4265  0016F8  CFDE F008          	movff	postinc2,atoi@s
  4266  0016FC  CFDD F009          	movff	postdec2,atoi@s+1
  4267  001700  ECAE  F01A         	call	_atoi	;wreg free
  4268  001704  C008  F0D6         	movff	?_atoi,_prec
  4269  001708  C009  F0D7         	movff	?_atoi+1,_prec+1
  4270                           
  4271                           ;/Applications/microchip/xc8/v2.31/pic/sources/c99/common/doprnt.c: 770:                
      +                           while ((0 ? isdigit((*fmt)[0]) : ((unsigned)((*fmt)[0])-'0') < 10)) {
  4272  00170C  EF8F  F00B         	goto	l4542
  4273  001710                     l4540:
  4274                           
  4275                           ; BSR set to: 0
  4276                           ;/Applications/microchip/xc8/v2.31/pic/sources/c99/common/doprnt.c: 771:                
      +                               ++*fmt;
  4277  001710  C054  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  4278  001714  C055  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  4279  001718  2ADE               	incf	postinc2,f,c
  4280  00171A  0E00               	movlw	0
  4281  00171C  22DD               	addwfc	postdec2,f,c
  4282  00171E                     l4542:
  4283  00171E  0ED0               	movlw	208
  4284  001720  6E58               	movwf	??_vfpfcnvrt^0,c
  4285  001722  0EFF               	movlw	255
  4286  001724  6E59               	movwf	(??_vfpfcnvrt+1)^0,c
  4287  001726  C054  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  4288  00172A  C055  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  4289  00172E  CFDE FFF6          	movff	postinc2,tblptrl
  4290  001732  CFDE FFF7          	movff	postinc2,tblptrh
  4291  001736  0E07               	movlw	(high __ramtop+-1)
  4292  001738  64F7               	cpfsgt	tblptrh,c
  4293  00173A  D003               	bra	u6027
  4294  00173C  0008               	tblrd		*
  4295  00173E  50F5               	movf	tablat,w,c
  4296  001740  D005               	bra	u6020
  4297  001742                     u6027:
  4298  001742  CFF6 FFE1          	movff	tblptrl,fsr1l
  4299  001746  CFF7 FFE2          	movff	tblptrh,fsr1h
  4300  00174A  50E7               	movf	indf1,w,c
  4301  00174C                     u6020:
  4302  00174C  6E5A               	movwf	(??_vfpfcnvrt+2)^0,c
  4303  00174E  6A5B               	clrf	(??_vfpfcnvrt+3)^0,c
  4304  001750  5058               	movf	??_vfpfcnvrt^0,w,c
  4305  001752  265A               	addwf	(??_vfpfcnvrt+2)^0,f,c
  4306  001754  5059               	movf	(??_vfpfcnvrt+1)^0,w,c
  4307  001756  225B               	addwfc	(??_vfpfcnvrt+3)^0,f,c
  4308  001758  505B               	movf	(??_vfpfcnvrt+3)^0,w,c
  4309  00175A  E10A               	bnz	u6030
  4310  00175C  0E0A               	movlw	10
  4311  00175E  5C5A               	subwf	(??_vfpfcnvrt+2)^0,w,c
  4312  001760  A0D8               	btfss	status,0,c
  4313  001762  EFB5  F00B         	goto	u6031
  4314  001766  EFB8  F00B         	goto	u6030
  4315  00176A                     u6031:
  4316  00176A  0E01               	movlw	1
  4317  00176C  EFB9  F00B         	goto	u6040
  4318  001770                     u6030:
  4319  001770  0E00               	movlw	0
  4320  001772                     u6040:
  4321  001772  0100               	movlb	0	; () banked
  4322  001774  6FA4               	movwf	_vfpfcnvrt$1293& (0+255),b
  4323  001776  6BA5               	clrf	(_vfpfcnvrt$1293+1)& (0+255),b
  4324  001778                     
  4325                           ; BSR set to: 0
  4326  001778  51A4               	movf	_vfpfcnvrt$1293& (0+255),w,b
  4327  00177A  11A5               	iorwf	(_vfpfcnvrt$1293+1)& (0+255),w,b
  4328  00177C  A4D8               	btfss	status,2,c
  4329  00177E  EFC3  F00B         	goto	u6051
  4330  001782  EFC5  F00B         	goto	u6050
  4331  001786                     u6051:
  4332  001786  EF88  F00B         	goto	l4540
  4333  00178A                     u6050:
  4334  00178A                     l4548:
  4335                           
  4336                           ;/Applications/microchip/xc8/v2.31/pic/sources/c99/common/doprnt.c: 779:         ct[0] =
      +                           (char)tolower((int)(*fmt)[0]);
  4337  00178A  C054  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  4338  00178E  C055  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  4339  001792  CFDE FFF6          	movff	postinc2,tblptrl
  4340  001796  CFDE FFF7          	movff	postinc2,tblptrh
  4341  00179A  0E07               	movlw	(high __ramtop+-1)
  4342  00179C  64F7               	cpfsgt	tblptrh,c
  4343  00179E  D003               	bra	u6067
  4344  0017A0  0008               	tblrd		*
  4345  0017A2  50F5               	movf	tablat,w,c
  4346  0017A4  D005               	bra	u6060
  4347  0017A6                     u6067:
  4348  0017A6  CFF6 FFE1          	movff	tblptrl,fsr1l
  4349  0017AA  CFF7 FFE2          	movff	tblptrh,fsr1h
  4350  0017AE  50E7               	movf	indf1,w,c
  4351  0017B0                     u6060:
  4352  0017B0  6E58               	movwf	??_vfpfcnvrt^0,c
  4353  0017B2  5058               	movf	??_vfpfcnvrt^0,w,c
  4354  0017B4  6E07               	movwf	tolower@c^0,c
  4355  0017B6  6A08               	clrf	(tolower@c+1)^0,c
  4356  0017B8  EC96  F024         	call	_tolower	;wreg free
  4357  0017BC  5007               	movf	?_tolower^0,w,c
  4358  0017BE  0100               	movlb	0	; () banked
  4359  0017C0  6FAC               	movwf	vfpfcnvrt@ct& (0+255),b
  4360  0017C2                     
  4361                           ; BSR set to: 0
  4362                           ;/Applications/microchip/xc8/v2.31/pic/sources/c99/common/doprnt.c: 780:         if (ct[
      +                          0]) {
  4363  0017C2  51AC               	movf	vfpfcnvrt@ct& (0+255),w,b
  4364  0017C4  B4D8               	btfsc	status,2,c
  4365  0017C6  EFE7  F00B         	goto	u6071
  4366  0017CA  EFE9  F00B         	goto	u6070
  4367  0017CE                     u6071:
  4368  0017CE  EF3B  F00C         	goto	l4558
  4369  0017D2                     u6070:
  4370  0017D2                     
  4371                           ; BSR set to: 0
  4372                           ;/Applications/microchip/xc8/v2.31/pic/sources/c99/common/doprnt.c: 781:             ct[
      +                          1] = (char)tolower((int)(*fmt)[1]);
  4373  0017D2  C054  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  4374  0017D6  C055  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  4375  0017DA  CFDE F058          	movff	postinc2,??_vfpfcnvrt
  4376  0017DE  CFDD F059          	movff	postdec2,??_vfpfcnvrt+1
  4377  0017E2  0E01               	movlw	1
  4378  0017E4  2658               	addwf	??_vfpfcnvrt^0,f,c
  4379  0017E6  0E00               	movlw	0
  4380  0017E8  2259               	addwfc	(??_vfpfcnvrt+1)^0,f,c
  4381  0017EA  C058  FFF6         	movff	??_vfpfcnvrt,tblptrl
  4382  0017EE  C059  FFF7         	movff	??_vfpfcnvrt+1,tblptrh
  4383  0017F2  6AF8               	clrf	tblptru,c
  4384  0017F4  0E07               	movlw	(high __ramtop+-1)
  4385  0017F6  64F7               	cpfsgt	tblptrh,c
  4386  0017F8  D003               	bra	u6087
  4387  0017FA  0008               	tblrd		*
  4388  0017FC  50F5               	movf	tablat,w,c
  4389  0017FE  D005               	bra	u6080
  4390  001800                     u6087:
  4391  001800  CFF6 FFE1          	movff	tblptrl,fsr1l
  4392  001804  CFF7 FFE2          	movff	tblptrh,fsr1h
  4393  001808  50E7               	movf	indf1,w,c
  4394  00180A                     u6080:
  4395  00180A  6E5A               	movwf	(??_vfpfcnvrt+2)^0,c
  4396  00180C  505A               	movf	(??_vfpfcnvrt+2)^0,w,c
  4397  00180E  6E07               	movwf	tolower@c^0,c
  4398  001810  6A08               	clrf	(tolower@c+1)^0,c
  4399  001812  EC96  F024         	call	_tolower	;wreg free
  4400  001816  5007               	movf	?_tolower^0,w,c
  4401  001818  0100               	movlb	0	; () banked
  4402  00181A  6FAD               	movwf	(vfpfcnvrt@ct+1)& (0+255),b
  4403  00181C                     
  4404                           ; BSR set to: 0
  4405                           ;/Applications/microchip/xc8/v2.31/pic/sources/c99/common/doprnt.c: 782:             if 
      +                          (ct[1]) {
  4406  00181C  51AD               	movf	(vfpfcnvrt@ct+1)& (0+255),w,b
  4407  00181E  B4D8               	btfsc	status,2,c
  4408  001820  EF14  F00C         	goto	u6091
  4409  001824  EF16  F00C         	goto	u6090
  4410  001828                     u6091:
  4411  001828  EF3B  F00C         	goto	l4558
  4412  00182C                     u6090:
  4413  00182C                     
  4414                           ; BSR set to: 0
  4415                           ;/Applications/microchip/xc8/v2.31/pic/sources/c99/common/doprnt.c: 783:                
      +                           ct[2] = (char)tolower((int)(*fmt)[2]);
  4416  00182C  C054  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  4417  001830  C055  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  4418  001834  CFDE F058          	movff	postinc2,??_vfpfcnvrt
  4419  001838  CFDD F059          	movff	postdec2,??_vfpfcnvrt+1
  4420  00183C  0E02               	movlw	2
  4421  00183E  2658               	addwf	??_vfpfcnvrt^0,f,c
  4422  001840  0E00               	movlw	0
  4423  001842  2259               	addwfc	(??_vfpfcnvrt+1)^0,f,c
  4424  001844  C058  FFF6         	movff	??_vfpfcnvrt,tblptrl
  4425  001848  C059  FFF7         	movff	??_vfpfcnvrt+1,tblptrh
  4426  00184C  6AF8               	clrf	tblptru,c
  4427  00184E  0E07               	movlw	(high __ramtop+-1)
  4428  001850  64F7               	cpfsgt	tblptrh,c
  4429  001852  D003               	bra	u6107
  4430  001854  0008               	tblrd		*
  4431  001856  50F5               	movf	tablat,w,c
  4432  001858  D005               	bra	u6100
  4433  00185A                     u6107:
  4434  00185A  CFF6 FFE1          	movff	tblptrl,fsr1l
  4435  00185E  CFF7 FFE2          	movff	tblptrh,fsr1h
  4436  001862  50E7               	movf	indf1,w,c
  4437  001864                     u6100:
  4438  001864  6E5A               	movwf	(??_vfpfcnvrt+2)^0,c
  4439  001866  505A               	movf	(??_vfpfcnvrt+2)^0,w,c
  4440  001868  6E07               	movwf	tolower@c^0,c
  4441  00186A  6A08               	clrf	(tolower@c+1)^0,c
  4442  00186C  EC96  F024         	call	_tolower	;wreg free
  4443  001870  5007               	movf	?_tolower^0,w,c
  4444  001872  0100               	movlb	0	; () banked
  4445  001874  6FAE               	movwf	(vfpfcnvrt@ct+2)& (0+255),b
  4446  001876                     l4558:
  4447                           
  4448                           ; BSR set to: 0
  4449                           ;/Applications/microchip/xc8/v2.31/pic/sources/c99/common/doprnt.c: 814:         if (*fm
      +                          t[0] == 'c') {
  4450  001876  C054  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  4451  00187A  C055  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  4452  00187E  CFDE FFF6          	movff	postinc2,tblptrl
  4453  001882  CFDE FFF7          	movff	postinc2,tblptrh
  4454  001886  0E07               	movlw	(high __ramtop+-1)
  4455  001888  64F7               	cpfsgt	tblptrh,c
  4456  00188A  D003               	bra	u6117
  4457  00188C  0008               	tblrd		*
  4458  00188E  50F5               	movf	tablat,w,c
  4459  001890  D005               	bra	u6110
  4460  001892                     u6117:
  4461  001892  CFF6 FFE1          	movff	tblptrl,fsr1l
  4462  001896  CFF7 FFE2          	movff	tblptrh,fsr1h
  4463  00189A  50E7               	movf	indf1,w,c
  4464  00189C                     u6110:
  4465  00189C  0A63               	xorlw	99
  4466  00189E  A4D8               	btfss	status,2,c
  4467  0018A0  EF54  F00C         	goto	u6121
  4468  0018A4  EF56  F00C         	goto	u6120
  4469  0018A8                     u6121:
  4470  0018A8  EF7E  F00C         	goto	l4566
  4471  0018AC                     u6120:
  4472  0018AC                     
  4473                           ;/Applications/microchip/xc8/v2.31/pic/sources/c99/common/doprnt.c: 815:             ++*
      +                          fmt;
  4474  0018AC  C054  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  4475  0018B0  C055  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  4476  0018B4  2ADE               	incf	postinc2,f,c
  4477  0018B6  0E00               	movlw	0
  4478  0018B8  22DD               	addwfc	postdec2,f,c
  4479                           
  4480                           ;/Applications/microchip/xc8/v2.31/pic/sources/c99/common/doprnt.c: 816:             c =
      +                           (unsigned char)(*(int *)__va_arg(*(int **)ap, (int)0));
  4481  0018BA  C056  FFD9         	movff	vfpfcnvrt@ap,fsr2l
  4482  0018BE  C057  FFDA         	movff	vfpfcnvrt@ap+1,fsr2h
  4483  0018C2  CFDF F058          	movff	indf2,??_vfpfcnvrt
  4484  0018C6  0E02               	movlw	2
  4485  0018C8  26DE               	addwf	postinc2,f,c
  4486  0018CA  CFDF F059          	movff	indf2,??_vfpfcnvrt+1
  4487  0018CE  0E00               	movlw	0
  4488  0018D0  22DD               	addwfc	postdec2,f,c
  4489  0018D2  C058  FFD9         	movff	??_vfpfcnvrt,fsr2l
  4490  0018D6  C059  FFDA         	movff	??_vfpfcnvrt+1,fsr2h
  4491  0018DA  50DF               	movf	indf2,w,c
  4492  0018DC  0100               	movlb	0	; () banked
  4493  0018DE  6FAF               	movwf	vfpfcnvrt@c& (0+255),b
  4494  0018E0                     
  4495                           ; BSR set to: 0
  4496                           ;/Applications/microchip/xc8/v2.31/pic/sources/c99/common/doprnt.c: 817:             ret
      +                          urn ctoa(fp, c);
  4497  0018E0  C052  F00D         	movff	vfpfcnvrt@fp,ctoa@fp
  4498  0018E4  C053  F00E         	movff	vfpfcnvrt@fp+1,ctoa@fp+1
  4499  0018E8  C0AF  F00F         	movff	vfpfcnvrt@c,ctoa@c
  4500  0018EC  ECAA  F020         	call	_ctoa	;wreg free
  4501  0018F0  C00D  F052         	movff	?_ctoa,?_vfpfcnvrt
  4502  0018F4  C00E  F053         	movff	?_ctoa+1,?_vfpfcnvrt+1
  4503  0018F8  EF95  F00E         	goto	l1103
  4504  0018FC                     l4566:
  4505                           
  4506                           ;/Applications/microchip/xc8/v2.31/pic/sources/c99/common/doprnt.c: 847:         if ((*f
      +                          mt[0] == 'd') || (*fmt[0] == 'i')) {
  4507  0018FC  C054  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  4508  001900  C055  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  4509  001904  CFDE FFF6          	movff	postinc2,tblptrl
  4510  001908  CFDE FFF7          	movff	postinc2,tblptrh
  4511  00190C  0E07               	movlw	(high __ramtop+-1)
  4512  00190E  64F7               	cpfsgt	tblptrh,c
  4513  001910  D003               	bra	u6137
  4514  001912  0008               	tblrd		*
  4515  001914  50F5               	movf	tablat,w,c
  4516  001916  D005               	bra	u6130
  4517  001918                     u6137:
  4518  001918  CFF6 FFE1          	movff	tblptrl,fsr1l
  4519  00191C  CFF7 FFE2          	movff	tblptrh,fsr1h
  4520  001920  50E7               	movf	indf1,w,c
  4521  001922                     u6130:
  4522  001922  0A64               	xorlw	100
  4523  001924  B4D8               	btfsc	status,2,c
  4524  001926  EF97  F00C         	goto	u6141
  4525  00192A  EF99  F00C         	goto	u6140
  4526  00192E                     u6141:
  4527  00192E  EFB4  F00C         	goto	l4570
  4528  001932                     u6140:
  4529  001932  C054  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  4530  001936  C055  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  4531  00193A  CFDE FFF6          	movff	postinc2,tblptrl
  4532  00193E  CFDE FFF7          	movff	postinc2,tblptrh
  4533  001942  0E07               	movlw	(high __ramtop+-1)
  4534  001944  64F7               	cpfsgt	tblptrh,c
  4535  001946  D003               	bra	u6157
  4536  001948  0008               	tblrd		*
  4537  00194A  50F5               	movf	tablat,w,c
  4538  00194C  D005               	bra	u6150
  4539  00194E                     u6157:
  4540  00194E  CFF6 FFE1          	movff	tblptrl,fsr1l
  4541  001952  CFF7 FFE2          	movff	tblptrh,fsr1h
  4542  001956  50E7               	movf	indf1,w,c
  4543  001958                     u6150:
  4544  001958  0A69               	xorlw	105
  4545  00195A  A4D8               	btfss	status,2,c
  4546  00195C  EFB2  F00C         	goto	u6161
  4547  001960  EFB4  F00C         	goto	u6160
  4548  001964                     u6161:
  4549  001964  EFF5  F00C         	goto	l4576
  4550  001968                     u6160:
  4551  001968                     l4570:
  4552                           
  4553                           ;/Applications/microchip/xc8/v2.31/pic/sources/c99/common/doprnt.c: 849:             ++*
      +                          fmt;
  4554  001968  C054  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  4555  00196C  C055  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  4556  001970  2ADE               	incf	postinc2,f,c
  4557  001972  0E00               	movlw	0
  4558  001974  22DD               	addwfc	postdec2,f,c
  4559                           
  4560                           ;/Applications/microchip/xc8/v2.31/pic/sources/c99/common/doprnt.c: 850:             ll 
      +                          = (long long)(*(int *)__va_arg(*(int **)ap, (int)0));
  4561  001976  C056  FFD9         	movff	vfpfcnvrt@ap,fsr2l
  4562  00197A  C057  FFDA         	movff	vfpfcnvrt@ap+1,fsr2h
  4563  00197E  CFDF F058          	movff	indf2,??_vfpfcnvrt
  4564  001982  0E02               	movlw	2
  4565  001984  26DE               	addwf	postinc2,f,c
  4566  001986  CFDF F059          	movff	indf2,??_vfpfcnvrt+1
  4567  00198A  0E00               	movlw	0
  4568  00198C  22DD               	addwfc	postdec2,f,c
  4569  00198E  C058  FFD9         	movff	??_vfpfcnvrt,fsr2l
  4570  001992  C059  FFDA         	movff	??_vfpfcnvrt+1,fsr2h
  4571  001996  CFDE F098          	movff	postinc2,vfpfcnvrt@ll
  4572  00199A  CFDD F099          	movff	postdec2,vfpfcnvrt@ll+1
  4573  00199E  0100               	movlb	0	; () banked
  4574  0019A0  0E00               	movlw	0
  4575  0019A2  BF99               	btfsc	(vfpfcnvrt@ll+1)& (0+255),7,b
  4576  0019A4  0EFF               	movlw	-1
  4577  0019A6  6F9A               	movwf	(vfpfcnvrt@ll+2)& (0+255),b
  4578  0019A8  6F9B               	movwf	(vfpfcnvrt@ll+3)& (0+255),b
  4579  0019AA  6F9C               	movwf	(vfpfcnvrt@ll+4)& (0+255),b
  4580  0019AC  6F9D               	movwf	(vfpfcnvrt@ll+5)& (0+255),b
  4581  0019AE  6F9E               	movwf	(vfpfcnvrt@ll+6)& (0+255),b
  4582  0019B0  6F9F               	movwf	(vfpfcnvrt@ll+7)& (0+255),b
  4583  0019B2                     
  4584                           ; BSR set to: 0
  4585                           ;/Applications/microchip/xc8/v2.31/pic/sources/c99/common/doprnt.c: 852:             ret
      +                          urn dtoa(fp, ll);
  4586  0019B2  C052  F01F         	movff	vfpfcnvrt@fp,dtoa@fp
  4587  0019B6  C053  F020         	movff	vfpfcnvrt@fp+1,dtoa@fp+1
  4588  0019BA  C098  F021         	movff	vfpfcnvrt@ll,dtoa@d
  4589  0019BE  C099  F022         	movff	vfpfcnvrt@ll+1,dtoa@d+1
  4590  0019C2  C09A  F023         	movff	vfpfcnvrt@ll+2,dtoa@d+2
  4591  0019C6  C09B  F024         	movff	vfpfcnvrt@ll+3,dtoa@d+3
  4592  0019CA  C09C  F025         	movff	vfpfcnvrt@ll+4,dtoa@d+4
  4593  0019CE  C09D  F026         	movff	vfpfcnvrt@ll+5,dtoa@d+5
  4594  0019D2  C09E  F027         	movff	vfpfcnvrt@ll+6,dtoa@d+6
  4595  0019D6  C09F  F028         	movff	vfpfcnvrt@ll+7,dtoa@d+7
  4596  0019DA  ECD8  F014         	call	_dtoa	;wreg free
  4597  0019DE  C01F  F052         	movff	?_dtoa,?_vfpfcnvrt
  4598  0019E2  C020  F053         	movff	?_dtoa+1,?_vfpfcnvrt+1
  4599  0019E6  EF95  F00E         	goto	l1103
  4600  0019EA                     l4576:
  4601                           
  4602                           ;/Applications/microchip/xc8/v2.31/pic/sources/c99/common/doprnt.c: 942:         if (ct[
      +                          0] == 'f') {
  4603  0019EA  0E66               	movlw	102
  4604  0019EC  0100               	movlb	0	; () banked
  4605  0019EE  19AC               	xorwf	vfpfcnvrt@ct& (0+255),w,b
  4606  0019F0  A4D8               	btfss	status,2,c
  4607  0019F2  EFFD  F00C         	goto	u6171
  4608  0019F6  EFFF  F00C         	goto	u6170
  4609  0019FA                     u6171:
  4610  0019FA  EF49  F00D         	goto	l4588
  4611  0019FE                     u6170:
  4612  0019FE                     
  4613                           ; BSR set to: 0
  4614                           ;/Applications/microchip/xc8/v2.31/pic/sources/c99/common/doprnt.c: 944:             c =
      +                           (*fmt)[0];
  4615  0019FE  C054  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  4616  001A02  C055  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  4617  001A06  CFDE FFF6          	movff	postinc2,tblptrl
  4618  001A0A  CFDE FFF7          	movff	postinc2,tblptrh
  4619  001A0E  0E07               	movlw	(high __ramtop+-1)
  4620  001A10  64F7               	cpfsgt	tblptrh,c
  4621  001A12  D003               	bra	u6187
  4622  001A14  0008               	tblrd		*
  4623  001A16  50F5               	movf	tablat,w,c
  4624  001A18  D005               	bra	u6180
  4625  001A1A                     u6187:
  4626  001A1A  CFF6 FFE1          	movff	tblptrl,fsr1l
  4627  001A1E  CFF7 FFE2          	movff	tblptrh,fsr1h
  4628  001A22  50E7               	movf	indf1,w,c
  4629  001A24                     u6180:
  4630  001A24  0100               	movlb	0	; () banked
  4631  001A26  6FAF               	movwf	vfpfcnvrt@c& (0+255),b
  4632  001A28                     
  4633                           ; BSR set to: 0
  4634                           ;/Applications/microchip/xc8/v2.31/pic/sources/c99/common/doprnt.c: 945:             ++*
      +                          fmt;
  4635  001A28  C054  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  4636  001A2C  C055  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  4637  001A30  2ADE               	incf	postinc2,f,c
  4638  001A32  0E00               	movlw	0
  4639  001A34  22DD               	addwfc	postdec2,f,c
  4640  001A36                     
  4641                           ; BSR set to: 0
  4642                           ;/Applications/microchip/xc8/v2.31/pic/sources/c99/common/doprnt.c: 946:             f =
      +                           (long double)(*(double *)__va_arg(*(double **)ap, (double)0));
  4643  001A36  C056  FFD9         	movff	vfpfcnvrt@ap,fsr2l
  4644  001A3A  C057  FFDA         	movff	vfpfcnvrt@ap+1,fsr2h
  4645  001A3E  CFDF F058          	movff	indf2,??_vfpfcnvrt
  4646  001A42  0E04               	movlw	4
  4647  001A44  26DE               	addwf	postinc2,f,c
  4648  001A46  CFDF F059          	movff	indf2,??_vfpfcnvrt+1
  4649  001A4A  0E00               	movlw	0
  4650  001A4C  22DD               	addwfc	postdec2,f,c
  4651  001A4E  C058  FFD9         	movff	??_vfpfcnvrt,fsr2l
  4652  001A52  C059  FFDA         	movff	??_vfpfcnvrt+1,fsr2h
  4653  001A56  CFDE F0A8          	movff	postinc2,vfpfcnvrt@f
  4654  001A5A  CFDE F0A9          	movff	postinc2,vfpfcnvrt@f+1
  4655  001A5E  CFDE F0AA          	movff	postinc2,vfpfcnvrt@f+2
  4656  001A62  CFDE F0AB          	movff	postinc2,vfpfcnvrt@f+3
  4657  001A66                     l4584:
  4658                           
  4659                           ; BSR set to: 0
  4660                           ;/Applications/microchip/xc8/v2.31/pic/sources/c99/common/doprnt.c: 948:             ret
      +                          urn efgtoa(fp, f, c);
  4661  001A66  C052  F046         	movff	vfpfcnvrt@fp,efgtoa@fp
  4662  001A6A  C053  F047         	movff	vfpfcnvrt@fp+1,efgtoa@fp+1
  4663  001A6E  C0A8  F048         	movff	vfpfcnvrt@f,efgtoa@f
  4664  001A72  C0A9  F049         	movff	vfpfcnvrt@f+1,efgtoa@f+1
  4665  001A76  C0AA  F04A         	movff	vfpfcnvrt@f+2,efgtoa@f+2
  4666  001A7A  C0AB  F04B         	movff	vfpfcnvrt@f+3,efgtoa@f+3
  4667  001A7E  C0AF  F04C         	movff	vfpfcnvrt@c,efgtoa@c
  4668  001A82  EC2E  F004         	call	_efgtoa	;wreg free
  4669  001A86  C046  F052         	movff	?_efgtoa,?_vfpfcnvrt
  4670  001A8A  C047  F053         	movff	?_efgtoa+1,?_vfpfcnvrt+1
  4671  001A8E  EF95  F00E         	goto	l1103
  4672  001A92                     l4588:
  4673                           
  4674                           ; BSR set to: 0
  4675                           ;/Applications/microchip/xc8/v2.31/pic/sources/c99/common/doprnt.c: 950:         if (!st
      +                          rncmp(ct, "lf", ((sizeof("lf")/sizeof("lf"[0]))-1))) {
  4676  001A92  0EAC               	movlw	low vfpfcnvrt@ct
  4677  001A94  6E01               	movwf	strncmp@_l^0,c
  4678  001A96  0E00               	movlw	high vfpfcnvrt@ct
  4679  001A98  6E02               	movwf	(strncmp@_l+1)^0,c
  4680  001A9A  0E57               	movlw	low STR_16
  4681  001A9C  6E03               	movwf	strncmp@_r^0,c
  4682  001A9E  0E08               	movlw	high STR_16
  4683  001AA0  6E04               	movwf	(strncmp@_r+1)^0,c
  4684  001AA2  0E00               	movlw	0
  4685  001AA4  6E06               	movwf	(strncmp@n+1)^0,c
  4686  001AA6  0E02               	movlw	2
  4687  001AA8  6E05               	movwf	strncmp@n^0,c
  4688  001AAA  EC16  F021         	call	_strncmp	;wreg free
  4689  001AAE  5001               	movf	?_strncmp^0,w,c
  4690  001AB0  1002               	iorwf	(?_strncmp+1)^0,w,c
  4691  001AB2  A4D8               	btfss	status,2,c
  4692  001AB4  EF5E  F00D         	goto	u6191
  4693  001AB8  EF60  F00D         	goto	u6190
  4694  001ABC                     u6191:
  4695  001ABC  EFF0  F00D         	goto	l4604
  4696  001AC0                     u6190:
  4697  001AC0                     
  4698                           ;/Applications/microchip/xc8/v2.31/pic/sources/c99/common/doprnt.c: 953:             if 
      +                          ((0 ? isupper((int)(*fmt)[0]) : ((unsigned)((int)(*fmt)[0])-'A') < 26)) {
  4699  001AC0  C054  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  4700  001AC4  C055  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  4701  001AC8  CFDE F058          	movff	postinc2,??_vfpfcnvrt
  4702  001ACC  CFDD F059          	movff	postdec2,??_vfpfcnvrt+1
  4703  001AD0  0E01               	movlw	1
  4704  001AD2  2658               	addwf	??_vfpfcnvrt^0,f,c
  4705  001AD4  0E00               	movlw	0
  4706  001AD6  2259               	addwfc	(??_vfpfcnvrt+1)^0,f,c
  4707  001AD8  C058  FFF6         	movff	??_vfpfcnvrt,tblptrl
  4708  001ADC  C059  FFF7         	movff	??_vfpfcnvrt+1,tblptrh
  4709  001AE0  6AF8               	clrf	tblptru,c
  4710  001AE2  0E07               	movlw	(high __ramtop+-1)
  4711  001AE4  64F7               	cpfsgt	tblptrh,c
  4712  001AE6  D003               	bra	u6207
  4713  001AE8  0008               	tblrd		*
  4714  001AEA  50F5               	movf	tablat,w,c
  4715  001AEC  D005               	bra	u6200
  4716  001AEE                     u6207:
  4717  001AEE  CFF6 FFE1          	movff	tblptrl,fsr1l
  4718  001AF2  CFF7 FFE2          	movff	tblptrh,fsr1h
  4719  001AF6  50E7               	movf	indf1,w,c
  4720  001AF8                     u6200:
  4721  001AF8  0100               	movlb	0	; () banked
  4722  001AFA  6FAF               	movwf	vfpfcnvrt@c& (0+255),b
  4723  001AFC  0EBF               	movlw	191
  4724  001AFE  6E58               	movwf	??_vfpfcnvrt^0,c
  4725  001B00  0EFF               	movlw	255
  4726  001B02  6E59               	movwf	(??_vfpfcnvrt+1)^0,c
  4727  001B04  C054  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  4728  001B08  C055  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  4729  001B0C  CFDE FFF6          	movff	postinc2,tblptrl
  4730  001B10  CFDE FFF7          	movff	postinc2,tblptrh
  4731  001B14  0E07               	movlw	(high __ramtop+-1)
  4732  001B16  64F7               	cpfsgt	tblptrh,c
  4733  001B18  D003               	bra	u6217
  4734  001B1A  0008               	tblrd		*
  4735  001B1C  50F5               	movf	tablat,w,c
  4736  001B1E  D005               	bra	u6210
  4737  001B20                     u6217:
  4738  001B20  CFF6 FFE1          	movff	tblptrl,fsr1l
  4739  001B24  CFF7 FFE2          	movff	tblptrh,fsr1h
  4740  001B28  50E7               	movf	indf1,w,c
  4741  001B2A                     u6210:
  4742  001B2A  6E5A               	movwf	(??_vfpfcnvrt+2)^0,c
  4743  001B2C  6A5B               	clrf	(??_vfpfcnvrt+3)^0,c
  4744  001B2E  5058               	movf	??_vfpfcnvrt^0,w,c
  4745  001B30  265A               	addwf	(??_vfpfcnvrt+2)^0,f,c
  4746  001B32  5059               	movf	(??_vfpfcnvrt+1)^0,w,c
  4747  001B34  225B               	addwfc	(??_vfpfcnvrt+3)^0,f,c
  4748  001B36  505B               	movf	(??_vfpfcnvrt+3)^0,w,c
  4749  001B38  E10A               	bnz	u6220
  4750  001B3A  0E1A               	movlw	26
  4751  001B3C  5C5A               	subwf	(??_vfpfcnvrt+2)^0,w,c
  4752  001B3E  A0D8               	btfss	status,0,c
  4753  001B40  EFA4  F00D         	goto	u6221
  4754  001B44  EFA7  F00D         	goto	u6220
  4755  001B48                     u6221:
  4756  001B48  0E01               	movlw	1
  4757  001B4A  EFA8  F00D         	goto	u6230
  4758  001B4E                     u6220:
  4759  001B4E  0E00               	movlw	0
  4760  001B50                     u6230:
  4761  001B50  0100               	movlb	0	; () banked
  4762  001B52  6FA6               	movwf	_vfpfcnvrt$1299& (0+255),b
  4763  001B54  6BA7               	clrf	(_vfpfcnvrt$1299+1)& (0+255),b
  4764  001B56                     
  4765                           ; BSR set to: 0
  4766  001B56  51A6               	movf	_vfpfcnvrt$1299& (0+255),w,b
  4767  001B58  11A7               	iorwf	(_vfpfcnvrt$1299+1)& (0+255),w,b
  4768  001B5A  B4D8               	btfsc	status,2,c
  4769  001B5C  EFB2  F00D         	goto	u6241
  4770  001B60  EFB4  F00D         	goto	u6240
  4771  001B64                     u6241:
  4772  001B64  EFCE  F00D         	goto	l4598
  4773  001B68                     u6240:
  4774  001B68                     
  4775                           ; BSR set to: 0
  4776                           ;/Applications/microchip/xc8/v2.31/pic/sources/c99/common/doprnt.c: 954:                
      +                           f = (*(long double *)__va_arg(*(long double **)ap, (long double)0));
  4777  001B68  C056  FFD9         	movff	vfpfcnvrt@ap,fsr2l
  4778  001B6C  C057  FFDA         	movff	vfpfcnvrt@ap+1,fsr2h
  4779  001B70  CFDF F058          	movff	indf2,??_vfpfcnvrt
  4780  001B74  0E04               	movlw	4
  4781  001B76  26DE               	addwf	postinc2,f,c
  4782  001B78  CFDF F059          	movff	indf2,??_vfpfcnvrt+1
  4783  001B7C  0E00               	movlw	0
  4784  001B7E  22DD               	addwfc	postdec2,f,c
  4785  001B80  C058  FFD9         	movff	??_vfpfcnvrt,fsr2l
  4786  001B84  C059  FFDA         	movff	??_vfpfcnvrt+1,fsr2h
  4787  001B88  CFDE F0A8          	movff	postinc2,vfpfcnvrt@f
  4788  001B8C  CFDE F0A9          	movff	postinc2,vfpfcnvrt@f+1
  4789  001B90  CFDE F0AA          	movff	postinc2,vfpfcnvrt@f+2
  4790  001B94  CFDE F0AB          	movff	postinc2,vfpfcnvrt@f+3
  4791                           
  4792                           ;/Applications/microchip/xc8/v2.31/pic/sources/c99/common/doprnt.c: 955:             } e
      +                          lse {
  4793  001B98  EFE6  F00D         	goto	l1114
  4794  001B9C                     l4598:
  4795                           
  4796                           ; BSR set to: 0
  4797                           ;/Applications/microchip/xc8/v2.31/pic/sources/c99/common/doprnt.c: 956:                
      +                           f = (long double)(*(double *)__va_arg(*(double **)ap, (double)0));
  4798  001B9C  C056  FFD9         	movff	vfpfcnvrt@ap,fsr2l
  4799  001BA0  C057  FFDA         	movff	vfpfcnvrt@ap+1,fsr2h
  4800  001BA4  CFDF F058          	movff	indf2,??_vfpfcnvrt
  4801  001BA8  0E04               	movlw	4
  4802  001BAA  26DE               	addwf	postinc2,f,c
  4803  001BAC  CFDF F059          	movff	indf2,??_vfpfcnvrt+1
  4804  001BB0  0E00               	movlw	0
  4805  001BB2  22DD               	addwfc	postdec2,f,c
  4806  001BB4  C058  FFD9         	movff	??_vfpfcnvrt,fsr2l
  4807  001BB8  C059  FFDA         	movff	??_vfpfcnvrt+1,fsr2h
  4808  001BBC  CFDE F0A8          	movff	postinc2,vfpfcnvrt@f
  4809  001BC0  CFDE F0A9          	movff	postinc2,vfpfcnvrt@f+1
  4810  001BC4  CFDE F0AA          	movff	postinc2,vfpfcnvrt@f+2
  4811  001BC8  CFDE F0AB          	movff	postinc2,vfpfcnvrt@f+3
  4812  001BCC                     l1114:
  4813                           
  4814                           ; BSR set to: 0
  4815                           ;/Applications/microchip/xc8/v2.31/pic/sources/c99/common/doprnt.c: 958:             *fm
      +                          t += ((sizeof("lf")/sizeof("lf"[0]))-1);
  4816  001BCC  0E02               	movlw	2
  4817  001BCE  C054  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  4818  001BD2  C055  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  4819  001BD6  26DE               	addwf	postinc2,f,c
  4820  001BD8  0E00               	movlw	0
  4821  001BDA  22DD               	addwfc	postdec2,f,c
  4822  001BDC  EF33  F00D         	goto	l4584
  4823  001BE0                     l4604:
  4824                           
  4825                           ;/Applications/microchip/xc8/v2.31/pic/sources/c99/common/doprnt.c: 1099:         if (*f
      +                          mt[0] == 'n') {
  4826  001BE0  C054  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  4827  001BE4  C055  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  4828  001BE8  CFDE FFF6          	movff	postinc2,tblptrl
  4829  001BEC  CFDE FFF7          	movff	postinc2,tblptrh
  4830  001BF0  0E07               	movlw	(high __ramtop+-1)
  4831  001BF2  64F7               	cpfsgt	tblptrh,c
  4832  001BF4  D003               	bra	u6257
  4833  001BF6  0008               	tblrd		*
  4834  001BF8  50F5               	movf	tablat,w,c
  4835  001BFA  D005               	bra	u6250
  4836  001BFC                     u6257:
  4837  001BFC  CFF6 FFE1          	movff	tblptrl,fsr1l
  4838  001C00  CFF7 FFE2          	movff	tblptrh,fsr1h
  4839  001C04  50E7               	movf	indf1,w,c
  4840  001C06                     u6250:
  4841  001C06  0A6E               	xorlw	110
  4842  001C08  A4D8               	btfss	status,2,c
  4843  001C0A  EF09  F00E         	goto	u6261
  4844  001C0E  EF0B  F00E         	goto	u6260
  4845  001C12                     u6261:
  4846  001C12  EF34  F00E         	goto	l4614
  4847  001C16                     u6260:
  4848  001C16                     
  4849                           ;/Applications/microchip/xc8/v2.31/pic/sources/c99/common/doprnt.c: 1100:             ++
      +                          *fmt;
  4850  001C16  C054  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  4851  001C1A  C055  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  4852  001C1E  2ADE               	incf	postinc2,f,c
  4853  001C20  0E00               	movlw	0
  4854  001C22  22DD               	addwfc	postdec2,f,c
  4855                           
  4856                           ;/Applications/microchip/xc8/v2.31/pic/sources/c99/common/doprnt.c: 1101:             vp
      +                           = (void *)(*(int * *)__va_arg(*(int * **)ap, (int *)0));
  4857  001C24  C056  FFD9         	movff	vfpfcnvrt@ap,fsr2l
  4858  001C28  C057  FFDA         	movff	vfpfcnvrt@ap+1,fsr2h
  4859  001C2C  CFDF F058          	movff	indf2,??_vfpfcnvrt
  4860  001C30  0E02               	movlw	2
  4861  001C32  26DE               	addwf	postinc2,f,c
  4862  001C34  CFDF F059          	movff	indf2,??_vfpfcnvrt+1
  4863  001C38  0E00               	movlw	0
  4864  001C3A  22DD               	addwfc	postdec2,f,c
  4865  001C3C  C058  FFD9         	movff	??_vfpfcnvrt,fsr2l
  4866  001C40  C059  FFDA         	movff	??_vfpfcnvrt+1,fsr2h
  4867  001C44  CFDE F0A0          	movff	postinc2,vfpfcnvrt@vp
  4868  001C48  CFDD F0A1          	movff	postdec2,vfpfcnvrt@vp+1
  4869  001C4C                     
  4870                           ;/Applications/microchip/xc8/v2.31/pic/sources/c99/common/doprnt.c: 1102:             *(
      +                          int *)vp = nout;
  4871  001C4C  C0A0  FFD9         	movff	vfpfcnvrt@vp,fsr2l
  4872  001C50  C0A1  FFDA         	movff	vfpfcnvrt@vp+1,fsr2h
  4873  001C54  C0D2  FFDE         	movff	_nout,postinc2
  4874  001C58  C0D3  FFDD         	movff	_nout+1,postdec2
  4875  001C5C                     l4610:
  4876                           
  4877                           ;/Applications/microchip/xc8/v2.31/pic/sources/c99/common/doprnt.c: 1103:             re
      +                          turn 0;
  4878  001C5C  0E00               	movlw	0
  4879  001C5E  6E53               	movwf	(?_vfpfcnvrt+1)^0,c
  4880  001C60  0E00               	movlw	0
  4881  001C62  6E52               	movwf	?_vfpfcnvrt^0,c
  4882  001C64  EF95  F00E         	goto	l1103
  4883  001C68                     l4614:
  4884                           
  4885                           ;/Applications/microchip/xc8/v2.31/pic/sources/c99/common/doprnt.c: 1372:         if ((*
      +                          fmt)[0] == '%') {
  4886  001C68  C054  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  4887  001C6C  C055  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  4888  001C70  CFDE FFF6          	movff	postinc2,tblptrl
  4889  001C74  CFDE FFF7          	movff	postinc2,tblptrh
  4890  001C78  0E07               	movlw	(high __ramtop+-1)
  4891  001C7A  64F7               	cpfsgt	tblptrh,c
  4892  001C7C  D003               	bra	u6277
  4893  001C7E  0008               	tblrd		*
  4894  001C80  50F5               	movf	tablat,w,c
  4895  001C82  D005               	bra	u6270
  4896  001C84                     u6277:
  4897  001C84  CFF6 FFE1          	movff	tblptrl,fsr1l
  4898  001C88  CFF7 FFE2          	movff	tblptrh,fsr1h
  4899  001C8C  50E7               	movf	indf1,w,c
  4900  001C8E                     u6270:
  4901  001C8E  0A25               	xorlw	37
  4902  001C90  A4D8               	btfss	status,2,c
  4903  001C92  EF4D  F00E         	goto	u6281
  4904  001C96  EF4F  F00E         	goto	u6280
  4905  001C9A                     u6281:
  4906  001C9A  EF66  F00E         	goto	l4624
  4907  001C9E                     u6280:
  4908  001C9E                     
  4909                           ;/Applications/microchip/xc8/v2.31/pic/sources/c99/common/doprnt.c: 1373:             ++
      +                          *fmt;
  4910  001C9E  C054  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  4911  001CA2  C055  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  4912  001CA6  2ADE               	incf	postinc2,f,c
  4913  001CA8  0E00               	movlw	0
  4914  001CAA  22DD               	addwfc	postdec2,f,c
  4915  001CAC                     
  4916                           ;/Applications/microchip/xc8/v2.31/pic/sources/c99/common/doprnt.c: 1374:             fp
      +                          utc((int)'%', fp);
  4917  001CAC  0E00               	movlw	0
  4918  001CAE  6E05               	movwf	(fputc@c+1)^0,c
  4919  001CB0  0E25               	movlw	37
  4920  001CB2  6E04               	movwf	fputc@c^0,c
  4921  001CB4  C052  F006         	movff	vfpfcnvrt@fp,fputc@fp
  4922  001CB8  C053  F007         	movff	vfpfcnvrt@fp+1,fputc@fp+1
  4923  001CBC  EC81  F021         	call	_fputc	;wreg free
  4924  001CC0                     l4620:
  4925                           
  4926                           ;/Applications/microchip/xc8/v2.31/pic/sources/c99/common/doprnt.c: 1375:             re
      +                          turn 1;
  4927  001CC0  0E00               	movlw	0
  4928  001CC2  6E53               	movwf	(?_vfpfcnvrt+1)^0,c
  4929  001CC4  0E01               	movlw	1
  4930  001CC6  6E52               	movwf	?_vfpfcnvrt^0,c
  4931  001CC8  EF95  F00E         	goto	l1103
  4932  001CCC                     l4624:
  4933                           
  4934                           ;/Applications/microchip/xc8/v2.31/pic/sources/c99/common/doprnt.c: 1379:         ++*fmt
      +                          ;
  4935  001CCC  C054  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  4936  001CD0  C055  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  4937  001CD4  2ADE               	incf	postinc2,f,c
  4938  001CD6  0E00               	movlw	0
  4939  001CD8  22DD               	addwfc	postdec2,f,c
  4940  001CDA  EF2E  F00E         	goto	l4610
  4941  001CDE                     l4630:
  4942                           
  4943                           ;/Applications/microchip/xc8/v2.31/pic/sources/c99/common/doprnt.c: 1384:     fputc((int
      +                          )(*fmt)[0], fp);
  4944  001CDE  C054  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  4945  001CE2  C055  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  4946  001CE6  CFDE FFF6          	movff	postinc2,tblptrl
  4947  001CEA  CFDE FFF7          	movff	postinc2,tblptrh
  4948  001CEE  0E07               	movlw	(high __ramtop+-1)
  4949  001CF0  64F7               	cpfsgt	tblptrh,c
  4950  001CF2  D003               	bra	u6297
  4951  001CF4  0008               	tblrd		*
  4952  001CF6  50F5               	movf	tablat,w,c
  4953  001CF8  D005               	bra	u6290
  4954  001CFA                     u6297:
  4955  001CFA  CFF6 FFE1          	movff	tblptrl,fsr1l
  4956  001CFE  CFF7 FFE2          	movff	tblptrh,fsr1h
  4957  001D02  50E7               	movf	indf1,w,c
  4958  001D04                     u6290:
  4959  001D04  6E58               	movwf	??_vfpfcnvrt^0,c
  4960  001D06  5058               	movf	??_vfpfcnvrt^0,w,c
  4961  001D08  6E04               	movwf	fputc@c^0,c
  4962  001D0A  6A05               	clrf	(fputc@c+1)^0,c
  4963  001D0C  C052  F006         	movff	vfpfcnvrt@fp,fputc@fp
  4964  001D10  C053  F007         	movff	vfpfcnvrt@fp+1,fputc@fp+1
  4965  001D14  EC81  F021         	call	_fputc	;wreg free
  4966  001D18                     
  4967                           ;/Applications/microchip/xc8/v2.31/pic/sources/c99/common/doprnt.c: 1385:     ++*fmt;
  4968  001D18  C054  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  4969  001D1C  C055  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  4970  001D20  2ADE               	incf	postinc2,f,c
  4971  001D22  0E00               	movlw	0
  4972  001D24  22DD               	addwfc	postdec2,f,c
  4973  001D26  EF60  F00E         	goto	l4620
  4974  001D2A                     l1103:
  4975  001D2A  0012               	return		;funcret
  4976  001D2C                     __end_of_vfpfcnvrt:
  4977                           	callstack 0
  4978                           
  4979 ;; *************** function _strncmp *****************
  4980 ;; Defined at:
  4981 ;;		line 3 in file "/Applications/microchip/xc8/v2.31/pic/sources/c99/common/strncmp.c"
  4982 ;; Parameters:    Size  Location     Type
  4983 ;;  _l              2    0[COMRAM] PTR const unsigned char 
  4984 ;;		 -> vfpfcnvrt@ct(3), 
  4985 ;;  _r              2    2[COMRAM] PTR const unsigned char 
  4986 ;;		 -> STR_18(3), 
  4987 ;;  n               2    4[COMRAM] unsigned int 
  4988 ;; Auto vars:     Size  Location     Type
  4989 ;;  r               2    9[COMRAM] PTR const unsigned char 
  4990 ;;		 -> STR_18(3), 
  4991 ;;  l               2    7[COMRAM] PTR const unsigned char 
  4992 ;;		 -> vfpfcnvrt@ct(3), 
  4993 ;; Return value:  Size  Location     Type
  4994 ;;                  2    0[COMRAM] int 
  4995 ;; Registers used:
  4996 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru
  4997 ;; Tracked objects:
  4998 ;;		On entry : 0/0
  4999 ;;		On exit  : 0/0
  5000 ;;		Unchanged: 0/0
  5001 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  5002 ;;      Params:         6       0       0       0       0       0       0       0       0
  5003 ;;      Locals:         4       0       0       0       0       0       0       0       0
  5004 ;;      Temps:          1       0       0       0       0       0       0       0       0
  5005 ;;      Totals:        11       0       0       0       0       0       0       0       0
  5006 ;;Total ram usage:       11 bytes
  5007 ;; Hardware stack levels used:    1
  5008 ;; This function calls:
  5009 ;;		Nothing
  5010 ;; This function is called by:
  5011 ;;		_vfpfcnvrt
  5012 ;; This function uses a non-reentrant model
  5013 ;;
  5014                           
  5015                           	psect	text20
  5016  00422C                     __ptext20:
  5017                           	callstack 0
  5018  00422C                     _strncmp:
  5019                           	callstack 26
  5020  00422C  C001  F008         	movff	strncmp@_l,strncmp@l
  5021  004230  C002  F009         	movff	strncmp@_l+1,strncmp@l+1
  5022  004234  C003  F00A         	movff	strncmp@_r,strncmp@r
  5023  004238  C004  F00B         	movff	strncmp@_r+1,strncmp@r+1
  5024  00423C  0605               	decf	strncmp@n^0,f,c
  5025  00423E  A0D8               	btfss	status,0,c
  5026  004240  0606               	decf	(strncmp@n+1)^0,f,c
  5027  004242  2805               	incf	strncmp@n^0,w,c
  5028  004244  E106               	bnz	u5841
  5029  004246  2806               	incf	(strncmp@n+1)^0,w,c
  5030  004248  A4D8               	btfss	status,2,c
  5031  00424A  EF29  F021         	goto	u5841
  5032  00424E  EF2B  F021         	goto	u5840
  5033  004252                     u5841:
  5034  004252  EF38  F021         	goto	l4490
  5035  004256                     u5840:
  5036  004256  0E00               	movlw	0
  5037  004258  6E02               	movwf	(?_strncmp+1)^0,c
  5038  00425A  0E00               	movlw	0
  5039  00425C  6E01               	movwf	?_strncmp^0,c
  5040  00425E  EF80  F021         	goto	l1234
  5041  004262                     l4488:
  5042  004262  4A08               	infsnz	strncmp@l^0,f,c
  5043  004264  2A09               	incf	(strncmp@l+1)^0,f,c
  5044  004266  4A0A               	infsnz	strncmp@r^0,f,c
  5045  004268  2A0B               	incf	(strncmp@r+1)^0,f,c
  5046  00426A  0605               	decf	strncmp@n^0,f,c
  5047  00426C  A0D8               	btfss	status,0,c
  5048  00426E  0606               	decf	(strncmp@n+1)^0,f,c
  5049  004270                     l4490:
  5050  004270  C008  FFD9         	movff	strncmp@l,fsr2l
  5051  004274  C009  FFDA         	movff	strncmp@l+1,fsr2h
  5052  004278  50DF               	movf	indf2,w,c
  5053  00427A  B4D8               	btfsc	status,2,c
  5054  00427C  EF42  F021         	goto	u5851
  5055  004280  EF44  F021         	goto	u5850
  5056  004284                     u5851:
  5057  004284  EF6F  F021         	goto	l4498
  5058  004288                     u5850:
  5059  004288  C00A  FFF6         	movff	strncmp@r,tblptrl
  5060  00428C  C00B  FFF7         	movff	strncmp@r+1,tblptrh
  5061  004290                     	if	0	;tblptru may be non-zero
  5062  004290                     	endif
  5063  004290                     	if	0	;tblptru may be non-zero
  5064  004290                     	endif
  5065  004290  0008               	tblrd		*
  5066  004292  50F5               	movf	tablat,w,c
  5067  004294  0900               	iorlw	0
  5068  004296  B4D8               	btfsc	status,2,c
  5069  004298  EF50  F021         	goto	u5861
  5070  00429C  EF52  F021         	goto	u5860
  5071  0042A0                     u5861:
  5072  0042A0  EF6F  F021         	goto	l4498
  5073  0042A4                     u5860:
  5074  0042A4  5005               	movf	strncmp@n^0,w,c
  5075  0042A6  1006               	iorwf	(strncmp@n+1)^0,w,c
  5076  0042A8  B4D8               	btfsc	status,2,c
  5077  0042AA  EF59  F021         	goto	u5871
  5078  0042AE  EF5B  F021         	goto	u5870
  5079  0042B2                     u5871:
  5080  0042B2  EF6F  F021         	goto	l4498
  5081  0042B6                     u5870:
  5082  0042B6  C008  FFD9         	movff	strncmp@l,fsr2l
  5083  0042BA  C009  FFDA         	movff	strncmp@l+1,fsr2h
  5084  0042BE  50DF               	movf	indf2,w,c
  5085  0042C0  6E07               	movwf	??_strncmp^0,c
  5086  0042C2  C00A  FFF6         	movff	strncmp@r,tblptrl
  5087  0042C6  C00B  FFF7         	movff	strncmp@r+1,tblptrh
  5088  0042CA                     	if	0	;tblptru may be non-zero
  5089  0042CA                     	endif
  5090  0042CA                     	if	0	;tblptru may be non-zero
  5091  0042CA                     	endif
  5092  0042CA  0008               	tblrd		*
  5093  0042CC  50F5               	movf	tablat,w,c
  5094  0042CE  1807               	xorwf	??_strncmp^0,w,c
  5095  0042D0  B4D8               	btfsc	status,2,c
  5096  0042D2  EF6D  F021         	goto	u5881
  5097  0042D6  EF6F  F021         	goto	u5880
  5098  0042DA                     u5881:
  5099  0042DA  EF31  F021         	goto	l4488
  5100  0042DE                     u5880:
  5101  0042DE                     l4498:
  5102  0042DE  C008  FFD9         	movff	strncmp@l,fsr2l
  5103  0042E2  C009  FFDA         	movff	strncmp@l+1,fsr2h
  5104  0042E6  50DF               	movf	indf2,w,c
  5105  0042E8  6E07               	movwf	??_strncmp^0,c
  5106  0042EA  C00A  FFF6         	movff	strncmp@r,tblptrl
  5107  0042EE  C00B  FFF7         	movff	strncmp@r+1,tblptrh
  5108  0042F2                     	if	0	;tblptru may be non-zero
  5109  0042F2                     	endif
  5110  0042F2                     	if	0	;tblptru may be non-zero
  5111  0042F2                     	endif
  5112  0042F2  0008               	tblrd		*
  5113  0042F4  50F5               	movf	tablat,w,c
  5114  0042F6  5C07               	subwf	??_strncmp^0,w,c
  5115  0042F8  6E01               	movwf	?_strncmp^0,c
  5116  0042FA  6A02               	clrf	(?_strncmp+1)^0,c
  5117  0042FC  A0D8               	btfss	status,0,c
  5118  0042FE  0602               	decf	(?_strncmp+1)^0,f,c
  5119  004300                     l1234:
  5120  004300  0012               	return		;funcret
  5121  004302                     __end_of_strncmp:
  5122                           	callstack 0
  5123                           
  5124 ;; *************** function _efgtoa *****************
  5125 ;; Defined at:
  5126 ;;		line 332 in file "/Applications/microchip/xc8/v2.31/pic/sources/c99/common/doprnt.c"
  5127 ;; Parameters:    Size  Location     Type
  5128 ;;  fp              2   69[COMRAM] PTR struct _IO_FILE
  5129 ;;		 -> NULL(0), sprintf@f(6), 
  5130 ;;  f               4   71[COMRAM] PTR struct _IO_FILE
  5131 ;;  c               1   75[COMRAM] unsigned char 
  5132 ;; Auto vars:     Size  Location     Type
  5133 ;;  u               4   52[BANK0 ] unsigned char 
  5134 ;;  g               4   44[BANK0 ] unsigned char 
  5135 ;;  l               4   38[BANK0 ] unsigned char 
  5136 ;;  h               4   34[BANK0 ] unsigned char 
  5137 ;;  ou              4   20[BANK0 ] unsigned char 
  5138 ;;  n               2   50[BANK0 ] int 
  5139 ;;  e               2   48[BANK0 ] int 
  5140 ;;  i               2   42[BANK0 ] int 
  5141 ;;  w               2   30[BANK0 ] int 
  5142 ;;  p               2   28[BANK0 ] int 
  5143 ;;  sign            2   26[BANK0 ] int 
  5144 ;;  d               2   24[BANK0 ] int 
  5145 ;;  m               2   18[BANK0 ] int 
  5146 ;;  ne              2   16[BANK0 ] int 
  5147 ;;  pp              2   14[BANK0 ] int 
  5148 ;;  t               2   12[BANK0 ] int 
  5149 ;;  mode            1   33[BANK0 ] unsigned char 
  5150 ;;  nmode           1   32[BANK0 ] unsigned char 
  5151 ;; Return value:  Size  Location     Type
  5152 ;;                  2   69[COMRAM] int 
  5153 ;; Registers used:
  5154 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  5155 ;; Tracked objects:
  5156 ;;		On entry : 0/0
  5157 ;;		On exit  : 0/0
  5158 ;;		Unchanged: 0/0
  5159 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  5160 ;;      Params:         7       0       0       0       0       0       0       0       0
  5161 ;;      Locals:         0      56       0       0       0       0       0       0       0
  5162 ;;      Temps:          5       0       0       0       0       0       0       0       0
  5163 ;;      Totals:        12      56       0       0       0       0       0       0       0
  5164 ;;Total ram usage:       68 bytes
  5165 ;; Hardware stack levels used:    1
  5166 ;; Hardware stack levels required when called:    4
  5167 ;; This function calls:
  5168 ;;		___awdiv
  5169 ;;		___awmod
  5170 ;;		___fladd
  5171 ;;		___fldiv
  5172 ;;		___fleq
  5173 ;;		___flge
  5174 ;;		___flmul
  5175 ;;		___flneg
  5176 ;;		___flsub
  5177 ;;		___fltol
  5178 ;;		___fpclassifyf
  5179 ;;		_floorf
  5180 ;;		_isupper
  5181 ;;		_pad
  5182 ;;		_strcpy
  5183 ;;		_tolower
  5184 ;; This function is called by:
  5185 ;;		_vfpfcnvrt
  5186 ;; This function uses a non-reentrant model
  5187 ;;
  5188                           
  5189                           	psect	text21
  5190  00085C                     __ptext21:
  5191                           	callstack 0
  5192  00085C                     _efgtoa:
  5193                           	callstack 22
  5194  00085C                     
  5195                           ;/Applications/microchip/xc8/v2.31/pic/sources/c99/common/doprnt.c: 332: static int efgt
      +                          oa(FILE *fp, long double f, char c);/Applications/microchip/xc8/v2.31/pic/sources/c99/co
      +                          mmon/doprnt.c: 333: {;/Applications/microchip/xc8/v2.31/pic/sources/c99/common/doprnt.c:
      +                           334:     char mode, nmode;;/Applications/microchip/xc8/v2.31/pic/sources/c99/common/dop
      +                          rnt.c: 335:     int d, e, i, m, n, ne, p, pp, sign, t, w;;/Applications/microchip/xc8/v2
      +                          .31/pic/sources/c99/common/doprnt.c: 336:     long double g, h, l, ou, u;
  5196  00085C  0E00               	movlw	0
  5197  00085E  0100               	movlb	0	; () banked
  5198  000860  6F7B               	movwf	(efgtoa@sign+1)& (0+255),b
  5199  000862  0E00               	movlw	0
  5200  000864  6F7A               	movwf	efgtoa@sign& (0+255),b
  5201  000866                     
  5202                           ; BSR set to: 0
  5203                           ;/Applications/microchip/xc8/v2.31/pic/sources/c99/common/doprnt.c: 340:     g = f;
  5204  000866  C048  F08C         	movff	efgtoa@f,efgtoa@g
  5205  00086A  C049  F08D         	movff	efgtoa@f+1,efgtoa@g+1
  5206  00086E  C04A  F08E         	movff	efgtoa@f+2,efgtoa@g+2
  5207  000872  C04B  F08F         	movff	efgtoa@f+3,efgtoa@g+3
  5208  000876                     
  5209                           ; BSR set to: 0
  5210                           ;/Applications/microchip/xc8/v2.31/pic/sources/c99/common/doprnt.c: 341:     if (g < 0.0
      +                          ) {
  5211  000876  BF8F               	btfsc	(efgtoa@g+3)& (0+255),7,b
  5212  000878  EF42  F004         	goto	u5180
  5213  00087C  EF40  F004         	goto	u5181
  5214  000880                     u5181:
  5215  000880  EF58  F004         	goto	l4142
  5216  000884                     u5180:
  5217  000884                     
  5218                           ; BSR set to: 0
  5219                           ;/Applications/microchip/xc8/v2.31/pic/sources/c99/common/doprnt.c: 342:         sign = 
      +                          1;
  5220  000884  0E00               	movlw	0
  5221  000886  6F7B               	movwf	(efgtoa@sign+1)& (0+255),b
  5222  000888  0E01               	movlw	1
  5223  00088A  6F7A               	movwf	efgtoa@sign& (0+255),b
  5224  00088C                     
  5225                           ; BSR set to: 0
  5226                           ;/Applications/microchip/xc8/v2.31/pic/sources/c99/common/doprnt.c: 343:         g = -g;
  5227  00088C  C08C  F001         	movff	efgtoa@g,___flneg@f1
  5228  000890  C08D  F002         	movff	efgtoa@g+1,___flneg@f1+1
  5229  000894  C08E  F003         	movff	efgtoa@g+2,___flneg@f1+2
  5230  000898  C08F  F004         	movff	efgtoa@g+3,___flneg@f1+3
  5231  00089C  EC2E  F026         	call	___flneg	;wreg free
  5232  0008A0  C001  F08C         	movff	?___flneg,efgtoa@g
  5233  0008A4  C002  F08D         	movff	?___flneg+1,efgtoa@g+1
  5234  0008A8  C003  F08E         	movff	?___flneg+2,efgtoa@g+2
  5235  0008AC  C004  F08F         	movff	?___flneg+3,efgtoa@g+3
  5236  0008B0                     l4142:
  5237                           
  5238                           ;/Applications/microchip/xc8/v2.31/pic/sources/c99/common/doprnt.c: 347:     n = 0;
  5239  0008B0  0E00               	movlw	0
  5240  0008B2  0100               	movlb	0	; () banked
  5241  0008B4  6F93               	movwf	(efgtoa@n+1)& (0+255),b
  5242  0008B6  0E00               	movlw	0
  5243  0008B8  6F92               	movwf	efgtoa@n& (0+255),b
  5244  0008BA                     
  5245                           ; BSR set to: 0
  5246                           ;/Applications/microchip/xc8/v2.31/pic/sources/c99/common/doprnt.c: 348:     w = width;
  5247  0008BA  C0D4  F07E         	movff	_width,efgtoa@w
  5248  0008BE  C0D5  F07F         	movff	_width+1,efgtoa@w+1
  5249  0008C2                     
  5250                           ; BSR set to: 0
  5251                           ;/Applications/microchip/xc8/v2.31/pic/sources/c99/common/doprnt.c: 349:     if (sign ||
      +                           (flags & (1 << 2))) {
  5252  0008C2  517A               	movf	efgtoa@sign& (0+255),w,b
  5253  0008C4  117B               	iorwf	(efgtoa@sign+1)& (0+255),w,b
  5254  0008C6  A4D8               	btfss	status,2,c
  5255  0008C8  EF68  F004         	goto	u5191
  5256  0008CC  EF6A  F004         	goto	u5190
  5257  0008D0                     u5191:
  5258  0008D0  EF71  F004         	goto	l4150
  5259  0008D4                     u5190:
  5260  0008D4                     
  5261                           ; BSR set to: 0
  5262  0008D4  A5D8               	btfss	_flags& (0+255),2,b
  5263  0008D6  EF6F  F004         	goto	u5201
  5264  0008DA  EF71  F004         	goto	u5200
  5265  0008DE                     u5201:
  5266  0008DE  EF8B  F004         	goto	l4162
  5267  0008E2                     u5200:
  5268  0008E2                     l4150:
  5269                           
  5270                           ; BSR set to: 0
  5271                           ;/Applications/microchip/xc8/v2.31/pic/sources/c99/common/doprnt.c: 350:         dbuf[n]
      +                           = sign ? '-' : '+';
  5272  0008E2  517A               	movf	efgtoa@sign& (0+255),w,b
  5273  0008E4  117B               	iorwf	(efgtoa@sign+1)& (0+255),w,b
  5274  0008E6  A4D8               	btfss	status,2,c
  5275  0008E8  EF78  F004         	goto	u5211
  5276  0008EC  EF7A  F004         	goto	u5210
  5277  0008F0                     u5211:
  5278  0008F0  EF80  F004         	goto	l4154
  5279  0008F4                     u5210:
  5280  0008F4                     
  5281                           ; BSR set to: 0
  5282  0008F4  0E00               	movlw	0
  5283  0008F6  6F61               	movwf	(_efgtoa$1267+1)& (0+255),b
  5284  0008F8  0E2B               	movlw	43
  5285  0008FA  6F60               	movwf	_efgtoa$1267& (0+255),b
  5286  0008FC  EF84  F004         	goto	l4156
  5287  000900                     l4154:
  5288                           
  5289                           ; BSR set to: 0
  5290  000900  0E00               	movlw	0
  5291  000902  6F61               	movwf	(_efgtoa$1267+1)& (0+255),b
  5292  000904  0E2D               	movlw	45
  5293  000906  6F60               	movwf	_efgtoa$1267& (0+255),b
  5294  000908                     l4156:
  5295                           
  5296                           ; BSR set to: 0
  5297  000908  C060  F116         	movff	_efgtoa$1267,_dbuf
  5298  00090C                     
  5299                           ; BSR set to: 0
  5300                           ;/Applications/microchip/xc8/v2.31/pic/sources/c99/common/doprnt.c: 351:         ++n;
  5301  00090C  4B92               	infsnz	efgtoa@n& (0+255),f,b
  5302  00090E  2B93               	incf	(efgtoa@n+1)& (0+255),f,b
  5303  000910                     
  5304                           ; BSR set to: 0
  5305                           ;/Applications/microchip/xc8/v2.31/pic/sources/c99/common/doprnt.c: 352:         --w;
  5306  000910  077E               	decf	efgtoa@w& (0+255),f,b
  5307  000912  A0D8               	btfss	status,0,c
  5308  000914  077F               	decf	(efgtoa@w+1)& (0+255),f,b
  5309  000916                     l4162:
  5310                           
  5311                           ; BSR set to: 0
  5312                           ;/Applications/microchip/xc8/v2.31/pic/sources/c99/common/doprnt.c: 357:         if ((0 
      +                          ? isupper((int)c) : ((unsigned)((int)c)-'A') < 26)) {
  5313  000916  C08C  F001         	movff	efgtoa@g,___fpclassifyf@x
  5314  00091A  C08D  F002         	movff	efgtoa@g+1,___fpclassifyf@x+1
  5315  00091E  C08E  F003         	movff	efgtoa@g+2,___fpclassifyf@x+2
  5316  000922  C08F  F004         	movff	efgtoa@g+3,___fpclassifyf@x+3
  5317  000926  EC2B  F020         	call	___fpclassifyf	;wreg free
  5318  00092A  0401               	decf	?___fpclassifyf^0,w,c
  5319  00092C  1002               	iorwf	(?___fpclassifyf+1)^0,w,c
  5320  00092E  A4D8               	btfss	status,2,c
  5321  000930  EF9C  F004         	goto	u5221
  5322  000934  EF9E  F004         	goto	u5220
  5323  000938                     u5221:
  5324  000938  EFF5  F004         	goto	l4180
  5325  00093C                     u5220:
  5326  00093C  0EBF               	movlw	191
  5327  00093E  6E4D               	movwf	??_efgtoa^0,c
  5328  000940  0EFF               	movlw	255
  5329  000942  6E4E               	movwf	(??_efgtoa+1)^0,c
  5330  000944  504C               	movf	efgtoa@c^0,w,c
  5331  000946  6E4F               	movwf	(??_efgtoa+2)^0,c
  5332  000948  6A50               	clrf	(??_efgtoa+3)^0,c
  5333  00094A  504D               	movf	??_efgtoa^0,w,c
  5334  00094C  264F               	addwf	(??_efgtoa+2)^0,f,c
  5335  00094E  504E               	movf	(??_efgtoa+1)^0,w,c
  5336  000950  2250               	addwfc	(??_efgtoa+3)^0,f,c
  5337  000952  5050               	movf	(??_efgtoa+3)^0,w,c
  5338  000954  E10A               	bnz	u5230
  5339  000956  0E1A               	movlw	26
  5340  000958  5C4F               	subwf	(??_efgtoa+2)^0,w,c
  5341  00095A  A0D8               	btfss	status,0,c
  5342  00095C  EFB2  F004         	goto	u5231
  5343  000960  EFB5  F004         	goto	u5230
  5344  000964                     u5231:
  5345  000964  0E01               	movlw	1
  5346  000966  EFB6  F004         	goto	u5240
  5347  00096A                     u5230:
  5348  00096A  0E00               	movlw	0
  5349  00096C                     u5240:
  5350  00096C  0100               	movlb	0	; () banked
  5351  00096E  6F62               	movwf	_efgtoa$1268& (0+255),b
  5352  000970  6B63               	clrf	(_efgtoa$1268+1)& (0+255),b
  5353  000972                     
  5354                           ; BSR set to: 0
  5355  000972  5162               	movf	_efgtoa$1268& (0+255),w,b
  5356  000974  1163               	iorwf	(_efgtoa$1268+1)& (0+255),w,b
  5357  000976  B4D8               	btfsc	status,2,c
  5358  000978  EFC0  F004         	goto	u5251
  5359  00097C  EFC2  F004         	goto	u5250
  5360  000980                     u5251:
  5361  000980  EFD0  F004         	goto	l4172
  5362  000984                     u5250:
  5363  000984                     
  5364                           ; BSR set to: 0
  5365                           ;/Applications/microchip/xc8/v2.31/pic/sources/c99/common/doprnt.c: 358:             str
      +                          cpy(&dbuf[n], "INF");
  5366  000984  0E16               	movlw	low _dbuf
  5367  000986  2592               	addwf	efgtoa@n& (0+255),w,b
  5368  000988  6E01               	movwf	strcpy@dest^0,c
  5369  00098A  0E01               	movlw	high _dbuf
  5370  00098C  2193               	addwfc	(efgtoa@n+1)& (0+255),w,b
  5371  00098E  6E02               	movwf	(strcpy@dest+1)^0,c
  5372  000990  0E47               	movlw	low STR_8
  5373  000992  6E03               	movwf	strcpy@src^0,c
  5374  000994  0E08               	movlw	high STR_8
  5375  000996  6E04               	movwf	(strcpy@src+1)^0,c
  5376  000998  ECC6  F024         	call	_strcpy	;wreg free
  5377                           
  5378                           ;/Applications/microchip/xc8/v2.31/pic/sources/c99/common/doprnt.c: 359:         } else 
      +                          {
  5379  00099C  EFDC  F004         	goto	l4174
  5380  0009A0                     l4172:
  5381                           
  5382                           ; BSR set to: 0
  5383                           ;/Applications/microchip/xc8/v2.31/pic/sources/c99/common/doprnt.c: 360:             str
      +                          cpy(&dbuf[n], "inf");
  5384  0009A0  0E16               	movlw	low _dbuf
  5385  0009A2  2592               	addwf	efgtoa@n& (0+255),w,b
  5386  0009A4  6E01               	movwf	strcpy@dest^0,c
  5387  0009A6  0E01               	movlw	high _dbuf
  5388  0009A8  2193               	addwfc	(efgtoa@n+1)& (0+255),w,b
  5389  0009AA  6E02               	movwf	(strcpy@dest+1)^0,c
  5390  0009AC  0E4F               	movlw	low STR_9
  5391  0009AE  6E03               	movwf	strcpy@src^0,c
  5392  0009B0  0E08               	movlw	high STR_9
  5393  0009B2  6E04               	movwf	(strcpy@src+1)^0,c
  5394  0009B4  ECC6  F024         	call	_strcpy	;wreg free
  5395  0009B8                     l4174:
  5396                           
  5397                           ;/Applications/microchip/xc8/v2.31/pic/sources/c99/common/doprnt.c: 362:         w -= ((
      +                          sizeof("inf")/sizeof("inf"[0]))-1);
  5398  0009B8  0100               	movlb	0	; () banked
  5399  0009BA  0EFD               	movlw	253
  5400  0009BC  277E               	addwf	efgtoa@w& (0+255),f,b
  5401  0009BE  0EFF               	movlw	255
  5402  0009C0  237F               	addwfc	(efgtoa@w+1)& (0+255),f,b
  5403  0009C2                     l4176:
  5404                           
  5405                           ;/Applications/microchip/xc8/v2.31/pic/sources/c99/common/doprnt.c: 363:         return 
      +                          pad(fp, &dbuf[0], w);
  5406  0009C2  C046  F014         	movff	efgtoa@fp,pad@fp
  5407  0009C6  C047  F015         	movff	efgtoa@fp+1,pad@fp+1
  5408  0009CA  0E16               	movlw	low _dbuf
  5409  0009CC  6E16               	movwf	pad@buf^0,c
  5410  0009CE  0E01               	movlw	high _dbuf
  5411  0009D0  6E17               	movwf	(pad@buf+1)^0,c
  5412  0009D2  C07E  F018         	movff	efgtoa@w,pad@p
  5413  0009D6  C07F  F019         	movff	efgtoa@w+1,pad@p+1
  5414  0009DA  ECE6  F021         	call	_pad	;wreg free
  5415  0009DE  C014  F046         	movff	?_pad,?_efgtoa
  5416  0009E2  C015  F047         	movff	?_pad+1,?_efgtoa+1
  5417  0009E6  EF59  F00A         	goto	l1001
  5418  0009EA                     l4180:
  5419                           
  5420                           ;/Applications/microchip/xc8/v2.31/pic/sources/c99/common/doprnt.c: 366:         if ((0 
      +                          ? isupper((int)c) : ((unsigned)((int)c)-'A') < 26)) {
  5421  0009EA  C08C  F001         	movff	efgtoa@g,___fpclassifyf@x
  5422  0009EE  C08D  F002         	movff	efgtoa@g+1,___fpclassifyf@x+1
  5423  0009F2  C08E  F003         	movff	efgtoa@g+2,___fpclassifyf@x+2
  5424  0009F6  C08F  F004         	movff	efgtoa@g+3,___fpclassifyf@x+3
  5425  0009FA  EC2B  F020         	call	___fpclassifyf	;wreg free
  5426  0009FE  5001               	movf	?___fpclassifyf^0,w,c
  5427  000A00  1002               	iorwf	(?___fpclassifyf+1)^0,w,c
  5428  000A02  A4D8               	btfss	status,2,c
  5429  000A04  EF06  F005         	goto	u5261
  5430  000A08  EF08  F005         	goto	u5260
  5431  000A0C                     u5261:
  5432  000A0C  EF48  F005         	goto	l4198
  5433  000A10                     u5260:
  5434  000A10  0EBF               	movlw	191
  5435  000A12  6E4D               	movwf	??_efgtoa^0,c
  5436  000A14  0EFF               	movlw	255
  5437  000A16  6E4E               	movwf	(??_efgtoa+1)^0,c
  5438  000A18  504C               	movf	efgtoa@c^0,w,c
  5439  000A1A  6E4F               	movwf	(??_efgtoa+2)^0,c
  5440  000A1C  6A50               	clrf	(??_efgtoa+3)^0,c
  5441  000A1E  504D               	movf	??_efgtoa^0,w,c
  5442  000A20  264F               	addwf	(??_efgtoa+2)^0,f,c
  5443  000A22  504E               	movf	(??_efgtoa+1)^0,w,c
  5444  000A24  2250               	addwfc	(??_efgtoa+3)^0,f,c
  5445  000A26  5050               	movf	(??_efgtoa+3)^0,w,c
  5446  000A28  E10A               	bnz	u5270
  5447  000A2A  0E1A               	movlw	26
  5448  000A2C  5C4F               	subwf	(??_efgtoa+2)^0,w,c
  5449  000A2E  A0D8               	btfss	status,0,c
  5450  000A30  EF1C  F005         	goto	u5271
  5451  000A34  EF1F  F005         	goto	u5270
  5452  000A38                     u5271:
  5453  000A38  0E01               	movlw	1
  5454  000A3A  EF20  F005         	goto	u5280
  5455  000A3E                     u5270:
  5456  000A3E  0E00               	movlw	0
  5457  000A40                     u5280:
  5458  000A40  0100               	movlb	0	; () banked
  5459  000A42  6F64               	movwf	_efgtoa$1272& (0+255),b
  5460  000A44  6B65               	clrf	(_efgtoa$1272+1)& (0+255),b
  5461  000A46                     
  5462                           ; BSR set to: 0
  5463  000A46  5164               	movf	_efgtoa$1272& (0+255),w,b
  5464  000A48  1165               	iorwf	(_efgtoa$1272+1)& (0+255),w,b
  5465  000A4A  B4D8               	btfsc	status,2,c
  5466  000A4C  EF2A  F005         	goto	u5291
  5467  000A50  EF2C  F005         	goto	u5290
  5468  000A54                     u5291:
  5469  000A54  EF3A  F005         	goto	l4190
  5470  000A58                     u5290:
  5471  000A58                     
  5472                           ; BSR set to: 0
  5473                           ;/Applications/microchip/xc8/v2.31/pic/sources/c99/common/doprnt.c: 367:             str
      +                          cpy(&dbuf[n], "NAN");
  5474  000A58  0E16               	movlw	low _dbuf
  5475  000A5A  2592               	addwf	efgtoa@n& (0+255),w,b
  5476  000A5C  6E01               	movwf	strcpy@dest^0,c
  5477  000A5E  0E01               	movlw	high _dbuf
  5478  000A60  2193               	addwfc	(efgtoa@n+1)& (0+255),w,b
  5479  000A62  6E02               	movwf	(strcpy@dest+1)^0,c
  5480  000A64  0E4B               	movlw	low STR_12
  5481  000A66  6E03               	movwf	strcpy@src^0,c
  5482  000A68  0E08               	movlw	high STR_12
  5483  000A6A  6E04               	movwf	(strcpy@src+1)^0,c
  5484  000A6C  ECC6  F024         	call	_strcpy	;wreg free
  5485                           
  5486                           ;/Applications/microchip/xc8/v2.31/pic/sources/c99/common/doprnt.c: 368:         } else 
      +                          {
  5487  000A70  EFDC  F004         	goto	l4174
  5488  000A74                     l4190:
  5489                           
  5490                           ; BSR set to: 0
  5491                           ;/Applications/microchip/xc8/v2.31/pic/sources/c99/common/doprnt.c: 369:             str
      +                          cpy(&dbuf[n], "nan");
  5492  000A74  0E16               	movlw	low _dbuf
  5493  000A76  2592               	addwf	efgtoa@n& (0+255),w,b
  5494  000A78  6E01               	movwf	strcpy@dest^0,c
  5495  000A7A  0E01               	movlw	high _dbuf
  5496  000A7C  2193               	addwfc	(efgtoa@n+1)& (0+255),w,b
  5497  000A7E  6E02               	movwf	(strcpy@dest+1)^0,c
  5498  000A80  0E53               	movlw	low STR_13
  5499  000A82  6E03               	movwf	strcpy@src^0,c
  5500  000A84  0E08               	movlw	high STR_13
  5501  000A86  6E04               	movwf	(strcpy@src+1)^0,c
  5502  000A88  ECC6  F024         	call	_strcpy	;wreg free
  5503  000A8C  EFDC  F004         	goto	l4174
  5504  000A90                     l4198:
  5505                           
  5506                           ;/Applications/microchip/xc8/v2.31/pic/sources/c99/common/doprnt.c: 376:     u = 1.0;
  5507  000A90  0E00               	movlw	0
  5508  000A92  0100               	movlb	0	; () banked
  5509  000A94  6F94               	movwf	efgtoa@u& (0+255),b
  5510  000A96  0E00               	movlw	0
  5511  000A98  6F95               	movwf	(efgtoa@u+1)& (0+255),b
  5512  000A9A  0E80               	movlw	128
  5513  000A9C  6F96               	movwf	(efgtoa@u+2)& (0+255),b
  5514  000A9E  0E3F               	movlw	63
  5515  000AA0  6F97               	movwf	(efgtoa@u+3)& (0+255),b
  5516                           
  5517                           ;/Applications/microchip/xc8/v2.31/pic/sources/c99/common/doprnt.c: 377:     e = 0;
  5518  000AA2  0E00               	movlw	0
  5519  000AA4  6F91               	movwf	(efgtoa@e+1)& (0+255),b
  5520  000AA6  0E00               	movlw	0
  5521  000AA8  6F90               	movwf	efgtoa@e& (0+255),b
  5522  000AAA                     
  5523                           ; BSR set to: 0
  5524                           ;/Applications/microchip/xc8/v2.31/pic/sources/c99/common/doprnt.c: 378:     if (!(g == 
      +                          0.0)) {
  5525  000AAA  C08C  F001         	movff	efgtoa@g,___fleq@ff1
  5526  000AAE  C08D  F002         	movff	efgtoa@g+1,___fleq@ff1+1
  5527  000AB2  C08E  F003         	movff	efgtoa@g+2,___fleq@ff1+2
  5528  000AB6  C08F  F004         	movff	efgtoa@g+3,___fleq@ff1+3
  5529  000ABA  0E00               	movlw	0
  5530  000ABC  6E05               	movwf	___fleq@ff2^0,c
  5531  000ABE  0E00               	movlw	0
  5532  000AC0  6E06               	movwf	(___fleq@ff2+1)^0,c
  5533  000AC2  0E00               	movlw	0
  5534  000AC4  6E07               	movwf	(___fleq@ff2+2)^0,c
  5535  000AC6  0E00               	movlw	0
  5536  000AC8  6E08               	movwf	(___fleq@ff2+3)^0,c
  5537  000ACA  EC5A  F023         	call	___fleq	;wreg free
  5538  000ACE  B0D8               	btfsc	status,0,c
  5539  000AD0  EF6C  F005         	goto	u5301
  5540  000AD4  EF6E  F005         	goto	u5300
  5541  000AD8                     u5301:
  5542  000AD8  EFF1  F005         	goto	l4216
  5543  000ADC                     u5300:
  5544  000ADC  EF8D  F005         	goto	l4208
  5545  000AE0                     l4204:
  5546                           
  5547                           ;/Applications/microchip/xc8/v2.31/pic/sources/c99/common/doprnt.c: 380:             u =
      +                           u*10.0;
  5548  000AE0  C094  F019         	movff	efgtoa@u,___flmul@b
  5549  000AE4  C095  F01A         	movff	efgtoa@u+1,___flmul@b+1
  5550  000AE8  C096  F01B         	movff	efgtoa@u+2,___flmul@b+2
  5551  000AEC  C097  F01C         	movff	efgtoa@u+3,___flmul@b+3
  5552  000AF0  0E00               	movlw	0
  5553  000AF2  6E1D               	movwf	___flmul@a^0,c
  5554  000AF4  0E00               	movlw	0
  5555  000AF6  6E1E               	movwf	(___flmul@a+1)^0,c
  5556  000AF8  0E20               	movlw	32
  5557  000AFA  6E1F               	movwf	(___flmul@a+2)^0,c
  5558  000AFC  0E41               	movlw	65
  5559  000AFE  6E20               	movwf	(___flmul@a+3)^0,c
  5560  000B00  ECF6  F010         	call	___flmul	;wreg free
  5561  000B04  C019  F094         	movff	?___flmul,efgtoa@u
  5562  000B08  C01A  F095         	movff	?___flmul+1,efgtoa@u+1
  5563  000B0C  C01B  F096         	movff	?___flmul+2,efgtoa@u+2
  5564  000B10  C01C  F097         	movff	?___flmul+3,efgtoa@u+3
  5565  000B14                     
  5566                           ;/Applications/microchip/xc8/v2.31/pic/sources/c99/common/doprnt.c: 381:             ++e
      +                          ;
  5567  000B14  0100               	movlb	0	; () banked
  5568  000B16  4B90               	infsnz	efgtoa@e& (0+255),f,b
  5569  000B18  2B91               	incf	(efgtoa@e+1)& (0+255),f,b
  5570  000B1A                     l4208:
  5571                           
  5572                           ;/Applications/microchip/xc8/v2.31/pic/sources/c99/common/doprnt.c: 379:         while (
      +                          !(g < (u*10.0))) {
  5573  000B1A  C08C  F03A         	movff	efgtoa@g,___flge@ff1
  5574  000B1E  C08D  F03B         	movff	efgtoa@g+1,___flge@ff1+1
  5575  000B22  C08E  F03C         	movff	efgtoa@g+2,___flge@ff1+2
  5576  000B26  C08F  F03D         	movff	efgtoa@g+3,___flge@ff1+3
  5577  000B2A  0E00               	movlw	0
  5578  000B2C  6E1D               	movwf	___flmul@a^0,c
  5579  000B2E  0E00               	movlw	0
  5580  000B30  6E1E               	movwf	(___flmul@a+1)^0,c
  5581  000B32  0E20               	movlw	32
  5582  000B34  6E1F               	movwf	(___flmul@a+2)^0,c
  5583  000B36  0E41               	movlw	65
  5584  000B38  6E20               	movwf	(___flmul@a+3)^0,c
  5585  000B3A  C094  F019         	movff	efgtoa@u,___flmul@b
  5586  000B3E  C095  F01A         	movff	efgtoa@u+1,___flmul@b+1
  5587  000B42  C096  F01B         	movff	efgtoa@u+2,___flmul@b+2
  5588  000B46  C097  F01C         	movff	efgtoa@u+3,___flmul@b+3
  5589  000B4A  ECF6  F010         	call	___flmul	;wreg free
  5590  000B4E  C019  F03E         	movff	?___flmul,___flge@ff2
  5591  000B52  C01A  F03F         	movff	?___flmul+1,___flge@ff2+1
  5592  000B56  C01B  F040         	movff	?___flmul+2,___flge@ff2+2
  5593  000B5A  C01C  F041         	movff	?___flmul+3,___flge@ff2+3
  5594  000B5E  ECA9  F01F         	call	___flge	;wreg free
  5595  000B62  B0D8               	btfsc	status,0,c
  5596  000B64  EFB6  F005         	goto	u5311
  5597  000B68  EFB8  F005         	goto	u5310
  5598  000B6C                     u5311:
  5599  000B6C  EF70  F005         	goto	l4204
  5600  000B70                     u5310:
  5601  000B70  EFD8  F005         	goto	l4214
  5602  000B74                     l4210:
  5603                           
  5604                           ;/Applications/microchip/xc8/v2.31/pic/sources/c99/common/doprnt.c: 384:             u =
      +                           u/10.0;
  5605  000B74  C094  F001         	movff	efgtoa@u,___fldiv@b
  5606  000B78  C095  F002         	movff	efgtoa@u+1,___fldiv@b+1
  5607  000B7C  C096  F003         	movff	efgtoa@u+2,___fldiv@b+2
  5608  000B80  C097  F004         	movff	efgtoa@u+3,___fldiv@b+3
  5609  000B84  0E00               	movlw	0
  5610  000B86  6E05               	movwf	___fldiv@a^0,c
  5611  000B88  0E00               	movlw	0
  5612  000B8A  6E06               	movwf	(___fldiv@a+1)^0,c
  5613  000B8C  0E20               	movlw	32
  5614  000B8E  6E07               	movwf	(___fldiv@a+2)^0,c
  5615  000B90  0E41               	movlw	65
  5616  000B92  6E08               	movwf	(___fldiv@a+3)^0,c
  5617  000B94  EC0B  F013         	call	___fldiv	;wreg free
  5618  000B98  C001  F094         	movff	?___fldiv,efgtoa@u
  5619  000B9C  C002  F095         	movff	?___fldiv+1,efgtoa@u+1
  5620  000BA0  C003  F096         	movff	?___fldiv+2,efgtoa@u+2
  5621  000BA4  C004  F097         	movff	?___fldiv+3,efgtoa@u+3
  5622  000BA8                     
  5623                           ;/Applications/microchip/xc8/v2.31/pic/sources/c99/common/doprnt.c: 385:             --e
      +                          ;
  5624  000BA8  0100               	movlb	0	; () banked
  5625  000BAA  0790               	decf	efgtoa@e& (0+255),f,b
  5626  000BAC  A0D8               	btfss	status,0,c
  5627  000BAE  0791               	decf	(efgtoa@e+1)& (0+255),f,b
  5628  000BB0                     l4214:
  5629                           
  5630                           ;/Applications/microchip/xc8/v2.31/pic/sources/c99/common/doprnt.c: 383:         while (
      +                          g < u) {
  5631  000BB0  C08C  F03A         	movff	efgtoa@g,___flge@ff1
  5632  000BB4  C08D  F03B         	movff	efgtoa@g+1,___flge@ff1+1
  5633  000BB8  C08E  F03C         	movff	efgtoa@g+2,___flge@ff1+2
  5634  000BBC  C08F  F03D         	movff	efgtoa@g+3,___flge@ff1+3
  5635  000BC0  C094  F03E         	movff	efgtoa@u,___flge@ff2
  5636  000BC4  C095  F03F         	movff	efgtoa@u+1,___flge@ff2+1
  5637  000BC8  C096  F040         	movff	efgtoa@u+2,___flge@ff2+2
  5638  000BCC  C097  F041         	movff	efgtoa@u+3,___flge@ff2+3
  5639  000BD0  ECA9  F01F         	call	___flge	;wreg free
  5640  000BD4  A0D8               	btfss	status,0,c
  5641  000BD6  EFEF  F005         	goto	u5321
  5642  000BDA  EFF1  F005         	goto	u5320
  5643  000BDE                     u5321:
  5644  000BDE  EFBA  F005         	goto	l4210
  5645  000BE2                     u5320:
  5646  000BE2                     l4216:
  5647                           
  5648                           ;/Applications/microchip/xc8/v2.31/pic/sources/c99/common/doprnt.c: 390:     mode = (cha
      +                          r)tolower((int)c);
  5649  000BE2  C04C  F007         	movff	efgtoa@c,tolower@c
  5650  000BE6  6A08               	clrf	(tolower@c+1)^0,c
  5651  000BE8  EC96  F024         	call	_tolower	;wreg free
  5652  000BEC  5007               	movf	?_tolower^0,w,c
  5653  000BEE  0100               	movlb	0	; () banked
  5654  000BF0  6F81               	movwf	efgtoa@mode& (0+255),b
  5655  000BF2                     
  5656                           ; BSR set to: 0
  5657                           ;/Applications/microchip/xc8/v2.31/pic/sources/c99/common/doprnt.c: 391:     nmode = mod
      +                          e;
  5658  000BF2  C081  F080         	movff	efgtoa@mode,efgtoa@nmode
  5659  000BF6                     
  5660                           ; BSR set to: 0
  5661                           ;/Applications/microchip/xc8/v2.31/pic/sources/c99/common/doprnt.c: 392:     if (mode ==
      +                           'g') {
  5662  000BF6  0E67               	movlw	103
  5663  000BF8  1981               	xorwf	efgtoa@mode& (0+255),w,b
  5664  000BFA  A4D8               	btfss	status,2,c
  5665  000BFC  EF02  F006         	goto	u5331
  5666  000C00  EF04  F006         	goto	u5330
  5667  000C04                     u5331:
  5668  000C04  EF2A  F006         	goto	l4230
  5669  000C08                     u5330:
  5670  000C08                     
  5671                           ; BSR set to: 0
  5672                           ;/Applications/microchip/xc8/v2.31/pic/sources/c99/common/doprnt.c: 393:   if (prec == 0
      +                          ) {
  5673  000C08  51D6               	movf	_prec& (0+255),w,b
  5674  000C0A  11D7               	iorwf	(_prec+1)& (0+255),w,b
  5675  000C0C  A4D8               	btfss	status,2,c
  5676  000C0E  EF0B  F006         	goto	u5341
  5677  000C12  EF0D  F006         	goto	u5340
  5678  000C16                     u5341:
  5679  000C16  EF11  F006         	goto	l4226
  5680  000C1A                     u5340:
  5681  000C1A                     
  5682                           ; BSR set to: 0
  5683                           ;/Applications/microchip/xc8/v2.31/pic/sources/c99/common/doprnt.c: 394:    prec = 1;
  5684  000C1A  0E00               	movlw	0
  5685  000C1C  6FD7               	movwf	(_prec+1)& (0+255),b
  5686  000C1E  0E01               	movlw	1
  5687  000C20  6FD6               	movwf	_prec& (0+255),b
  5688  000C22                     l4226:
  5689                           
  5690                           ; BSR set to: 0
  5691                           ;/Applications/microchip/xc8/v2.31/pic/sources/c99/common/doprnt.c: 396:         p = (0 
      +                          < prec) ? prec : 6;
  5692  000C22  BFD7               	btfsc	(_prec+1)& (0+255),7,b
  5693  000C24  EF1E  F006         	goto	u5350
  5694  000C28  51D7               	movf	(_prec+1)& (0+255),w,b
  5695  000C2A  E106               	bnz	u5351
  5696  000C2C  05D6               	decf	_prec& (0+255),w,b
  5697  000C2E  B0D8               	btfsc	status,0,c
  5698  000C30  EF1C  F006         	goto	u5351
  5699  000C34  EF1E  F006         	goto	u5350
  5700  000C38                     u5351:
  5701  000C38  EF24  F006         	goto	l1019
  5702  000C3C                     u5350:
  5703  000C3C                     l4228:
  5704                           
  5705                           ; BSR set to: 0
  5706  000C3C  0E00               	movlw	0
  5707  000C3E  6F7D               	movwf	(efgtoa@p+1)& (0+255),b
  5708  000C40  0E06               	movlw	6
  5709  000C42  6F7C               	movwf	efgtoa@p& (0+255),b
  5710  000C44  EF33  F006         	goto	l4236
  5711  000C48                     l1019:
  5712                           
  5713                           ; BSR set to: 0
  5714  000C48  C0D6  F07C         	movff	_prec,efgtoa@p
  5715  000C4C  C0D7  F07D         	movff	_prec+1,efgtoa@p+1
  5716  000C50  EF33  F006         	goto	l4236
  5717  000C54                     l4230:
  5718                           
  5719                           ; BSR set to: 0
  5720                           ;/Applications/microchip/xc8/v2.31/pic/sources/c99/common/doprnt.c: 398:         p = (pr
      +                          ec < 0) ? 6 : prec;
  5721  000C54  BFD7               	btfsc	(_prec+1)& (0+255),7,b
  5722  000C56  EF2F  F006         	goto	u5361
  5723  000C5A  EF31  F006         	goto	u5360
  5724  000C5E                     u5361:
  5725  000C5E  EF1E  F006         	goto	l4228
  5726  000C62                     u5360:
  5727  000C62  EF24  F006         	goto	l1019
  5728  000C66                     l4236:
  5729                           
  5730                           ; BSR set to: 0
  5731                           ;/Applications/microchip/xc8/v2.31/pic/sources/c99/common/doprnt.c: 402:     if (mode ==
      +                           'g') {
  5732  000C66  0E67               	movlw	103
  5733  000C68  1981               	xorwf	efgtoa@mode& (0+255),w,b
  5734  000C6A  A4D8               	btfss	status,2,c
  5735  000C6C  EF3A  F006         	goto	u5371
  5736  000C70  EF3C  F006         	goto	u5370
  5737  000C74                     u5371:
  5738  000C74  EF6B  F006         	goto	l4246
  5739  000C78                     u5370:
  5740  000C78                     
  5741                           ; BSR set to: 0
  5742                           ;/Applications/microchip/xc8/v2.31/pic/sources/c99/common/doprnt.c: 403:         if (!(e
      +                           < -4) && !((p - 1) < e)) {
  5743  000C78  AF91               	btfss	(efgtoa@e+1)& (0+255),7,b
  5744  000C7A  EF4A  F006         	goto	u5380
  5745  000C7E  0EFC               	movlw	252
  5746  000C80  5D90               	subwf	efgtoa@e& (0+255),w,b
  5747  000C82  0EFF               	movlw	255
  5748  000C84  5991               	subwfb	(efgtoa@e+1)& (0+255),w,b
  5749  000C86  A0D8               	btfss	status,0,c
  5750  000C88  EF48  F006         	goto	u5381
  5751  000C8C  EF4A  F006         	goto	u5380
  5752  000C90                     u5381:
  5753  000C90  EF69  F006         	goto	l4244
  5754  000C94                     u5380:
  5755  000C94                     
  5756                           ; BSR set to: 0
  5757  000C94  0EFF               	movlw	255
  5758  000C96  6E4D               	movwf	??_efgtoa^0,c
  5759  000C98  0EFF               	movlw	255
  5760  000C9A  6E4E               	movwf	(??_efgtoa+1)^0,c
  5761  000C9C  C07C  F04F         	movff	efgtoa@p,??_efgtoa+2
  5762  000CA0  C07D  F050         	movff	efgtoa@p+1,??_efgtoa+3
  5763  000CA4  504D               	movf	??_efgtoa^0,w,c
  5764  000CA6  264F               	addwf	(??_efgtoa+2)^0,f,c
  5765  000CA8  504E               	movf	(??_efgtoa+1)^0,w,c
  5766  000CAA  2250               	addwfc	(??_efgtoa+3)^0,f,c
  5767  000CAC  5190               	movf	efgtoa@e& (0+255),w,b
  5768  000CAE  5C4F               	subwf	(??_efgtoa+2)^0,w,c
  5769  000CB0  5050               	movf	(??_efgtoa+3)^0,w,c
  5770  000CB2  0A80               	xorlw	128
  5771  000CB4  6E51               	movwf	(??_efgtoa+4)^0,c
  5772  000CB6  5191               	movf	(efgtoa@e+1)& (0+255),w,b
  5773  000CB8  0A80               	xorlw	128
  5774  000CBA  5851               	subwfb	(??_efgtoa+4)^0,w,c
  5775  000CBC  A0D8               	btfss	status,0,c
  5776  000CBE  EF63  F006         	goto	u5391
  5777  000CC2  EF65  F006         	goto	u5390
  5778  000CC6                     u5391:
  5779  000CC6  EF69  F006         	goto	l4244
  5780  000CCA                     u5390:
  5781  000CCA                     
  5782                           ; BSR set to: 0
  5783                           ;/Applications/microchip/xc8/v2.31/pic/sources/c99/common/doprnt.c: 404:             nmo
      +                          de = 'f';
  5784  000CCA  0E66               	movlw	102
  5785  000CCC  6F80               	movwf	efgtoa@nmode& (0+255),b
  5786                           
  5787                           ;/Applications/microchip/xc8/v2.31/pic/sources/c99/common/doprnt.c: 405:         } else 
      +                          {
  5788  000CCE  EF6B  F006         	goto	l4246
  5789  000CD2                     l4244:
  5790                           
  5791                           ; BSR set to: 0
  5792                           ;/Applications/microchip/xc8/v2.31/pic/sources/c99/common/doprnt.c: 406:             nmo
      +                          de = 'e';
  5793  000CD2  0E65               	movlw	101
  5794  000CD4  6F80               	movwf	efgtoa@nmode& (0+255),b
  5795  000CD6                     l4246:
  5796                           
  5797                           ; BSR set to: 0
  5798                           ;/Applications/microchip/xc8/v2.31/pic/sources/c99/common/doprnt.c: 411:     m = p;
  5799  000CD6  C07C  F072         	movff	efgtoa@p,efgtoa@m
  5800  000CDA  C07D  F073         	movff	efgtoa@p+1,efgtoa@m+1
  5801  000CDE                     
  5802                           ; BSR set to: 0
  5803                           ;/Applications/microchip/xc8/v2.31/pic/sources/c99/common/doprnt.c: 412:     if (!(mode 
      +                          == 'g') || ((nmode == 'f') && (e < 0))) {
  5804  000CDE  0E67               	movlw	103
  5805  000CE0  1981               	xorwf	efgtoa@mode& (0+255),w,b
  5806  000CE2  A4D8               	btfss	status,2,c
  5807  000CE4  EF76  F006         	goto	u5401
  5808  000CE8  EF78  F006         	goto	u5400
  5809  000CEC                     u5401:
  5810  000CEC  EF88  F006         	goto	l4254
  5811  000CF0                     u5400:
  5812  000CF0                     
  5813                           ; BSR set to: 0
  5814  000CF0  0E66               	movlw	102
  5815  000CF2  1980               	xorwf	efgtoa@nmode& (0+255),w,b
  5816  000CF4  A4D8               	btfss	status,2,c
  5817  000CF6  EF7F  F006         	goto	u5411
  5818  000CFA  EF81  F006         	goto	u5410
  5819  000CFE                     u5411:
  5820  000CFE  EF8A  F006         	goto	l4256
  5821  000D02                     u5410:
  5822  000D02                     
  5823                           ; BSR set to: 0
  5824  000D02  BF91               	btfsc	(efgtoa@e+1)& (0+255),7,b
  5825  000D04  EF88  F006         	goto	u5420
  5826  000D08  EF86  F006         	goto	u5421
  5827  000D0C                     u5421:
  5828  000D0C  EF8A  F006         	goto	l4256
  5829  000D10                     u5420:
  5830  000D10                     l4254:
  5831                           
  5832                           ; BSR set to: 0
  5833                           ;/Applications/microchip/xc8/v2.31/pic/sources/c99/common/doprnt.c: 413:         ++m;
  5834  000D10  4B72               	infsnz	efgtoa@m& (0+255),f,b
  5835  000D12  2B73               	incf	(efgtoa@m+1)& (0+255),f,b
  5836  000D14                     l4256:
  5837                           
  5838                           ; BSR set to: 0
  5839                           ;/Applications/microchip/xc8/v2.31/pic/sources/c99/common/doprnt.c: 417:     if (nmode =
      +                          = 'f') {
  5840  000D14  0E66               	movlw	102
  5841  000D16  1980               	xorwf	efgtoa@nmode& (0+255),w,b
  5842  000D18  A4D8               	btfss	status,2,c
  5843  000D1A  EF91  F006         	goto	u5431
  5844  000D1E  EF93  F006         	goto	u5430
  5845  000D22                     u5431:
  5846  000D22  EFB3  F006         	goto	l4266
  5847  000D26                     u5430:
  5848  000D26                     
  5849                           ; BSR set to: 0
  5850                           ;/Applications/microchip/xc8/v2.31/pic/sources/c99/common/doprnt.c: 418:         if (e <
      +                           0) {
  5851  000D26  BF91               	btfsc	(efgtoa@e+1)& (0+255),7,b
  5852  000D28  EF9A  F006         	goto	u5440
  5853  000D2C  EF98  F006         	goto	u5441
  5854  000D30                     u5441:
  5855  000D30  EFA6  F006         	goto	l4262
  5856  000D34                     u5440:
  5857  000D34                     
  5858                           ; BSR set to: 0
  5859                           ;/Applications/microchip/xc8/v2.31/pic/sources/c99/common/doprnt.c: 419:             u =
      +                           1.0;
  5860  000D34  0E00               	movlw	0
  5861  000D36  6F94               	movwf	efgtoa@u& (0+255),b
  5862  000D38  0E00               	movlw	0
  5863  000D3A  6F95               	movwf	(efgtoa@u+1)& (0+255),b
  5864  000D3C  0E80               	movlw	128
  5865  000D3E  6F96               	movwf	(efgtoa@u+2)& (0+255),b
  5866  000D40  0E3F               	movlw	63
  5867  000D42  6F97               	movwf	(efgtoa@u+3)& (0+255),b
  5868                           
  5869                           ;/Applications/microchip/xc8/v2.31/pic/sources/c99/common/doprnt.c: 420:             e =
      +                           0;
  5870  000D44  0E00               	movlw	0
  5871  000D46  6F91               	movwf	(efgtoa@e+1)& (0+255),b
  5872  000D48  0E00               	movlw	0
  5873  000D4A  6F90               	movwf	efgtoa@e& (0+255),b
  5874  000D4C                     l4262:
  5875                           
  5876                           ; BSR set to: 0
  5877                           ;/Applications/microchip/xc8/v2.31/pic/sources/c99/common/doprnt.c: 422:         if (!(m
      +                          ode == 'g')) {
  5878  000D4C  0E67               	movlw	103
  5879  000D4E  1981               	xorwf	efgtoa@mode& (0+255),w,b
  5880  000D50  B4D8               	btfsc	status,2,c
  5881  000D52  EFAD  F006         	goto	u5451
  5882  000D56  EFAF  F006         	goto	u5450
  5883  000D5A                     u5451:
  5884  000D5A  EFB3  F006         	goto	l4266
  5885  000D5E                     u5450:
  5886  000D5E                     
  5887                           ; BSR set to: 0
  5888                           ;/Applications/microchip/xc8/v2.31/pic/sources/c99/common/doprnt.c: 423:             m +
      +                          = e;
  5889  000D5E  5190               	movf	efgtoa@e& (0+255),w,b
  5890  000D60  2772               	addwf	efgtoa@m& (0+255),f,b
  5891  000D62  5191               	movf	(efgtoa@e+1)& (0+255),w,b
  5892  000D64  2373               	addwfc	(efgtoa@m+1)& (0+255),f,b
  5893  000D66                     l4266:
  5894                           
  5895                           ; BSR set to: 0
  5896                           ;/Applications/microchip/xc8/v2.31/pic/sources/c99/common/doprnt.c: 428:     i = 0;
  5897  000D66  0E00               	movlw	0
  5898  000D68  6F8B               	movwf	(efgtoa@i+1)& (0+255),b
  5899  000D6A  0E00               	movlw	0
  5900  000D6C  6F8A               	movwf	efgtoa@i& (0+255),b
  5901  000D6E                     
  5902                           ; BSR set to: 0
  5903                           ;/Applications/microchip/xc8/v2.31/pic/sources/c99/common/doprnt.c: 429:     h = g;
  5904  000D6E  C08C  F082         	movff	efgtoa@g,efgtoa@h
  5905  000D72  C08D  F083         	movff	efgtoa@g+1,efgtoa@h+1
  5906  000D76  C08E  F084         	movff	efgtoa@g+2,efgtoa@h+2
  5907  000D7A  C08F  F085         	movff	efgtoa@g+3,efgtoa@h+3
  5908  000D7E                     
  5909                           ; BSR set to: 0
  5910                           ;/Applications/microchip/xc8/v2.31/pic/sources/c99/common/doprnt.c: 430:     ou = u;
  5911  000D7E  C094  F074         	movff	efgtoa@u,efgtoa@ou
  5912  000D82  C095  F075         	movff	efgtoa@u+1,efgtoa@ou+1
  5913  000D86  C096  F076         	movff	efgtoa@u+2,efgtoa@ou+2
  5914  000D8A  C097  F077         	movff	efgtoa@u+3,efgtoa@ou+3
  5915                           
  5916                           ;/Applications/microchip/xc8/v2.31/pic/sources/c99/common/doprnt.c: 431:     while (i < 
      +                          m) {
  5917  000D8E  EF44  F007         	goto	l4280
  5918  000D92                     l4272:
  5919                           
  5920                           ; BSR set to: 0
  5921                           ;/Applications/microchip/xc8/v2.31/pic/sources/c99/common/doprnt.c: 432:         l = flo
      +                          orf(h/u);
  5922  000D92  C082  F001         	movff	efgtoa@h,___fldiv@b
  5923  000D96  C083  F002         	movff	efgtoa@h+1,___fldiv@b+1
  5924  000D9A  C084  F003         	movff	efgtoa@h+2,___fldiv@b+2
  5925  000D9E  C085  F004         	movff	efgtoa@h+3,___fldiv@b+3
  5926  000DA2  C094  F005         	movff	efgtoa@u,___fldiv@a
  5927  000DA6  C095  F006         	movff	efgtoa@u+1,___fldiv@a+1
  5928  000DAA  C096  F007         	movff	efgtoa@u+2,___fldiv@a+2
  5929  000DAE  C097  F008         	movff	efgtoa@u+3,___fldiv@a+3
  5930  000DB2  EC0B  F013         	call	___fldiv	;wreg free
  5931  000DB6  C001  F01A         	movff	?___fldiv,floorf@x
  5932  000DBA  C002  F01B         	movff	?___fldiv+1,floorf@x+1
  5933  000DBE  C003  F01C         	movff	?___fldiv+2,floorf@x+2
  5934  000DC2  C004  F01D         	movff	?___fldiv+3,floorf@x+3
  5935  000DC6  ECA5  F019         	call	_floorf	;wreg free
  5936  000DCA  C01A  F086         	movff	?_floorf,efgtoa@l
  5937  000DCE  C01B  F087         	movff	?_floorf+1,efgtoa@l+1
  5938  000DD2  C01C  F088         	movff	?_floorf+2,efgtoa@l+2
  5939  000DD6  C01D  F089         	movff	?_floorf+3,efgtoa@l+3
  5940                           
  5941                           ;/Applications/microchip/xc8/v2.31/pic/sources/c99/common/doprnt.c: 433:         d = (in
      +                          t)l;
  5942  000DDA  C086  F001         	movff	efgtoa@l,___fltol@f1
  5943  000DDE  C087  F002         	movff	efgtoa@l+1,___fltol@f1+1
  5944  000DE2  C088  F003         	movff	efgtoa@l+2,___fltol@f1+2
  5945  000DE6  C089  F004         	movff	efgtoa@l+3,___fltol@f1+3
  5946  000DEA  ECA4  F01E         	call	___fltol	;wreg free
  5947  000DEE  C001  F078         	movff	?___fltol,efgtoa@d
  5948  000DF2  C002  F079         	movff	?___fltol+1,efgtoa@d+1
  5949  000DF6                     
  5950                           ;/Applications/microchip/xc8/v2.31/pic/sources/c99/common/doprnt.c: 434:         h -= l*
      +                          u;
  5951  000DF6  C082  F032         	movff	efgtoa@h,___flsub@b
  5952  000DFA  C083  F033         	movff	efgtoa@h+1,___flsub@b+1
  5953  000DFE  C084  F034         	movff	efgtoa@h+2,___flsub@b+2
  5954  000E02  C085  F035         	movff	efgtoa@h+3,___flsub@b+3
  5955  000E06  C094  F01D         	movff	efgtoa@u,___flmul@a
  5956  000E0A  C095  F01E         	movff	efgtoa@u+1,___flmul@a+1
  5957  000E0E  C096  F01F         	movff	efgtoa@u+2,___flmul@a+2
  5958  000E12  C097  F020         	movff	efgtoa@u+3,___flmul@a+3
  5959  000E16  C086  F019         	movff	efgtoa@l,___flmul@b
  5960  000E1A  C087  F01A         	movff	efgtoa@l+1,___flmul@b+1
  5961  000E1E  C088  F01B         	movff	efgtoa@l+2,___flmul@b+2
  5962  000E22  C089  F01C         	movff	efgtoa@l+3,___flmul@b+3
  5963  000E26  ECF6  F010         	call	___flmul	;wreg free
  5964  000E2A  C019  F036         	movff	?___flmul,___flsub@a
  5965  000E2E  C01A  F037         	movff	?___flmul+1,___flsub@a+1
  5966  000E32  C01B  F038         	movff	?___flmul+2,___flsub@a+2
  5967  000E36  C01C  F039         	movff	?___flmul+3,___flsub@a+3
  5968  000E3A  EC69  F025         	call	___flsub	;wreg free
  5969  000E3E  C032  F082         	movff	?___flsub,efgtoa@h
  5970  000E42  C033  F083         	movff	?___flsub+1,efgtoa@h+1
  5971  000E46  C034  F084         	movff	?___flsub+2,efgtoa@h+2
  5972  000E4A  C035  F085         	movff	?___flsub+3,efgtoa@h+3
  5973  000E4E                     
  5974                           ;/Applications/microchip/xc8/v2.31/pic/sources/c99/common/doprnt.c: 435:         u = u/1
      +                          0.0;
  5975  000E4E  C094  F001         	movff	efgtoa@u,___fldiv@b
  5976  000E52  C095  F002         	movff	efgtoa@u+1,___fldiv@b+1
  5977  000E56  C096  F003         	movff	efgtoa@u+2,___fldiv@b+2
  5978  000E5A  C097  F004         	movff	efgtoa@u+3,___fldiv@b+3
  5979  000E5E  0E00               	movlw	0
  5980  000E60  6E05               	movwf	___fldiv@a^0,c
  5981  000E62  0E00               	movlw	0
  5982  000E64  6E06               	movwf	(___fldiv@a+1)^0,c
  5983  000E66  0E20               	movlw	32
  5984  000E68  6E07               	movwf	(___fldiv@a+2)^0,c
  5985  000E6A  0E41               	movlw	65
  5986  000E6C  6E08               	movwf	(___fldiv@a+3)^0,c
  5987  000E6E  EC0B  F013         	call	___fldiv	;wreg free
  5988  000E72  C001  F094         	movff	?___fldiv,efgtoa@u
  5989  000E76  C002  F095         	movff	?___fldiv+1,efgtoa@u+1
  5990  000E7A  C003  F096         	movff	?___fldiv+2,efgtoa@u+2
  5991  000E7E  C004  F097         	movff	?___fldiv+3,efgtoa@u+3
  5992  000E82                     
  5993                           ;/Applications/microchip/xc8/v2.31/pic/sources/c99/common/doprnt.c: 436:         ++i;
  5994  000E82  0100               	movlb	0	; () banked
  5995  000E84  4B8A               	infsnz	efgtoa@i& (0+255),f,b
  5996  000E86  2B8B               	incf	(efgtoa@i+1)& (0+255),f,b
  5997  000E88                     l4280:
  5998                           
  5999                           ; BSR set to: 0
  6000                           ;/Applications/microchip/xc8/v2.31/pic/sources/c99/common/doprnt.c: 431:     while (i < 
      +                          m) {
  6001  000E88  5172               	movf	efgtoa@m& (0+255),w,b
  6002  000E8A  5D8A               	subwf	efgtoa@i& (0+255),w,b
  6003  000E8C  518B               	movf	(efgtoa@i+1)& (0+255),w,b
  6004  000E8E  0A80               	xorlw	128
  6005  000E90  6E4D               	movwf	??_efgtoa^0,c
  6006  000E92  5173               	movf	(efgtoa@m+1)& (0+255),w,b
  6007  000E94  0A80               	xorlw	128
  6008  000E96  584D               	subwfb	??_efgtoa^0,w,c
  6009  000E98  A0D8               	btfss	status,0,c
  6010  000E9A  EF51  F007         	goto	u5461
  6011  000E9E  EF53  F007         	goto	u5460
  6012  000EA2                     u5461:
  6013  000EA2  EFC9  F006         	goto	l4272
  6014  000EA6                     u5460:
  6015  000EA6                     
  6016                           ; BSR set to: 0
  6017                           ;/Applications/microchip/xc8/v2.31/pic/sources/c99/common/doprnt.c: 440:     l = u*5.0;
  6018  000EA6  C094  F019         	movff	efgtoa@u,___flmul@b
  6019  000EAA  C095  F01A         	movff	efgtoa@u+1,___flmul@b+1
  6020  000EAE  C096  F01B         	movff	efgtoa@u+2,___flmul@b+2
  6021  000EB2  C097  F01C         	movff	efgtoa@u+3,___flmul@b+3
  6022  000EB6  0E00               	movlw	0
  6023  000EB8  6E1D               	movwf	___flmul@a^0,c
  6024  000EBA  0E00               	movlw	0
  6025  000EBC  6E1E               	movwf	(___flmul@a+1)^0,c
  6026  000EBE  0EA0               	movlw	160
  6027  000EC0  6E1F               	movwf	(___flmul@a+2)^0,c
  6028  000EC2  0E40               	movlw	64
  6029  000EC4  6E20               	movwf	(___flmul@a+3)^0,c
  6030  000EC6  ECF6  F010         	call	___flmul	;wreg free
  6031  000ECA  C019  F086         	movff	?___flmul,efgtoa@l
  6032  000ECE  C01A  F087         	movff	?___flmul+1,efgtoa@l+1
  6033  000ED2  C01B  F088         	movff	?___flmul+2,efgtoa@l+2
  6034  000ED6  C01C  F089         	movff	?___flmul+3,efgtoa@l+3
  6035  000EDA                     
  6036                           ;/Applications/microchip/xc8/v2.31/pic/sources/c99/common/doprnt.c: 441:     if (h < l) 
      +                          {
  6037  000EDA  C082  F03A         	movff	efgtoa@h,___flge@ff1
  6038  000EDE  C083  F03B         	movff	efgtoa@h+1,___flge@ff1+1
  6039  000EE2  C084  F03C         	movff	efgtoa@h+2,___flge@ff1+2
  6040  000EE6  C085  F03D         	movff	efgtoa@h+3,___flge@ff1+3
  6041  000EEA  C086  F03E         	movff	efgtoa@l,___flge@ff2
  6042  000EEE  C087  F03F         	movff	efgtoa@l+1,___flge@ff2+1
  6043  000EF2  C088  F040         	movff	efgtoa@l+2,___flge@ff2+2
  6044  000EF6  C089  F041         	movff	efgtoa@l+3,___flge@ff2+3
  6045  000EFA  ECA9  F01F         	call	___flge	;wreg free
  6046  000EFE  B0D8               	btfsc	status,0,c
  6047  000F00  EF84  F007         	goto	u5471
  6048  000F04  EF86  F007         	goto	u5470
  6049  000F08                     u5471:
  6050  000F08  EF91  F007         	goto	l4288
  6051  000F0C                     u5470:
  6052  000F0C                     
  6053                           ;/Applications/microchip/xc8/v2.31/pic/sources/c99/common/doprnt.c: 442:         l = 0.0
      +                          ;
  6054  000F0C  0E00               	movlw	0
  6055  000F0E  0100               	movlb	0	; () banked
  6056  000F10  6F86               	movwf	efgtoa@l& (0+255),b
  6057  000F12  0E00               	movlw	0
  6058  000F14  6F87               	movwf	(efgtoa@l+1)& (0+255),b
  6059  000F16  0E00               	movlw	0
  6060  000F18  6F88               	movwf	(efgtoa@l+2)& (0+255),b
  6061  000F1A  0E00               	movlw	0
  6062  000F1C  6F89               	movwf	(efgtoa@l+3)& (0+255),b
  6063                           
  6064                           ;/Applications/microchip/xc8/v2.31/pic/sources/c99/common/doprnt.c: 443:     } else {
  6065  000F1E  EFBA  F007         	goto	l4294
  6066  000F22                     l4288:
  6067                           
  6068                           ;/Applications/microchip/xc8/v2.31/pic/sources/c99/common/doprnt.c: 445:         if ((h 
      +                          == l) && !(d % 2)) {
  6069  000F22  C082  F001         	movff	efgtoa@h,___fleq@ff1
  6070  000F26  C083  F002         	movff	efgtoa@h+1,___fleq@ff1+1
  6071  000F2A  C084  F003         	movff	efgtoa@h+2,___fleq@ff1+2
  6072  000F2E  C085  F004         	movff	efgtoa@h+3,___fleq@ff1+3
  6073  000F32  C086  F005         	movff	efgtoa@l,___fleq@ff2
  6074  000F36  C087  F006         	movff	efgtoa@l+1,___fleq@ff2+1
  6075  000F3A  C088  F007         	movff	efgtoa@l+2,___fleq@ff2+2
  6076  000F3E  C089  F008         	movff	efgtoa@l+3,___fleq@ff2+3
  6077  000F42  EC5A  F023         	call	___fleq	;wreg free
  6078  000F46  A0D8               	btfss	status,0,c
  6079  000F48  EFA8  F007         	goto	u5481
  6080  000F4C  EFAA  F007         	goto	u5480
  6081  000F50                     u5481:
  6082  000F50  EFBA  F007         	goto	l4294
  6083  000F54                     u5480:
  6084  000F54  0100               	movlb	0	; () banked
  6085  000F56  B178               	btfsc	efgtoa@d& (0+255),0,b
  6086  000F58  EFB0  F007         	goto	u5491
  6087  000F5C  EFB2  F007         	goto	u5490
  6088  000F60                     u5491:
  6089  000F60  EFBA  F007         	goto	l4294
  6090  000F64                     u5490:
  6091  000F64                     
  6092                           ; BSR set to: 0
  6093                           ;/Applications/microchip/xc8/v2.31/pic/sources/c99/common/doprnt.c: 446:             l =
      +                           0.0;
  6094  000F64  0E00               	movlw	0
  6095  000F66  6F86               	movwf	efgtoa@l& (0+255),b
  6096  000F68  0E00               	movlw	0
  6097  000F6A  6F87               	movwf	(efgtoa@l+1)& (0+255),b
  6098  000F6C  0E00               	movlw	0
  6099  000F6E  6F88               	movwf	(efgtoa@l+2)& (0+255),b
  6100  000F70  0E00               	movlw	0
  6101  000F72  6F89               	movwf	(efgtoa@l+3)& (0+255),b
  6102  000F74                     l4294:
  6103                           
  6104                           ;/Applications/microchip/xc8/v2.31/pic/sources/c99/common/doprnt.c: 451:     h = g + l;
  6105  000F74  C08C  F001         	movff	efgtoa@g,___fladd@b
  6106  000F78  C08D  F002         	movff	efgtoa@g+1,___fladd@b+1
  6107  000F7C  C08E  F003         	movff	efgtoa@g+2,___fladd@b+2
  6108  000F80  C08F  F004         	movff	efgtoa@g+3,___fladd@b+3
  6109  000F84  C086  F005         	movff	efgtoa@l,___fladd@a
  6110  000F88  C087  F006         	movff	efgtoa@l+1,___fladd@a+1
  6111  000F8C  C088  F007         	movff	efgtoa@l+2,___fladd@a+2
  6112  000F90  C089  F008         	movff	efgtoa@l+3,___fladd@a+3
  6113  000F94  EC96  F00E         	call	___fladd	;wreg free
  6114  000F98  C001  F082         	movff	?___fladd,efgtoa@h
  6115  000F9C  C002  F083         	movff	?___fladd+1,efgtoa@h+1
  6116  000FA0  C003  F084         	movff	?___fladd+2,efgtoa@h+2
  6117  000FA4  C004  F085         	movff	?___fladd+3,efgtoa@h+3
  6118  000FA8                     
  6119                           ;/Applications/microchip/xc8/v2.31/pic/sources/c99/common/doprnt.c: 453:  if (h >= (ou*1
      +                          0.0)) {
  6120  000FA8  C082  F03A         	movff	efgtoa@h,___flge@ff1
  6121  000FAC  C083  F03B         	movff	efgtoa@h+1,___flge@ff1+1
  6122  000FB0  C084  F03C         	movff	efgtoa@h+2,___flge@ff1+2
  6123  000FB4  C085  F03D         	movff	efgtoa@h+3,___flge@ff1+3
  6124  000FB8  0E00               	movlw	0
  6125  000FBA  6E1D               	movwf	___flmul@a^0,c
  6126  000FBC  0E00               	movlw	0
  6127  000FBE  6E1E               	movwf	(___flmul@a+1)^0,c
  6128  000FC0  0E20               	movlw	32
  6129  000FC2  6E1F               	movwf	(___flmul@a+2)^0,c
  6130  000FC4  0E41               	movlw	65
  6131  000FC6  6E20               	movwf	(___flmul@a+3)^0,c
  6132  000FC8  C074  F019         	movff	efgtoa@ou,___flmul@b
  6133  000FCC  C075  F01A         	movff	efgtoa@ou+1,___flmul@b+1
  6134  000FD0  C076  F01B         	movff	efgtoa@ou+2,___flmul@b+2
  6135  000FD4  C077  F01C         	movff	efgtoa@ou+3,___flmul@b+3
  6136  000FD8  ECF6  F010         	call	___flmul	;wreg free
  6137  000FDC  C019  F03E         	movff	?___flmul,___flge@ff2
  6138  000FE0  C01A  F03F         	movff	?___flmul+1,___flge@ff2+1
  6139  000FE4  C01B  F040         	movff	?___flmul+2,___flge@ff2+2
  6140  000FE8  C01C  F041         	movff	?___flmul+3,___flge@ff2+3
  6141  000FEC  ECA9  F01F         	call	___flge	;wreg free
  6142  000FF0  A0D8               	btfss	status,0,c
  6143  000FF2  EFFD  F007         	goto	u5501
  6144  000FF6  EFFF  F007         	goto	u5500
  6145  000FFA                     u5501:
  6146  000FFA  EF28  F008         	goto	l4306
  6147  000FFE                     u5500:
  6148  000FFE                     
  6149                           ;/Applications/microchip/xc8/v2.31/pic/sources/c99/common/doprnt.c: 454:   e++;
  6150  000FFE  0100               	movlb	0	; () banked
  6151  001000  4B90               	infsnz	efgtoa@e& (0+255),f,b
  6152  001002  2B91               	incf	(efgtoa@e+1)& (0+255),f,b
  6153  001004                     
  6154                           ; BSR set to: 0
  6155                           ;/Applications/microchip/xc8/v2.31/pic/sources/c99/common/doprnt.c: 455:   ou *= 10.0;
  6156  001004  C074  F019         	movff	efgtoa@ou,___flmul@b
  6157  001008  C075  F01A         	movff	efgtoa@ou+1,___flmul@b+1
  6158  00100C  C076  F01B         	movff	efgtoa@ou+2,___flmul@b+2
  6159  001010  C077  F01C         	movff	efgtoa@ou+3,___flmul@b+3
  6160  001014  0E00               	movlw	0
  6161  001016  6E1D               	movwf	___flmul@a^0,c
  6162  001018  0E00               	movlw	0
  6163  00101A  6E1E               	movwf	(___flmul@a+1)^0,c
  6164  00101C  0E20               	movlw	32
  6165  00101E  6E1F               	movwf	(___flmul@a+2)^0,c
  6166  001020  0E41               	movlw	65
  6167  001022  6E20               	movwf	(___flmul@a+3)^0,c
  6168  001024  ECF6  F010         	call	___flmul	;wreg free
  6169  001028  C019  F074         	movff	?___flmul,efgtoa@ou
  6170  00102C  C01A  F075         	movff	?___flmul+1,efgtoa@ou+1
  6171  001030  C01B  F076         	movff	?___flmul+2,efgtoa@ou+2
  6172  001034  C01C  F077         	movff	?___flmul+3,efgtoa@ou+3
  6173  001038                     
  6174                           ;/Applications/microchip/xc8/v2.31/pic/sources/c99/common/doprnt.c: 456:   if (nmode == 
      +                          'f') {
  6175  001038  0E66               	movlw	102
  6176  00103A  0100               	movlb	0	; () banked
  6177  00103C  1980               	xorwf	efgtoa@nmode& (0+255),w,b
  6178  00103E  A4D8               	btfss	status,2,c
  6179  001040  EF24  F008         	goto	u5511
  6180  001044  EF26  F008         	goto	u5510
  6181  001048                     u5511:
  6182  001048  EF28  F008         	goto	l4306
  6183  00104C                     u5510:
  6184  00104C                     
  6185                           ; BSR set to: 0
  6186                           ;/Applications/microchip/xc8/v2.31/pic/sources/c99/common/doprnt.c: 458:    m++;
  6187  00104C  4B72               	infsnz	efgtoa@m& (0+255),f,b
  6188  00104E  2B73               	incf	(efgtoa@m+1)& (0+255),f,b
  6189  001050                     l4306:
  6190                           
  6191                           ;/Applications/microchip/xc8/v2.31/pic/sources/c99/common/doprnt.c: 463:     u = ou;
  6192  001050  C074  F094         	movff	efgtoa@ou,efgtoa@u
  6193  001054  C075  F095         	movff	efgtoa@ou+1,efgtoa@u+1
  6194  001058  C076  F096         	movff	efgtoa@ou+2,efgtoa@u+2
  6195  00105C  C077  F097         	movff	efgtoa@ou+3,efgtoa@u+3
  6196  001060                     
  6197                           ;/Applications/microchip/xc8/v2.31/pic/sources/c99/common/doprnt.c: 464:     ne = (nmode
      +                           == 'e') ? 0 : e;
  6198  001060  0E65               	movlw	101
  6199  001062  0100               	movlb	0	; () banked
  6200  001064  1980               	xorwf	efgtoa@nmode& (0+255),w,b
  6201  001066  B4D8               	btfsc	status,2,c
  6202  001068  EF38  F008         	goto	u5521
  6203  00106C  EF3A  F008         	goto	u5520
  6204  001070                     u5521:
  6205  001070  EF40  F008         	goto	l4312
  6206  001074                     u5520:
  6207  001074                     
  6208                           ; BSR set to: 0
  6209  001074  C090  F070         	movff	efgtoa@e,efgtoa@ne
  6210  001078  C091  F071         	movff	efgtoa@e+1,efgtoa@ne+1
  6211  00107C  EF44  F008         	goto	l1047
  6212  001080                     l4312:
  6213                           
  6214                           ; BSR set to: 0
  6215  001080  0E00               	movlw	0
  6216  001082  6F71               	movwf	(efgtoa@ne+1)& (0+255),b
  6217  001084  0E00               	movlw	0
  6218  001086  6F70               	movwf	efgtoa@ne& (0+255),b
  6219  001088                     l1047:
  6220                           
  6221                           ; BSR set to: 0
  6222                           ;/Applications/microchip/xc8/v2.31/pic/sources/c99/common/doprnt.c: 465:     pp = 0;
  6223  001088  0E00               	movlw	0
  6224  00108A  6F6F               	movwf	(efgtoa@pp+1)& (0+255),b
  6225  00108C  0E00               	movlw	0
  6226  00108E  6F6E               	movwf	efgtoa@pp& (0+255),b
  6227                           
  6228                           ;/Applications/microchip/xc8/v2.31/pic/sources/c99/common/doprnt.c: 466:     t = 0;
  6229  001090  0E00               	movlw	0
  6230  001092  6F6D               	movwf	(efgtoa@t+1)& (0+255),b
  6231  001094  0E00               	movlw	0
  6232  001096  6F6C               	movwf	efgtoa@t& (0+255),b
  6233                           
  6234                           ;/Applications/microchip/xc8/v2.31/pic/sources/c99/common/doprnt.c: 467:     i = 0;
  6235  001098  0E00               	movlw	0
  6236  00109A  6F8B               	movwf	(efgtoa@i+1)& (0+255),b
  6237  00109C  0E00               	movlw	0
  6238  00109E  6F8A               	movwf	efgtoa@i& (0+255),b
  6239                           
  6240                           ;/Applications/microchip/xc8/v2.31/pic/sources/c99/common/doprnt.c: 468:     while ((i <
      +                           m) && (n < (80 - 5))) {
  6241  0010A0  EF3F  F009         	goto	l4362
  6242  0010A4                     l4314:
  6243                           
  6244                           ; BSR set to: 0
  6245                           ;/Applications/microchip/xc8/v2.31/pic/sources/c99/common/doprnt.c: 469:         l = flo
      +                          orf(h/u);
  6246  0010A4  C082  F001         	movff	efgtoa@h,___fldiv@b
  6247  0010A8  C083  F002         	movff	efgtoa@h+1,___fldiv@b+1
  6248  0010AC  C084  F003         	movff	efgtoa@h+2,___fldiv@b+2
  6249  0010B0  C085  F004         	movff	efgtoa@h+3,___fldiv@b+3
  6250  0010B4  C094  F005         	movff	efgtoa@u,___fldiv@a
  6251  0010B8  C095  F006         	movff	efgtoa@u+1,___fldiv@a+1
  6252  0010BC  C096  F007         	movff	efgtoa@u+2,___fldiv@a+2
  6253  0010C0  C097  F008         	movff	efgtoa@u+3,___fldiv@a+3
  6254  0010C4  EC0B  F013         	call	___fldiv	;wreg free
  6255  0010C8  C001  F01A         	movff	?___fldiv,floorf@x
  6256  0010CC  C002  F01B         	movff	?___fldiv+1,floorf@x+1
  6257  0010D0  C003  F01C         	movff	?___fldiv+2,floorf@x+2
  6258  0010D4  C004  F01D         	movff	?___fldiv+3,floorf@x+3
  6259  0010D8  ECA5  F019         	call	_floorf	;wreg free
  6260  0010DC  C01A  F086         	movff	?_floorf,efgtoa@l
  6261  0010E0  C01B  F087         	movff	?_floorf+1,efgtoa@l+1
  6262  0010E4  C01C  F088         	movff	?_floorf+2,efgtoa@l+2
  6263  0010E8  C01D  F089         	movff	?_floorf+3,efgtoa@l+3
  6264                           
  6265                           ;/Applications/microchip/xc8/v2.31/pic/sources/c99/common/doprnt.c: 470:         d = (in
      +                          t)l;
  6266  0010EC  C086  F001         	movff	efgtoa@l,___fltol@f1
  6267  0010F0  C087  F002         	movff	efgtoa@l+1,___fltol@f1+1
  6268  0010F4  C088  F003         	movff	efgtoa@l+2,___fltol@f1+2
  6269  0010F8  C089  F004         	movff	efgtoa@l+3,___fltol@f1+3
  6270  0010FC  ECA4  F01E         	call	___fltol	;wreg free
  6271  001100  C001  F078         	movff	?___fltol,efgtoa@d
  6272  001104  C002  F079         	movff	?___fltol+1,efgtoa@d+1
  6273  001108                     
  6274                           ;/Applications/microchip/xc8/v2.31/pic/sources/c99/common/doprnt.c: 471:         if (!(f
      +                          lags & (1 << 4)) && !d && (mode == 'g') && (ne < 0)) {
  6275  001108  0100               	movlb	0	; () banked
  6276  00110A  B9D8               	btfsc	_flags& (0+255),4,b
  6277  00110C  EF8A  F008         	goto	u5531
  6278  001110  EF8C  F008         	goto	u5530
  6279  001114                     u5531:
  6280  001114  EFA9  F008         	goto	l4326
  6281  001118                     u5530:
  6282  001118                     
  6283                           ; BSR set to: 0
  6284  001118  5178               	movf	efgtoa@d& (0+255),w,b
  6285  00111A  1179               	iorwf	(efgtoa@d+1)& (0+255),w,b
  6286  00111C  A4D8               	btfss	status,2,c
  6287  00111E  EF93  F008         	goto	u5541
  6288  001122  EF95  F008         	goto	u5540
  6289  001126                     u5541:
  6290  001126  EFA9  F008         	goto	l4326
  6291  00112A                     u5540:
  6292  00112A                     
  6293                           ; BSR set to: 0
  6294  00112A  0E67               	movlw	103
  6295  00112C  1981               	xorwf	efgtoa@mode& (0+255),w,b
  6296  00112E  A4D8               	btfss	status,2,c
  6297  001130  EF9C  F008         	goto	u5551
  6298  001134  EF9E  F008         	goto	u5550
  6299  001138                     u5551:
  6300  001138  EFA9  F008         	goto	l4326
  6301  00113C                     u5550:
  6302  00113C                     
  6303                           ; BSR set to: 0
  6304  00113C  BF71               	btfsc	(efgtoa@ne+1)& (0+255),7,b
  6305  00113E  EFA5  F008         	goto	u5560
  6306  001142  EFA3  F008         	goto	u5561
  6307  001146                     u5561:
  6308  001146  EFA9  F008         	goto	l4326
  6309  00114A                     u5560:
  6310  00114A                     
  6311                           ; BSR set to: 0
  6312                           ;/Applications/microchip/xc8/v2.31/pic/sources/c99/common/doprnt.c: 472:             ++t
      +                          ;
  6313  00114A  4B6C               	infsnz	efgtoa@t& (0+255),f,b
  6314  00114C  2B6D               	incf	(efgtoa@t+1)& (0+255),f,b
  6315                           
  6316                           ;/Applications/microchip/xc8/v2.31/pic/sources/c99/common/doprnt.c: 473:         } else 
      +                          {
  6317  00114E  EFF3  F008         	goto	l4354
  6318  001152                     l4326:
  6319                           
  6320                           ; BSR set to: 0
  6321                           ;/Applications/microchip/xc8/v2.31/pic/sources/c99/common/doprnt.c: 474:             if 
      +                          (!pp && (ne < 0)) {
  6322  001152  516E               	movf	efgtoa@pp& (0+255),w,b
  6323  001154  116F               	iorwf	(efgtoa@pp+1)& (0+255),w,b
  6324  001156  A4D8               	btfss	status,2,c
  6325  001158  EFB0  F008         	goto	u5571
  6326  00115C  EFB2  F008         	goto	u5570
  6327  001160                     u5571:
  6328  001160  EFDC  F008         	goto	l4346
  6329  001164                     u5570:
  6330  001164                     
  6331                           ; BSR set to: 0
  6332  001164  BF71               	btfsc	(efgtoa@ne+1)& (0+255),7,b
  6333  001166  EFB9  F008         	goto	u5580
  6334  00116A  EFB7  F008         	goto	u5581
  6335  00116E                     u5581:
  6336  00116E  EFDC  F008         	goto	l4346
  6337  001172                     u5580:
  6338  001172                     
  6339                           ; BSR set to: 0
  6340                           ;/Applications/microchip/xc8/v2.31/pic/sources/c99/common/doprnt.c: 475:                
      +                           dbuf[n++] = '.';
  6341  001172  0E16               	movlw	low _dbuf
  6342  001174  2592               	addwf	efgtoa@n& (0+255),w,b
  6343  001176  6ED9               	movwf	fsr2l,c
  6344  001178  0E01               	movlw	high _dbuf
  6345  00117A  2193               	addwfc	(efgtoa@n+1)& (0+255),w,b
  6346  00117C  6EDA               	movwf	fsr2h,c
  6347  00117E  0E2E               	movlw	46
  6348  001180  6EDF               	movwf	indf2,c
  6349  001182                     
  6350                           ; BSR set to: 0
  6351  001182  4B92               	infsnz	efgtoa@n& (0+255),f,b
  6352  001184  2B93               	incf	(efgtoa@n+1)& (0+255),f,b
  6353  001186                     
  6354                           ; BSR set to: 0
  6355                           ;/Applications/microchip/xc8/v2.31/pic/sources/c99/common/doprnt.c: 476:                
      +                           --w;
  6356  001186  077E               	decf	efgtoa@w& (0+255),f,b
  6357  001188  A0D8               	btfss	status,0,c
  6358  00118A  077F               	decf	(efgtoa@w+1)& (0+255),f,b
  6359  00118C                     
  6360                           ; BSR set to: 0
  6361                           ;/Applications/microchip/xc8/v2.31/pic/sources/c99/common/doprnt.c: 477:                
      +                           pp = 1;
  6362  00118C  0E00               	movlw	0
  6363  00118E  6F6F               	movwf	(efgtoa@pp+1)& (0+255),b
  6364  001190  0E01               	movlw	1
  6365  001192  6F6E               	movwf	efgtoa@pp& (0+255),b
  6366  001194  EFDC  F008         	goto	l4346
  6367  001198                     l4338:
  6368                           
  6369                           ; BSR set to: 0
  6370                           ;/Applications/microchip/xc8/v2.31/pic/sources/c99/common/doprnt.c: 480:                
      +                           dbuf[n++] = '0';
  6371  001198  0E16               	movlw	low _dbuf
  6372  00119A  2592               	addwf	efgtoa@n& (0+255),w,b
  6373  00119C  6ED9               	movwf	fsr2l,c
  6374  00119E  0E01               	movlw	high _dbuf
  6375  0011A0  2193               	addwfc	(efgtoa@n+1)& (0+255),w,b
  6376  0011A2  6EDA               	movwf	fsr2h,c
  6377  0011A4  0E30               	movlw	48
  6378  0011A6  6EDF               	movwf	indf2,c
  6379  0011A8                     
  6380                           ; BSR set to: 0
  6381  0011A8  4B92               	infsnz	efgtoa@n& (0+255),f,b
  6382  0011AA  2B93               	incf	(efgtoa@n+1)& (0+255),f,b
  6383  0011AC                     
  6384                           ; BSR set to: 0
  6385                           ;/Applications/microchip/xc8/v2.31/pic/sources/c99/common/doprnt.c: 481:                
      +                           --w;
  6386  0011AC  077E               	decf	efgtoa@w& (0+255),f,b
  6387  0011AE  A0D8               	btfss	status,0,c
  6388  0011B0  077F               	decf	(efgtoa@w+1)& (0+255),f,b
  6389  0011B2                     
  6390                           ; BSR set to: 0
  6391                           ;/Applications/microchip/xc8/v2.31/pic/sources/c99/common/doprnt.c: 482:                
      +                           --t;
  6392  0011B2  076C               	decf	efgtoa@t& (0+255),f,b
  6393  0011B4  A0D8               	btfss	status,0,c
  6394  0011B6  076D               	decf	(efgtoa@t+1)& (0+255),f,b
  6395  0011B8                     l4346:
  6396                           
  6397                           ; BSR set to: 0
  6398                           ;/Applications/microchip/xc8/v2.31/pic/sources/c99/common/doprnt.c: 479:             whi
      +                          le (t) {
  6399  0011B8  516C               	movf	efgtoa@t& (0+255),w,b
  6400  0011BA  116D               	iorwf	(efgtoa@t+1)& (0+255),w,b
  6401  0011BC  A4D8               	btfss	status,2,c
  6402  0011BE  EFE3  F008         	goto	u5591
  6403  0011C2  EFE5  F008         	goto	u5590
  6404  0011C6                     u5591:
  6405  0011C6  EFCC  F008         	goto	l4338
  6406  0011CA                     u5590:
  6407  0011CA                     
  6408                           ; BSR set to: 0
  6409                           ;/Applications/microchip/xc8/v2.31/pic/sources/c99/common/doprnt.c: 484:             dbu
      +                          f[n++] = (char)((int)'0' + d);
  6410  0011CA  0E16               	movlw	low _dbuf
  6411  0011CC  2592               	addwf	efgtoa@n& (0+255),w,b
  6412  0011CE  6ED9               	movwf	fsr2l,c
  6413  0011D0  0E01               	movlw	high _dbuf
  6414  0011D2  2193               	addwfc	(efgtoa@n+1)& (0+255),w,b
  6415  0011D4  6EDA               	movwf	fsr2h,c
  6416  0011D6  5178               	movf	efgtoa@d& (0+255),w,b
  6417  0011D8  0F30               	addlw	48
  6418  0011DA  6EDF               	movwf	indf2,c
  6419  0011DC                     
  6420                           ; BSR set to: 0
  6421  0011DC  4B92               	infsnz	efgtoa@n& (0+255),f,b
  6422  0011DE  2B93               	incf	(efgtoa@n+1)& (0+255),f,b
  6423  0011E0                     
  6424                           ; BSR set to: 0
  6425                           ;/Applications/microchip/xc8/v2.31/pic/sources/c99/common/doprnt.c: 485:             --w
      +                          ;
  6426  0011E0  077E               	decf	efgtoa@w& (0+255),f,b
  6427  0011E2  A0D8               	btfss	status,0,c
  6428  0011E4  077F               	decf	(efgtoa@w+1)& (0+255),f,b
  6429  0011E6                     l4354:
  6430                           
  6431                           ; BSR set to: 0
  6432                           ;/Applications/microchip/xc8/v2.31/pic/sources/c99/common/doprnt.c: 487:         h -= l*
      +                          u;
  6433  0011E6  C082  F032         	movff	efgtoa@h,___flsub@b
  6434  0011EA  C083  F033         	movff	efgtoa@h+1,___flsub@b+1
  6435  0011EE  C084  F034         	movff	efgtoa@h+2,___flsub@b+2
  6436  0011F2  C085  F035         	movff	efgtoa@h+3,___flsub@b+3
  6437  0011F6  C094  F01D         	movff	efgtoa@u,___flmul@a
  6438  0011FA  C095  F01E         	movff	efgtoa@u+1,___flmul@a+1
  6439  0011FE  C096  F01F         	movff	efgtoa@u+2,___flmul@a+2
  6440  001202  C097  F020         	movff	efgtoa@u+3,___flmul@a+3
  6441  001206  C086  F019         	movff	efgtoa@l,___flmul@b
  6442  00120A  C087  F01A         	movff	efgtoa@l+1,___flmul@b+1
  6443  00120E  C088  F01B         	movff	efgtoa@l+2,___flmul@b+2
  6444  001212  C089  F01C         	movff	efgtoa@l+3,___flmul@b+3
  6445  001216  ECF6  F010         	call	___flmul	;wreg free
  6446  00121A  C019  F036         	movff	?___flmul,___flsub@a
  6447  00121E  C01A  F037         	movff	?___flmul+1,___flsub@a+1
  6448  001222  C01B  F038         	movff	?___flmul+2,___flsub@a+2
  6449  001226  C01C  F039         	movff	?___flmul+3,___flsub@a+3
  6450  00122A  EC69  F025         	call	___flsub	;wreg free
  6451  00122E  C032  F082         	movff	?___flsub,efgtoa@h
  6452  001232  C033  F083         	movff	?___flsub+1,efgtoa@h+1
  6453  001236  C034  F084         	movff	?___flsub+2,efgtoa@h+2
  6454  00123A  C035  F085         	movff	?___flsub+3,efgtoa@h+3
  6455  00123E                     
  6456                           ;/Applications/microchip/xc8/v2.31/pic/sources/c99/common/doprnt.c: 488:         u = u/1
      +                          0.0;
  6457  00123E  C094  F001         	movff	efgtoa@u,___fldiv@b
  6458  001242  C095  F002         	movff	efgtoa@u+1,___fldiv@b+1
  6459  001246  C096  F003         	movff	efgtoa@u+2,___fldiv@b+2
  6460  00124A  C097  F004         	movff	efgtoa@u+3,___fldiv@b+3
  6461  00124E  0E00               	movlw	0
  6462  001250  6E05               	movwf	___fldiv@a^0,c
  6463  001252  0E00               	movlw	0
  6464  001254  6E06               	movwf	(___fldiv@a+1)^0,c
  6465  001256  0E20               	movlw	32
  6466  001258  6E07               	movwf	(___fldiv@a+2)^0,c
  6467  00125A  0E41               	movlw	65
  6468  00125C  6E08               	movwf	(___fldiv@a+3)^0,c
  6469  00125E  EC0B  F013         	call	___fldiv	;wreg free
  6470  001262  C001  F094         	movff	?___fldiv,efgtoa@u
  6471  001266  C002  F095         	movff	?___fldiv+1,efgtoa@u+1
  6472  00126A  C003  F096         	movff	?___fldiv+2,efgtoa@u+2
  6473  00126E  C004  F097         	movff	?___fldiv+3,efgtoa@u+3
  6474  001272                     
  6475                           ;/Applications/microchip/xc8/v2.31/pic/sources/c99/common/doprnt.c: 489:         --ne;
  6476  001272  0100               	movlb	0	; () banked
  6477  001274  0770               	decf	efgtoa@ne& (0+255),f,b
  6478  001276  A0D8               	btfss	status,0,c
  6479  001278  0771               	decf	(efgtoa@ne+1)& (0+255),f,b
  6480  00127A                     
  6481                           ; BSR set to: 0
  6482                           ;/Applications/microchip/xc8/v2.31/pic/sources/c99/common/doprnt.c: 490:         ++i;
  6483  00127A  4B8A               	infsnz	efgtoa@i& (0+255),f,b
  6484  00127C  2B8B               	incf	(efgtoa@i+1)& (0+255),f,b
  6485  00127E                     l4362:
  6486                           
  6487                           ; BSR set to: 0
  6488                           ;/Applications/microchip/xc8/v2.31/pic/sources/c99/common/doprnt.c: 468:     while ((i <
      +                           m) && (n < (80 - 5))) {
  6489  00127E  5172               	movf	efgtoa@m& (0+255),w,b
  6490  001280  5D8A               	subwf	efgtoa@i& (0+255),w,b
  6491  001282  518B               	movf	(efgtoa@i+1)& (0+255),w,b
  6492  001284  0A80               	xorlw	128
  6493  001286  6E4D               	movwf	??_efgtoa^0,c
  6494  001288  5173               	movf	(efgtoa@m+1)& (0+255),w,b
  6495  00128A  0A80               	xorlw	128
  6496  00128C  584D               	subwfb	??_efgtoa^0,w,c
  6497  00128E  B0D8               	btfsc	status,0,c
  6498  001290  EF4C  F009         	goto	u5601
  6499  001294  EF4E  F009         	goto	u5600
  6500  001298                     u5601:
  6501  001298  EF5C  F009         	goto	l4366
  6502  00129C                     u5600:
  6503  00129C                     
  6504                           ; BSR set to: 0
  6505  00129C  BF93               	btfsc	(efgtoa@n+1)& (0+255),7,b
  6506  00129E  EF5A  F009         	goto	u5611
  6507  0012A2  5193               	movf	(efgtoa@n+1)& (0+255),w,b
  6508  0012A4  E109               	bnz	u5610
  6509  0012A6  0E4B               	movlw	75
  6510  0012A8  5D92               	subwf	efgtoa@n& (0+255),w,b
  6511  0012AA  A0D8               	btfss	status,0,c
  6512  0012AC  EF5A  F009         	goto	u5611
  6513  0012B0  EF5C  F009         	goto	u5610
  6514  0012B4                     u5611:
  6515  0012B4  EF52  F008         	goto	l4314
  6516  0012B8                     u5610:
  6517  0012B8                     l4366:
  6518                           
  6519                           ; BSR set to: 0
  6520                           ;/Applications/microchip/xc8/v2.31/pic/sources/c99/common/doprnt.c: 492:     if (!pp && 
      +                          (flags & (1 << 4))) {
  6521  0012B8  516E               	movf	efgtoa@pp& (0+255),w,b
  6522  0012BA  116F               	iorwf	(efgtoa@pp+1)& (0+255),w,b
  6523  0012BC  A4D8               	btfss	status,2,c
  6524  0012BE  EF63  F009         	goto	u5621
  6525  0012C2  EF65  F009         	goto	u5620
  6526  0012C6                     u5621:
  6527  0012C6  EF76  F009         	goto	l4374
  6528  0012CA                     u5620:
  6529  0012CA                     
  6530                           ; BSR set to: 0
  6531  0012CA  A9D8               	btfss	_flags& (0+255),4,b
  6532  0012CC  EF6A  F009         	goto	u5631
  6533  0012D0  EF6C  F009         	goto	u5630
  6534  0012D4                     u5631:
  6535  0012D4  EF76  F009         	goto	l4374
  6536  0012D8                     u5630:
  6537  0012D8                     
  6538                           ; BSR set to: 0
  6539                           ;/Applications/microchip/xc8/v2.31/pic/sources/c99/common/doprnt.c: 493:         dbuf[n+
      +                          +] = '.';
  6540  0012D8  0E16               	movlw	low _dbuf
  6541  0012DA  2592               	addwf	efgtoa@n& (0+255),w,b
  6542  0012DC  6ED9               	movwf	fsr2l,c
  6543  0012DE  0E01               	movlw	high _dbuf
  6544  0012E0  2193               	addwfc	(efgtoa@n+1)& (0+255),w,b
  6545  0012E2  6EDA               	movwf	fsr2h,c
  6546  0012E4  0E2E               	movlw	46
  6547  0012E6  6EDF               	movwf	indf2,c
  6548  0012E8                     
  6549                           ; BSR set to: 0
  6550  0012E8  4B92               	infsnz	efgtoa@n& (0+255),f,b
  6551  0012EA  2B93               	incf	(efgtoa@n+1)& (0+255),f,b
  6552  0012EC                     l4374:
  6553                           
  6554                           ; BSR set to: 0
  6555                           ;/Applications/microchip/xc8/v2.31/pic/sources/c99/common/doprnt.c: 495:     dbuf[n] = '
      +                          \0';
  6556  0012EC  0E16               	movlw	low _dbuf
  6557  0012EE  2592               	addwf	efgtoa@n& (0+255),w,b
  6558  0012F0  6ED9               	movwf	fsr2l,c
  6559  0012F2  0E01               	movlw	high _dbuf
  6560  0012F4  2193               	addwfc	(efgtoa@n+1)& (0+255),w,b
  6561  0012F6  6EDA               	movwf	fsr2h,c
  6562  0012F8  0E00               	movlw	0
  6563  0012FA  6EDF               	movwf	indf2,c
  6564  0012FC                     
  6565                           ; BSR set to: 0
  6566                           ;/Applications/microchip/xc8/v2.31/pic/sources/c99/common/doprnt.c: 498:     if (nmode =
      +                          = 'e') {
  6567  0012FC  0E65               	movlw	101
  6568  0012FE  1980               	xorwf	efgtoa@nmode& (0+255),w,b
  6569  001300  A4D8               	btfss	status,2,c
  6570  001302  EF85  F009         	goto	u5641
  6571  001306  EF87  F009         	goto	u5640
  6572  00130A                     u5641:
  6573  00130A  EFE1  F004         	goto	l4176
  6574  00130E                     u5640:
  6575  00130E                     
  6576                           ; BSR set to: 0
  6577                           ;/Applications/microchip/xc8/v2.31/pic/sources/c99/common/doprnt.c: 499:         i = siz
      +                          eof(dbuf) - 1;
  6578  00130E  0E00               	movlw	0
  6579  001310  6F8B               	movwf	(efgtoa@i+1)& (0+255),b
  6580  001312  0E4F               	movlw	79
  6581  001314  6F8A               	movwf	efgtoa@i& (0+255),b
  6582  001316                     
  6583                           ; BSR set to: 0
  6584                           ;/Applications/microchip/xc8/v2.31/pic/sources/c99/common/doprnt.c: 500:         dbuf[i]
      +                           = '\0';
  6585  001316  0E16               	movlw	low _dbuf
  6586  001318  258A               	addwf	efgtoa@i& (0+255),w,b
  6587  00131A  6ED9               	movwf	fsr2l,c
  6588  00131C  0E01               	movlw	high _dbuf
  6589  00131E  218B               	addwfc	(efgtoa@i+1)& (0+255),w,b
  6590  001320  6EDA               	movwf	fsr2h,c
  6591  001322  0E00               	movlw	0
  6592  001324  6EDF               	movwf	indf2,c
  6593  001326                     
  6594                           ; BSR set to: 0
  6595                           ;/Applications/microchip/xc8/v2.31/pic/sources/c99/common/doprnt.c: 501:         sign = 
      +                          0;
  6596  001326  0E00               	movlw	0
  6597  001328  6F7B               	movwf	(efgtoa@sign+1)& (0+255),b
  6598  00132A  0E00               	movlw	0
  6599  00132C  6F7A               	movwf	efgtoa@sign& (0+255),b
  6600  00132E                     
  6601                           ; BSR set to: 0
  6602                           ;/Applications/microchip/xc8/v2.31/pic/sources/c99/common/doprnt.c: 502:         if (e <
      +                           0) {
  6603  00132E  BF91               	btfsc	(efgtoa@e+1)& (0+255),7,b
  6604  001330  EF9E  F009         	goto	u5650
  6605  001334  EF9C  F009         	goto	u5651
  6606  001338                     u5651:
  6607  001338  EFA6  F009         	goto	l4390
  6608  00133C                     u5650:
  6609  00133C                     
  6610                           ; BSR set to: 0
  6611                           ;/Applications/microchip/xc8/v2.31/pic/sources/c99/common/doprnt.c: 503:             sig
      +                          n = 1;
  6612  00133C  0E00               	movlw	0
  6613  00133E  6F7B               	movwf	(efgtoa@sign+1)& (0+255),b
  6614  001340  0E01               	movlw	1
  6615  001342  6F7A               	movwf	efgtoa@sign& (0+255),b
  6616  001344                     
  6617                           ; BSR set to: 0
  6618                           ;/Applications/microchip/xc8/v2.31/pic/sources/c99/common/doprnt.c: 504:             e =
      +                           -e;
  6619  001344  6D90               	negf	efgtoa@e& (0+255),b
  6620  001346  1F91               	comf	(efgtoa@e+1)& (0+255),f,b
  6621  001348  B0D8               	btfsc	status,0,c
  6622  00134A  2B91               	incf	(efgtoa@e+1)& (0+255),f,b
  6623  00134C                     l4390:
  6624                           
  6625                           ; BSR set to: 0
  6626                           ;/Applications/microchip/xc8/v2.31/pic/sources/c99/common/doprnt.c: 506:         p = 2;
  6627  00134C  0E00               	movlw	0
  6628  00134E  6F7D               	movwf	(efgtoa@p+1)& (0+255),b
  6629  001350  0E02               	movlw	2
  6630  001352  6F7C               	movwf	efgtoa@p& (0+255),b
  6631                           
  6632                           ;/Applications/microchip/xc8/v2.31/pic/sources/c99/common/doprnt.c: 507:         while (
      +                          e || (0 < p)) {
  6633  001354  EFD7  F009         	goto	l4402
  6634  001358                     l4392:
  6635                           
  6636                           ; BSR set to: 0
  6637                           ;/Applications/microchip/xc8/v2.31/pic/sources/c99/common/doprnt.c: 508:             --i
      +                          ;
  6638  001358  078A               	decf	efgtoa@i& (0+255),f,b
  6639  00135A  A0D8               	btfss	status,0,c
  6640  00135C  078B               	decf	(efgtoa@i+1)& (0+255),f,b
  6641  00135E                     
  6642                           ; BSR set to: 0
  6643                           ;/Applications/microchip/xc8/v2.31/pic/sources/c99/common/doprnt.c: 509:             dbu
      +                          f[i] = '0' + (e % 10);
  6644  00135E  0E16               	movlw	low _dbuf
  6645  001360  258A               	addwf	efgtoa@i& (0+255),w,b
  6646  001362  6ED9               	movwf	fsr2l,c
  6647  001364  0E01               	movlw	high _dbuf
  6648  001366  218B               	addwfc	(efgtoa@i+1)& (0+255),w,b
  6649  001368  6EDA               	movwf	fsr2h,c
  6650  00136A  C090  F001         	movff	efgtoa@e,___awmod@dividend
  6651  00136E  C091  F002         	movff	efgtoa@e+1,___awmod@dividend+1
  6652  001372  0E00               	movlw	0
  6653  001374  6E04               	movwf	(___awmod@divisor+1)^0,c
  6654  001376  0E0A               	movlw	10
  6655  001378  6E03               	movwf	___awmod@divisor^0,c
  6656  00137A  ECAB  F022         	call	___awmod	;wreg free
  6657  00137E  5001               	movf	?___awmod^0,w,c
  6658  001380  0F30               	addlw	48
  6659  001382  6EDF               	movwf	indf2,c
  6660  001384                     
  6661                           ;/Applications/microchip/xc8/v2.31/pic/sources/c99/common/doprnt.c: 510:             e =
      +                           e / 10;
  6662  001384  C090  F006         	movff	efgtoa@e,___awdiv@dividend
  6663  001388  C091  F007         	movff	efgtoa@e+1,___awdiv@dividend+1
  6664  00138C  0E00               	movlw	0
  6665  00138E  6E09               	movwf	(___awdiv@divisor+1)^0,c
  6666  001390  0E0A               	movlw	10
  6667  001392  6E08               	movwf	___awdiv@divisor^0,c
  6668  001394  EC49  F022         	call	___awdiv	;wreg free
  6669  001398  C006  F090         	movff	?___awdiv,efgtoa@e
  6670  00139C  C007  F091         	movff	?___awdiv+1,efgtoa@e+1
  6671  0013A0                     
  6672                           ;/Applications/microchip/xc8/v2.31/pic/sources/c99/common/doprnt.c: 511:             --p
      +                          ;
  6673  0013A0  0100               	movlb	0	; () banked
  6674  0013A2  077C               	decf	efgtoa@p& (0+255),f,b
  6675  0013A4  A0D8               	btfss	status,0,c
  6676  0013A6  077D               	decf	(efgtoa@p+1)& (0+255),f,b
  6677  0013A8                     
  6678                           ; BSR set to: 0
  6679                           ;/Applications/microchip/xc8/v2.31/pic/sources/c99/common/doprnt.c: 512:             --w
      +                          ;
  6680  0013A8  077E               	decf	efgtoa@w& (0+255),f,b
  6681  0013AA  A0D8               	btfss	status,0,c
  6682  0013AC  077F               	decf	(efgtoa@w+1)& (0+255),f,b
  6683  0013AE                     l4402:
  6684                           
  6685                           ; BSR set to: 0
  6686                           ;/Applications/microchip/xc8/v2.31/pic/sources/c99/common/doprnt.c: 507:         while (
      +                          e || (0 < p)) {
  6687  0013AE  5190               	movf	efgtoa@e& (0+255),w,b
  6688  0013B0  1191               	iorwf	(efgtoa@e+1)& (0+255),w,b
  6689  0013B2  A4D8               	btfss	status,2,c
  6690  0013B4  EFDE  F009         	goto	u5661
  6691  0013B8  EFE0  F009         	goto	u5660
  6692  0013BC                     u5661:
  6693  0013BC  EFAC  F009         	goto	l4392
  6694  0013C0                     u5660:
  6695  0013C0                     
  6696                           ; BSR set to: 0
  6697  0013C0  BF7D               	btfsc	(efgtoa@p+1)& (0+255),7,b
  6698  0013C2  EFED  F009         	goto	u5670
  6699  0013C6  517D               	movf	(efgtoa@p+1)& (0+255),w,b
  6700  0013C8  E106               	bnz	u5671
  6701  0013CA  057C               	decf	efgtoa@p& (0+255),w,b
  6702  0013CC  B0D8               	btfsc	status,0,c
  6703  0013CE  EFEB  F009         	goto	u5671
  6704  0013D2  EFED  F009         	goto	u5670
  6705  0013D6                     u5671:
  6706  0013D6  EFAC  F009         	goto	l4392
  6707  0013DA                     u5670:
  6708  0013DA                     
  6709                           ; BSR set to: 0
  6710                           ;/Applications/microchip/xc8/v2.31/pic/sources/c99/common/doprnt.c: 514:         --i;
  6711  0013DA  078A               	decf	efgtoa@i& (0+255),f,b
  6712  0013DC  A0D8               	btfss	status,0,c
  6713  0013DE  078B               	decf	(efgtoa@i+1)& (0+255),f,b
  6714  0013E0                     
  6715                           ; BSR set to: 0
  6716                           ;/Applications/microchip/xc8/v2.31/pic/sources/c99/common/doprnt.c: 515:         dbuf[i]
      +                           = sign ? '-' : '+';
  6717  0013E0  517A               	movf	efgtoa@sign& (0+255),w,b
  6718  0013E2  117B               	iorwf	(efgtoa@sign+1)& (0+255),w,b
  6719  0013E4  A4D8               	btfss	status,2,c
  6720  0013E6  EFF7  F009         	goto	u5681
  6721  0013EA  EFF9  F009         	goto	u5680
  6722  0013EE                     u5681:
  6723  0013EE  EFFF  F009         	goto	l4412
  6724  0013F2                     u5680:
  6725  0013F2                     
  6726                           ; BSR set to: 0
  6727  0013F2  0E00               	movlw	0
  6728  0013F4  6F67               	movwf	(_efgtoa$1276+1)& (0+255),b
  6729  0013F6  0E2B               	movlw	43
  6730  0013F8  6F66               	movwf	_efgtoa$1276& (0+255),b
  6731  0013FA  EF03  F00A         	goto	l4414
  6732  0013FE                     l4412:
  6733                           
  6734                           ; BSR set to: 0
  6735  0013FE  0E00               	movlw	0
  6736  001400  6F67               	movwf	(_efgtoa$1276+1)& (0+255),b
  6737  001402  0E2D               	movlw	45
  6738  001404  6F66               	movwf	_efgtoa$1276& (0+255),b
  6739  001406                     l4414:
  6740                           
  6741                           ; BSR set to: 0
  6742  001406  0E16               	movlw	low _dbuf
  6743  001408  258A               	addwf	efgtoa@i& (0+255),w,b
  6744  00140A  6ED9               	movwf	fsr2l,c
  6745  00140C  0E01               	movlw	high _dbuf
  6746  00140E  218B               	addwfc	(efgtoa@i+1)& (0+255),w,b
  6747  001410  6EDA               	movwf	fsr2h,c
  6748  001412  C066  FFDF         	movff	_efgtoa$1276,indf2
  6749  001416                     
  6750                           ; BSR set to: 0
  6751                           ;/Applications/microchip/xc8/v2.31/pic/sources/c99/common/doprnt.c: 516:         --w;
  6752  001416  077E               	decf	efgtoa@w& (0+255),f,b
  6753  001418  A0D8               	btfss	status,0,c
  6754  00141A  077F               	decf	(efgtoa@w+1)& (0+255),f,b
  6755  00141C                     
  6756                           ; BSR set to: 0
  6757                           ;/Applications/microchip/xc8/v2.31/pic/sources/c99/common/doprnt.c: 518:         dbuf[i]
      +                           = (0 ? isupper((int)c) : ((unsigned)((int)c)-'A') < 26) ? 'E' : 'e';
  6758  00141C  078A               	decf	efgtoa@i& (0+255),f,b
  6759  00141E  A0D8               	btfss	status,0,c
  6760  001420  078B               	decf	(efgtoa@i+1)& (0+255),f,b
  6761  001422                     
  6762                           ; BSR set to: 0
  6763  001422  0EBF               	movlw	191
  6764  001424  6E4D               	movwf	??_efgtoa^0,c
  6765  001426  0EFF               	movlw	255
  6766  001428  6E4E               	movwf	(??_efgtoa+1)^0,c
  6767  00142A  504C               	movf	efgtoa@c^0,w,c
  6768  00142C  6E4F               	movwf	(??_efgtoa+2)^0,c
  6769  00142E  6A50               	clrf	(??_efgtoa+3)^0,c
  6770  001430  504D               	movf	??_efgtoa^0,w,c
  6771  001432  264F               	addwf	(??_efgtoa+2)^0,f,c
  6772  001434  504E               	movf	(??_efgtoa+1)^0,w,c
  6773  001436  2250               	addwfc	(??_efgtoa+3)^0,f,c
  6774  001438  5050               	movf	(??_efgtoa+3)^0,w,c
  6775  00143A  E10A               	bnz	u5690
  6776  00143C  0E1A               	movlw	26
  6777  00143E  5C4F               	subwf	(??_efgtoa+2)^0,w,c
  6778  001440  A0D8               	btfss	status,0,c
  6779  001442  EF25  F00A         	goto	u5691
  6780  001446  EF28  F00A         	goto	u5690
  6781  00144A                     u5691:
  6782  00144A  0E01               	movlw	1
  6783  00144C  EF29  F00A         	goto	u5700
  6784  001450                     u5690:
  6785  001450  0E00               	movlw	0
  6786  001452                     u5700:
  6787  001452  6F6A               	movwf	_efgtoa$1278& (0+255),b
  6788  001454  6B6B               	clrf	(_efgtoa$1278+1)& (0+255),b
  6789  001456                     
  6790                           ; BSR set to: 0
  6791  001456  516A               	movf	_efgtoa$1278& (0+255),w,b
  6792  001458  116B               	iorwf	(_efgtoa$1278+1)& (0+255),w,b
  6793  00145A  A4D8               	btfss	status,2,c
  6794  00145C  EF32  F00A         	goto	u5711
  6795  001460  EF34  F00A         	goto	u5710
  6796  001464                     u5711:
  6797  001464  EF3A  F00A         	goto	l4428
  6798  001468                     u5710:
  6799  001468                     
  6800                           ; BSR set to: 0
  6801  001468  0E00               	movlw	0
  6802  00146A  6F69               	movwf	(_efgtoa$1277+1)& (0+255),b
  6803  00146C  0E65               	movlw	101
  6804  00146E  6F68               	movwf	_efgtoa$1277& (0+255),b
  6805  001470  EF3E  F00A         	goto	l4430
  6806  001474                     l4428:
  6807                           
  6808                           ; BSR set to: 0
  6809  001474  0E00               	movlw	0
  6810  001476  6F69               	movwf	(_efgtoa$1277+1)& (0+255),b
  6811  001478  0E45               	movlw	69
  6812  00147A  6F68               	movwf	_efgtoa$1277& (0+255),b
  6813  00147C                     l4430:
  6814                           
  6815                           ; BSR set to: 0
  6816  00147C  0E16               	movlw	low _dbuf
  6817  00147E  258A               	addwf	efgtoa@i& (0+255),w,b
  6818  001480  6ED9               	movwf	fsr2l,c
  6819  001482  0E01               	movlw	high _dbuf
  6820  001484  218B               	addwfc	(efgtoa@i+1)& (0+255),w,b
  6821  001486  6EDA               	movwf	fsr2h,c
  6822  001488  C068  FFDF         	movff	_efgtoa$1277,indf2
  6823  00148C                     
  6824                           ; BSR set to: 0
  6825                           ;/Applications/microchip/xc8/v2.31/pic/sources/c99/common/doprnt.c: 519:         --w;
  6826  00148C  077E               	decf	efgtoa@w& (0+255),f,b
  6827  00148E  A0D8               	btfss	status,0,c
  6828  001490  077F               	decf	(efgtoa@w+1)& (0+255),f,b
  6829  001492                     
  6830                           ; BSR set to: 0
  6831                           ;/Applications/microchip/xc8/v2.31/pic/sources/c99/common/doprnt.c: 520:         strcpy(
      +                          &dbuf[n], &dbuf[i]);
  6832  001492  0E16               	movlw	low _dbuf
  6833  001494  2592               	addwf	efgtoa@n& (0+255),w,b
  6834  001496  6E01               	movwf	strcpy@dest^0,c
  6835  001498  0E01               	movlw	high _dbuf
  6836  00149A  2193               	addwfc	(efgtoa@n+1)& (0+255),w,b
  6837  00149C  6E02               	movwf	(strcpy@dest+1)^0,c
  6838  00149E  0E16               	movlw	low _dbuf
  6839  0014A0  258A               	addwf	efgtoa@i& (0+255),w,b
  6840  0014A2  6E03               	movwf	strcpy@src^0,c
  6841  0014A4  0E01               	movlw	high _dbuf
  6842  0014A6  218B               	addwfc	(efgtoa@i+1)& (0+255),w,b
  6843  0014A8  6E04               	movwf	(strcpy@src+1)^0,c
  6844  0014AA  ECC6  F024         	call	_strcpy	;wreg free
  6845  0014AE  EFE1  F004         	goto	l4176
  6846  0014B2                     l1001:
  6847  0014B2  0012               	return		;funcret
  6848  0014B4                     __end_of_efgtoa:
  6849                           	callstack 0
  6850                           
  6851 ;; *************** function _tolower *****************
  6852 ;; Defined at:
  6853 ;;		line 4 in file "/Applications/microchip/xc8/v2.31/pic/sources/c99/common/tolower.c"
  6854 ;; Parameters:    Size  Location     Type
  6855 ;;  c               2    6[COMRAM] int 
  6856 ;; Auto vars:     Size  Location     Type
  6857 ;;		None
  6858 ;; Return value:  Size  Location     Type
  6859 ;;                  2    6[COMRAM] int 
  6860 ;; Registers used:
  6861 ;;		wreg, status,2, status,0
  6862 ;; Tracked objects:
  6863 ;;		On entry : 0/0
  6864 ;;		On exit  : 0/0
  6865 ;;		Unchanged: 0/0
  6866 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  6867 ;;      Params:         2       0       0       0       0       0       0       0       0
  6868 ;;      Locals:         2       0       0       0       0       0       0       0       0
  6869 ;;      Temps:          4       0       0       0       0       0       0       0       0
  6870 ;;      Totals:         8       0       0       0       0       0       0       0       0
  6871 ;;Total ram usage:        8 bytes
  6872 ;; Hardware stack levels used:    1
  6873 ;; Hardware stack levels required when called:    1
  6874 ;; This function calls:
  6875 ;;		_isupper
  6876 ;; This function is called by:
  6877 ;;		_efgtoa
  6878 ;;		_vfpfcnvrt
  6879 ;; This function uses a non-reentrant model
  6880 ;;
  6881                           
  6882                           	psect	text22
  6883  00492C                     __ptext22:
  6884                           	callstack 0
  6885  00492C                     _tolower:
  6886                           	callstack 25
  6887  00492C  0EBF               	movlw	191
  6888  00492E  6E09               	movwf	??_tolower^0,c
  6889  004930  0EFF               	movlw	255
  6890  004932  6E0A               	movwf	(??_tolower+1)^0,c
  6891  004934  C007  F00B         	movff	tolower@c,??_tolower+2
  6892  004938  C008  F00C         	movff	tolower@c+1,??_tolower+3
  6893  00493C  5009               	movf	??_tolower^0,w,c
  6894  00493E  260B               	addwf	(??_tolower+2)^0,f,c
  6895  004940  500A               	movf	(??_tolower+1)^0,w,c
  6896  004942  220C               	addwfc	(??_tolower+3)^0,f,c
  6897  004944  500C               	movf	(??_tolower+3)^0,w,c
  6898  004946  E10A               	bnz	u4910
  6899  004948  0E1A               	movlw	26
  6900  00494A  5C0B               	subwf	(??_tolower+2)^0,w,c
  6901  00494C  A0D8               	btfss	status,0,c
  6902  00494E  EFAB  F024         	goto	u4911
  6903  004952  EFAE  F024         	goto	u4910
  6904  004956                     u4911:
  6905  004956  0E01               	movlw	1
  6906  004958  EFAF  F024         	goto	u4920
  6907  00495C                     u4910:
  6908  00495C  0E00               	movlw	0
  6909  00495E                     u4920:
  6910  00495E  6E0D               	movwf	_tolower$1423^0,c
  6911  004960  6A0E               	clrf	(_tolower$1423+1)^0,c
  6912  004962  500D               	movf	_tolower$1423^0,w,c
  6913  004964  100E               	iorwf	(_tolower$1423+1)^0,w,c
  6914  004966  B4D8               	btfsc	status,2,c
  6915  004968  EFB8  F024         	goto	u4931
  6916  00496C  EFBA  F024         	goto	u4930
  6917  004970                     u4931:
  6918  004970  EFC1  F024         	goto	l1244
  6919  004974                     u4930:
  6920  004974  0E20               	movlw	32
  6921  004976  1007               	iorwf	tolower@c^0,w,c
  6922  004978  6E07               	movwf	?_tolower^0,c
  6923  00497A  5008               	movf	(tolower@c+1)^0,w,c
  6924  00497C  6E08               	movwf	(?_tolower+1)^0,c
  6925  00497E  EFC5  F024         	goto	l1249
  6926  004982                     l1244:
  6927  004982  C007  F007         	movff	tolower@c,?_tolower
  6928  004986  C008  F008         	movff	tolower@c+1,?_tolower+1
  6929  00498A                     l1249:
  6930  00498A  0012               	return		;funcret
  6931  00498C                     __end_of_tolower:
  6932                           	callstack 0
  6933                           
  6934 ;; *************** function _isupper *****************
  6935 ;; Defined at:
  6936 ;;		line 5 in file "/Applications/microchip/xc8/v2.31/pic/sources/c99/common/isupper.c"
  6937 ;; Parameters:    Size  Location     Type
  6938 ;;  c               2    0[COMRAM] int 
  6939 ;; Auto vars:     Size  Location     Type
  6940 ;;		None
  6941 ;; Return value:  Size  Location     Type
  6942 ;;                  2    0[COMRAM] int 
  6943 ;; Registers used:
  6944 ;;		wreg, status,2, status,0
  6945 ;; Tracked objects:
  6946 ;;		On entry : 0/0
  6947 ;;		On exit  : 0/0
  6948 ;;		Unchanged: 0/0
  6949 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  6950 ;;      Params:         2       0       0       0       0       0       0       0       0
  6951 ;;      Locals:         0       0       0       0       0       0       0       0       0
  6952 ;;      Temps:          4       0       0       0       0       0       0       0       0
  6953 ;;      Totals:         6       0       0       0       0       0       0       0       0
  6954 ;;Total ram usage:        6 bytes
  6955 ;; Hardware stack levels used:    1
  6956 ;; This function calls:
  6957 ;;		Nothing
  6958 ;; This function is called by:
  6959 ;;		_efgtoa
  6960 ;;		_vfpfcnvrt
  6961 ;;		_tolower
  6962 ;; This function uses a non-reentrant model
  6963 ;;
  6964                           
  6965                           	psect	text23
  6966  004C24                     __ptext23:
  6967                           	callstack 0
  6968  004C24                     _isupper:
  6969                           	callstack 25
  6970  004C24  0EBF               	movlw	191
  6971  004C26  6E03               	movwf	??_isupper^0,c
  6972  004C28  0EFF               	movlw	255
  6973  004C2A  6E04               	movwf	(??_isupper+1)^0,c
  6974  004C2C  C001  F005         	movff	isupper@c,??_isupper+2
  6975  004C30  C002  F006         	movff	isupper@c+1,??_isupper+3
  6976  004C34  5003               	movf	??_isupper^0,w,c
  6977  004C36  2605               	addwf	(??_isupper+2)^0,f,c
  6978  004C38  5004               	movf	(??_isupper+1)^0,w,c
  6979  004C3A  2206               	addwfc	(??_isupper+3)^0,f,c
  6980  004C3C  5006               	movf	(??_isupper+3)^0,w,c
  6981  004C3E  E10A               	bnz	u3820
  6982  004C40  0E1A               	movlw	26
  6983  004C42  5C05               	subwf	(??_isupper+2)^0,w,c
  6984  004C44  A0D8               	btfss	status,0,c
  6985  004C46  EF27  F026         	goto	u3821
  6986  004C4A  EF2A  F026         	goto	u3820
  6987  004C4E                     u3821:
  6988  004C4E  0E01               	movlw	1
  6989  004C50  EF2B  F026         	goto	u3830
  6990  004C54                     u3820:
  6991  004C54  0E00               	movlw	0
  6992  004C56                     u3830:
  6993  004C56  6E01               	movwf	?_isupper^0,c
  6994  004C58  6A02               	clrf	(?_isupper+1)^0,c
  6995  004C5A  0012               	return		;funcret
  6996  004C5C                     __end_of_isupper:
  6997                           	callstack 0
  6998                           
  6999 ;; *************** function _strcpy *****************
  7000 ;; Defined at:
  7001 ;;		line 3 in file "/Applications/microchip/xc8/v2.31/pic/sources/c99/common/strcpy.c"
  7002 ;; Parameters:    Size  Location     Type
  7003 ;;  dest            2    0[COMRAM] PTR unsigned char 
  7004 ;;		 -> dbuf(80), 
  7005 ;;  src             2    2[COMRAM] PTR const unsigned char 
  7006 ;;		 -> STR_13(4), STR_12(4), STR_9(4), STR_8(4), 
  7007 ;;		 -> dbuf(80), 
  7008 ;; Auto vars:     Size  Location     Type
  7009 ;;  d               2    8[COMRAM] PTR unsigned char 
  7010 ;;		 -> dbuf(80), 
  7011 ;;  s               2    6[COMRAM] PTR const unsigned char 
  7012 ;;		 -> STR_13(4), STR_12(4), STR_9(4), STR_8(4), 
  7013 ;;		 -> dbuf(80), 
  7014 ;; Return value:  Size  Location     Type
  7015 ;;                  2    0[COMRAM] PTR unsigned char 
  7016 ;; Registers used:
  7017 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru
  7018 ;; Tracked objects:
  7019 ;;		On entry : 0/0
  7020 ;;		On exit  : 0/0
  7021 ;;		Unchanged: 0/0
  7022 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  7023 ;;      Params:         4       0       0       0       0       0       0       0       0
  7024 ;;      Locals:         4       0       0       0       0       0       0       0       0
  7025 ;;      Temps:          2       0       0       0       0       0       0       0       0
  7026 ;;      Totals:        10       0       0       0       0       0       0       0       0
  7027 ;;Total ram usage:       10 bytes
  7028 ;; Hardware stack levels used:    1
  7029 ;; This function calls:
  7030 ;;		Nothing
  7031 ;; This function is called by:
  7032 ;;		_efgtoa
  7033 ;; This function uses a non-reentrant model
  7034 ;;
  7035                           
  7036                           	psect	text24
  7037  00498C                     __ptext24:
  7038                           	callstack 0
  7039  00498C                     _strcpy:
  7040                           	callstack 25
  7041  00498C  C003  F007         	movff	strcpy@src,strcpy@s
  7042  004990  C004  F008         	movff	strcpy@src+1,strcpy@s+1
  7043  004994  C001  F009         	movff	strcpy@dest,strcpy@d
  7044  004998  C002  F00A         	movff	strcpy@dest+1,strcpy@d+1
  7045  00499C                     l4014:
  7046  00499C  5007               	movf	strcpy@s^0,w,c
  7047  00499E  6E05               	movwf	??_strcpy^0,c
  7048  0049A0  5008               	movf	(strcpy@s+1)^0,w,c
  7049  0049A2  6E06               	movwf	(??_strcpy+1)^0,c
  7050  0049A4  4A07               	infsnz	strcpy@s^0,f,c
  7051  0049A6  2A08               	incf	(strcpy@s+1)^0,f,c
  7052  0049A8  C005  FFF6         	movff	??_strcpy,tblptrl
  7053  0049AC  C006  FFF7         	movff	??_strcpy+1,tblptrh
  7054  0049B0  6AF8               	clrf	tblptru,c
  7055  0049B2  C009  FFD9         	movff	strcpy@d,fsr2l
  7056  0049B6  C00A  FFDA         	movff	strcpy@d+1,fsr2h
  7057  0049BA  4A09               	infsnz	strcpy@d^0,f,c
  7058  0049BC  2A0A               	incf	(strcpy@d+1)^0,f,c
  7059  0049BE  0E07               	movlw	(high __ramtop+-1)
  7060  0049C0  64F7               	cpfsgt	tblptrh,c
  7061  0049C2  D003               	bra	u4897
  7062  0049C4  0008               	tblrd		*
  7063  0049C6  50F5               	movf	tablat,w,c
  7064  0049C8  D005               	bra	u4890
  7065  0049CA                     u4897:
  7066  0049CA  CFF6 FFE1          	movff	tblptrl,fsr1l
  7067  0049CE  CFF7 FFE2          	movff	tblptrh,fsr1h
  7068  0049D2  50E7               	movf	indf1,w,c
  7069  0049D4                     u4890:
  7070  0049D4  6EDF               	movwf	indf2,c
  7071  0049D6  50DF               	movf	indf2,w,c
  7072  0049D8  A4D8               	btfss	status,2,c
  7073  0049DA  EFF1  F024         	goto	u4901
  7074  0049DE  EFF3  F024         	goto	u4900
  7075  0049E2                     u4901:
  7076  0049E2  EFCE  F024         	goto	l4014
  7077  0049E6                     u4900:
  7078  0049E6  0012               	return		;funcret
  7079  0049E8                     __end_of_strcpy:
  7080                           	callstack 0
  7081                           
  7082 ;; *************** function _floorf *****************
  7083 ;; Defined at:
  7084 ;;		line 3 in file "/Applications/microchip/xc8/v2.31/pic/sources/c99/common/floorf.c"
  7085 ;; Parameters:    Size  Location     Type
  7086 ;;  x               4   25[COMRAM] float 
  7087 ;; Auto vars:     Size  Location     Type
  7088 ;;  u               4   41[COMRAM] struct .
  7089 ;;  m               4   35[COMRAM] unsigned long 
  7090 ;;  e               2   39[COMRAM] int 
  7091 ;; Return value:  Size  Location     Type
  7092 ;;                  4   25[COMRAM] float 
  7093 ;; Registers used:
  7094 ;;		wreg, status,2, status,0
  7095 ;; Tracked objects:
  7096 ;;		On entry : 0/0
  7097 ;;		On exit  : 0/0
  7098 ;;		Unchanged: 0/0
  7099 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  7100 ;;      Params:         4       0       0       0       0       0       0       0       0
  7101 ;;      Locals:        10       0       0       0       0       0       0       0       0
  7102 ;;      Temps:          6       0       0       0       0       0       0       0       0
  7103 ;;      Totals:        20       0       0       0       0       0       0       0       0
  7104 ;;Total ram usage:       20 bytes
  7105 ;; Hardware stack levels used:    1
  7106 ;; This function calls:
  7107 ;;		Nothing
  7108 ;; This function is called by:
  7109 ;;		_SensorLM35
  7110 ;;		_efgtoa
  7111 ;; This function uses a non-reentrant model
  7112 ;;
  7113                           
  7114                           	psect	text25
  7115  00334A                     __ptext25:
  7116                           	callstack 0
  7117  00334A                     _floorf:
  7118                           	callstack 25
  7119  00334A  C104  F02A         	movff	floorf@F527,floorf@u
  7120  00334E  C105  F02B         	movff	floorf@F527+1,floorf@u+1
  7121  003352  C106  F02C         	movff	floorf@F527+2,floorf@u+2
  7122  003356  C107  F02D         	movff	floorf@F527+3,floorf@u+3
  7123  00335A  C01A  F02A         	movff	floorf@x,floorf@u
  7124  00335E  C01B  F02B         	movff	floorf@x+1,floorf@u+1
  7125  003362  C01C  F02C         	movff	floorf@x+2,floorf@u+2
  7126  003366  C01D  F02D         	movff	floorf@x+3,floorf@u+3
  7127  00336A  0E81               	movlw	129
  7128  00336C  6E1E               	movwf	??_floorf^0,c
  7129  00336E  0EFF               	movlw	255
  7130  003370  6E1F               	movwf	(??_floorf+1)^0,c
  7131  003372  C02A  F020         	movff	floorf@u,??_floorf+2
  7132  003376  C02B  F021         	movff	floorf@u+1,??_floorf+3
  7133  00337A  C02C  F022         	movff	floorf@u+2,??_floorf+4
  7134  00337E  C02D  F023         	movff	floorf@u+3,??_floorf+5
  7135  003382  0E18               	movlw	24
  7136  003384  EFC9  F019         	goto	u3840
  7137  003388                     u3845:
  7138  003388  90D8               	bcf	status,0,c
  7139  00338A  3223               	rrcf	(??_floorf+5)^0,f,c
  7140  00338C  3222               	rrcf	(??_floorf+4)^0,f,c
  7141  00338E  3221               	rrcf	(??_floorf+3)^0,f,c
  7142  003390  3220               	rrcf	(??_floorf+2)^0,f,c
  7143  003392                     u3840:
  7144  003392  2EE8               	decfsz	wreg,f,c
  7145  003394  EFC4  F019         	goto	u3845
  7146  003398  5020               	movf	(??_floorf+2)^0,w,c
  7147  00339A  241E               	addwf	??_floorf^0,w,c
  7148  00339C  6E28               	movwf	floorf@e^0,c
  7149  00339E  0E00               	movlw	0
  7150  0033A0  201F               	addwfc	(??_floorf+1)^0,w,c
  7151  0033A2  6E29               	movwf	(floorf@e+1)^0,c
  7152  0033A4  BE29               	btfsc	(floorf@e+1)^0,7,c
  7153  0033A6  EFDE  F019         	goto	u3851
  7154  0033AA  5029               	movf	(floorf@e+1)^0,w,c
  7155  0033AC  E109               	bnz	u3850
  7156  0033AE  0E17               	movlw	23
  7157  0033B0  5C28               	subwf	floorf@e^0,w,c
  7158  0033B2  A0D8               	btfss	status,0,c
  7159  0033B4  EFDE  F019         	goto	u3851
  7160  0033B8  EFE0  F019         	goto	u3850
  7161  0033BC                     u3851:
  7162  0033BC  EFEA  F019         	goto	l3412
  7163  0033C0                     u3850:
  7164  0033C0                     l3410:
  7165  0033C0  C01A  F01A         	movff	floorf@x,?_floorf
  7166  0033C4  C01B  F01B         	movff	floorf@x+1,?_floorf+1
  7167  0033C8  C01C  F01C         	movff	floorf@x+2,?_floorf+2
  7168  0033CC  C01D  F01D         	movff	floorf@x+3,?_floorf+3
  7169  0033D0  EFAD  F01A         	goto	l879
  7170  0033D4                     l3412:
  7171  0033D4  BE29               	btfsc	(floorf@e+1)^0,7,c
  7172  0033D6  EFEF  F019         	goto	u3861
  7173  0033DA  EFF1  F019         	goto	u3860
  7174  0033DE                     u3861:
  7175  0033DE  EF61  F01A         	goto	l3422
  7176  0033E2                     u3860:
  7177  0033E2  C028  F01E         	movff	floorf@e,??_floorf
  7178  0033E6  0EFF               	movlw	255
  7179  0033E8  6E1F               	movwf	(??_floorf+1)^0,c
  7180  0033EA  0EFF               	movlw	255
  7181  0033EC  6E20               	movwf	(??_floorf+2)^0,c
  7182  0033EE  0E7F               	movlw	127
  7183  0033F0  6E21               	movwf	(??_floorf+3)^0,c
  7184  0033F2  0E00               	movlw	0
  7185  0033F4  6E22               	movwf	(??_floorf+4)^0,c
  7186  0033F6                     u3875:
  7187  0033F6  661E               	tstfsz	??_floorf^0,c
  7188  0033F8  EF00  F01A         	goto	u3876
  7189  0033FC  EF08  F01A         	goto	u3877
  7190  003400                     u3876:
  7191  003400  3422               	rlcf	(??_floorf+4)^0,w,c
  7192  003402  3222               	rrcf	(??_floorf+4)^0,f,c
  7193  003404  3221               	rrcf	(??_floorf+3)^0,f,c
  7194  003406  3220               	rrcf	(??_floorf+2)^0,f,c
  7195  003408  321F               	rrcf	(??_floorf+1)^0,f,c
  7196  00340A  2E1E               	decfsz	??_floorf^0,f,c
  7197  00340C  EFFB  F019         	goto	u3875
  7198  003410                     u3877:
  7199  003410  C01F  F024         	movff	??_floorf+1,floorf@m
  7200  003414  C020  F025         	movff	??_floorf+2,floorf@m+1
  7201  003418  C021  F026         	movff	??_floorf+3,floorf@m+2
  7202  00341C  C022  F027         	movff	??_floorf+4,floorf@m+3
  7203  003420  5024               	movf	floorf@m^0,w,c
  7204  003422  142A               	andwf	floorf@u^0,w,c
  7205  003424  6E1E               	movwf	??_floorf^0,c
  7206  003426  5025               	movf	(floorf@m+1)^0,w,c
  7207  003428  142B               	andwf	(floorf@u+1)^0,w,c
  7208  00342A  6E1F               	movwf	(??_floorf+1)^0,c
  7209  00342C  5026               	movf	(floorf@m+2)^0,w,c
  7210  00342E  142C               	andwf	(floorf@u+2)^0,w,c
  7211  003430  6E20               	movwf	(??_floorf+2)^0,c
  7212  003432  5027               	movf	(floorf@m+3)^0,w,c
  7213  003434  142D               	andwf	(floorf@u+3)^0,w,c
  7214  003436  6E21               	movwf	(??_floorf+3)^0,c
  7215  003438  501E               	movf	??_floorf^0,w,c
  7216  00343A  101F               	iorwf	(??_floorf+1)^0,w,c
  7217  00343C  1020               	iorwf	(??_floorf+2)^0,w,c
  7218  00343E  1021               	iorwf	(??_floorf+3)^0,w,c
  7219  003440  A4D8               	btfss	status,2,c
  7220  003442  EF25  F01A         	goto	u3881
  7221  003446  EF27  F01A         	goto	u3880
  7222  00344A                     u3881:
  7223  00344A  EF29  F01A         	goto	l3418
  7224  00344E                     u3880:
  7225  00344E  EFE0  F019         	goto	l3410
  7226  003452                     l3418:
  7227  003452  C02A  F01E         	movff	floorf@u,??_floorf
  7228  003456  C02B  F01F         	movff	floorf@u+1,??_floorf+1
  7229  00345A  C02C  F020         	movff	floorf@u+2,??_floorf+2
  7230  00345E  C02D  F021         	movff	floorf@u+3,??_floorf+3
  7231  003462  0E20               	movlw	32
  7232  003464  EF39  F01A         	goto	u3890
  7233  003468                     u3895:
  7234  003468  90D8               	bcf	status,0,c
  7235  00346A  3221               	rrcf	(??_floorf+3)^0,f,c
  7236  00346C  3220               	rrcf	(??_floorf+2)^0,f,c
  7237  00346E  321F               	rrcf	(??_floorf+1)^0,f,c
  7238  003470  321E               	rrcf	??_floorf^0,f,c
  7239  003472                     u3890:
  7240  003472  2EE8               	decfsz	wreg,f,c
  7241  003474  EF34  F01A         	goto	u3895
  7242  003478  501E               	movf	??_floorf^0,w,c
  7243  00347A  101F               	iorwf	(??_floorf+1)^0,w,c
  7244  00347C  1020               	iorwf	(??_floorf+2)^0,w,c
  7245  00347E  1021               	iorwf	(??_floorf+3)^0,w,c
  7246  003480  B4D8               	btfsc	status,2,c
  7247  003482  EF45  F01A         	goto	u3901
  7248  003486  EF47  F01A         	goto	u3900
  7249  00348A                     u3901:
  7250  00348A  EF4F  F01A         	goto	l882
  7251  00348E                     u3900:
  7252  00348E  5024               	movf	floorf@m^0,w,c
  7253  003490  262A               	addwf	floorf@u^0,f,c
  7254  003492  5025               	movf	(floorf@m+1)^0,w,c
  7255  003494  222B               	addwfc	(floorf@u+1)^0,f,c
  7256  003496  5026               	movf	(floorf@m+2)^0,w,c
  7257  003498  222C               	addwfc	(floorf@u+2)^0,f,c
  7258  00349A  5027               	movf	(floorf@m+3)^0,w,c
  7259  00349C  222D               	addwfc	(floorf@u+3)^0,f,c
  7260  00349E                     l882:
  7261  00349E  1C24               	comf	floorf@m^0,w,c
  7262  0034A0  6E1E               	movwf	??_floorf^0,c
  7263  0034A2  1C25               	comf	(floorf@m+1)^0,w,c
  7264  0034A4  6E1F               	movwf	(??_floorf+1)^0,c
  7265  0034A6  1C26               	comf	(floorf@m+2)^0,w,c
  7266  0034A8  6E20               	movwf	(??_floorf+2)^0,c
  7267  0034AA  1C27               	comf	(floorf@m+3)^0,w,c
  7268  0034AC  6E21               	movwf	(??_floorf+3)^0,c
  7269  0034AE  501E               	movf	??_floorf^0,w,c
  7270  0034B0  162A               	andwf	floorf@u^0,f,c
  7271  0034B2  501F               	movf	(??_floorf+1)^0,w,c
  7272  0034B4  162B               	andwf	(floorf@u+1)^0,f,c
  7273  0034B6  5020               	movf	(??_floorf+2)^0,w,c
  7274  0034B8  162C               	andwf	(floorf@u+2)^0,f,c
  7275  0034BA  5021               	movf	(??_floorf+3)^0,w,c
  7276  0034BC  162D               	andwf	(floorf@u+3)^0,f,c
  7277  0034BE  EFA5  F01A         	goto	l3430
  7278  0034C2                     l3422:
  7279  0034C2  C02A  F01E         	movff	floorf@u,??_floorf
  7280  0034C6  C02B  F01F         	movff	floorf@u+1,??_floorf+1
  7281  0034CA  C02C  F020         	movff	floorf@u+2,??_floorf+2
  7282  0034CE  C02D  F021         	movff	floorf@u+3,??_floorf+3
  7283  0034D2  0E20               	movlw	32
  7284  0034D4  EF71  F01A         	goto	u3910
  7285  0034D8                     u3915:
  7286  0034D8  90D8               	bcf	status,0,c
  7287  0034DA  3221               	rrcf	(??_floorf+3)^0,f,c
  7288  0034DC  3220               	rrcf	(??_floorf+2)^0,f,c
  7289  0034DE  321F               	rrcf	(??_floorf+1)^0,f,c
  7290  0034E0  321E               	rrcf	??_floorf^0,f,c
  7291  0034E2                     u3910:
  7292  0034E2  2EE8               	decfsz	wreg,f,c
  7293  0034E4  EF6C  F01A         	goto	u3915
  7294  0034E8  501E               	movf	??_floorf^0,w,c
  7295  0034EA  101F               	iorwf	(??_floorf+1)^0,w,c
  7296  0034EC  1020               	iorwf	(??_floorf+2)^0,w,c
  7297  0034EE  1021               	iorwf	(??_floorf+3)^0,w,c
  7298  0034F0  A4D8               	btfss	status,2,c
  7299  0034F2  EF7D  F01A         	goto	u3921
  7300  0034F6  EF7F  F01A         	goto	u3920
  7301  0034FA                     u3921:
  7302  0034FA  EF89  F01A         	goto	l3426
  7303  0034FE                     u3920:
  7304  0034FE  0E00               	movlw	0
  7305  003500  6E2A               	movwf	floorf@u^0,c
  7306  003502  0E00               	movlw	0
  7307  003504  6E2B               	movwf	(floorf@u+1)^0,c
  7308  003506  0E00               	movlw	0
  7309  003508  6E2C               	movwf	(floorf@u+2)^0,c
  7310  00350A  0E00               	movlw	0
  7311  00350C  6E2D               	movwf	(floorf@u+3)^0,c
  7312  00350E  EFA5  F01A         	goto	l3430
  7313  003512                     l3426:
  7314  003512  90D8               	bcf	status,0,c
  7315  003514  342A               	rlcf	floorf@u^0,w,c
  7316  003516  6E1E               	movwf	??_floorf^0,c
  7317  003518  342B               	rlcf	(floorf@u+1)^0,w,c
  7318  00351A  6E1F               	movwf	(??_floorf+1)^0,c
  7319  00351C  342C               	rlcf	(floorf@u+2)^0,w,c
  7320  00351E  6E20               	movwf	(??_floorf+2)^0,c
  7321  003520  342D               	rlcf	(floorf@u+3)^0,w,c
  7322  003522  6E21               	movwf	(??_floorf+3)^0,c
  7323  003524  501E               	movf	??_floorf^0,w,c
  7324  003526  101F               	iorwf	(??_floorf+1)^0,w,c
  7325  003528  1020               	iorwf	(??_floorf+2)^0,w,c
  7326  00352A  1021               	iorwf	(??_floorf+3)^0,w,c
  7327  00352C  B4D8               	btfsc	status,2,c
  7328  00352E  EF9B  F01A         	goto	u3931
  7329  003532  EF9D  F01A         	goto	u3930
  7330  003536                     u3931:
  7331  003536  EFA5  F01A         	goto	l3430
  7332  00353A                     u3930:
  7333  00353A  0E00               	movlw	0
  7334  00353C  6E2A               	movwf	floorf@u^0,c
  7335  00353E  0E00               	movlw	0
  7336  003540  6E2B               	movwf	(floorf@u+1)^0,c
  7337  003542  0E80               	movlw	128
  7338  003544  6E2C               	movwf	(floorf@u+2)^0,c
  7339  003546  0EBF               	movlw	191
  7340  003548  6E2D               	movwf	(floorf@u+3)^0,c
  7341  00354A                     l3430:
  7342  00354A  C02A  F01A         	movff	floorf@u,?_floorf
  7343  00354E  C02B  F01B         	movff	floorf@u+1,?_floorf+1
  7344  003552  C02C  F01C         	movff	floorf@u+2,?_floorf+2
  7345  003556  C02D  F01D         	movff	floorf@u+3,?_floorf+3
  7346  00355A                     l879:
  7347  00355A  0012               	return		;funcret
  7348  00355C                     __end_of_floorf:
  7349                           	callstack 0
  7350                           
  7351 ;; *************** function ___fpclassifyf *****************
  7352 ;; Defined at:
  7353 ;;		line 4 in file "/Applications/microchip/xc8/v2.31/pic/sources/c99/common/__fpclassifyf.c"
  7354 ;; Parameters:    Size  Location     Type
  7355 ;;  x               4    0[COMRAM] float 
  7356 ;; Auto vars:     Size  Location     Type
  7357 ;;  u               4   10[COMRAM] struct .
  7358 ;;  e               2    8[COMRAM] int 
  7359 ;; Return value:  Size  Location     Type
  7360 ;;                  2    0[COMRAM] int 
  7361 ;; Registers used:
  7362 ;;		wreg, status,2, status,0
  7363 ;; Tracked objects:
  7364 ;;		On entry : 0/0
  7365 ;;		On exit  : 0/0
  7366 ;;		Unchanged: 0/0
  7367 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  7368 ;;      Params:         4       0       0       0       0       0       0       0       0
  7369 ;;      Locals:         6       0       0       0       0       0       0       0       0
  7370 ;;      Temps:          4       0       0       0       0       0       0       0       0
  7371 ;;      Totals:        14       0       0       0       0       0       0       0       0
  7372 ;;Total ram usage:       14 bytes
  7373 ;; Hardware stack levels used:    1
  7374 ;; This function calls:
  7375 ;;		Nothing
  7376 ;; This function is called by:
  7377 ;;		_efgtoa
  7378 ;; This function uses a non-reentrant model
  7379 ;;
  7380                           
  7381                           	psect	text26
  7382  004056                     __ptext26:
  7383                           	callstack 0
  7384  004056                     ___fpclassifyf:
  7385                           	callstack 25
  7386  004056  C100  F00B         	movff	___fpclassifyf@F465,___fpclassifyf@u
  7387  00405A  C101  F00C         	movff	___fpclassifyf@F465+1,___fpclassifyf@u+1
  7388  00405E  C102  F00D         	movff	___fpclassifyf@F465+2,___fpclassifyf@u+2
  7389  004062  C103  F00E         	movff	___fpclassifyf@F465+3,___fpclassifyf@u+3
  7390  004066  C001  F00B         	movff	___fpclassifyf@x,___fpclassifyf@u
  7391  00406A  C002  F00C         	movff	___fpclassifyf@x+1,___fpclassifyf@u+1
  7392  00406E  C003  F00D         	movff	___fpclassifyf@x+2,___fpclassifyf@u+2
  7393  004072  C004  F00E         	movff	___fpclassifyf@x+3,___fpclassifyf@u+3
  7394  004076  C00B  F005         	movff	___fpclassifyf@u,??___fpclassifyf
  7395  00407A  C00C  F006         	movff	___fpclassifyf@u+1,??___fpclassifyf+1
  7396  00407E  C00D  F007         	movff	___fpclassifyf@u+2,??___fpclassifyf+2
  7397  004082  C00E  F008         	movff	___fpclassifyf@u+3,??___fpclassifyf+3
  7398  004086  0E18               	movlw	24
  7399  004088  EF4B  F020         	goto	u4820
  7400  00408C                     u4825:
  7401  00408C  90D8               	bcf	status,0,c
  7402  00408E  3208               	rrcf	(??___fpclassifyf+3)^0,f,c
  7403  004090  3207               	rrcf	(??___fpclassifyf+2)^0,f,c
  7404  004092  3206               	rrcf	(??___fpclassifyf+1)^0,f,c
  7405  004094  3205               	rrcf	??___fpclassifyf^0,f,c
  7406  004096                     u4820:
  7407  004096  2EE8               	decfsz	wreg,f,c
  7408  004098  EF46  F020         	goto	u4825
  7409  00409C  5005               	movf	??___fpclassifyf^0,w,c
  7410  00409E  6E09               	movwf	___fpclassifyf@e^0,c
  7411  0040A0  6A0A               	clrf	(___fpclassifyf@e+1)^0,c
  7412  0040A2  5009               	movf	___fpclassifyf@e^0,w,c
  7413  0040A4  100A               	iorwf	(___fpclassifyf@e+1)^0,w,c
  7414  0040A6  A4D8               	btfss	status,2,c
  7415  0040A8  EF58  F020         	goto	u4831
  7416  0040AC  EF5A  F020         	goto	u4830
  7417  0040B0                     u4831:
  7418  0040B0  EF7A  F020         	goto	l4002
  7419  0040B4                     u4830:
  7420  0040B4  90D8               	bcf	status,0,c
  7421  0040B6  340B               	rlcf	___fpclassifyf@u^0,w,c
  7422  0040B8  6E05               	movwf	??___fpclassifyf^0,c
  7423  0040BA  340C               	rlcf	(___fpclassifyf@u+1)^0,w,c
  7424  0040BC  6E06               	movwf	(??___fpclassifyf+1)^0,c
  7425  0040BE  340D               	rlcf	(___fpclassifyf@u+2)^0,w,c
  7426  0040C0  6E07               	movwf	(??___fpclassifyf+2)^0,c
  7427  0040C2  340E               	rlcf	(___fpclassifyf@u+3)^0,w,c
  7428  0040C4  6E08               	movwf	(??___fpclassifyf+3)^0,c
  7429  0040C6  5005               	movf	??___fpclassifyf^0,w,c
  7430  0040C8  1006               	iorwf	(??___fpclassifyf+1)^0,w,c
  7431  0040CA  1007               	iorwf	(??___fpclassifyf+2)^0,w,c
  7432  0040CC  1008               	iorwf	(??___fpclassifyf+3)^0,w,c
  7433  0040CE  A4D8               	btfss	status,2,c
  7434  0040D0  EF6C  F020         	goto	u4841
  7435  0040D4  EF6E  F020         	goto	u4840
  7436  0040D8                     u4841:
  7437  0040D8  EF74  F020         	goto	l3998
  7438  0040DC                     u4840:
  7439  0040DC  0E00               	movlw	0
  7440  0040DE  6E02               	movwf	(?___fpclassifyf+1)^0,c
  7441  0040E0  0E02               	movlw	2
  7442  0040E2  6E01               	movwf	?___fpclassifyf^0,c
  7443  0040E4  EFA9  F020         	goto	l1132
  7444  0040E8                     l3998:
  7445  0040E8  0E00               	movlw	0
  7446  0040EA  6E02               	movwf	(?___fpclassifyf+1)^0,c
  7447  0040EC  0E03               	movlw	3
  7448  0040EE  6E01               	movwf	?___fpclassifyf^0,c
  7449  0040F0  EFA9  F020         	goto	l1132
  7450  0040F4                     l4002:
  7451  0040F4  2809               	incf	___fpclassifyf@e^0,w,c
  7452  0040F6  100A               	iorwf	(___fpclassifyf@e+1)^0,w,c
  7453  0040F8  A4D8               	btfss	status,2,c
  7454  0040FA  EF81  F020         	goto	u4851
  7455  0040FE  EF83  F020         	goto	u4850
  7456  004102                     u4851:
  7457  004102  EFA5  F020         	goto	l4008
  7458  004106                     u4850:
  7459  004106  C00B  F005         	movff	___fpclassifyf@u,??___fpclassifyf
  7460  00410A  C00C  F006         	movff	___fpclassifyf@u+1,??___fpclassifyf+1
  7461  00410E  C00D  F007         	movff	___fpclassifyf@u+2,??___fpclassifyf+2
  7462  004112  C00E  F008         	movff	___fpclassifyf@u+3,??___fpclassifyf+3
  7463  004116  0E09               	movlw	9
  7464  004118                     u4865:
  7465  004118  90D8               	bcf	status,0,c
  7466  00411A  3605               	rlcf	??___fpclassifyf^0,f,c
  7467  00411C  3606               	rlcf	(??___fpclassifyf+1)^0,f,c
  7468  00411E  3607               	rlcf	(??___fpclassifyf+2)^0,f,c
  7469  004120  3608               	rlcf	(??___fpclassifyf+3)^0,f,c
  7470  004122  2EE8               	decfsz	wreg,f,c
  7471  004124  EF8C  F020         	goto	u4865
  7472  004128  5005               	movf	??___fpclassifyf^0,w,c
  7473  00412A  1006               	iorwf	(??___fpclassifyf+1)^0,w,c
  7474  00412C  1007               	iorwf	(??___fpclassifyf+2)^0,w,c
  7475  00412E  1008               	iorwf	(??___fpclassifyf+3)^0,w,c
  7476  004130  B4D8               	btfsc	status,2,c
  7477  004132  EF9D  F020         	goto	u4871
  7478  004136  EFA0  F020         	goto	u4870
  7479  00413A                     u4871:
  7480  00413A  0E01               	movlw	1
  7481  00413C  EFA1  F020         	goto	u4880
  7482  004140                     u4870:
  7483  004140  0E00               	movlw	0
  7484  004142                     u4880:
  7485  004142  6E01               	movwf	?___fpclassifyf^0,c
  7486  004144  6A02               	clrf	(?___fpclassifyf+1)^0,c
  7487  004146  EFA9  F020         	goto	l1132
  7488  00414A                     l4008:
  7489  00414A  0E00               	movlw	0
  7490  00414C  6E02               	movwf	(?___fpclassifyf+1)^0,c
  7491  00414E  0E04               	movlw	4
  7492  004150  6E01               	movwf	?___fpclassifyf^0,c
  7493  004152                     l1132:
  7494  004152  0012               	return		;funcret
  7495  004154                     __end_of___fpclassifyf:
  7496                           	callstack 0
  7497                           
  7498 ;; *************** function ___fltol *****************
  7499 ;; Defined at:
  7500 ;;		line 43 in file "/Applications/microchip/xc8/v2.31/pic/sources/c99/common/fltol.c"
  7501 ;; Parameters:    Size  Location     Type
  7502 ;;  f1              4    0[COMRAM] int 
  7503 ;; Auto vars:     Size  Location     Type
  7504 ;;  exp1            1    9[COMRAM] unsigned char 
  7505 ;;  sign1           1    8[COMRAM] unsigned char 
  7506 ;; Return value:  Size  Location     Type
  7507 ;;                  4    0[COMRAM] long 
  7508 ;; Registers used:
  7509 ;;		wreg, status,2, status,0
  7510 ;; Tracked objects:
  7511 ;;		On entry : 0/0
  7512 ;;		On exit  : 0/0
  7513 ;;		Unchanged: 0/0
  7514 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  7515 ;;      Params:         4       0       0       0       0       0       0       0       0
  7516 ;;      Locals:         2       0       0       0       0       0       0       0       0
  7517 ;;      Temps:          4       0       0       0       0       0       0       0       0
  7518 ;;      Totals:        10       0       0       0       0       0       0       0       0
  7519 ;;Total ram usage:       10 bytes
  7520 ;; Hardware stack levels used:    1
  7521 ;; This function calls:
  7522 ;;		Nothing
  7523 ;; This function is called by:
  7524 ;;		_SensorLM35
  7525 ;;		_efgtoa
  7526 ;; This function uses a non-reentrant model
  7527 ;;
  7528                           
  7529                           	psect	text27
  7530  003D48                     __ptext27:
  7531                           	callstack 0
  7532  003D48                     ___fltol:
  7533                           	callstack 25
  7534  003D48  3403               	rlcf	(___fltol@f1+2)^0,w,c
  7535  003D4A  3404               	rlcf	(___fltol@f1+3)^0,w,c
  7536  003D4C  6E0A               	movwf	___fltol@exp1^0,c
  7537  003D4E  500A               	movf	___fltol@exp1^0,w,c
  7538  003D50  A4D8               	btfss	status,2,c
  7539  003D52  EFAD  F01E         	goto	u4701
  7540  003D56  EFAF  F01E         	goto	u4700
  7541  003D5A                     u4701:
  7542  003D5A  EFB9  F01E         	goto	l3926
  7543  003D5E                     u4700:
  7544  003D5E                     l3922:
  7545  003D5E  0E00               	movlw	0
  7546  003D60  6E01               	movwf	?___fltol^0,c
  7547  003D62  0E00               	movlw	0
  7548  003D64  6E02               	movwf	(?___fltol+1)^0,c
  7549  003D66  0E00               	movlw	0
  7550  003D68  6E03               	movwf	(?___fltol+2)^0,c
  7551  003D6A  0E00               	movlw	0
  7552  003D6C  6E04               	movwf	(?___fltol+3)^0,c
  7553  003D6E  EF26  F01F         	goto	l486
  7554  003D72                     l3926:
  7555  003D72  C001  F005         	movff	___fltol@f1,??___fltol
  7556  003D76  C002  F006         	movff	___fltol@f1+1,??___fltol+1
  7557  003D7A  C003  F007         	movff	___fltol@f1+2,??___fltol+2
  7558  003D7E  C004  F008         	movff	___fltol@f1+3,??___fltol+3
  7559  003D82  0E20               	movlw	32
  7560  003D84  EFC9  F01E         	goto	u4710
  7561  003D88                     u4715:
  7562  003D88  90D8               	bcf	status,0,c
  7563  003D8A  3208               	rrcf	(??___fltol+3)^0,f,c
  7564  003D8C  3207               	rrcf	(??___fltol+2)^0,f,c
  7565  003D8E  3206               	rrcf	(??___fltol+1)^0,f,c
  7566  003D90  3205               	rrcf	??___fltol^0,f,c
  7567  003D92                     u4710:
  7568  003D92  2EE8               	decfsz	wreg,f,c
  7569  003D94  EFC4  F01E         	goto	u4715
  7570  003D98  5005               	movf	??___fltol^0,w,c
  7571  003D9A  6E09               	movwf	___fltol@sign1^0,c
  7572  003D9C  8E03               	bsf	(___fltol@f1+2)^0,7,c
  7573  003D9E  0EFF               	movlw	255
  7574  003DA0  1601               	andwf	___fltol@f1^0,f,c
  7575  003DA2  0EFF               	movlw	255
  7576  003DA4  1602               	andwf	(___fltol@f1+1)^0,f,c
  7577  003DA6  0EFF               	movlw	255
  7578  003DA8  1603               	andwf	(___fltol@f1+2)^0,f,c
  7579  003DAA  0E00               	movlw	0
  7580  003DAC  1604               	andwf	(___fltol@f1+3)^0,f,c
  7581  003DAE  0E96               	movlw	150
  7582  003DB0  5E0A               	subwf	___fltol@exp1^0,f,c
  7583  003DB2  BE0A               	btfsc	___fltol@exp1^0,7,c
  7584  003DB4  EFE0  F01E         	goto	u4720
  7585  003DB8  EFDE  F01E         	goto	u4721
  7586  003DBC                     u4721:
  7587  003DBC  EFF6  F01E         	goto	l3946
  7588  003DC0                     u4720:
  7589  003DC0  500A               	movf	___fltol@exp1^0,w,c
  7590  003DC2  0A80               	xorlw	128
  7591  003DC4  0F97               	addlw	151
  7592  003DC6  B0D8               	btfsc	status,0,c
  7593  003DC8  EFE8  F01E         	goto	u4731
  7594  003DCC  EFEA  F01E         	goto	u4730
  7595  003DD0                     u4731:
  7596  003DD0  EFEC  F01E         	goto	l3942
  7597  003DD4                     u4730:
  7598  003DD4  EFAF  F01E         	goto	l3922
  7599  003DD8                     l3942:
  7600  003DD8  90D8               	bcf	status,0,c
  7601  003DDA  3204               	rrcf	(___fltol@f1+3)^0,f,c
  7602  003DDC  3203               	rrcf	(___fltol@f1+2)^0,f,c
  7603  003DDE  3202               	rrcf	(___fltol@f1+1)^0,f,c
  7604  003DE0  3201               	rrcf	___fltol@f1^0,f,c
  7605  003DE2  3E0A               	incfsz	___fltol@exp1^0,f,c
  7606  003DE4  EFEC  F01E         	goto	l3942
  7607  003DE8  EF0E  F01F         	goto	l3956
  7608  003DEC                     l3946:
  7609  003DEC  0E1F               	movlw	31
  7610  003DEE  640A               	cpfsgt	___fltol@exp1^0,c
  7611  003DF0  EFFC  F01E         	goto	u4741
  7612  003DF4  EFFE  F01E         	goto	u4740
  7613  003DF8                     u4741:
  7614  003DF8  EF06  F01F         	goto	l3954
  7615  003DFC                     u4740:
  7616  003DFC  EFAF  F01E         	goto	l3922
  7617  003E00                     l3952:
  7618  003E00  90D8               	bcf	status,0,c
  7619  003E02  3601               	rlcf	___fltol@f1^0,f,c
  7620  003E04  3602               	rlcf	(___fltol@f1+1)^0,f,c
  7621  003E06  3603               	rlcf	(___fltol@f1+2)^0,f,c
  7622  003E08  3604               	rlcf	(___fltol@f1+3)^0,f,c
  7623  003E0A  060A               	decf	___fltol@exp1^0,f,c
  7624  003E0C                     l3954:
  7625  003E0C  500A               	movf	___fltol@exp1^0,w,c
  7626  003E0E  A4D8               	btfss	status,2,c
  7627  003E10  EF0C  F01F         	goto	u4751
  7628  003E14  EF0E  F01F         	goto	u4750
  7629  003E18                     u4751:
  7630  003E18  EF00  F01F         	goto	l3952
  7631  003E1C                     u4750:
  7632  003E1C                     l3956:
  7633  003E1C  5009               	movf	___fltol@sign1^0,w,c
  7634  003E1E  B4D8               	btfsc	status,2,c
  7635  003E20  EF14  F01F         	goto	u4761
  7636  003E24  EF16  F01F         	goto	u4760
  7637  003E28                     u4761:
  7638  003E28  EF1E  F01F         	goto	l3960
  7639  003E2C                     u4760:
  7640  003E2C  1E04               	comf	(___fltol@f1+3)^0,f,c
  7641  003E2E  1E03               	comf	(___fltol@f1+2)^0,f,c
  7642  003E30  1E02               	comf	(___fltol@f1+1)^0,f,c
  7643  003E32  6C01               	negf	___fltol@f1^0,c
  7644  003E34  0E00               	movlw	0
  7645  003E36  2202               	addwfc	(___fltol@f1+1)^0,f,c
  7646  003E38  2203               	addwfc	(___fltol@f1+2)^0,f,c
  7647  003E3A  2204               	addwfc	(___fltol@f1+3)^0,f,c
  7648  003E3C                     l3960:
  7649  003E3C  C001  F001         	movff	___fltol@f1,?___fltol
  7650  003E40  C002  F002         	movff	___fltol@f1+1,?___fltol+1
  7651  003E44  C003  F003         	movff	___fltol@f1+2,?___fltol+2
  7652  003E48  C004  F004         	movff	___fltol@f1+3,?___fltol+3
  7653  003E4C                     l486:
  7654  003E4C  0012               	return		;funcret
  7655  003E4E                     __end_of___fltol:
  7656                           	callstack 0
  7657                           
  7658 ;; *************** function ___flsub *****************
  7659 ;; Defined at:
  7660 ;;		line 245 in file "/Applications/microchip/xc8/v2.31/pic/sources/c99/common/sprcadd.c"
  7661 ;; Parameters:    Size  Location     Type
  7662 ;;  b               4   49[COMRAM] long 
  7663 ;;  a               4   53[COMRAM] long 
  7664 ;; Auto vars:     Size  Location     Type
  7665 ;;		None
  7666 ;; Return value:  Size  Location     Type
  7667 ;;                  4   49[COMRAM] long 
  7668 ;; Registers used:
  7669 ;;		wreg, status,2, status,0, cstack
  7670 ;; Tracked objects:
  7671 ;;		On entry : 0/0
  7672 ;;		On exit  : 0/0
  7673 ;;		Unchanged: 0/0
  7674 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  7675 ;;      Params:         8       0       0       0       0       0       0       0       0
  7676 ;;      Locals:         0       0       0       0       0       0       0       0       0
  7677 ;;      Temps:          0       0       0       0       0       0       0       0       0
  7678 ;;      Totals:         8       0       0       0       0       0       0       0       0
  7679 ;;Total ram usage:        8 bytes
  7680 ;; Hardware stack levels used:    1
  7681 ;; Hardware stack levels required when called:    1
  7682 ;; This function calls:
  7683 ;;		___fladd
  7684 ;; This function is called by:
  7685 ;;		_SensorLM35
  7686 ;;		_efgtoa
  7687 ;; This function uses a non-reentrant model
  7688 ;;
  7689                           
  7690                           	psect	text28
  7691  004AD2                     __ptext28:
  7692                           	callstack 0
  7693  004AD2                     ___flsub:
  7694                           	callstack 24
  7695  004AD2  0E00               	movlw	0
  7696  004AD4  1A36               	xorwf	___flsub@a^0,f,c
  7697  004AD6  0E00               	movlw	0
  7698  004AD8  1A37               	xorwf	(___flsub@a+1)^0,f,c
  7699  004ADA  0E00               	movlw	0
  7700  004ADC  1A38               	xorwf	(___flsub@a+2)^0,f,c
  7701  004ADE  0E80               	movlw	128
  7702  004AE0  1A39               	xorwf	(___flsub@a+3)^0,f,c
  7703  004AE2  C032  F001         	movff	___flsub@b,___fladd@b
  7704  004AE6  C033  F002         	movff	___flsub@b+1,___fladd@b+1
  7705  004AEA  C034  F003         	movff	___flsub@b+2,___fladd@b+2
  7706  004AEE  C035  F004         	movff	___flsub@b+3,___fladd@b+3
  7707  004AF2  C036  F005         	movff	___flsub@a,___fladd@a
  7708  004AF6  C037  F006         	movff	___flsub@a+1,___fladd@a+1
  7709  004AFA  C038  F007         	movff	___flsub@a+2,___fladd@a+2
  7710  004AFE  C039  F008         	movff	___flsub@a+3,___fladd@a+3
  7711  004B02  EC96  F00E         	call	___fladd	;wreg free
  7712  004B06  C001  F032         	movff	?___fladd,?___flsub
  7713  004B0A  C002  F033         	movff	?___fladd+1,?___flsub+1
  7714  004B0E  C003  F034         	movff	?___fladd+2,?___flsub+2
  7715  004B12  C004  F035         	movff	?___fladd+3,?___flsub+3
  7716  004B16  0012               	return		;funcret
  7717  004B18                     __end_of___flsub:
  7718                           	callstack 0
  7719                           
  7720 ;; *************** function ___fladd *****************
  7721 ;; Defined at:
  7722 ;;		line 10 in file "/Applications/microchip/xc8/v2.31/pic/sources/c99/common/sprcadd.c"
  7723 ;; Parameters:    Size  Location     Type
  7724 ;;  b               4    0[COMRAM] long 
  7725 ;;  a               4    4[COMRAM] long 
  7726 ;; Auto vars:     Size  Location     Type
  7727 ;;  grs             1   15[COMRAM] unsigned char 
  7728 ;;  bexp            1   14[COMRAM] unsigned char 
  7729 ;;  aexp            1   13[COMRAM] unsigned char 
  7730 ;;  signs           1   12[COMRAM] unsigned char 
  7731 ;; Return value:  Size  Location     Type
  7732 ;;                  4    0[COMRAM] unsigned char 
  7733 ;; Registers used:
  7734 ;;		wreg, status,2, status,0
  7735 ;; Tracked objects:
  7736 ;;		On entry : 0/0
  7737 ;;		On exit  : 0/0
  7738 ;;		Unchanged: 0/0
  7739 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  7740 ;;      Params:         8       0       0       0       0       0       0       0       0
  7741 ;;      Locals:         4       0       0       0       0       0       0       0       0
  7742 ;;      Temps:          4       0       0       0       0       0       0       0       0
  7743 ;;      Totals:        16       0       0       0       0       0       0       0       0
  7744 ;;Total ram usage:       16 bytes
  7745 ;; Hardware stack levels used:    1
  7746 ;; This function calls:
  7747 ;;		Nothing
  7748 ;; This function is called by:
  7749 ;;		___flsub
  7750 ;;		_efgtoa
  7751 ;; This function uses a non-reentrant model
  7752 ;;
  7753                           
  7754                           	psect	text29
  7755  001D2C                     __ptext29:
  7756                           	callstack 0
  7757  001D2C                     ___fladd:
  7758                           	callstack 24
  7759  001D2C  5004               	movf	(___fladd@b+3)^0,w,c
  7760  001D2E  0B80               	andlw	128
  7761  001D30  6E0D               	movwf	___fladd@signs^0,c
  7762  001D32  5004               	movf	(___fladd@b+3)^0,w,c
  7763  001D34  2404               	addwf	(___fladd@b+3)^0,w,c
  7764  001D36  6E0F               	movwf	___fladd@bexp^0,c
  7765  001D38  AE03               	btfss	(___fladd@b+2)^0,7,c
  7766  001D3A  EFA1  F00E         	goto	u3411
  7767  001D3E  EFA3  F00E         	goto	u3410
  7768  001D42                     u3411:
  7769  001D42  EFA4  F00E         	goto	l3188
  7770  001D46                     u3410:
  7771  001D46  800F               	bsf	___fladd@bexp^0,0,c
  7772  001D48                     l3188:
  7773  001D48  500F               	movf	___fladd@bexp^0,w,c
  7774  001D4A  B4D8               	btfsc	status,2,c
  7775  001D4C  EFAA  F00E         	goto	u3421
  7776  001D50  EFAC  F00E         	goto	u3420
  7777  001D54                     u3421:
  7778  001D54  EFC1  F00E         	goto	l3198
  7779  001D58                     u3420:
  7780  001D58  280F               	incf	___fladd@bexp^0,w,c
  7781  001D5A  A4D8               	btfss	status,2,c
  7782  001D5C  EFB2  F00E         	goto	u3431
  7783  001D60  EFB4  F00E         	goto	u3430
  7784  001D64                     u3431:
  7785  001D64  EFBC  F00E         	goto	l3194
  7786  001D68                     u3430:
  7787  001D68  0E00               	movlw	0
  7788  001D6A  6E01               	movwf	___fladd@b^0,c
  7789  001D6C  0E00               	movlw	0
  7790  001D6E  6E02               	movwf	(___fladd@b+1)^0,c
  7791  001D70  0E00               	movlw	0
  7792  001D72  6E03               	movwf	(___fladd@b+2)^0,c
  7793  001D74  0E00               	movlw	0
  7794  001D76  6E04               	movwf	(___fladd@b+3)^0,c
  7795  001D78                     l3194:
  7796  001D78  8E03               	bsf	(___fladd@b+2)^0,7,c
  7797  001D7A  0E00               	movlw	0
  7798  001D7C  6E04               	movwf	(___fladd@b+3)^0,c
  7799  001D7E  EFC9  F00E         	goto	l3200
  7800  001D82                     l3198:
  7801  001D82  0E00               	movlw	0
  7802  001D84  6E01               	movwf	___fladd@b^0,c
  7803  001D86  0E00               	movlw	0
  7804  001D88  6E02               	movwf	(___fladd@b+1)^0,c
  7805  001D8A  0E00               	movlw	0
  7806  001D8C  6E03               	movwf	(___fladd@b+2)^0,c
  7807  001D8E  0E00               	movlw	0
  7808  001D90  6E04               	movwf	(___fladd@b+3)^0,c
  7809  001D92                     l3200:
  7810  001D92  5008               	movf	(___fladd@a+3)^0,w,c
  7811  001D94  0B80               	andlw	128
  7812  001D96  6E0E               	movwf	___fladd@aexp^0,c
  7813  001D98  500D               	movf	___fladd@signs^0,w,c
  7814  001D9A  180E               	xorwf	___fladd@aexp^0,w,c
  7815  001D9C  B4D8               	btfsc	status,2,c
  7816  001D9E  EFD3  F00E         	goto	u3441
  7817  001DA2  EFD5  F00E         	goto	u3440
  7818  001DA6                     u3441:
  7819  001DA6  EFD6  F00E         	goto	l3206
  7820  001DAA                     u3440:
  7821  001DAA  8C0D               	bsf	___fladd@signs^0,6,c
  7822  001DAC                     l3206:
  7823  001DAC  5008               	movf	(___fladd@a+3)^0,w,c
  7824  001DAE  2408               	addwf	(___fladd@a+3)^0,w,c
  7825  001DB0  6E0E               	movwf	___fladd@aexp^0,c
  7826  001DB2  AE07               	btfss	(___fladd@a+2)^0,7,c
  7827  001DB4  EFDE  F00E         	goto	u3451
  7828  001DB8  EFE0  F00E         	goto	u3450
  7829  001DBC                     u3451:
  7830  001DBC  EFE1  F00E         	goto	l3212
  7831  001DC0                     u3450:
  7832  001DC0  800E               	bsf	___fladd@aexp^0,0,c
  7833  001DC2                     l3212:
  7834  001DC2  500E               	movf	___fladd@aexp^0,w,c
  7835  001DC4  B4D8               	btfsc	status,2,c
  7836  001DC6  EFE7  F00E         	goto	u3461
  7837  001DCA  EFE9  F00E         	goto	u3460
  7838  001DCE                     u3461:
  7839  001DCE  EFFE  F00E         	goto	l3222
  7840  001DD2                     u3460:
  7841  001DD2  280E               	incf	___fladd@aexp^0,w,c
  7842  001DD4  A4D8               	btfss	status,2,c
  7843  001DD6  EFEF  F00E         	goto	u3471
  7844  001DDA  EFF1  F00E         	goto	u3470
  7845  001DDE                     u3471:
  7846  001DDE  EFF9  F00E         	goto	l3218
  7847  001DE2                     u3470:
  7848  001DE2  0E00               	movlw	0
  7849  001DE4  6E05               	movwf	___fladd@a^0,c
  7850  001DE6  0E00               	movlw	0
  7851  001DE8  6E06               	movwf	(___fladd@a+1)^0,c
  7852  001DEA  0E00               	movlw	0
  7853  001DEC  6E07               	movwf	(___fladd@a+2)^0,c
  7854  001DEE  0E00               	movlw	0
  7855  001DF0  6E08               	movwf	(___fladd@a+3)^0,c
  7856  001DF2                     l3218:
  7857  001DF2  8E07               	bsf	(___fladd@a+2)^0,7,c
  7858  001DF4  0E00               	movlw	0
  7859  001DF6  6E08               	movwf	(___fladd@a+3)^0,c
  7860  001DF8  EF06  F00F         	goto	l3224
  7861  001DFC                     l3222:
  7862  001DFC  0E00               	movlw	0
  7863  001DFE  6E05               	movwf	___fladd@a^0,c
  7864  001E00  0E00               	movlw	0
  7865  001E02  6E06               	movwf	(___fladd@a+1)^0,c
  7866  001E04  0E00               	movlw	0
  7867  001E06  6E07               	movwf	(___fladd@a+2)^0,c
  7868  001E08  0E00               	movlw	0
  7869  001E0A  6E08               	movwf	(___fladd@a+3)^0,c
  7870  001E0C                     l3224:
  7871  001E0C  500F               	movf	___fladd@bexp^0,w,c
  7872  001E0E  5C0E               	subwf	___fladd@aexp^0,w,c
  7873  001E10  B0D8               	btfsc	status,0,c
  7874  001E12  EF0D  F00F         	goto	u3481
  7875  001E16  EF0F  F00F         	goto	u3480
  7876  001E1A                     u3481:
  7877  001E1A  EF36  F00F         	goto	l3260
  7878  001E1E                     u3480:
  7879  001E1E  AC0D               	btfss	___fladd@signs^0,6,c
  7880  001E20  EF14  F00F         	goto	u3491
  7881  001E24  EF16  F00F         	goto	u3490
  7882  001E28                     u3491:
  7883  001E28  EF18  F00F         	goto	l3230
  7884  001E2C                     u3490:
  7885  001E2C  0E80               	movlw	128
  7886  001E2E  1A0D               	xorwf	___fladd@signs^0,f,c
  7887  001E30                     l3230:
  7888  001E30  C00F  F010         	movff	___fladd@bexp,___fladd@grs
  7889  001E34  C00E  F00F         	movff	___fladd@aexp,___fladd@bexp
  7890  001E38  C010  F00E         	movff	___fladd@grs,___fladd@aexp
  7891  001E3C  C001  F010         	movff	___fladd@b,___fladd@grs
  7892  001E40  C005  F001         	movff	___fladd@a,___fladd@b
  7893  001E44  C010  F005         	movff	___fladd@grs,___fladd@a
  7894  001E48  C002  F010         	movff	___fladd@b+1,___fladd@grs
  7895  001E4C  C006  F002         	movff	___fladd@a+1,___fladd@b+1
  7896  001E50  C010  F006         	movff	___fladd@grs,___fladd@a+1
  7897  001E54  C003  F010         	movff	___fladd@b+2,___fladd@grs
  7898  001E58  C007  F003         	movff	___fladd@a+2,___fladd@b+2
  7899  001E5C  C010  F007         	movff	___fladd@grs,___fladd@a+2
  7900  001E60  C004  F010         	movff	___fladd@b+3,___fladd@grs
  7901  001E64  C008  F004         	movff	___fladd@a+3,___fladd@b+3
  7902  001E68  C010  F008         	movff	___fladd@grs,___fladd@a+3
  7903  001E6C                     l3260:
  7904  001E6C  0E00               	movlw	0
  7905  001E6E  6E10               	movwf	___fladd@grs^0,c
  7906  001E70  500F               	movf	___fladd@bexp^0,w,c
  7907  001E72  C00E  F009         	movff	___fladd@aexp,??___fladd
  7908  001E76  6A0A               	clrf	(??___fladd+1)^0,c
  7909  001E78  5E09               	subwf	??___fladd^0,f,c
  7910  001E7A  0E00               	movlw	0
  7911  001E7C  5A0A               	subwfb	(??___fladd+1)^0,f,c
  7912  001E7E  BE0A               	btfsc	(??___fladd+1)^0,7,c
  7913  001E80  EF4B  F00F         	goto	u3501
  7914  001E84  500A               	movf	(??___fladd+1)^0,w,c
  7915  001E86  E109               	bnz	u3500
  7916  001E88  0E1A               	movlw	26
  7917  001E8A  5C09               	subwf	??___fladd^0,w,c
  7918  001E8C  A0D8               	btfss	status,0,c
  7919  001E8E  EF4B  F00F         	goto	u3501
  7920  001E92  EF4D  F00F         	goto	u3500
  7921  001E96                     u3501:
  7922  001E96  EF84  F00F         	goto	l718
  7923  001E9A                     u3500:
  7924  001E9A  5001               	movf	___fladd@b^0,w,c
  7925  001E9C  1002               	iorwf	(___fladd@b+1)^0,w,c
  7926  001E9E  1003               	iorwf	(___fladd@b+2)^0,w,c
  7927  001EA0  1004               	iorwf	(___fladd@b+3)^0,w,c
  7928  001EA2  A4D8               	btfss	status,2,c
  7929  001EA4  EF56  F00F         	goto	u3511
  7930  001EA8  EF59  F00F         	goto	u3510
  7931  001EAC                     u3511:
  7932  001EAC  0E01               	movlw	1
  7933  001EAE  EF5A  F00F         	goto	u3520
  7934  001EB2                     u3510:
  7935  001EB2  0E00               	movlw	0
  7936  001EB4                     u3520:
  7937  001EB4  6E10               	movwf	___fladd@grs^0,c
  7938  001EB6  0E00               	movlw	0
  7939  001EB8  6E01               	movwf	___fladd@b^0,c
  7940  001EBA  0E00               	movlw	0
  7941  001EBC  6E02               	movwf	(___fladd@b+1)^0,c
  7942  001EBE  0E00               	movlw	0
  7943  001EC0  6E03               	movwf	(___fladd@b+2)^0,c
  7944  001EC2  0E00               	movlw	0
  7945  001EC4  6E04               	movwf	(___fladd@b+3)^0,c
  7946  001EC6  C00E  F00F         	movff	___fladd@aexp,___fladd@bexp
  7947  001ECA  EF8D  F00F         	goto	l717
  7948  001ECE                     l719:
  7949  001ECE  A010               	btfss	___fladd@grs^0,0,c
  7950  001ED0  EF6C  F00F         	goto	u3531
  7951  001ED4  EF6E  F00F         	goto	u3530
  7952  001ED8                     u3531:
  7953  001ED8  EF74  F00F         	goto	l3272
  7954  001EDC                     u3530:
  7955  001EDC  90D8               	bcf	status,0,c
  7956  001EDE  3010               	rrcf	___fladd@grs^0,w,c
  7957  001EE0  0901               	iorlw	1
  7958  001EE2  6E10               	movwf	___fladd@grs^0,c
  7959  001EE4  EF76  F00F         	goto	l3274
  7960  001EE8                     l3272:
  7961  001EE8  90D8               	bcf	status,0,c
  7962  001EEA  3210               	rrcf	___fladd@grs^0,f,c
  7963  001EEC                     l3274:
  7964  001EEC  A001               	btfss	___fladd@b^0,0,c
  7965  001EEE  EF7B  F00F         	goto	u3541
  7966  001EF2  EF7D  F00F         	goto	u3540
  7967  001EF6                     u3541:
  7968  001EF6  EF7E  F00F         	goto	l3278
  7969  001EFA                     u3540:
  7970  001EFA  8E10               	bsf	___fladd@grs^0,7,c
  7971  001EFC                     l3278:
  7972  001EFC  3404               	rlcf	(___fladd@b+3)^0,w,c
  7973  001EFE  3204               	rrcf	(___fladd@b+3)^0,f,c
  7974  001F00  3203               	rrcf	(___fladd@b+2)^0,f,c
  7975  001F02  3202               	rrcf	(___fladd@b+1)^0,f,c
  7976  001F04  3201               	rrcf	___fladd@b^0,f,c
  7977  001F06  2A0F               	incf	___fladd@bexp^0,f,c
  7978  001F08                     l718:
  7979  001F08  500E               	movf	___fladd@aexp^0,w,c
  7980  001F0A  5C0F               	subwf	___fladd@bexp^0,w,c
  7981  001F0C  A0D8               	btfss	status,0,c
  7982  001F0E  EF8B  F00F         	goto	u3551
  7983  001F12  EF8D  F00F         	goto	u3550
  7984  001F16                     u3551:
  7985  001F16  EF67  F00F         	goto	l719
  7986  001F1A                     u3550:
  7987  001F1A                     l717:
  7988  001F1A  BC0D               	btfsc	___fladd@signs^0,6,c
  7989  001F1C  EF92  F00F         	goto	u3561
  7990  001F20  EF94  F00F         	goto	u3560
  7991  001F24                     u3561:
  7992  001F24  EFD4  F00F         	goto	l3306
  7993  001F28                     u3560:
  7994  001F28  500F               	movf	___fladd@bexp^0,w,c
  7995  001F2A  A4D8               	btfss	status,2,c
  7996  001F2C  EF9A  F00F         	goto	u3571
  7997  001F30  EF9C  F00F         	goto	u3570
  7998  001F34                     u3571:
  7999  001F34  EFA6  F00F         	goto	l3288
  8000  001F38                     u3570:
  8001  001F38  0E00               	movlw	0
  8002  001F3A  6E01               	movwf	?___fladd^0,c
  8003  001F3C  0E00               	movlw	0
  8004  001F3E  6E02               	movwf	(?___fladd+1)^0,c
  8005  001F40  0E00               	movlw	0
  8006  001F42  6E03               	movwf	(?___fladd+2)^0,c
  8007  001F44  0E00               	movlw	0
  8008  001F46  6E04               	movwf	(?___fladd+3)^0,c
  8009  001F48  EFF5  F010         	goto	l726
  8010  001F4C                     l3288:
  8011  001F4C  5005               	movf	___fladd@a^0,w,c
  8012  001F4E  2601               	addwf	___fladd@b^0,f,c
  8013  001F50  5006               	movf	(___fladd@a+1)^0,w,c
  8014  001F52  2202               	addwfc	(___fladd@b+1)^0,f,c
  8015  001F54  5007               	movf	(___fladd@a+2)^0,w,c
  8016  001F56  2203               	addwfc	(___fladd@b+2)^0,f,c
  8017  001F58  5008               	movf	(___fladd@a+3)^0,w,c
  8018  001F5A  2204               	addwfc	(___fladd@b+3)^0,f,c
  8019  001F5C  A004               	btfss	(___fladd@b+3)^0,0,c
  8020  001F5E  EFB3  F00F         	goto	u3581
  8021  001F62  EFB5  F00F         	goto	u3580
  8022  001F66                     u3581:
  8023  001F66  EF61  F010         	goto	l3342
  8024  001F6A                     u3580:
  8025  001F6A  A010               	btfss	___fladd@grs^0,0,c
  8026  001F6C  EFBA  F00F         	goto	u3591
  8027  001F70  EFBC  F00F         	goto	u3590
  8028  001F74                     u3591:
  8029  001F74  EFC2  F00F         	goto	l3296
  8030  001F78                     u3590:
  8031  001F78  90D8               	bcf	status,0,c
  8032  001F7A  3010               	rrcf	___fladd@grs^0,w,c
  8033  001F7C  0901               	iorlw	1
  8034  001F7E  6E10               	movwf	___fladd@grs^0,c
  8035  001F80  EFC4  F00F         	goto	l3298
  8036  001F84                     l3296:
  8037  001F84  90D8               	bcf	status,0,c
  8038  001F86  3210               	rrcf	___fladd@grs^0,f,c
  8039  001F88                     l3298:
  8040  001F88  A001               	btfss	___fladd@b^0,0,c
  8041  001F8A  EFC9  F00F         	goto	u3601
  8042  001F8E  EFCB  F00F         	goto	u3600
  8043  001F92                     u3601:
  8044  001F92  EFCC  F00F         	goto	l3302
  8045  001F96                     u3600:
  8046  001F96  8E10               	bsf	___fladd@grs^0,7,c
  8047  001F98                     l3302:
  8048  001F98  3404               	rlcf	(___fladd@b+3)^0,w,c
  8049  001F9A  3204               	rrcf	(___fladd@b+3)^0,f,c
  8050  001F9C  3203               	rrcf	(___fladd@b+2)^0,f,c
  8051  001F9E  3202               	rrcf	(___fladd@b+1)^0,f,c
  8052  001FA0  3201               	rrcf	___fladd@b^0,f,c
  8053  001FA2  2A0F               	incf	___fladd@bexp^0,f,c
  8054  001FA4  EF61  F010         	goto	l3342
  8055  001FA8                     l3306:
  8056  001FA8  5005               	movf	___fladd@a^0,w,c
  8057  001FAA  5C01               	subwf	___fladd@b^0,w,c
  8058  001FAC  5006               	movf	(___fladd@a+1)^0,w,c
  8059  001FAE  5802               	subwfb	(___fladd@b+1)^0,w,c
  8060  001FB0  5007               	movf	(___fladd@a+2)^0,w,c
  8061  001FB2  5803               	subwfb	(___fladd@b+2)^0,w,c
  8062  001FB4  5004               	movf	(___fladd@b+3)^0,w,c
  8063  001FB6  0A80               	xorlw	128
  8064  001FB8  6E09               	movwf	??___fladd^0,c
  8065  001FBA  5008               	movf	(___fladd@a+3)^0,w,c
  8066  001FBC  0A80               	xorlw	128
  8067  001FBE  5809               	subwfb	??___fladd^0,w,c
  8068  001FC0  B0D8               	btfsc	status,0,c
  8069  001FC2  EFE5  F00F         	goto	u3611
  8070  001FC6  EFE7  F00F         	goto	u3610
  8071  001FCA                     u3611:
  8072  001FCA  EF12  F010         	goto	l3316
  8073  001FCE                     u3610:
  8074  001FCE  5001               	movf	___fladd@b^0,w,c
  8075  001FD0  5C05               	subwf	___fladd@a^0,w,c
  8076  001FD2  6E09               	movwf	??___fladd^0,c
  8077  001FD4  5002               	movf	(___fladd@b+1)^0,w,c
  8078  001FD6  5806               	subwfb	(___fladd@a+1)^0,w,c
  8079  001FD8  6E0A               	movwf	(??___fladd+1)^0,c
  8080  001FDA  5003               	movf	(___fladd@b+2)^0,w,c
  8081  001FDC  5807               	subwfb	(___fladd@a+2)^0,w,c
  8082  001FDE  6E0B               	movwf	(??___fladd+2)^0,c
  8083  001FE0  5004               	movf	(___fladd@b+3)^0,w,c
  8084  001FE2  5808               	subwfb	(___fladd@a+3)^0,w,c
  8085  001FE4  6E0C               	movwf	(??___fladd+3)^0,c
  8086  001FE6  0EFF               	movlw	255
  8087  001FE8  2409               	addwf	??___fladd^0,w,c
  8088  001FEA  6E01               	movwf	___fladd@b^0,c
  8089  001FEC  0EFF               	movlw	255
  8090  001FEE  200A               	addwfc	(??___fladd+1)^0,w,c
  8091  001FF0  6E02               	movwf	(___fladd@b+1)^0,c
  8092  001FF2  0EFF               	movlw	255
  8093  001FF4  200B               	addwfc	(??___fladd+2)^0,w,c
  8094  001FF6  6E03               	movwf	(___fladd@b+2)^0,c
  8095  001FF8  0EFF               	movlw	255
  8096  001FFA  200C               	addwfc	(??___fladd+3)^0,w,c
  8097  001FFC  6E04               	movwf	(___fladd@b+3)^0,c
  8098  001FFE  0E80               	movlw	128
  8099  002000  1A0D               	xorwf	___fladd@signs^0,f,c
  8100  002002  6C10               	negf	___fladd@grs^0,c
  8101  002004  5010               	movf	___fladd@grs^0,w,c
  8102  002006  A4D8               	btfss	status,2,c
  8103  002008  EF08  F010         	goto	u3621
  8104  00200C  EF0A  F010         	goto	u3620
  8105  002010                     u3621:
  8106  002010  EF1A  F010         	goto	l734
  8107  002014                     u3620:
  8108  002014  0E01               	movlw	1
  8109  002016  2601               	addwf	___fladd@b^0,f,c
  8110  002018  0E00               	movlw	0
  8111  00201A  2202               	addwfc	(___fladd@b+1)^0,f,c
  8112  00201C  2203               	addwfc	(___fladd@b+2)^0,f,c
  8113  00201E  2204               	addwfc	(___fladd@b+3)^0,f,c
  8114  002020  EF1A  F010         	goto	l734
  8115  002024                     l3316:
  8116  002024  5005               	movf	___fladd@a^0,w,c
  8117  002026  5E01               	subwf	___fladd@b^0,f,c
  8118  002028  5006               	movf	(___fladd@a+1)^0,w,c
  8119  00202A  5A02               	subwfb	(___fladd@b+1)^0,f,c
  8120  00202C  5007               	movf	(___fladd@a+2)^0,w,c
  8121  00202E  5A03               	subwfb	(___fladd@b+2)^0,f,c
  8122  002030  5008               	movf	(___fladd@a+3)^0,w,c
  8123  002032  5A04               	subwfb	(___fladd@b+3)^0,f,c
  8124  002034                     l734:
  8125  002034  5001               	movf	___fladd@b^0,w,c
  8126  002036  1002               	iorwf	(___fladd@b+1)^0,w,c
  8127  002038  1003               	iorwf	(___fladd@b+2)^0,w,c
  8128  00203A  1004               	iorwf	(___fladd@b+3)^0,w,c
  8129  00203C  A4D8               	btfss	status,2,c
  8130  00203E  EF23  F010         	goto	u3631
  8131  002042  EF25  F010         	goto	u3630
  8132  002046                     u3631:
  8133  002046  EF5A  F010         	goto	l3340
  8134  00204A                     u3630:
  8135  00204A  5010               	movf	___fladd@grs^0,w,c
  8136  00204C  A4D8               	btfss	status,2,c
  8137  00204E  EF2B  F010         	goto	u3641
  8138  002052  EF2D  F010         	goto	u3640
  8139  002056                     u3641:
  8140  002056  EF5A  F010         	goto	l3340
  8141  00205A                     u3640:
  8142  00205A  0E00               	movlw	0
  8143  00205C  6E01               	movwf	?___fladd^0,c
  8144  00205E  0E00               	movlw	0
  8145  002060  6E02               	movwf	(?___fladd+1)^0,c
  8146  002062  0E00               	movlw	0
  8147  002064  6E03               	movwf	(?___fladd+2)^0,c
  8148  002066  0E00               	movlw	0
  8149  002068  6E04               	movwf	(?___fladd+3)^0,c
  8150  00206A  EFF5  F010         	goto	l726
  8151  00206E                     l3324:
  8152  00206E  90D8               	bcf	status,0,c
  8153  002070  3601               	rlcf	___fladd@b^0,f,c
  8154  002072  3602               	rlcf	(___fladd@b+1)^0,f,c
  8155  002074  3603               	rlcf	(___fladd@b+2)^0,f,c
  8156  002076  3604               	rlcf	(___fladd@b+3)^0,f,c
  8157  002078  AE10               	btfss	___fladd@grs^0,7,c
  8158  00207A  EF41  F010         	goto	u3651
  8159  00207E  EF43  F010         	goto	u3650
  8160  002082                     u3651:
  8161  002082  EF44  F010         	goto	l3330
  8162  002086                     u3650:
  8163  002086  8001               	bsf	___fladd@b^0,0,c
  8164  002088                     l3330:
  8165  002088  A010               	btfss	___fladd@grs^0,0,c
  8166  00208A  EF49  F010         	goto	u3661
  8167  00208E  EF4B  F010         	goto	u3660
  8168  002092                     u3661:
  8169  002092  EF4F  F010         	goto	l3334
  8170  002096                     u3660:
  8171  002096  80D8               	bsf	status,0,c
  8172  002098  3610               	rlcf	___fladd@grs^0,f,c
  8173  00209A  EF51  F010         	goto	l3336
  8174  00209E                     l3334:
  8175  00209E  90D8               	bcf	status,0,c
  8176  0020A0  3610               	rlcf	___fladd@grs^0,f,c
  8177  0020A2                     l3336:
  8178  0020A2  500F               	movf	___fladd@bexp^0,w,c
  8179  0020A4  B4D8               	btfsc	status,2,c
  8180  0020A6  EF57  F010         	goto	u3671
  8181  0020AA  EF59  F010         	goto	u3670
  8182  0020AE                     u3671:
  8183  0020AE  EF5A  F010         	goto	l3340
  8184  0020B2                     u3670:
  8185  0020B2  060F               	decf	___fladd@bexp^0,f,c
  8186  0020B4                     l3340:
  8187  0020B4  AE03               	btfss	(___fladd@b+2)^0,7,c
  8188  0020B6  EF5F  F010         	goto	u3681
  8189  0020BA  EF61  F010         	goto	u3680
  8190  0020BE                     u3681:
  8191  0020BE  EF37  F010         	goto	l3324
  8192  0020C2                     u3680:
  8193  0020C2                     l3342:
  8194  0020C2  0E00               	movlw	0
  8195  0020C4  6E0E               	movwf	___fladd@aexp^0,c
  8196  0020C6  AE10               	btfss	___fladd@grs^0,7,c
  8197  0020C8  EF68  F010         	goto	u3691
  8198  0020CC  EF6A  F010         	goto	u3690
  8199  0020D0                     u3691:
  8200  0020D0  EF82  F010         	goto	l743
  8201  0020D4                     u3690:
  8202  0020D4  C010  F009         	movff	___fladd@grs,??___fladd
  8203  0020D8  0E7F               	movlw	127
  8204  0020DA  1609               	andwf	??___fladd^0,f,c
  8205  0020DC  B4D8               	btfsc	status,2,c
  8206  0020DE  EF73  F010         	goto	u3701
  8207  0020E2  EF75  F010         	goto	u3700
  8208  0020E6                     u3701:
  8209  0020E6  EF79  F010         	goto	l744
  8210  0020EA                     u3700:
  8211  0020EA                     l3348:
  8212  0020EA  0E01               	movlw	1
  8213  0020EC  6E0E               	movwf	___fladd@aexp^0,c
  8214  0020EE  EF82  F010         	goto	l743
  8215  0020F2                     l744:
  8216  0020F2  A001               	btfss	___fladd@b^0,0,c
  8217  0020F4  EF7E  F010         	goto	u3711
  8218  0020F8  EF80  F010         	goto	u3710
  8219  0020FC                     u3711:
  8220  0020FC  EF82  F010         	goto	l743
  8221  002100                     u3710:
  8222  002100  EF75  F010         	goto	l3348
  8223  002104                     l743:
  8224  002104  500E               	movf	___fladd@aexp^0,w,c
  8225  002106  B4D8               	btfsc	status,2,c
  8226  002108  EF88  F010         	goto	u3721
  8227  00210C  EF8A  F010         	goto	u3720
  8228  002110                     u3721:
  8229  002110  EFB5  F010         	goto	l3360
  8230  002114                     u3720:
  8231  002114  0E01               	movlw	1
  8232  002116  2601               	addwf	___fladd@b^0,f,c
  8233  002118  0E00               	movlw	0
  8234  00211A  2202               	addwfc	(___fladd@b+1)^0,f,c
  8235  00211C  2203               	addwfc	(___fladd@b+2)^0,f,c
  8236  00211E  2204               	addwfc	(___fladd@b+3)^0,f,c
  8237  002120  A004               	btfss	(___fladd@b+3)^0,0,c
  8238  002122  EF95  F010         	goto	u3731
  8239  002126  EF97  F010         	goto	u3730
  8240  00212A                     u3731:
  8241  00212A  EFB5  F010         	goto	l3360
  8242  00212E                     u3730:
  8243  00212E  C001  F009         	movff	___fladd@b,??___fladd
  8244  002132  C002  F00A         	movff	___fladd@b+1,??___fladd+1
  8245  002136  C003  F00B         	movff	___fladd@b+2,??___fladd+2
  8246  00213A  C004  F00C         	movff	___fladd@b+3,??___fladd+3
  8247  00213E  340C               	rlcf	(??___fladd+3)^0,w,c
  8248  002140  320C               	rrcf	(??___fladd+3)^0,f,c
  8249  002142  320B               	rrcf	(??___fladd+2)^0,f,c
  8250  002144  320A               	rrcf	(??___fladd+1)^0,f,c
  8251  002146  3209               	rrcf	??___fladd^0,f,c
  8252  002148  C009  F001         	movff	??___fladd,___fladd@b
  8253  00214C  C00A  F002         	movff	??___fladd+1,___fladd@b+1
  8254  002150  C00B  F003         	movff	??___fladd+2,___fladd@b+2
  8255  002154  C00C  F004         	movff	??___fladd+3,___fladd@b+3
  8256  002158  280F               	incf	___fladd@bexp^0,w,c
  8257  00215A  B4D8               	btfsc	status,2,c
  8258  00215C  EFB2  F010         	goto	u3741
  8259  002160  EFB4  F010         	goto	u3740
  8260  002164                     u3741:
  8261  002164  EFB5  F010         	goto	l3360
  8262  002168                     u3740:
  8263  002168  2A0F               	incf	___fladd@bexp^0,f,c
  8264  00216A                     l3360:
  8265  00216A  280F               	incf	___fladd@bexp^0,w,c
  8266  00216C  B4D8               	btfsc	status,2,c
  8267  00216E  EFBB  F010         	goto	u3751
  8268  002172  EFBD  F010         	goto	u3750
  8269  002176                     u3751:
  8270  002176  EFC5  F010         	goto	l3364
  8271  00217A                     u3750:
  8272  00217A  500F               	movf	___fladd@bexp^0,w,c
  8273  00217C  A4D8               	btfss	status,2,c
  8274  00217E  EFC3  F010         	goto	u3761
  8275  002182  EFC5  F010         	goto	u3760
  8276  002186                     u3761:
  8277  002186  EFD7  F010         	goto	l3368
  8278  00218A                     u3760:
  8279  00218A                     l3364:
  8280  00218A  0E00               	movlw	0
  8281  00218C  6E01               	movwf	___fladd@b^0,c
  8282  00218E  0E00               	movlw	0
  8283  002190  6E02               	movwf	(___fladd@b+1)^0,c
  8284  002192  0E00               	movlw	0
  8285  002194  6E03               	movwf	(___fladd@b+2)^0,c
  8286  002196  0E00               	movlw	0
  8287  002198  6E04               	movwf	(___fladd@b+3)^0,c
  8288  00219A  500F               	movf	___fladd@bexp^0,w,c
  8289  00219C  A4D8               	btfss	status,2,c
  8290  00219E  EFD3  F010         	goto	u3771
  8291  0021A2  EFD5  F010         	goto	u3770
  8292  0021A6                     u3771:
  8293  0021A6  EFD7  F010         	goto	l3368
  8294  0021AA                     u3770:
  8295  0021AA  0E00               	movlw	0
  8296  0021AC  6E0D               	movwf	___fladd@signs^0,c
  8297  0021AE                     l3368:
  8298  0021AE  A00F               	btfss	___fladd@bexp^0,0,c
  8299  0021B0  EFDC  F010         	goto	u3781
  8300  0021B4  EFDE  F010         	goto	u3780
  8301  0021B8                     u3781:
  8302  0021B8  EFE1  F010         	goto	l3372
  8303  0021BC                     u3780:
  8304  0021BC  8E03               	bsf	(___fladd@b+2)^0,7,c
  8305  0021BE  EFE2  F010         	goto	l3374
  8306  0021C2                     l3372:
  8307  0021C2  9E03               	bcf	(___fladd@b+2)^0,7,c
  8308  0021C4                     l3374:
  8309  0021C4  90D8               	bcf	status,0,c
  8310  0021C6  300F               	rrcf	___fladd@bexp^0,w,c
  8311  0021C8  6E04               	movwf	(___fladd@b+3)^0,c
  8312  0021CA  AE0D               	btfss	___fladd@signs^0,7,c
  8313  0021CC  EFEA  F010         	goto	u3791
  8314  0021D0  EFEC  F010         	goto	u3790
  8315  0021D4                     u3791:
  8316  0021D4  EFED  F010         	goto	l3380
  8317  0021D8                     u3790:
  8318  0021D8  8E04               	bsf	(___fladd@b+3)^0,7,c
  8319  0021DA                     l3380:
  8320  0021DA  C001  F001         	movff	___fladd@b,?___fladd
  8321  0021DE  C002  F002         	movff	___fladd@b+1,?___fladd+1
  8322  0021E2  C003  F003         	movff	___fladd@b+2,?___fladd+2
  8323  0021E6  C004  F004         	movff	___fladd@b+3,?___fladd+3
  8324  0021EA                     l726:
  8325  0021EA  0012               	return		;funcret
  8326  0021EC                     __end_of___fladd:
  8327                           	callstack 0
  8328                           
  8329 ;; *************** function ___flneg *****************
  8330 ;; Defined at:
  8331 ;;		line 15 in file "/Applications/microchip/xc8/v2.31/pic/sources/c99/common/flneg.c"
  8332 ;; Parameters:    Size  Location     Type
  8333 ;;  f1              4    0[COMRAM] unsigned char 
  8334 ;; Auto vars:     Size  Location     Type
  8335 ;;		None
  8336 ;; Return value:  Size  Location     Type
  8337 ;;                  4    0[COMRAM] unsigned char 
  8338 ;; Registers used:
  8339 ;;		wreg, status,2, status,0
  8340 ;; Tracked objects:
  8341 ;;		On entry : 0/0
  8342 ;;		On exit  : 0/0
  8343 ;;		Unchanged: 0/0
  8344 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  8345 ;;      Params:         4       0       0       0       0       0       0       0       0
  8346 ;;      Locals:         0       0       0       0       0       0       0       0       0
  8347 ;;      Temps:          0       0       0       0       0       0       0       0       0
  8348 ;;      Totals:         4       0       0       0       0       0       0       0       0
  8349 ;;Total ram usage:        4 bytes
  8350 ;; Hardware stack levels used:    1
  8351 ;; This function calls:
  8352 ;;		Nothing
  8353 ;; This function is called by:
  8354 ;;		_efgtoa
  8355 ;; This function uses a non-reentrant model
  8356 ;;
  8357                           
  8358                           	psect	text30
  8359  004C5C                     __ptext30:
  8360                           	callstack 0
  8361  004C5C                     ___flneg:
  8362                           	callstack 25
  8363  004C5C  5001               	movf	___flneg@f1^0,w,c
  8364  004C5E  1002               	iorwf	(___flneg@f1+1)^0,w,c
  8365  004C60  1003               	iorwf	(___flneg@f1+2)^0,w,c
  8366  004C62  1004               	iorwf	(___flneg@f1+3)^0,w,c
  8367  004C64  B4D8               	btfsc	status,2,c
  8368  004C66  EF37  F026         	goto	u4691
  8369  004C6A  EF39  F026         	goto	u4690
  8370  004C6E                     u4691:
  8371  004C6E  EF41  F026         	goto	l3916
  8372  004C72                     u4690:
  8373  004C72  0E00               	movlw	0
  8374  004C74  1A01               	xorwf	___flneg@f1^0,f,c
  8375  004C76  0E00               	movlw	0
  8376  004C78  1A02               	xorwf	(___flneg@f1+1)^0,f,c
  8377  004C7A  0E00               	movlw	0
  8378  004C7C  1A03               	xorwf	(___flneg@f1+2)^0,f,c
  8379  004C7E  0E80               	movlw	128
  8380  004C80  1A04               	xorwf	(___flneg@f1+3)^0,f,c
  8381  004C82                     l3916:
  8382  004C82  C001  F001         	movff	___flneg@f1,?___flneg
  8383  004C86  C002  F002         	movff	___flneg@f1+1,?___flneg+1
  8384  004C8A  C003  F003         	movff	___flneg@f1+2,?___flneg+2
  8385  004C8E  C004  F004         	movff	___flneg@f1+3,?___flneg+3
  8386  004C92  0012               	return		;funcret
  8387  004C94                     __end_of___flneg:
  8388                           	callstack 0
  8389                           
  8390 ;; *************** function ___flmul *****************
  8391 ;; Defined at:
  8392 ;;		line 8 in file "/Applications/microchip/xc8/v2.31/pic/sources/c99/common/sprcmul.c"
  8393 ;; Parameters:    Size  Location     Type
  8394 ;;  b               4   24[COMRAM] unsigned char 
  8395 ;;  a               4   28[COMRAM] unsigned char 
  8396 ;; Auto vars:     Size  Location     Type
  8397 ;;  prod            4   43[COMRAM] struct .
  8398 ;;  grs             4   37[COMRAM] unsigned long 
  8399 ;;  temp            2   47[COMRAM] struct .
  8400 ;;  bexp            1   42[COMRAM] unsigned char 
  8401 ;;  aexp            1   41[COMRAM] unsigned char 
  8402 ;;  sign            1   36[COMRAM] unsigned char 
  8403 ;; Return value:  Size  Location     Type
  8404 ;;                  4   24[COMRAM] unsigned char 
  8405 ;; Registers used:
  8406 ;;		wreg, status,2, status,0, prodl, prodh
  8407 ;; Tracked objects:
  8408 ;;		On entry : 0/0
  8409 ;;		On exit  : 0/0
  8410 ;;		Unchanged: 0/0
  8411 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  8412 ;;      Params:         8       0       0       0       0       0       0       0       0
  8413 ;;      Locals:        13       0       0       0       0       0       0       0       0
  8414 ;;      Temps:          4       0       0       0       0       0       0       0       0
  8415 ;;      Totals:        25       0       0       0       0       0       0       0       0
  8416 ;;Total ram usage:       25 bytes
  8417 ;; Hardware stack levels used:    1
  8418 ;; This function calls:
  8419 ;;		Nothing
  8420 ;; This function is called by:
  8421 ;;		_SensorLM35
  8422 ;;		_efgtoa
  8423 ;; This function uses a non-reentrant model
  8424 ;;
  8425                           
  8426                           	psect	text31
  8427  0021EC                     __ptext31:
  8428                           	callstack 0
  8429  0021EC                     ___flmul:
  8430                           	callstack 25
  8431  0021EC  501C               	movf	(___flmul@b+3)^0,w,c
  8432  0021EE  0B80               	andlw	128
  8433  0021F0  6E25               	movwf	___flmul@sign^0,c
  8434  0021F2  501C               	movf	(___flmul@b+3)^0,w,c
  8435  0021F4  241C               	addwf	(___flmul@b+3)^0,w,c
  8436  0021F6  6E2B               	movwf	___flmul@bexp^0,c
  8437  0021F8  AE1B               	btfss	(___flmul@b+2)^0,7,c
  8438  0021FA  EF01  F011         	goto	u4301
  8439  0021FE  EF03  F011         	goto	u4300
  8440  002202                     u4301:
  8441  002202  EF04  F011         	goto	l3664
  8442  002206                     u4300:
  8443  002206  802B               	bsf	___flmul@bexp^0,0,c
  8444  002208                     l3664:
  8445  002208  502B               	movf	___flmul@bexp^0,w,c
  8446  00220A  B4D8               	btfsc	status,2,c
  8447  00220C  EF0A  F011         	goto	u4311
  8448  002210  EF0C  F011         	goto	u4310
  8449  002214                     u4311:
  8450  002214  EF1F  F011         	goto	l3672
  8451  002218                     u4310:
  8452  002218  282B               	incf	___flmul@bexp^0,w,c
  8453  00221A  A4D8               	btfss	status,2,c
  8454  00221C  EF12  F011         	goto	u4321
  8455  002220  EF14  F011         	goto	u4320
  8456  002224                     u4321:
  8457  002224  EF1C  F011         	goto	l3670
  8458  002228                     u4320:
  8459  002228  0E00               	movlw	0
  8460  00222A  6E19               	movwf	___flmul@b^0,c
  8461  00222C  0E00               	movlw	0
  8462  00222E  6E1A               	movwf	(___flmul@b+1)^0,c
  8463  002230  0E00               	movlw	0
  8464  002232  6E1B               	movwf	(___flmul@b+2)^0,c
  8465  002234  0E00               	movlw	0
  8466  002236  6E1C               	movwf	(___flmul@b+3)^0,c
  8467  002238                     l3670:
  8468  002238  8E1B               	bsf	(___flmul@b+2)^0,7,c
  8469  00223A  EF27  F011         	goto	l3674
  8470  00223E                     l3672:
  8471  00223E  0E00               	movlw	0
  8472  002240  6E19               	movwf	___flmul@b^0,c
  8473  002242  0E00               	movlw	0
  8474  002244  6E1A               	movwf	(___flmul@b+1)^0,c
  8475  002246  0E00               	movlw	0
  8476  002248  6E1B               	movwf	(___flmul@b+2)^0,c
  8477  00224A  0E00               	movlw	0
  8478  00224C  6E1C               	movwf	(___flmul@b+3)^0,c
  8479  00224E                     l3674:
  8480  00224E  5020               	movf	(___flmul@a+3)^0,w,c
  8481  002250  0B80               	andlw	128
  8482  002252  1A25               	xorwf	___flmul@sign^0,f,c
  8483  002254  5020               	movf	(___flmul@a+3)^0,w,c
  8484  002256  2420               	addwf	(___flmul@a+3)^0,w,c
  8485  002258  6E2A               	movwf	___flmul@aexp^0,c
  8486  00225A  AE1F               	btfss	(___flmul@a+2)^0,7,c
  8487  00225C  EF32  F011         	goto	u4331
  8488  002260  EF34  F011         	goto	u4330
  8489  002264                     u4331:
  8490  002264  EF35  F011         	goto	l3682
  8491  002268                     u4330:
  8492  002268  802A               	bsf	___flmul@aexp^0,0,c
  8493  00226A                     l3682:
  8494  00226A  502A               	movf	___flmul@aexp^0,w,c
  8495  00226C  B4D8               	btfsc	status,2,c
  8496  00226E  EF3B  F011         	goto	u4341
  8497  002272  EF3D  F011         	goto	u4340
  8498  002276                     u4341:
  8499  002276  EF50  F011         	goto	l3690
  8500  00227A                     u4340:
  8501  00227A  282A               	incf	___flmul@aexp^0,w,c
  8502  00227C  A4D8               	btfss	status,2,c
  8503  00227E  EF43  F011         	goto	u4351
  8504  002282  EF45  F011         	goto	u4350
  8505  002286                     u4351:
  8506  002286  EF4D  F011         	goto	l3688
  8507  00228A                     u4350:
  8508  00228A  0E00               	movlw	0
  8509  00228C  6E1D               	movwf	___flmul@a^0,c
  8510  00228E  0E00               	movlw	0
  8511  002290  6E1E               	movwf	(___flmul@a+1)^0,c
  8512  002292  0E00               	movlw	0
  8513  002294  6E1F               	movwf	(___flmul@a+2)^0,c
  8514  002296  0E00               	movlw	0
  8515  002298  6E20               	movwf	(___flmul@a+3)^0,c
  8516  00229A                     l3688:
  8517  00229A  8E1F               	bsf	(___flmul@a+2)^0,7,c
  8518  00229C  EF58  F011         	goto	l803
  8519  0022A0                     l3690:
  8520  0022A0  0E00               	movlw	0
  8521  0022A2  6E1D               	movwf	___flmul@a^0,c
  8522  0022A4  0E00               	movlw	0
  8523  0022A6  6E1E               	movwf	(___flmul@a+1)^0,c
  8524  0022A8  0E00               	movlw	0
  8525  0022AA  6E1F               	movwf	(___flmul@a+2)^0,c
  8526  0022AC  0E00               	movlw	0
  8527  0022AE  6E20               	movwf	(___flmul@a+3)^0,c
  8528  0022B0                     l803:
  8529  0022B0  502A               	movf	___flmul@aexp^0,w,c
  8530  0022B2  B4D8               	btfsc	status,2,c
  8531  0022B4  EF5E  F011         	goto	u4361
  8532  0022B8  EF60  F011         	goto	u4360
  8533  0022BC                     u4361:
  8534  0022BC  EF68  F011         	goto	l3694
  8535  0022C0                     u4360:
  8536  0022C0  502B               	movf	___flmul@bexp^0,w,c
  8537  0022C2  A4D8               	btfss	status,2,c
  8538  0022C4  EF66  F011         	goto	u4371
  8539  0022C8  EF68  F011         	goto	u4370
  8540  0022CC                     u4371:
  8541  0022CC  EF72  F011         	goto	l3698
  8542  0022D0                     u4370:
  8543  0022D0                     l3694:
  8544  0022D0  0E00               	movlw	0
  8545  0022D2  6E19               	movwf	?___flmul^0,c
  8546  0022D4  0E00               	movlw	0
  8547  0022D6  6E1A               	movwf	(?___flmul+1)^0,c
  8548  0022D8  0E00               	movlw	0
  8549  0022DA  6E1B               	movwf	(?___flmul+2)^0,c
  8550  0022DC  0E00               	movlw	0
  8551  0022DE  6E1C               	movwf	(?___flmul+3)^0,c
  8552  0022E0  EF0A  F013         	goto	l807
  8553  0022E4                     l3698:
  8554  0022E4  501F               	movf	(___flmul@a+2)^0,w,c
  8555  0022E6  0219               	mulwf	___flmul@b^0,c
  8556  0022E8  CFF3 F030          	movff	prodl,___flmul@temp
  8557  0022EC  CFF4 F031          	movff	prodh,___flmul@temp+1
  8558  0022F0  5030               	movf	___flmul@temp^0,w,c
  8559  0022F2  6E26               	movwf	___flmul@grs^0,c
  8560  0022F4  6A27               	clrf	(___flmul@grs+1)^0,c
  8561  0022F6  6A28               	clrf	(___flmul@grs+2)^0,c
  8562  0022F8  6A29               	clrf	(___flmul@grs+3)^0,c
  8563  0022FA  5031               	movf	(___flmul@temp+1)^0,w,c
  8564  0022FC  6E2C               	movwf	___flmul@prod^0,c
  8565  0022FE  6A2D               	clrf	(___flmul@prod+1)^0,c
  8566  002300  6A2E               	clrf	(___flmul@prod+2)^0,c
  8567  002302  6A2F               	clrf	(___flmul@prod+3)^0,c
  8568  002304  501E               	movf	(___flmul@a+1)^0,w,c
  8569  002306  021A               	mulwf	(___flmul@b+1)^0,c
  8570  002308  CFF3 F030          	movff	prodl,___flmul@temp
  8571  00230C  CFF4 F031          	movff	prodh,___flmul@temp+1
  8572  002310  5030               	movf	___flmul@temp^0,w,c
  8573  002312  2626               	addwf	___flmul@grs^0,f,c
  8574  002314  0E00               	movlw	0
  8575  002316  2227               	addwfc	(___flmul@grs+1)^0,f,c
  8576  002318  2228               	addwfc	(___flmul@grs+2)^0,f,c
  8577  00231A  2229               	addwfc	(___flmul@grs+3)^0,f,c
  8578  00231C  5031               	movf	(___flmul@temp+1)^0,w,c
  8579  00231E  262C               	addwf	___flmul@prod^0,f,c
  8580  002320  0E00               	movlw	0
  8581  002322  222D               	addwfc	(___flmul@prod+1)^0,f,c
  8582  002324  222E               	addwfc	(___flmul@prod+2)^0,f,c
  8583  002326  222F               	addwfc	(___flmul@prod+3)^0,f,c
  8584  002328  501D               	movf	___flmul@a^0,w,c
  8585  00232A  021B               	mulwf	(___flmul@b+2)^0,c
  8586  00232C  CFF3 F030          	movff	prodl,___flmul@temp
  8587  002330  CFF4 F031          	movff	prodh,___flmul@temp+1
  8588  002334  5030               	movf	___flmul@temp^0,w,c
  8589  002336  2626               	addwf	___flmul@grs^0,f,c
  8590  002338  0E00               	movlw	0
  8591  00233A  2227               	addwfc	(___flmul@grs+1)^0,f,c
  8592  00233C  2228               	addwfc	(___flmul@grs+2)^0,f,c
  8593  00233E  2229               	addwfc	(___flmul@grs+3)^0,f,c
  8594  002340  5031               	movf	(___flmul@temp+1)^0,w,c
  8595  002342  262C               	addwf	___flmul@prod^0,f,c
  8596  002344  0E00               	movlw	0
  8597  002346  222D               	addwfc	(___flmul@prod+1)^0,f,c
  8598  002348  222E               	addwfc	(___flmul@prod+2)^0,f,c
  8599  00234A  222F               	addwfc	(___flmul@prod+3)^0,f,c
  8600  00234C  C028  F029         	movff	___flmul@grs+2,___flmul@grs+3
  8601  002350  C027  F028         	movff	___flmul@grs+1,___flmul@grs+2
  8602  002354  C026  F027         	movff	___flmul@grs,___flmul@grs+1
  8603  002358  6A26               	clrf	___flmul@grs^0,c
  8604  00235A  501D               	movf	___flmul@a^0,w,c
  8605  00235C  021A               	mulwf	(___flmul@b+1)^0,c
  8606  00235E  CFF3 F030          	movff	prodl,___flmul@temp
  8607  002362  CFF4 F031          	movff	prodh,___flmul@temp+1
  8608  002366  5030               	movf	___flmul@temp^0,w,c
  8609  002368  2626               	addwf	___flmul@grs^0,f,c
  8610  00236A  5031               	movf	(___flmul@temp+1)^0,w,c
  8611  00236C  2227               	addwfc	(___flmul@grs+1)^0,f,c
  8612  00236E  0E00               	movlw	0
  8613  002370  2228               	addwfc	(___flmul@grs+2)^0,f,c
  8614  002372  0E00               	movlw	0
  8615  002374  2229               	addwfc	(___flmul@grs+3)^0,f,c
  8616  002376  501E               	movf	(___flmul@a+1)^0,w,c
  8617  002378  0219               	mulwf	___flmul@b^0,c
  8618  00237A  CFF3 F030          	movff	prodl,___flmul@temp
  8619  00237E  CFF4 F031          	movff	prodh,___flmul@temp+1
  8620  002382  5030               	movf	___flmul@temp^0,w,c
  8621  002384  2626               	addwf	___flmul@grs^0,f,c
  8622  002386  5031               	movf	(___flmul@temp+1)^0,w,c
  8623  002388  2227               	addwfc	(___flmul@grs+1)^0,f,c
  8624  00238A  0E00               	movlw	0
  8625  00238C  2228               	addwfc	(___flmul@grs+2)^0,f,c
  8626  00238E  0E00               	movlw	0
  8627  002390  2229               	addwfc	(___flmul@grs+3)^0,f,c
  8628  002392  C028  F029         	movff	___flmul@grs+2,___flmul@grs+3
  8629  002396  C027  F028         	movff	___flmul@grs+1,___flmul@grs+2
  8630  00239A  C026  F027         	movff	___flmul@grs,___flmul@grs+1
  8631  00239E  6A26               	clrf	___flmul@grs^0,c
  8632  0023A0  501D               	movf	___flmul@a^0,w,c
  8633  0023A2  0219               	mulwf	___flmul@b^0,c
  8634  0023A4  CFF3 F030          	movff	prodl,___flmul@temp
  8635  0023A8  CFF4 F031          	movff	prodh,___flmul@temp+1
  8636  0023AC  5030               	movf	___flmul@temp^0,w,c
  8637  0023AE  2626               	addwf	___flmul@grs^0,f,c
  8638  0023B0  5031               	movf	(___flmul@temp+1)^0,w,c
  8639  0023B2  2227               	addwfc	(___flmul@grs+1)^0,f,c
  8640  0023B4  0E00               	movlw	0
  8641  0023B6  2228               	addwfc	(___flmul@grs+2)^0,f,c
  8642  0023B8  0E00               	movlw	0
  8643  0023BA  2229               	addwfc	(___flmul@grs+3)^0,f,c
  8644  0023BC  501F               	movf	(___flmul@a+2)^0,w,c
  8645  0023BE  021A               	mulwf	(___flmul@b+1)^0,c
  8646  0023C0  CFF3 F030          	movff	prodl,___flmul@temp
  8647  0023C4  CFF4 F031          	movff	prodh,___flmul@temp+1
  8648  0023C8  5030               	movf	___flmul@temp^0,w,c
  8649  0023CA  262C               	addwf	___flmul@prod^0,f,c
  8650  0023CC  5031               	movf	(___flmul@temp+1)^0,w,c
  8651  0023CE  222D               	addwfc	(___flmul@prod+1)^0,f,c
  8652  0023D0  0E00               	movlw	0
  8653  0023D2  222E               	addwfc	(___flmul@prod+2)^0,f,c
  8654  0023D4  0E00               	movlw	0
  8655  0023D6  222F               	addwfc	(___flmul@prod+3)^0,f,c
  8656  0023D8  501E               	movf	(___flmul@a+1)^0,w,c
  8657  0023DA  021B               	mulwf	(___flmul@b+2)^0,c
  8658  0023DC  CFF3 F030          	movff	prodl,___flmul@temp
  8659  0023E0  CFF4 F031          	movff	prodh,___flmul@temp+1
  8660  0023E4  5030               	movf	___flmul@temp^0,w,c
  8661  0023E6  262C               	addwf	___flmul@prod^0,f,c
  8662  0023E8  5031               	movf	(___flmul@temp+1)^0,w,c
  8663  0023EA  222D               	addwfc	(___flmul@prod+1)^0,f,c
  8664  0023EC  0E00               	movlw	0
  8665  0023EE  222E               	addwfc	(___flmul@prod+2)^0,f,c
  8666  0023F0  0E00               	movlw	0
  8667  0023F2  222F               	addwfc	(___flmul@prod+3)^0,f,c
  8668  0023F4  501F               	movf	(___flmul@a+2)^0,w,c
  8669  0023F6  021B               	mulwf	(___flmul@b+2)^0,c
  8670  0023F8  CFF3 F030          	movff	prodl,___flmul@temp
  8671  0023FC  CFF4 F031          	movff	prodh,___flmul@temp+1
  8672  002400  5030               	movf	___flmul@temp^0,w,c
  8673  002402  6E21               	movwf	??___flmul^0,c
  8674  002404  5031               	movf	(___flmul@temp+1)^0,w,c
  8675  002406  6E22               	movwf	(??___flmul+1)^0,c
  8676  002408  6A23               	clrf	(??___flmul+2)^0,c
  8677  00240A  6A24               	clrf	(??___flmul+3)^0,c
  8678  00240C  C023  F024         	movff	??___flmul+2,??___flmul+3
  8679  002410  C022  F023         	movff	??___flmul+1,??___flmul+2
  8680  002414  C021  F022         	movff	??___flmul,??___flmul+1
  8681  002418  6A21               	clrf	??___flmul^0,c
  8682  00241A  5021               	movf	??___flmul^0,w,c
  8683  00241C  262C               	addwf	___flmul@prod^0,f,c
  8684  00241E  5022               	movf	(??___flmul+1)^0,w,c
  8685  002420  222D               	addwfc	(___flmul@prod+1)^0,f,c
  8686  002422  5023               	movf	(??___flmul+2)^0,w,c
  8687  002424  222E               	addwfc	(___flmul@prod+2)^0,f,c
  8688  002426  5024               	movf	(??___flmul+3)^0,w,c
  8689  002428  222F               	addwfc	(___flmul@prod+3)^0,f,c
  8690  00242A  C026  F021         	movff	___flmul@grs,??___flmul
  8691  00242E  C027  F022         	movff	___flmul@grs+1,??___flmul+1
  8692  002432  C028  F023         	movff	___flmul@grs+2,??___flmul+2
  8693  002436  C029  F024         	movff	___flmul@grs+3,??___flmul+3
  8694  00243A  0E19               	movlw	25
  8695  00243C  EF25  F012         	goto	u4380
  8696  002440                     u4385:
  8697  002440  90D8               	bcf	status,0,c
  8698  002442  3224               	rrcf	(??___flmul+3)^0,f,c
  8699  002444  3223               	rrcf	(??___flmul+2)^0,f,c
  8700  002446  3222               	rrcf	(??___flmul+1)^0,f,c
  8701  002448  3221               	rrcf	??___flmul^0,f,c
  8702  00244A                     u4380:
  8703  00244A  2EE8               	decfsz	wreg,f,c
  8704  00244C  EF20  F012         	goto	u4385
  8705  002450  5021               	movf	??___flmul^0,w,c
  8706  002452  262C               	addwf	___flmul@prod^0,f,c
  8707  002454  5022               	movf	(??___flmul+1)^0,w,c
  8708  002456  222D               	addwfc	(___flmul@prod+1)^0,f,c
  8709  002458  5023               	movf	(??___flmul+2)^0,w,c
  8710  00245A  222E               	addwfc	(___flmul@prod+2)^0,f,c
  8711  00245C  5024               	movf	(??___flmul+3)^0,w,c
  8712  00245E  222F               	addwfc	(___flmul@prod+3)^0,f,c
  8713  002460  C028  F029         	movff	___flmul@grs+2,___flmul@grs+3
  8714  002464  C027  F028         	movff	___flmul@grs+1,___flmul@grs+2
  8715  002468  C026  F027         	movff	___flmul@grs,___flmul@grs+1
  8716  00246C  6A26               	clrf	___flmul@grs^0,c
  8717  00246E  502A               	movf	___flmul@aexp^0,w,c
  8718  002470  C02B  F021         	movff	___flmul@bexp,??___flmul
  8719  002474  6A22               	clrf	(??___flmul+1)^0,c
  8720  002476  2621               	addwf	??___flmul^0,f,c
  8721  002478  0E00               	movlw	0
  8722  00247A  2222               	addwfc	(??___flmul+1)^0,f,c
  8723  00247C  0E82               	movlw	130
  8724  00247E  2421               	addwf	??___flmul^0,w,c
  8725  002480  6E30               	movwf	___flmul@temp^0,c
  8726  002482  0EFF               	movlw	255
  8727  002484  2022               	addwfc	(??___flmul+1)^0,w,c
  8728  002486  6E31               	movwf	(___flmul@temp+1)^0,c
  8729  002488  EF5B  F012         	goto	l3746
  8730  00248C                     l3740:
  8731  00248C  90D8               	bcf	status,0,c
  8732  00248E  362C               	rlcf	___flmul@prod^0,f,c
  8733  002490  362D               	rlcf	(___flmul@prod+1)^0,f,c
  8734  002492  362E               	rlcf	(___flmul@prod+2)^0,f,c
  8735  002494  362F               	rlcf	(___flmul@prod+3)^0,f,c
  8736  002496  AE29               	btfss	(___flmul@grs+3)^0,7,c
  8737  002498  EF50  F012         	goto	u4391
  8738  00249C  EF52  F012         	goto	u4390
  8739  0024A0                     u4391:
  8740  0024A0  EF53  F012         	goto	l810
  8741  0024A4                     u4390:
  8742  0024A4  802C               	bsf	___flmul@prod^0,0,c
  8743  0024A6                     l810:
  8744  0024A6  90D8               	bcf	status,0,c
  8745  0024A8  3626               	rlcf	___flmul@grs^0,f,c
  8746  0024AA  3627               	rlcf	(___flmul@grs+1)^0,f,c
  8747  0024AC  3628               	rlcf	(___flmul@grs+2)^0,f,c
  8748  0024AE  3629               	rlcf	(___flmul@grs+3)^0,f,c
  8749  0024B0  0630               	decf	___flmul@temp^0,f,c
  8750  0024B2  A0D8               	btfss	status,0,c
  8751  0024B4  0631               	decf	(___flmul@temp+1)^0,f,c
  8752  0024B6                     l3746:
  8753  0024B6  AE2E               	btfss	(___flmul@prod+2)^0,7,c
  8754  0024B8  EF60  F012         	goto	u4401
  8755  0024BC  EF62  F012         	goto	u4400
  8756  0024C0                     u4401:
  8757  0024C0  EF46  F012         	goto	l3740
  8758  0024C4                     u4400:
  8759  0024C4  0E00               	movlw	0
  8760  0024C6  6E2A               	movwf	___flmul@aexp^0,c
  8761  0024C8  AE29               	btfss	(___flmul@grs+3)^0,7,c
  8762  0024CA  EF69  F012         	goto	u4411
  8763  0024CE  EF6B  F012         	goto	u4410
  8764  0024D2                     u4411:
  8765  0024D2  EF8F  F012         	goto	l812
  8766  0024D6                     u4410:
  8767  0024D6  0EFF               	movlw	255
  8768  0024D8  1426               	andwf	___flmul@grs^0,w,c
  8769  0024DA  6E21               	movwf	??___flmul^0,c
  8770  0024DC  0EFF               	movlw	255
  8771  0024DE  1427               	andwf	(___flmul@grs+1)^0,w,c
  8772  0024E0  6E22               	movwf	(??___flmul+1)^0,c
  8773  0024E2  0EFF               	movlw	255
  8774  0024E4  1428               	andwf	(___flmul@grs+2)^0,w,c
  8775  0024E6  6E23               	movwf	(??___flmul+2)^0,c
  8776  0024E8  0E7F               	movlw	127
  8777  0024EA  1429               	andwf	(___flmul@grs+3)^0,w,c
  8778  0024EC  6E24               	movwf	(??___flmul+3)^0,c
  8779  0024EE  5021               	movf	??___flmul^0,w,c
  8780  0024F0  1022               	iorwf	(??___flmul+1)^0,w,c
  8781  0024F2  1023               	iorwf	(??___flmul+2)^0,w,c
  8782  0024F4  1024               	iorwf	(??___flmul+3)^0,w,c
  8783  0024F6  B4D8               	btfsc	status,2,c
  8784  0024F8  EF80  F012         	goto	u4421
  8785  0024FC  EF82  F012         	goto	u4420
  8786  002500                     u4421:
  8787  002500  EF86  F012         	goto	l813
  8788  002504                     u4420:
  8789  002504                     l3754:
  8790  002504  0E01               	movlw	1
  8791  002506  6E2A               	movwf	___flmul@aexp^0,c
  8792  002508  EF8F  F012         	goto	l812
  8793  00250C                     l813:
  8794  00250C  A02C               	btfss	___flmul@prod^0,0,c
  8795  00250E  EF8B  F012         	goto	u4431
  8796  002512  EF8D  F012         	goto	u4430
  8797  002516                     u4431:
  8798  002516  EF8F  F012         	goto	l812
  8799  00251A                     u4430:
  8800  00251A  EF82  F012         	goto	l3754
  8801  00251E                     l812:
  8802  00251E  502A               	movf	___flmul@aexp^0,w,c
  8803  002520  B4D8               	btfsc	status,2,c
  8804  002522  EF95  F012         	goto	u4441
  8805  002526  EF97  F012         	goto	u4440
  8806  00252A                     u4441:
  8807  00252A  EFBB  F012         	goto	l3766
  8808  00252E                     u4440:
  8809  00252E  0E01               	movlw	1
  8810  002530  262C               	addwf	___flmul@prod^0,f,c
  8811  002532  0E00               	movlw	0
  8812  002534  222D               	addwfc	(___flmul@prod+1)^0,f,c
  8813  002536  222E               	addwfc	(___flmul@prod+2)^0,f,c
  8814  002538  222F               	addwfc	(___flmul@prod+3)^0,f,c
  8815  00253A  A02F               	btfss	(___flmul@prod+3)^0,0,c
  8816  00253C  EFA2  F012         	goto	u4451
  8817  002540  EFA4  F012         	goto	u4450
  8818  002544                     u4451:
  8819  002544  EFBB  F012         	goto	l3766
  8820  002548                     u4450:
  8821  002548  C02C  F021         	movff	___flmul@prod,??___flmul
  8822  00254C  C02D  F022         	movff	___flmul@prod+1,??___flmul+1
  8823  002550  C02E  F023         	movff	___flmul@prod+2,??___flmul+2
  8824  002554  C02F  F024         	movff	___flmul@prod+3,??___flmul+3
  8825  002558  3424               	rlcf	(??___flmul+3)^0,w,c
  8826  00255A  3224               	rrcf	(??___flmul+3)^0,f,c
  8827  00255C  3223               	rrcf	(??___flmul+2)^0,f,c
  8828  00255E  3222               	rrcf	(??___flmul+1)^0,f,c
  8829  002560  3221               	rrcf	??___flmul^0,f,c
  8830  002562  C021  F02C         	movff	??___flmul,___flmul@prod
  8831  002566  C022  F02D         	movff	??___flmul+1,___flmul@prod+1
  8832  00256A  C023  F02E         	movff	??___flmul+2,___flmul@prod+2
  8833  00256E  C024  F02F         	movff	??___flmul+3,___flmul@prod+3
  8834  002572  4A30               	infsnz	___flmul@temp^0,f,c
  8835  002574  2A31               	incf	(___flmul@temp+1)^0,f,c
  8836  002576                     l3766:
  8837  002576  BE31               	btfsc	(___flmul@temp+1)^0,7,c
  8838  002578  EFC6  F012         	goto	u4461
  8839  00257C  5031               	movf	(___flmul@temp+1)^0,w,c
  8840  00257E  E108               	bnz	u4460
  8841  002580  2830               	incf	___flmul@temp^0,w,c
  8842  002582  A0D8               	btfss	status,0,c
  8843  002584  EFC6  F012         	goto	u4461
  8844  002588  EFC8  F012         	goto	u4460
  8845  00258C                     u4461:
  8846  00258C  EFD2  F012         	goto	l3770
  8847  002590                     u4460:
  8848  002590  0E00               	movlw	0
  8849  002592  6E2C               	movwf	___flmul@prod^0,c
  8850  002594  0E00               	movlw	0
  8851  002596  6E2D               	movwf	(___flmul@prod+1)^0,c
  8852  002598  0E80               	movlw	128
  8853  00259A  6E2E               	movwf	(___flmul@prod+2)^0,c
  8854  00259C  0E7F               	movlw	127
  8855  00259E  6E2F               	movwf	(___flmul@prod+3)^0,c
  8856  0025A0  EF00  F013         	goto	l3782
  8857  0025A4                     l3770:
  8858  0025A4  BE31               	btfsc	(___flmul@temp+1)^0,7,c
  8859  0025A6  EFDF  F012         	goto	u4470
  8860  0025AA  5031               	movf	(___flmul@temp+1)^0,w,c
  8861  0025AC  E106               	bnz	u4471
  8862  0025AE  0430               	decf	___flmul@temp^0,w,c
  8863  0025B0  B0D8               	btfsc	status,0,c
  8864  0025B2  EFDD  F012         	goto	u4471
  8865  0025B6  EFDF  F012         	goto	u4470
  8866  0025BA                     u4471:
  8867  0025BA  EFEB  F012         	goto	l820
  8868  0025BE                     u4470:
  8869  0025BE  0E00               	movlw	0
  8870  0025C0  6E2C               	movwf	___flmul@prod^0,c
  8871  0025C2  0E00               	movlw	0
  8872  0025C4  6E2D               	movwf	(___flmul@prod+1)^0,c
  8873  0025C6  0E00               	movlw	0
  8874  0025C8  6E2E               	movwf	(___flmul@prod+2)^0,c
  8875  0025CA  0E00               	movlw	0
  8876  0025CC  6E2F               	movwf	(___flmul@prod+3)^0,c
  8877  0025CE  0E00               	movlw	0
  8878  0025D0  6E25               	movwf	___flmul@sign^0,c
  8879  0025D2  EF00  F013         	goto	l3782
  8880  0025D6                     l820:
  8881  0025D6  C030  F02B         	movff	___flmul@temp,___flmul@bexp
  8882  0025DA  0EFF               	movlw	255
  8883  0025DC  162C               	andwf	___flmul@prod^0,f,c
  8884  0025DE  0EFF               	movlw	255
  8885  0025E0  162D               	andwf	(___flmul@prod+1)^0,f,c
  8886  0025E2  0E7F               	movlw	127
  8887  0025E4  162E               	andwf	(___flmul@prod+2)^0,f,c
  8888  0025E6  0E00               	movlw	0
  8889  0025E8  162F               	andwf	(___flmul@prod+3)^0,f,c
  8890  0025EA  A02B               	btfss	___flmul@bexp^0,0,c
  8891  0025EC  EFFA  F012         	goto	u4481
  8892  0025F0  EFFC  F012         	goto	u4480
  8893  0025F4                     u4481:
  8894  0025F4  EFFD  F012         	goto	l3780
  8895  0025F8                     u4480:
  8896  0025F8  8E2E               	bsf	(___flmul@prod+2)^0,7,c
  8897  0025FA                     l3780:
  8898  0025FA  90D8               	bcf	status,0,c
  8899  0025FC  302B               	rrcf	___flmul@bexp^0,w,c
  8900  0025FE  6E2F               	movwf	(___flmul@prod+3)^0,c
  8901  002600                     l3782:
  8902  002600  5025               	movf	___flmul@sign^0,w,c
  8903  002602  122F               	iorwf	(___flmul@prod+3)^0,f,c
  8904  002604  C02C  F019         	movff	___flmul@prod,?___flmul
  8905  002608  C02D  F01A         	movff	___flmul@prod+1,?___flmul+1
  8906  00260C  C02E  F01B         	movff	___flmul@prod+2,?___flmul+2
  8907  002610  C02F  F01C         	movff	___flmul@prod+3,?___flmul+3
  8908  002614                     l807:
  8909  002614  0012               	return		;funcret
  8910  002616                     __end_of___flmul:
  8911                           	callstack 0
  8912                           
  8913 ;; *************** function ___flge *****************
  8914 ;; Defined at:
  8915 ;;		line 4 in file "/Applications/microchip/xc8/v2.31/pic/sources/c99/common/flge.c"
  8916 ;; Parameters:    Size  Location     Type
  8917 ;;  ff1             4   57[COMRAM] unsigned char 
  8918 ;;  ff2             4   61[COMRAM] unsigned char 
  8919 ;; Auto vars:     Size  Location     Type
  8920 ;;		None
  8921 ;; Return value:  Size  Location     Type
  8922 ;;		None               void
  8923 ;; Registers used:
  8924 ;;		wreg, status,2, status,0
  8925 ;; Tracked objects:
  8926 ;;		On entry : 0/0
  8927 ;;		On exit  : 0/0
  8928 ;;		Unchanged: 0/0
  8929 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  8930 ;;      Params:         8       0       0       0       0       0       0       0       0
  8931 ;;      Locals:         0       0       0       0       0       0       0       0       0
  8932 ;;      Temps:          4       0       0       0       0       0       0       0       0
  8933 ;;      Totals:        12       0       0       0       0       0       0       0       0
  8934 ;;Total ram usage:       12 bytes
  8935 ;; Hardware stack levels used:    1
  8936 ;; This function calls:
  8937 ;;		Nothing
  8938 ;; This function is called by:
  8939 ;;		_SensorLM35
  8940 ;;		_efgtoa
  8941 ;; This function uses a non-reentrant model
  8942 ;;
  8943                           
  8944                           	psect	text32
  8945  003F52                     __ptext32:
  8946                           	callstack 0
  8947  003F52                     ___flge:
  8948                           	callstack 25
  8949  003F52  0E00               	movlw	0
  8950  003F54  143A               	andwf	___flge@ff1^0,w,c
  8951  003F56  6E42               	movwf	??___flge^0,c
  8952  003F58  0E00               	movlw	0
  8953  003F5A  143B               	andwf	(___flge@ff1+1)^0,w,c
  8954  003F5C  6E43               	movwf	(??___flge+1)^0,c
  8955  003F5E  0E80               	movlw	128
  8956  003F60  143C               	andwf	(___flge@ff1+2)^0,w,c
  8957  003F62  6E44               	movwf	(??___flge+2)^0,c
  8958  003F64  0E7F               	movlw	127
  8959  003F66  143D               	andwf	(___flge@ff1+3)^0,w,c
  8960  003F68  6E45               	movwf	(??___flge+3)^0,c
  8961  003F6A  5042               	movf	??___flge^0,w,c
  8962  003F6C  1043               	iorwf	(??___flge+1)^0,w,c
  8963  003F6E  1044               	iorwf	(??___flge+2)^0,w,c
  8964  003F70  1045               	iorwf	(??___flge+3)^0,w,c
  8965  003F72  A4D8               	btfss	status,2,c
  8966  003F74  EFBE  F01F         	goto	u4641
  8967  003F78  EFC0  F01F         	goto	u4640
  8968  003F7C                     u4641:
  8969  003F7C  EFC8  F01F         	goto	l3894
  8970  003F80                     u4640:
  8971  003F80  0E00               	movlw	0
  8972  003F82  6E3A               	movwf	___flge@ff1^0,c
  8973  003F84  0E00               	movlw	0
  8974  003F86  6E3B               	movwf	(___flge@ff1+1)^0,c
  8975  003F88  0E00               	movlw	0
  8976  003F8A  6E3C               	movwf	(___flge@ff1+2)^0,c
  8977  003F8C  0E00               	movlw	0
  8978  003F8E  6E3D               	movwf	(___flge@ff1+3)^0,c
  8979  003F90                     l3894:
  8980  003F90  0E00               	movlw	0
  8981  003F92  143E               	andwf	___flge@ff2^0,w,c
  8982  003F94  6E42               	movwf	??___flge^0,c
  8983  003F96  0E00               	movlw	0
  8984  003F98  143F               	andwf	(___flge@ff2+1)^0,w,c
  8985  003F9A  6E43               	movwf	(??___flge+1)^0,c
  8986  003F9C  0E80               	movlw	128
  8987  003F9E  1440               	andwf	(___flge@ff2+2)^0,w,c
  8988  003FA0  6E44               	movwf	(??___flge+2)^0,c
  8989  003FA2  0E7F               	movlw	127
  8990  003FA4  1441               	andwf	(___flge@ff2+3)^0,w,c
  8991  003FA6  6E45               	movwf	(??___flge+3)^0,c
  8992  003FA8  5042               	movf	??___flge^0,w,c
  8993  003FAA  1043               	iorwf	(??___flge+1)^0,w,c
  8994  003FAC  1044               	iorwf	(??___flge+2)^0,w,c
  8995  003FAE  1045               	iorwf	(??___flge+3)^0,w,c
  8996  003FB0  A4D8               	btfss	status,2,c
  8997  003FB2  EFDD  F01F         	goto	u4651
  8998  003FB6  EFDF  F01F         	goto	u4650
  8999  003FBA                     u4651:
  9000  003FBA  EFE7  F01F         	goto	l3898
  9001  003FBE                     u4650:
  9002  003FBE  0E00               	movlw	0
  9003  003FC0  6E3E               	movwf	___flge@ff2^0,c
  9004  003FC2  0E00               	movlw	0
  9005  003FC4  6E3F               	movwf	(___flge@ff2+1)^0,c
  9006  003FC6  0E00               	movlw	0
  9007  003FC8  6E40               	movwf	(___flge@ff2+2)^0,c
  9008  003FCA  0E00               	movlw	0
  9009  003FCC  6E41               	movwf	(___flge@ff2+3)^0,c
  9010  003FCE                     l3898:
  9011  003FCE  AE3D               	btfss	(___flge@ff1+3)^0,7,c
  9012  003FD0  EFEC  F01F         	goto	u4661
  9013  003FD4  EFEE  F01F         	goto	u4660
  9014  003FD8                     u4661:
  9015  003FD8  EFF7  F01F         	goto	l3902
  9016  003FDC                     u4660:
  9017  003FDC  6C3A               	negf	___flge@ff1^0,c
  9018  003FDE  1E3B               	comf	(___flge@ff1+1)^0,f,c
  9019  003FE0  B0D8               	btfsc	status,0,c
  9020  003FE2  2A3B               	incf	(___flge@ff1+1)^0,f,c
  9021  003FE4  1E3C               	comf	(___flge@ff1+2)^0,f,c
  9022  003FE6  B0D8               	btfsc	status,0,c
  9023  003FE8  2A3C               	incf	(___flge@ff1+2)^0,f,c
  9024  003FEA  0E80               	movlw	128
  9025  003FEC  563D               	subfwb	(___flge@ff1+3)^0,f,c
  9026  003FEE                     l3902:
  9027  003FEE  AE41               	btfss	(___flge@ff2+3)^0,7,c
  9028  003FF0  EFFC  F01F         	goto	u4671
  9029  003FF4  EFFE  F01F         	goto	u4670
  9030  003FF8                     u4671:
  9031  003FF8  EF07  F020         	goto	l454
  9032  003FFC                     u4670:
  9033  003FFC  6C3E               	negf	___flge@ff2^0,c
  9034  003FFE  1E3F               	comf	(___flge@ff2+1)^0,f,c
  9035  004000  B0D8               	btfsc	status,0,c
  9036  004002  2A3F               	incf	(___flge@ff2+1)^0,f,c
  9037  004004  1E40               	comf	(___flge@ff2+2)^0,f,c
  9038  004006  B0D8               	btfsc	status,0,c
  9039  004008  2A40               	incf	(___flge@ff2+2)^0,f,c
  9040  00400A  0E80               	movlw	128
  9041  00400C  5641               	subfwb	(___flge@ff2+3)^0,f,c
  9042  00400E                     l454:
  9043  00400E  0E00               	movlw	0
  9044  004010  1A3A               	xorwf	___flge@ff1^0,f,c
  9045  004012  0E00               	movlw	0
  9046  004014  1A3B               	xorwf	(___flge@ff1+1)^0,f,c
  9047  004016  0E00               	movlw	0
  9048  004018  1A3C               	xorwf	(___flge@ff1+2)^0,f,c
  9049  00401A  0E80               	movlw	128
  9050  00401C  1A3D               	xorwf	(___flge@ff1+3)^0,f,c
  9051  00401E  0E00               	movlw	0
  9052  004020  1A3E               	xorwf	___flge@ff2^0,f,c
  9053  004022  0E00               	movlw	0
  9054  004024  1A3F               	xorwf	(___flge@ff2+1)^0,f,c
  9055  004026  0E00               	movlw	0
  9056  004028  1A40               	xorwf	(___flge@ff2+2)^0,f,c
  9057  00402A  0E80               	movlw	128
  9058  00402C  1A41               	xorwf	(___flge@ff2+3)^0,f,c
  9059  00402E  503E               	movf	___flge@ff2^0,w,c
  9060  004030  5C3A               	subwf	___flge@ff1^0,w,c
  9061  004032  503F               	movf	(___flge@ff2+1)^0,w,c
  9062  004034  583B               	subwfb	(___flge@ff1+1)^0,w,c
  9063  004036  5040               	movf	(___flge@ff2+2)^0,w,c
  9064  004038  583C               	subwfb	(___flge@ff1+2)^0,w,c
  9065  00403A  5041               	movf	(___flge@ff2+3)^0,w,c
  9066  00403C  583D               	subwfb	(___flge@ff1+3)^0,w,c
  9067  00403E  B0D8               	btfsc	status,0,c
  9068  004040  EF24  F020         	goto	u4681
  9069  004044  EF26  F020         	goto	u4680
  9070  004048                     u4681:
  9071  004048  EF29  F020         	goto	l3908
  9072  00404C                     u4680:
  9073  00404C  90D8               	bcf	status,0,c
  9074  00404E  EF2A  F020         	goto	l459
  9075  004052                     l3908:
  9076  004052  80D8               	bsf	status,0,c
  9077  004054                     l459:
  9078  004054  0012               	return		;funcret
  9079  004056                     __end_of___flge:
  9080                           	callstack 0
  9081                           
  9082 ;; *************** function ___fleq *****************
  9083 ;; Defined at:
  9084 ;;		line 4 in file "/Applications/microchip/xc8/v2.31/pic/sources/c99/common/fleq.c"
  9085 ;; Parameters:    Size  Location     Type
  9086 ;;  ff1             4    0[COMRAM] unsigned char 
  9087 ;;  ff2             4    4[COMRAM] unsigned char 
  9088 ;; Auto vars:     Size  Location     Type
  9089 ;;		None
  9090 ;; Return value:  Size  Location     Type
  9091 ;;		None               void
  9092 ;; Registers used:
  9093 ;;		wreg, status,2, status,0
  9094 ;; Tracked objects:
  9095 ;;		On entry : 0/0
  9096 ;;		On exit  : 0/0
  9097 ;;		Unchanged: 0/0
  9098 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  9099 ;;      Params:         8       0       0       0       0       0       0       0       0
  9100 ;;      Locals:         0       0       0       0       0       0       0       0       0
  9101 ;;      Temps:          4       0       0       0       0       0       0       0       0
  9102 ;;      Totals:        12       0       0       0       0       0       0       0       0
  9103 ;;Total ram usage:       12 bytes
  9104 ;; Hardware stack levels used:    1
  9105 ;; This function calls:
  9106 ;;		Nothing
  9107 ;; This function is called by:
  9108 ;;		_efgtoa
  9109 ;; This function uses a non-reentrant model
  9110 ;;
  9111                           
  9112                           	psect	text33
  9113  0046B4                     __ptext33:
  9114                           	callstack 0
  9115  0046B4                     ___fleq:
  9116                           	callstack 25
  9117  0046B4  0E00               	movlw	0
  9118  0046B6  1401               	andwf	___fleq@ff1^0,w,c
  9119  0046B8  6E09               	movwf	??___fleq^0,c
  9120  0046BA  0E00               	movlw	0
  9121  0046BC  1402               	andwf	(___fleq@ff1+1)^0,w,c
  9122  0046BE  6E0A               	movwf	(??___fleq+1)^0,c
  9123  0046C0  0E80               	movlw	128
  9124  0046C2  1403               	andwf	(___fleq@ff1+2)^0,w,c
  9125  0046C4  6E0B               	movwf	(??___fleq+2)^0,c
  9126  0046C6  0E7F               	movlw	127
  9127  0046C8  1404               	andwf	(___fleq@ff1+3)^0,w,c
  9128  0046CA  6E0C               	movwf	(??___fleq+3)^0,c
  9129  0046CC  5009               	movf	??___fleq^0,w,c
  9130  0046CE  100A               	iorwf	(??___fleq+1)^0,w,c
  9131  0046D0  100B               	iorwf	(??___fleq+2)^0,w,c
  9132  0046D2  100C               	iorwf	(??___fleq+3)^0,w,c
  9133  0046D4  A4D8               	btfss	status,2,c
  9134  0046D6  EF6F  F023         	goto	u4611
  9135  0046DA  EF71  F023         	goto	u4610
  9136  0046DE                     u4611:
  9137  0046DE  EF79  F023         	goto	l3878
  9138  0046E2                     u4610:
  9139  0046E2  0E00               	movlw	0
  9140  0046E4  6E01               	movwf	___fleq@ff1^0,c
  9141  0046E6  0E00               	movlw	0
  9142  0046E8  6E02               	movwf	(___fleq@ff1+1)^0,c
  9143  0046EA  0E00               	movlw	0
  9144  0046EC  6E03               	movwf	(___fleq@ff1+2)^0,c
  9145  0046EE  0E00               	movlw	0
  9146  0046F0  6E04               	movwf	(___fleq@ff1+3)^0,c
  9147  0046F2                     l3878:
  9148  0046F2  0E00               	movlw	0
  9149  0046F4  1405               	andwf	___fleq@ff2^0,w,c
  9150  0046F6  6E09               	movwf	??___fleq^0,c
  9151  0046F8  0E00               	movlw	0
  9152  0046FA  1406               	andwf	(___fleq@ff2+1)^0,w,c
  9153  0046FC  6E0A               	movwf	(??___fleq+1)^0,c
  9154  0046FE  0E80               	movlw	128
  9155  004700  1407               	andwf	(___fleq@ff2+2)^0,w,c
  9156  004702  6E0B               	movwf	(??___fleq+2)^0,c
  9157  004704  0E7F               	movlw	127
  9158  004706  1408               	andwf	(___fleq@ff2+3)^0,w,c
  9159  004708  6E0C               	movwf	(??___fleq+3)^0,c
  9160  00470A  5009               	movf	??___fleq^0,w,c
  9161  00470C  100A               	iorwf	(??___fleq+1)^0,w,c
  9162  00470E  100B               	iorwf	(??___fleq+2)^0,w,c
  9163  004710  100C               	iorwf	(??___fleq+3)^0,w,c
  9164  004712  A4D8               	btfss	status,2,c
  9165  004714  EF8E  F023         	goto	u4621
  9166  004718  EF90  F023         	goto	u4620
  9167  00471C                     u4621:
  9168  00471C  EF98  F023         	goto	l3882
  9169  004720                     u4620:
  9170  004720  0E00               	movlw	0
  9171  004722  6E05               	movwf	___fleq@ff2^0,c
  9172  004724  0E00               	movlw	0
  9173  004726  6E06               	movwf	(___fleq@ff2+1)^0,c
  9174  004728  0E00               	movlw	0
  9175  00472A  6E07               	movwf	(___fleq@ff2+2)^0,c
  9176  00472C  0E00               	movlw	0
  9177  00472E  6E08               	movwf	(___fleq@ff2+3)^0,c
  9178  004730                     l3882:
  9179  004730  5005               	movf	___fleq@ff2^0,w,c
  9180  004732  1801               	xorwf	___fleq@ff1^0,w,c
  9181  004734  E10F               	bnz	u4630
  9182  004736  5006               	movf	(___fleq@ff2+1)^0,w,c
  9183  004738  1802               	xorwf	(___fleq@ff1+1)^0,w,c
  9184  00473A  E10C               	bnz	u4630
  9185  00473C  5007               	movf	(___fleq@ff2+2)^0,w,c
  9186  00473E  1803               	xorwf	(___fleq@ff1+2)^0,w,c
  9187  004740  E109               	bnz	u4630
  9188  004742  5008               	movf	(___fleq@ff2+3)^0,w,c
  9189  004744  1804               	xorwf	(___fleq@ff1+3)^0,w,c
  9190  004746  B4D8               	btfsc	status,2,c
  9191  004748  EFA8  F023         	goto	u4631
  9192  00474C  EFAA  F023         	goto	u4630
  9193  004750                     u4631:
  9194  004750  EFAD  F023         	goto	l3886
  9195  004754                     u4630:
  9196  004754  90D8               	bcf	status,0,c
  9197  004756  EFAE  F023         	goto	l448
  9198  00475A                     l3886:
  9199  00475A  80D8               	bsf	status,0,c
  9200  00475C                     l448:
  9201  00475C  0012               	return		;funcret
  9202  00475E                     __end_of___fleq:
  9203                           	callstack 0
  9204                           
  9205 ;; *************** function ___fldiv *****************
  9206 ;; Defined at:
  9207 ;;		line 11 in file "/Applications/microchip/xc8/v2.31/pic/sources/c99/common/sprcdiv.c"
  9208 ;; Parameters:    Size  Location     Type
  9209 ;;  b               4    0[COMRAM] unsigned char 
  9210 ;;  a               4    4[COMRAM] unsigned char 
  9211 ;; Auto vars:     Size  Location     Type
  9212 ;;  grs             4   19[COMRAM] unsigned long 
  9213 ;;  rem             4   12[COMRAM] unsigned long 
  9214 ;;  new_exp         2   17[COMRAM] short 
  9215 ;;  aexp            1   24[COMRAM] unsigned char 
  9216 ;;  bexp            1   23[COMRAM] unsigned char 
  9217 ;;  sign            1   16[COMRAM] unsigned char 
  9218 ;; Return value:  Size  Location     Type
  9219 ;;                  4    0[COMRAM] unsigned char 
  9220 ;; Registers used:
  9221 ;;		wreg, status,2, status,0
  9222 ;; Tracked objects:
  9223 ;;		On entry : 0/0
  9224 ;;		On exit  : 0/0
  9225 ;;		Unchanged: 0/0
  9226 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  9227 ;;      Params:         8       0       0       0       0       0       0       0       0
  9228 ;;      Locals:        13       0       0       0       0       0       0       0       0
  9229 ;;      Temps:          4       0       0       0       0       0       0       0       0
  9230 ;;      Totals:        25       0       0       0       0       0       0       0       0
  9231 ;;Total ram usage:       25 bytes
  9232 ;; Hardware stack levels used:    1
  9233 ;; This function calls:
  9234 ;;		Nothing
  9235 ;; This function is called by:
  9236 ;;		_efgtoa
  9237 ;; This function uses a non-reentrant model
  9238 ;;
  9239                           
  9240                           	psect	text34
  9241  002616                     __ptext34:
  9242                           	callstack 0
  9243  002616                     ___fldiv:
  9244                           	callstack 25
  9245  002616  5004               	movf	(___fldiv@b+3)^0,w,c
  9246  002618  0B80               	andlw	128
  9247  00261A  6E11               	movwf	___fldiv@sign^0,c
  9248  00261C  5004               	movf	(___fldiv@b+3)^0,w,c
  9249  00261E  2404               	addwf	(___fldiv@b+3)^0,w,c
  9250  002620  6E18               	movwf	___fldiv@bexp^0,c
  9251  002622  AE03               	btfss	(___fldiv@b+2)^0,7,c
  9252  002624  EF16  F013         	goto	u4071
  9253  002628  EF18  F013         	goto	u4070
  9254  00262C                     u4071:
  9255  00262C  EF19  F013         	goto	l3526
  9256  002630                     u4070:
  9257  002630  8018               	bsf	___fldiv@bexp^0,0,c
  9258  002632                     l3526:
  9259  002632  5018               	movf	___fldiv@bexp^0,w,c
  9260  002634  B4D8               	btfsc	status,2,c
  9261  002636  EF1F  F013         	goto	u4081
  9262  00263A  EF21  F013         	goto	u4080
  9263  00263E                     u4081:
  9264  00263E  EF36  F013         	goto	l3536
  9265  002642                     u4080:
  9266  002642  2818               	incf	___fldiv@bexp^0,w,c
  9267  002644  A4D8               	btfss	status,2,c
  9268  002646  EF27  F013         	goto	u4091
  9269  00264A  EF29  F013         	goto	u4090
  9270  00264E                     u4091:
  9271  00264E  EF31  F013         	goto	l3532
  9272  002652                     u4090:
  9273  002652  0E00               	movlw	0
  9274  002654  6E01               	movwf	___fldiv@b^0,c
  9275  002656  0E00               	movlw	0
  9276  002658  6E02               	movwf	(___fldiv@b+1)^0,c
  9277  00265A  0E00               	movlw	0
  9278  00265C  6E03               	movwf	(___fldiv@b+2)^0,c
  9279  00265E  0E00               	movlw	0
  9280  002660  6E04               	movwf	(___fldiv@b+3)^0,c
  9281  002662                     l3532:
  9282  002662  8E03               	bsf	(___fldiv@b+2)^0,7,c
  9283  002664  0E00               	movlw	0
  9284  002666  6E04               	movwf	(___fldiv@b+3)^0,c
  9285  002668  EF3E  F013         	goto	l3538
  9286  00266C                     l3536:
  9287  00266C  0E00               	movlw	0
  9288  00266E  6E01               	movwf	___fldiv@b^0,c
  9289  002670  0E00               	movlw	0
  9290  002672  6E02               	movwf	(___fldiv@b+1)^0,c
  9291  002674  0E00               	movlw	0
  9292  002676  6E03               	movwf	(___fldiv@b+2)^0,c
  9293  002678  0E00               	movlw	0
  9294  00267A  6E04               	movwf	(___fldiv@b+3)^0,c
  9295  00267C                     l3538:
  9296  00267C  5008               	movf	(___fldiv@a+3)^0,w,c
  9297  00267E  0B80               	andlw	128
  9298  002680  1A11               	xorwf	___fldiv@sign^0,f,c
  9299  002682  5008               	movf	(___fldiv@a+3)^0,w,c
  9300  002684  2408               	addwf	(___fldiv@a+3)^0,w,c
  9301  002686  6E19               	movwf	___fldiv@aexp^0,c
  9302  002688  AE07               	btfss	(___fldiv@a+2)^0,7,c
  9303  00268A  EF49  F013         	goto	u4101
  9304  00268E  EF4B  F013         	goto	u4100
  9305  002692                     u4101:
  9306  002692  EF4C  F013         	goto	l3546
  9307  002696                     u4100:
  9308  002696  8019               	bsf	___fldiv@aexp^0,0,c
  9309  002698                     l3546:
  9310  002698  5019               	movf	___fldiv@aexp^0,w,c
  9311  00269A  B4D8               	btfsc	status,2,c
  9312  00269C  EF52  F013         	goto	u4111
  9313  0026A0  EF54  F013         	goto	u4110
  9314  0026A4                     u4111:
  9315  0026A4  EF69  F013         	goto	l3556
  9316  0026A8                     u4110:
  9317  0026A8  2819               	incf	___fldiv@aexp^0,w,c
  9318  0026AA  A4D8               	btfss	status,2,c
  9319  0026AC  EF5A  F013         	goto	u4121
  9320  0026B0  EF5C  F013         	goto	u4120
  9321  0026B4                     u4121:
  9322  0026B4  EF64  F013         	goto	l3552
  9323  0026B8                     u4120:
  9324  0026B8  0E00               	movlw	0
  9325  0026BA  6E05               	movwf	___fldiv@a^0,c
  9326  0026BC  0E00               	movlw	0
  9327  0026BE  6E06               	movwf	(___fldiv@a+1)^0,c
  9328  0026C0  0E00               	movlw	0
  9329  0026C2  6E07               	movwf	(___fldiv@a+2)^0,c
  9330  0026C4  0E00               	movlw	0
  9331  0026C6  6E08               	movwf	(___fldiv@a+3)^0,c
  9332  0026C8                     l3552:
  9333  0026C8  8E07               	bsf	(___fldiv@a+2)^0,7,c
  9334  0026CA  0E00               	movlw	0
  9335  0026CC  6E08               	movwf	(___fldiv@a+3)^0,c
  9336  0026CE  EF71  F013         	goto	l3558
  9337  0026D2                     l3556:
  9338  0026D2  0E00               	movlw	0
  9339  0026D4  6E05               	movwf	___fldiv@a^0,c
  9340  0026D6  0E00               	movlw	0
  9341  0026D8  6E06               	movwf	(___fldiv@a+1)^0,c
  9342  0026DA  0E00               	movlw	0
  9343  0026DC  6E07               	movwf	(___fldiv@a+2)^0,c
  9344  0026DE  0E00               	movlw	0
  9345  0026E0  6E08               	movwf	(___fldiv@a+3)^0,c
  9346  0026E2                     l3558:
  9347  0026E2  5005               	movf	___fldiv@a^0,w,c
  9348  0026E4  1006               	iorwf	(___fldiv@a+1)^0,w,c
  9349  0026E6  1007               	iorwf	(___fldiv@a+2)^0,w,c
  9350  0026E8  1008               	iorwf	(___fldiv@a+3)^0,w,c
  9351  0026EA  A4D8               	btfss	status,2,c
  9352  0026EC  EF7A  F013         	goto	u4131
  9353  0026F0  EF7C  F013         	goto	u4130
  9354  0026F4                     u4131:
  9355  0026F4  EF94  F013         	goto	l3570
  9356  0026F8                     u4130:
  9357  0026F8  0E00               	movlw	0
  9358  0026FA  6E01               	movwf	___fldiv@b^0,c
  9359  0026FC  0E00               	movlw	0
  9360  0026FE  6E02               	movwf	(___fldiv@b+1)^0,c
  9361  002700  0E00               	movlw	0
  9362  002702  6E03               	movwf	(___fldiv@b+2)^0,c
  9363  002704  0E00               	movlw	0
  9364  002706  6E04               	movwf	(___fldiv@b+3)^0,c
  9365  002708  0E80               	movlw	128
  9366  00270A  1203               	iorwf	(___fldiv@b+2)^0,f,c
  9367  00270C  0E7F               	movlw	127
  9368  00270E  1204               	iorwf	(___fldiv@b+3)^0,f,c
  9369  002710                     l3564:
  9370  002710  5011               	movf	___fldiv@sign^0,w,c
  9371  002712  1204               	iorwf	(___fldiv@b+3)^0,f,c
  9372  002714  C001  F001         	movff	___fldiv@b,?___fldiv
  9373  002718  C002  F002         	movff	___fldiv@b+1,?___fldiv+1
  9374  00271C  C003  F003         	movff	___fldiv@b+2,?___fldiv+2
  9375  002720  C004  F004         	movff	___fldiv@b+3,?___fldiv+3
  9376  002724  EFD7  F014         	goto	l771
  9377  002728                     l3570:
  9378  002728  5018               	movf	___fldiv@bexp^0,w,c
  9379  00272A  A4D8               	btfss	status,2,c
  9380  00272C  EF9A  F013         	goto	u4141
  9381  002730  EF9C  F013         	goto	u4140
  9382  002734                     u4141:
  9383  002734  EFA6  F013         	goto	l3578
  9384  002738                     u4140:
  9385  002738  0E00               	movlw	0
  9386  00273A  6E01               	movwf	?___fldiv^0,c
  9387  00273C  0E00               	movlw	0
  9388  00273E  6E02               	movwf	(?___fldiv+1)^0,c
  9389  002740  0E00               	movlw	0
  9390  002742  6E03               	movwf	(?___fldiv+2)^0,c
  9391  002744  0E00               	movlw	0
  9392  002746  6E04               	movwf	(?___fldiv+3)^0,c
  9393  002748  EFD7  F014         	goto	l771
  9394  00274C                     l3578:
  9395  00274C  5019               	movf	___fldiv@aexp^0,w,c
  9396  00274E  C018  F009         	movff	___fldiv@bexp,??___fldiv
  9397  002752  6A0A               	clrf	(??___fldiv+1)^0,c
  9398  002754  5E09               	subwf	??___fldiv^0,f,c
  9399  002756  0E00               	movlw	0
  9400  002758  5A0A               	subwfb	(??___fldiv+1)^0,f,c
  9401  00275A  0E7F               	movlw	127
  9402  00275C  2409               	addwf	??___fldiv^0,w,c
  9403  00275E  6E12               	movwf	___fldiv@new_exp^0,c
  9404  002760  0E00               	movlw	0
  9405  002762  200A               	addwfc	(??___fldiv+1)^0,w,c
  9406  002764  6E13               	movwf	(___fldiv@new_exp+1)^0,c
  9407  002766  C001  F00D         	movff	___fldiv@b,___fldiv@rem
  9408  00276A  C002  F00E         	movff	___fldiv@b+1,___fldiv@rem+1
  9409  00276E  C003  F00F         	movff	___fldiv@b+2,___fldiv@rem+2
  9410  002772  C004  F010         	movff	___fldiv@b+3,___fldiv@rem+3
  9411  002776  0E00               	movlw	0
  9412  002778  6E01               	movwf	___fldiv@b^0,c
  9413  00277A  0E00               	movlw	0
  9414  00277C  6E02               	movwf	(___fldiv@b+1)^0,c
  9415  00277E  0E00               	movlw	0
  9416  002780  6E03               	movwf	(___fldiv@b+2)^0,c
  9417  002782  0E00               	movlw	0
  9418  002784  6E04               	movwf	(___fldiv@b+3)^0,c
  9419  002786  0E00               	movlw	0
  9420  002788  6E14               	movwf	___fldiv@grs^0,c
  9421  00278A  0E00               	movlw	0
  9422  00278C  6E15               	movwf	(___fldiv@grs+1)^0,c
  9423  00278E  0E00               	movlw	0
  9424  002790  6E16               	movwf	(___fldiv@grs+2)^0,c
  9425  002792  0E00               	movlw	0
  9426  002794  6E17               	movwf	(___fldiv@grs+3)^0,c
  9427  002796  0E00               	movlw	0
  9428  002798  6E19               	movwf	___fldiv@aexp^0,c
  9429  00279A  EF07  F014         	goto	l773
  9430  00279E                     l3588:
  9431  00279E  5019               	movf	___fldiv@aexp^0,w,c
  9432  0027A0  B4D8               	btfsc	status,2,c
  9433  0027A2  EFD5  F013         	goto	u4151
  9434  0027A6  EFD7  F013         	goto	u4150
  9435  0027AA                     u4151:
  9436  0027AA  EFEE  F013         	goto	l3596
  9437  0027AE                     u4150:
  9438  0027AE  90D8               	bcf	status,0,c
  9439  0027B0  360D               	rlcf	___fldiv@rem^0,f,c
  9440  0027B2  360E               	rlcf	(___fldiv@rem+1)^0,f,c
  9441  0027B4  360F               	rlcf	(___fldiv@rem+2)^0,f,c
  9442  0027B6  3610               	rlcf	(___fldiv@rem+3)^0,f,c
  9443  0027B8  90D8               	bcf	status,0,c
  9444  0027BA  3601               	rlcf	___fldiv@b^0,f,c
  9445  0027BC  3602               	rlcf	(___fldiv@b+1)^0,f,c
  9446  0027BE  3603               	rlcf	(___fldiv@b+2)^0,f,c
  9447  0027C0  3604               	rlcf	(___fldiv@b+3)^0,f,c
  9448  0027C2  AE17               	btfss	(___fldiv@grs+3)^0,7,c
  9449  0027C4  EFE6  F013         	goto	u4161
  9450  0027C8  EFE8  F013         	goto	u4160
  9451  0027CC                     u4161:
  9452  0027CC  EFE9  F013         	goto	l776
  9453  0027D0                     u4160:
  9454  0027D0  8001               	bsf	___fldiv@b^0,0,c
  9455  0027D2                     l776:
  9456  0027D2  90D8               	bcf	status,0,c
  9457  0027D4  3614               	rlcf	___fldiv@grs^0,f,c
  9458  0027D6  3615               	rlcf	(___fldiv@grs+1)^0,f,c
  9459  0027D8  3616               	rlcf	(___fldiv@grs+2)^0,f,c
  9460  0027DA  3617               	rlcf	(___fldiv@grs+3)^0,f,c
  9461  0027DC                     l3596:
  9462  0027DC  5005               	movf	___fldiv@a^0,w,c
  9463  0027DE  5C0D               	subwf	___fldiv@rem^0,w,c
  9464  0027E0  5006               	movf	(___fldiv@a+1)^0,w,c
  9465  0027E2  580E               	subwfb	(___fldiv@rem+1)^0,w,c
  9466  0027E4  5007               	movf	(___fldiv@a+2)^0,w,c
  9467  0027E6  580F               	subwfb	(___fldiv@rem+2)^0,w,c
  9468  0027E8  5008               	movf	(___fldiv@a+3)^0,w,c
  9469  0027EA  5810               	subwfb	(___fldiv@rem+3)^0,w,c
  9470  0027EC  A0D8               	btfss	status,0,c
  9471  0027EE  EFFB  F013         	goto	u4171
  9472  0027F2  EFFD  F013         	goto	u4170
  9473  0027F6                     u4171:
  9474  0027F6  EF06  F014         	goto	l3602
  9475  0027FA                     u4170:
  9476  0027FA  8C17               	bsf	(___fldiv@grs+3)^0,6,c
  9477  0027FC  5005               	movf	___fldiv@a^0,w,c
  9478  0027FE  5E0D               	subwf	___fldiv@rem^0,f,c
  9479  002800  5006               	movf	(___fldiv@a+1)^0,w,c
  9480  002802  5A0E               	subwfb	(___fldiv@rem+1)^0,f,c
  9481  002804  5007               	movf	(___fldiv@a+2)^0,w,c
  9482  002806  5A0F               	subwfb	(___fldiv@rem+2)^0,f,c
  9483  002808  5008               	movf	(___fldiv@a+3)^0,w,c
  9484  00280A  5A10               	subwfb	(___fldiv@rem+3)^0,f,c
  9485  00280C                     l3602:
  9486  00280C  2A19               	incf	___fldiv@aexp^0,f,c
  9487  00280E                     l773:
  9488  00280E  0E19               	movlw	25
  9489  002810  6419               	cpfsgt	___fldiv@aexp^0,c
  9490  002812  EF0D  F014         	goto	u4181
  9491  002816  EF0F  F014         	goto	u4180
  9492  00281A                     u4181:
  9493  00281A  EFCF  F013         	goto	l3588
  9494  00281E                     u4180:
  9495  00281E  500D               	movf	___fldiv@rem^0,w,c
  9496  002820  100E               	iorwf	(___fldiv@rem+1)^0,w,c
  9497  002822  100F               	iorwf	(___fldiv@rem+2)^0,w,c
  9498  002824  1010               	iorwf	(___fldiv@rem+3)^0,w,c
  9499  002826  B4D8               	btfsc	status,2,c
  9500  002828  EF18  F014         	goto	u4191
  9501  00282C  EF1A  F014         	goto	u4190
  9502  002830                     u4191:
  9503  002830  EF32  F014         	goto	l3614
  9504  002834                     u4190:
  9505  002834  8014               	bsf	___fldiv@grs^0,0,c
  9506  002836  EF32  F014         	goto	l3614
  9507  00283A                     l3608:
  9508  00283A  90D8               	bcf	status,0,c
  9509  00283C  3601               	rlcf	___fldiv@b^0,f,c
  9510  00283E  3602               	rlcf	(___fldiv@b+1)^0,f,c
  9511  002840  3603               	rlcf	(___fldiv@b+2)^0,f,c
  9512  002842  3604               	rlcf	(___fldiv@b+3)^0,f,c
  9513  002844  AE17               	btfss	(___fldiv@grs+3)^0,7,c
  9514  002846  EF27  F014         	goto	u4201
  9515  00284A  EF29  F014         	goto	u4200
  9516  00284E                     u4201:
  9517  00284E  EF2A  F014         	goto	l782
  9518  002852                     u4200:
  9519  002852  8001               	bsf	___fldiv@b^0,0,c
  9520  002854                     l782:
  9521  002854  90D8               	bcf	status,0,c
  9522  002856  3614               	rlcf	___fldiv@grs^0,f,c
  9523  002858  3615               	rlcf	(___fldiv@grs+1)^0,f,c
  9524  00285A  3616               	rlcf	(___fldiv@grs+2)^0,f,c
  9525  00285C  3617               	rlcf	(___fldiv@grs+3)^0,f,c
  9526  00285E  0612               	decf	___fldiv@new_exp^0,f,c
  9527  002860  A0D8               	btfss	status,0,c
  9528  002862  0613               	decf	(___fldiv@new_exp+1)^0,f,c
  9529  002864                     l3614:
  9530  002864  AE03               	btfss	(___fldiv@b+2)^0,7,c
  9531  002866  EF37  F014         	goto	u4211
  9532  00286A  EF39  F014         	goto	u4210
  9533  00286E                     u4211:
  9534  00286E  EF1D  F014         	goto	l3608
  9535  002872                     u4210:
  9536  002872  0E00               	movlw	0
  9537  002874  6E19               	movwf	___fldiv@aexp^0,c
  9538  002876  AE17               	btfss	(___fldiv@grs+3)^0,7,c
  9539  002878  EF40  F014         	goto	u4221
  9540  00287C  EF42  F014         	goto	u4220
  9541  002880                     u4221:
  9542  002880  EF66  F014         	goto	l784
  9543  002884                     u4220:
  9544  002884  0EFF               	movlw	255
  9545  002886  1414               	andwf	___fldiv@grs^0,w,c
  9546  002888  6E09               	movwf	??___fldiv^0,c
  9547  00288A  0EFF               	movlw	255
  9548  00288C  1415               	andwf	(___fldiv@grs+1)^0,w,c
  9549  00288E  6E0A               	movwf	(??___fldiv+1)^0,c
  9550  002890  0EFF               	movlw	255
  9551  002892  1416               	andwf	(___fldiv@grs+2)^0,w,c
  9552  002894  6E0B               	movwf	(??___fldiv+2)^0,c
  9553  002896  0E7F               	movlw	127
  9554  002898  1417               	andwf	(___fldiv@grs+3)^0,w,c
  9555  00289A  6E0C               	movwf	(??___fldiv+3)^0,c
  9556  00289C  5009               	movf	??___fldiv^0,w,c
  9557  00289E  100A               	iorwf	(??___fldiv+1)^0,w,c
  9558  0028A0  100B               	iorwf	(??___fldiv+2)^0,w,c
  9559  0028A2  100C               	iorwf	(??___fldiv+3)^0,w,c
  9560  0028A4  B4D8               	btfsc	status,2,c
  9561  0028A6  EF57  F014         	goto	u4231
  9562  0028AA  EF59  F014         	goto	u4230
  9563  0028AE                     u4231:
  9564  0028AE  EF5D  F014         	goto	l785
  9565  0028B2                     u4230:
  9566  0028B2                     l3622:
  9567  0028B2  0E01               	movlw	1
  9568  0028B4  6E19               	movwf	___fldiv@aexp^0,c
  9569  0028B6  EF66  F014         	goto	l784
  9570  0028BA                     l785:
  9571  0028BA  A001               	btfss	___fldiv@b^0,0,c
  9572  0028BC  EF62  F014         	goto	u4241
  9573  0028C0  EF64  F014         	goto	u4240
  9574  0028C4                     u4241:
  9575  0028C4  EF66  F014         	goto	l784
  9576  0028C8                     u4240:
  9577  0028C8  EF59  F014         	goto	l3622
  9578  0028CC                     l784:
  9579  0028CC  5019               	movf	___fldiv@aexp^0,w,c
  9580  0028CE  B4D8               	btfsc	status,2,c
  9581  0028D0  EF6C  F014         	goto	u4251
  9582  0028D4  EF6E  F014         	goto	u4250
  9583  0028D8                     u4251:
  9584  0028D8  EF92  F014         	goto	l3634
  9585  0028DC                     u4250:
  9586  0028DC  0E01               	movlw	1
  9587  0028DE  2601               	addwf	___fldiv@b^0,f,c
  9588  0028E0  0E00               	movlw	0
  9589  0028E2  2202               	addwfc	(___fldiv@b+1)^0,f,c
  9590  0028E4  2203               	addwfc	(___fldiv@b+2)^0,f,c
  9591  0028E6  2204               	addwfc	(___fldiv@b+3)^0,f,c
  9592  0028E8  A004               	btfss	(___fldiv@b+3)^0,0,c
  9593  0028EA  EF79  F014         	goto	u4261
  9594  0028EE  EF7B  F014         	goto	u4260
  9595  0028F2                     u4261:
  9596  0028F2  EF92  F014         	goto	l3634
  9597  0028F6                     u4260:
  9598  0028F6  C001  F009         	movff	___fldiv@b,??___fldiv
  9599  0028FA  C002  F00A         	movff	___fldiv@b+1,??___fldiv+1
  9600  0028FE  C003  F00B         	movff	___fldiv@b+2,??___fldiv+2
  9601  002902  C004  F00C         	movff	___fldiv@b+3,??___fldiv+3
  9602  002906  340C               	rlcf	(??___fldiv+3)^0,w,c
  9603  002908  320C               	rrcf	(??___fldiv+3)^0,f,c
  9604  00290A  320B               	rrcf	(??___fldiv+2)^0,f,c
  9605  00290C  320A               	rrcf	(??___fldiv+1)^0,f,c
  9606  00290E  3209               	rrcf	??___fldiv^0,f,c
  9607  002910  C009  F001         	movff	??___fldiv,___fldiv@b
  9608  002914  C00A  F002         	movff	??___fldiv+1,___fldiv@b+1
  9609  002918  C00B  F003         	movff	??___fldiv+2,___fldiv@b+2
  9610  00291C  C00C  F004         	movff	??___fldiv+3,___fldiv@b+3
  9611  002920  4A12               	infsnz	___fldiv@new_exp^0,f,c
  9612  002922  2A13               	incf	(___fldiv@new_exp+1)^0,f,c
  9613  002924                     l3634:
  9614  002924  BE13               	btfsc	(___fldiv@new_exp+1)^0,7,c
  9615  002926  EF9D  F014         	goto	u4271
  9616  00292A  5013               	movf	(___fldiv@new_exp+1)^0,w,c
  9617  00292C  E108               	bnz	u4270
  9618  00292E  2812               	incf	___fldiv@new_exp^0,w,c
  9619  002930  A0D8               	btfss	status,0,c
  9620  002932  EF9D  F014         	goto	u4271
  9621  002936  EF9F  F014         	goto	u4270
  9622  00293A                     u4271:
  9623  00293A  EFAA  F014         	goto	l3638
  9624  00293E                     u4270:
  9625  00293E  0E00               	movlw	0
  9626  002940  6E13               	movwf	(___fldiv@new_exp+1)^0,c
  9627  002942  6812               	setf	___fldiv@new_exp^0,c
  9628  002944  0E00               	movlw	0
  9629  002946  6E01               	movwf	___fldiv@b^0,c
  9630  002948  0E00               	movlw	0
  9631  00294A  6E02               	movwf	(___fldiv@b+1)^0,c
  9632  00294C  0E00               	movlw	0
  9633  00294E  6E03               	movwf	(___fldiv@b+2)^0,c
  9634  002950  0E00               	movlw	0
  9635  002952  6E04               	movwf	(___fldiv@b+3)^0,c
  9636  002954                     l3638:
  9637  002954  BE13               	btfsc	(___fldiv@new_exp+1)^0,7,c
  9638  002956  EFB7  F014         	goto	u4280
  9639  00295A  5013               	movf	(___fldiv@new_exp+1)^0,w,c
  9640  00295C  E106               	bnz	u4281
  9641  00295E  0412               	decf	___fldiv@new_exp^0,w,c
  9642  002960  B0D8               	btfsc	status,0,c
  9643  002962  EFB5  F014         	goto	u4281
  9644  002966  EFB7  F014         	goto	u4280
  9645  00296A                     u4281:
  9646  00296A  EFC5  F014         	goto	l3642
  9647  00296E                     u4280:
  9648  00296E  0E00               	movlw	0
  9649  002970  6E13               	movwf	(___fldiv@new_exp+1)^0,c
  9650  002972  0E00               	movlw	0
  9651  002974  6E12               	movwf	___fldiv@new_exp^0,c
  9652  002976  0E00               	movlw	0
  9653  002978  6E01               	movwf	___fldiv@b^0,c
  9654  00297A  0E00               	movlw	0
  9655  00297C  6E02               	movwf	(___fldiv@b+1)^0,c
  9656  00297E  0E00               	movlw	0
  9657  002980  6E03               	movwf	(___fldiv@b+2)^0,c
  9658  002982  0E00               	movlw	0
  9659  002984  6E04               	movwf	(___fldiv@b+3)^0,c
  9660  002986  0E00               	movlw	0
  9661  002988  6E11               	movwf	___fldiv@sign^0,c
  9662  00298A                     l3642:
  9663  00298A  C012  F018         	movff	___fldiv@new_exp,___fldiv@bexp
  9664  00298E  A018               	btfss	___fldiv@bexp^0,0,c
  9665  002990  EFCC  F014         	goto	u4291
  9666  002994  EFCE  F014         	goto	u4290
  9667  002998                     u4291:
  9668  002998  EFD1  F014         	goto	l3648
  9669  00299C                     u4290:
  9670  00299C  8E03               	bsf	(___fldiv@b+2)^0,7,c
  9671  00299E  EFD2  F014         	goto	l3650
  9672  0029A2                     l3648:
  9673  0029A2  9E03               	bcf	(___fldiv@b+2)^0,7,c
  9674  0029A4                     l3650:
  9675  0029A4  90D8               	bcf	status,0,c
  9676  0029A6  3018               	rrcf	___fldiv@bexp^0,w,c
  9677  0029A8  6E04               	movwf	(___fldiv@b+3)^0,c
  9678  0029AA  EF88  F013         	goto	l3564
  9679  0029AE                     l771:
  9680  0029AE  0012               	return		;funcret
  9681  0029B0                     __end_of___fldiv:
  9682                           	callstack 0
  9683                           
  9684 ;; *************** function ___awmod *****************
  9685 ;; Defined at:
  9686 ;;		line 7 in file "/Applications/microchip/xc8/v2.31/pic/sources/c99/common/awmod.c"
  9687 ;; Parameters:    Size  Location     Type
  9688 ;;  dividend        2    0[COMRAM] int 
  9689 ;;  divisor         2    2[COMRAM] int 
  9690 ;; Auto vars:     Size  Location     Type
  9691 ;;  sign            1    5[COMRAM] unsigned char 
  9692 ;;  counter         1    4[COMRAM] unsigned char 
  9693 ;; Return value:  Size  Location     Type
  9694 ;;                  2    0[COMRAM] int 
  9695 ;; Registers used:
  9696 ;;		wreg, status,2, status,0
  9697 ;; Tracked objects:
  9698 ;;		On entry : 0/0
  9699 ;;		On exit  : 0/0
  9700 ;;		Unchanged: 0/0
  9701 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  9702 ;;      Params:         4       0       0       0       0       0       0       0       0
  9703 ;;      Locals:         2       0       0       0       0       0       0       0       0
  9704 ;;      Temps:          0       0       0       0       0       0       0       0       0
  9705 ;;      Totals:         6       0       0       0       0       0       0       0       0
  9706 ;;Total ram usage:        6 bytes
  9707 ;; Hardware stack levels used:    1
  9708 ;; This function calls:
  9709 ;;		Nothing
  9710 ;; This function is called by:
  9711 ;;		_Mostrar_Reloj
  9712 ;;		_Alarma
  9713 ;;		_efgtoa
  9714 ;; This function uses a non-reentrant model
  9715 ;;
  9716                           
  9717                           	psect	text35
  9718  004556                     __ptext35:
  9719                           	callstack 0
  9720  004556                     ___awmod:
  9721                           	callstack 25
  9722  004556  0E00               	movlw	0
  9723  004558  6E06               	movwf	___awmod@sign^0,c
  9724  00455A  BE02               	btfsc	(___awmod@dividend+1)^0,7,c
  9725  00455C  EFB4  F022         	goto	u4550
  9726  004560  EFB2  F022         	goto	u4551
  9727  004564                     u4551:
  9728  004564  EFBA  F022         	goto	l3846
  9729  004568                     u4550:
  9730  004568  6C01               	negf	___awmod@dividend^0,c
  9731  00456A  1E02               	comf	(___awmod@dividend+1)^0,f,c
  9732  00456C  B0D8               	btfsc	status,0,c
  9733  00456E  2A02               	incf	(___awmod@dividend+1)^0,f,c
  9734  004570  0E01               	movlw	1
  9735  004572  6E06               	movwf	___awmod@sign^0,c
  9736  004574                     l3846:
  9737  004574  BE04               	btfsc	(___awmod@divisor+1)^0,7,c
  9738  004576  EFC1  F022         	goto	u4560
  9739  00457A  EFBF  F022         	goto	u4561
  9740  00457E                     u4561:
  9741  00457E  EFC5  F022         	goto	l3850
  9742  004582                     u4560:
  9743  004582  6C03               	negf	___awmod@divisor^0,c
  9744  004584  1E04               	comf	(___awmod@divisor+1)^0,f,c
  9745  004586  B0D8               	btfsc	status,0,c
  9746  004588  2A04               	incf	(___awmod@divisor+1)^0,f,c
  9747  00458A                     l3850:
  9748  00458A  5003               	movf	___awmod@divisor^0,w,c
  9749  00458C  1004               	iorwf	(___awmod@divisor+1)^0,w,c
  9750  00458E  B4D8               	btfsc	status,2,c
  9751  004590  EFCC  F022         	goto	u4571
  9752  004594  EFCE  F022         	goto	u4570
  9753  004598                     u4571:
  9754  004598  EFF2  F022         	goto	l3866
  9755  00459C                     u4570:
  9756  00459C  0E01               	movlw	1
  9757  00459E  6E05               	movwf	___awmod@counter^0,c
  9758  0045A0  EFD6  F022         	goto	l3856
  9759  0045A4                     l3854:
  9760  0045A4  90D8               	bcf	status,0,c
  9761  0045A6  3603               	rlcf	___awmod@divisor^0,f,c
  9762  0045A8  3604               	rlcf	(___awmod@divisor+1)^0,f,c
  9763  0045AA  2A05               	incf	___awmod@counter^0,f,c
  9764  0045AC                     l3856:
  9765  0045AC  AE04               	btfss	(___awmod@divisor+1)^0,7,c
  9766  0045AE  EFDB  F022         	goto	u4581
  9767  0045B2  EFDD  F022         	goto	u4580
  9768  0045B6                     u4581:
  9769  0045B6  EFD2  F022         	goto	l3854
  9770  0045BA                     u4580:
  9771  0045BA                     l3858:
  9772  0045BA  5003               	movf	___awmod@divisor^0,w,c
  9773  0045BC  5C01               	subwf	___awmod@dividend^0,w,c
  9774  0045BE  5004               	movf	(___awmod@divisor+1)^0,w,c
  9775  0045C0  5802               	subwfb	(___awmod@dividend+1)^0,w,c
  9776  0045C2  A0D8               	btfss	status,0,c
  9777  0045C4  EFE6  F022         	goto	u4591
  9778  0045C8  EFE8  F022         	goto	u4590
  9779  0045CC                     u4591:
  9780  0045CC  EFEC  F022         	goto	l3862
  9781  0045D0                     u4590:
  9782  0045D0  5003               	movf	___awmod@divisor^0,w,c
  9783  0045D2  5E01               	subwf	___awmod@dividend^0,f,c
  9784  0045D4  5004               	movf	(___awmod@divisor+1)^0,w,c
  9785  0045D6  5A02               	subwfb	(___awmod@dividend+1)^0,f,c
  9786  0045D8                     l3862:
  9787  0045D8  90D8               	bcf	status,0,c
  9788  0045DA  3204               	rrcf	(___awmod@divisor+1)^0,f,c
  9789  0045DC  3203               	rrcf	___awmod@divisor^0,f,c
  9790  0045DE  2E05               	decfsz	___awmod@counter^0,f,c
  9791  0045E0  EFDD  F022         	goto	l3858
  9792  0045E4                     l3866:
  9793  0045E4  5006               	movf	___awmod@sign^0,w,c
  9794  0045E6  B4D8               	btfsc	status,2,c
  9795  0045E8  EFF8  F022         	goto	u4601
  9796  0045EC  EFFA  F022         	goto	u4600
  9797  0045F0                     u4601:
  9798  0045F0  EFFE  F022         	goto	l3870
  9799  0045F4                     u4600:
  9800  0045F4  6C01               	negf	___awmod@dividend^0,c
  9801  0045F6  1E02               	comf	(___awmod@dividend+1)^0,f,c
  9802  0045F8  B0D8               	btfsc	status,0,c
  9803  0045FA  2A02               	incf	(___awmod@dividend+1)^0,f,c
  9804  0045FC                     l3870:
  9805  0045FC  C001  F001         	movff	___awmod@dividend,?___awmod
  9806  004600  C002  F002         	movff	___awmod@dividend+1,?___awmod+1
  9807  004604  0012               	return		;funcret
  9808  004606                     __end_of___awmod:
  9809                           	callstack 0
  9810                           
  9811 ;; *************** function ___awdiv *****************
  9812 ;; Defined at:
  9813 ;;		line 7 in file "/Applications/microchip/xc8/v2.31/pic/sources/c99/common/awdiv.c"
  9814 ;; Parameters:    Size  Location     Type
  9815 ;;  dividend        2    5[COMRAM] int 
  9816 ;;  divisor         2    7[COMRAM] int 
  9817 ;; Auto vars:     Size  Location     Type
  9818 ;;  quotient        2   11[COMRAM] int 
  9819 ;;  sign            1   10[COMRAM] unsigned char 
  9820 ;;  counter         1    9[COMRAM] unsigned char 
  9821 ;; Return value:  Size  Location     Type
  9822 ;;                  2    5[COMRAM] int 
  9823 ;; Registers used:
  9824 ;;		wreg, status,2, status,0
  9825 ;; Tracked objects:
  9826 ;;		On entry : 0/0
  9827 ;;		On exit  : 0/0
  9828 ;;		Unchanged: 0/0
  9829 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  9830 ;;      Params:         4       0       0       0       0       0       0       0       0
  9831 ;;      Locals:         4       0       0       0       0       0       0       0       0
  9832 ;;      Temps:          0       0       0       0       0       0       0       0       0
  9833 ;;      Totals:         8       0       0       0       0       0       0       0       0
  9834 ;;Total ram usage:        8 bytes
  9835 ;; Hardware stack levels used:    1
  9836 ;; This function calls:
  9837 ;;		Nothing
  9838 ;; This function is called by:
  9839 ;;		_SensorLM35
  9840 ;;		_Mostrar_Reloj
  9841 ;;		_Alarma
  9842 ;;		_efgtoa
  9843 ;; This function uses a non-reentrant model
  9844 ;;
  9845                           
  9846                           	psect	text36
  9847  004492                     __ptext36:
  9848                           	callstack 0
  9849  004492                     ___awdiv:
  9850                           	callstack 25
  9851  004492  0E00               	movlw	0
  9852  004494  6E0B               	movwf	___awdiv@sign^0,c
  9853  004496  BE09               	btfsc	(___awdiv@divisor+1)^0,7,c
  9854  004498  EF52  F022         	goto	u4490
  9855  00449C  EF50  F022         	goto	u4491
  9856  0044A0                     u4491:
  9857  0044A0  EF58  F022         	goto	l3802
  9858  0044A4                     u4490:
  9859  0044A4  6C08               	negf	___awdiv@divisor^0,c
  9860  0044A6  1E09               	comf	(___awdiv@divisor+1)^0,f,c
  9861  0044A8  B0D8               	btfsc	status,0,c
  9862  0044AA  2A09               	incf	(___awdiv@divisor+1)^0,f,c
  9863  0044AC  0E01               	movlw	1
  9864  0044AE  6E0B               	movwf	___awdiv@sign^0,c
  9865  0044B0                     l3802:
  9866  0044B0  BE07               	btfsc	(___awdiv@dividend+1)^0,7,c
  9867  0044B2  EF5F  F022         	goto	u4500
  9868  0044B6  EF5D  F022         	goto	u4501
  9869  0044BA                     u4501:
  9870  0044BA  EF65  F022         	goto	l3808
  9871  0044BE                     u4500:
  9872  0044BE  6C06               	negf	___awdiv@dividend^0,c
  9873  0044C0  1E07               	comf	(___awdiv@dividend+1)^0,f,c
  9874  0044C2  B0D8               	btfsc	status,0,c
  9875  0044C4  2A07               	incf	(___awdiv@dividend+1)^0,f,c
  9876  0044C6  0E01               	movlw	1
  9877  0044C8  1A0B               	xorwf	___awdiv@sign^0,f,c
  9878  0044CA                     l3808:
  9879  0044CA  0E00               	movlw	0
  9880  0044CC  6E0D               	movwf	(___awdiv@quotient+1)^0,c
  9881  0044CE  0E00               	movlw	0
  9882  0044D0  6E0C               	movwf	___awdiv@quotient^0,c
  9883  0044D2  5008               	movf	___awdiv@divisor^0,w,c
  9884  0044D4  1009               	iorwf	(___awdiv@divisor+1)^0,w,c
  9885  0044D6  B4D8               	btfsc	status,2,c
  9886  0044D8  EF70  F022         	goto	u4511
  9887  0044DC  EF72  F022         	goto	u4510
  9888  0044E0                     u4511:
  9889  0044E0  EF9A  F022         	goto	l3830
  9890  0044E4                     u4510:
  9891  0044E4  0E01               	movlw	1
  9892  0044E6  6E0A               	movwf	___awdiv@counter^0,c
  9893  0044E8  EF7A  F022         	goto	l3816
  9894  0044EC                     l3814:
  9895  0044EC  90D8               	bcf	status,0,c
  9896  0044EE  3608               	rlcf	___awdiv@divisor^0,f,c
  9897  0044F0  3609               	rlcf	(___awdiv@divisor+1)^0,f,c
  9898  0044F2  2A0A               	incf	___awdiv@counter^0,f,c
  9899  0044F4                     l3816:
  9900  0044F4  AE09               	btfss	(___awdiv@divisor+1)^0,7,c
  9901  0044F6  EF7F  F022         	goto	u4521
  9902  0044FA  EF81  F022         	goto	u4520
  9903  0044FE                     u4521:
  9904  0044FE  EF76  F022         	goto	l3814
  9905  004502                     u4520:
  9906  004502                     l3818:
  9907  004502  90D8               	bcf	status,0,c
  9908  004504  360C               	rlcf	___awdiv@quotient^0,f,c
  9909  004506  360D               	rlcf	(___awdiv@quotient+1)^0,f,c
  9910  004508  5008               	movf	___awdiv@divisor^0,w,c
  9911  00450A  5C06               	subwf	___awdiv@dividend^0,w,c
  9912  00450C  5009               	movf	(___awdiv@divisor+1)^0,w,c
  9913  00450E  5807               	subwfb	(___awdiv@dividend+1)^0,w,c
  9914  004510  A0D8               	btfss	status,0,c
  9915  004512  EF8D  F022         	goto	u4531
  9916  004516  EF8F  F022         	goto	u4530
  9917  00451A                     u4531:
  9918  00451A  EF94  F022         	goto	l3826
  9919  00451E                     u4530:
  9920  00451E  5008               	movf	___awdiv@divisor^0,w,c
  9921  004520  5E06               	subwf	___awdiv@dividend^0,f,c
  9922  004522  5009               	movf	(___awdiv@divisor+1)^0,w,c
  9923  004524  5A07               	subwfb	(___awdiv@dividend+1)^0,f,c
  9924  004526  800C               	bsf	___awdiv@quotient^0,0,c
  9925  004528                     l3826:
  9926  004528  90D8               	bcf	status,0,c
  9927  00452A  3209               	rrcf	(___awdiv@divisor+1)^0,f,c
  9928  00452C  3208               	rrcf	___awdiv@divisor^0,f,c
  9929  00452E  2E0A               	decfsz	___awdiv@counter^0,f,c
  9930  004530  EF81  F022         	goto	l3818
  9931  004534                     l3830:
  9932  004534  500B               	movf	___awdiv@sign^0,w,c
  9933  004536  B4D8               	btfsc	status,2,c
  9934  004538  EFA0  F022         	goto	u4541
  9935  00453C  EFA2  F022         	goto	u4540
  9936  004540                     u4541:
  9937  004540  EFA6  F022         	goto	l3834
  9938  004544                     u4540:
  9939  004544  6C0C               	negf	___awdiv@quotient^0,c
  9940  004546  1E0D               	comf	(___awdiv@quotient+1)^0,f,c
  9941  004548  B0D8               	btfsc	status,0,c
  9942  00454A  2A0D               	incf	(___awdiv@quotient+1)^0,f,c
  9943  00454C                     l3834:
  9944  00454C  C00C  F006         	movff	___awdiv@quotient,?___awdiv
  9945  004550  C00D  F007         	movff	___awdiv@quotient+1,?___awdiv+1
  9946  004554  0012               	return		;funcret
  9947  004556                     __end_of___awdiv:
  9948                           	callstack 0
  9949                           
  9950 ;; *************** function _dtoa *****************
  9951 ;; Defined at:
  9952 ;;		line 287 in file "/Applications/microchip/xc8/v2.31/pic/sources/c99/common/doprnt.c"
  9953 ;; Parameters:    Size  Location     Type
  9954 ;;  fp              2   30[COMRAM] PTR struct _IO_FILE
  9955 ;;		 -> NULL(0), sprintf@f(6), 
  9956 ;;  d               8   32[COMRAM] long long 
  9957 ;; Auto vars:     Size  Location     Type
  9958 ;;  n               8   56[COMRAM] long long 
  9959 ;;  i               2   64[COMRAM] int 
  9960 ;;  s               2   54[COMRAM] int 
  9961 ;;  w               2   52[COMRAM] int 
  9962 ;;  p               2   50[COMRAM] int 
  9963 ;; Return value:  Size  Location     Type
  9964 ;;                  2   30[COMRAM] int 
  9965 ;; Registers used:
  9966 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
  9967 ;; Tracked objects:
  9968 ;;		On entry : 0/0
  9969 ;;		On exit  : 0/0
  9970 ;;		Unchanged: 0/0
  9971 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  9972 ;;      Params:        10       0       0       0       0       0       0       0       0
  9973 ;;      Locals:        18       0       0       0       0       0       0       0       0
  9974 ;;      Temps:          8       0       0       0       0       0       0       0       0
  9975 ;;      Totals:        36       0       0       0       0       0       0       0       0
  9976 ;;Total ram usage:       36 bytes
  9977 ;; Hardware stack levels used:    1
  9978 ;; Hardware stack levels required when called:    4
  9979 ;; This function calls:
  9980 ;;		___aodiv
  9981 ;;		___aomod
  9982 ;;		_abs
  9983 ;;		_pad
  9984 ;; This function is called by:
  9985 ;;		_vfpfcnvrt
  9986 ;; This function uses a non-reentrant model
  9987 ;;
  9988                           
  9989                           	psect	text37
  9990  0029B0                     __ptext37:
  9991                           	callstack 0
  9992  0029B0                     _dtoa:
  9993                           	callstack 22
  9994  0029B0                     
  9995                           ;/Applications/microchip/xc8/v2.31/pic/sources/c99/common/doprnt.c: 287: static int dtoa
      +                          (FILE *fp, long long d);/Applications/microchip/xc8/v2.31/pic/sources/c99/common/doprnt.
      +                          c: 288: {;/Applications/microchip/xc8/v2.31/pic/sources/c99/common/doprnt.c: 289:     in
      +                          t i, p, s, w;;/Applications/microchip/xc8/v2.31/pic/sources/c99/common/doprnt.c: 290:   
      +                            long long n;;/Applications/microchip/xc8/v2.31/pic/sources/c99/common/doprnt.c: 293:  
      +                             n = d;
  9996  0029B0  C021  F039         	movff	dtoa@d,dtoa@n
  9997  0029B4  C022  F03A         	movff	dtoa@d+1,dtoa@n+1
  9998  0029B8  C023  F03B         	movff	dtoa@d+2,dtoa@n+2
  9999  0029BC  C024  F03C         	movff	dtoa@d+3,dtoa@n+3
 10000  0029C0  C025  F03D         	movff	dtoa@d+4,dtoa@n+4
 10001  0029C4  C026  F03E         	movff	dtoa@d+5,dtoa@n+5
 10002  0029C8  C027  F03F         	movff	dtoa@d+6,dtoa@n+6
 10003  0029CC  C028  F040         	movff	dtoa@d+7,dtoa@n+7
 10004  0029D0                     
 10005                           ;/Applications/microchip/xc8/v2.31/pic/sources/c99/common/doprnt.c: 294:     s = n < 0 ?
      +                           1 : 0;
 10006  0029D0  BE40               	btfsc	(dtoa@n+7)^0,7,c
 10007  0029D2  EFED  F014         	goto	u5031
 10008  0029D6  EFF0  F014         	goto	u5030
 10009  0029DA                     u5031:
 10010  0029DA  0E01               	movlw	1
 10011  0029DC  EFF1  F014         	goto	u5040
 10012  0029E0                     u5030:
 10013  0029E0  0E00               	movlw	0
 10014  0029E2                     u5040:
 10015  0029E2  6E37               	movwf	dtoa@s^0,c
 10016  0029E4  6A38               	clrf	(dtoa@s+1)^0,c
 10017                           
 10018                           ;/Applications/microchip/xc8/v2.31/pic/sources/c99/common/doprnt.c: 295:     if (s) {
 10019  0029E6  5037               	movf	dtoa@s^0,w,c
 10020  0029E8  1038               	iorwf	(dtoa@s+1)^0,w,c
 10021  0029EA  B4D8               	btfsc	status,2,c
 10022  0029EC  EFFA  F014         	goto	u5051
 10023  0029F0  EFFC  F014         	goto	u5050
 10024  0029F4                     u5051:
 10025  0029F4  EF0C  F015         	goto	l4076
 10026  0029F8                     u5050:
 10027  0029F8                     
 10028                           ;/Applications/microchip/xc8/v2.31/pic/sources/c99/common/doprnt.c: 296:         n = -n;
 10029  0029F8  1E40               	comf	(dtoa@n+7)^0,f,c
 10030  0029FA  1E3F               	comf	(dtoa@n+6)^0,f,c
 10031  0029FC  1E3E               	comf	(dtoa@n+5)^0,f,c
 10032  0029FE  1E3D               	comf	(dtoa@n+4)^0,f,c
 10033  002A00  1E3C               	comf	(dtoa@n+3)^0,f,c
 10034  002A02  1E3B               	comf	(dtoa@n+2)^0,f,c
 10035  002A04  1E3A               	comf	(dtoa@n+1)^0,f,c
 10036  002A06  6C39               	negf	dtoa@n^0,c
 10037  002A08  0E00               	movlw	0
 10038  002A0A  223A               	addwfc	(dtoa@n+1)^0,f,c
 10039  002A0C  223B               	addwfc	(dtoa@n+2)^0,f,c
 10040  002A0E  223C               	addwfc	(dtoa@n+3)^0,f,c
 10041  002A10  223D               	addwfc	(dtoa@n+4)^0,f,c
 10042  002A12  223E               	addwfc	(dtoa@n+5)^0,f,c
 10043  002A14  223F               	addwfc	(dtoa@n+6)^0,f,c
 10044  002A16  2240               	addwfc	(dtoa@n+7)^0,f,c
 10045  002A18                     l4076:
 10046                           
 10047                           ;/Applications/microchip/xc8/v2.31/pic/sources/c99/common/doprnt.c: 300:     if (!(prec 
      +                          < 0)) {
 10048  002A18  0100               	movlb	0	; () banked
 10049  002A1A  BFD7               	btfsc	(_prec+1)& (0+255),7,b
 10050  002A1C  EF12  F015         	goto	u5061
 10051  002A20  EF14  F015         	goto	u5060
 10052  002A24                     u5061:
 10053  002A24  EF15  F015         	goto	l4080
 10054  002A28                     u5060:
 10055  002A28                     
 10056                           ; BSR set to: 0
 10057                           ;/Applications/microchip/xc8/v2.31/pic/sources/c99/common/doprnt.c: 301:         flags &
      +                          = ~(1 << 1);
 10058  002A28  93D8               	bcf	_flags& (0+255),1,b
 10059  002A2A                     l4080:
 10060                           
 10061                           ; BSR set to: 0
 10062                           ;/Applications/microchip/xc8/v2.31/pic/sources/c99/common/doprnt.c: 303:     p = (0 < pr
      +                          ec) ? prec : 1;
 10063  002A2A  BFD7               	btfsc	(_prec+1)& (0+255),7,b
 10064  002A2C  EF22  F015         	goto	u5070
 10065  002A30  51D7               	movf	(_prec+1)& (0+255),w,b
 10066  002A32  E106               	bnz	u5071
 10067  002A34  05D6               	decf	_prec& (0+255),w,b
 10068  002A36  B0D8               	btfsc	status,0,c
 10069  002A38  EF20  F015         	goto	u5071
 10070  002A3C  EF22  F015         	goto	u5070
 10071  002A40                     u5071:
 10072  002A40  EF28  F015         	goto	l963
 10073  002A44                     u5070:
 10074  002A44                     
 10075                           ; BSR set to: 0
 10076  002A44  0E00               	movlw	0
 10077  002A46  6E34               	movwf	(dtoa@p+1)^0,c
 10078  002A48  0E01               	movlw	1
 10079  002A4A  6E33               	movwf	dtoa@p^0,c
 10080  002A4C  EF2C  F015         	goto	l965
 10081  002A50                     l963:
 10082                           
 10083                           ; BSR set to: 0
 10084  002A50  C0D6  F033         	movff	_prec,dtoa@p
 10085  002A54  C0D7  F034         	movff	_prec+1,dtoa@p+1
 10086  002A58                     l965:
 10087                           
 10088                           ; BSR set to: 0
 10089                           ;/Applications/microchip/xc8/v2.31/pic/sources/c99/common/doprnt.c: 304:     w = width;
 10090  002A58  C0D4  F035         	movff	_width,dtoa@w
 10091  002A5C  C0D5  F036         	movff	_width+1,dtoa@w+1
 10092  002A60                     
 10093                           ; BSR set to: 0
 10094                           ;/Applications/microchip/xc8/v2.31/pic/sources/c99/common/doprnt.c: 305:     if (s || (f
      +                          lags & (1 << 2))) {
 10095  002A60  5037               	movf	dtoa@s^0,w,c
 10096  002A62  1038               	iorwf	(dtoa@s+1)^0,w,c
 10097  002A64  A4D8               	btfss	status,2,c
 10098  002A66  EF37  F015         	goto	u5081
 10099  002A6A  EF39  F015         	goto	u5080
 10100  002A6E                     u5081:
 10101  002A6E  EF40  F015         	goto	l4088
 10102  002A72                     u5080:
 10103  002A72                     
 10104                           ; BSR set to: 0
 10105  002A72  A5D8               	btfss	_flags& (0+255),2,b
 10106  002A74  EF3E  F015         	goto	u5091
 10107  002A78  EF40  F015         	goto	u5090
 10108  002A7C                     u5091:
 10109  002A7C  EF43  F015         	goto	l4090
 10110  002A80                     u5090:
 10111  002A80                     l4088:
 10112                           
 10113                           ; BSR set to: 0
 10114                           ;/Applications/microchip/xc8/v2.31/pic/sources/c99/common/doprnt.c: 306:         --w;
 10115  002A80  0635               	decf	dtoa@w^0,f,c
 10116  002A82  A0D8               	btfss	status,0,c
 10117  002A84  0636               	decf	(dtoa@w+1)^0,f,c
 10118  002A86                     l4090:
 10119                           
 10120                           ; BSR set to: 0
 10121                           ;/Applications/microchip/xc8/v2.31/pic/sources/c99/common/doprnt.c: 310:     i = sizeof(
      +                          dbuf) - 1;
 10122  002A86  0E00               	movlw	0
 10123  002A88  6E42               	movwf	(dtoa@i+1)^0,c
 10124  002A8A  0E4F               	movlw	79
 10125  002A8C  6E41               	movwf	dtoa@i^0,c
 10126  002A8E                     
 10127                           ; BSR set to: 0
 10128                           ;/Applications/microchip/xc8/v2.31/pic/sources/c99/common/doprnt.c: 311:     dbuf[i] = '
      +                          \0';
 10129  002A8E  0E00               	movlw	0
 10130  002A90  0101               	movlb	1	; () banked
 10131  002A92  6F65               	movwf	(_dbuf+79)& (0+255),b
 10132                           
 10133                           ;/Applications/microchip/xc8/v2.31/pic/sources/c99/common/doprnt.c: 312:     while (!(i 
      +                          < 1) && (n || (0 < p) || ((0 < w) && (flags & (1 << 1))))) {
 10134  002A94  EFC8  F015         	goto	l4104
 10135  002A98                     l4094:
 10136                           
 10137                           ;/Applications/microchip/xc8/v2.31/pic/sources/c99/common/doprnt.c: 313:         --i;
 10138  002A98  0641               	decf	dtoa@i^0,f,c
 10139  002A9A  A0D8               	btfss	status,0,c
 10140  002A9C  0642               	decf	(dtoa@i+1)^0,f,c
 10141  002A9E                     
 10142                           ;/Applications/microchip/xc8/v2.31/pic/sources/c99/common/doprnt.c: 314:         dbuf[i]
      +                           = (char)((int)'0' + abs(n % 10));
 10143  002A9E  0E16               	movlw	low _dbuf
 10144  002AA0  2441               	addwf	dtoa@i^0,w,c
 10145  002AA2  6ED9               	movwf	fsr2l,c
 10146  002AA4  0E01               	movlw	high _dbuf
 10147  002AA6  2042               	addwfc	(dtoa@i+1)^0,w,c
 10148  002AA8  6EDA               	movwf	fsr2h,c
 10149  002AAA  C039  F001         	movff	dtoa@n,___aomod@dividend
 10150  002AAE  C03A  F002         	movff	dtoa@n+1,___aomod@dividend+1
 10151  002AB2  C03B  F003         	movff	dtoa@n+2,___aomod@dividend+2
 10152  002AB6  C03C  F004         	movff	dtoa@n+3,___aomod@dividend+3
 10153  002ABA  C03D  F005         	movff	dtoa@n+4,___aomod@dividend+4
 10154  002ABE  C03E  F006         	movff	dtoa@n+5,___aomod@dividend+5
 10155  002AC2  C03F  F007         	movff	dtoa@n+6,___aomod@dividend+6
 10156  002AC6  C040  F008         	movff	dtoa@n+7,___aomod@dividend+7
 10157  002ACA  0E0A               	movlw	10
 10158  002ACC  6E09               	movwf	___aomod@divisor^0,c
 10159  002ACE  0E00               	movlw	0
 10160  002AD0  6E0A               	movwf	(___aomod@divisor+1)^0,c
 10161  002AD2  0E00               	movlw	0
 10162  002AD4  6E0B               	movwf	(___aomod@divisor+2)^0,c
 10163  002AD6  0E00               	movlw	0
 10164  002AD8  6E0C               	movwf	(___aomod@divisor+3)^0,c
 10165  002ADA  0E00               	movlw	0
 10166  002ADC  6E0D               	movwf	(___aomod@divisor+4)^0,c
 10167  002ADE  0E00               	movlw	0
 10168  002AE0  6E0E               	movwf	(___aomod@divisor+5)^0,c
 10169  002AE2  0E00               	movlw	0
 10170  002AE4  6E0F               	movwf	(___aomod@divisor+6)^0,c
 10171  002AE6  0E00               	movlw	0
 10172  002AE8  6E10               	movwf	(___aomod@divisor+7)^0,c
 10173  002AEA  EC48  F01D         	call	___aomod	;wreg free
 10174  002AEE  C001  F029         	movff	?___aomod,??_dtoa
 10175  002AF2  C002  F02A         	movff	?___aomod+1,??_dtoa+1
 10176  002AF6  C003  F02B         	movff	?___aomod+2,??_dtoa+2
 10177  002AFA  C004  F02C         	movff	?___aomod+3,??_dtoa+3
 10178  002AFE  C005  F02D         	movff	?___aomod+4,??_dtoa+4
 10179  002B02  C006  F02E         	movff	?___aomod+5,??_dtoa+5
 10180  002B06  C007  F02F         	movff	?___aomod+6,??_dtoa+6
 10181  002B0A  C008  F030         	movff	?___aomod+7,??_dtoa+7
 10182  002B0E  C029  F013         	movff	??_dtoa,abs@a
 10183  002B12  C02B  F014         	movff	??_dtoa+2,abs@a+1
 10184  002B16  ECF2  F025         	call	_abs	;wreg free
 10185  002B1A  5013               	movf	?_abs^0,w,c
 10186  002B1C  0F30               	addlw	48
 10187  002B1E  6EDF               	movwf	indf2,c
 10188  002B20                     
 10189                           ;/Applications/microchip/xc8/v2.31/pic/sources/c99/common/doprnt.c: 315:         --p;
 10190  002B20  0633               	decf	dtoa@p^0,f,c
 10191  002B22  A0D8               	btfss	status,0,c
 10192  002B24  0634               	decf	(dtoa@p+1)^0,f,c
 10193  002B26                     
 10194                           ;/Applications/microchip/xc8/v2.31/pic/sources/c99/common/doprnt.c: 316:         --w;
 10195  002B26  0635               	decf	dtoa@w^0,f,c
 10196  002B28  A0D8               	btfss	status,0,c
 10197  002B2A  0636               	decf	(dtoa@w+1)^0,f,c
 10198  002B2C                     
 10199                           ;/Applications/microchip/xc8/v2.31/pic/sources/c99/common/doprnt.c: 317:         n = n /
      +                           10;
 10200  002B2C  C039  F001         	movff	dtoa@n,___aodiv@dividend
 10201  002B30  C03A  F002         	movff	dtoa@n+1,___aodiv@dividend+1
 10202  002B34  C03B  F003         	movff	dtoa@n+2,___aodiv@dividend+2
 10203  002B38  C03C  F004         	movff	dtoa@n+3,___aodiv@dividend+3
 10204  002B3C  C03D  F005         	movff	dtoa@n+4,___aodiv@dividend+4
 10205  002B40  C03E  F006         	movff	dtoa@n+5,___aodiv@dividend+5
 10206  002B44  C03F  F007         	movff	dtoa@n+6,___aodiv@dividend+6
 10207  002B48  C040  F008         	movff	dtoa@n+7,___aodiv@dividend+7
 10208  002B4C  0E0A               	movlw	10
 10209  002B4E  6E09               	movwf	___aodiv@divisor^0,c
 10210  002B50  0E00               	movlw	0
 10211  002B52  6E0A               	movwf	(___aodiv@divisor+1)^0,c
 10212  002B54  0E00               	movlw	0
 10213  002B56  6E0B               	movwf	(___aodiv@divisor+2)^0,c
 10214  002B58  0E00               	movlw	0
 10215  002B5A  6E0C               	movwf	(___aodiv@divisor+3)^0,c
 10216  002B5C  0E00               	movlw	0
 10217  002B5E  6E0D               	movwf	(___aodiv@divisor+4)^0,c
 10218  002B60  0E00               	movlw	0
 10219  002B62  6E0E               	movwf	(___aodiv@divisor+5)^0,c
 10220  002B64  0E00               	movlw	0
 10221  002B66  6E0F               	movwf	(___aodiv@divisor+6)^0,c
 10222  002B68  0E00               	movlw	0
 10223  002B6A  6E10               	movwf	(___aodiv@divisor+7)^0,c
 10224  002B6C  EC84  F01C         	call	___aodiv	;wreg free
 10225  002B70  C001  F039         	movff	?___aodiv,dtoa@n
 10226  002B74  C002  F03A         	movff	?___aodiv+1,dtoa@n+1
 10227  002B78  C003  F03B         	movff	?___aodiv+2,dtoa@n+2
 10228  002B7C  C004  F03C         	movff	?___aodiv+3,dtoa@n+3
 10229  002B80  C005  F03D         	movff	?___aodiv+4,dtoa@n+4
 10230  002B84  C006  F03E         	movff	?___aodiv+5,dtoa@n+5
 10231  002B88  C007  F03F         	movff	?___aodiv+6,dtoa@n+6
 10232  002B8C  C008  F040         	movff	?___aodiv+7,dtoa@n+7
 10233  002B90                     l4104:
 10234                           
 10235                           ;/Applications/microchip/xc8/v2.31/pic/sources/c99/common/doprnt.c: 312:     while (!(i 
      +                          < 1) && (n || (0 < p) || ((0 < w) && (flags & (1 << 1))))) {
 10236  002B90  BE42               	btfsc	(dtoa@i+1)^0,7,c
 10237  002B92  EFD3  F015         	goto	u5101
 10238  002B96  5042               	movf	(dtoa@i+1)^0,w,c
 10239  002B98  E108               	bnz	u5100
 10240  002B9A  0441               	decf	dtoa@i^0,w,c
 10241  002B9C  A0D8               	btfss	status,0,c
 10242  002B9E  EFD3  F015         	goto	u5101
 10243  002BA2  EFD5  F015         	goto	u5100
 10244  002BA6                     u5101:
 10245  002BA6  EF06  F016         	goto	l4114
 10246  002BAA                     u5100:
 10247  002BAA  5039               	movf	dtoa@n^0,w,c
 10248  002BAC  103A               	iorwf	(dtoa@n+1)^0,w,c
 10249  002BAE  103B               	iorwf	(dtoa@n+2)^0,w,c
 10250  002BB0  103C               	iorwf	(dtoa@n+3)^0,w,c
 10251  002BB2  103D               	iorwf	(dtoa@n+4)^0,w,c
 10252  002BB4  103E               	iorwf	(dtoa@n+5)^0,w,c
 10253  002BB6  103F               	iorwf	(dtoa@n+6)^0,w,c
 10254  002BB8  1040               	iorwf	(dtoa@n+7)^0,w,c
 10255  002BBA  A4D8               	btfss	status,2,c
 10256  002BBC  EFE2  F015         	goto	u5111
 10257  002BC0  EFE4  F015         	goto	u5110
 10258  002BC4                     u5111:
 10259  002BC4  EF4C  F015         	goto	l4094
 10260  002BC8                     u5110:
 10261  002BC8  BE34               	btfsc	(dtoa@p+1)^0,7,c
 10262  002BCA  EFF1  F015         	goto	u5120
 10263  002BCE  5034               	movf	(dtoa@p+1)^0,w,c
 10264  002BD0  E106               	bnz	u5121
 10265  002BD2  0433               	decf	dtoa@p^0,w,c
 10266  002BD4  B0D8               	btfsc	status,0,c
 10267  002BD6  EFEF  F015         	goto	u5121
 10268  002BDA  EFF1  F015         	goto	u5120
 10269  002BDE                     u5121:
 10270  002BDE  EF4C  F015         	goto	l4094
 10271  002BE2                     u5120:
 10272  002BE2  BE36               	btfsc	(dtoa@w+1)^0,7,c
 10273  002BE4  EFFC  F015         	goto	u5131
 10274  002BE8  5036               	movf	(dtoa@w+1)^0,w,c
 10275  002BEA  E108               	bnz	u5130
 10276  002BEC  0435               	decf	dtoa@w^0,w,c
 10277  002BEE  A0D8               	btfss	status,0,c
 10278  002BF0  EFFC  F015         	goto	u5131
 10279  002BF4  EFFE  F015         	goto	u5130
 10280  002BF8                     u5131:
 10281  002BF8  EF06  F016         	goto	l4114
 10282  002BFC                     u5130:
 10283  002BFC  0100               	movlb	0	; () banked
 10284  002BFE  B3D8               	btfsc	_flags& (0+255),1,b
 10285  002C00  EF04  F016         	goto	u5141
 10286  002C04  EF06  F016         	goto	u5140
 10287  002C08                     u5141:
 10288  002C08  EF4C  F015         	goto	l4094
 10289  002C0C                     u5140:
 10290  002C0C                     l4114:
 10291                           
 10292                           ;/Applications/microchip/xc8/v2.31/pic/sources/c99/common/doprnt.c: 321:     if (s || (f
      +                          lags & (1 << 2))) {
 10293  002C0C  5037               	movf	dtoa@s^0,w,c
 10294  002C0E  1038               	iorwf	(dtoa@s+1)^0,w,c
 10295  002C10  A4D8               	btfss	status,2,c
 10296  002C12  EF0D  F016         	goto	u5151
 10297  002C16  EF0F  F016         	goto	u5150
 10298  002C1A                     u5151:
 10299  002C1A  EF17  F016         	goto	l4118
 10300  002C1E                     u5150:
 10301  002C1E  0100               	movlb	0	; () banked
 10302  002C20  A5D8               	btfss	_flags& (0+255),2,b
 10303  002C22  EF15  F016         	goto	u5161
 10304  002C26  EF17  F016         	goto	u5160
 10305  002C2A                     u5161:
 10306  002C2A  EF35  F016         	goto	l4128
 10307  002C2E                     u5160:
 10308  002C2E                     l4118:
 10309                           
 10310                           ;/Applications/microchip/xc8/v2.31/pic/sources/c99/common/doprnt.c: 322:         --i;
 10311  002C2E  0641               	decf	dtoa@i^0,f,c
 10312  002C30  A0D8               	btfss	status,0,c
 10313  002C32  0642               	decf	(dtoa@i+1)^0,f,c
 10314  002C34                     
 10315                           ;/Applications/microchip/xc8/v2.31/pic/sources/c99/common/doprnt.c: 323:         dbuf[i]
      +                           = s ? '-' : '+';
 10316  002C34  5037               	movf	dtoa@s^0,w,c
 10317  002C36  1038               	iorwf	(dtoa@s+1)^0,w,c
 10318  002C38  A4D8               	btfss	status,2,c
 10319  002C3A  EF21  F016         	goto	u5171
 10320  002C3E  EF23  F016         	goto	u5170
 10321  002C42                     u5171:
 10322  002C42  EF29  F016         	goto	l4124
 10323  002C46                     u5170:
 10324  002C46  0E00               	movlw	0
 10325  002C48  6E32               	movwf	(_dtoa$1243+1)^0,c
 10326  002C4A  0E2B               	movlw	43
 10327  002C4C  6E31               	movwf	_dtoa$1243^0,c
 10328  002C4E  EF2D  F016         	goto	l4126
 10329  002C52                     l4124:
 10330  002C52  0E00               	movlw	0
 10331  002C54  6E32               	movwf	(_dtoa$1243+1)^0,c
 10332  002C56  0E2D               	movlw	45
 10333  002C58  6E31               	movwf	_dtoa$1243^0,c
 10334  002C5A                     l4126:
 10335  002C5A  0E16               	movlw	low _dbuf
 10336  002C5C  2441               	addwf	dtoa@i^0,w,c
 10337  002C5E  6ED9               	movwf	fsr2l,c
 10338  002C60  0E01               	movlw	high _dbuf
 10339  002C62  2042               	addwfc	(dtoa@i+1)^0,w,c
 10340  002C64  6EDA               	movwf	fsr2h,c
 10341  002C66  C031  FFDF         	movff	_dtoa$1243,indf2
 10342  002C6A                     l4128:
 10343                           
 10344                           ;/Applications/microchip/xc8/v2.31/pic/sources/c99/common/doprnt.c: 327:     return pad(
      +                          fp, &dbuf[i], w);
 10345  002C6A  C01F  F014         	movff	dtoa@fp,pad@fp
 10346  002C6E  C020  F015         	movff	dtoa@fp+1,pad@fp+1
 10347  002C72  0E16               	movlw	low _dbuf
 10348  002C74  2441               	addwf	dtoa@i^0,w,c
 10349  002C76  6E16               	movwf	pad@buf^0,c
 10350  002C78  0E01               	movlw	high _dbuf
 10351  002C7A  2042               	addwfc	(dtoa@i+1)^0,w,c
 10352  002C7C  6E17               	movwf	(pad@buf+1)^0,c
 10353  002C7E  C035  F018         	movff	dtoa@w,pad@p
 10354  002C82  C036  F019         	movff	dtoa@w+1,pad@p+1
 10355  002C86  ECE6  F021         	call	_pad	;wreg free
 10356  002C8A  C014  F01F         	movff	?_pad,?_dtoa
 10357  002C8E  C015  F020         	movff	?_pad+1,?_dtoa+1
 10358  002C92  0012               	return		;funcret
 10359  002C94                     __end_of_dtoa:
 10360                           	callstack 0
 10361                           
 10362 ;; *************** function _pad *****************
 10363 ;; Defined at:
 10364 ;;		line 72 in file "/Applications/microchip/xc8/v2.31/pic/sources/c99/common/doprnt.c"
 10365 ;; Parameters:    Size  Location     Type
 10366 ;;  fp              2   19[COMRAM] PTR struct _IO_FILE
 10367 ;;		 -> NULL(0), sprintf@f(6), 
 10368 ;;  buf             2   21[COMRAM] PTR unsigned char 
 10369 ;;		 -> dbuf(80), 
 10370 ;;  p               2   23[COMRAM] int 
 10371 ;; Auto vars:     Size  Location     Type
 10372 ;;  w               2   28[COMRAM] int 
 10373 ;;  i               2   26[COMRAM] int 
 10374 ;; Return value:  Size  Location     Type
 10375 ;;                  2   19[COMRAM] int 
 10376 ;; Registers used:
 10377 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
 10378 ;; Tracked objects:
 10379 ;;		On entry : 0/0
 10380 ;;		On exit  : 0/0
 10381 ;;		Unchanged: 0/0
 10382 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 10383 ;;      Params:         6       0       0       0       0       0       0       0       0
 10384 ;;      Locals:         4       0       0       0       0       0       0       0       0
 10385 ;;      Temps:          1       0       0       0       0       0       0       0       0
 10386 ;;      Totals:        11       0       0       0       0       0       0       0       0
 10387 ;;Total ram usage:       11 bytes
 10388 ;; Hardware stack levels used:    1
 10389 ;; Hardware stack levels required when called:    3
 10390 ;; This function calls:
 10391 ;;		_fputc
 10392 ;;		_fputs
 10393 ;;		_strlen
 10394 ;; This function is called by:
 10395 ;;		_dtoa
 10396 ;;		_efgtoa
 10397 ;; This function uses a non-reentrant model
 10398 ;;
 10399                           
 10400                           	psect	text38
 10401  0043CC                     __ptext38:
 10402                           	callstack 0
 10403  0043CC                     _pad:
 10404                           	callstack 22
 10405  0043CC                     
 10406                           ;/Applications/microchip/xc8/v2.31/pic/sources/c99/common/doprnt.c: 72: static int pad(F
      +                          ILE *fp, char *buf, int p);/Applications/microchip/xc8/v2.31/pic/sources/c99/common/dopr
      +                          nt.c: 73: {;/Applications/microchip/xc8/v2.31/pic/sources/c99/common/doprnt.c: 74:     i
      +                          nt i, w;;/Applications/microchip/xc8/v2.31/pic/sources/c99/common/doprnt.c: 77:     if (
      +                          flags & (1 << 0)) {
 10407  0043CC  0100               	movlb	0	; () banked
 10408  0043CE  A1D8               	btfss	_flags& (0+255),0,b
 10409  0043D0  EFEC  F021         	goto	u4771
 10410  0043D4  EFEE  F021         	goto	u4770
 10411  0043D8                     u4771:
 10412  0043D8  EFF8  F021         	goto	l3968
 10413  0043DC                     u4770:
 10414  0043DC                     
 10415                           ; BSR set to: 0
 10416                           ;/Applications/microchip/xc8/v2.31/pic/sources/c99/common/doprnt.c: 78:         fputs((c
      +                          onst char *)buf, fp);
 10417  0043DC  C016  F00D         	movff	pad@buf,fputs@s
 10418  0043E0  C017  F00E         	movff	pad@buf+1,fputs@s+1
 10419  0043E4  C014  F00F         	movff	pad@fp,fputs@fp
 10420  0043E8  C015  F010         	movff	pad@fp+1,fputs@fp+1
 10421  0043EC  ECAF  F025         	call	_fputs	;wreg free
 10422  0043F0                     l3968:
 10423                           
 10424                           ;/Applications/microchip/xc8/v2.31/pic/sources/c99/common/doprnt.c: 82:     w = (p < 0) 
      +                          ? 0 : p;
 10425  0043F0  BE19               	btfsc	(pad@p+1)^0,7,c
 10426  0043F2  EFFD  F021         	goto	u4781
 10427  0043F6  EFFF  F021         	goto	u4780
 10428  0043FA                     u4781:
 10429  0043FA  EF05  F022         	goto	l3972
 10430  0043FE                     u4780:
 10431  0043FE  C018  F01D         	movff	pad@p,pad@w
 10432  004402  C019  F01E         	movff	pad@p+1,pad@w+1
 10433  004406  EF09  F022         	goto	l936
 10434  00440A                     l3972:
 10435  00440A  0E00               	movlw	0
 10436  00440C  6E1E               	movwf	(pad@w+1)^0,c
 10437  00440E  0E00               	movlw	0
 10438  004410  6E1D               	movwf	pad@w^0,c
 10439  004412                     l936:
 10440                           
 10441                           ;/Applications/microchip/xc8/v2.31/pic/sources/c99/common/doprnt.c: 83:     i = 0;
 10442  004412  0E00               	movlw	0
 10443  004414  6E1C               	movwf	(pad@i+1)^0,c
 10444  004416  0E00               	movlw	0
 10445  004418  6E1B               	movwf	pad@i^0,c
 10446                           
 10447                           ;/Applications/microchip/xc8/v2.31/pic/sources/c99/common/doprnt.c: 84:     while (i < w
      +                          ) {
 10448  00441A  EF1B  F022         	goto	l3978
 10449  00441E                     l3974:
 10450                           
 10451                           ;/Applications/microchip/xc8/v2.31/pic/sources/c99/common/doprnt.c: 85:         fputc(' 
      +                          ', fp);
 10452  00441E  0E00               	movlw	0
 10453  004420  6E05               	movwf	(fputc@c+1)^0,c
 10454  004422  0E20               	movlw	32
 10455  004424  6E04               	movwf	fputc@c^0,c
 10456  004426  C014  F006         	movff	pad@fp,fputc@fp
 10457  00442A  C015  F007         	movff	pad@fp+1,fputc@fp+1
 10458  00442E  EC81  F021         	call	_fputc	;wreg free
 10459  004432                     
 10460                           ;/Applications/microchip/xc8/v2.31/pic/sources/c99/common/doprnt.c: 86:         ++i;
 10461  004432  4A1B               	infsnz	pad@i^0,f,c
 10462  004434  2A1C               	incf	(pad@i+1)^0,f,c
 10463  004436                     l3978:
 10464                           
 10465                           ;/Applications/microchip/xc8/v2.31/pic/sources/c99/common/doprnt.c: 84:     while (i < w
      +                          ) {
 10466  004436  501D               	movf	pad@w^0,w,c
 10467  004438  5C1B               	subwf	pad@i^0,w,c
 10468  00443A  501C               	movf	(pad@i+1)^0,w,c
 10469  00443C  0A80               	xorlw	128
 10470  00443E  6E1A               	movwf	??_pad^0,c
 10471  004440  501E               	movf	(pad@w+1)^0,w,c
 10472  004442  0A80               	xorlw	128
 10473  004444  581A               	subwfb	??_pad^0,w,c
 10474  004446  A0D8               	btfss	status,0,c
 10475  004448  EF28  F022         	goto	u4791
 10476  00444C  EF2A  F022         	goto	u4790
 10477  004450                     u4791:
 10478  004450  EF0F  F022         	goto	l3974
 10479  004454                     u4790:
 10480  004454                     
 10481                           ;/Applications/microchip/xc8/v2.31/pic/sources/c99/common/doprnt.c: 90:     if (!(flags 
      +                          & (1 << 0))) {
 10482  004454  0100               	movlb	0	; () banked
 10483  004456  B1D8               	btfsc	_flags& (0+255),0,b
 10484  004458  EF30  F022         	goto	u4801
 10485  00445C  EF32  F022         	goto	u4800
 10486  004460                     u4801:
 10487  004460  EF3C  F022         	goto	l3982
 10488  004464                     u4800:
 10489  004464                     
 10490                           ; BSR set to: 0
 10491                           ;/Applications/microchip/xc8/v2.31/pic/sources/c99/common/doprnt.c: 91:         fputs((c
      +                          onst char *)buf, fp);
 10492  004464  C016  F00D         	movff	pad@buf,fputs@s
 10493  004468  C017  F00E         	movff	pad@buf+1,fputs@s+1
 10494  00446C  C014  F00F         	movff	pad@fp,fputs@fp
 10495  004470  C015  F010         	movff	pad@fp+1,fputs@fp+1
 10496  004474  ECAF  F025         	call	_fputs	;wreg free
 10497  004478                     l3982:
 10498                           
 10499                           ;/Applications/microchip/xc8/v2.31/pic/sources/c99/common/doprnt.c: 94:     return (int)
      +                          (strlen(buf) + (size_t)w);
 10500  004478  C016  F001         	movff	pad@buf,strlen@s
 10501  00447C  C017  F002         	movff	pad@buf+1,strlen@s+1
 10502  004480  EC66  F026         	call	_strlen	;wreg free
 10503  004484  501D               	movf	pad@w^0,w,c
 10504  004486  2401               	addwf	?_strlen^0,w,c
 10505  004488  6E14               	movwf	?_pad^0,c
 10506  00448A  501E               	movf	(pad@w+1)^0,w,c
 10507  00448C  2002               	addwfc	(?_strlen+1)^0,w,c
 10508  00448E  6E15               	movwf	(?_pad+1)^0,c
 10509  004490  0012               	return		;funcret
 10510  004492                     __end_of_pad:
 10511                           	callstack 0
 10512                           
 10513 ;; *************** function _strlen *****************
 10514 ;; Defined at:
 10515 ;;		line 5 in file "/Applications/microchip/xc8/v2.31/pic/sources/c99/common/strlen.c"
 10516 ;; Parameters:    Size  Location     Type
 10517 ;;  s               2    0[COMRAM] PTR const unsigned char 
 10518 ;;		 -> dbuf(80), 
 10519 ;; Auto vars:     Size  Location     Type
 10520 ;;  a               2    2[COMRAM] PTR const unsigned char 
 10521 ;;		 -> dbuf(80), 
 10522 ;; Return value:  Size  Location     Type
 10523 ;;                  2    0[COMRAM] unsigned int 
 10524 ;; Registers used:
 10525 ;;		wreg, fsr2l, fsr2h, status,2, status,0
 10526 ;; Tracked objects:
 10527 ;;		On entry : 0/0
 10528 ;;		On exit  : 0/0
 10529 ;;		Unchanged: 0/0
 10530 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 10531 ;;      Params:         2       0       0       0       0       0       0       0       0
 10532 ;;      Locals:         2       0       0       0       0       0       0       0       0
 10533 ;;      Temps:          0       0       0       0       0       0       0       0       0
 10534 ;;      Totals:         4       0       0       0       0       0       0       0       0
 10535 ;;Total ram usage:        4 bytes
 10536 ;; Hardware stack levels used:    1
 10537 ;; This function calls:
 10538 ;;		Nothing
 10539 ;; This function is called by:
 10540 ;;		_pad
 10541 ;; This function uses a non-reentrant model
 10542 ;;
 10543                           
 10544                           	psect	text39
 10545  004CCC                     __ptext39:
 10546                           	callstack 0
 10547  004CCC                     _strlen:
 10548                           	callstack 24
 10549  004CCC  C001  F003         	movff	strlen@s,strlen@a
 10550  004CD0  C002  F004         	movff	strlen@s+1,strlen@a+1
 10551  004CD4  EF6E  F026         	goto	l3396
 10552  004CD8                     l3394:
 10553  004CD8  4A01               	infsnz	strlen@s^0,f,c
 10554  004CDA  2A02               	incf	(strlen@s+1)^0,f,c
 10555  004CDC                     l3396:
 10556  004CDC  C001  FFD9         	movff	strlen@s,fsr2l
 10557  004CE0  C002  FFDA         	movff	strlen@s+1,fsr2h
 10558  004CE4  50DF               	movf	indf2,w,c
 10559  004CE6  A4D8               	btfss	status,2,c
 10560  004CE8  EF78  F026         	goto	u3811
 10561  004CEC  EF7A  F026         	goto	u3810
 10562  004CF0                     u3811:
 10563  004CF0  EF6C  F026         	goto	l3394
 10564  004CF4                     u3810:
 10565  004CF4  5003               	movf	strlen@a^0,w,c
 10566  004CF6  5C01               	subwf	strlen@s^0,w,c
 10567  004CF8  6E01               	movwf	?_strlen^0,c
 10568  004CFA  5004               	movf	(strlen@a+1)^0,w,c
 10569  004CFC  5802               	subwfb	(strlen@s+1)^0,w,c
 10570  004CFE  6E02               	movwf	(?_strlen+1)^0,c
 10571  004D00  0012               	return		;funcret
 10572  004D02                     __end_of_strlen:
 10573                           	callstack 0
 10574                           
 10575 ;; *************** function _fputs *****************
 10576 ;; Defined at:
 10577 ;;		line 8 in file "/Applications/microchip/xc8/v2.31/pic/sources/c99/common/nf_fputs.c"
 10578 ;; Parameters:    Size  Location     Type
 10579 ;;  s               2   12[COMRAM] PTR const unsigned char 
 10580 ;;		 -> dbuf(80), 
 10581 ;;  fp              2   14[COMRAM] PTR struct _IO_FILE
 10582 ;;		 -> NULL(0), sprintf@f(6), 
 10583 ;; Auto vars:     Size  Location     Type
 10584 ;;  i               2   17[COMRAM] int 
 10585 ;;  c               1   16[COMRAM] unsigned char 
 10586 ;; Return value:  Size  Location     Type
 10587 ;;                  2   12[COMRAM] int 
 10588 ;; Registers used:
 10589 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
 10590 ;; Tracked objects:
 10591 ;;		On entry : 0/0
 10592 ;;		On exit  : 0/0
 10593 ;;		Unchanged: 0/0
 10594 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 10595 ;;      Params:         4       0       0       0       0       0       0       0       0
 10596 ;;      Locals:         3       0       0       0       0       0       0       0       0
 10597 ;;      Temps:          0       0       0       0       0       0       0       0       0
 10598 ;;      Totals:         7       0       0       0       0       0       0       0       0
 10599 ;;Total ram usage:        7 bytes
 10600 ;; Hardware stack levels used:    1
 10601 ;; Hardware stack levels required when called:    2
 10602 ;; This function calls:
 10603 ;;		_fputc
 10604 ;; This function is called by:
 10605 ;;		_pad
 10606 ;; This function uses a non-reentrant model
 10607 ;;
 10608                           
 10609                           	psect	text40
 10610  004B5E                     __ptext40:
 10611                           	callstack 0
 10612  004B5E                     _fputs:
 10613                           	callstack 22
 10614  004B5E  0E00               	movlw	0
 10615  004B60  6E13               	movwf	(fputs@i+1)^0,c
 10616  004B62  0E00               	movlw	0
 10617  004B64  6E12               	movwf	fputs@i^0,c
 10618  004B66  EFC0  F025         	goto	l3390
 10619  004B6A                     l3386:
 10620  004B6A  C011  F004         	movff	fputs@c,fputc@c
 10621  004B6E  6A05               	clrf	(fputc@c+1)^0,c
 10622  004B70  C00F  F006         	movff	fputs@fp,fputc@fp
 10623  004B74  C010  F007         	movff	fputs@fp+1,fputc@fp+1
 10624  004B78  EC81  F021         	call	_fputc	;wreg free
 10625  004B7C  4A12               	infsnz	fputs@i^0,f,c
 10626  004B7E  2A13               	incf	(fputs@i+1)^0,f,c
 10627  004B80                     l3390:
 10628  004B80  5012               	movf	fputs@i^0,w,c
 10629  004B82  240D               	addwf	fputs@s^0,w,c
 10630  004B84  6ED9               	movwf	fsr2l,c
 10631  004B86  5013               	movf	(fputs@i+1)^0,w,c
 10632  004B88  200E               	addwfc	(fputs@s+1)^0,w,c
 10633  004B8A  6EDA               	movwf	fsr2h,c
 10634  004B8C  50DF               	movf	indf2,w,c
 10635  004B8E  6E11               	movwf	fputs@c^0,c
 10636  004B90  5011               	movf	fputs@c^0,w,c
 10637  004B92  A4D8               	btfss	status,2,c
 10638  004B94  EFCE  F025         	goto	u3801
 10639  004B98  EFD0  F025         	goto	u3800
 10640  004B9C                     u3801:
 10641  004B9C  EFB5  F025         	goto	l3386
 10642  004BA0                     u3800:
 10643  004BA0  0012               	return		;funcret
 10644  004BA2                     __end_of_fputs:
 10645                           	callstack 0
 10646                           
 10647 ;; *************** function _abs *****************
 10648 ;; Defined at:
 10649 ;;		line 1 in file "/Applications/microchip/xc8/v2.31/pic/sources/c99/common/abs.c"
 10650 ;; Parameters:    Size  Location     Type
 10651 ;;  a               2   18[COMRAM] int 
 10652 ;; Auto vars:     Size  Location     Type
 10653 ;;		None
 10654 ;; Return value:  Size  Location     Type
 10655 ;;                  2   18[COMRAM] int 
 10656 ;; Registers used:
 10657 ;;		wreg, status,2, status,0
 10658 ;; Tracked objects:
 10659 ;;		On entry : 0/0
 10660 ;;		On exit  : 0/0
 10661 ;;		Unchanged: 0/0
 10662 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 10663 ;;      Params:         2       0       0       0       0       0       0       0       0
 10664 ;;      Locals:         0       0       0       0       0       0       0       0       0
 10665 ;;      Temps:          2       0       0       0       0       0       0       0       0
 10666 ;;      Totals:         4       0       0       0       0       0       0       0       0
 10667 ;;Total ram usage:        4 bytes
 10668 ;; Hardware stack levels used:    1
 10669 ;; This function calls:
 10670 ;;		Nothing
 10671 ;; This function is called by:
 10672 ;;		_dtoa
 10673 ;; This function uses a non-reentrant model
 10674 ;;
 10675                           
 10676                           	psect	text41
 10677  004BE4                     __ptext41:
 10678                           	callstack 0
 10679  004BE4                     _abs:
 10680                           	callstack 25
 10681  004BE4  BE14               	btfsc	(abs@a+1)^0,7,c
 10682  004BE6  EFFF  F025         	goto	u4810
 10683  004BEA  5014               	movf	(abs@a+1)^0,w,c
 10684  004BEC  E106               	bnz	u4811
 10685  004BEE  0413               	decf	abs@a^0,w,c
 10686  004BF0  B0D8               	btfsc	status,0,c
 10687  004BF2  EFFD  F025         	goto	u4811
 10688  004BF6  EFFF  F025         	goto	u4810
 10689  004BFA                     u4811:
 10690  004BFA  EF0D  F026         	goto	l1137
 10691  004BFE                     u4810:
 10692  004BFE  C013  F015         	movff	abs@a,??_abs
 10693  004C02  C014  F016         	movff	abs@a+1,??_abs+1
 10694  004C06  1E15               	comf	??_abs^0,f,c
 10695  004C08  1E16               	comf	(??_abs+1)^0,f,c
 10696  004C0A  4A15               	infsnz	??_abs^0,f,c
 10697  004C0C  2A16               	incf	(??_abs+1)^0,f,c
 10698  004C0E  C015  F013         	movff	??_abs,?_abs
 10699  004C12  C016  F014         	movff	??_abs+1,?_abs+1
 10700  004C16  EF11  F026         	goto	l1140
 10701  004C1A                     l1137:
 10702  004C1A  C013  F013         	movff	abs@a,?_abs
 10703  004C1E  C014  F014         	movff	abs@a+1,?_abs+1
 10704  004C22                     l1140:
 10705  004C22  0012               	return		;funcret
 10706  004C24                     __end_of_abs:
 10707                           	callstack 0
 10708                           
 10709 ;; *************** function ___aomod *****************
 10710 ;; Defined at:
 10711 ;;		line 9 in file "/Applications/microchip/xc8/v2.31/pic/sources/c99/common/aomod.c"
 10712 ;; Parameters:    Size  Location     Type
 10713 ;;  dividend        8    0[COMRAM] long long 
 10714 ;;  divisor         8    8[COMRAM] long long 
 10715 ;; Auto vars:     Size  Location     Type
 10716 ;;  sign            1   17[COMRAM] unsigned char 
 10717 ;;  counter         1   16[COMRAM] unsigned char 
 10718 ;; Return value:  Size  Location     Type
 10719 ;;                  8    0[COMRAM] long long 
 10720 ;; Registers used:
 10721 ;;		wreg, status,2, status,0
 10722 ;; Tracked objects:
 10723 ;;		On entry : 0/0
 10724 ;;		On exit  : 0/0
 10725 ;;		Unchanged: 0/0
 10726 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 10727 ;;      Params:        16       0       0       0       0       0       0       0       0
 10728 ;;      Locals:         2       0       0       0       0       0       0       0       0
 10729 ;;      Temps:          0       0       0       0       0       0       0       0       0
 10730 ;;      Totals:        18       0       0       0       0       0       0       0       0
 10731 ;;Total ram usage:       18 bytes
 10732 ;; Hardware stack levels used:    1
 10733 ;; This function calls:
 10734 ;;		Nothing
 10735 ;; This function is called by:
 10736 ;;		_dtoa
 10737 ;; This function uses a non-reentrant model
 10738 ;;
 10739                           
 10740                           	psect	text42
 10741  003A90                     __ptext42:
 10742                           	callstack 0
 10743  003A90                     ___aomod:
 10744                           	callstack 25
 10745  003A90  0E00               	movlw	0
 10746  003A92  6E12               	movwf	___aomod@sign^0,c
 10747  003A94  BE08               	btfsc	(___aomod@dividend+7)^0,7,c
 10748  003A96  EF51  F01D         	goto	u4010
 10749  003A9A  EF4F  F01D         	goto	u4011
 10750  003A9E                     u4011:
 10751  003A9E  EF63  F01D         	goto	l3492
 10752  003AA2                     u4010:
 10753  003AA2  1E08               	comf	(___aomod@dividend+7)^0,f,c
 10754  003AA4  1E07               	comf	(___aomod@dividend+6)^0,f,c
 10755  003AA6  1E06               	comf	(___aomod@dividend+5)^0,f,c
 10756  003AA8  1E05               	comf	(___aomod@dividend+4)^0,f,c
 10757  003AAA  1E04               	comf	(___aomod@dividend+3)^0,f,c
 10758  003AAC  1E03               	comf	(___aomod@dividend+2)^0,f,c
 10759  003AAE  1E02               	comf	(___aomod@dividend+1)^0,f,c
 10760  003AB0  6C01               	negf	___aomod@dividend^0,c
 10761  003AB2  0E00               	movlw	0
 10762  003AB4  2202               	addwfc	(___aomod@dividend+1)^0,f,c
 10763  003AB6  2203               	addwfc	(___aomod@dividend+2)^0,f,c
 10764  003AB8  2204               	addwfc	(___aomod@dividend+3)^0,f,c
 10765  003ABA  2205               	addwfc	(___aomod@dividend+4)^0,f,c
 10766  003ABC  2206               	addwfc	(___aomod@dividend+5)^0,f,c
 10767  003ABE  2207               	addwfc	(___aomod@dividend+6)^0,f,c
 10768  003AC0  2208               	addwfc	(___aomod@dividend+7)^0,f,c
 10769  003AC2  0E01               	movlw	1
 10770  003AC4  6E12               	movwf	___aomod@sign^0,c
 10771  003AC6                     l3492:
 10772  003AC6  BE10               	btfsc	(___aomod@divisor+7)^0,7,c
 10773  003AC8  EF6A  F01D         	goto	u4020
 10774  003ACC  EF68  F01D         	goto	u4021
 10775  003AD0                     u4021:
 10776  003AD0  EF7A  F01D         	goto	l3496
 10777  003AD4                     u4020:
 10778  003AD4  1E10               	comf	(___aomod@divisor+7)^0,f,c
 10779  003AD6  1E0F               	comf	(___aomod@divisor+6)^0,f,c
 10780  003AD8  1E0E               	comf	(___aomod@divisor+5)^0,f,c
 10781  003ADA  1E0D               	comf	(___aomod@divisor+4)^0,f,c
 10782  003ADC  1E0C               	comf	(___aomod@divisor+3)^0,f,c
 10783  003ADE  1E0B               	comf	(___aomod@divisor+2)^0,f,c
 10784  003AE0  1E0A               	comf	(___aomod@divisor+1)^0,f,c
 10785  003AE2  6C09               	negf	___aomod@divisor^0,c
 10786  003AE4  0E00               	movlw	0
 10787  003AE6  220A               	addwfc	(___aomod@divisor+1)^0,f,c
 10788  003AE8  220B               	addwfc	(___aomod@divisor+2)^0,f,c
 10789  003AEA  220C               	addwfc	(___aomod@divisor+3)^0,f,c
 10790  003AEC  220D               	addwfc	(___aomod@divisor+4)^0,f,c
 10791  003AEE  220E               	addwfc	(___aomod@divisor+5)^0,f,c
 10792  003AF0  220F               	addwfc	(___aomod@divisor+6)^0,f,c
 10793  003AF2  2210               	addwfc	(___aomod@divisor+7)^0,f,c
 10794  003AF4                     l3496:
 10795  003AF4  5009               	movf	___aomod@divisor^0,w,c
 10796  003AF6  100A               	iorwf	(___aomod@divisor+1)^0,w,c
 10797  003AF8  100B               	iorwf	(___aomod@divisor+2)^0,w,c
 10798  003AFA  100C               	iorwf	(___aomod@divisor+3)^0,w,c
 10799  003AFC  100D               	iorwf	(___aomod@divisor+4)^0,w,c
 10800  003AFE  100E               	iorwf	(___aomod@divisor+5)^0,w,c
 10801  003B00  100F               	iorwf	(___aomod@divisor+6)^0,w,c
 10802  003B02  1010               	iorwf	(___aomod@divisor+7)^0,w,c
 10803  003B04  B4D8               	btfsc	status,2,c
 10804  003B06  EF87  F01D         	goto	u4031
 10805  003B0A  EF89  F01D         	goto	u4030
 10806  003B0E                     u4031:
 10807  003B0E  EFD1  F01D         	goto	l3512
 10808  003B12                     u4030:
 10809  003B12  0E01               	movlw	1
 10810  003B14  6E11               	movwf	___aomod@counter^0,c
 10811  003B16  EF97  F01D         	goto	l3502
 10812  003B1A                     l3500:
 10813  003B1A  90D8               	bcf	status,0,c
 10814  003B1C  3609               	rlcf	___aomod@divisor^0,f,c
 10815  003B1E  360A               	rlcf	(___aomod@divisor+1)^0,f,c
 10816  003B20  360B               	rlcf	(___aomod@divisor+2)^0,f,c
 10817  003B22  360C               	rlcf	(___aomod@divisor+3)^0,f,c
 10818  003B24  360D               	rlcf	(___aomod@divisor+4)^0,f,c
 10819  003B26  360E               	rlcf	(___aomod@divisor+5)^0,f,c
 10820  003B28  360F               	rlcf	(___aomod@divisor+6)^0,f,c
 10821  003B2A  3610               	rlcf	(___aomod@divisor+7)^0,f,c
 10822  003B2C  2A11               	incf	___aomod@counter^0,f,c
 10823  003B2E                     l3502:
 10824  003B2E  AE10               	btfss	(___aomod@divisor+7)^0,7,c
 10825  003B30  EF9C  F01D         	goto	u4041
 10826  003B34  EF9E  F01D         	goto	u4040
 10827  003B38                     u4041:
 10828  003B38  EF8D  F01D         	goto	l3500
 10829  003B3C                     u4040:
 10830  003B3C                     l3504:
 10831  003B3C  5009               	movf	___aomod@divisor^0,w,c
 10832  003B3E  5C01               	subwf	___aomod@dividend^0,w,c
 10833  003B40  500A               	movf	(___aomod@divisor+1)^0,w,c
 10834  003B42  5802               	subwfb	(___aomod@dividend+1)^0,w,c
 10835  003B44  500B               	movf	(___aomod@divisor+2)^0,w,c
 10836  003B46  5803               	subwfb	(___aomod@dividend+2)^0,w,c
 10837  003B48  500C               	movf	(___aomod@divisor+3)^0,w,c
 10838  003B4A  5804               	subwfb	(___aomod@dividend+3)^0,w,c
 10839  003B4C  500D               	movf	(___aomod@divisor+4)^0,w,c
 10840  003B4E  5805               	subwfb	(___aomod@dividend+4)^0,w,c
 10841  003B50  500E               	movf	(___aomod@divisor+5)^0,w,c
 10842  003B52  5806               	subwfb	(___aomod@dividend+5)^0,w,c
 10843  003B54  500F               	movf	(___aomod@divisor+6)^0,w,c
 10844  003B56  5807               	subwfb	(___aomod@dividend+6)^0,w,c
 10845  003B58  5010               	movf	(___aomod@divisor+7)^0,w,c
 10846  003B5A  5808               	subwfb	(___aomod@dividend+7)^0,w,c
 10847  003B5C  A0D8               	btfss	status,0,c
 10848  003B5E  EFB3  F01D         	goto	u4051
 10849  003B62  EFB5  F01D         	goto	u4050
 10850  003B66                     u4051:
 10851  003B66  EFC5  F01D         	goto	l3508
 10852  003B6A                     u4050:
 10853  003B6A  5009               	movf	___aomod@divisor^0,w,c
 10854  003B6C  5E01               	subwf	___aomod@dividend^0,f,c
 10855  003B6E  500A               	movf	(___aomod@divisor+1)^0,w,c
 10856  003B70  5A02               	subwfb	(___aomod@dividend+1)^0,f,c
 10857  003B72  500B               	movf	(___aomod@divisor+2)^0,w,c
 10858  003B74  5A03               	subwfb	(___aomod@dividend+2)^0,f,c
 10859  003B76  500C               	movf	(___aomod@divisor+3)^0,w,c
 10860  003B78  5A04               	subwfb	(___aomod@dividend+3)^0,f,c
 10861  003B7A  500D               	movf	(___aomod@divisor+4)^0,w,c
 10862  003B7C  5A05               	subwfb	(___aomod@dividend+4)^0,f,c
 10863  003B7E  500E               	movf	(___aomod@divisor+5)^0,w,c
 10864  003B80  5A06               	subwfb	(___aomod@dividend+5)^0,f,c
 10865  003B82  500F               	movf	(___aomod@divisor+6)^0,w,c
 10866  003B84  5A07               	subwfb	(___aomod@dividend+6)^0,f,c
 10867  003B86  5010               	movf	(___aomod@divisor+7)^0,w,c
 10868  003B88  5A08               	subwfb	(___aomod@dividend+7)^0,f,c
 10869  003B8A                     l3508:
 10870  003B8A  90D8               	bcf	status,0,c
 10871  003B8C  3210               	rrcf	(___aomod@divisor+7)^0,f,c
 10872  003B8E  320F               	rrcf	(___aomod@divisor+6)^0,f,c
 10873  003B90  320E               	rrcf	(___aomod@divisor+5)^0,f,c
 10874  003B92  320D               	rrcf	(___aomod@divisor+4)^0,f,c
 10875  003B94  320C               	rrcf	(___aomod@divisor+3)^0,f,c
 10876  003B96  320B               	rrcf	(___aomod@divisor+2)^0,f,c
 10877  003B98  320A               	rrcf	(___aomod@divisor+1)^0,f,c
 10878  003B9A  3209               	rrcf	___aomod@divisor^0,f,c
 10879  003B9C  2E11               	decfsz	___aomod@counter^0,f,c
 10880  003B9E  EF9E  F01D         	goto	l3504
 10881  003BA2                     l3512:
 10882  003BA2  5012               	movf	___aomod@sign^0,w,c
 10883  003BA4  B4D8               	btfsc	status,2,c
 10884  003BA6  EFD7  F01D         	goto	u4061
 10885  003BAA  EFD9  F01D         	goto	u4060
 10886  003BAE                     u4061:
 10887  003BAE  EFE9  F01D         	goto	l3516
 10888  003BB2                     u4060:
 10889  003BB2  1E08               	comf	(___aomod@dividend+7)^0,f,c
 10890  003BB4  1E07               	comf	(___aomod@dividend+6)^0,f,c
 10891  003BB6  1E06               	comf	(___aomod@dividend+5)^0,f,c
 10892  003BB8  1E05               	comf	(___aomod@dividend+4)^0,f,c
 10893  003BBA  1E04               	comf	(___aomod@dividend+3)^0,f,c
 10894  003BBC  1E03               	comf	(___aomod@dividend+2)^0,f,c
 10895  003BBE  1E02               	comf	(___aomod@dividend+1)^0,f,c
 10896  003BC0  6C01               	negf	___aomod@dividend^0,c
 10897  003BC2  0E00               	movlw	0
 10898  003BC4  2202               	addwfc	(___aomod@dividend+1)^0,f,c
 10899  003BC6  2203               	addwfc	(___aomod@dividend+2)^0,f,c
 10900  003BC8  2204               	addwfc	(___aomod@dividend+3)^0,f,c
 10901  003BCA  2205               	addwfc	(___aomod@dividend+4)^0,f,c
 10902  003BCC  2206               	addwfc	(___aomod@dividend+5)^0,f,c
 10903  003BCE  2207               	addwfc	(___aomod@dividend+6)^0,f,c
 10904  003BD0  2208               	addwfc	(___aomod@dividend+7)^0,f,c
 10905  003BD2                     l3516:
 10906  003BD2  C001  F001         	movff	___aomod@dividend,?___aomod
 10907  003BD6  C002  F002         	movff	___aomod@dividend+1,?___aomod+1
 10908  003BDA  C003  F003         	movff	___aomod@dividend+2,?___aomod+2
 10909  003BDE  C004  F004         	movff	___aomod@dividend+3,?___aomod+3
 10910  003BE2  C005  F005         	movff	___aomod@dividend+4,?___aomod+4
 10911  003BE6  C006  F006         	movff	___aomod@dividend+5,?___aomod+5
 10912  003BEA  C007  F007         	movff	___aomod@dividend+6,?___aomod+6
 10913  003BEE  C008  F008         	movff	___aomod@dividend+7,?___aomod+7
 10914  003BF2  0012               	return		;funcret
 10915  003BF4                     __end_of___aomod:
 10916                           	callstack 0
 10917                           
 10918 ;; *************** function ___aodiv *****************
 10919 ;; Defined at:
 10920 ;;		line 9 in file "/Applications/microchip/xc8/v2.31/pic/sources/c99/common/aodiv.c"
 10921 ;; Parameters:    Size  Location     Type
 10922 ;;  dividend        8    0[COMRAM] long long 
 10923 ;;  divisor         8    8[COMRAM] long long 
 10924 ;; Auto vars:     Size  Location     Type
 10925 ;;  quotient        8   18[COMRAM] long long 
 10926 ;;  sign            1   17[COMRAM] unsigned char 
 10927 ;;  counter         1   16[COMRAM] unsigned char 
 10928 ;; Return value:  Size  Location     Type
 10929 ;;                  8    0[COMRAM] long long 
 10930 ;; Registers used:
 10931 ;;		wreg, fsr2l, fsr2h, status,2, status,0
 10932 ;; Tracked objects:
 10933 ;;		On entry : 0/0
 10934 ;;		On exit  : 0/0
 10935 ;;		Unchanged: 0/0
 10936 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 10937 ;;      Params:        16       0       0       0       0       0       0       0       0
 10938 ;;      Locals:        10       0       0       0       0       0       0       0       0
 10939 ;;      Temps:          0       0       0       0       0       0       0       0       0
 10940 ;;      Totals:        26       0       0       0       0       0       0       0       0
 10941 ;;Total ram usage:       26 bytes
 10942 ;; Hardware stack levels used:    1
 10943 ;; This function calls:
 10944 ;;		Nothing
 10945 ;; This function is called by:
 10946 ;;		_dtoa
 10947 ;; This function uses a non-reentrant model
 10948 ;;
 10949                           
 10950                           	psect	text43
 10951  003908                     __ptext43:
 10952                           	callstack 0
 10953  003908                     ___aodiv:
 10954                           	callstack 25
 10955  003908  0E00               	movlw	0
 10956  00390A  6E12               	movwf	___aodiv@sign^0,c
 10957  00390C  BE10               	btfsc	(___aodiv@divisor+7)^0,7,c
 10958  00390E  EF8D  F01C         	goto	u3940
 10959  003912  EF8B  F01C         	goto	u3941
 10960  003916                     u3941:
 10961  003916  EF9F  F01C         	goto	l3448
 10962  00391A                     u3940:
 10963  00391A  1E10               	comf	(___aodiv@divisor+7)^0,f,c
 10964  00391C  1E0F               	comf	(___aodiv@divisor+6)^0,f,c
 10965  00391E  1E0E               	comf	(___aodiv@divisor+5)^0,f,c
 10966  003920  1E0D               	comf	(___aodiv@divisor+4)^0,f,c
 10967  003922  1E0C               	comf	(___aodiv@divisor+3)^0,f,c
 10968  003924  1E0B               	comf	(___aodiv@divisor+2)^0,f,c
 10969  003926  1E0A               	comf	(___aodiv@divisor+1)^0,f,c
 10970  003928  6C09               	negf	___aodiv@divisor^0,c
 10971  00392A  0E00               	movlw	0
 10972  00392C  220A               	addwfc	(___aodiv@divisor+1)^0,f,c
 10973  00392E  220B               	addwfc	(___aodiv@divisor+2)^0,f,c
 10974  003930  220C               	addwfc	(___aodiv@divisor+3)^0,f,c
 10975  003932  220D               	addwfc	(___aodiv@divisor+4)^0,f,c
 10976  003934  220E               	addwfc	(___aodiv@divisor+5)^0,f,c
 10977  003936  220F               	addwfc	(___aodiv@divisor+6)^0,f,c
 10978  003938  2210               	addwfc	(___aodiv@divisor+7)^0,f,c
 10979  00393A  0E01               	movlw	1
 10980  00393C  6E12               	movwf	___aodiv@sign^0,c
 10981  00393E                     l3448:
 10982  00393E  BE08               	btfsc	(___aodiv@dividend+7)^0,7,c
 10983  003940  EFA6  F01C         	goto	u3950
 10984  003944  EFA4  F01C         	goto	u3951
 10985  003948                     u3951:
 10986  003948  EFB8  F01C         	goto	l3454
 10987  00394C                     u3950:
 10988  00394C  1E08               	comf	(___aodiv@dividend+7)^0,f,c
 10989  00394E  1E07               	comf	(___aodiv@dividend+6)^0,f,c
 10990  003950  1E06               	comf	(___aodiv@dividend+5)^0,f,c
 10991  003952  1E05               	comf	(___aodiv@dividend+4)^0,f,c
 10992  003954  1E04               	comf	(___aodiv@dividend+3)^0,f,c
 10993  003956  1E03               	comf	(___aodiv@dividend+2)^0,f,c
 10994  003958  1E02               	comf	(___aodiv@dividend+1)^0,f,c
 10995  00395A  6C01               	negf	___aodiv@dividend^0,c
 10996  00395C  0E00               	movlw	0
 10997  00395E  2202               	addwfc	(___aodiv@dividend+1)^0,f,c
 10998  003960  2203               	addwfc	(___aodiv@dividend+2)^0,f,c
 10999  003962  2204               	addwfc	(___aodiv@dividend+3)^0,f,c
 11000  003964  2205               	addwfc	(___aodiv@dividend+4)^0,f,c
 11001  003966  2206               	addwfc	(___aodiv@dividend+5)^0,f,c
 11002  003968  2207               	addwfc	(___aodiv@dividend+6)^0,f,c
 11003  00396A  2208               	addwfc	(___aodiv@dividend+7)^0,f,c
 11004  00396C  0E01               	movlw	1
 11005  00396E  1A12               	xorwf	___aodiv@sign^0,f,c
 11006  003970                     l3454:
 11007  003970  EE20  F013         	lfsr	2,___aodiv@quotient
 11008  003974  0E07               	movlw	7
 11009  003976                     u3961:
 11010  003976  6ADE               	clrf	postinc2,c
 11011  003978  06E8               	decf	wreg,f,c
 11012  00397A  E2FD               	bc	u3961
 11013  00397C  5009               	movf	___aodiv@divisor^0,w,c
 11014  00397E  100A               	iorwf	(___aodiv@divisor+1)^0,w,c
 11015  003980  100B               	iorwf	(___aodiv@divisor+2)^0,w,c
 11016  003982  100C               	iorwf	(___aodiv@divisor+3)^0,w,c
 11017  003984  100D               	iorwf	(___aodiv@divisor+4)^0,w,c
 11018  003986  100E               	iorwf	(___aodiv@divisor+5)^0,w,c
 11019  003988  100F               	iorwf	(___aodiv@divisor+6)^0,w,c
 11020  00398A  1010               	iorwf	(___aodiv@divisor+7)^0,w,c
 11021  00398C  B4D8               	btfsc	status,2,c
 11022  00398E  EFCB  F01C         	goto	u3971
 11023  003992  EFCD  F01C         	goto	u3970
 11024  003996                     u3971:
 11025  003996  EF1F  F01D         	goto	l3476
 11026  00399A                     u3970:
 11027  00399A  0E01               	movlw	1
 11028  00399C  6E11               	movwf	___aodiv@counter^0,c
 11029  00399E  EFDB  F01C         	goto	l3462
 11030  0039A2                     l3460:
 11031  0039A2  90D8               	bcf	status,0,c
 11032  0039A4  3609               	rlcf	___aodiv@divisor^0,f,c
 11033  0039A6  360A               	rlcf	(___aodiv@divisor+1)^0,f,c
 11034  0039A8  360B               	rlcf	(___aodiv@divisor+2)^0,f,c
 11035  0039AA  360C               	rlcf	(___aodiv@divisor+3)^0,f,c
 11036  0039AC  360D               	rlcf	(___aodiv@divisor+4)^0,f,c
 11037  0039AE  360E               	rlcf	(___aodiv@divisor+5)^0,f,c
 11038  0039B0  360F               	rlcf	(___aodiv@divisor+6)^0,f,c
 11039  0039B2  3610               	rlcf	(___aodiv@divisor+7)^0,f,c
 11040  0039B4  2A11               	incf	___aodiv@counter^0,f,c
 11041  0039B6                     l3462:
 11042  0039B6  AE10               	btfss	(___aodiv@divisor+7)^0,7,c
 11043  0039B8  EFE0  F01C         	goto	u3981
 11044  0039BC  EFE2  F01C         	goto	u3980
 11045  0039C0                     u3981:
 11046  0039C0  EFD1  F01C         	goto	l3460
 11047  0039C4                     u3980:
 11048  0039C4                     l3464:
 11049  0039C4  90D8               	bcf	status,0,c
 11050  0039C6  3613               	rlcf	___aodiv@quotient^0,f,c
 11051  0039C8  3614               	rlcf	(___aodiv@quotient+1)^0,f,c
 11052  0039CA  3615               	rlcf	(___aodiv@quotient+2)^0,f,c
 11053  0039CC  3616               	rlcf	(___aodiv@quotient+3)^0,f,c
 11054  0039CE  3617               	rlcf	(___aodiv@quotient+4)^0,f,c
 11055  0039D0  3618               	rlcf	(___aodiv@quotient+5)^0,f,c
 11056  0039D2  3619               	rlcf	(___aodiv@quotient+6)^0,f,c
 11057  0039D4  361A               	rlcf	(___aodiv@quotient+7)^0,f,c
 11058  0039D6  5009               	movf	___aodiv@divisor^0,w,c
 11059  0039D8  5C01               	subwf	___aodiv@dividend^0,w,c
 11060  0039DA  500A               	movf	(___aodiv@divisor+1)^0,w,c
 11061  0039DC  5802               	subwfb	(___aodiv@dividend+1)^0,w,c
 11062  0039DE  500B               	movf	(___aodiv@divisor+2)^0,w,c
 11063  0039E0  5803               	subwfb	(___aodiv@dividend+2)^0,w,c
 11064  0039E2  500C               	movf	(___aodiv@divisor+3)^0,w,c
 11065  0039E4  5804               	subwfb	(___aodiv@dividend+3)^0,w,c
 11066  0039E6  500D               	movf	(___aodiv@divisor+4)^0,w,c
 11067  0039E8  5805               	subwfb	(___aodiv@dividend+4)^0,w,c
 11068  0039EA  500E               	movf	(___aodiv@divisor+5)^0,w,c
 11069  0039EC  5806               	subwfb	(___aodiv@dividend+5)^0,w,c
 11070  0039EE  500F               	movf	(___aodiv@divisor+6)^0,w,c
 11071  0039F0  5807               	subwfb	(___aodiv@dividend+6)^0,w,c
 11072  0039F2  5010               	movf	(___aodiv@divisor+7)^0,w,c
 11073  0039F4  5808               	subwfb	(___aodiv@dividend+7)^0,w,c
 11074  0039F6  A0D8               	btfss	status,0,c
 11075  0039F8  EF00  F01D         	goto	u3991
 11076  0039FC  EF02  F01D         	goto	u3990
 11077  003A00                     u3991:
 11078  003A00  EF13  F01D         	goto	l3472
 11079  003A04                     u3990:
 11080  003A04  5009               	movf	___aodiv@divisor^0,w,c
 11081  003A06  5E01               	subwf	___aodiv@dividend^0,f,c
 11082  003A08  500A               	movf	(___aodiv@divisor+1)^0,w,c
 11083  003A0A  5A02               	subwfb	(___aodiv@dividend+1)^0,f,c
 11084  003A0C  500B               	movf	(___aodiv@divisor+2)^0,w,c
 11085  003A0E  5A03               	subwfb	(___aodiv@dividend+2)^0,f,c
 11086  003A10  500C               	movf	(___aodiv@divisor+3)^0,w,c
 11087  003A12  5A04               	subwfb	(___aodiv@dividend+3)^0,f,c
 11088  003A14  500D               	movf	(___aodiv@divisor+4)^0,w,c
 11089  003A16  5A05               	subwfb	(___aodiv@dividend+4)^0,f,c
 11090  003A18  500E               	movf	(___aodiv@divisor+5)^0,w,c
 11091  003A1A  5A06               	subwfb	(___aodiv@dividend+5)^0,f,c
 11092  003A1C  500F               	movf	(___aodiv@divisor+6)^0,w,c
 11093  003A1E  5A07               	subwfb	(___aodiv@dividend+6)^0,f,c
 11094  003A20  5010               	movf	(___aodiv@divisor+7)^0,w,c
 11095  003A22  5A08               	subwfb	(___aodiv@dividend+7)^0,f,c
 11096  003A24  8013               	bsf	___aodiv@quotient^0,0,c
 11097  003A26                     l3472:
 11098  003A26  90D8               	bcf	status,0,c
 11099  003A28  3210               	rrcf	(___aodiv@divisor+7)^0,f,c
 11100  003A2A  320F               	rrcf	(___aodiv@divisor+6)^0,f,c
 11101  003A2C  320E               	rrcf	(___aodiv@divisor+5)^0,f,c
 11102  003A2E  320D               	rrcf	(___aodiv@divisor+4)^0,f,c
 11103  003A30  320C               	rrcf	(___aodiv@divisor+3)^0,f,c
 11104  003A32  320B               	rrcf	(___aodiv@divisor+2)^0,f,c
 11105  003A34  320A               	rrcf	(___aodiv@divisor+1)^0,f,c
 11106  003A36  3209               	rrcf	___aodiv@divisor^0,f,c
 11107  003A38  2E11               	decfsz	___aodiv@counter^0,f,c
 11108  003A3A  EFE2  F01C         	goto	l3464
 11109  003A3E                     l3476:
 11110  003A3E  5012               	movf	___aodiv@sign^0,w,c
 11111  003A40  B4D8               	btfsc	status,2,c
 11112  003A42  EF25  F01D         	goto	u4001
 11113  003A46  EF27  F01D         	goto	u4000
 11114  003A4A                     u4001:
 11115  003A4A  EF37  F01D         	goto	l3480
 11116  003A4E                     u4000:
 11117  003A4E  1E1A               	comf	(___aodiv@quotient+7)^0,f,c
 11118  003A50  1E19               	comf	(___aodiv@quotient+6)^0,f,c
 11119  003A52  1E18               	comf	(___aodiv@quotient+5)^0,f,c
 11120  003A54  1E17               	comf	(___aodiv@quotient+4)^0,f,c
 11121  003A56  1E16               	comf	(___aodiv@quotient+3)^0,f,c
 11122  003A58  1E15               	comf	(___aodiv@quotient+2)^0,f,c
 11123  003A5A  1E14               	comf	(___aodiv@quotient+1)^0,f,c
 11124  003A5C  6C13               	negf	___aodiv@quotient^0,c
 11125  003A5E  0E00               	movlw	0
 11126  003A60  2214               	addwfc	(___aodiv@quotient+1)^0,f,c
 11127  003A62  2215               	addwfc	(___aodiv@quotient+2)^0,f,c
 11128  003A64  2216               	addwfc	(___aodiv@quotient+3)^0,f,c
 11129  003A66  2217               	addwfc	(___aodiv@quotient+4)^0,f,c
 11130  003A68  2218               	addwfc	(___aodiv@quotient+5)^0,f,c
 11131  003A6A  2219               	addwfc	(___aodiv@quotient+6)^0,f,c
 11132  003A6C  221A               	addwfc	(___aodiv@quotient+7)^0,f,c
 11133  003A6E                     l3480:
 11134  003A6E  C013  F001         	movff	___aodiv@quotient,?___aodiv
 11135  003A72  C014  F002         	movff	___aodiv@quotient+1,?___aodiv+1
 11136  003A76  C015  F003         	movff	___aodiv@quotient+2,?___aodiv+2
 11137  003A7A  C016  F004         	movff	___aodiv@quotient+3,?___aodiv+3
 11138  003A7E  C017  F005         	movff	___aodiv@quotient+4,?___aodiv+4
 11139  003A82  C018  F006         	movff	___aodiv@quotient+5,?___aodiv+5
 11140  003A86  C019  F007         	movff	___aodiv@quotient+6,?___aodiv+6
 11141  003A8A  C01A  F008         	movff	___aodiv@quotient+7,?___aodiv+7
 11142  003A8E  0012               	return		;funcret
 11143  003A90                     __end_of___aodiv:
 11144                           	callstack 0
 11145                           
 11146 ;; *************** function _ctoa *****************
 11147 ;; Defined at:
 11148 ;;		line 259 in file "/Applications/microchip/xc8/v2.31/pic/sources/c99/common/doprnt.c"
 11149 ;; Parameters:    Size  Location     Type
 11150 ;;  fp              2   12[COMRAM] PTR struct _IO_FILE
 11151 ;;		 -> NULL(0), sprintf@f(6), 
 11152 ;;  c               1   14[COMRAM] unsigned char 
 11153 ;; Auto vars:     Size  Location     Type
 11154 ;;  w               2   18[COMRAM] int 
 11155 ;;  l               2   16[COMRAM] int 
 11156 ;; Return value:  Size  Location     Type
 11157 ;;                  2   12[COMRAM] int 
 11158 ;; Registers used:
 11159 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
 11160 ;; Tracked objects:
 11161 ;;		On entry : 0/0
 11162 ;;		On exit  : 0/0
 11163 ;;		Unchanged: 0/0
 11164 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 11165 ;;      Params:         3       0       0       0       0       0       0       0       0
 11166 ;;      Locals:         4       0       0       0       0       0       0       0       0
 11167 ;;      Temps:          1       0       0       0       0       0       0       0       0
 11168 ;;      Totals:         8       0       0       0       0       0       0       0       0
 11169 ;;Total ram usage:        8 bytes
 11170 ;; Hardware stack levels used:    1
 11171 ;; Hardware stack levels required when called:    2
 11172 ;; This function calls:
 11173 ;;		_fputc
 11174 ;; This function is called by:
 11175 ;;		_vfpfcnvrt
 11176 ;; This function uses a non-reentrant model
 11177 ;;
 11178                           
 11179                           	psect	text44
 11180  004154                     __ptext44:
 11181                           	callstack 0
 11182  004154                     _ctoa:
 11183                           	callstack 24
 11184  004154                     
 11185                           ;/Applications/microchip/xc8/v2.31/pic/sources/c99/common/doprnt.c: 259: static int ctoa
      +                          (FILE *fp, char c);/Applications/microchip/xc8/v2.31/pic/sources/c99/common/doprnt.c: 26
      +                          0: {;/Applications/microchip/xc8/v2.31/pic/sources/c99/common/doprnt.c: 261:     int l, 
      +                          w;;/Applications/microchip/xc8/v2.31/pic/sources/c99/common/doprnt.c: 264:     w = width
      +                           ? width - 1 : width;
 11186  004154  0100               	movlb	0	; () banked
 11187  004156  51D4               	movf	_width& (0+255),w,b
 11188  004158  11D5               	iorwf	(_width+1)& (0+255),w,b
 11189  00415A  A4D8               	btfss	status,2,c
 11190  00415C  EFB2  F020         	goto	u4981
 11191  004160  EFB4  F020         	goto	u4980
 11192  004164                     u4981:
 11193  004164  EFBA  F020         	goto	l4046
 11194  004168                     u4980:
 11195  004168                     
 11196                           ; BSR set to: 0
 11197  004168  C0D4  F013         	movff	_width,ctoa@w
 11198  00416C  C0D5  F014         	movff	_width+1,ctoa@w+1
 11199  004170  EFC0  F020         	goto	l4048
 11200  004174                     l4046:
 11201                           
 11202                           ; BSR set to: 0
 11203  004174  0EFF               	movlw	255
 11204  004176  25D4               	addwf	_width& (0+255),w,b
 11205  004178  6E13               	movwf	ctoa@w^0,c
 11206  00417A  0EFF               	movlw	255
 11207  00417C  21D5               	addwfc	(_width+1)& (0+255),w,b
 11208  00417E  6E14               	movwf	(ctoa@w+1)^0,c
 11209  004180                     l4048:
 11210                           
 11211                           ; BSR set to: 0
 11212                           ;/Applications/microchip/xc8/v2.31/pic/sources/c99/common/doprnt.c: 267:     if (flags &
      +                           (1 << 0)) {
 11213  004180  A1D8               	btfss	_flags& (0+255),0,b
 11214  004182  EFC5  F020         	goto	u4991
 11215  004186  EFC7  F020         	goto	u4990
 11216  00418A                     u4991:
 11217  00418A  EFD0  F020         	goto	l4052
 11218  00418E                     u4990:
 11219  00418E                     
 11220                           ; BSR set to: 0
 11221                           ;/Applications/microchip/xc8/v2.31/pic/sources/c99/common/doprnt.c: 268:         fputc(c
      +                          , fp);
 11222  00418E  C00F  F004         	movff	ctoa@c,fputc@c
 11223  004192  6A05               	clrf	(fputc@c+1)^0,c
 11224  004194  C00D  F006         	movff	ctoa@fp,fputc@fp
 11225  004198  C00E  F007         	movff	ctoa@fp+1,fputc@fp+1
 11226  00419C  EC81  F021         	call	_fputc	;wreg free
 11227  0041A0                     l4052:
 11228                           
 11229                           ;/Applications/microchip/xc8/v2.31/pic/sources/c99/common/doprnt.c: 271:     w = (w < 0)
      +                           ? 0 : w;
 11230  0041A0  BE14               	btfsc	(ctoa@w+1)^0,7,c
 11231  0041A2  EFD5  F020         	goto	u5001
 11232  0041A6  EFD7  F020         	goto	u5000
 11233  0041AA                     u5001:
 11234  0041AA  EFD9  F020         	goto	l4056
 11235  0041AE                     u5000:
 11236  0041AE  EFDD  F020         	goto	l952
 11237  0041B2                     l4056:
 11238  0041B2  0E00               	movlw	0
 11239  0041B4  6E14               	movwf	(ctoa@w+1)^0,c
 11240  0041B6  0E00               	movlw	0
 11241  0041B8  6E13               	movwf	ctoa@w^0,c
 11242  0041BA                     l952:
 11243                           
 11244                           ;/Applications/microchip/xc8/v2.31/pic/sources/c99/common/doprnt.c: 272:     l = 0;
 11245  0041BA  0E00               	movlw	0
 11246  0041BC  6E12               	movwf	(ctoa@l+1)^0,c
 11247  0041BE  0E00               	movlw	0
 11248  0041C0  6E11               	movwf	ctoa@l^0,c
 11249                           
 11250                           ;/Applications/microchip/xc8/v2.31/pic/sources/c99/common/doprnt.c: 273:     while (l < 
      +                          w) {
 11251  0041C2  EFEF  F020         	goto	l4062
 11252  0041C6                     l4058:
 11253                           
 11254                           ;/Applications/microchip/xc8/v2.31/pic/sources/c99/common/doprnt.c: 274:         fputc('
      +                           ', fp);
 11255  0041C6  0E00               	movlw	0
 11256  0041C8  6E05               	movwf	(fputc@c+1)^0,c
 11257  0041CA  0E20               	movlw	32
 11258  0041CC  6E04               	movwf	fputc@c^0,c
 11259  0041CE  C00D  F006         	movff	ctoa@fp,fputc@fp
 11260  0041D2  C00E  F007         	movff	ctoa@fp+1,fputc@fp+1
 11261  0041D6  EC81  F021         	call	_fputc	;wreg free
 11262  0041DA                     
 11263                           ;/Applications/microchip/xc8/v2.31/pic/sources/c99/common/doprnt.c: 275:         ++l;
 11264  0041DA  4A11               	infsnz	ctoa@l^0,f,c
 11265  0041DC  2A12               	incf	(ctoa@l+1)^0,f,c
 11266  0041DE                     l4062:
 11267                           
 11268                           ;/Applications/microchip/xc8/v2.31/pic/sources/c99/common/doprnt.c: 273:     while (l < 
      +                          w) {
 11269  0041DE  5013               	movf	ctoa@w^0,w,c
 11270  0041E0  5C11               	subwf	ctoa@l^0,w,c
 11271  0041E2  5012               	movf	(ctoa@l+1)^0,w,c
 11272  0041E4  0A80               	xorlw	128
 11273  0041E6  6E10               	movwf	??_ctoa^0,c
 11274  0041E8  5014               	movf	(ctoa@w+1)^0,w,c
 11275  0041EA  0A80               	xorlw	128
 11276  0041EC  5810               	subwfb	??_ctoa^0,w,c
 11277  0041EE  A0D8               	btfss	status,0,c
 11278  0041F0  EFFC  F020         	goto	u5011
 11279  0041F4  EFFE  F020         	goto	u5010
 11280  0041F8                     u5011:
 11281  0041F8  EFE3  F020         	goto	l4058
 11282  0041FC                     u5010:
 11283  0041FC                     
 11284                           ;/Applications/microchip/xc8/v2.31/pic/sources/c99/common/doprnt.c: 278:     if (!(flags
      +                           & (1 << 0))) {
 11285  0041FC  0100               	movlb	0	; () banked
 11286  0041FE  B1D8               	btfsc	_flags& (0+255),0,b
 11287  004200  EF04  F021         	goto	u5021
 11288  004204  EF06  F021         	goto	u5020
 11289  004208                     u5021:
 11290  004208  EF0F  F021         	goto	l4066
 11291  00420C                     u5020:
 11292  00420C                     
 11293                           ; BSR set to: 0
 11294                           ;/Applications/microchip/xc8/v2.31/pic/sources/c99/common/doprnt.c: 279:         fputc(c
      +                          , fp);
 11295  00420C  C00F  F004         	movff	ctoa@c,fputc@c
 11296  004210  6A05               	clrf	(fputc@c+1)^0,c
 11297  004212  C00D  F006         	movff	ctoa@fp,fputc@fp
 11298  004216  C00E  F007         	movff	ctoa@fp+1,fputc@fp+1
 11299  00421A  EC81  F021         	call	_fputc	;wreg free
 11300  00421E                     l4066:
 11301                           
 11302                           ;/Applications/microchip/xc8/v2.31/pic/sources/c99/common/doprnt.c: 282:     return l+1;
 11303  00421E  0E01               	movlw	1
 11304  004220  2411               	addwf	ctoa@l^0,w,c
 11305  004222  6E0D               	movwf	?_ctoa^0,c
 11306  004224  0E00               	movlw	0
 11307  004226  2012               	addwfc	(ctoa@l+1)^0,w,c
 11308  004228  6E0E               	movwf	(?_ctoa+1)^0,c
 11309  00422A  0012               	return		;funcret
 11310  00422C                     __end_of_ctoa:
 11311                           	callstack 0
 11312                           
 11313 ;; *************** function _fputc *****************
 11314 ;; Defined at:
 11315 ;;		line 8 in file "/Applications/microchip/xc8/v2.31/pic/sources/c99/common/nf_fputc.c"
 11316 ;; Parameters:    Size  Location     Type
 11317 ;;  c               2    3[COMRAM] int 
 11318 ;;  fp              2    5[COMRAM] PTR struct _IO_FILE
 11319 ;;		 -> NULL(0), sprintf@f(6), 
 11320 ;; Auto vars:     Size  Location     Type
 11321 ;;		None
 11322 ;; Return value:  Size  Location     Type
 11323 ;;                  2    3[COMRAM] int 
 11324 ;; Registers used:
 11325 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
 11326 ;; Tracked objects:
 11327 ;;		On entry : 0/0
 11328 ;;		On exit  : 0/0
 11329 ;;		Unchanged: 0/0
 11330 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 11331 ;;      Params:         4       0       0       0       0       0       0       0       0
 11332 ;;      Locals:         0       0       0       0       0       0       0       0       0
 11333 ;;      Temps:          5       0       0       0       0       0       0       0       0
 11334 ;;      Totals:         9       0       0       0       0       0       0       0       0
 11335 ;;Total ram usage:        9 bytes
 11336 ;; Hardware stack levels used:    1
 11337 ;; Hardware stack levels required when called:    1
 11338 ;; This function calls:
 11339 ;;		_putch
 11340 ;; This function is called by:
 11341 ;;		_pad
 11342 ;;		_ctoa
 11343 ;;		_vfpfcnvrt
 11344 ;;		_fputs
 11345 ;; This function uses a non-reentrant model
 11346 ;;
 11347                           
 11348                           	psect	text45
 11349  004302                     __ptext45:
 11350                           	callstack 0
 11351  004302                     _fputc:
 11352                           	callstack 25
 11353  004302  5006               	movf	fputc@fp^0,w,c
 11354  004304  1007               	iorwf	(fputc@fp+1)^0,w,c
 11355  004306  B4D8               	btfsc	status,2,c
 11356  004308  EF88  F021         	goto	u3371
 11357  00430C  EF8A  F021         	goto	u3370
 11358  004310                     u3371:
 11359  004310  EF93  F021         	goto	l3172
 11360  004314                     u3370:
 11361  004314  5006               	movf	fputc@fp^0,w,c
 11362  004316  1007               	iorwf	(fputc@fp+1)^0,w,c
 11363  004318  A4D8               	btfss	status,2,c
 11364  00431A  EF91  F021         	goto	u3381
 11365  00431E  EF93  F021         	goto	u3380
 11366  004322                     u3381:
 11367  004322  EF98  F021         	goto	l3174
 11368  004326                     u3380:
 11369  004326                     l3172:
 11370  004326  5004               	movf	fputc@c^0,w,c
 11371  004328  EC8C  F025         	call	_putch
 11372  00432C  EFE5  F021         	goto	l1203
 11373  004330                     l3174:
 11374  004330  EE20 F004          	lfsr	2,4
 11375  004334  5006               	movf	fputc@fp^0,w,c
 11376  004336  26D9               	addwf	fsr2l,f,c
 11377  004338  5007               	movf	(fputc@fp+1)^0,w,c
 11378  00433A  22DA               	addwfc	fsr2h,f,c
 11379  00433C  50DE               	movf	postinc2,w,c
 11380  00433E  10DE               	iorwf	postinc2,w,c
 11381  004340  B4D8               	btfsc	status,2,c
 11382  004342  EFA5  F021         	goto	u3391
 11383  004346  EFA7  F021         	goto	u3390
 11384  00434A                     u3391:
 11385  00434A  EFC2  F021         	goto	l3178
 11386  00434E                     u3390:
 11387  00434E  EE20 F004          	lfsr	2,4
 11388  004352  5006               	movf	fputc@fp^0,w,c
 11389  004354  26D9               	addwf	fsr2l,f,c
 11390  004356  5007               	movf	(fputc@fp+1)^0,w,c
 11391  004358  22DA               	addwfc	fsr2h,f,c
 11392  00435A  EE10 F002          	lfsr	1,2
 11393  00435E  5006               	movf	fputc@fp^0,w,c
 11394  004360  26E1               	addwf	fsr1l,f,c
 11395  004362  5007               	movf	(fputc@fp+1)^0,w,c
 11396  004364  22E2               	addwfc	fsr1h,f,c
 11397  004366  50DE               	movf	postinc2,w,c
 11398  004368  5CE6               	subwf	postinc1,w,c
 11399  00436A  50E6               	movf	postinc1,w,c
 11400  00436C  0A80               	xorlw	128
 11401  00436E  6E0C               	movwf	(??_fputc+4)^0,c
 11402  004370  50DE               	movf	postinc2,w,c
 11403  004372  0A80               	xorlw	128
 11404  004374  580C               	subwfb	(??_fputc+4)^0,w,c
 11405  004376  B0D8               	btfsc	status,0,c
 11406  004378  EFC0  F021         	goto	u3401
 11407  00437C  EFC2  F021         	goto	u3400
 11408  004380                     u3401:
 11409  004380  EFE5  F021         	goto	l1203
 11410  004384                     u3400:
 11411  004384                     l3178:
 11412  004384  EE20 F002          	lfsr	2,2
 11413  004388  5006               	movf	fputc@fp^0,w,c
 11414  00438A  26D9               	addwf	fsr2l,f,c
 11415  00438C  5007               	movf	(fputc@fp+1)^0,w,c
 11416  00438E  22DA               	addwfc	fsr2h,f,c
 11417  004390  CFDE F008          	movff	postinc2,??_fputc
 11418  004394  CFDD F009          	movff	postdec2,??_fputc+1
 11419  004398  C006  FFD9         	movff	fputc@fp,fsr2l
 11420  00439C  C007  FFDA         	movff	fputc@fp+1,fsr2h
 11421  0043A0  CFDE F00A          	movff	postinc2,??_fputc+2
 11422  0043A4  CFDD F00B          	movff	postdec2,??_fputc+3
 11423  0043A8  5008               	movf	??_fputc^0,w,c
 11424  0043AA  240A               	addwf	(??_fputc+2)^0,w,c
 11425  0043AC  6ED9               	movwf	fsr2l,c
 11426  0043AE  5009               	movf	(??_fputc+1)^0,w,c
 11427  0043B0  200B               	addwfc	(??_fputc+3)^0,w,c
 11428  0043B2  6EDA               	movwf	fsr2h,c
 11429  0043B4  C004  FFDF         	movff	fputc@c,indf2
 11430  0043B8  EE20 F002          	lfsr	2,2
 11431  0043BC  5006               	movf	fputc@fp^0,w,c
 11432  0043BE  26D9               	addwf	fsr2l,f,c
 11433  0043C0  5007               	movf	(fputc@fp+1)^0,w,c
 11434  0043C2  22DA               	addwfc	fsr2h,f,c
 11435  0043C4  2ADE               	incf	postinc2,f,c
 11436  0043C6  0E00               	movlw	0
 11437  0043C8  22DD               	addwfc	postdec2,f,c
 11438  0043CA                     l1203:
 11439  0043CA  0012               	return		;funcret
 11440  0043CC                     __end_of_fputc:
 11441                           	callstack 0
 11442                           
 11443 ;; *************** function _putch *****************
 11444 ;; Defined at:
 11445 ;;		line 216 in file "SensorValoresExactos.c"
 11446 ;; Parameters:    Size  Location     Type
 11447 ;;  data            1    wreg     unsigned char 
 11448 ;; Auto vars:     Size  Location     Type
 11449 ;;  data            1    1[COMRAM] unsigned char 
 11450 ;;  Activa          1    2[COMRAM] unsigned char 
 11451 ;; Return value:  Size  Location     Type
 11452 ;;                  1    wreg      void 
 11453 ;; Registers used:
 11454 ;;		wreg, status,2, status,0
 11455 ;; Tracked objects:
 11456 ;;		On entry : 0/0
 11457 ;;		On exit  : 0/0
 11458 ;;		Unchanged: 0/0
 11459 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 11460 ;;      Params:         0       0       0       0       0       0       0       0       0
 11461 ;;      Locals:         2       0       0       0       0       0       0       0       0
 11462 ;;      Temps:          1       0       0       0       0       0       0       0       0
 11463 ;;      Totals:         3       0       0       0       0       0       0       0       0
 11464 ;;Total ram usage:        3 bytes
 11465 ;; Hardware stack levels used:    1
 11466 ;; This function calls:
 11467 ;;		Nothing
 11468 ;; This function is called by:
 11469 ;;		_fputc
 11470 ;; This function uses a non-reentrant model
 11471 ;;
 11472                           
 11473                           	psect	text46
 11474  004B18                     __ptext46:
 11475                           	callstack 0
 11476  004B18                     _putch:
 11477                           	callstack 25
 11478                           
 11479                           ;incstack = 0
 11480                           ;putch@data stored from wreg
 11481  004B18  6E02               	movwf	putch@data^0,c
 11482  004B1A                     
 11483                           ;SensorValoresExactos.c: 216: void putch(char data);SensorValoresExactos.c: 217: {;Senso
      +                          rValoresExactos.c: 218:     char Activa;;SensorValoresExactos.c: 219:     Activa = data 
      +                          & 0xF0;
 11484  004B1A  5002               	movf	putch@data^0,w,c
 11485  004B1C  0BF0               	andlw	240
 11486  004B1E  6E03               	movwf	putch@Activa^0,c
 11487                           
 11488                           ;SensorValoresExactos.c: 220:     LATD = Activa | 0x05;
 11489  004B20  5003               	movf	putch@Activa^0,w,c
 11490  004B22  0905               	iorlw	5
 11491  004B24  6E8C               	movwf	140,c	;volatile
 11492  004B26                     
 11493                           ;SensorValoresExactos.c: 222:     _delay((unsigned long)((10)*(8000000/4000000.0)));
 11494  004B26  0E06               	movlw	6
 11495  004B28                     u6977:
 11496  004B28  2EE8               	decfsz	wreg,f,c
 11497  004B2A  D7FE               	bra	u6977
 11498  004B2C  D000               	nop2	
 11499  004B2E                     
 11500                           ;SensorValoresExactos.c: 223:     LATD = Activa | 0x01;
 11501  004B2E  5003               	movf	putch@Activa^0,w,c
 11502  004B30  0901               	iorlw	1
 11503  004B32  6E8C               	movwf	140,c	;volatile
 11504                           
 11505                           ;SensorValoresExactos.c: 225:     _delay((unsigned long)((1)*(8000000/4000.0)));
 11506  004B34  0E03               	movlw	3
 11507  004B36  6E01               	movwf	??_putch^0,c
 11508  004B38  0E98               	movlw	152
 11509  004B3A                     u6987:
 11510  004B3A  2EE8               	decfsz	wreg,f,c
 11511  004B3C  D7FE               	bra	u6987
 11512  004B3E  2E01               	decfsz	??_putch^0,f,c
 11513  004B40  D7FC               	bra	u6987
 11514  004B42                     
 11515                           ;SensorValoresExactos.c: 226:     Activa = (unsigned char)(data << 4);
 11516  004B42  3802               	swapf	putch@data^0,w,c
 11517  004B44  0BF0               	andlw	240
 11518  004B46  6E03               	movwf	putch@Activa^0,c
 11519  004B48                     
 11520                           ;SensorValoresExactos.c: 227:     LATD = Activa | 0x05;
 11521  004B48  5003               	movf	putch@Activa^0,w,c
 11522  004B4A  0905               	iorlw	5
 11523  004B4C  6E8C               	movwf	140,c	;volatile
 11524                           
 11525                           ;SensorValoresExactos.c: 228:     _delay((unsigned long)((10)*(8000000/4000000.0)));
 11526  004B4E  0E06               	movlw	6
 11527  004B50                     u6997:
 11528  004B50  2EE8               	decfsz	wreg,f,c
 11529  004B52  D7FE               	bra	u6997
 11530  004B54  D000               	nop2	
 11531  004B56                     
 11532                           ;SensorValoresExactos.c: 229:     LATD = Activa | 0x01;
 11533  004B56  5003               	movf	putch@Activa^0,w,c
 11534  004B58  0901               	iorlw	1
 11535  004B5A  6E8C               	movwf	140,c	;volatile
 11536  004B5C  0012               	return		;funcret
 11537  004B5E                     __end_of_putch:
 11538                           	callstack 0
 11539                           
 11540 ;; *************** function _atoi *****************
 11541 ;; Defined at:
 11542 ;;		line 4 in file "/Applications/microchip/xc8/v2.31/pic/sources/c99/common/atoi.c"
 11543 ;; Parameters:    Size  Location     Type
 11544 ;;  s               2    7[COMRAM] PTR const unsigned char 
 11545 ;;		 -> STR_7(19), STR_6(19), STR_5(14), STR_4(19), 
 11546 ;;		 -> STR_3(19), STR_2(18), STR_1(18), Valores(16), 
 11547 ;; Auto vars:     Size  Location     Type
 11548 ;;  n               2   20[COMRAM] int 
 11549 ;;  neg             2   13[COMRAM] int 
 11550 ;; Return value:  Size  Location     Type
 11551 ;;                  2    7[COMRAM] int 
 11552 ;; Registers used:
 11553 ;;		wreg, fsr1l, fsr1h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 11554 ;; Tracked objects:
 11555 ;;		On entry : 0/0
 11556 ;;		On exit  : 0/0
 11557 ;;		Unchanged: 0/0
 11558 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 11559 ;;      Params:         2       0       0       0       0       0       0       0       0
 11560 ;;      Locals:         9       0       0       0       0       0       0       0       0
 11561 ;;      Temps:          4       0       0       0       0       0       0       0       0
 11562 ;;      Totals:        15       0       0       0       0       0       0       0       0
 11563 ;;Total ram usage:       15 bytes
 11564 ;; Hardware stack levels used:    1
 11565 ;; Hardware stack levels required when called:    1
 11566 ;; This function calls:
 11567 ;;		___wmul
 11568 ;;		_isdigit
 11569 ;;		_isspace
 11570 ;; This function is called by:
 11571 ;;		_vfpfcnvrt
 11572 ;; This function uses a non-reentrant model
 11573 ;;
 11574                           
 11575                           	psect	text47
 11576  00355C                     __ptext47:
 11577                           	callstack 0
 11578  00355C                     _atoi:
 11579                           	callstack 25
 11580  00355C  0E00               	movlw	0
 11581  00355E  6E16               	movwf	(atoi@n+1)^0,c
 11582  003560  0E00               	movlw	0
 11583  003562  6E15               	movwf	atoi@n^0,c
 11584  003564  0E00               	movlw	0
 11585  003566  6E0F               	movwf	(atoi@neg+1)^0,c
 11586  003568  0E00               	movlw	0
 11587  00356A  6E0E               	movwf	atoi@neg^0,c
 11588  00356C  EFBA  F01A         	goto	l4444
 11589  003570                     l4442:
 11590  003570  4A08               	infsnz	atoi@s^0,f,c
 11591  003572  2A09               	incf	(atoi@s+1)^0,f,c
 11592  003574                     l4444:
 11593  003574  0E01               	movlw	1
 11594  003576  6E14               	movwf	_atoi$1337^0,c
 11595  003578  C008  FFF6         	movff	atoi@s,tblptrl
 11596  00357C  C009  FFF7         	movff	atoi@s+1,tblptrh
 11597  003580  6AF8               	clrf	tblptru,c
 11598  003582  0E07               	movlw	(high __ramtop+-1)
 11599  003584  64F7               	cpfsgt	tblptrh,c
 11600  003586  D003               	bra	u5727
 11601  003588  0008               	tblrd		*
 11602  00358A  50F5               	movf	tablat,w,c
 11603  00358C  D005               	bra	u5720
 11604  00358E                     u5727:
 11605  00358E  CFF6 FFE1          	movff	tblptrl,fsr1l
 11606  003592  CFF7 FFE2          	movff	tblptrh,fsr1h
 11607  003596  50E7               	movf	indf1,w,c
 11608  003598                     u5720:
 11609  003598  0A20               	xorlw	32
 11610  00359A  B4D8               	btfsc	status,2,c
 11611  00359C  EFD2  F01A         	goto	u5731
 11612  0035A0  EFD4  F01A         	goto	u5730
 11613  0035A4                     u5731:
 11614  0035A4  EFFB  F01A         	goto	l4452
 11615  0035A8                     u5730:
 11616  0035A8  0EF7               	movlw	247
 11617  0035AA  6E0A               	movwf	??_atoi^0,c
 11618  0035AC  0EFF               	movlw	255
 11619  0035AE  6E0B               	movwf	(??_atoi+1)^0,c
 11620  0035B0  C008  FFF6         	movff	atoi@s,tblptrl
 11621  0035B4  C009  FFF7         	movff	atoi@s+1,tblptrh
 11622  0035B8  6AF8               	clrf	tblptru,c
 11623  0035BA  0E07               	movlw	(high __ramtop+-1)
 11624  0035BC  64F7               	cpfsgt	tblptrh,c
 11625  0035BE  D003               	bra	u5747
 11626  0035C0  0008               	tblrd		*
 11627  0035C2  50F5               	movf	tablat,w,c
 11628  0035C4  D005               	bra	u5740
 11629  0035C6                     u5747:
 11630  0035C6  CFF6 FFE1          	movff	tblptrl,fsr1l
 11631  0035CA  CFF7 FFE2          	movff	tblptrh,fsr1h
 11632  0035CE  50E7               	movf	indf1,w,c
 11633  0035D0                     u5740:
 11634  0035D0  6E0C               	movwf	(??_atoi+2)^0,c
 11635  0035D2  6A0D               	clrf	(??_atoi+3)^0,c
 11636  0035D4  500A               	movf	??_atoi^0,w,c
 11637  0035D6  260C               	addwf	(??_atoi+2)^0,f,c
 11638  0035D8  500B               	movf	(??_atoi+1)^0,w,c
 11639  0035DA  220D               	addwfc	(??_atoi+3)^0,f,c
 11640  0035DC  500D               	movf	(??_atoi+3)^0,w,c
 11641  0035DE  E109               	bnz	u5750
 11642  0035E0  0E05               	movlw	5
 11643  0035E2  5C0C               	subwf	(??_atoi+2)^0,w,c
 11644  0035E4  A0D8               	btfss	status,0,c
 11645  0035E6  EFF7  F01A         	goto	u5751
 11646  0035EA  EFF9  F01A         	goto	u5750
 11647  0035EE                     u5751:
 11648  0035EE  EFFB  F01A         	goto	l4452
 11649  0035F2                     u5750:
 11650  0035F2  0E00               	movlw	0
 11651  0035F4  6E14               	movwf	_atoi$1337^0,c
 11652  0035F6                     l4452:
 11653  0035F6  C014  F010         	movff	_atoi$1337,_atoi$1336
 11654  0035FA  6A11               	clrf	(_atoi$1336+1)^0,c
 11655  0035FC  5010               	movf	_atoi$1336^0,w,c
 11656  0035FE  1011               	iorwf	(_atoi$1336+1)^0,w,c
 11657  003600  A4D8               	btfss	status,2,c
 11658  003602  EF05  F01B         	goto	u5761
 11659  003606  EF07  F01B         	goto	u5760
 11660  00360A                     u5761:
 11661  00360A  EFB8  F01A         	goto	l4442
 11662  00360E                     u5760:
 11663  00360E  EF11  F01B         	goto	l4462
 11664  003612                     l4458:
 11665  003612  0E00               	movlw	0
 11666  003614  6E0F               	movwf	(atoi@neg+1)^0,c
 11667  003616  0E01               	movlw	1
 11668  003618  6E0E               	movwf	atoi@neg^0,c
 11669  00361A                     l4460:
 11670  00361A  4A08               	infsnz	atoi@s^0,f,c
 11671  00361C  2A09               	incf	(atoi@s+1)^0,f,c
 11672  00361E  EF5C  F01B         	goto	l4468
 11673  003622                     l4462:
 11674  003622  C008  FFF6         	movff	atoi@s,tblptrl
 11675  003626  C009  FFF7         	movff	atoi@s+1,tblptrh
 11676  00362A  6AF8               	clrf	tblptru,c
 11677  00362C  0E07               	movlw	(high __ramtop+-1)
 11678  00362E  64F7               	cpfsgt	tblptrh,c
 11679  003630  D003               	bra	u5777
 11680  003632  0008               	tblrd		*
 11681  003634  50F5               	movf	tablat,w,c
 11682  003636  D005               	bra	u5770
 11683  003638                     u5777:
 11684  003638  CFF6 FFE1          	movff	tblptrl,fsr1l
 11685  00363C  CFF7 FFE2          	movff	tblptrh,fsr1h
 11686  003640  50E7               	movf	indf1,w,c
 11687  003642                     u5770:
 11688  003642  6E0A               	movwf	??_atoi^0,c
 11689  003644  6A0B               	clrf	(??_atoi+1)^0,c
 11690                           
 11691                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
 11692                           ; Switch size 1, requested type "simple"
 11693                           ; Number of cases is 1, Range of values is 0 to 0
 11694                           ; switch strategies available:
 11695                           ; Name         Instructions Cycles
 11696                           ; simple_byte            4     3 (average)
 11697                           ;	Chosen strategy is simple_byte
 11698  003646  500B               	movf	(??_atoi+1)^0,w,c
 11699  003648  0A00               	xorlw	0	; case 0
 11700  00364A  B4D8               	btfsc	status,2,c
 11701  00364C  EF2A  F01B         	goto	l5060
 11702  003650  EF5C  F01B         	goto	l4468
 11703  003654                     l5060:
 11704                           
 11705                           ; Switch size 1, requested type "simple"
 11706                           ; Number of cases is 2, Range of values is 43 to 45
 11707                           ; switch strategies available:
 11708                           ; Name         Instructions Cycles
 11709                           ; simple_byte            7     4 (average)
 11710                           ;	Chosen strategy is simple_byte
 11711  003654  500A               	movf	??_atoi^0,w,c
 11712  003656  0A2B               	xorlw	43	; case 43
 11713  003658  B4D8               	btfsc	status,2,c
 11714  00365A  EF0D  F01B         	goto	l4460
 11715  00365E  0A06               	xorlw	6	; case 45
 11716  003660  B4D8               	btfsc	status,2,c
 11717  003662  EF09  F01B         	goto	l4458
 11718  003666  EF5C  F01B         	goto	l4468
 11719  00366A                     l4464:
 11720  00366A  C015  F001         	movff	atoi@n,___wmul@multiplier
 11721  00366E  C016  F002         	movff	atoi@n+1,___wmul@multiplier+1
 11722  003672  0E00               	movlw	0
 11723  003674  6E04               	movwf	(___wmul@multiplicand+1)^0,c
 11724  003676  0E0A               	movlw	10
 11725  003678  6E03               	movwf	___wmul@multiplicand^0,c
 11726  00367A  ECA8  F026         	call	___wmul	;wreg free
 11727  00367E  C008  FFF6         	movff	atoi@s,tblptrl
 11728  003682  C009  FFF7         	movff	atoi@s+1,tblptrh
 11729  003686  6AF8               	clrf	tblptru,c
 11730  003688  0E07               	movlw	(high __ramtop+-1)
 11731  00368A  64F7               	cpfsgt	tblptrh,c
 11732  00368C  D003               	bra	u5787
 11733  00368E  0008               	tblrd		*
 11734  003690  50F5               	movf	tablat,w,c
 11735  003692  D005               	bra	u5780
 11736  003694                     u5787:
 11737  003694  CFF6 FFE1          	movff	tblptrl,fsr1l
 11738  003698  CFF7 FFE2          	movff	tblptrh,fsr1h
 11739  00369C  50E7               	movf	indf1,w,c
 11740  00369E                     u5780:
 11741  00369E  6E0A               	movwf	??_atoi^0,c
 11742  0036A0  500A               	movf	??_atoi^0,w,c
 11743  0036A2  5E01               	subwf	?___wmul^0,f,c
 11744  0036A4  0E00               	movlw	0
 11745  0036A6  5A02               	subwfb	(?___wmul+1)^0,f,c
 11746  0036A8  0E30               	movlw	48
 11747  0036AA  2401               	addwf	?___wmul^0,w,c
 11748  0036AC  6E15               	movwf	atoi@n^0,c
 11749  0036AE  0E00               	movlw	0
 11750  0036B0  2002               	addwfc	(?___wmul+1)^0,w,c
 11751  0036B2  6E16               	movwf	(atoi@n+1)^0,c
 11752  0036B4  EF0D  F01B         	goto	l4460
 11753  0036B8                     l4468:
 11754  0036B8  0ED0               	movlw	208
 11755  0036BA  6E0A               	movwf	??_atoi^0,c
 11756  0036BC  0EFF               	movlw	255
 11757  0036BE  6E0B               	movwf	(??_atoi+1)^0,c
 11758  0036C0  C008  FFF6         	movff	atoi@s,tblptrl
 11759  0036C4  C009  FFF7         	movff	atoi@s+1,tblptrh
 11760  0036C8  6AF8               	clrf	tblptru,c
 11761  0036CA  0E07               	movlw	(high __ramtop+-1)
 11762  0036CC  64F7               	cpfsgt	tblptrh,c
 11763  0036CE  D003               	bra	u5797
 11764  0036D0  0008               	tblrd		*
 11765  0036D2  50F5               	movf	tablat,w,c
 11766  0036D4  D005               	bra	u5790
 11767  0036D6                     u5797:
 11768  0036D6  CFF6 FFE1          	movff	tblptrl,fsr1l
 11769  0036DA  CFF7 FFE2          	movff	tblptrh,fsr1h
 11770  0036DE  50E7               	movf	indf1,w,c
 11771  0036E0                     u5790:
 11772  0036E0  6E0C               	movwf	(??_atoi+2)^0,c
 11773  0036E2  6A0D               	clrf	(??_atoi+3)^0,c
 11774  0036E4  500A               	movf	??_atoi^0,w,c
 11775  0036E6  260C               	addwf	(??_atoi+2)^0,f,c
 11776  0036E8  500B               	movf	(??_atoi+1)^0,w,c
 11777  0036EA  220D               	addwfc	(??_atoi+3)^0,f,c
 11778  0036EC  500D               	movf	(??_atoi+3)^0,w,c
 11779  0036EE  E10A               	bnz	u5800
 11780  0036F0  0E0A               	movlw	10
 11781  0036F2  5C0C               	subwf	(??_atoi+2)^0,w,c
 11782  0036F4  A0D8               	btfss	status,0,c
 11783  0036F6  EF7F  F01B         	goto	u5801
 11784  0036FA  EF82  F01B         	goto	u5800
 11785  0036FE                     u5801:
 11786  0036FE  0E01               	movlw	1
 11787  003700  EF83  F01B         	goto	u5810
 11788  003704                     u5800:
 11789  003704  0E00               	movlw	0
 11790  003706                     u5810:
 11791  003706  6E12               	movwf	_atoi$1338^0,c
 11792  003708  6A13               	clrf	(_atoi$1338+1)^0,c
 11793  00370A  5012               	movf	_atoi$1338^0,w,c
 11794  00370C  1013               	iorwf	(_atoi$1338+1)^0,w,c
 11795  00370E  A4D8               	btfss	status,2,c
 11796  003710  EF8C  F01B         	goto	u5821
 11797  003714  EF8E  F01B         	goto	u5820
 11798  003718                     u5821:
 11799  003718  EF35  F01B         	goto	l4464
 11800  00371C                     u5820:
 11801  00371C  500E               	movf	atoi@neg^0,w,c
 11802  00371E  100F               	iorwf	(atoi@neg+1)^0,w,c
 11803  003720  A4D8               	btfss	status,2,c
 11804  003722  EF95  F01B         	goto	u5831
 11805  003726  EF97  F01B         	goto	u5830
 11806  00372A                     u5831:
 11807  00372A  EFA5  F01B         	goto	l1168
 11808  00372E                     u5830:
 11809  00372E  C015  F00A         	movff	atoi@n,??_atoi
 11810  003732  C016  F00B         	movff	atoi@n+1,??_atoi+1
 11811  003736  1E0A               	comf	??_atoi^0,f,c
 11812  003738  1E0B               	comf	(??_atoi+1)^0,f,c
 11813  00373A  4A0A               	infsnz	??_atoi^0,f,c
 11814  00373C  2A0B               	incf	(??_atoi+1)^0,f,c
 11815  00373E  C00A  F008         	movff	??_atoi,?_atoi
 11816  003742  C00B  F009         	movff	??_atoi+1,?_atoi+1
 11817  003746  EFA9  F01B         	goto	l1171
 11818  00374A                     l1168:
 11819  00374A  C015  F008         	movff	atoi@n,?_atoi
 11820  00374E  C016  F009         	movff	atoi@n+1,?_atoi+1
 11821  003752                     l1171:
 11822  003752  0012               	return		;funcret
 11823  003754                     __end_of_atoi:
 11824                           	callstack 0
 11825                           
 11826 ;; *************** function _isspace *****************
 11827 ;; Defined at:
 11828 ;;		line 5 in file "/Applications/microchip/xc8/v2.31/pic/sources/c99/common/isspace.c"
 11829 ;; Parameters:    Size  Location     Type
 11830 ;;  c               2    0[COMRAM] int 
 11831 ;; Auto vars:     Size  Location     Type
 11832 ;;		None
 11833 ;; Return value:  Size  Location     Type
 11834 ;;                  2    0[COMRAM] int 
 11835 ;; Registers used:
 11836 ;;		wreg, status,2, status,0
 11837 ;; Tracked objects:
 11838 ;;		On entry : 0/0
 11839 ;;		On exit  : 0/0
 11840 ;;		Unchanged: 0/0
 11841 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 11842 ;;      Params:         2       0       0       0       0       0       0       0       0
 11843 ;;      Locals:         1       0       0       0       0       0       0       0       0
 11844 ;;      Temps:          4       0       0       0       0       0       0       0       0
 11845 ;;      Totals:         7       0       0       0       0       0       0       0       0
 11846 ;;Total ram usage:        7 bytes
 11847 ;; Hardware stack levels used:    1
 11848 ;; This function calls:
 11849 ;;		Nothing
 11850 ;; This function is called by:
 11851 ;;		_atoi
 11852 ;; This function uses a non-reentrant model
 11853 ;;
 11854                           
 11855                           	psect	text48
 11856  004A3A                     __ptext48:
 11857                           	callstack 0
 11858  004A3A                     _isspace:
 11859                           	callstack 25
 11860  004A3A  0E01               	movlw	1
 11861  004A3C  6E07               	movwf	_isspace$1354^0,c
 11862  004A3E  0E20               	movlw	32
 11863  004A40  1801               	xorwf	isspace@c^0,w,c
 11864  004A42  1002               	iorwf	(isspace@c+1)^0,w,c
 11865  004A44  B4D8               	btfsc	status,2,c
 11866  004A46  EF27  F025         	goto	u4961
 11867  004A4A  EF29  F025         	goto	u4960
 11868  004A4E                     u4961:
 11869  004A4E  EF42  F025         	goto	l4038
 11870  004A52                     u4960:
 11871  004A52  0EF7               	movlw	247
 11872  004A54  6E03               	movwf	??_isspace^0,c
 11873  004A56  0EFF               	movlw	255
 11874  004A58  6E04               	movwf	(??_isspace+1)^0,c
 11875  004A5A  C001  F005         	movff	isspace@c,??_isspace+2
 11876  004A5E  C002  F006         	movff	isspace@c+1,??_isspace+3
 11877  004A62  5003               	movf	??_isspace^0,w,c
 11878  004A64  2605               	addwf	(??_isspace+2)^0,f,c
 11879  004A66  5004               	movf	(??_isspace+1)^0,w,c
 11880  004A68  2206               	addwfc	(??_isspace+3)^0,f,c
 11881  004A6A  5006               	movf	(??_isspace+3)^0,w,c
 11882  004A6C  E109               	bnz	u4970
 11883  004A6E  0E05               	movlw	5
 11884  004A70  5C05               	subwf	(??_isspace+2)^0,w,c
 11885  004A72  A0D8               	btfss	status,0,c
 11886  004A74  EF3E  F025         	goto	u4971
 11887  004A78  EF40  F025         	goto	u4970
 11888  004A7C                     u4971:
 11889  004A7C  EF42  F025         	goto	l4038
 11890  004A80                     u4970:
 11891  004A80  0E00               	movlw	0
 11892  004A82  6E07               	movwf	_isspace$1354^0,c
 11893  004A84                     l4038:
 11894  004A84  C007  F001         	movff	_isspace$1354,?_isspace
 11895  004A88  6A02               	clrf	(?_isspace+1)^0,c
 11896  004A8A  0012               	return		;funcret
 11897  004A8C                     __end_of_isspace:
 11898                           	callstack 0
 11899                           
 11900 ;; *************** function _isdigit *****************
 11901 ;; Defined at:
 11902 ;;		line 5 in file "/Applications/microchip/xc8/v2.31/pic/sources/c99/common/isdigit.c"
 11903 ;; Parameters:    Size  Location     Type
 11904 ;;  c               2    0[COMRAM] int 
 11905 ;; Auto vars:     Size  Location     Type
 11906 ;;		None
 11907 ;; Return value:  Size  Location     Type
 11908 ;;                  2    0[COMRAM] int 
 11909 ;; Registers used:
 11910 ;;		wreg, status,2, status,0
 11911 ;; Tracked objects:
 11912 ;;		On entry : 0/0
 11913 ;;		On exit  : 0/0
 11914 ;;		Unchanged: 0/0
 11915 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 11916 ;;      Params:         2       0       0       0       0       0       0       0       0
 11917 ;;      Locals:         0       0       0       0       0       0       0       0       0
 11918 ;;      Temps:          4       0       0       0       0       0       0       0       0
 11919 ;;      Totals:         6       0       0       0       0       0       0       0       0
 11920 ;;Total ram usage:        6 bytes
 11921 ;; Hardware stack levels used:    1
 11922 ;; This function calls:
 11923 ;;		Nothing
 11924 ;; This function is called by:
 11925 ;;		_vfpfcnvrt
 11926 ;;		_atoi
 11927 ;; This function uses a non-reentrant model
 11928 ;;
 11929                           
 11930                           	psect	text49
 11931  004C94                     __ptext49:
 11932                           	callstack 0
 11933  004C94                     _isdigit:
 11934                           	callstack 26
 11935  004C94  0ED0               	movlw	208
 11936  004C96  6E03               	movwf	??_isdigit^0,c
 11937  004C98  0EFF               	movlw	255
 11938  004C9A  6E04               	movwf	(??_isdigit+1)^0,c
 11939  004C9C  C001  F005         	movff	isdigit@c,??_isdigit+2
 11940  004CA0  C002  F006         	movff	isdigit@c+1,??_isdigit+3
 11941  004CA4  5003               	movf	??_isdigit^0,w,c
 11942  004CA6  2605               	addwf	(??_isdigit+2)^0,f,c
 11943  004CA8  5004               	movf	(??_isdigit+1)^0,w,c
 11944  004CAA  2206               	addwfc	(??_isdigit+3)^0,f,c
 11945  004CAC  5006               	movf	(??_isdigit+3)^0,w,c
 11946  004CAE  E10A               	bnz	u4940
 11947  004CB0  0E0A               	movlw	10
 11948  004CB2  5C05               	subwf	(??_isdigit+2)^0,w,c
 11949  004CB4  A0D8               	btfss	status,0,c
 11950  004CB6  EF5F  F026         	goto	u4941
 11951  004CBA  EF62  F026         	goto	u4940
 11952  004CBE                     u4941:
 11953  004CBE  0E01               	movlw	1
 11954  004CC0  EF63  F026         	goto	u4950
 11955  004CC4                     u4940:
 11956  004CC4  0E00               	movlw	0
 11957  004CC6                     u4950:
 11958  004CC6  6E01               	movwf	?_isdigit^0,c
 11959  004CC8  6A02               	clrf	(?_isdigit+1)^0,c
 11960  004CCA  0012               	return		;funcret
 11961  004CCC                     __end_of_isdigit:
 11962                           	callstack 0
 11963                           
 11964 ;; *************** function ___wmul *****************
 11965 ;; Defined at:
 11966 ;;		line 15 in file "/Applications/microchip/xc8/v2.31/pic/sources/c99/common/Umul16.c"
 11967 ;; Parameters:    Size  Location     Type
 11968 ;;  multiplier      2    0[COMRAM] unsigned int 
 11969 ;;  multiplicand    2    2[COMRAM] unsigned int 
 11970 ;; Auto vars:     Size  Location     Type
 11971 ;;  product         2    4[COMRAM] unsigned int 
 11972 ;; Return value:  Size  Location     Type
 11973 ;;                  2    0[COMRAM] unsigned int 
 11974 ;; Registers used:
 11975 ;;		wreg, status,2, status,0, prodl, prodh
 11976 ;; Tracked objects:
 11977 ;;		On entry : 0/0
 11978 ;;		On exit  : 0/0
 11979 ;;		Unchanged: 0/0
 11980 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 11981 ;;      Params:         4       0       0       0       0       0       0       0       0
 11982 ;;      Locals:         2       0       0       0       0       0       0       0       0
 11983 ;;      Temps:          0       0       0       0       0       0       0       0       0
 11984 ;;      Totals:         6       0       0       0       0       0       0       0       0
 11985 ;;Total ram usage:        6 bytes
 11986 ;; Hardware stack levels used:    1
 11987 ;; This function calls:
 11988 ;;		Nothing
 11989 ;; This function is called by:
 11990 ;;		_atoi
 11991 ;; This function uses a non-reentrant model
 11992 ;;
 11993                           
 11994                           	psect	text50
 11995  004D50                     __ptext50:
 11996                           	callstack 0
 11997  004D50                     ___wmul:
 11998                           	callstack 25
 11999  004D50  5001               	movf	___wmul@multiplier^0,w,c
 12000  004D52  0203               	mulwf	___wmul@multiplicand^0,c
 12001  004D54  CFF3 F005          	movff	prodl,___wmul@product
 12002  004D58  CFF4 F006          	movff	prodh,___wmul@product+1
 12003  004D5C  5001               	movf	___wmul@multiplier^0,w,c
 12004  004D5E  0204               	mulwf	(___wmul@multiplicand+1)^0,c
 12005  004D60  50F3               	movf	243,w,c
 12006  004D62  2606               	addwf	(___wmul@product+1)^0,f,c
 12007  004D64  5002               	movf	(___wmul@multiplier+1)^0,w,c
 12008  004D66  0203               	mulwf	___wmul@multiplicand^0,c
 12009  004D68  50F3               	movf	243,w,c
 12010  004D6A  2606               	addwf	(___wmul@product+1)^0,f,c
 12011  004D6C  C005  F001         	movff	___wmul@product,?___wmul
 12012  004D70  C006  F002         	movff	___wmul@product+1,?___wmul+1
 12013  004D74  0012               	return		;funcret
 12014  004D76                     __end_of___wmul:
 12015                           	callstack 0
 12016                           
 12017                           	psect	rparam
 12018  0000                     
 12019                           	psect	idloc
 12020                           
 12021                           ;Config register IDLOC0 @ 0x200000
 12022                           ;	unspecified, using default values
 12023  200000                     	org	2097152
 12024  200000  FF                 	db	255
 12025                           
 12026                           ;Config register IDLOC1 @ 0x200001
 12027                           ;	unspecified, using default values
 12028  200001                     	org	2097153
 12029  200001  FF                 	db	255
 12030                           
 12031                           ;Config register IDLOC2 @ 0x200002
 12032                           ;	unspecified, using default values
 12033  200002                     	org	2097154
 12034  200002  FF                 	db	255
 12035                           
 12036                           ;Config register IDLOC3 @ 0x200003
 12037                           ;	unspecified, using default values
 12038  200003                     	org	2097155
 12039  200003  FF                 	db	255
 12040                           
 12041                           ;Config register IDLOC4 @ 0x200004
 12042                           ;	unspecified, using default values
 12043  200004                     	org	2097156
 12044  200004  FF                 	db	255
 12045                           
 12046                           ;Config register IDLOC5 @ 0x200005
 12047                           ;	unspecified, using default values
 12048  200005                     	org	2097157
 12049  200005  FF                 	db	255
 12050                           
 12051                           ;Config register IDLOC6 @ 0x200006
 12052                           ;	unspecified, using default values
 12053  200006                     	org	2097158
 12054  200006  FF                 	db	255
 12055                           
 12056                           ;Config register IDLOC7 @ 0x200007
 12057                           ;	unspecified, using default values
 12058  200007                     	org	2097159
 12059  200007  FF                 	db	255
 12060                           
 12061                           	psect	config
 12062                           
 12063                           ;Config register CONFIG1L @ 0x300000
 12064                           ;	PLL Selection
 12065                           ;	PLLSEL = 0x0, unprogrammed default
 12066                           ;	PLL Enable Configuration bit
 12067                           ;	CFGPLLEN = OFF, PLL Disabled (firmware controlled)
 12068                           ;	CPU System Clock Postscaler
 12069                           ;	CPUDIV = 0x0, unprogrammed default
 12070                           ;	Low Speed USB mode with 48 MHz system clock
 12071                           ;	LS48MHZ = 0x0, unprogrammed default
 12072  300000                     	org	3145728
 12073  300000  00                 	db	0
 12074                           
 12075                           ;Config register CONFIG1H @ 0x300001
 12076                           ;	Oscillator Selection
 12077                           ;	FOSC = INTOSCIO, Internal oscillator
 12078                           ;	Primary Oscillator Shutdown
 12079                           ;	PCLKEN = 0x1, unprogrammed default
 12080                           ;	Fail-Safe Clock Monitor
 12081                           ;	FCMEN = OFF, Fail-Safe Clock Monitor disabled
 12082                           ;	Internal/External Oscillator Switchover
 12083                           ;	IESO = OFF, Oscillator Switchover mode disabled
 12084  300001                     	org	3145729
 12085  300001  28                 	db	40
 12086                           
 12087                           ;Config register CONFIG2L @ 0x300002
 12088                           ;	Power-up Timer Enable
 12089                           ;	nPWRTEN = OFF, Power up timer disabled
 12090                           ;	Brown-out Reset Enable
 12091                           ;	BOREN = 0x3, unprogrammed default
 12092                           ;	Brown-out Reset Voltage
 12093                           ;	BORV = 0x3, unprogrammed default
 12094                           ;	Low-Power Brown-out Reset
 12095                           ;	nLPBOR = OFF, Low-Power Brown-out Reset disabled
 12096  300002                     	org	3145730
 12097  300002  5F                 	db	95
 12098                           
 12099                           ;Config register CONFIG2H @ 0x300003
 12100                           ;	Watchdog Timer Enable bits
 12101                           ;	WDTEN = OFF, WDT disabled in hardware (SWDTEN ignored)
 12102                           ;	Watchdog Timer Postscaler
 12103                           ;	WDTPS = 0xF, unprogrammed default
 12104  300003                     	org	3145731
 12105  300003  3C                 	db	60
 12106                           
 12107                           ; Padding undefined space
 12108  300004                     	org	3145732
 12109  300004  FF                 	db	255
 12110                           
 12111                           ;Config register CONFIG3H @ 0x300005
 12112                           ;	CCP2 MUX bit
 12113                           ;	CCP2MX = 0x1, unprogrammed default
 12114                           ;	PORTB A/D Enable bit
 12115                           ;	PBADEN = 0x1, unprogrammed default
 12116                           ;	Timer3 Clock Input MUX bit
 12117                           ;	T3CMX = 0x1, unprogrammed default
 12118                           ;	SDO Output MUX bit
 12119                           ;	SDOMX = 0x1, unprogrammed default
 12120                           ;	Master Clear Reset Pin Enable
 12121                           ;	MCLRE = ON, MCLR pin enabled; RE3 input disabled
 12122  300005                     	org	3145733
 12123  300005  D3                 	db	211
 12124                           
 12125                           ;Config register CONFIG4L @ 0x300006
 12126                           ;	Stack Full/Underflow Reset
 12127                           ;	STVREN = 0x1, unprogrammed default
 12128                           ;	Single-Supply ICSP Enable bit
 12129                           ;	LVP = OFF, Single-Supply ICSP disabled
 12130                           ;	Dedicated In-Circuit Debug/Programming Port Enable
 12131                           ;	ICPRT = OFF, ICPORT disabled
 12132                           ;	Extended Instruction Set Enable bit
 12133                           ;	XINST = OFF, Instruction set extension and Indexed Addressing mode disabled
 12134                           ;	Background Debugger Enable bit
 12135                           ;	DEBUG = 0x1, unprogrammed default
 12136  300006                     	org	3145734
 12137  300006  81                 	db	129
 12138                           
 12139                           ; Padding undefined space
 12140  300007                     	org	3145735
 12141  300007  FF                 	db	255
 12142                           
 12143                           ;Config register CONFIG5L @ 0x300008
 12144                           ;	Block 0 Code Protect
 12145                           ;	CP0 = OFF, Block 0 is not code-protected
 12146                           ;	Block 1 Code Protect
 12147                           ;	CP1 = OFF, Block 1 is not code-protected
 12148                           ;	Block 2 Code Protect
 12149                           ;	CP2 = OFF, Block 2 is not code-protected
 12150                           ;	Block 3 Code Protect
 12151                           ;	CP3 = OFF, Block 3 is not code-protected
 12152  300008                     	org	3145736
 12153  300008  0F                 	db	15
 12154                           
 12155                           ;Config register CONFIG5H @ 0x300009
 12156                           ;	Boot Block Code Protect
 12157                           ;	CPB = OFF, Boot block is not code-protected
 12158                           ;	Data EEPROM Code Protect
 12159                           ;	CPD = OFF, Data EEPROM is not code-protected
 12160  300009                     	org	3145737
 12161  300009  C0                 	db	192
 12162                           
 12163                           ;Config register CONFIG6L @ 0x30000A
 12164                           ;	Block 0 Write Protect
 12165                           ;	WRT0 = OFF, Block 0 (0800-1FFFh) is not write-protected
 12166                           ;	Block 1 Write Protect
 12167                           ;	WRT1 = OFF, Block 1 (2000-3FFFh) is not write-protected
 12168                           ;	Block 2 Write Protect
 12169                           ;	WRT2 = OFF, Block 2 (04000-5FFFh) is not write-protected
 12170                           ;	Block 3 Write Protect
 12171                           ;	WRT3 = OFF, Block 3 (06000-7FFFh) is not write-protected
 12172  30000A                     	org	3145738
 12173  30000A  0F                 	db	15
 12174                           
 12175                           ;Config register CONFIG6H @ 0x30000B
 12176                           ;	Configuration Registers Write Protect
 12177                           ;	WRTC = OFF, Configuration registers (300000-3000FFh) are not write-protected
 12178                           ;	Boot Block Write Protect
 12179                           ;	WRTB = OFF, Boot block (0000-7FFh) is not write-protected
 12180                           ;	Data EEPROM Write Protect
 12181                           ;	WRTD = OFF, Data EEPROM is not write-protected
 12182  30000B                     	org	3145739
 12183  30000B  E0                 	db	224
 12184                           
 12185                           ;Config register CONFIG7L @ 0x30000C
 12186                           ;	Block 0 Table Read Protect
 12187                           ;	EBTR0 = OFF, Block 0 is not protected from table reads executed in other blocks
 12188                           ;	Block 1 Table Read Protect
 12189                           ;	EBTR1 = OFF, Block 1 is not protected from table reads executed in other blocks
 12190                           ;	Block 2 Table Read Protect
 12191                           ;	EBTR2 = OFF, Block 2 is not protected from table reads executed in other blocks
 12192                           ;	Block 3 Table Read Protect
 12193                           ;	EBTR3 = OFF, Block 3 is not protected from table reads executed in other blocks
 12194  30000C                     	org	3145740
 12195  30000C  0F                 	db	15
 12196                           
 12197                           ;Config register CONFIG7H @ 0x30000D
 12198                           ;	Boot Block Table Read Protect
 12199                           ;	EBTRB = OFF, Boot block is not protected from table reads executed in other blocks
 12200  30000D                     	org	3145741
 12201  30000D  40                 	db	64
 12202                           tosu	equ	0xFFF
 12203                           tosh	equ	0xFFE
 12204                           tosl	equ	0xFFD
 12205                           stkptr	equ	0xFFC
 12206                           pclatu	equ	0xFFB
 12207                           pclath	equ	0xFFA
 12208                           pcl	equ	0xFF9
 12209                           tblptru	equ	0xFF8
 12210                           tblptrh	equ	0xFF7
 12211                           tblptrl	equ	0xFF6
 12212                           tablat	equ	0xFF5
 12213                           prodh	equ	0xFF4
 12214                           prodl	equ	0xFF3
 12215                           indf0	equ	0xFEF
 12216                           postinc0	equ	0xFEE
 12217                           postdec0	equ	0xFED
 12218                           preinc0	equ	0xFEC
 12219                           plusw0	equ	0xFEB
 12220                           fsr0h	equ	0xFEA
 12221                           fsr0l	equ	0xFE9
 12222                           wreg	equ	0xFE8
 12223                           indf1	equ	0xFE7
 12224                           postinc1	equ	0xFE6
 12225                           postdec1	equ	0xFE5
 12226                           preinc1	equ	0xFE4
 12227                           plusw1	equ	0xFE3
 12228                           fsr1h	equ	0xFE2
 12229                           fsr1l	equ	0xFE1
 12230                           bsr	equ	0xFE0
 12231                           indf2	equ	0xFDF
 12232                           postinc2	equ	0xFDE
 12233                           postdec2	equ	0xFDD
 12234                           preinc2	equ	0xFDC
 12235                           plusw2	equ	0xFDB
 12236                           fsr2h	equ	0xFDA
 12237                           fsr2l	equ	0xFD9
 12238                           status	equ	0xFD8

Data Sizes:
    Strings     89
    Constant    0
    Data        0
    BSS         168
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM           95     95      95
    BANK0           160    110     160
    BANK1           256      0     118
    BANK2           256      0       0
    BANK3           256      0       0
    BANK4           256      0       0
    BANK5           256      0       0
    BANK6           256      0       0
    BANK7           256      0       0

Pointer List with Targets:

    strncmp@_r	PTR const unsigned char  size(2) Largest target is 3
		 -> STR_18(CODE[3]), 

    strncmp@r	PTR const unsigned char  size(2) Largest target is 3
		 -> STR_18(CODE[3]), 

    strncmp@_l	PTR const unsigned char  size(2) Largest target is 3
		 -> vfpfcnvrt@ct(BANK0[3]), 

    strncmp@l	PTR const unsigned char  size(2) Largest target is 3
		 -> vfpfcnvrt@ct(BANK0[3]), 

    strlen@s	PTR const unsigned char  size(2) Largest target is 80
		 -> dbuf(BANK1[80]), 

    strlen@a	PTR const unsigned char  size(2) Largest target is 80
		 -> dbuf(BANK1[80]), 

    strcpy@dest	PTR unsigned char  size(2) Largest target is 80
		 -> dbuf(BANK1[80]), 

    strcpy@d	PTR unsigned char  size(2) Largest target is 80
		 -> dbuf(BANK1[80]), 

    strcpy@src	PTR const unsigned char  size(2) Largest target is 80
		 -> STR_13(CODE[4]), STR_12(CODE[4]), STR_9(CODE[4]), STR_8(CODE[4]), 
		 -> dbuf(BANK1[80]), 

    strcpy@s	PTR const unsigned char  size(2) Largest target is 80
		 -> STR_13(CODE[4]), STR_12(CODE[4]), STR_9(CODE[4]), STR_8(CODE[4]), 
		 -> dbuf(BANK1[80]), 

    printf@fmt	PTR const unsigned char  size(2) Largest target is 19
		 -> STR_7(CODE[19]), STR_6(CODE[19]), STR_5(CODE[14]), STR_4(CODE[19]), 
		 -> STR_3(CODE[19]), Valores(BANK1[16]), 

    printf@ap	PTR void [1] size(2) Largest target is 2
		 -> ?_printf(BANK0[2]), ?_sprintf(BANK0[2]), 

    fputs@s	PTR const unsigned char  size(2) Largest target is 80
		 -> dbuf(BANK1[80]), 

    fputs@fp	PTR struct _IO_FILE size(2) Largest target is 7
		 -> NULL(NULL[0]), sprintf@f(BANK0[6]), 

    fputc@fp.buffer	PTR unsigned char  size(2) Largest target is 16
		 -> Valores(BANK1[16]), 

    fputc@fp	PTR struct _IO_FILE size(2) Largest target is 7
		 -> NULL(NULL[0]), sprintf@f(BANK0[6]), 

    atoi@s	PTR const unsigned char  size(2) Largest target is 19
		 -> STR_7(CODE[19]), STR_6(CODE[19]), STR_5(CODE[14]), STR_4(CODE[19]), 
		 -> STR_3(CODE[19]), STR_2(CODE[18]), STR_1(CODE[18]), Valores(BANK1[16]), 

    vfprintf@ap	PTR PTR void  size(2) Largest target is 2
		 -> printf@ap(BANK0[2]), sprintf@ap(BANK0[2]), 

    vfprintf@fp	PTR struct _IO_FILE size(2) Largest target is 7
		 -> NULL(NULL[0]), sprintf@f(BANK0[6]), 

    vfprintf@fmt	PTR const unsigned char  size(2) Largest target is 19
		 -> STR_7(CODE[19]), STR_6(CODE[19]), STR_5(CODE[14]), STR_4(CODE[19]), 
		 -> STR_3(CODE[19]), STR_2(CODE[18]), STR_1(CODE[18]), Valores(BANK1[16]), 

    vfprintf@cfmt	PTR unsigned char  size(2) Largest target is 19
		 -> STR_7(CODE[19]), STR_6(CODE[19]), STR_5(CODE[14]), STR_4(CODE[19]), 
		 -> STR_3(CODE[19]), STR_2(CODE[18]), STR_1(CODE[18]), Valores(BANK1[16]), 

    vfpfcnvrt@vp	PTR void  size(2) Largest target is 2
		 -> ?_printf(BANK0[2]), ?_sprintf(BANK0[2]), 

    vfpfcnvrt@fp	PTR struct _IO_FILE size(2) Largest target is 7
		 -> NULL(NULL[0]), sprintf@f(BANK0[6]), 

    vfpfcnvrt@ap	PTR PTR void  size(2) Largest target is 2
		 -> printf@ap(BANK0[2]), sprintf@ap(BANK0[2]), 

    vfpfcnvrt@fmt	PTR PTR unsigned char  size(2) Largest target is 2
		 -> vfprintf@cfmt(COMRAM[2]), 

    efgtoa@fp	PTR struct _IO_FILE size(2) Largest target is 7
		 -> NULL(NULL[0]), sprintf@f(BANK0[6]), 

    sp__strcpy	PTR unsigned char  size(2) Largest target is 80
		 -> dbuf(BANK1[80]), 

    dtoa@fp	PTR struct _IO_FILE size(2) Largest target is 7
		 -> NULL(NULL[0]), sprintf@f(BANK0[6]), 

    ctoa@fp	PTR struct _IO_FILE size(2) Largest target is 7
		 -> NULL(NULL[0]), sprintf@f(BANK0[6]), 

    pad@fp	PTR struct _IO_FILE size(2) Largest target is 7
		 -> NULL(NULL[0]), sprintf@f(BANK0[6]), 

    pad@buf	PTR unsigned char  size(2) Largest target is 80
		 -> dbuf(BANK1[80]), 

    sprintf@fmt	PTR const unsigned char  size(2) Largest target is 18
		 -> STR_2(CODE[18]), STR_1(CODE[18]), 

    sprintf@s	PTR unsigned char  size(2) Largest target is 16
		 -> Valores(BANK1[16]), 

    sprintf@ap	PTR void [1] size(2) Largest target is 2
		 -> ?_printf(BANK0[2]), ?_sprintf(BANK0[2]), 

    S1126_IO_FILE$buffer	PTR unsigned char  size(2) Largest target is 16
		 -> Valores(BANK1[16]), 

    f.buffer	PTR unsigned char  size(2) Largest target is 16
		 -> Valores(BANK1[16]), 


Critical Paths under _main in COMRAM

    _main->_SensorLM35
    _sprintf->_vfprintf
    ___xxtofl->___fltol
    _LCD_COMANDOS->_Get_DATA
    _Get_DATA->_Set_DATA
    _InicializaLCD->_putcm
    _Alarma->_Cronometro
    _printf->_vfprintf
    _vfprintf->_vfpfcnvrt
    _vfpfcnvrt->_efgtoa
    _efgtoa->___flge
    _tolower->_isupper
    _floorf->___fldiv
    ___flsub->___flmul
    ___flmul->___xxtofl
    ___flge->___flsub
    ___awdiv->_Read_ADC
    _dtoa->_pad
    _pad->_fputs
    _fputs->_fputc
    _abs->___aomod
    _ctoa->_fputc
    _fputc->_putch
    _atoi->_isspace

Critical Paths under _main in BANK0

    _main->_SensorLM35
    _SensorLM35->_sprintf
    _sprintf->_vfprintf
    _Alarma->_printf
    _Mostrar_Reloj->_printf
    _printf->_vfprintf
    _vfprintf->_vfpfcnvrt
    _vfpfcnvrt->_efgtoa

Critical Paths under _main in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _main in BANK6

    None.

Critical Paths under _main in BANK7

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 0     0      0  183092
                             _Alarma
                         _Alarma_LED
                      _Configuracion
                      _InicializaLCD
                       _LCD_COMANDOS
                         _SensorLM35
                _Timer0Configuration
 ---------------------------------------------------------------------------------
 (1) _Timer0Configuration                                  0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _SensorLM35                                           6     6      0   93776
                                             93 COMRAM     2     2      0
                                            106 BANK0      4     4      0
                           _Read_ADC
                            ___awdiv
                             ___flge
                            ___flmul
                            ___flsub
                            ___fltol
                           ___xxtofl
                              _ceilf
                             _floorf
                             _printf
                              _putcm
                            _sprintf
 ---------------------------------------------------------------------------------
 (2) _sprintf                                             20    10     10   41724
                                             86 BANK0     20    10     10
                              _ceilf (ARG)
                           _vfprintf
 ---------------------------------------------------------------------------------
 (2) _ceilf                                               20    16      4     414
                                              0 COMRAM    20    16      4
 ---------------------------------------------------------------------------------
 (2) ___xxtofl                                            14    10      4     474
                                             10 COMRAM    14    10      4
                            ___fltol (ARG)
 ---------------------------------------------------------------------------------
 (2) _Read_ADC                                             5     3      2      22
                                              0 COMRAM     5     3      2
 ---------------------------------------------------------------------------------
 (1) _LCD_COMANDOS                                         1     1      0     132
                                              3 COMRAM     1     1      0
                           _Get_DATA
 ---------------------------------------------------------------------------------
 (2) _Get_DATA                                             2     2      0      88
                                              1 COMRAM     2     2      0
                           _Set_DATA
 ---------------------------------------------------------------------------------
 (3) _Set_DATA                                             1     1      0       0
                                              0 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (1) _InicializaLCD                                        1     1      0     134
                                              3 COMRAM     1     1      0
                              _putcm
 ---------------------------------------------------------------------------------
 (1) _Configuracion                                        0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _Alarma_LED                                           3     3      0      24
                                              0 COMRAM     3     3      0
 ---------------------------------------------------------------------------------
 (1) _Alarma                                               2     2      0   89026
                                            104 BANK0      2     2      0
                         _Cronometro
                            ___awdiv
                            ___awmod
                             _printf
                              _putcm
 ---------------------------------------------------------------------------------
 (2) _Cronometro                                           2     2      0   44513
                                             93 COMRAM     2     2      0
                      _Mostrar_Reloj
 ---------------------------------------------------------------------------------
 (3) _Mostrar_Reloj                                        0     0      0   44513
                            ___awdiv
                            ___awmod
                             _printf
                              _putcm
 ---------------------------------------------------------------------------------
 (2) _putcm                                                3     3      0     134
                                              0 COMRAM     3     3      0
 ---------------------------------------------------------------------------------
 (2) _printf                                              18     4     14   41807
                                             86 BANK0     18     4     14
                           _vfprintf
 ---------------------------------------------------------------------------------
 (3) _vfprintf                                             8     2      6   41207
                                             91 COMRAM     2     2      0
                                             80 BANK0      6     0      6
                          _vfpfcnvrt
 ---------------------------------------------------------------------------------
 (4) _vfpfcnvrt                                           49    43      6   40589
                                             81 COMRAM    10     4      6
                                             56 BANK0     24    24      0
                               _atoi
                               _ctoa
                               _dtoa
                             _efgtoa
                              _fputc
                            _isdigit
                            _isupper
                            _strncmp
                            _tolower
 ---------------------------------------------------------------------------------
 (5) _strncmp                                             11     5      6     453
                                              0 COMRAM    11     5      6
 ---------------------------------------------------------------------------------
 (5) _efgtoa                                              68    61      7   25776
                                             69 COMRAM    12     5      7
                                              0 BANK0     56    56      0
                            ___awdiv
                            ___awmod
                            ___fladd
                            ___fldiv
                             ___fleq
                             ___flge
                            ___flmul
                            ___flneg
                            ___flsub
                            ___fltol
                      ___fpclassifyf
                             _floorf
                            _isupper
                                _pad
                             _strcpy
                            _tolower
 ---------------------------------------------------------------------------------
 (5) _tolower                                              8     6      2     944
                                              6 COMRAM     8     6      2
                            _isupper
 ---------------------------------------------------------------------------------
 (6) _isupper                                              6     4      2     465
                                              0 COMRAM     6     4      2
 ---------------------------------------------------------------------------------
 (6) _strcpy                                              10     6      4     856
                                              0 COMRAM    10     6      4
 ---------------------------------------------------------------------------------
 (6) _floorf                                              20    16      4     566
                                             25 COMRAM    20    16      4
                            ___fldiv (ARG)
 ---------------------------------------------------------------------------------
 (6) ___fpclassifyf                                       14    10      4     287
                                              0 COMRAM    14    10      4
 ---------------------------------------------------------------------------------
 (6) ___fltol                                             10     6      4     457
                                              0 COMRAM    10     6      4
 ---------------------------------------------------------------------------------
 (6) ___flsub                                              8     0      8    3041
                                             49 COMRAM     8     0      8
                            ___fladd
                            ___flmul (ARG)
                            ___fltol (ARG)
                           ___xxtofl (ARG)
 ---------------------------------------------------------------------------------
 (7) ___fladd                                             16     8      8    2414
                                              0 COMRAM    16     8      8
 ---------------------------------------------------------------------------------
 (6) ___flneg                                              4     0      4     121
                                              0 COMRAM     4     0      4
 ---------------------------------------------------------------------------------
 (6) ___flmul                                             25    17      8    2808
                                             24 COMRAM    25    17      8
                           ___xxtofl (ARG)
 ---------------------------------------------------------------------------------
 (6) ___flge                                              12     4      8     942
                                             57 COMRAM    12     4      8
                            ___flmul (ARG)
                            ___flsub (ARG)
                            ___fltol (ARG)
                           ___xxtofl (ARG)
 ---------------------------------------------------------------------------------
 (6) ___fleq                                              12     4      8     646
                                              0 COMRAM    12     4      8
 ---------------------------------------------------------------------------------
 (6) ___fldiv                                             25    17      8    2007
                                              0 COMRAM    25    17      8
 ---------------------------------------------------------------------------------
 (6) ___awmod                                              6     2      4    1208
                                              0 COMRAM     6     2      4
 ---------------------------------------------------------------------------------
 (6) ___awdiv                                              8     4      4    1364
                                              5 COMRAM     8     4      4
                           _Read_ADC (ARG)
 ---------------------------------------------------------------------------------
 (5) _dtoa                                                36    26     10    6222
                                             30 COMRAM    36    26     10
                            ___aodiv
                            ___aomod
                                _abs
                                _pad
 ---------------------------------------------------------------------------------
 (6) _pad                                                 11     5      6    4573
                                             19 COMRAM    11     5      6
                              _fputc
                              _fputs
                             _strlen
 ---------------------------------------------------------------------------------
 (7) _strlen                                               4     2      2     166
                                              0 COMRAM     4     2      2
 ---------------------------------------------------------------------------------
 (7) _fputs                                                7     3      4    1825
                                             12 COMRAM     7     3      4
                              _fputc
 ---------------------------------------------------------------------------------
 (6) _abs                                                  4     2      2     142
                                             18 COMRAM     4     2      2
                            ___aomod (ARG)
 ---------------------------------------------------------------------------------
 (6) ___aomod                                             18     2     16     448
                                              0 COMRAM    18     2     16
 ---------------------------------------------------------------------------------
 (6) ___aodiv                                             26    10     16     452
                                              0 COMRAM    26    10     16
 ---------------------------------------------------------------------------------
 (5) _ctoa                                                 8     5      3    1779
                                             12 COMRAM     8     5      3
                              _fputc
 ---------------------------------------------------------------------------------
 (5) _fputc                                                9     5      4    1424
                                              3 COMRAM     9     5      4
                              _putch
 ---------------------------------------------------------------------------------
 (6) _putch                                                3     3      0     134
                                              0 COMRAM     3     3      0
 ---------------------------------------------------------------------------------
 (5) _atoi                                                15    13      2    1488
                                              7 COMRAM    15    13      2
                             ___wmul
                            _isdigit
                            _isspace
 ---------------------------------------------------------------------------------
 (6) _isspace                                              7     5      2     207
                                              0 COMRAM     7     5      2
 ---------------------------------------------------------------------------------
 (5) _isdigit                                              6     4      2     313
                                              0 COMRAM     6     4      2
 ---------------------------------------------------------------------------------
 (6) ___wmul                                               6     2      4     495
                                              0 COMRAM     6     2      4
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 7
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _Alarma
     _Cronometro
       _Mostrar_Reloj
         ___awdiv
           _Read_ADC (ARG)
         ___awmod
         _printf
           _vfprintf
             _vfpfcnvrt
               _atoi
                 ___wmul
                 _isdigit
                 _isspace
               _ctoa
                 _fputc
                   _putch
               _dtoa
                 ___aodiv
                 ___aomod
                 _abs
                   ___aomod (ARG)
                 _pad
                   _fputc
                     _putch
                   _fputs
                     _fputc
                       _putch
                   _strlen
               _efgtoa
                 ___awdiv
                   _Read_ADC (ARG)
                 ___awmod
                 ___fladd
                 ___fldiv
                 ___fleq
                 ___flge
                   ___flmul (ARG)
                     ___xxtofl (ARG)
                       ___fltol (ARG)
                   ___flsub (ARG)
                     ___fladd
                     ___flmul (ARG)
                       ___xxtofl (ARG)
                         ___fltol (ARG)
                     ___fltol (ARG)
                     ___xxtofl (ARG)
                       ___fltol (ARG)
                   ___fltol (ARG)
                   ___xxtofl (ARG)
                     ___fltol (ARG)
                 ___flmul
                   ___xxtofl (ARG)
                     ___fltol (ARG)
                 ___flneg
                 ___flsub
                   ___fladd
                   ___flmul (ARG)
                     ___xxtofl (ARG)
                       ___fltol (ARG)
                   ___fltol (ARG)
                   ___xxtofl (ARG)
                     ___fltol (ARG)
                 ___fltol
                 ___fpclassifyf
                 _floorf
                   ___fldiv (ARG)
                 _isupper
                 _pad
                   _fputc
                     _putch
                   _fputs
                     _fputc
                       _putch
                   _strlen
                 _strcpy
                 _tolower
                   _isupper
               _fputc
                 _putch
               _isdigit
               _isupper
               _strncmp
               _tolower
                 _isupper
         _putcm
     ___awdiv
       _Read_ADC (ARG)
     ___awmod
     _printf
       _vfprintf
         _vfpfcnvrt
           _atoi
             ___wmul
             _isdigit
             _isspace
           _ctoa
             _fputc
               _putch
           _dtoa
             ___aodiv
             ___aomod
             _abs
               ___aomod (ARG)
             _pad
               _fputc
                 _putch
               _fputs
                 _fputc
                   _putch
               _strlen
           _efgtoa
             ___awdiv
               _Read_ADC (ARG)
             ___awmod
             ___fladd
             ___fldiv
             ___fleq
             ___flge
               ___flmul (ARG)
                 ___xxtofl (ARG)
                   ___fltol (ARG)
               ___flsub (ARG)
                 ___fladd
                 ___flmul (ARG)
                   ___xxtofl (ARG)
                     ___fltol (ARG)
                 ___fltol (ARG)
                 ___xxtofl (ARG)
                   ___fltol (ARG)
               ___fltol (ARG)
               ___xxtofl (ARG)
                 ___fltol (ARG)
             ___flmul
               ___xxtofl (ARG)
                 ___fltol (ARG)
             ___flneg
             ___flsub
               ___fladd
               ___flmul (ARG)
                 ___xxtofl (ARG)
                   ___fltol (ARG)
               ___fltol (ARG)
               ___xxtofl (ARG)
                 ___fltol (ARG)
             ___fltol
             ___fpclassifyf
             _floorf
               ___fldiv (ARG)
             _isupper
             _pad
               _fputc
                 _putch
               _fputs
                 _fputc
                   _putch
               _strlen
             _strcpy
             _tolower
               _isupper
           _fputc
             _putch
           _isdigit
           _isupper
           _strncmp
           _tolower
             _isupper
     _putcm
   _Alarma_LED
   _Configuracion
   _InicializaLCD
     _putcm
   _LCD_COMANDOS
     _Get_DATA
       _Set_DATA
   _SensorLM35
     _Read_ADC
     ___awdiv
       _Read_ADC (ARG)
     ___flge
       ___flmul (ARG)
         ___xxtofl (ARG)
           ___fltol (ARG)
       ___flsub (ARG)
         ___fladd
         ___flmul (ARG)
           ___xxtofl (ARG)
             ___fltol (ARG)
         ___fltol (ARG)
         ___xxtofl (ARG)
           ___fltol (ARG)
       ___fltol (ARG)
       ___xxtofl (ARG)
         ___fltol (ARG)
     ___flmul
       ___xxtofl (ARG)
         ___fltol (ARG)
     ___flsub
       ___fladd
       ___flmul (ARG)
         ___xxtofl (ARG)
           ___fltol (ARG)
       ___fltol (ARG)
       ___xxtofl (ARG)
         ___fltol (ARG)
     ___fltol
     ___xxtofl
       ___fltol (ARG)
     _ceilf
     _floorf
       ___fldiv (ARG)
     _printf
       _vfprintf
         _vfpfcnvrt
           _atoi
             ___wmul
             _isdigit
             _isspace
           _ctoa
             _fputc
               _putch
           _dtoa
             ___aodiv
             ___aomod
             _abs
               ___aomod (ARG)
             _pad
               _fputc
                 _putch
               _fputs
                 _fputc
                   _putch
               _strlen
           _efgtoa
             ___awdiv
               _Read_ADC (ARG)
             ___awmod
             ___fladd
             ___fldiv
             ___fleq
             ___flge
               ___flmul (ARG)
                 ___xxtofl (ARG)
                   ___fltol (ARG)
               ___flsub (ARG)
                 ___fladd
                 ___flmul (ARG)
                   ___xxtofl (ARG)
                     ___fltol (ARG)
                 ___fltol (ARG)
                 ___xxtofl (ARG)
                   ___fltol (ARG)
               ___fltol (ARG)
               ___xxtofl (ARG)
                 ___fltol (ARG)
             ___flmul
               ___xxtofl (ARG)
                 ___fltol (ARG)
             ___flneg
             ___flsub
               ___fladd
               ___flmul (ARG)
                 ___xxtofl (ARG)
                   ___fltol (ARG)
               ___fltol (ARG)
               ___xxtofl (ARG)
                 ___fltol (ARG)
             ___fltol
             ___fpclassifyf
             _floorf
               ___fldiv (ARG)
             _isupper
             _pad
               _fputc
                 _putch
               _fputs
                 _fputc
                   _putch
               _strlen
             _strcpy
             _tolower
               _isupper
           _fputc
             _putch
           _isdigit
           _isupper
           _strncmp
           _tolower
             _isupper
     _putcm
     _sprintf
       _ceilf (ARG)
       _vfprintf (ARG)
         _vfpfcnvrt
           _atoi
             ___wmul
             _isdigit
             _isspace
           _ctoa
             _fputc
               _putch
           _dtoa
             ___aodiv
             ___aomod
             _abs
               ___aomod (ARG)
             _pad
               _fputc
                 _putch
               _fputs
                 _fputc
                   _putch
               _strlen
           _efgtoa
             ___awdiv
               _Read_ADC (ARG)
             ___awmod
             ___fladd
             ___fldiv
             ___fleq
             ___flge
               ___flmul (ARG)
                 ___xxtofl (ARG)
                   ___fltol (ARG)
               ___flsub (ARG)
                 ___fladd
                 ___flmul (ARG)
                   ___xxtofl (ARG)
                     ___fltol (ARG)
                 ___fltol (ARG)
                 ___xxtofl (ARG)
                   ___fltol (ARG)
               ___fltol (ARG)
               ___xxtofl (ARG)
                 ___fltol (ARG)
             ___flmul
               ___xxtofl (ARG)
                 ___fltol (ARG)
             ___flneg
             ___flsub
               ___fladd
               ___flmul (ARG)
                 ___xxtofl (ARG)
                   ___fltol (ARG)
               ___fltol (ARG)
               ___xxtofl (ARG)
                 ___fltol (ARG)
             ___fltol
             ___fpclassifyf
             _floorf
               ___fldiv (ARG)
             _isupper
             _pad
               _fputc
                 _putch
               _fputs
                 _fputc
                   _putch
               _strlen
             _strcpy
             _tolower
               _isupper
           _fputc
             _putch
           _isdigit
           _isupper
           _strncmp
           _tolower
             _isupper
   _Timer0Configuration

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             7FF      0       0      21        0.0%
EEDATA             100      0       0       0        0.0%
BITBANK7           100      0       0      19        0.0%
BANK7              100      0       0      20        0.0%
BITBANK6           100      0       0      17        0.0%
BANK6              100      0       0      18        0.0%
BITBANK5           100      0       0      15        0.0%
BANK5              100      0       0      16        0.0%
BITBANK4           100      0       0      13        0.0%
BANK4              100      0       0      14        0.0%
BITBANK3           100      0       0      11        0.0%
BANK3              100      0       0      12        0.0%
BITBANK2           100      0       0       9        0.0%
BANK2              100      0       0      10        0.0%
BITBANK1           100      0       0       7        0.0%
BANK1              100      0      76       8       46.1%
BITBANK0            A0      0       0       4        0.0%
BANK0               A0     6E      A0       5      100.0%
BITCOMRAM           5F      0       0       0        0.0%
COMRAM              5F     5F      5F       1      100.0%
BITSFR_1             0      0       0     200        0.0%
SFR_1                0      0       0     200        0.0%
BITSFR               0      0       0     200        0.0%
SFR                  0      0       0     200        0.0%
STACK                0      0       0       2        0.0%
NULL                 0      0       0       0        0.0%
ABS                  0      0     175       6        0.0%
DATA                 0      0     175       3        0.0%
CODE                 0      0       0       0        0.0%


Microchip Technology PIC18 Macro Assembler V2.31 build 20201012212115 
Symbol Table                                                                                   Fri Apr 30 12:22:28 2021

                ___fldiv@aexp 0019                  ___fldiv@bexp 0018                  ___fldiv@sign 0011  
                          _DH 00E4                            _DM 00E0                            _DS 00DC  
                          _UH 00E2                            _UM 00DE                            _US 00DA  
                ___awdiv@sign 000B           ___wmul@multiplicand 0003                ??_LCD_COMANDOS 0004  
                         l112 48A8                           l121 4DDC                           l130 4B5C  
                         l115 48C8                           l124 492A                           l133 4BE2  
                         l141 3136                 _InicializaLCD 475E                           l118 4D4E  
                         l303 3A8E                           l127 4DC8                           l136 47E4  
                         l144 4DB0                           l162 2D1C                           l170 2F16  
                         l155 46B2                           l163 2DB2                           l316 3BF2  
                         l420 4554                           l149 3D46                           l158 2CCA  
                         l175 3EE8                           _ADC 00FE                           l433 4604  
                         l178 3F50                           l189 4D74                           l454 400E  
                         l463 4C92                           l448 475C                           l810 24A6  
                         l459 4054                           l803 22B0                           l820 25D6  
                         l812 251E                           l813 250C                           l717 1F1A  
                         l734 2034                           l726 21EA                           l718 1F08  
                         l486 3E4C                           l807 2614                           l743 2104  
                         l719 1ECE                           l744 20F2                           l771 29AE  
                         l851 3842                           l844 37AA                           l941 4490  
                         l773 280E                           l782 2854                           l759 4B16  
                         l847 3906                           l952 41BA                           l936 4412  
                         l784 28CC                           l776 27D2                           l785 28BA  
                         l882 349E                           l858 389E                           l866 3348  
                         l955 41FC                           l939 4454                           l963 2A50  
                         l957 422A                           l965 2A58                           l869 328C  
                         l893 4A38                           l983 2C92                           l879 355A  
                         _abs 4BE4                           _pad 43CC                  ___awmod@sign 0006  
                         wreg 000FE8                  ___flmul@aexp 002A                  ___flmul@bexp 002B  
                ___flmul@sign 0025                  ___flmul@temp 0030                  ___flmul@prod 002C  
                ___fltol@exp1 000A                          l1001 14B2                          l1103 1D2A  
                        l1121 4852                          l1114 1BCC                          l1122 485A  
                        l1203 43CA                          l1211 4BA0                          l1019 0C48  
                        ?_abs 0013                          l1140 4C22                          l1132 4152  
                        l1230 4D00                          l1047 1088                          l1224 49E6  
                        l1137 4C1A                          l1234 4300                          l1218 4D28  
                        l1171 3752                          l1244 4982                          l1174 4CCA  
                        l1182 4A8A                          l1168 374A                          l3200 1D92  
                        l1249 498A                          l3210 1DC0                          l3202 1D98  
                        l4002 40F4                          l4100 2B26                          l3300 1F96  
                        l3220 1DF4                          l3212 1DC2                          l3204 1DAA  
                        l4004 4106                          l4012 498C                          l1188 4C5A  
                        l4020 4962                          l4030 4A3A                          l4110 2BE2  
                        l4102 2B2C                          l3310 2002                          l3302 1F98  
                        l3230 1E30                          l3214 1DD2                          l3222 1DFC  
                        l3206 1DAC                          l4014 499C                          l4022 4974  
                        l4032 4A3E                          l3160 4B2E                          l4120 2C34  
                        l4112 2BFC                          l4104 2B90                          l3320 205A  
                        l3312 2004                          l3304 1FA2                          l3240 1E44  
                        l3232 1E34                          l3224 1E0C                          l3216 1DE2  
                        l3208 1DB2                          l4008 414A                          l4016 492C  
                        l4200 0AAA                          l5000 4A94                          l4026 4C94  
                        l4034 4A52                          l3162 4B42                          l3170 4314  
                        l4050 418E                          l4042 4154                          l4122 2C46  
                        l4106 2BAA                          l4114 2C0C                          l3330 2088  
                        l3314 2014                          l3306 1FA8                          l3250 1E58  
                        l3242 1E48                          l3234 1E38                          l3226 1E1E  
                        l3218 1DF2                          l3410 33C0                          l3402 4C24  
                        l4210 0B74                          l5010 4AB6                          l5002 4A98  
                        l4036 4A80                          l3164 4B48                          l3156 4B1A  
                        l3172 4326                          l4060 41DA                          l4052 41A0  
                        l4044 4168                          l3500 3B1A                          l4124 2C52  
                        l4116 2C1E                          l4108 2BC8                          l3332 2096  
                        l3324 206E                          l3340 20B4                          l3308 1FCE  
                        l3316 2024                          l3252 1E5C                          l3244 1E4C  
                        l3236 1E3C                          l3228 1E2C                          l3260 1E6C  
                        l3420 348E                          l3412 33D4                          l4300 1004  
                        l4220 0BF6                          l4212 0BA8                          l4204 0AE0  
                        l4140 088C                          l4132 085C                          l5012 4ABE  
                        l5004 4A9E                          l4038 4A84                          l3166 4B56  
                        l3158 4B26                          l3174 4330                          l4062 41DE  
                        l4046 4174                          l3510 3B9C                          l3502 3B2E  
                        l4126 2C5A                          l4118 2C2E                          l4070 29B0  
                        l3334 209E                          l3326 2078                          l3318 204A  
                        l3342 20C2                          l3270 1EDC                          l3262 1E70  
                        l3254 1E60                          l3246 1E50                          l3238 1E40  
                        l3190 1D58                          l3182 1D2C                          l3430 354A  
                        l3414 33E2                          l3422 34C2                          l3406 334A  
                        l4310 1074                          l4302 1038                          l4222 0C08  
                        l4230 0C54                          l4214 0BB0                          l4206 0B14  
                        l4150 08E2                          l4142 08B0                          l4134 0866  
                        l5014 4AC2                          l5006 4AA4                          l3176 434E  
                        l3168 4302                          l4064 420C                          l4056 41B2  
                        l4048 4180                          l3440 3908                          l3504 3B3C  
                        l3512 3BA2                          l4128 2C6A                          l4080 2A2A  
                        l4072 29D0                          l3600 27FC                          l3520 2616  
                        l3352 2114                          l3360 216A                          l3344 20C6  
                        l3336 20A2                          l3328 2086                          l3280 1F06  
                        l3272 1EE8                          l3264 1E9A                          l3256 1E64  
                        l3248 1E54                          l3192 1D68                          l3184 1D38  
                        l3424 34FE                          l3408 336A                          l4400 13A8  
                        l4320 112A                          l4312 1080                          l4304 104C  
                        l4240 0C94                          l4224 0C1A                          l4208 0B1A  
                        l4216 0BE2                          l4160 0910                          l4152 08F4  
                        l4144 08BA                          l4136 0876                          l5016 4AC6  
                        l5008 4AAE                          l3434 4D50                          l3178 4384  
                        l4066 421E                          l4058 41C6                          l3450 394C  
                        l3442 390C                          l3514 3BB2                          l3506 3B6A  
                        l4090 2A86                          l4082 2A44                          l4074 29F8  
                        l3610 2844                          l3602 280C                          l3530 2652  
                        l3522 2622                          l3370 21BC                          l3362 217A  
                        l3354 2120                          l3346 20D4                          l3338 20B2  
                        l3290 1F5C                          l3282 1F28                          l3274 1EEC  
                        l3266 1EB6                          l3258 1E68                          l3194 1D78  
                        l3186 1D46                          l3426 3512                          l3418 3452  
                        l4410 13F2                          l4402 13AE                          l4330 1172  
                        l4322 113C                          l4314 10A4                          l4306 1050  
                        l4250 0CF0                          l4242 0CCA                          l4226 0C22  
                        l4218 0BF2                          l4170 0984                          l4154 0900  
                        l4162 0916                          l4146 08C2                          l4138 0884  
                        l3436 4D6C                          l5060 3654                          l3460 39A2  
                        l3452 396C                          l3444 391A                          l3516 3BD2  
                        l3508 3B8A                          l4092 2A8E                          l4084 2A60  
                        l4076 2A18                          l3620 2884                          l3612 2852  
                        l3604 281E                          l3540 2682                          l3532 2662  
                        l3524 2630                          l3700 22F0                          l3380 21DA  
                        l3372 21C2                          l3364 218A                          l3356 212E  
                        l3348 20EA                          l3292 1F6A                          l3284 1F38  
                        l3276 1EFA                          l3268 1EC6                          l3196 1D7A  
                        l3188 1D48                          l3428 353A                          l4420 1422  
                        l4412 13FE                          l4404 13C0                          l4340 11A8  
                        l4332 1182                          l4324 114A                          l4316 1108  
                        l4308 1060                          l4260 0D34                          l4252 0D02  
                        l4244 0CD2                          l4236 0C66                          l4228 0C3C  
                        l4172 09A0                          l4164 093C                          l4180 09EA  
                        l4156 0908                          l4148 08D4                          l3470 3A24  
                        l3462 39B6                          l3454 3970                          l3446 393A  
                        l3390 4B80                          l4094 2A98                          l4086 2A72  
                        l4078 2A28                          l3630 28F6                          l3622 28B2  
                        l3606 2834                          l3614 2864                          l3550 26B8  
                        l3542 2688                          l3534 2664                          l3526 2632  
                        l3710 2340                          l3702 22FA                          l3374 21C4  
                        l3366 21AA                          l3358 2168                          l3294 1F78  
                        l3278 1EFC                          l3198 1D82                          l4430 147C  
                        l4414 1406                          l4406 13DA                          l4350 11DC  
                        l4342 11AC                          l4334 1186                          l4318 1118  
                        l4326 1152                          l4270 0D7E                          l4262 0D4C  
                        l4254 0D10                          l4238 0C78                          l4246 0CD6  
                        l4190 0A74                          l4182 0A10                          l4174 09B8  
                        l4158 090C                          l4510 150E                          l4502 14B4  
                        l4440 355C                          l3480 3A6E                          l3472 3A26  
                        l3464 39C4                          l3456 397C                          l3448 393E  
                        l3384 4B5E                          l3392 4CCC                          l4096 2A9E  
                        l4088 2A80                          l3800 44AC                          l3640 296E  
                        l3632 2920                          l3616 2872                          l3608 283A  
                        l3560 26F8                          l3552 26C8                          l3544 2696  
                        l3528 2642                          l3536 266C                          l3720 2382  
                        l3712 234C                          l3704 2310                          l3376 21CA  
                        l3368 21AE                          l3296 1F84                          l3288 1F4C  
                        l4432 148C                          l4424 1456                          l4416 1416  
                        l4408 13E0                          l4360 127A                          l4352 11E0  
                        l4344 11B2                          l4336 118C                          l4328 1164  
                        l4272 0D92                          l4280 0E88                          l4264 0D5E  
                        l4256 0D14                          l4248 0CDE                          l4176 09C2  
                        l4168 0972                          l4520 15B8                          l4512 1544  
                        l4504 14EA                          l4450 35F2                          l4442 3570  
                        l3474 3A38                          l3466 39D6                          l3458 399A  
                        l3490 3AC2                          l3386 4B6A                          l3394 4CD8  
                        l4098 2B20                          l3810 44D2                          l3802 44B0  
                        l3650 29A4                          l3642 298A                          l3626 28DC  
                        l3634 2924                          l3618 2876                          l3562 2708  
                        l3570 2728                          l3554 26CA                          l3546 2698  
                        l3538 267C                          l3730 23E4                          l3722 2392  
                        l3714 235A                          l3706 231C                          l3378 21D8  
                        l3298 1F88                          l4434 1492                          l4426 1468  
                        l4418 141C                          l4370 12D8                          l4338 1198  
                        l4346 11B8                          l4354 11E6                          l4362 127E  
                        l4290 0F54                          l4282 0EA6                          l4274 0DF6  
                        l4258 0D26                          l4266 0D66                          l4186 0A46  
                        l4610 1C5C                          l4530 1668                          l4522 15C6  
                        l4514 157A                          l4506 14F8                          l5058 4892  
                        l4460 361A                          l4452 35F6                          l4444 3574  
                        l3468 3A04                          l3476 3A3E                          l3492 3AC6  
                        l3484 3A90                          l3388 4B7C                          l3396 4CDC  
                        l3820 4508                          l3812 44E4                          l3804 44BE  
                        l3644 298E                          l3636 293E                          l3628 28E8  
                        l3580 2766                          l3572 2738                          l3564 2710  
                        l3548 26A8                          l3556 26D2                          l3900 3FDC  
                        l3740 248C                          l3732 2400                          l3724 23AC  
                        l3716 2366                          l3708 2334                          l3660 21F8  
                        l4428 1474                          l4380 1316                          l4372 12E8  
                        l4364 129C                          l4356 123E                          l4348 11CA  
                        l4292 0F64                          l4284 0EDA                          l4276 0E4E  
                        l4268 0D6E                          l4188 0A58                          l4620 1CC0  
                        l4604 1BE0                          l4540 1710                          l4532 1672  
                        l4516 158A                          l4508 150A                          l4462 3622  
                        l4446 3578                          l3478 3A4E                          l3494 3AD4  
                        l3486 3A94                          l3398 4CF4                          l3822 451E  
                        l3814 44EC                          l3830 4534                          l3806 44C6  
                        l3646 299C                          l3638 2954                          l3590 27AE  
                        l3582 2776                          l3574 2738                          l3566 2714  
                        l3558 26E2                          l3902 3FEE                          l3750 24C8  
                        l3742 2496                          l3734 242A                          l3726 23BC  
                        l3718 2376                          l3670 2238                          l3662 2206  
                        l4390 134C                          l4382 1326                          l4374 12EC  
                        l4366 12B8                          l4358 1272                          l4294 0F74  
                        l4286 0F0C                          l4278 0E82                          l4198 0A90  
                        l4606 1C16                          l4614 1C68                          l4550 17C2  
                        l4542 171E                          l4534 1680                          l4526 1620  
                        l4518 1598                          l4630 1CDE                          l4710 48EC  
                        ?_pad 0014                          l4472 370A                          l4464 366A  
                        l4456 35FC                          l4448 35A8                          l3496 3AF4  
                        l3488 3AA2                          l3832 4544                          l3824 4526  
                        l3816 44F4                          l3808 44CA                          l3840 455A  
                        l3648 29A2                          l3592 27C2                          l3584 2786  
                        l3904 3FFC                          l3760 253A                          l3752 24D6  
                        l3744 24A4                          l3736 2460                          l3728 23D8  
                        l3680 2268                          l3672 223E                          l3664 2208  
                        l3912 4C5C                          l3920 3D48                          l4392 1358  
                        l4384 132E                          l4376 12FC                          l4368 12CA  
                        l4296 0FA8                          l4288 0F22                          l4632 1D18  
                        l4616 1C9E                          l4624 1CCC                          l4608 1C4C  
                        l4560 18AC                          l4552 17D2                          l4536 16B6  
                        l4528 1632                          l4640 47EE                          l4712 4908  
                        l4800 382C                          l4720 3158                          l4474 371C  
                        l4458 3612                          l3498 3B12                          l3834 454C  
                        l3826 4528                          l3818 4502                          l3850 458A  
                        l3842 4568                          l3594 27D0                          l3586 2796  
                        l3578 274C                          l3906 404C                          l3770 25A4  
                        l3762 2548                          l3754 2504                          l3746 24B6  
                        l3738 246E                          l3690 22A0                          l3682 226A  
                        l3674 224E                          l3666 2218                          l3658 21EC  
                        l3914 4C72                          l3930 3D9E                          l3922 3D5E  
                        l4394 135E                          l4386 133C                          l4378 130E  
                        l4298 0FFE                          l4490 4270                          l4482 422C  
                        l4618 1CAC                          l4570 1968                          l4562 18E0  
                        l4554 181C                          l4546 1778                          l4538 16F0  
                        l4642 47FC                          l4650 4BB8                          l4714 4926  
                        l4706 48CC                          l4810 38AC                          l4802 3838  
                        l4730 3240                          l4722 31AE                          l4476 372E  
                        l4468 36B8                          l3828 452E                          l3860 45D0  
                        l3852 459C                          l3844 4570                          l3596 27DC  
                        l3588 279E                          l3908 4052                          l3780 25FA  
                        l3772 25BE                          l3764 2572                          l3748 24C4  
                        l3692 22C0                          l3684 227A                          l3676 2254  
                        l3668 2228                          l3916 4C82                          l3932 3DAE  
                        l4396 1384                          l4388 1344                          l4492 4288  
                        l4484 4256                          l4580 1A28                          l4572 19B2  
                        l4556 182C                          l4548 178A                          l4644 4822  
                        l4660 4D0C                          l4652 4BBC                          l4708 48D6  
                        l4820 38F4                          l4812 38AE                          l4804 3874  
                        l4740 3328                          l4732 327C                          l4724 31C2  
                        l4900 4DA8                          l3870 45FC                          l3862 45D8  
                        l3854 45A4                          l3846 4574                          l3838 4556  
                        l3598 27FA                          l3774 25DA                          l3782 2600  
                        l3758 252E                          l3766 2576                          l3694 22D0  
                        l3686 228A                          l3678 225A                          l3790 4AE2  
                        l3942 3DD8                          l3934 3DB2                          l3926 3D72  
                        l4398 13A0                          l4494 42A4                          l4590 1AC0  
                        l4582 1A36                          l4566 18FC                          l4558 1876  
                        l4638 47E6                          l4654 4BD6                          l4646 4BA4  
                        l4910 2CA2                          l4830 4D34                          l4822 38F6  
                        l4814 38B2                          l4806 3880                          l4742 3338  
                        l4726 31D0                          l4734 32B0                          l4718 3138  
                        l4750 4A02                          l4902 4DAA                          l3864 45DE  
                        l3856 45AC                          l3848 4582                          l3880 4720  
                        l3784 2604                          l3776 25EA                          l3768 2590  
                        l3688 229A                          l3960 3E3C                          l3952 3E00  
                        l3944 3DE2                          l3936 3DC0                          l3928 3D9C  
                        l4496 42B6                          l4488 4262                          l4584 1A66  
                        l4576 19EA                          l4568 1932                          l4656 4BDE  
                        l4648 4BB0                          l4680 3D02                          l4672 3BF4  
                        l4760 460A                          l4920 2CCC                          l4912 2CA4  
                        l4840 4D40                          l4832 4D38                          l4664 4DCA  
                        l4816 38D6                          l4808 388E                          l4736 32EC  
                        l4752 4A0A                          l4904 4DAC                          l3970 43FE  
                        l3794 4492                          l3858 45BA                          l3866 45E4  
                        l3882 4730                          l3874 46B4                          l3890 3F52  
                        l3778 25F8                          l3698 22E4                          l3954 3E0C  
                        l3946 3DEC                          l4498 42DE                          l4594 1B56  
                        l4578 19FE                          l4658 4D02                          l4682 3D08  
                        l4674 3C9C                          l4770 4664                          l4762 4618  
                        l4930 2D16                          l4922 2CE6                          l4914 2CBE  
                        l4834 4D3A                          l4826 4D2A                          l4850 476C  
                        l4666 4DCC                          l4842 4DB4                          l4690 487E  
                        l4818 38E6                          l4738 3300                          l4754 4A26  
                        l4746 49E8                          l4906 4DAE                          l3980 4464  
                        l3972 440A                          l3964 43CC                          l3796 4496  
                        l3868 45F4                          l3884 4754                          l3876 46E2  
                        l3892 3F80                          l3788 4AD2                          l3956 3E1C  
                        l4596 1B68                          l4588 1A92                          l4676 3CBA  
                        l4772 466C                          l4764 4634                          l4940 2DA6  
                        l4932 2D2A                          l4924 2CEC                          l4916 2CC0  
                        l4908 2C94                          l4836 4D3C                          l4828 4D2C  
                        l4860 47AE                          l4852 4772                          l4668 4DDA  
                        l4844 4DB6                          l4692 48A0                          l4684 485E  
                        l4780 3756                          l4748 49FA                          l3982 4478  
                        l3974 441E                          l3966 43DC                          l3798 44A4  
                        l3886 475A                          l3878 46F2                          l3894 3F90  
                        l3958 3E2C                          l3990 4056                          l4598 1B9C  
                        l4678 3CC0                          l4774 4678                          l4766 463C  
                        l4758 4606                          l4950 2E3C                          l4942 2DC0  
                        l4934 2D62                          l4926 2CFA                          l4918 2CC2  
                        l4838 4D3E                          l4862 47C2                          l4854 4786  
                        l4694 48A4                          l4686 4876                          l4782 3766  
                        l4870 2F4C                          l3976 4432                          l3968 43F0  
                        l3896 3FBE                          l3992 4076                          l4776 4694  
                        l4768 4648                          l4960 2EB4                          l4944 2DF8  
                        l4952 2E48                          l4936 2D7C                          l4928 2D14  
                        l4864 47D0                          l4856 4794                          l4848 475E  
                        l4696 48A6                          l4792 37E4                          l4784 3774  
                        l4880 307C                          l4872 2F98                          l3986 4BE4  
                        l3978 4436                          l3898 3FCE                          l3994 40B4  
                        l4778 469C                          l4954 2E66                          l4946 2E12  
                        l4938 2D8A                          l4962 2EF2                          l4970 3E4E  
                        l4858 47A8                          l4698 48B6                          l4794 37EC  
                        l4786 37BA                          l4890 311E                          l4882 30A6  
                        l4874 2F9E                          l4866 2F18                          l3988 4BFE  
                        l3996 40DC                          l4964 2F00                          l4956 2E6C  
                        l4948 2E20                          l4980 3EC8                          l4972 3E68  
                        l4796 37F8                          l4788 37D0                          l4884 30CA  
                        l4876 3020                          l4868 2F3A                          l4892 4D98  
                        l3998 40E8                          l4966 2F12                          l4958 2EAE  
                        l4990 3F1E                          l4982 3EE0                          l4974 3E80  
                        l4798 382A                          l4886 30F8                          l4878 3064  
                        l4894 4DA0                          l4968 2F14                          l4984 3EEA  
                        l4992 3F20                          l4976 3E98                          l4888 3110  
                        l4896 4DA4                          l4986 3F02                          l4978 3EB0  
                        l4994 3F34                          l4898 4DA6                          l4996 3F38  
                        l4988 3F06                          l4998 4A8C                          STR_1 0827  
                        STR_2 0827                          STR_3 0801                          STR_4 0814  
                        STR_5 0839                          STR_6 0801                          STR_7 0814  
                        STR_8 0847                          STR_9 084F                          _LATB 000F8A  
                        u4000 3A4E                          _LATD 000F8C                          u4001 3A4A  
                        u4010 3AA2                          u4011 3A9E                          u4020 3AD4  
                        u4100 2696                          u4021 3AD0                          u4101 2692  
                        u4030 3B12                          u4110 26A8                          u4031 3B0E  
                        u4111 26A4                          u3400 4384                          u5000 41AE  
                        u4040 3B3C                          u4200 2852                          u4120 26B8  
                        u3401 4380                          u5001 41AA                          u4041 3B38  
                        u4201 284E                          u4121 26B4                          u5010 41FC  
                        u4050 3B6A                          u4210 2872                          u4130 26F8  
                        u3410 1D46                          u5011 41F8                          u4051 3B66  
                        u4211 286E                          u4131 26F4                          u3411 1D42  
                        u5020 420C                          u4060 3BB2                          u5100 2BAA  
                        u4220 2884                          u4140 2738                          u4300 2206  
                        u3500 1E9A                          u3420 1D58                          u5021 4208  
                        u4061 3BAE                          u5101 2BA6                          u4221 2880  
                        u4141 2734                          u4301 2202                          u3501 1E96  
                        u3421 1D54                          u5110 2BC8                          u5030 29E0  
                        u4230 28B2                          u4150 27AE                          u4070 2630  
                        u4310 2218                          u3510 1EB2                          u3430 1D68  
                        u5111 2BC4                          u5031 29DA                          u4231 28AE  
                        u4151 27AA                          u4071 262C                          u4311 2214  
                        u3511 1EAC                          u3431 1D64                          u5120 2BE2  
                        u5040 29E2                          u4240 28C8                          u4160 27D0  
                        u4080 2642                          u4400 24C4                          u4320 2228  
                        u3600 1F96                          u3520 1EB4                          u3440 1DAA  
                        u5200 08E2                          u6000 16A6                          u5121 2BDE  
                        u4241 28C4                          u4161 27CC                          u4081 263E  
                        u4401 24C0                          u4321 2224                          u3601 1F92  
                        u3441 1DA6                          u5201 08DE                          _HORA 00E8  
                        u3370 4314                          u5130 2BFC                          u5050 29F8  
                        u4250 28DC                          u4170 27FA                          u4090 2652  
                        u4410 24D6                          u4330 2268                          u3610 1FCE  
                        u3530 1EDC                          u3450 1DC0                          u5210 08F4  
                        u6010 16B6                          u3371 4310                          u5131 2BF8  
                        u5051 29F4                          u4251 28D8                          u4171 27F6  
                        u4091 264E                          u4411 24D2                          u4331 2264  
                        u3611 1FCA                          u3531 1ED8                          u3451 1DBC  
                        u5211 08F0                          u6011 16B2                          u3380 4326  
                        u5140 2C0C                          u5060 2A28                          u4500 44BE  
                        u4260 28F6                          u4180 281E                          u4420 2504  
                        u4340 227A                          u3700 20EA                          u3620 2014  
                        u3540 1EFA                          u3460 1DD2                          u5300 0ADC  
                        u5220 093C                          u6100 1864                          u6020 174C  
                        u3381 4322                          u5141 2C08                          u5061 2A24  
                        u4501 44BA                          u4261 28F2                          u4181 281A  
                        u4421 2500                          u4341 2276                          u3701 20E6  
                        u3621 2010                          u3541 1EF6                          u3461 1DCE  
                        u5301 0AD8                          u5221 0938                          u3390 434E  
                        u5150 2C1E                          u5070 2A44                          u4510 44E4  
                        u4270 293E                          u4190 2834                          u4430 251A  
                        u4350 228A                          u3710 2100                          u3630 204A  
                        u3550 1F1A                          u3470 1DE2                          u5310 0B70  
                        u5230 096A                          u6110 189C                          u6030 1770  
                        u3391 434A                          u5151 2C1A                          u5071 2A40  
                        u4511 44E0                          u4271 293A                          u4191 2830  
                        u4431 2516                          u4351 2286                          u3711 20FC  
                        u3631 2046                          u3551 1F16                          u3471 1DDE  
                        u5311 0B6C                          u5231 0964                          u6031 176A  
                        u6007 169C                          u3800 4BA0                          u5160 2C2E  
                        u5080 2A72                          u4520 4502                          u4600 45F4  
                        u4280 296E                          u4440 252E                          u4360 22C0  
                        u3720 2114                          u3640 205A                          u3560 1F28  
                        u3480 1E1E                          u5400 0CF0                          u5320 0BE2  
                        u5240 096C                          u6200 1AF8                          u6120 18AC  
                        u6040 1772                          u3801 4B9C                          u5161 2C2A  
                        u5081 2A6E                          u4521 44FE                          u4601 45F0  
                        u4281 296A                          u4441 252A                          u4361 22BC  
                        u3721 2110                          u3641 2056                          u3561 1F24  
                        u3481 1E1A                          u5401 0CEC                          u5321 0BDE  
                        u6121 18A8                          u3810 4CF4                          u5170 2C46  
                        u5090 2A80                          u4530 451E                          u4290 299C  
                        u4610 46E2                          u4450 2548                          u4370 22D0  
                        u3730 212E                          u3650 2086                          u3570 1F38  
                        u3490 1E2C                          u5410 0D02                          u5330 0C08  
                        u5250 0984                          u6210 1B2A                          u6130 1922  
                        u6050 178A                          u3811 4CF0                          u5171 2C42  
                        u5091 2A7C                          u4531 451A                          u4291 2998  
                        u4611 46DE                          u4451 2544                          u4371 22CC  
                        u3731 212A                          u3651 2082                          u3571 1F34  
                        u3491 1E28                          u5411 0CFE                          u5331 0C04  
                        u5251 0980                          u6107 185A                          u6051 1786  
                        u6027 1742                          u4540 4544                          u4620 4720  
                        u4460 2590                          u4380 244A                          u3740 2168  
                        u3660 2096                          u3580 1F6A                          u4700 3D5E  
                        u3900 348E                          u3820 4C54                          u5500 0FFE  
                        u5420 0D10                          u5340 0C1A                          u5260 0A10  
                        u5180 0884                          u6220 1B4E                          u6140 1932  
                        u6060 17B0                          u6300 4842                          u4541 4540  
                        u4621 471C                          u4461 258C                          u3741 2164  
                        u3661 2092                          u3581 1F66                          u4701 3D5A  
                        u3901 348A                          u3821 4C4E                          u5501 0FFA  
                        u5421 0D0C                          u5341 0C16                          u5261 0A0C  
                        u5181 0880                          u6221 1B48                          u6141 192E  
                        u6117 1892                          u4550 4568                          u4630 4754  
                        u4470 25BE                          u4390 24A4                          u3750 217A  
                        u3670 20B2                          u3590 1F78                          u4710 3D92  
                        u3910 34E2                          u3830 4C56                          u5510 104C  
                        u5430 0D26                          u5350 0C3C                          u5270 0A3E  
                        u5190 08D4                          u6230 1B50                          u6150 1958  
                        u6070 17D2                          u6310 4852                          u4551 4564  
                        u4631 4750                          u4471 25BA                          u4391 24A0  
                        u3751 2176                          u3671 20AE                          u3591 1F74  
                        u5511 1048                          u5431 0D22                          u5351 0C38  
                        u5271 0A38                          u5191 08D0                          u6207 1AEE  
                        u6071 17CE                          u6311 484E                          u4800 4464  
                        u4560 4582                          u4640 3F80                          u4480 25F8  
                        u3760 218A                          u3680 20C2                          u4720 3DC0  
                        u3920 34FE                          u3840 3392                          u5600 129C  
                        u5520 1074                          u5440 0D34                          u5360 0C62  
                        u5280 0A40                          u6240 1B68                          u6160 1968  
                        u6080 180A                          u6320 3CBA                          u6400 3260  
                        u4801 4460                          u4561 457E                          u4641 3F7C  
                        u4481 25F4                          u4385 2440                          u3761 2186  
                        u3681 20BE                          u4721 3DBC                          u3921 34FA  
                        u5601 1298                          u5521 1070                          u5441 0D30  
                        u5361 0C5E                          u6241 1B64                          u6217 1B20  
                        u6161 1964                          u6137 1918                          u6321 3CB6  
                        u4810 4BFE                          u4490 44A4                          u4570 459C  
                        u4650 3FBE                          u3770 21AA                          u3690 20D4  
                        u4730 3DD4                          u3930 353A                          u3850 33C0  
                        u5610 12B8                          u5530 1118                          u5450 0D5E  
                        u5370 0C78                          u5290 0A58                          u6250 1C06  
                        u6170 19FE                          u6090 182C                          u6330 48B6  
                        u6410 327C                          u4811 4BFA                          u4491 44A0  
                        u4571 4598                          u4651 3FBA                          u3771 21A6  
                        u3691 20D0                          u4731 3DD0                          u4715 3D88  
                        u3931 3536                          u3915 34D8                          u3851 33BC  
                        u5611 12B4                          u5531 1114                          u5451 0D5A  
                        u5371 0C74                          u5291 0A54                          u6171 19FA  
                        u6091 1828                          u6067 17A6                          u6307 4838  
                        u6331 48B2                          u6411 3278                          u3940 391A  
                        u4580 45BA                          u4660 3FDC                          u3780 21BC  
                        u4740 3DFC                          u4820 4096                          u3860 33E2  
                        u4900 49E6                          u5700 1452                          u5620 12CA  
                        u5540 112A                          u5460 0EA6                          u5380 0C94  
                        u6260 1C16                          u6180 1A24                          u6500 37D0  
                        u6420 32D0                          u3941 3916                          u4581 45B6  
                        u4661 3FD8                          u3781 21B8                          u4741 3DF8  
                        u3861 33DE                          u3845 3388                          u4901 49E2  
                        u5621 12C6                          u5541 1126                          u5461 0EA2  
                        u5381 0C90                          u6261 1C12                          u6157 194E  
                        u6501 37CC                          u6405 3256                          u3950 394C  
                        u4590 45D0                          u4670 3FFC                          u3790 21D8  
                        u4750 3E1C                          u4830 40B4                          u4910 495C  
                        u5710 1468                          u5630 12D8                          u5550 113C  
                        u5470 0F0C                          u5390 0CCA                          u6270 1C8E  
                        u6190 1AC0                          u6510 3826                          u6430 32EC  
                        u6350 3180                          u3951 3948                          u4591 45CC  
                        u4671 3FF8                          u3791 21D4                          u4751 3E18  
                        u4831 40B0                          u4911 4956                          u5711 1464  
                        u5631 12D4                          u5551 1138                          u5471 0F08  
                        u5391 0CC6                          u6191 1ABC                          u6087 1800  
                        u6511 3822                          u6431 32E8                          u5800 3704  
                        u5720 3598                          u4680 404C                          u4760 3E2C  
                        u4840 40DC                          u3880 344E                          u4920 495E  
                        u5640 130E                          u5560 114A                          u5480 0F54  
                        u6280 1C9E                          u6600 2D2A                          u6520 3870  
                        u6440 3328                          u6360 31AE                          u5801 36FE  
                        u3961 3976                          u4681 4048                          u4761 3E28  
                        u4841 40D8                          u4825 408C                          u3881 344A  
                        u5641 130A                          u5561 1146                          u5481 0F50  
                        u6281 1C9A                          u6257 1BFC                          u6601 2D26  
                        u6345 48D4                          u6521 386C                          u6441 3324  
                        u6425 32C6                          u6361 31AA                          u5810 3706  
                        u5730 35A8                          u3970 399A                          u4770 43DC  
                        u4690 4C72                          u4850 4106                          u3890 3472  
                        u4930 4974                          u5650 133C                          u5570 1164  
                        u5490 0F64                          u6290 1D04                          u6450 4634  
                        u6610 2DA6                          u6346 48D6                          u6530 388E  
                        u6370 31D0                          u5731 35A4                          u3971 3996  
                        u4771 43D8                          u4691 4C6E                          u4851 4102  
                        u3875 33F6                          u4931 4970                          u5651 1338  
                        u5571 1160                          u5491 0F60                          u6187 1A1A  
                        u6451 4630                          u6611 2DA2                          u6531 388A  
                        u6371 31CC                          u6355 3176                          u4940 4CC4  
                        u5820 371C                          u5740 35D0                          u3980 39C4  
                        u4780 43FE                          u3876 3400                          u5660 13C0  
                        u5580 1172                          u5900 14EA                          u6460 4664  
                        u6620 2DC0                          u6700 3EC8                          u6540 389E  
                        u4941 4CBE                          u5821 3718                          u3981 39C0  
                        u4781 43FA                          u3877 3410                          u5661 13BC  
                        u5581 116E                          u6277 1C84                          u5901 14E6  
                        u6461 4660                          u6621 2DBC                          u6701 3EC4  
                        u6541 389A                          u4950 4CC6                          u5830 372E  
                        u5750 35F2                          u3990 3A04                          u4790 4454  
                        u4870 4140                          u5670 13DA                          u5590 11CA  
                        u5910 1534                          u6470 4694                          u6630 2E3C  
                        u6710 3EE0                          u6550 38AC                          u6390 323C  
                        u5831 372A                          u5751 35EE                          u5727 358E  
                        u3991 3A00                          u4791 4450                          u4871 413A  
                        u3895 3468                          u5671 13D6                          u5591 11C6  
                        u6471 4690                          u6631 2E38                          u6711 3EDC  
                        u6551 38A8                          u6391 3238                          u4960 4A52  
                        u5760 360E                          u4880 4142                          u5680 13F2  
                        u5840 4256                          u5920 1544                          u6640 2E66  
                        u6720 3F30                          u6560 38E6                          u6480 3766  
                        u4961 4A4E                          u5761 360A                          u4865 4118  
                        u5681 13EE                          u5841 4252                          u6297 1CFA  
                        u5921 1540                          u6641 2E62                          u6721 3F2C  
                        u6561 38E2                          u6481 3762                          u6385 31E4  
                        u4970 4A80                          u5770 3642                          u4890 49D4  
                        u5690 1450                          u5850 4288                          u5930 158A  
                        u6650 2F00                          u6570 38F4                          u6490 3774  
                        u6386 31EE                          u4971 4A7C                          u5747 35C6  
                        u5691 144A                          u5851 4284                          u5931 1586  
                        u6651 2EFC                          u6571 38F0                          u6491 3770  
                        u6387 31FE                          u5780 369E                          u4980 4168  
                        u5860 42A4                          u5940 15F4                          u6660 3E68  
                        u6580 3020                          u4981 4164                          u5861 42A0  
                        u5917 152A                          u6661 3E64                          u6581 301C  
                        u5790 36E0                          u4990 418E                          u5870 42B6  
                        u5950 1618                          u6590 2CA2                          u6670 3E80  
                        u4991 418A                          u5871 42B2                          u5951 1612  
                        u6591 2C9E                          u6671 3E7C                          u6807 478C  
                        u5880 42DE                          u5960 161A                          u6680 3E98  
                        u5777 3638                          u4897 49CA                          u5881 42DA  
                        u6681 3E94                          u6817 47A0                          u6737 306E  
                        u5970 1632                          u5890 14DA                          u6690 3EB0  
                        u5787 3694                          u5971 162E                          u5947 15EA  
                        u6907 2D06                          u6691 3EAC                          u6827 47B4  
                        u6747 3094                          u5980 1658                          u5797 36D6  
                        u6917 2D6E                          u6837 47C8                          u6757 3102  
                        u5990 1668                          u5991 1664                          u6927 2E04  
                        u6847 47DC                          u6767 3128                          u5897 14D0  
                        u6937 46A6                          u6857 3EF4                          u6777 4DD2  
                        u5987 164E                          u6947 4BB2                          u6867 3F10  
                        u6787 4764                          u6957 4BC2                          u6877 3F42  
                        u6797 4778                          u6967 4BD8                          u6887 2CB0  
                        u6977 4B28                          u6897 2CD8                          u6987 4B3A  
                        u6997 4B50                    _Alarma_LED 3E4E                          abs@a 0013  
                        _dbuf 0116                          _atoi 355C                          _ctoa 4154  
                        _main 4A8C                          _dtoa 29B0                          _prec 00D6  
                        _nout 00D2                          pad@i 001B                          pad@p 0018  
                        fsr1h 000FE2                          fsr2h 000FDA                          indf1 000FE7  
                        indf2 000FDF                          fsr1l 000FE1                          pad@w 001D  
                        fsr2l 000FD9                 ___fpclassifyf 4056                          prodh 000FF4  
                        prodl 000FF3                          start 0000               ___fldiv@new_exp 0012  
       ??_Timer0Configuration 0001                  _tolower$1423 000D                  ___param_bank 000000  
                       ??_abs 0015                         ??_pad 001A                ?_InicializaLCD 0001  
               ___fltol@sign1 0009               __end_of___aodiv 3A90                         ?_atoi 0008  
                       ?_ctoa 000D               __end_of___fladd 21EC                         ?_main 0001  
                       ?_dtoa 001F               __end_of___aomod 3BF4               __end_of___fldiv 29B0  
             __end_of___awdiv 4556               __end_of___flneg 4C94                         STR_12 084B  
                       STR_13 0853                         STR_16 0857                         STR_18 0857  
             __end_of___awmod 4606               __end_of___flmul 2616               __end_of___flsub 4B18  
             __end_of___fltol 3E4E               ___awdiv@divisor 0008               ___awdiv@counter 000A  
                vfpfcnvrt@fmt 0054                         _TMR0L 000FD6                         _PORTB 000F81  
                       _TRISA 000F92                         _TRISB 000F93                         _TRISD 000F95  
                       _R_CAD 010C                         _ceilf 3138                         _flags 00D8  
                       _horas 00F8                         _fputc 4302                         _fputs 4B5E  
             __end_of_isdigit 4CCC                         atoi@n 0015                         pad@fp 0014  
                       atoi@s 0008                         _width 00D4                         ctoa@c 000F  
                       _putch 4B18                         ctoa@l 0011                         _putcm 4BA2  
                       ctoa@w 0013                         dtoa@d 0021                         dtoa@i 0041  
                       dtoa@n 0039                         dtoa@p 0033                         dtoa@s 0037  
                       dtoa@w 0035               __end_of_isspace 4A8C               __end_of_isupper 4C5C  
                       tablat 000FF5                         status 000FD8               __end_of_sprintf 4A3A  
              ?___fpclassifyf 0001               __end_of_tolower 498C               __end_of_strncmp 4302  
            __end_of_Get_DATA 492C                    _Cronometro 4606               __initialization 4D76  
                __end_of_atoi 3754                  __end_of_ctoa 422C                  __end_of_main 4AD2  
                __end_of_dtoa 2C94              __end_of_Read_ADC 48CA              __end_of_Set_DATA 4DDE  
                      ??_atoi 000A                        ??_ctoa 0010                        ??_main 0060  
                      ??_dtoa 0029                 __activetblptr 000002                        ?_ceilf 0001  
                      _ADCON0 000FC2                        _ADCON2 000FC0                        ?_fputc 0004  
                      ?_fputs 000D                        _ADRESH 000FC4                        _ADRESL 000FC3  
            ___awdiv@dividend 0006                        ?_putch 0001                        _ANSELB 000F5C  
                      ?_putcm 0001                   ?_Alarma_LED 0001                        _MINUTO 00E6  
                      _OSCCON 000FD3          __end_of_LCD_COMANDOS 4DCA                        _R_LM35 0110  
            __end_of___xxtofl 3908                        _Alarma 2C94                    _SensorLM35 2F18  
                vfprintf@cfmt 005C         __end_of_Mostrar_Reloj 3D48                        ___flge 3F52  
                      ___fleq 46B4                     ??___aodiv 0011                     ??___fladd 0009  
                   ??___aomod 0011                        ___wmul 4D50                        _cambio 00FC  
                   ??___fldiv 0009                     ??___awdiv 000A                     ??___flneg 0005  
                   ??___awmod 0005                     ??___flmul 0021                     ??___flsub 003A  
                   ??___fltol 0005                        _efgtoa 085C               ??_InicializaLCD 0004  
                      _floorf 334A                        ceilf@e 000F                        ceilf@m 000B  
                      ceilf@u 0011                        ceilf@x 0001                        clear_0 4D7C  
                      clear_1 4D88              ___awdiv@quotient 000C               ___awmod@divisor 0003  
             ___awmod@counter 0005                        _printf 4D02                        pad@buf 0016  
                      ctoa@fp 000D                        dtoa@fp 001F                        _strcpy 498C  
                      _strlen 4CCC                        fputc@c 0004                        fputs@c 0011  
                      fputs@i 0012                        fputs@s 000D                     ??_isdigit 0003  
             ___fpclassifyf@e 0009               ___fpclassifyf@u 000B               ___fpclassifyf@x 0001  
                __mediumconst 0000                     ??_isspace 0003                        tblptrh 000FF7  
                   ??_isupper 0003                        tblptrl 000FF6                        tblptru 000FF8  
            __end_of_vfprintf 485C                     ??_sprintf 005E                     ??_tolower 0009  
                   ??_strncmp 0007               _Decenas_Minutos 00EE                    ___flge@ff1 003A  
                  ___flge@ff2 003E               ??___fpclassifyf 0005                  ___xxtofl@arg 0015  
                ___xxtofl@exp 0014                  ___xxtofl@val 000B                    ___fleq@ff1 0001  
                  ___fleq@ff2 0005                    __accesstop 0060       __end_of__initialization 4D8E  
                  ___flneg@f1 0001                   ?_Cronometro 0001                 ___rparam_used 000001  
                  ___fltol@f1 0001                __pcstackCOMRAM 0001                 __end_of_ceilf 334A  
               __end_of_fputc 43CC                 __end_of_fputs 4BA2                 __end_of_putch 4B5E  
               __end_of_putcm 4BE4           __size_of_Alarma_LED 0104                     ?_Get_DATA 0001  
               Read_ADC@canal 0005                       ??_ceilf 0005                       ??_fputc 0008  
                     ??_fputs 0011                       ??_putch 0001                       ??_putcm 0001  
               _Decenas_Horas 00F2                    __pbssBANK0 00CE                    __pbssBANK1 0100  
       __end_of_Configuracion 4D50                     ?_Read_ADC 0001                     ?_Set_DATA 0001  
                     ?_Alarma 0001                   ?_SensorLM35 0001                       ?___flge 003A  
                     ?___fleq 0001                       ?___wmul 0001                       ?_efgtoa 0046  
                     ?_floorf 001A                       ?_printf 00B6                       ?_strcpy 0001  
                     ?_strlen 0001                     ?___xxtofl 000B           __size_of_Cronometro 00AE  
                  ??_Get_DATA 0002                       _SEGUNDO 0114            __size_of_vfpfcnvrt 0878  
       __size_of_LCD_COMANDOS 0018                    ??_Read_ADC 0003   __end_of_Timer0Configuration 4DB2  
                  ??_Set_DATA 0001               _SensorLM35$1646 00CA               __size_of_Alarma 0284  
                     __Hparam 0000                       __Lparam 0000                       _Valores 0166  
             __size_of___flge 0104               __size_of___fleq 00AA                       ___aodiv 3908  
                     ___fladd 1D2C                       ___aomod 3A90                       ___fldiv 2616  
                     ___awdiv 4492                       ___flneg 4C5C                       ___awmod 4556  
                     ___flmul 21EC                       ___flsub 4AD2                       ___fltol 3D48  
             __size_of___wmul 0026                     ?_vfprintf 00B0                  __psmallconst 0800  
             __size_of_efgtoa 0C58               __size_of_floorf 0212                       __pcinit 4D76  
                     __ramtop 0800                       __ptext0 4A8C                       __ptext1 4D98  
                     __ptext2 2F18                       __ptext3 49E8                       __ptext4 3138  
                     __ptext5 3754                       __ptext6 485C                       __ptext7 4DB2  
                     __ptext8 48CA                       __ptext9 4DCA               __size_of_printf 0028  
                _LCD_COMANDOS 4DB2                     _T0CONbits 000FD5               __size_of_strcpy 005C  
             __size_of_strlen 0036                  __size_of_abs 0040                  __size_of_pad 00C6  
                     _isdigit 4C94                    ??___xxtofl 000F              ___awmod@dividend 0001  
                     _isspace 4A3A                       _minutos 00FA                       _isupper 4C24  
                     efgtoa@c 004C                       efgtoa@d 0078                       efgtoa@e 0090  
                     efgtoa@f 0048                       efgtoa@g 008C                       efgtoa@h 0082  
                     efgtoa@i 008A                       efgtoa@l 0086                       efgtoa@m 0072  
                     efgtoa@n 0092                       efgtoa@p 007C                       efgtoa@t 006C  
                     efgtoa@u 0094                       efgtoa@w 007E                       atoi@neg 000E  
         __size_of_SensorLM35 0220                       _sprintf 49E8                       _tolower 492C  
                     _strncmp 422C          end_of_initialization 4D8E                       floorf@e 0028  
                     floorf@m 0024                       floorf@u 002A                       floorf@x 001A  
                ??_Alarma_LED 0001                       fputc@fp 0006                 __Lmediumconst 0000  
                     fputs@fp 000F              _Unidades_Minutos 00F0             __end_of_vfpfcnvrt 1D2C  
                  efgtoa@mode 0081                    efgtoa@sign 007A                       postdec2 000FDD  
                     postinc0 000FEE                       postinc1 000FE6                       postinc2 000FDE  
                  ??_vfprintf 005C                       strcpy@d 0009                       strlen@a 0003  
                     strcpy@s 0007                       strlen@s 0001                     _PORTAbits 000F80  
                   _PORTCbits 000F82            __end_of_Alarma_LED 3F52              _Decenas_Segundos 00EA  
                 ___fladd@grs 0010                 ___xxtofl@sign 0013                     _TRISCbits 000F94  
                 ___fldiv@grs 0014                   ___fldiv@rem 000D                   ___flmul@grs 0026  
                ??_Cronometro 005E                __end_of_Alarma 2F18                __end_of___flge 4056  
              __end_of___fleq 475E                   vfpfcnvrt@ap 0056                   vfpfcnvrt@ct 00AC  
                 vfpfcnvrt@fp 0052                   vfpfcnvrt@ll 0098                __end_of___wmul 4D76  
                 vfpfcnvrt@vp 00A0                __end_of_efgtoa 14B4                   putch@Activa 0003  
       __end_of_InicializaLCD 47E6                __end_of_floorf 355C                    floorf@F527 0104  
              __end_of_printf 4D2A                __end_of_strcpy 49E8                __end_of_strlen 4D02  
                 putcm@Activa 0003           start_initialization 4D76            __end_of_Cronometro 46B4  
                 __end_of_abs 4C24                   __end_of_pad 4492             __size_of_Get_DATA 0062  
      __size_of_Mostrar_Reloj 0154                  Get_DATA@data 0003         __end_of___fpclassifyf 4154  
                    ??_Alarma 00C8             __size_of_Read_ADC 006E             __size_of_Set_DATA 0014  
                ??_SensorLM35 005E                   vfprintf@fmt 00B2                      ??___flge 0042  
                    ??___fleq 0009                      ??___wmul 0005                      ??_efgtoa 004D  
                    ??_floorf 001E                _Unidades_Horas 00F4                      ??_printf 005E  
                    ??_strcpy 0005                      ??_strlen 0003                     ___fladd@a 0005  
                   ___fladd@b 0001                     ___fldiv@a 0005                     ___fldiv@b 0001  
                   ___flmul@a 001D                     ___flmul@b 0019                     ___flsub@a 0036  
                   ___flsub@b 0032                 __pcstackBANK0 0060              ___aodiv@dividend 0001  
           __size_of___xxtofl 01B4            __end_of_SensorLM35 3138                     _atoi$1336 0010  
                   _atoi$1337 0014                     _atoi$1338 0012                   _efgtoa$1272 0064  
                 _efgtoa$1267 0060                   _efgtoa$1276 0066                   _efgtoa$1268 0062  
                 _efgtoa$1277 0068                   _efgtoa$1278 006A                     _dtoa$1243 0031  
                    ?___aodiv 0001                      ?___fladd 0001                 _Mostrar_Reloj 3BF4  
                    ?___aomod 0001                      ?___fldiv 0001                      ?___awdiv 0006  
            ___aodiv@quotient 0013                      ?___flneg 0001                      ?___awmod 0001  
                    ?___flmul 0019                      ?___flsub 0032                      ?___fltol 0001  
      __size_of_Configuracion 0026             __size_of_vfprintf 0076                     ceilf@F527 0108  
                 __smallconst 0800                      ?_isdigit 0001                      ?_isspace 0001  
                    ?_isupper 0001                __size_of_ceilf 0212                      ?_sprintf 00B6  
                    ?_tolower 0007                __size_of_fputc 00CA                __size_of_fputs 0044  
                    ?_strncmp 0001                __size_of_putch 0046                __size_of_putcm 0042  
              ___wmul@product 0005                      _LATCbits 000F8B                      _LATDbits 000F8C  
__size_of_Timer0Configuration 001A                ?_Mostrar_Reloj 0001                     _vfpfcnvrt 14B4  
                  _ADCON0bits 000FC2                    _ADCON1bits 000FC1             ___wmul@multiplier 0001  
                 Alarma_LED@A 0003                      _Get_DATA 48CA                  _isspace$1354 0007  
                  vfpfcnvrt@c 00AF                    vfpfcnvrt@f 00A8                      _Read_ADC 485C  
               _Configuracion 4D2A                      _Set_DATA 4DCA                      __Hrparam 0000  
                  vfprintf@ap 00B4                      __Lrparam 0000                    vfprintf@fp 00B0  
            __size_of___aodiv 0188              __size_of___fladd 04C0              __size_of___aomod 0164  
            __size_of___fldiv 039A              __size_of___awdiv 00C4              __size_of___flneg 0038  
            __size_of___awmod 00B0              __size_of___flmul 042A              __size_of___flsub 0046  
            __size_of___fltol 0106                    ?_vfpfcnvrt 0052               ___aodiv@divisor 0009  
             ___aodiv@counter 0011                    _ANSELAbits 000F5B                    _ANSELCbits 000F5D  
          ___fpclassifyf@F465 0100                    sprintf@fmt 00B8                      ___xxtofl 3754  
            __size_of_isdigit 0038              __size_of_isspace 0052                      __ptext10 475E  
                    __ptext11 4D2A                      __ptext20 422C                      __ptext12 3E4E  
                    __ptext21 085C                      __ptext13 2C94                      __ptext30 4C5C  
                    __ptext22 492C                      __ptext14 4606                      __ptext31 21EC  
                    __ptext23 4C24                      __ptext15 3BF4                      __ptext40 4B5E  
                    __ptext32 3F52                      __ptext24 498C                      __ptext16 4BA2  
                    __ptext41 4BE4                      __ptext33 46B4                      __ptext25 334A  
                    __ptext17 4D02                      __ptext50 4D50                      __ptext42 3A90  
                    __ptext34 2616                      __ptext26 4056                      __ptext18 47E6  
                    __ptext43 3908                      __ptext35 4556                      __ptext27 3D48  
                    __ptext19 14B4                      __ptext44 4154                      __ptext36 4492  
                    __ptext28 4AD2                      __ptext45 4302                      __ptext37 29B0  
                    __ptext29 1D2C                      __ptext46 4B18                      __ptext38 43CC  
                    __ptext47 355C                      __ptext39 4CCC                      __ptext48 4A3A  
                    __ptext49 4C94              __size_of_isupper 0038              __size_of_sprintf 0052  
            __size_of_tolower 0060                ?_Configuracion 0001                    strcpy@dest 0001  
            __size_of_strncmp 00D6                 __size_of_atoi 01F8                 __size_of_ctoa 00D8  
               __size_of_main 0046                 __size_of_dtoa 02E4               ??_Mostrar_Reloj 005E  
                    _segundos 00F6                      efgtoa@fp 0046                      efgtoa@ne 0070  
                    efgtoa@pp 006E                      efgtoa@ou 0074                      _vfprintf 47E6  
                   printf@fmt 00B6              ___aomod@dividend 0001                     putch@data 0002  
              _vfpfcnvrt$1292 00A2                _vfpfcnvrt$1293 00A4                _vfpfcnvrt$1299 00A6  
                  _INTCONbits 000FF2                     putcm@data 0002                      isdigit@c 0001  
                   sprintf@ap 00C2                      isspace@c 0001        __size_of_InicializaLCD 0088  
                   strcpy@src 0003             _Unidades_Segundos 00EC                      isupper@c 0001  
                   strncmp@_l 0001                     strncmp@_r 0003                   efgtoa@nmode 0080  
                    printf@ap 00C6               ___aomod@divisor 0009                   ??_vfpfcnvrt 0058  
             ___aomod@counter 0011                 ?_LCD_COMANDOS 0001                   _temperatura 00CE  
                    sprintf@f 00C4                      tolower@c 0007                      sprintf@s 00B6  
      __size_of___fpclassifyf 00FE                      strncmp@l 0008                      strncmp@n 0005  
                    strncmp@r 000A           _Timer0Configuration 4D98           LCD_COMANDOS@comando 0004  
             ??_Configuracion 0001                 ___fladd@signs 000D                  ___aodiv@sign 0012  
                ___fladd@aexp 000E                  ___fladd@bexp 000F                  ___aomod@sign 0012  
        ?_Timer0Configuration 0001  
