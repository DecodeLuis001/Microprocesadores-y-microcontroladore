

Microchip MPLAB XC8 Assembler V2.31 build 20201012212115 
                                                                                               Fri Apr 30 12:28:13 2021

Microchip MPLAB XC8 C Compiler v2.31 (Free license) build 20201012212115 Og1 
     1                           	processor	18F45K50
     2                           	fnconf	rparam,??,?,0
     3                           	pagewidth 120
     4                           	opt	flic
     5                           	psect	smallconst,global,reloc=2,class=SMALLCONST,delta=1,noexec
     6                           	psect	cinit,global,reloc=2,class=CODE,delta=1
     7                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1,lowdata,noexec
     8                           	psect	bssBANK1,global,class=BANK1,space=1,delta=1,lowdata,noexec
     9                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1,lowdata,noexec
    10                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
    11                           	psect	text0,global,reloc=2,class=CODE,delta=1
    12                           	psect	text1,global,reloc=2,class=CODE,delta=1
    13                           	psect	text2,global,reloc=2,class=CODE,delta=1
    14                           	psect	text3,global,reloc=2,class=CODE,delta=1,group=3
    15                           	psect	text4,global,reloc=2,class=CODE,delta=1,group=3
    16                           	psect	text5,global,reloc=2,class=CODE,delta=1,group=2
    17                           	psect	text6,global,reloc=2,class=CODE,delta=1
    18                           	psect	text7,global,reloc=2,class=CODE,delta=1
    19                           	psect	text8,global,reloc=2,class=CODE,delta=1
    20                           	psect	text9,global,reloc=2,class=CODE,delta=1
    21                           	psect	text10,global,reloc=2,class=CODE,delta=1
    22                           	psect	text11,global,reloc=2,class=CODE,delta=1
    23                           	psect	text12,global,reloc=2,class=CODE,delta=1
    24                           	psect	text13,global,reloc=2,class=CODE,delta=1
    25                           	psect	text14,global,reloc=2,class=CODE,delta=1
    26                           	psect	text15,global,reloc=2,class=CODE,delta=1
    27                           	psect	text16,global,reloc=2,class=CODE,delta=1
    28                           	psect	text17,global,reloc=2,class=CODE,delta=1
    29                           	psect	text18,global,reloc=2,class=CODE,delta=1,group=3
    30                           	psect	text19,global,reloc=2,class=CODE,delta=1,group=1
    31                           	psect	text20,global,reloc=2,class=CODE,delta=1,group=1
    32                           	psect	text21,global,reloc=2,class=CODE,delta=1,group=3
    33                           	psect	text22,global,reloc=2,class=CODE,delta=1,group=1
    34                           	psect	text23,global,reloc=2,class=CODE,delta=1,group=3
    35                           	psect	text24,global,reloc=2,class=CODE,delta=1,group=3
    36                           	psect	text25,global,reloc=2,class=CODE,delta=1,group=3
    37                           	psect	text26,global,reloc=2,class=CODE,delta=1,group=3
    38                           	psect	text27,global,reloc=2,class=CODE,delta=1,group=3
    39                           	psect	text28,global,reloc=2,class=CODE,delta=1,group=2
    40                           	psect	text29,global,reloc=2,class=CODE,delta=1,group=2
    41                           	psect	text30,global,reloc=2,class=CODE,delta=1,group=2
    42                           	psect	text31,global,reloc=2,class=CODE,delta=1,group=2
    43                           	psect	text32,global,reloc=2,class=CODE,delta=1,group=2
    44                           	psect	text33,global,reloc=2,class=CODE,delta=1,group=2
    45                           	psect	text34,global,reloc=2,class=CODE,delta=1,group=2
    46                           	psect	text35,global,reloc=2,class=CODE,delta=1,group=2
    47                           	psect	text36,global,reloc=2,class=CODE,delta=1,group=2
    48                           	psect	text37,global,reloc=2,class=CODE,delta=1,group=2
    49                           	psect	text38,global,reloc=2,class=CODE,delta=1,group=1
    50                           	psect	text39,global,reloc=2,class=CODE,delta=1,group=1
    51                           	psect	text40,global,reloc=2,class=CODE,delta=1,group=3
    52                           	psect	text41,global,reloc=2,class=CODE,delta=1,group=3
    53                           	psect	text42,global,reloc=2,class=CODE,delta=1,group=3
    54                           	psect	text43,global,reloc=2,class=CODE,delta=1,group=2
    55                           	psect	text44,global,reloc=2,class=CODE,delta=1,group=2
    56                           	psect	text45,global,reloc=2,class=CODE,delta=1,group=1
    57                           	psect	text46,global,reloc=2,class=CODE,delta=1,group=3
    58                           	psect	text47,global,reloc=2,class=CODE,delta=1
    59                           	psect	text48,global,reloc=2,class=CODE,delta=1,group=3
    60                           	psect	text49,global,reloc=2,class=CODE,delta=1,group=3
    61                           	psect	text50,global,reloc=2,class=CODE,delta=1,group=3
    62                           	psect	text51,global,reloc=2,class=CODE,delta=1,group=2
    63                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1,noexec
    64                           	psect	rparam,global,class=COMRAM,space=1,delta=1,noexec
    65                           	psect	idloc,global,abs,ovrld,class=IDLOC,space=5,delta=1,noexec
    66                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=1,noexec
    67  0000                     
    68                           ; Version 2.20
    69                           ; Generated 05/05/2020 GMT
    70                           ; 
    71                           ; Copyright Â© 2020, Microchip Technology Inc. and its subsidiaries ("Microchip")
    72                           ; All rights reserved.
    73                           ; 
    74                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    75                           ; 
    76                           ; Redistribution and use in source and binary forms, with or without modification, are
    77                           ; permitted provided that the following conditions are met:
    78                           ; 
    79                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    80                           ;        conditions and the following disclaimer.
    81                           ; 
    82                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    83                           ;        of conditions and the following disclaimer in the documentation and/or other
    84                           ;        materials provided with the distribution.
    85                           ; 
    86                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    87                           ;        software without specific prior written permission.
    88                           ; 
    89                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    90                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    91                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    92                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    93                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    94                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    95                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    96                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    97                           ; 
    98                           ; 
    99                           ; Code-generator required, PIC18F45K50 Definitions
   100                           ; 
   101                           ; SFR Addresses
   102  0000                     _ANSELB	set	3932
   103  0000                     _ANSELCbits	set	3933
   104  0000                     _ANSELAbits	set	3931
   105  0000                     _PORTB	set	3969
   106  0000                     _PORTCbits	set	3970
   107  0000                     _PORTAbits	set	3968
   108  0000                     _INTCONbits	set	4082
   109  0000                     _TMR0L	set	4054
   110  0000                     _T0CONbits	set	4053
   111  0000                     _LATD	set	3980
   112  0000                     _LATDbits	set	3980
   113  0000                     _LATB	set	3978
   114  0000                     _TRISB	set	3987
   115  0000                     _LATCbits	set	3979
   116  0000                     _TRISCbits	set	3988
   117  0000                     _OSCCON	set	4051
   118  0000                     _TRISD	set	3989
   119  0000                     _TRISA	set	3986
   120  0000                     _ADRESH	set	4036
   121  0000                     _ADRESL	set	4035
   122  0000                     _ADCON2	set	4032
   123  0000                     _ADCON0	set	4034
   124  0000                     _ADCON0bits	set	4034
   125  0000                     _ADCON1bits	set	4033
   126                           
   127                           	psect	smallconst
   128  000800                     __psmallconst:
   129                           	callstack 0
   130  000800  00                 	db	0
   131  000801                     STR_7:
   132  000801  25                 	db	37
   133  000802  64                 	db	100	;'d'
   134  000803  25                 	db	37
   135  000804  64                 	db	100	;'d'
   136  000805  3A                 	db	58	;':'
   137  000806  25                 	db	37
   138  000807  64                 	db	100	;'d'
   139  000808  25                 	db	37
   140  000809  64                 	db	100	;'d'
   141  00080A  3A                 	db	58	;':'
   142  00080B  25                 	db	37
   143  00080C  64                 	db	100	;'d'
   144  00080D  25                 	db	37
   145  00080E  64                 	db	100	;'d'
   146  00080F  20                 	db	32
   147  000810  41                 	db	65	;'A'
   148  000811  2E                 	db	46
   149  000812  4D                 	db	77	;'M'
   150  000813  00                 	db	0
   151  000814                     STR_8:
   152  000814  25                 	db	37
   153  000815  64                 	db	100	;'d'
   154  000816  25                 	db	37
   155  000817  64                 	db	100	;'d'
   156  000818  3A                 	db	58	;':'
   157  000819  25                 	db	37
   158  00081A  64                 	db	100	;'d'
   159  00081B  25                 	db	37
   160  00081C  64                 	db	100	;'d'
   161  00081D  3A                 	db	58	;':'
   162  00081E  25                 	db	37
   163  00081F  64                 	db	100	;'d'
   164  000820  25                 	db	37
   165  000821  64                 	db	100	;'d'
   166  000822  20                 	db	32
   167  000823  50                 	db	80	;'P'
   168  000824  2E                 	db	46
   169  000825  4D                 	db	77	;'M'
   170  000826  00                 	db	0
   171  000827                     STR_5:
   172  000827  20                 	db	32
   173  000828  43                 	db	67	;'C'
   174  000829  61                 	db	97	;'a'
   175  00082A  6C                 	db	108	;'l'
   176  00082B  6F                 	db	111	;'o'
   177  00082C  72                 	db	114	;'r'
   178  00082D  20                 	db	32
   179  00082E  45                 	db	69	;'E'
   180  00082F  78                 	db	120	;'x'
   181  000830  74                 	db	116	;'t'
   182  000831  72                 	db	114	;'r'
   183  000832  65                 	db	101	;'e'
   184  000833  6D                 	db	109	;'m'
   185  000834  6F                 	db	111	;'o'
   186  000835  21                 	db	33
   187  000836  20                 	db	32
   188  000837  00                 	db	0
   189  000838                     STR_1:
   190  000838  54                 	db	84	;'T'
   191  000839  65                 	db	101	;'e'
   192  00083A  6D                 	db	109	;'m'
   193  00083B  70                 	db	112	;'p'
   194  00083C  2E                 	db	46
   195  00083D  20                 	db	32
   196  00083E  3D                 	db	61	;'='
   197  00083F  25                 	db	37
   198  000840  33                 	db	51	;'3'
   199  000841  2E                 	db	46
   200  000842  32                 	db	50	;'2'
   201  000843  66                 	db	102	;'f'
   202  000844  20                 	db	32
   203  000845  25                 	db	37
   204  000846  63                 	db	99	;'c'
   205  000847  43                 	db	67	;'C'
   206  000848  00                 	db	0
   207  000849                     STR_6:
   208  000849  20                 	db	32
   209  00084A  46                 	db	70	;'F'
   210  00084B  72                 	db	114	;'r'
   211  00084C  69                 	db	105	;'i'
   212  00084D  6F                 	db	111	;'o'
   213  00084E  20                 	db	32
   214  00084F  45                 	db	69	;'E'
   215  000850  78                 	db	120	;'x'
   216  000851  74                 	db	116	;'t'
   217  000852  72                 	db	114	;'r'
   218  000853  65                 	db	101	;'e'
   219  000854  6D                 	db	109	;'m'
   220  000855  6F                 	db	111	;'o'
   221  000856  21                 	db	33
   222  000857  20                 	db	32
   223  000858  00                 	db	0
   224  000859                     STR_9:
   225  000859  20                 	db	32
   226  00085A  4D                 	db	77	;'M'
   227  00085B  6F                 	db	111	;'o'
   228  00085C  64                 	db	100	;'d'
   229  00085D  6F                 	db	111	;'o'
   230  00085E  20                 	db	32
   231  00085F  41                 	db	65	;'A'
   232  000860  6C                 	db	108	;'l'
   233  000861  61                 	db	97	;'a'
   234  000862  72                 	db	114	;'r'
   235  000863  6D                 	db	109	;'m'
   236  000864  61                 	db	97	;'a'
   237  000865  20                 	db	32
   238  000866  00                 	db	0
   239  000867                     STR_12:
   240  000867  49                 	db	73	;'I'
   241  000868  4E                 	db	78	;'N'
   242  000869  46                 	db	70	;'F'
   243  00086A  00                 	db	0
   244  00086B                     STR_16:
   245  00086B  4E                 	db	78	;'N'
   246  00086C  41                 	db	65	;'A'
   247  00086D  4E                 	db	78	;'N'
   248  00086E  00                 	db	0
   249  00086F                     STR_13:
   250  00086F  69                 	db	105	;'i'
   251  000870  6E                 	db	110	;'n'
   252  000871  66                 	db	102	;'f'
   253  000872  00                 	db	0
   254  000873                     STR_17:
   255  000873  6E                 	db	110	;'n'
   256  000874  61                 	db	97	;'a'
   257  000875  6E                 	db	110	;'n'
   258  000876  00                 	db	0
   259  000877                     STR_20:
   260  000877  6C                 	db	108	;'l'
   261  000878  66                 	db	102	;'f'
   262  000879  00                 	db	0
   263  00087A  00                 	db	0	; dummy byte at the end
   264  0000                     
   265                           ; #config settings
   266                           
   267                           	psect	cinit
   268  005048                     __pcinit:
   269                           	callstack 0
   270  005048                     start_initialization:
   271                           	callstack 0
   272  005048                     __initialization:
   273                           	callstack 0
   274                           
   275                           ; Clear objects allocated to BANK1 (128 bytes)
   276  005048  EE01  F000         	lfsr	0,__pbssBANK1
   277  00504C  0E80               	movlw	128
   278  00504E                     clear_0:
   279  00504E  6AEE               	clrf	postinc0,c
   280  005050  06E8               	decf	wreg,f,c
   281  005052  E1FD               	bnz	clear_0
   282                           
   283                           ; Clear objects allocated to BANK0 (50 bytes)
   284  005054  EE00  F0CE         	lfsr	0,__pbssBANK0
   285  005058  0E32               	movlw	50
   286  00505A                     clear_1:
   287  00505A  6AEE               	clrf	postinc0,c
   288  00505C  06E8               	decf	wreg,f,c
   289  00505E  E1FD               	bnz	clear_1
   290  005060                     end_of_initialization:
   291                           	callstack 0
   292  005060                     __end_of__initialization:
   293                           	callstack 0
   294  005060  0E00               	movlw	low (__Lmediumconst shr (0+16))
   295  005062  6EF8               	movwf	tblptru,c
   296  005064  0100               	movlb	0
   297  005066  EFAF  F026         	goto	_main	;jump to C main() function
   298                           
   299                           	psect	bssBANK0
   300  0000CE                     __pbssBANK0:
   301                           	callstack 0
   302  0000CE                     _temperatura:
   303                           	callstack 0
   304  0000CE                     	ds	4
   305  0000D2                     _nout:
   306                           	callstack 0
   307  0000D2                     	ds	2
   308  0000D4                     _width:
   309                           	callstack 0
   310  0000D4                     	ds	2
   311  0000D6                     _prec:
   312                           	callstack 0
   313  0000D6                     	ds	2
   314  0000D8                     _flags:
   315                           	callstack 0
   316  0000D8                     	ds	2
   317  0000DA                     _US:
   318                           	callstack 0
   319  0000DA                     	ds	2
   320  0000DC                     _DS:
   321                           	callstack 0
   322  0000DC                     	ds	2
   323  0000DE                     _UM:
   324                           	callstack 0
   325  0000DE                     	ds	2
   326  0000E0                     _DM:
   327                           	callstack 0
   328  0000E0                     	ds	2
   329  0000E2                     _UH:
   330                           	callstack 0
   331  0000E2                     	ds	2
   332  0000E4                     _DH:
   333                           	callstack 0
   334  0000E4                     	ds	2
   335  0000E6                     _MINUTO:
   336                           	callstack 0
   337  0000E6                     	ds	2
   338  0000E8                     _HORA:
   339                           	callstack 0
   340  0000E8                     	ds	2
   341  0000EA                     _Decenas_Segundos:
   342                           	callstack 0
   343  0000EA                     	ds	2
   344  0000EC                     _Unidades_Segundos:
   345                           	callstack 0
   346  0000EC                     	ds	2
   347  0000EE                     _Decenas_Minutos:
   348                           	callstack 0
   349  0000EE                     	ds	2
   350  0000F0                     _Unidades_Minutos:
   351                           	callstack 0
   352  0000F0                     	ds	2
   353  0000F2                     _Decenas_Horas:
   354                           	callstack 0
   355  0000F2                     	ds	2
   356  0000F4                     _Unidades_Horas:
   357                           	callstack 0
   358  0000F4                     	ds	2
   359  0000F6                     _segundos:
   360                           	callstack 0
   361  0000F6                     	ds	2
   362  0000F8                     _horas:
   363                           	callstack 0
   364  0000F8                     	ds	2
   365  0000FA                     _minutos:
   366                           	callstack 0
   367  0000FA                     	ds	2
   368  0000FC                     _ADC1:
   369                           	callstack 0
   370  0000FC                     	ds	2
   371  0000FE                     _ADC:
   372                           	callstack 0
   373  0000FE                     	ds	2
   374                           
   375                           	psect	bssBANK1
   376  000100                     __pbssBANK1:
   377                           	callstack 0
   378  000100                     ___fpclassifyf@F465:
   379                           	callstack 0
   380  000100                     	ds	4
   381  000104                     floorf@F527:
   382                           	callstack 0
   383  000104                     	ds	4
   384  000108                     ceilf@F527:
   385                           	callstack 0
   386  000108                     	ds	4
   387  00010C                     _VoltajeB:
   388                           	callstack 0
   389  00010C                     	ds	4
   390  000110                     _VoltajeA:
   391                           	callstack 0
   392  000110                     	ds	4
   393  000114                     _R_CAD:
   394                           	callstack 0
   395  000114                     	ds	4
   396  000118                     _R_LM35:
   397                           	callstack 0
   398  000118                     	ds	4
   399  00011C                     _SEGUNDO:
   400                           	callstack 0
   401  00011C                     	ds	2
   402  00011E                     _cambio:
   403                           	callstack 0
   404  00011E                     	ds	2
   405  000120                     _dbuf:
   406                           	callstack 0
   407  000120                     	ds	80
   408  000170                     _Valores:
   409                           	callstack 0
   410  000170                     	ds	16
   411                           
   412                           	psect	cstackBANK0
   413  000060                     __pcstackBANK0:
   414                           	callstack 0
   415  000060                     _efgtoa$1277:
   416                           	callstack 0
   417                           
   418                           ; 2 bytes @ 0x0
   419  000060                     	ds	2
   420  000062                     _efgtoa$1278:
   421                           	callstack 0
   422                           
   423                           ; 2 bytes @ 0x2
   424  000062                     	ds	2
   425  000064                     _efgtoa$1282:
   426                           	callstack 0
   427                           
   428                           ; 2 bytes @ 0x4
   429  000064                     	ds	2
   430  000066                     _efgtoa$1286:
   431                           	callstack 0
   432                           
   433                           ; 2 bytes @ 0x6
   434  000066                     	ds	2
   435  000068                     _efgtoa$1287:
   436                           	callstack 0
   437                           
   438                           ; 2 bytes @ 0x8
   439  000068                     	ds	2
   440  00006A                     _efgtoa$1288:
   441                           	callstack 0
   442                           
   443                           ; 2 bytes @ 0xA
   444  00006A                     	ds	2
   445  00006C                     efgtoa@t:
   446                           	callstack 0
   447                           
   448                           ; 2 bytes @ 0xC
   449  00006C                     	ds	2
   450  00006E                     efgtoa@pp:
   451                           	callstack 0
   452                           
   453                           ; 2 bytes @ 0xE
   454  00006E                     	ds	2
   455  000070                     efgtoa@ne:
   456                           	callstack 0
   457                           
   458                           ; 2 bytes @ 0x10
   459  000070                     	ds	2
   460  000072                     efgtoa@m:
   461                           	callstack 0
   462                           
   463                           ; 2 bytes @ 0x12
   464  000072                     	ds	2
   465  000074                     efgtoa@ou:
   466                           	callstack 0
   467                           
   468                           ; 4 bytes @ 0x14
   469  000074                     	ds	4
   470  000078                     efgtoa@d:
   471                           	callstack 0
   472                           
   473                           ; 2 bytes @ 0x18
   474  000078                     	ds	2
   475  00007A                     efgtoa@sign:
   476                           	callstack 0
   477                           
   478                           ; 2 bytes @ 0x1A
   479  00007A                     	ds	2
   480  00007C                     efgtoa@p:
   481                           	callstack 0
   482                           
   483                           ; 2 bytes @ 0x1C
   484  00007C                     	ds	2
   485  00007E                     efgtoa@w:
   486                           	callstack 0
   487                           
   488                           ; 2 bytes @ 0x1E
   489  00007E                     	ds	2
   490  000080                     efgtoa@nmode:
   491                           	callstack 0
   492                           
   493                           ; 1 bytes @ 0x20
   494  000080                     	ds	1
   495  000081                     efgtoa@mode:
   496                           	callstack 0
   497                           
   498                           ; 1 bytes @ 0x21
   499  000081                     	ds	1
   500  000082                     efgtoa@h:
   501                           	callstack 0
   502                           
   503                           ; 4 bytes @ 0x22
   504  000082                     	ds	4
   505  000086                     efgtoa@l:
   506                           	callstack 0
   507                           
   508                           ; 4 bytes @ 0x26
   509  000086                     	ds	4
   510  00008A                     efgtoa@i:
   511                           	callstack 0
   512                           
   513                           ; 2 bytes @ 0x2A
   514  00008A                     	ds	2
   515  00008C                     efgtoa@g:
   516                           	callstack 0
   517                           
   518                           ; 4 bytes @ 0x2C
   519  00008C                     	ds	4
   520  000090                     efgtoa@e:
   521                           	callstack 0
   522                           
   523                           ; 2 bytes @ 0x30
   524  000090                     	ds	2
   525  000092                     efgtoa@n:
   526                           	callstack 0
   527                           
   528                           ; 2 bytes @ 0x32
   529  000092                     	ds	2
   530  000094                     efgtoa@u:
   531                           	callstack 0
   532                           
   533                           ; 4 bytes @ 0x34
   534  000094                     	ds	4
   535  000098                     vfpfcnvrt@ll:
   536                           	callstack 0
   537                           
   538                           ; 8 bytes @ 0x38
   539  000098                     	ds	8
   540  0000A0                     vfpfcnvrt@vp:
   541                           	callstack 0
   542                           
   543                           ; 2 bytes @ 0x40
   544  0000A0                     	ds	2
   545  0000A2                     _vfpfcnvrt$1302:
   546                           	callstack 0
   547                           
   548                           ; 2 bytes @ 0x42
   549  0000A2                     	ds	2
   550  0000A4                     _vfpfcnvrt$1303:
   551                           	callstack 0
   552                           
   553                           ; 2 bytes @ 0x44
   554  0000A4                     	ds	2
   555  0000A6                     _vfpfcnvrt$1309:
   556                           	callstack 0
   557                           
   558                           ; 2 bytes @ 0x46
   559  0000A6                     	ds	2
   560  0000A8                     vfpfcnvrt@f:
   561                           	callstack 0
   562                           
   563                           ; 4 bytes @ 0x48
   564  0000A8                     	ds	4
   565  0000AC                     vfpfcnvrt@ct:
   566                           	callstack 0
   567                           
   568                           ; 3 bytes @ 0x4C
   569  0000AC                     	ds	3
   570  0000AF                     vfpfcnvrt@c:
   571                           	callstack 0
   572                           
   573                           ; 1 bytes @ 0x4F
   574  0000AF                     	ds	1
   575  0000B0                     ?_vfprintf:
   576                           	callstack 0
   577  0000B0                     vfprintf@fp:
   578                           	callstack 0
   579                           
   580                           ; 2 bytes @ 0x50
   581  0000B0                     	ds	2
   582  0000B2                     vfprintf@fmt:
   583                           	callstack 0
   584                           
   585                           ; 2 bytes @ 0x52
   586  0000B2                     	ds	2
   587  0000B4                     vfprintf@ap:
   588                           	callstack 0
   589                           
   590                           ; 2 bytes @ 0x54
   591  0000B4                     	ds	2
   592  0000B6                     ?_sprintf:
   593                           	callstack 0
   594  0000B6                     ?_printf:
   595                           	callstack 0
   596  0000B6                     sprintf@s:
   597                           	callstack 0
   598  0000B6                     printf@fmt:
   599                           	callstack 0
   600                           
   601                           ; 2 bytes @ 0x56
   602  0000B6                     	ds	2
   603  0000B8                     sprintf@fmt:
   604                           	callstack 0
   605                           
   606                           ; 2 bytes @ 0x58
   607  0000B8                     	ds	10
   608  0000C2                     sprintf@ap:
   609                           	callstack 0
   610                           
   611                           ; 2 bytes @ 0x62
   612  0000C2                     	ds	2
   613  0000C4                     sprintf@f:
   614                           	callstack 0
   615                           
   616                           ; 6 bytes @ 0x64
   617  0000C4                     	ds	2
   618  0000C6                     printf@ap:
   619                           	callstack 0
   620                           
   621                           ; 2 bytes @ 0x66
   622  0000C6                     	ds	2
   623  0000C8                     ??_Alarma:
   624                           
   625                           ; 1 bytes @ 0x68
   626  0000C8                     	ds	2
   627  0000CA                     _SensorLM35$1658:
   628                           	callstack 0
   629                           
   630                           ; 4 bytes @ 0x6A
   631  0000CA                     	ds	4
   632                           
   633                           	psect	cstackCOMRAM
   634  000001                     __pcstackCOMRAM:
   635                           	callstack 0
   636  000001                     ??_Set_DATA:
   637  000001                     ??_putch:
   638  000001                     ??_putcm:
   639  000001                     ??_Alarma_LED:
   640  000001                     ?_strlen:
   641                           	callstack 0
   642  000001                     ?___fpclassifyf:
   643                           	callstack 0
   644  000001                     ?_isupper:
   645                           	callstack 0
   646  000001                     ?_isdigit:
   647                           	callstack 0
   648  000001                     ?_strncmp:
   649                           	callstack 0
   650  000001                     ?_isspace:
   651                           	callstack 0
   652  000001                     ?_Read_ADC:
   653                           	callstack 0
   654  000001                     ?_Read_ADC1:
   655                           	callstack 0
   656  000001                     ?___wmul:
   657                           	callstack 0
   658  000001                     ?___awmod:
   659                           	callstack 0
   660  000001                     ?_ceilf:
   661                           	callstack 0
   662  000001                     ?___fladd:
   663                           	callstack 0
   664  000001                     ?___fldiv:
   665                           	callstack 0
   666  000001                     ?___flneg:
   667                           	callstack 0
   668  000001                     ?___fltol:
   669                           	callstack 0
   670  000001                     ?___aodiv:
   671                           	callstack 0
   672  000001                     ?___aomod:
   673                           	callstack 0
   674  000001                     ___wmul@multiplier:
   675                           	callstack 0
   676  000001                     ___awmod@dividend:
   677                           	callstack 0
   678  000001                     isdigit@c:
   679                           	callstack 0
   680  000001                     isspace@c:
   681                           	callstack 0
   682  000001                     isupper@c:
   683                           	callstack 0
   684  000001                     strcpy@dest:
   685                           	callstack 0
   686  000001                     strlen@s:
   687                           	callstack 0
   688  000001                     strncmp@_l:
   689                           	callstack 0
   690  000001                     ___fleq@ff1:
   691                           	callstack 0
   692  000001                     ___flneg@f1:
   693                           	callstack 0
   694  000001                     ___fltol@f1:
   695                           	callstack 0
   696  000001                     ___fladd@b:
   697                           	callstack 0
   698  000001                     ___fldiv@b:
   699                           	callstack 0
   700  000001                     ceilf@x:
   701                           	callstack 0
   702  000001                     ___fpclassifyf@x:
   703                           	callstack 0
   704  000001                     ___aodiv@dividend:
   705                           	callstack 0
   706  000001                     ___aomod@dividend:
   707                           	callstack 0
   708                           
   709                           ; 8 bytes @ 0x0
   710  000001                     	ds	1
   711  000002                     ??_Get_DATA:
   712  000002                     putch@data:
   713                           	callstack 0
   714  000002                     putcm@data:
   715                           	callstack 0
   716                           
   717                           ; 1 bytes @ 0x1
   718  000002                     	ds	1
   719  000003                     ??_isupper:
   720  000003                     ??_isdigit:
   721  000003                     ??_isspace:
   722  000003                     ??_Read_ADC:
   723  000003                     ??_Read_ADC1:
   724  000003                     Get_DATA@data:
   725                           	callstack 0
   726  000003                     putch@Activa:
   727                           	callstack 0
   728  000003                     putcm@Activa:
   729                           	callstack 0
   730  000003                     Alarma_LED@A:
   731                           	callstack 0
   732  000003                     ___wmul@multiplicand:
   733                           	callstack 0
   734  000003                     ___awmod@divisor:
   735                           	callstack 0
   736  000003                     strcpy@src:
   737                           	callstack 0
   738  000003                     strlen@a:
   739                           	callstack 0
   740  000003                     strncmp@_r:
   741                           	callstack 0
   742                           
   743                           ; 2 bytes @ 0x2
   744  000003                     	ds	1
   745  000004                     ??_InicializaLCD:
   746  000004                     LCD_COMANDOS@comando:
   747                           	callstack 0
   748  000004                     fputc@c:
   749                           	callstack 0
   750                           
   751                           ; 2 bytes @ 0x3
   752  000004                     	ds	1
   753  000005                     ??_ceilf:
   754  000005                     ??___fpclassifyf:
   755  000005                     ??_strcpy:
   756  000005                     ??___fltol:
   757  000005                     Read_ADC@canal:
   758                           	callstack 0
   759  000005                     Read_ADC1@canal:
   760                           	callstack 0
   761  000005                     ___awmod@counter:
   762                           	callstack 0
   763  000005                     ___wmul@product:
   764                           	callstack 0
   765  000005                     strncmp@n:
   766                           	callstack 0
   767  000005                     ___fleq@ff2:
   768                           	callstack 0
   769  000005                     ___fladd@a:
   770                           	callstack 0
   771  000005                     ___fldiv@a:
   772                           	callstack 0
   773                           
   774                           ; 4 bytes @ 0x4
   775  000005                     	ds	1
   776  000006                     ?___awdiv:
   777                           	callstack 0
   778  000006                     ___awmod@sign:
   779                           	callstack 0
   780  000006                     ___awdiv@dividend:
   781                           	callstack 0
   782  000006                     fputc@fp:
   783                           	callstack 0
   784                           
   785                           ; 2 bytes @ 0x5
   786  000006                     	ds	1
   787  000007                     ??_strncmp:
   788  000007                     ?_tolower:
   789                           	callstack 0
   790  000007                     _isspace$1364:
   791                           	callstack 0
   792  000007                     strcpy@s:
   793                           	callstack 0
   794  000007                     tolower@c:
   795                           	callstack 0
   796                           
   797                           ; 2 bytes @ 0x6
   798  000007                     	ds	1
   799  000008                     ??_fputc:
   800  000008                     ?_atoi:
   801                           	callstack 0
   802  000008                     ___awdiv@divisor:
   803                           	callstack 0
   804  000008                     atoi@s:
   805                           	callstack 0
   806  000008                     strncmp@l:
   807                           	callstack 0
   808                           
   809                           ; 2 bytes @ 0x7
   810  000008                     	ds	1
   811  000009                     ??___fladd:
   812  000009                     ??___fldiv:
   813  000009                     ??_tolower:
   814  000009                     ??___fleq:
   815  000009                     ___fltol@sign1:
   816                           	callstack 0
   817  000009                     ___fpclassifyf@e:
   818                           	callstack 0
   819  000009                     strcpy@d:
   820                           	callstack 0
   821  000009                     ___aodiv@divisor:
   822                           	callstack 0
   823  000009                     ___aomod@divisor:
   824                           	callstack 0
   825                           
   826                           ; 8 bytes @ 0x8
   827  000009                     	ds	1
   828  00000A                     ??_atoi:
   829  00000A                     ___awdiv@counter:
   830                           	callstack 0
   831  00000A                     ___fltol@exp1:
   832                           	callstack 0
   833  00000A                     strncmp@r:
   834                           	callstack 0
   835                           
   836                           ; 2 bytes @ 0x9
   837  00000A                     	ds	1
   838  00000B                     ?___xxtofl:
   839                           	callstack 0
   840  00000B                     ___awdiv@sign:
   841                           	callstack 0
   842  00000B                     ___xxtofl@val:
   843                           	callstack 0
   844  00000B                     ceilf@m:
   845                           	callstack 0
   846  00000B                     ___fpclassifyf@u:
   847                           	callstack 0
   848                           
   849                           ; 4 bytes @ 0xA
   850  00000B                     	ds	1
   851  00000C                     ___awdiv@quotient:
   852                           	callstack 0
   853                           
   854                           ; 2 bytes @ 0xB
   855  00000C                     	ds	1
   856  00000D                     ?_ctoa:
   857                           	callstack 0
   858  00000D                     ___fladd@signs:
   859                           	callstack 0
   860  00000D                     ctoa@fp:
   861                           	callstack 0
   862  00000D                     fputs@s:
   863                           	callstack 0
   864  00000D                     _tolower$1433:
   865                           	callstack 0
   866  00000D                     ___fldiv@rem:
   867                           	callstack 0
   868                           
   869                           ; 4 bytes @ 0xC
   870  00000D                     	ds	1
   871  00000E                     ___fladd@aexp:
   872                           	callstack 0
   873  00000E                     atoi@neg:
   874                           	callstack 0
   875                           
   876                           ; 2 bytes @ 0xD
   877  00000E                     	ds	1
   878  00000F                     ??___xxtofl:
   879  00000F                     ___fladd@bexp:
   880                           	callstack 0
   881  00000F                     ctoa@c:
   882                           	callstack 0
   883  00000F                     ceilf@e:
   884                           	callstack 0
   885  00000F                     fputs@fp:
   886                           	callstack 0
   887                           
   888                           ; 2 bytes @ 0xE
   889  00000F                     	ds	1
   890  000010                     ??_ctoa:
   891  000010                     ___fladd@grs:
   892                           	callstack 0
   893  000010                     _atoi$1346:
   894                           	callstack 0
   895                           
   896                           ; 2 bytes @ 0xF
   897  000010                     	ds	1
   898  000011                     ___aodiv@counter:
   899                           	callstack 0
   900  000011                     ___aomod@counter:
   901                           	callstack 0
   902  000011                     ___fldiv@sign:
   903                           	callstack 0
   904  000011                     fputs@c:
   905                           	callstack 0
   906  000011                     ctoa@l:
   907                           	callstack 0
   908  000011                     ceilf@u:
   909                           	callstack 0
   910                           
   911                           ; 4 bytes @ 0x10
   912  000011                     	ds	1
   913  000012                     ___aodiv@sign:
   914                           	callstack 0
   915  000012                     ___aomod@sign:
   916                           	callstack 0
   917  000012                     ___fldiv@new_exp:
   918                           	callstack 0
   919  000012                     _atoi$1348:
   920                           	callstack 0
   921  000012                     fputs@i:
   922                           	callstack 0
   923                           
   924                           ; 2 bytes @ 0x11
   925  000012                     	ds	1
   926  000013                     ?_abs:
   927                           	callstack 0
   928  000013                     ___xxtofl@sign:
   929                           	callstack 0
   930  000013                     ctoa@w:
   931                           	callstack 0
   932  000013                     abs@a:
   933                           	callstack 0
   934  000013                     ___aodiv@quotient:
   935                           	callstack 0
   936                           
   937                           ; 8 bytes @ 0x12
   938  000013                     	ds	1
   939  000014                     ?_pad:
   940                           	callstack 0
   941  000014                     ___xxtofl@exp:
   942                           	callstack 0
   943  000014                     _atoi$1347:
   944                           	callstack 0
   945  000014                     pad@fp:
   946                           	callstack 0
   947  000014                     ___fldiv@grs:
   948                           	callstack 0
   949                           
   950                           ; 4 bytes @ 0x13
   951  000014                     	ds	1
   952  000015                     ??_abs:
   953  000015                     atoi@n:
   954                           	callstack 0
   955  000015                     ___xxtofl@arg:
   956                           	callstack 0
   957                           
   958                           ; 4 bytes @ 0x14
   959  000015                     	ds	1
   960  000016                     pad@buf:
   961                           	callstack 0
   962                           
   963                           ; 2 bytes @ 0x15
   964  000016                     	ds	2
   965  000018                     ___fldiv@bexp:
   966                           	callstack 0
   967  000018                     pad@p:
   968                           	callstack 0
   969                           
   970                           ; 2 bytes @ 0x17
   971  000018                     	ds	1
   972  000019                     ?___flmul:
   973                           	callstack 0
   974  000019                     ___fldiv@aexp:
   975                           	callstack 0
   976  000019                     ___flmul@b:
   977                           	callstack 0
   978                           
   979                           ; 4 bytes @ 0x18
   980  000019                     	ds	1
   981  00001A                     ??_pad:
   982  00001A                     ?_floorf:
   983                           	callstack 0
   984  00001A                     floorf@x:
   985                           	callstack 0
   986                           
   987                           ; 4 bytes @ 0x19
   988  00001A                     	ds	1
   989  00001B                     pad@i:
   990                           	callstack 0
   991                           
   992                           ; 2 bytes @ 0x1A
   993  00001B                     	ds	2
   994  00001D                     pad@w:
   995                           	callstack 0
   996  00001D                     ___flmul@a:
   997                           	callstack 0
   998                           
   999                           ; 4 bytes @ 0x1C
  1000  00001D                     	ds	1
  1001  00001E                     ??_floorf:
  1002                           
  1003                           ; 1 bytes @ 0x1D
  1004  00001E                     	ds	1
  1005  00001F                     ?_dtoa:
  1006                           	callstack 0
  1007  00001F                     dtoa@fp:
  1008                           	callstack 0
  1009                           
  1010                           ; 2 bytes @ 0x1E
  1011  00001F                     	ds	2
  1012  000021                     ??___flmul:
  1013  000021                     dtoa@d:
  1014                           	callstack 0
  1015                           
  1016                           ; 8 bytes @ 0x20
  1017  000021                     	ds	3
  1018  000024                     floorf@m:
  1019                           	callstack 0
  1020                           
  1021                           ; 4 bytes @ 0x23
  1022  000024                     	ds	1
  1023  000025                     ___flmul@sign:
  1024                           	callstack 0
  1025                           
  1026                           ; 1 bytes @ 0x24
  1027  000025                     	ds	1
  1028  000026                     ___flmul@grs:
  1029                           	callstack 0
  1030                           
  1031                           ; 4 bytes @ 0x25
  1032  000026                     	ds	2
  1033  000028                     floorf@e:
  1034                           	callstack 0
  1035                           
  1036                           ; 2 bytes @ 0x27
  1037  000028                     	ds	1
  1038  000029                     ??_dtoa:
  1039                           
  1040                           ; 1 bytes @ 0x28
  1041  000029                     	ds	1
  1042  00002A                     ___flmul@aexp:
  1043                           	callstack 0
  1044  00002A                     floorf@u:
  1045                           	callstack 0
  1046                           
  1047                           ; 4 bytes @ 0x29
  1048  00002A                     	ds	1
  1049  00002B                     ___flmul@bexp:
  1050                           	callstack 0
  1051                           
  1052                           ; 1 bytes @ 0x2A
  1053  00002B                     	ds	1
  1054  00002C                     ___flmul@prod:
  1055                           	callstack 0
  1056                           
  1057                           ; 4 bytes @ 0x2B
  1058  00002C                     	ds	4
  1059  000030                     ___flmul@temp:
  1060                           	callstack 0
  1061                           
  1062                           ; 2 bytes @ 0x2F
  1063  000030                     	ds	1
  1064  000031                     _dtoa$1253:
  1065                           	callstack 0
  1066                           
  1067                           ; 2 bytes @ 0x30
  1068  000031                     	ds	1
  1069  000032                     ?___flsub:
  1070                           	callstack 0
  1071  000032                     ___flsub@b:
  1072                           	callstack 0
  1073                           
  1074                           ; 4 bytes @ 0x31
  1075  000032                     	ds	1
  1076  000033                     dtoa@p:
  1077                           	callstack 0
  1078                           
  1079                           ; 2 bytes @ 0x32
  1080  000033                     	ds	2
  1081  000035                     dtoa@w:
  1082                           	callstack 0
  1083                           
  1084                           ; 2 bytes @ 0x34
  1085  000035                     	ds	1
  1086  000036                     ___flsub@a:
  1087                           	callstack 0
  1088                           
  1089                           ; 4 bytes @ 0x35
  1090  000036                     	ds	1
  1091  000037                     dtoa@s:
  1092                           	callstack 0
  1093                           
  1094                           ; 2 bytes @ 0x36
  1095  000037                     	ds	2
  1096  000039                     dtoa@n:
  1097                           	callstack 0
  1098                           
  1099                           ; 8 bytes @ 0x38
  1100  000039                     	ds	1
  1101  00003A                     ___flge@ff1:
  1102                           	callstack 0
  1103                           
  1104                           ; 4 bytes @ 0x39
  1105  00003A                     	ds	4
  1106  00003E                     ___flge@ff2:
  1107                           	callstack 0
  1108                           
  1109                           ; 4 bytes @ 0x3D
  1110  00003E                     	ds	3
  1111  000041                     dtoa@i:
  1112                           	callstack 0
  1113                           
  1114                           ; 2 bytes @ 0x40
  1115  000041                     	ds	1
  1116  000042                     ??___flge:
  1117                           
  1118                           ; 1 bytes @ 0x41
  1119  000042                     	ds	4
  1120  000046                     ?_efgtoa:
  1121                           	callstack 0
  1122  000046                     efgtoa@fp:
  1123                           	callstack 0
  1124                           
  1125                           ; 2 bytes @ 0x45
  1126  000046                     	ds	2
  1127  000048                     efgtoa@f:
  1128                           	callstack 0
  1129                           
  1130                           ; 4 bytes @ 0x47
  1131  000048                     	ds	4
  1132  00004C                     efgtoa@c:
  1133                           	callstack 0
  1134                           
  1135                           ; 1 bytes @ 0x4B
  1136  00004C                     	ds	1
  1137  00004D                     ??_efgtoa:
  1138                           
  1139                           ; 1 bytes @ 0x4C
  1140  00004D                     	ds	5
  1141  000052                     ?_vfpfcnvrt:
  1142                           	callstack 0
  1143  000052                     vfpfcnvrt@fp:
  1144                           	callstack 0
  1145                           
  1146                           ; 2 bytes @ 0x51
  1147  000052                     	ds	2
  1148  000054                     vfpfcnvrt@fmt:
  1149                           	callstack 0
  1150                           
  1151                           ; 2 bytes @ 0x53
  1152  000054                     	ds	2
  1153  000056                     vfpfcnvrt@ap:
  1154                           	callstack 0
  1155                           
  1156                           ; 2 bytes @ 0x55
  1157  000056                     	ds	2
  1158  000058                     ??_vfpfcnvrt:
  1159                           
  1160                           ; 1 bytes @ 0x57
  1161  000058                     	ds	4
  1162  00005C                     vfprintf@cfmt:
  1163                           	callstack 0
  1164                           
  1165                           ; 2 bytes @ 0x5B
  1166  00005C                     	ds	2
  1167  00005E                     ??_SensorLM35:
  1168  00005E                     ??_Cronometro:
  1169                           
  1170                           ; 1 bytes @ 0x5D
  1171  00005E                     	ds	2
  1172  000060                     
  1173                           ; 1 bytes @ 0x5F
  1174 ;;
  1175 ;;Main: autosize = 0, tempsize = 0, incstack = 0, save=0
  1176 ;;
  1177 ;; *************** function _main *****************
  1178 ;; Defined at:
  1179 ;;		line 551 in file "SensorNegPosExactos.c"
  1180 ;; Parameters:    Size  Location     Type
  1181 ;;		None
  1182 ;; Auto vars:     Size  Location     Type
  1183 ;;		None
  1184 ;; Return value:  Size  Location     Type
  1185 ;;                  1    wreg      void 
  1186 ;; Registers used:
  1187 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  1188 ;; Tracked objects:
  1189 ;;		On entry : 0/0
  1190 ;;		On exit  : 0/0
  1191 ;;		Unchanged: 0/0
  1192 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  1193 ;;      Params:         0       0       0       0       0       0       0       0       0
  1194 ;;      Locals:         0       0       0       0       0       0       0       0       0
  1195 ;;      Temps:          0       0       0       0       0       0       0       0       0
  1196 ;;      Totals:         0       0       0       0       0       0       0       0       0
  1197 ;;Total ram usage:        0 bytes
  1198 ;; Hardware stack levels required when called:   11
  1199 ;; This function calls:
  1200 ;;		_Alarma
  1201 ;;		_Alarma_LED
  1202 ;;		_Configuracion
  1203 ;;		_InicializaLCD
  1204 ;;		_LCD_COMANDOS
  1205 ;;		_SensorLM35
  1206 ;;		_Timer0Configuration
  1207 ;; This function is called by:
  1208 ;;		Startup code after reset
  1209 ;; This function uses a non-reentrant model
  1210 ;;
  1211                           
  1212                           	psect	text0
  1213  004D5E                     __ptext0:
  1214                           	callstack 0
  1215  004D5E                     _main:
  1216                           	callstack 20
  1217  004D5E                     
  1218                           ;SensorNegPosExactos.c: 553:  Configuracion();
  1219  004D5E  ECFE  F027         	call	_Configuracion	;wreg free
  1220                           
  1221                           ;SensorNegPosExactos.c: 555:     Timer0Configuration();
  1222  004D62  EC35  F028         	call	_Timer0Configuration	;wreg free
  1223  004D66                     
  1224                           ;SensorNegPosExactos.c: 557:     InicializaLCD();
  1225  004D66  ECE3  F024         	call	_InicializaLCD	;wreg free
  1226  004D6A                     
  1227                           ;SensorNegPosExactos.c: 558:     LCD_COMANDOS(1);
  1228  004D6A  0E01               	movlw	1
  1229  004D6C  EC42  F028         	call	_LCD_COMANDOS
  1230  004D70                     
  1231                           ;SensorNegPosExactos.c: 559:     LCD_COMANDOS(12);
  1232  004D70  0E0C               	movlw	12
  1233  004D72  EC42  F028         	call	_LCD_COMANDOS
  1234  004D76                     
  1235                           ;SensorNegPosExactos.c: 562:     horas = 12;
  1236  004D76  0E00               	movlw	0
  1237  004D78  0100               	movlb	0	; () banked
  1238  004D7A  6FF9               	movwf	(_horas+1)& (0+255),b
  1239  004D7C  0E0C               	movlw	12
  1240  004D7E  6FF8               	movwf	_horas& (0+255),b
  1241  004D80                     
  1242                           ; BSR set to: 0
  1243                           ;SensorNegPosExactos.c: 563:  minutos = 59;
  1244  004D80  0E00               	movlw	0
  1245  004D82  6FFB               	movwf	(_minutos+1)& (0+255),b
  1246  004D84  0E3B               	movlw	59
  1247  004D86  6FFA               	movwf	_minutos& (0+255),b
  1248  004D88                     
  1249                           ; BSR set to: 0
  1250                           ;SensorNegPosExactos.c: 564:  segundos = 50;
  1251  004D88  0E00               	movlw	0
  1252  004D8A  6FF7               	movwf	(_segundos+1)& (0+255),b
  1253  004D8C  0E32               	movlw	50
  1254  004D8E  6FF6               	movwf	_segundos& (0+255),b
  1255  004D90                     l5192:
  1256                           
  1257                           ;SensorNegPosExactos.c: 567:  {;SensorNegPosExactos.c: 568:         SensorLM35();
  1258  004D90  EC06  F011         	call	_SensorLM35	;wreg free
  1259  004D94                     
  1260                           ;SensorNegPosExactos.c: 573:         Alarma();
  1261  004D94  EC93  F018         	call	_Alarma	;wreg free
  1262  004D98                     
  1263                           ;SensorNegPosExactos.c: 575:         Alarma_LED();
  1264  004D98  EC66  F020         	call	_Alarma_LED	;wreg free
  1265  004D9C  EFC8  F026         	goto	l5192
  1266  004DA0  EF00  F000         	goto	start
  1267  004DA4                     __end_of_main:
  1268                           	callstack 0
  1269                           
  1270 ;; *************** function _Timer0Configuration *****************
  1271 ;; Defined at:
  1272 ;;		line 392 in file "SensorNegPosExactos.c"
  1273 ;; Parameters:    Size  Location     Type
  1274 ;;		None
  1275 ;; Auto vars:     Size  Location     Type
  1276 ;;		None
  1277 ;; Return value:  Size  Location     Type
  1278 ;;                  1    wreg      void 
  1279 ;; Registers used:
  1280 ;;		wreg, status,2
  1281 ;; Tracked objects:
  1282 ;;		On entry : 0/0
  1283 ;;		On exit  : 0/0
  1284 ;;		Unchanged: 0/0
  1285 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  1286 ;;      Params:         0       0       0       0       0       0       0       0       0
  1287 ;;      Locals:         0       0       0       0       0       0       0       0       0
  1288 ;;      Temps:          0       0       0       0       0       0       0       0       0
  1289 ;;      Totals:         0       0       0       0       0       0       0       0       0
  1290 ;;Total ram usage:        0 bytes
  1291 ;; Hardware stack levels used:    1
  1292 ;; This function calls:
  1293 ;;		Nothing
  1294 ;; This function is called by:
  1295 ;;		_main
  1296 ;; This function uses a non-reentrant model
  1297 ;;
  1298                           
  1299                           	psect	text1
  1300  00506A                     __ptext1:
  1301                           	callstack 0
  1302  00506A                     _Timer0Configuration:
  1303                           	callstack 30
  1304  00506A                     
  1305                           ;SensorNegPosExactos.c: 394:     T0CONbits.T08BIT = 1;
  1306  00506A  8CD5               	bsf	213,6,c	;volatile
  1307                           
  1308                           ;SensorNegPosExactos.c: 395:     T0CONbits.T0CS = 1;
  1309  00506C  8AD5               	bsf	213,5,c	;volatile
  1310                           
  1311                           ;SensorNegPosExactos.c: 396:     T0CONbits.T0SE = 0;
  1312  00506E  98D5               	bcf	213,4,c	;volatile
  1313                           
  1314                           ;SensorNegPosExactos.c: 397:     T0CONbits.PSA = 1;
  1315  005070  86D5               	bsf	213,3,c	;volatile
  1316  005072                     
  1317                           ;SensorNegPosExactos.c: 398:     T0CONbits.T0PS = 0b000;
  1318  005072  0EF8               	movlw	-8
  1319  005074  16D5               	andwf	213,f,c	;volatile
  1320  005076                     
  1321                           ;SensorNegPosExactos.c: 400:     TMR0L = 0xFF;
  1322  005076  68D6               	setf	214,c	;volatile
  1323  005078                     
  1324                           ;SensorNegPosExactos.c: 401:     T0CONbits.TMR0ON = 1;
  1325  005078  8ED5               	bsf	213,7,c	;volatile
  1326  00507A                     
  1327                           ;SensorNegPosExactos.c: 404:     INTCONbits.GIE = 1;
  1328  00507A  8EF2               	bsf	242,7,c	;volatile
  1329  00507C                     
  1330                           ;SensorNegPosExactos.c: 405:     INTCONbits.PEIE = 1;
  1331  00507C  8CF2               	bsf	242,6,c	;volatile
  1332  00507E                     
  1333                           ;SensorNegPosExactos.c: 406:     INTCONbits.TMR0IE = 1;
  1334  00507E  8AF2               	bsf	242,5,c	;volatile
  1335  005080                     
  1336                           ;SensorNegPosExactos.c: 407:     INTCONbits.TMR0IE =0;
  1337  005080  9AF2               	bcf	242,5,c	;volatile
  1338  005082  0012               	return		;funcret
  1339  005084                     __end_of_Timer0Configuration:
  1340                           	callstack 0
  1341                           
  1342 ;; *************** function _SensorLM35 *****************
  1343 ;; Defined at:
  1344 ;;		line 317 in file "SensorNegPosExactos.c"
  1345 ;; Parameters:    Size  Location     Type
  1346 ;;		None
  1347 ;; Auto vars:     Size  Location     Type
  1348 ;;		None
  1349 ;; Return value:  Size  Location     Type
  1350 ;;                  1    wreg      void 
  1351 ;; Registers used:
  1352 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  1353 ;; Tracked objects:
  1354 ;;		On entry : 0/0
  1355 ;;		On exit  : 0/0
  1356 ;;		Unchanged: 0/0
  1357 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  1358 ;;      Params:         0       0       0       0       0       0       0       0       0
  1359 ;;      Locals:         0       4       0       0       0       0       0       0       0
  1360 ;;      Temps:          2       0       0       0       0       0       0       0       0
  1361 ;;      Totals:         2       4       0       0       0       0       0       0       0
  1362 ;;Total ram usage:        6 bytes
  1363 ;; Hardware stack levels used:    1
  1364 ;; Hardware stack levels required when called:    8
  1365 ;; This function calls:
  1366 ;;		_Read_ADC
  1367 ;;		_Read_ADC1
  1368 ;;		___awdiv
  1369 ;;		___flge
  1370 ;;		___flmul
  1371 ;;		___flsub
  1372 ;;		___fltol
  1373 ;;		___xxtofl
  1374 ;;		_ceilf
  1375 ;;		_floorf
  1376 ;;		_printf
  1377 ;;		_putcm
  1378 ;;		_sprintf
  1379 ;; This function is called by:
  1380 ;;		_main
  1381 ;; This function uses a non-reentrant model
  1382 ;;
  1383                           
  1384                           	psect	text2
  1385  00220C                     __ptext2:
  1386                           	callstack 0
  1387  00220C                     _SensorLM35:
  1388                           	callstack 22
  1389  00220C                     
  1390                           ;SensorNegPosExactos.c: 322:     ADC = Read_ADC(0)/64;
  1391  00220C  0E00               	movlw	0
  1392  00220E  EC62  F025         	call	_Read_ADC
  1393  002212  C001  F006         	movff	?_Read_ADC,___awdiv@dividend
  1394  002216  C002  F007         	movff	?_Read_ADC+1,___awdiv@dividend+1
  1395  00221A  0E00               	movlw	0
  1396  00221C  6E09               	movwf	(___awdiv@divisor+1)^0,c
  1397  00221E  0E40               	movlw	64
  1398  002220  6E08               	movwf	___awdiv@divisor^0,c
  1399  002222  EC88  F023         	call	___awdiv	;wreg free
  1400  002226  C006  F0FE         	movff	?___awdiv,_ADC
  1401  00222A  C007  F0FF         	movff	?___awdiv+1,_ADC+1
  1402                           
  1403                           ;SensorNegPosExactos.c: 323:     ADC1 = Read_ADC1(2)/64;
  1404  00222E  0E02               	movlw	2
  1405  002230  EC99  F025         	call	_Read_ADC1
  1406  002234  C001  F006         	movff	?_Read_ADC1,___awdiv@dividend
  1407  002238  C002  F007         	movff	?_Read_ADC1+1,___awdiv@dividend+1
  1408  00223C  0E00               	movlw	0
  1409  00223E  6E09               	movwf	(___awdiv@divisor+1)^0,c
  1410  002240  0E40               	movlw	64
  1411  002242  6E08               	movwf	___awdiv@divisor^0,c
  1412  002244  EC88  F023         	call	___awdiv	;wreg free
  1413  002248  C006  F0FC         	movff	?___awdiv,_ADC1
  1414  00224C  C007  F0FD         	movff	?___awdiv+1,_ADC1+1
  1415  002250                     
  1416                           ;SensorNegPosExactos.c: 325:     R_LM35 = 500.01 / 1024;
  1417  002250  0E48               	movlw	72
  1418  002252  0101               	movlb	1	; () banked
  1419  002254  6F18               	movwf	_R_LM35& (0+255),b
  1420  002256  0E01               	movlw	1
  1421  002258  6F19               	movwf	(_R_LM35+1)& (0+255),b
  1422  00225A  0EFA               	movlw	250
  1423  00225C  6F1A               	movwf	(_R_LM35+2)& (0+255),b
  1424  00225E  0E3E               	movlw	62
  1425  002260  6F1B               	movwf	(_R_LM35+3)& (0+255),b
  1426  002262                     
  1427                           ; BSR set to: 1
  1428                           ;SensorNegPosExactos.c: 330:     VoltajeA = ADC*R_LM35;
  1429  002262  C0FE  F00B         	movff	_ADC,___xxtofl@val
  1430  002266  C0FF  F00C         	movff	_ADC+1,___xxtofl@val+1
  1431  00226A  0E00               	movlw	0
  1432  00226C  BE0C               	btfsc	(___xxtofl@val+1)^0,7,c
  1433  00226E  0EFF               	movlw	-1
  1434  002270  6E0D               	movwf	(___xxtofl@val+2)^0,c
  1435  002272  6E0E               	movwf	(___xxtofl@val+3)^0,c
  1436  002274  0E01               	movlw	1
  1437  002276  ECE9  F01C         	call	___xxtofl
  1438  00227A  C00B  F019         	movff	?___xxtofl,___flmul@b
  1439  00227E  C00C  F01A         	movff	?___xxtofl+1,___flmul@b+1
  1440  002282  C00D  F01B         	movff	?___xxtofl+2,___flmul@b+2
  1441  002286  C00E  F01C         	movff	?___xxtofl+3,___flmul@b+3
  1442  00228A  C118  F01D         	movff	_R_LM35,___flmul@a
  1443  00228E  C119  F01E         	movff	_R_LM35+1,___flmul@a+1
  1444  002292  C11A  F01F         	movff	_R_LM35+2,___flmul@a+2
  1445  002296  C11B  F020         	movff	_R_LM35+3,___flmul@a+3
  1446  00229A  EC3F  F013         	call	___flmul	;wreg free
  1447  00229E  C019  F110         	movff	?___flmul,_VoltajeA
  1448  0022A2  C01A  F111         	movff	?___flmul+1,_VoltajeA+1
  1449  0022A6  C01B  F112         	movff	?___flmul+2,_VoltajeA+2
  1450  0022AA  C01C  F113         	movff	?___flmul+3,_VoltajeA+3
  1451  0022AE                     
  1452                           ;SensorNegPosExactos.c: 331:     VoltajeB = ADC1*R_LM35;
  1453  0022AE  C0FC  F00B         	movff	_ADC1,___xxtofl@val
  1454  0022B2  C0FD  F00C         	movff	_ADC1+1,___xxtofl@val+1
  1455  0022B6  0E00               	movlw	0
  1456  0022B8  BE0C               	btfsc	(___xxtofl@val+1)^0,7,c
  1457  0022BA  0EFF               	movlw	-1
  1458  0022BC  6E0D               	movwf	(___xxtofl@val+2)^0,c
  1459  0022BE  6E0E               	movwf	(___xxtofl@val+3)^0,c
  1460  0022C0  0E01               	movlw	1
  1461  0022C2  ECE9  F01C         	call	___xxtofl
  1462  0022C6  C00B  F019         	movff	?___xxtofl,___flmul@b
  1463  0022CA  C00C  F01A         	movff	?___xxtofl+1,___flmul@b+1
  1464  0022CE  C00D  F01B         	movff	?___xxtofl+2,___flmul@b+2
  1465  0022D2  C00E  F01C         	movff	?___xxtofl+3,___flmul@b+3
  1466  0022D6  C118  F01D         	movff	_R_LM35,___flmul@a
  1467  0022DA  C119  F01E         	movff	_R_LM35+1,___flmul@a+1
  1468  0022DE  C11A  F01F         	movff	_R_LM35+2,___flmul@a+2
  1469  0022E2  C11B  F020         	movff	_R_LM35+3,___flmul@a+3
  1470  0022E6  EC3F  F013         	call	___flmul	;wreg free
  1471  0022EA  C019  F10C         	movff	?___flmul,_VoltajeB
  1472  0022EE  C01A  F10D         	movff	?___flmul+1,_VoltajeB+1
  1473  0022F2  C01B  F10E         	movff	?___flmul+2,_VoltajeB+2
  1474  0022F6  C01C  F10F         	movff	?___flmul+3,_VoltajeB+3
  1475  0022FA                     
  1476                           ;SensorNegPosExactos.c: 332:     temperatura = VoltajeA - VoltajeB;
  1477  0022FA  C110  F032         	movff	_VoltajeA,___flsub@b
  1478  0022FE  C111  F033         	movff	_VoltajeA+1,___flsub@b+1
  1479  002302  C112  F034         	movff	_VoltajeA+2,___flsub@b+2
  1480  002306  C113  F035         	movff	_VoltajeA+3,___flsub@b+3
  1481  00230A  C10C  F036         	movff	_VoltajeB,___flsub@a
  1482  00230E  C10D  F037         	movff	_VoltajeB+1,___flsub@a+1
  1483  002312  C10E  F038         	movff	_VoltajeB+2,___flsub@a+2
  1484  002316  C10F  F039         	movff	_VoltajeB+3,___flsub@a+3
  1485  00231A  ECD2  F026         	call	___flsub	;wreg free
  1486  00231E  C032  F0CE         	movff	?___flsub,_temperatura
  1487  002322  C033  F0CF         	movff	?___flsub+1,_temperatura+1
  1488  002326  C034  F0D0         	movff	?___flsub+2,_temperatura+2
  1489  00232A  C035  F0D1         	movff	?___flsub+3,_temperatura+3
  1490  00232E                     
  1491                           ;SensorNegPosExactos.c: 334:     if(temperatura >= 0)
  1492  00232E  0100               	movlb	0	; () banked
  1493  002330  BFD1               	btfsc	(_temperatura+3)& (0+255),7,b
  1494  002332  EF9D  F011         	goto	u6641
  1495  002336  EF9F  F011         	goto	u6640
  1496  00233A                     u6641:
  1497  00233A  EF4C  F012         	goto	l5034
  1498  00233E                     u6640:
  1499  00233E                     
  1500                           ; BSR set to: 0
  1501                           ;SensorNegPosExactos.c: 335:     {;SensorNegPosExactos.c: 336:         if(temperatura - 
      +                          (int)temperatura >= 0.5)
  1502  00233E  C0CE  F001         	movff	_temperatura,___fltol@f1
  1503  002342  C0CF  F002         	movff	_temperatura+1,___fltol@f1+1
  1504  002346  C0D0  F003         	movff	_temperatura+2,___fltol@f1+2
  1505  00234A  C0D1  F004         	movff	_temperatura+3,___fltol@f1+3
  1506  00234E  ECE3  F01F         	call	___fltol	;wreg free
  1507  002352  C001  F00B         	movff	?___fltol,___xxtofl@val
  1508  002356  C002  F00C         	movff	?___fltol+1,___xxtofl@val+1
  1509  00235A  0E00               	movlw	0
  1510  00235C  BE0C               	btfsc	(___xxtofl@val+1)^0,7,c
  1511  00235E  0EFF               	movlw	-1
  1512  002360  6E0D               	movwf	(___xxtofl@val+2)^0,c
  1513  002362  6E0E               	movwf	(___xxtofl@val+3)^0,c
  1514  002364  0E01               	movlw	1
  1515  002366  ECE9  F01C         	call	___xxtofl
  1516  00236A  C00B  F036         	movff	?___xxtofl,___flsub@a
  1517  00236E  C00C  F037         	movff	?___xxtofl+1,___flsub@a+1
  1518  002372  C00D  F038         	movff	?___xxtofl+2,___flsub@a+2
  1519  002376  C00E  F039         	movff	?___xxtofl+3,___flsub@a+3
  1520  00237A  C0CE  F032         	movff	_temperatura,___flsub@b
  1521  00237E  C0CF  F033         	movff	_temperatura+1,___flsub@b+1
  1522  002382  C0D0  F034         	movff	_temperatura+2,___flsub@b+2
  1523  002386  C0D1  F035         	movff	_temperatura+3,___flsub@b+3
  1524  00238A  ECD2  F026         	call	___flsub	;wreg free
  1525  00238E  C032  F03A         	movff	?___flsub,___flge@ff1
  1526  002392  C033  F03B         	movff	?___flsub+1,___flge@ff1+1
  1527  002396  C034  F03C         	movff	?___flsub+2,___flge@ff1+2
  1528  00239A  C035  F03D         	movff	?___flsub+3,___flge@ff1+3
  1529  00239E  0E00               	movlw	0
  1530  0023A0  6E3E               	movwf	___flge@ff2^0,c
  1531  0023A2  0E00               	movlw	0
  1532  0023A4  6E3F               	movwf	(___flge@ff2+1)^0,c
  1533  0023A6  0E00               	movlw	0
  1534  0023A8  6E40               	movwf	(___flge@ff2+2)^0,c
  1535  0023AA  0E3F               	movlw	63
  1536  0023AC  6E41               	movwf	(___flge@ff2+3)^0,c
  1537  0023AE  ECE8  F020         	call	___flge	;wreg free
  1538  0023B2  A0D8               	btfss	status,0,c
  1539  0023B4  EFDE  F011         	goto	u6651
  1540  0023B8  EFE0  F011         	goto	u6650
  1541  0023BC                     u6651:
  1542  0023BC  EF1E  F012         	goto	l5024
  1543  0023C0                     u6650:
  1544  0023C0                     
  1545                           ;SensorNegPosExactos.c: 337:         {;SensorNegPosExactos.c: 338:             putcm(0x8
      +                          0);
  1546  0023C0  0E80               	movlw	128
  1547  0023C2  EC3A  F027         	call	_putcm
  1548  0023C6                     
  1549                           ;SensorNegPosExactos.c: 339:             sprintf(Valores, "Temp. =%3.2f %cC",ceilf(tempe
      +                          ratura), 0xDF);
  1550  0023C6  0E70               	movlw	low _Valores
  1551  0023C8  0100               	movlb	0	; () banked
  1552  0023CA  6FB6               	movwf	sprintf@s& (0+255),b
  1553  0023CC  0E01               	movlw	high _Valores
  1554  0023CE  6FB7               	movwf	(sprintf@s+1)& (0+255),b
  1555  0023D0  0E38               	movlw	low STR_1
  1556  0023D2  6FB8               	movwf	sprintf@fmt& (0+255),b
  1557  0023D4  0E08               	movlw	high STR_1
  1558  0023D6  6FB9               	movwf	(sprintf@fmt+1)& (0+255),b
  1559  0023D8  C0CE  F001         	movff	_temperatura,ceilf@x
  1560  0023DC  C0CF  F002         	movff	_temperatura+1,ceilf@x+1
  1561  0023E0  C0D0  F003         	movff	_temperatura+2,ceilf@x+2
  1562  0023E4  C0D1  F004         	movff	_temperatura+3,ceilf@x+3
  1563  0023E8  ECDB  F019         	call	_ceilf	;wreg free
  1564  0023EC  C001  F0BA         	movff	?_ceilf,?_sprintf+4
  1565  0023F0  C002  F0BB         	movff	?_ceilf+1,?_sprintf+5
  1566  0023F4  C003  F0BC         	movff	?_ceilf+2,?_sprintf+6
  1567  0023F8  C004  F0BD         	movff	?_ceilf+3,?_sprintf+7
  1568  0023FC  0E00               	movlw	0
  1569  0023FE  0100               	movlb	0	; () banked
  1570  002400  6FBF               	movwf	(?_sprintf+9)& (0+255),b
  1571  002402  0EDF               	movlw	223
  1572  002404  6FBE               	movwf	(?_sprintf+8)& (0+255),b
  1573  002406  EC5D  F026         	call	_sprintf	;wreg free
  1574  00240A                     l5018:
  1575                           
  1576                           ;SensorNegPosExactos.c: 340:             _delay((unsigned long)((10)*(8000000/4000.0)));
  1577  00240A  0E1A               	movlw	26
  1578  00240C  6E5E               	movwf	??_SensorLM35^0,c
  1579  00240E  0EF8               	movlw	248
  1580  002410                     u6837:
  1581  002410  2EE8               	decfsz	wreg,f,c
  1582  002412  D7FE               	bra	u6837
  1583  002414  2E5E               	decfsz	??_SensorLM35^0,f,c
  1584  002416  D7FC               	bra	u6837
  1585  002418  D000               	nop2	
  1586  00241A                     
  1587                           ;SensorNegPosExactos.c: 341:             printf(Valores);
  1588  00241A  0E70               	movlw	low _Valores
  1589  00241C  0100               	movlb	0	; () banked
  1590  00241E  6FB6               	movwf	printf@fmt& (0+255),b
  1591  002420  0E01               	movlw	high _Valores
  1592  002422  6FB7               	movwf	(printf@fmt+1)& (0+255),b
  1593  002424  ECEA  F027         	call	_printf	;wreg free
  1594  002428                     
  1595                           ;SensorNegPosExactos.c: 342:             _delay((unsigned long)((10)*(8000000/4000.0)));
  1596  002428  0E1A               	movlw	26
  1597  00242A  6E5E               	movwf	??_SensorLM35^0,c
  1598  00242C  0EF8               	movlw	248
  1599  00242E                     u6847:
  1600  00242E  2EE8               	decfsz	wreg,f,c
  1601  002430  D7FE               	bra	u6847
  1602  002432  2E5E               	decfsz	??_SensorLM35^0,f,c
  1603  002434  D7FC               	bra	u6847
  1604  002436  D000               	nop2	
  1605                           
  1606                           ;SensorNegPosExactos.c: 343:         }
  1607  002438  EFE2  F012         	goto	l157
  1608  00243C                     l5024:
  1609                           
  1610                           ;SensorNegPosExactos.c: 345:         {;SensorNegPosExactos.c: 346:             putcm(0x8
      +                          0);
  1611  00243C  0E80               	movlw	128
  1612  00243E  EC3A  F027         	call	_putcm
  1613                           
  1614                           ;SensorNegPosExactos.c: 347:             sprintf(Valores, "Temp. =%3.2f %cC",floorf(temp
      +                          eratura), 0xDF);
  1615  002442  C0CE  F01A         	movff	_temperatura,floorf@x
  1616  002446  C0CF  F01B         	movff	_temperatura+1,floorf@x+1
  1617  00244A  C0D0  F01C         	movff	_temperatura+2,floorf@x+2
  1618  00244E  C0D1  F01D         	movff	_temperatura+3,floorf@x+3
  1619  002452  ECE4  F01A         	call	_floorf	;wreg free
  1620  002456  C01A  F0CA         	movff	?_floorf,_SensorLM35$1658
  1621  00245A  C01B  F0CB         	movff	?_floorf+1,_SensorLM35$1658+1
  1622  00245E  C01C  F0CC         	movff	?_floorf+2,_SensorLM35$1658+2
  1623  002462  C01D  F0CD         	movff	?_floorf+3,_SensorLM35$1658+3
  1624  002466                     
  1625                           ;SensorNegPosExactos.c: 347:             sprintf(Valores, "Temp. =%3.2f %cC",floorf(temp
      +                          eratura), 0xDF);
  1626  002466  0E70               	movlw	low _Valores
  1627  002468  0100               	movlb	0	; () banked
  1628  00246A  6FB6               	movwf	sprintf@s& (0+255),b
  1629  00246C  0E01               	movlw	high _Valores
  1630  00246E  6FB7               	movwf	(sprintf@s+1)& (0+255),b
  1631  002470  0E38               	movlw	low STR_1
  1632  002472  6FB8               	movwf	sprintf@fmt& (0+255),b
  1633  002474  0E08               	movlw	high STR_1
  1634  002476  6FB9               	movwf	(sprintf@fmt+1)& (0+255),b
  1635  002478  C0CA  F0BA         	movff	_SensorLM35$1658,?_sprintf+4
  1636  00247C  C0CB  F0BB         	movff	_SensorLM35$1658+1,?_sprintf+5
  1637  002480  C0CC  F0BC         	movff	_SensorLM35$1658+2,?_sprintf+6
  1638  002484  C0CD  F0BD         	movff	_SensorLM35$1658+3,?_sprintf+7
  1639  002488  0E00               	movlw	0
  1640  00248A  6FBF               	movwf	(?_sprintf+9)& (0+255),b
  1641  00248C  0EDF               	movlw	223
  1642  00248E  6FBE               	movwf	(?_sprintf+8)& (0+255),b
  1643  002490  EC5D  F026         	call	_sprintf	;wreg free
  1644  002494  EF05  F012         	goto	l5018
  1645  002498                     l5034:
  1646                           
  1647                           ; BSR set to: 0
  1648                           ;SensorNegPosExactos.c: 354:     {;SensorNegPosExactos.c: 355:         if(temperatura - 
      +                          (int)temperatura >= -0.5)
  1649  002498  C0CE  F001         	movff	_temperatura,___fltol@f1
  1650  00249C  C0CF  F002         	movff	_temperatura+1,___fltol@f1+1
  1651  0024A0  C0D0  F003         	movff	_temperatura+2,___fltol@f1+2
  1652  0024A4  C0D1  F004         	movff	_temperatura+3,___fltol@f1+3
  1653  0024A8  ECE3  F01F         	call	___fltol	;wreg free
  1654  0024AC  C001  F00B         	movff	?___fltol,___xxtofl@val
  1655  0024B0  C002  F00C         	movff	?___fltol+1,___xxtofl@val+1
  1656  0024B4  0E00               	movlw	0
  1657  0024B6  BE0C               	btfsc	(___xxtofl@val+1)^0,7,c
  1658  0024B8  0EFF               	movlw	-1
  1659  0024BA  6E0D               	movwf	(___xxtofl@val+2)^0,c
  1660  0024BC  6E0E               	movwf	(___xxtofl@val+3)^0,c
  1661  0024BE  0E01               	movlw	1
  1662  0024C0  ECE9  F01C         	call	___xxtofl
  1663  0024C4  C00B  F036         	movff	?___xxtofl,___flsub@a
  1664  0024C8  C00C  F037         	movff	?___xxtofl+1,___flsub@a+1
  1665  0024CC  C00D  F038         	movff	?___xxtofl+2,___flsub@a+2
  1666  0024D0  C00E  F039         	movff	?___xxtofl+3,___flsub@a+3
  1667  0024D4  C0CE  F032         	movff	_temperatura,___flsub@b
  1668  0024D8  C0CF  F033         	movff	_temperatura+1,___flsub@b+1
  1669  0024DC  C0D0  F034         	movff	_temperatura+2,___flsub@b+2
  1670  0024E0  C0D1  F035         	movff	_temperatura+3,___flsub@b+3
  1671  0024E4  ECD2  F026         	call	___flsub	;wreg free
  1672  0024E8  C032  F03A         	movff	?___flsub,___flge@ff1
  1673  0024EC  C033  F03B         	movff	?___flsub+1,___flge@ff1+1
  1674  0024F0  C034  F03C         	movff	?___flsub+2,___flge@ff1+2
  1675  0024F4  C035  F03D         	movff	?___flsub+3,___flge@ff1+3
  1676  0024F8  0E00               	movlw	0
  1677  0024FA  6E3E               	movwf	___flge@ff2^0,c
  1678  0024FC  0E00               	movlw	0
  1679  0024FE  6E3F               	movwf	(___flge@ff2+1)^0,c
  1680  002500  0E00               	movlw	0
  1681  002502  6E40               	movwf	(___flge@ff2+2)^0,c
  1682  002504  0EBF               	movlw	191
  1683  002506  6E41               	movwf	(___flge@ff2+3)^0,c
  1684  002508  ECE8  F020         	call	___flge	;wreg free
  1685  00250C  A0D8               	btfss	status,0,c
  1686  00250E  EF8B  F012         	goto	u6661
  1687  002512  EF8D  F012         	goto	u6660
  1688  002516                     u6661:
  1689  002516  EFB4  F012         	goto	l5046
  1690  00251A                     u6660:
  1691  00251A                     
  1692                           ;SensorNegPosExactos.c: 356:         {;SensorNegPosExactos.c: 357:             putcm(0x8
      +                          0);
  1693  00251A  0E80               	movlw	128
  1694  00251C  EC3A  F027         	call	_putcm
  1695  002520                     
  1696                           ;SensorNegPosExactos.c: 358:             sprintf(Valores, "Temp. =%3.2f %cC",ceilf(tempe
      +                          ratura), 0xDF);
  1697  002520  0E70               	movlw	low _Valores
  1698  002522  0100               	movlb	0	; () banked
  1699  002524  6FB6               	movwf	sprintf@s& (0+255),b
  1700  002526  0E01               	movlw	high _Valores
  1701  002528  6FB7               	movwf	(sprintf@s+1)& (0+255),b
  1702  00252A  0E38               	movlw	low STR_1
  1703  00252C  6FB8               	movwf	sprintf@fmt& (0+255),b
  1704  00252E  0E08               	movlw	high STR_1
  1705  002530  6FB9               	movwf	(sprintf@fmt+1)& (0+255),b
  1706  002532  C0CE  F001         	movff	_temperatura,ceilf@x
  1707  002536  C0CF  F002         	movff	_temperatura+1,ceilf@x+1
  1708  00253A  C0D0  F003         	movff	_temperatura+2,ceilf@x+2
  1709  00253E  C0D1  F004         	movff	_temperatura+3,ceilf@x+3
  1710  002542  ECDB  F019         	call	_ceilf	;wreg free
  1711  002546  C001  F0BA         	movff	?_ceilf,?_sprintf+4
  1712  00254A  C002  F0BB         	movff	?_ceilf+1,?_sprintf+5
  1713  00254E  C003  F0BC         	movff	?_ceilf+2,?_sprintf+6
  1714  002552  C004  F0BD         	movff	?_ceilf+3,?_sprintf+7
  1715  002556  0E00               	movlw	0
  1716  002558  0100               	movlb	0	; () banked
  1717  00255A  6FBF               	movwf	(?_sprintf+9)& (0+255),b
  1718  00255C  0EDF               	movlw	223
  1719  00255E  6FBE               	movwf	(?_sprintf+8)& (0+255),b
  1720  002560  EC5D  F026         	call	_sprintf	;wreg free
  1721  002564  EF05  F012         	goto	l5018
  1722  002568                     l5046:
  1723                           
  1724                           ;SensorNegPosExactos.c: 364:         {;SensorNegPosExactos.c: 365:             putcm(0x8
      +                          0);
  1725  002568  0E80               	movlw	128
  1726  00256A  EC3A  F027         	call	_putcm
  1727                           
  1728                           ;SensorNegPosExactos.c: 366:             sprintf(Valores, "Temp. =%3.2f %cC",floorf(temp
      +                          eratura), 0xDF);
  1729  00256E  C0CE  F01A         	movff	_temperatura,floorf@x
  1730  002572  C0CF  F01B         	movff	_temperatura+1,floorf@x+1
  1731  002576  C0D0  F01C         	movff	_temperatura+2,floorf@x+2
  1732  00257A  C0D1  F01D         	movff	_temperatura+3,floorf@x+3
  1733  00257E  ECE4  F01A         	call	_floorf	;wreg free
  1734  002582  C01A  F0CA         	movff	?_floorf,_SensorLM35$1658
  1735  002586  C01B  F0CB         	movff	?_floorf+1,_SensorLM35$1658+1
  1736  00258A  C01C  F0CC         	movff	?_floorf+2,_SensorLM35$1658+2
  1737  00258E  C01D  F0CD         	movff	?_floorf+3,_SensorLM35$1658+3
  1738  002592                     
  1739                           ;SensorNegPosExactos.c: 366:             sprintf(Valores, "Temp. =%3.2f %cC",floorf(temp
      +                          eratura), 0xDF);
  1740  002592  0E70               	movlw	low _Valores
  1741  002594  0100               	movlb	0	; () banked
  1742  002596  6FB6               	movwf	sprintf@s& (0+255),b
  1743  002598  0E01               	movlw	high _Valores
  1744  00259A  6FB7               	movwf	(sprintf@s+1)& (0+255),b
  1745  00259C  0E38               	movlw	low STR_1
  1746  00259E  6FB8               	movwf	sprintf@fmt& (0+255),b
  1747  0025A0  0E08               	movlw	high STR_1
  1748  0025A2  6FB9               	movwf	(sprintf@fmt+1)& (0+255),b
  1749  0025A4  C0CA  F0BA         	movff	_SensorLM35$1658,?_sprintf+4
  1750  0025A8  C0CB  F0BB         	movff	_SensorLM35$1658+1,?_sprintf+5
  1751  0025AC  C0CC  F0BC         	movff	_SensorLM35$1658+2,?_sprintf+6
  1752  0025B0  C0CD  F0BD         	movff	_SensorLM35$1658+3,?_sprintf+7
  1753  0025B4  0E00               	movlw	0
  1754  0025B6  6FBF               	movwf	(?_sprintf+9)& (0+255),b
  1755  0025B8  0EDF               	movlw	223
  1756  0025BA  6FBE               	movwf	(?_sprintf+8)& (0+255),b
  1757  0025BC  EC5D  F026         	call	_sprintf	;wreg free
  1758  0025C0  EF05  F012         	goto	l5018
  1759  0025C4                     l157:
  1760                           
  1761                           ;SensorNegPosExactos.c: 374:     if(temperatura >= 150)
  1762  0025C4  C0CE  F03A         	movff	_temperatura,___flge@ff1
  1763  0025C8  C0CF  F03B         	movff	_temperatura+1,___flge@ff1+1
  1764  0025CC  C0D0  F03C         	movff	_temperatura+2,___flge@ff1+2
  1765  0025D0  C0D1  F03D         	movff	_temperatura+3,___flge@ff1+3
  1766  0025D4  0E00               	movlw	0
  1767  0025D6  6E3E               	movwf	___flge@ff2^0,c
  1768  0025D8  0E00               	movlw	0
  1769  0025DA  6E3F               	movwf	(___flge@ff2+1)^0,c
  1770  0025DC  0E16               	movlw	22
  1771  0025DE  6E40               	movwf	(___flge@ff2+2)^0,c
  1772  0025E0  0E43               	movlw	67
  1773  0025E2  6E41               	movwf	(___flge@ff2+3)^0,c
  1774  0025E4  ECE8  F020         	call	___flge	;wreg free
  1775  0025E8  A0D8               	btfss	status,0,c
  1776  0025EA  EFF9  F012         	goto	u6671
  1777  0025EE  EFFB  F012         	goto	u6670
  1778  0025F2                     u6671:
  1779  0025F2  EF10  F013         	goto	l5062
  1780  0025F6                     u6670:
  1781  0025F6                     
  1782                           ;SensorNegPosExactos.c: 375:     {;SensorNegPosExactos.c: 376:         putcm(0x80);
  1783  0025F6  0E80               	movlw	128
  1784  0025F8  EC3A  F027         	call	_putcm
  1785  0025FC                     
  1786                           ;SensorNegPosExactos.c: 377:         printf(" Calor Extremo! ");
  1787  0025FC  0E27               	movlw	low STR_5
  1788  0025FE  0100               	movlb	0	; () banked
  1789  002600  6FB6               	movwf	printf@fmt& (0+255),b
  1790  002602  0E08               	movlw	high STR_5
  1791  002604  6FB7               	movwf	(printf@fmt+1)& (0+255),b
  1792  002606  ECEA  F027         	call	_printf	;wreg free
  1793  00260A                     
  1794                           ;SensorNegPosExactos.c: 378:         _delay((unsigned long)((1000)*(8000000/4000.0)));
  1795  00260A  0E0B               	movlw	11
  1796  00260C  6E5F               	movwf	(??_SensorLM35+1)^0,c
  1797  00260E  0E26               	movlw	38
  1798  002610  6E5E               	movwf	??_SensorLM35^0,c
  1799  002612  0E5E               	movlw	94
  1800  002614                     u6857:
  1801  002614  2EE8               	decfsz	wreg,f,c
  1802  002616  D7FE               	bra	u6857
  1803  002618  2E5E               	decfsz	??_SensorLM35^0,f,c
  1804  00261A  D7FC               	bra	u6857
  1805  00261C  2E5F               	decfsz	(??_SensorLM35+1)^0,f,c
  1806  00261E  D7FA               	bra	u6857
  1807  002620                     l5062:
  1808                           
  1809                           ;SensorNegPosExactos.c: 380:     if(temperatura <= -54)
  1810  002620  0E00               	movlw	0
  1811  002622  6E3A               	movwf	___flge@ff1^0,c
  1812  002624  0E00               	movlw	0
  1813  002626  6E3B               	movwf	(___flge@ff1+1)^0,c
  1814  002628  0E58               	movlw	88
  1815  00262A  6E3C               	movwf	(___flge@ff1+2)^0,c
  1816  00262C  0EC2               	movlw	194
  1817  00262E  6E3D               	movwf	(___flge@ff1+3)^0,c
  1818  002630  C0CE  F03E         	movff	_temperatura,___flge@ff2
  1819  002634  C0CF  F03F         	movff	_temperatura+1,___flge@ff2+1
  1820  002638  C0D0  F040         	movff	_temperatura+2,___flge@ff2+2
  1821  00263C  C0D1  F041         	movff	_temperatura+3,___flge@ff2+3
  1822  002640  ECE8  F020         	call	___flge	;wreg free
  1823  002644  A0D8               	btfss	status,0,c
  1824  002646  EF27  F013         	goto	u6681
  1825  00264A  EF29  F013         	goto	u6680
  1826  00264E                     u6681:
  1827  00264E  EF3E  F013         	goto	l162
  1828  002652                     u6680:
  1829  002652                     
  1830                           ;SensorNegPosExactos.c: 381:     {;SensorNegPosExactos.c: 382:         putcm(0x80);
  1831  002652  0E80               	movlw	128
  1832  002654  EC3A  F027         	call	_putcm
  1833  002658                     
  1834                           ;SensorNegPosExactos.c: 383:         printf(" Frio Extremo! ");
  1835  002658  0E49               	movlw	low STR_6
  1836  00265A  0100               	movlb	0	; () banked
  1837  00265C  6FB6               	movwf	printf@fmt& (0+255),b
  1838  00265E  0E08               	movlw	high STR_6
  1839  002660  6FB7               	movwf	(printf@fmt+1)& (0+255),b
  1840  002662  ECEA  F027         	call	_printf	;wreg free
  1841  002666                     
  1842                           ;SensorNegPosExactos.c: 384:         _delay((unsigned long)((1000)*(8000000/4000.0)));
  1843  002666  0E0B               	movlw	11
  1844  002668  6E5F               	movwf	(??_SensorLM35+1)^0,c
  1845  00266A  0E26               	movlw	38
  1846  00266C  6E5E               	movwf	??_SensorLM35^0,c
  1847  00266E  0E5E               	movlw	94
  1848  002670                     u6867:
  1849  002670  2EE8               	decfsz	wreg,f,c
  1850  002672  D7FE               	bra	u6867
  1851  002674  2E5E               	decfsz	??_SensorLM35^0,f,c
  1852  002676  D7FC               	bra	u6867
  1853  002678  2E5F               	decfsz	(??_SensorLM35+1)^0,f,c
  1854  00267A  D7FA               	bra	u6867
  1855  00267C                     l162:
  1856  00267C  0012               	return		;funcret
  1857  00267E                     __end_of_SensorLM35:
  1858                           	callstack 0
  1859                           
  1860 ;; *************** function _sprintf *****************
  1861 ;; Defined at:
  1862 ;;		line 9 in file "/Applications/microchip/xc8/v2.31/pic/sources/c99/common/nf_sprintf.c"
  1863 ;; Parameters:    Size  Location     Type
  1864 ;;  s               2   86[BANK0 ] PTR unsigned char 
  1865 ;;		 -> Valores(16), 
  1866 ;;  fmt             2   88[BANK0 ] PTR const unsigned char 
  1867 ;;		 -> STR_4(17), STR_3(17), STR_2(17), STR_1(17), 
  1868 ;; Auto vars:     Size  Location     Type
  1869 ;;  f               6  100[BANK0 ] struct _IO_FILE
  1870 ;;  ap              2   98[BANK0 ] PTR void [1]
  1871 ;;		 -> ?_printf(2), ?_sprintf(2), 
  1872 ;;  ret             2    0        int 
  1873 ;; Return value:  Size  Location     Type
  1874 ;;                  2   86[BANK0 ] int 
  1875 ;; Registers used:
  1876 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  1877 ;; Tracked objects:
  1878 ;;		On entry : 0/0
  1879 ;;		On exit  : 0/0
  1880 ;;		Unchanged: 0/0
  1881 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  1882 ;;      Params:         0      10       0       0       0       0       0       0       0
  1883 ;;      Locals:         0      10       0       0       0       0       0       0       0
  1884 ;;      Temps:          0       0       0       0       0       0       0       0       0
  1885 ;;      Totals:         0      20       0       0       0       0       0       0       0
  1886 ;;Total ram usage:       20 bytes
  1887 ;; Hardware stack levels used:    1
  1888 ;; Hardware stack levels required when called:    7
  1889 ;; This function calls:
  1890 ;;		_vfprintf
  1891 ;; This function is called by:
  1892 ;;		_SensorLM35
  1893 ;; This function uses a non-reentrant model
  1894 ;;
  1895                           
  1896                           	psect	text3
  1897  004CBA                     __ptext3:
  1898                           	callstack 0
  1899  004CBA                     _sprintf:
  1900                           	callstack 22
  1901  004CBA  0EBA               	movlw	low (?_sprintf+4)
  1902  004CBC  0100               	movlb	0	; () banked
  1903  004CBE  6FC2               	movwf	sprintf@ap& (0+255),b
  1904  004CC0  0E00               	movlw	high (?_sprintf+4)
  1905  004CC2  6FC3               	movwf	(sprintf@ap+1)& (0+255),b
  1906  004CC4  C0B6  F0C4         	movff	sprintf@s,sprintf@f
  1907  004CC8  C0B7  F0C5         	movff	sprintf@s+1,sprintf@f+1
  1908  004CCC                     
  1909                           ; BSR set to: 0
  1910  004CCC  0E00               	movlw	0
  1911  004CCE  6FC7               	movwf	(sprintf@f+3)& (0+255),b
  1912  004CD0  0E00               	movlw	0
  1913  004CD2  6FC6               	movwf	(sprintf@f+2)& (0+255),b
  1914  004CD4                     
  1915                           ; BSR set to: 0
  1916  004CD4  0E00               	movlw	0
  1917  004CD6  6FC9               	movwf	(sprintf@f+5)& (0+255),b
  1918  004CD8  0E00               	movlw	0
  1919  004CDA  6FC8               	movwf	(sprintf@f+4)& (0+255),b
  1920  004CDC                     
  1921                           ; BSR set to: 0
  1922  004CDC  0EC4               	movlw	low sprintf@f
  1923  004CDE  6FB0               	movwf	vfprintf@fp& (0+255),b
  1924  004CE0  0E00               	movlw	high sprintf@f
  1925  004CE2  6FB1               	movwf	(vfprintf@fp+1)& (0+255),b
  1926  004CE4  C0B8  F0B2         	movff	sprintf@fmt,vfprintf@fmt
  1927  004CE8  C0B9  F0B3         	movff	sprintf@fmt+1,vfprintf@fmt+1
  1928  004CEC  0EC2               	movlw	low sprintf@ap
  1929  004CEE  6FB4               	movwf	vfprintf@ap& (0+255),b
  1930  004CF0  0E00               	movlw	high sprintf@ap
  1931  004CF2  6FB5               	movwf	(vfprintf@ap+1)& (0+255),b
  1932  004CF4  EC27  F025         	call	_vfprintf	;wreg free
  1933  004CF8  0100               	movlb	0	; () banked
  1934  004CFA  51C6               	movf	(sprintf@f+2)& (0+255),w,b
  1935  004CFC  25B6               	addwf	sprintf@s& (0+255),w,b
  1936  004CFE  6ED9               	movwf	fsr2l,c
  1937  004D00  51C7               	movf	(sprintf@f+3)& (0+255),w,b
  1938  004D02  21B7               	addwfc	(sprintf@s+1)& (0+255),w,b
  1939  004D04  6EDA               	movwf	fsr2h,c
  1940  004D06  0E00               	movlw	0
  1941  004D08  6EDF               	movwf	indf2,c
  1942  004D0A                     
  1943                           ; BSR set to: 0
  1944  004D0A  0012               	return		;funcret
  1945  004D0C                     __end_of_sprintf:
  1946                           	callstack 0
  1947                           
  1948 ;; *************** function _ceilf *****************
  1949 ;; Defined at:
  1950 ;;		line 3 in file "/Applications/microchip/xc8/v2.31/pic/sources/c99/common/ceilf.c"
  1951 ;; Parameters:    Size  Location     Type
  1952 ;;  x               4    0[COMRAM] float 
  1953 ;; Auto vars:     Size  Location     Type
  1954 ;;  u               4   16[COMRAM] struct .
  1955 ;;  m               4   10[COMRAM] unsigned long 
  1956 ;;  e               2   14[COMRAM] int 
  1957 ;; Return value:  Size  Location     Type
  1958 ;;                  4    0[COMRAM] float 
  1959 ;; Registers used:
  1960 ;;		wreg, status,2, status,0
  1961 ;; Tracked objects:
  1962 ;;		On entry : 0/0
  1963 ;;		On exit  : 0/0
  1964 ;;		Unchanged: 0/0
  1965 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  1966 ;;      Params:         4       0       0       0       0       0       0       0       0
  1967 ;;      Locals:        10       0       0       0       0       0       0       0       0
  1968 ;;      Temps:          6       0       0       0       0       0       0       0       0
  1969 ;;      Totals:        20       0       0       0       0       0       0       0       0
  1970 ;;Total ram usage:       20 bytes
  1971 ;; Hardware stack levels used:    1
  1972 ;; This function calls:
  1973 ;;		Nothing
  1974 ;; This function is called by:
  1975 ;;		_SensorLM35
  1976 ;; This function uses a non-reentrant model
  1977 ;;
  1978                           
  1979                           	psect	text4
  1980  0033B6                     __ptext4:
  1981                           	callstack 0
  1982  0033B6                     _ceilf:
  1983                           	callstack 29
  1984  0033B6  C108  F011         	movff	ceilf@F527,ceilf@u
  1985  0033BA  C109  F012         	movff	ceilf@F527+1,ceilf@u+1
  1986  0033BE  C10A  F013         	movff	ceilf@F527+2,ceilf@u+2
  1987  0033C2  C10B  F014         	movff	ceilf@F527+3,ceilf@u+3
  1988  0033C6  C001  F011         	movff	ceilf@x,ceilf@u
  1989  0033CA  C002  F012         	movff	ceilf@x+1,ceilf@u+1
  1990  0033CE  C003  F013         	movff	ceilf@x+2,ceilf@u+2
  1991  0033D2  C004  F014         	movff	ceilf@x+3,ceilf@u+3
  1992  0033D6  0E81               	movlw	129
  1993  0033D8  6E05               	movwf	??_ceilf^0,c
  1994  0033DA  0EFF               	movlw	255
  1995  0033DC  6E06               	movwf	(??_ceilf+1)^0,c
  1996  0033DE  C011  F007         	movff	ceilf@u,??_ceilf+2
  1997  0033E2  C012  F008         	movff	ceilf@u+1,??_ceilf+3
  1998  0033E6  C013  F009         	movff	ceilf@u+2,??_ceilf+4
  1999  0033EA  C014  F00A         	movff	ceilf@u+3,??_ceilf+5
  2000  0033EE  0E18               	movlw	24
  2001  0033F0  EFFF  F019         	goto	u6410
  2002  0033F4                     u6415:
  2003  0033F4  90D8               	bcf	status,0,c
  2004  0033F6  320A               	rrcf	(??_ceilf+5)^0,f,c
  2005  0033F8  3209               	rrcf	(??_ceilf+4)^0,f,c
  2006  0033FA  3208               	rrcf	(??_ceilf+3)^0,f,c
  2007  0033FC  3207               	rrcf	(??_ceilf+2)^0,f,c
  2008  0033FE                     u6410:
  2009  0033FE  2EE8               	decfsz	wreg,f,c
  2010  003400  EFFA  F019         	goto	u6415
  2011  003404  5007               	movf	(??_ceilf+2)^0,w,c
  2012  003406  2405               	addwf	??_ceilf^0,w,c
  2013  003408  6E0F               	movwf	ceilf@e^0,c
  2014  00340A  0E00               	movlw	0
  2015  00340C  2006               	addwfc	(??_ceilf+1)^0,w,c
  2016  00340E  6E10               	movwf	(ceilf@e+1)^0,c
  2017  003410  BE10               	btfsc	(ceilf@e+1)^0,7,c
  2018  003412  EF14  F01A         	goto	u6421
  2019  003416  5010               	movf	(ceilf@e+1)^0,w,c
  2020  003418  E109               	bnz	u6420
  2021  00341A  0E17               	movlw	23
  2022  00341C  5C0F               	subwf	ceilf@e^0,w,c
  2023  00341E  A0D8               	btfss	status,0,c
  2024  003420  EF14  F01A         	goto	u6421
  2025  003424  EF16  F01A         	goto	u6420
  2026  003428                     u6421:
  2027  003428  EF20  F01A         	goto	l4856
  2028  00342C                     u6420:
  2029  00342C                     l4854:
  2030  00342C  C001  F001         	movff	ceilf@x,?_ceilf
  2031  003430  C002  F002         	movff	ceilf@x+1,?_ceilf+1
  2032  003434  C003  F003         	movff	ceilf@x+2,?_ceilf+2
  2033  003438  C004  F004         	movff	ceilf@x+3,?_ceilf+3
  2034  00343C  EFE3  F01A         	goto	l886
  2035  003440                     l4856:
  2036  003440  BE10               	btfsc	(ceilf@e+1)^0,7,c
  2037  003442  EF25  F01A         	goto	u6431
  2038  003446  EF27  F01A         	goto	u6430
  2039  00344A                     u6431:
  2040  00344A  EF97  F01A         	goto	l4866
  2041  00344E                     u6430:
  2042  00344E  C00F  F005         	movff	ceilf@e,??_ceilf
  2043  003452  0EFF               	movlw	255
  2044  003454  6E06               	movwf	(??_ceilf+1)^0,c
  2045  003456  0EFF               	movlw	255
  2046  003458  6E07               	movwf	(??_ceilf+2)^0,c
  2047  00345A  0E7F               	movlw	127
  2048  00345C  6E08               	movwf	(??_ceilf+3)^0,c
  2049  00345E  0E00               	movlw	0
  2050  003460  6E09               	movwf	(??_ceilf+4)^0,c
  2051  003462                     u6445:
  2052  003462  6605               	tstfsz	??_ceilf^0,c
  2053  003464  EF36  F01A         	goto	u6446
  2054  003468  EF3E  F01A         	goto	u6447
  2055  00346C                     u6446:
  2056  00346C  3409               	rlcf	(??_ceilf+4)^0,w,c
  2057  00346E  3209               	rrcf	(??_ceilf+4)^0,f,c
  2058  003470  3208               	rrcf	(??_ceilf+3)^0,f,c
  2059  003472  3207               	rrcf	(??_ceilf+2)^0,f,c
  2060  003474  3206               	rrcf	(??_ceilf+1)^0,f,c
  2061  003476  2E05               	decfsz	??_ceilf^0,f,c
  2062  003478  EF31  F01A         	goto	u6445
  2063  00347C                     u6447:
  2064  00347C  C006  F00B         	movff	??_ceilf+1,ceilf@m
  2065  003480  C007  F00C         	movff	??_ceilf+2,ceilf@m+1
  2066  003484  C008  F00D         	movff	??_ceilf+3,ceilf@m+2
  2067  003488  C009  F00E         	movff	??_ceilf+4,ceilf@m+3
  2068  00348C  500B               	movf	ceilf@m^0,w,c
  2069  00348E  1411               	andwf	ceilf@u^0,w,c
  2070  003490  6E05               	movwf	??_ceilf^0,c
  2071  003492  500C               	movf	(ceilf@m+1)^0,w,c
  2072  003494  1412               	andwf	(ceilf@u+1)^0,w,c
  2073  003496  6E06               	movwf	(??_ceilf+1)^0,c
  2074  003498  500D               	movf	(ceilf@m+2)^0,w,c
  2075  00349A  1413               	andwf	(ceilf@u+2)^0,w,c
  2076  00349C  6E07               	movwf	(??_ceilf+2)^0,c
  2077  00349E  500E               	movf	(ceilf@m+3)^0,w,c
  2078  0034A0  1414               	andwf	(ceilf@u+3)^0,w,c
  2079  0034A2  6E08               	movwf	(??_ceilf+3)^0,c
  2080  0034A4  5005               	movf	??_ceilf^0,w,c
  2081  0034A6  1006               	iorwf	(??_ceilf+1)^0,w,c
  2082  0034A8  1007               	iorwf	(??_ceilf+2)^0,w,c
  2083  0034AA  1008               	iorwf	(??_ceilf+3)^0,w,c
  2084  0034AC  A4D8               	btfss	status,2,c
  2085  0034AE  EF5B  F01A         	goto	u6451
  2086  0034B2  EF5D  F01A         	goto	u6450
  2087  0034B6                     u6451:
  2088  0034B6  EF5F  F01A         	goto	l4862
  2089  0034BA                     u6450:
  2090  0034BA  EF16  F01A         	goto	l4854
  2091  0034BE                     l4862:
  2092  0034BE  C011  F005         	movff	ceilf@u,??_ceilf
  2093  0034C2  C012  F006         	movff	ceilf@u+1,??_ceilf+1
  2094  0034C6  C013  F007         	movff	ceilf@u+2,??_ceilf+2
  2095  0034CA  C014  F008         	movff	ceilf@u+3,??_ceilf+3
  2096  0034CE  0E20               	movlw	32
  2097  0034D0  EF6F  F01A         	goto	u6460
  2098  0034D4                     u6465:
  2099  0034D4  90D8               	bcf	status,0,c
  2100  0034D6  3208               	rrcf	(??_ceilf+3)^0,f,c
  2101  0034D8  3207               	rrcf	(??_ceilf+2)^0,f,c
  2102  0034DA  3206               	rrcf	(??_ceilf+1)^0,f,c
  2103  0034DC  3205               	rrcf	??_ceilf^0,f,c
  2104  0034DE                     u6460:
  2105  0034DE  2EE8               	decfsz	wreg,f,c
  2106  0034E0  EF6A  F01A         	goto	u6465
  2107  0034E4  5005               	movf	??_ceilf^0,w,c
  2108  0034E6  1006               	iorwf	(??_ceilf+1)^0,w,c
  2109  0034E8  1007               	iorwf	(??_ceilf+2)^0,w,c
  2110  0034EA  1008               	iorwf	(??_ceilf+3)^0,w,c
  2111  0034EC  A4D8               	btfss	status,2,c
  2112  0034EE  EF7B  F01A         	goto	u6471
  2113  0034F2  EF7D  F01A         	goto	u6470
  2114  0034F6                     u6471:
  2115  0034F6  EF85  F01A         	goto	l889
  2116  0034FA                     u6470:
  2117  0034FA  500B               	movf	ceilf@m^0,w,c
  2118  0034FC  2611               	addwf	ceilf@u^0,f,c
  2119  0034FE  500C               	movf	(ceilf@m+1)^0,w,c
  2120  003500  2212               	addwfc	(ceilf@u+1)^0,f,c
  2121  003502  500D               	movf	(ceilf@m+2)^0,w,c
  2122  003504  2213               	addwfc	(ceilf@u+2)^0,f,c
  2123  003506  500E               	movf	(ceilf@m+3)^0,w,c
  2124  003508  2214               	addwfc	(ceilf@u+3)^0,f,c
  2125  00350A                     l889:
  2126  00350A  1C0B               	comf	ceilf@m^0,w,c
  2127  00350C  6E05               	movwf	??_ceilf^0,c
  2128  00350E  1C0C               	comf	(ceilf@m+1)^0,w,c
  2129  003510  6E06               	movwf	(??_ceilf+1)^0,c
  2130  003512  1C0D               	comf	(ceilf@m+2)^0,w,c
  2131  003514  6E07               	movwf	(??_ceilf+2)^0,c
  2132  003516  1C0E               	comf	(ceilf@m+3)^0,w,c
  2133  003518  6E08               	movwf	(??_ceilf+3)^0,c
  2134  00351A  5005               	movf	??_ceilf^0,w,c
  2135  00351C  1611               	andwf	ceilf@u^0,f,c
  2136  00351E  5006               	movf	(??_ceilf+1)^0,w,c
  2137  003520  1612               	andwf	(ceilf@u+1)^0,f,c
  2138  003522  5007               	movf	(??_ceilf+2)^0,w,c
  2139  003524  1613               	andwf	(ceilf@u+2)^0,f,c
  2140  003526  5008               	movf	(??_ceilf+3)^0,w,c
  2141  003528  1614               	andwf	(ceilf@u+3)^0,f,c
  2142  00352A  EFDB  F01A         	goto	l4874
  2143  00352E                     l4866:
  2144  00352E  C011  F005         	movff	ceilf@u,??_ceilf
  2145  003532  C012  F006         	movff	ceilf@u+1,??_ceilf+1
  2146  003536  C013  F007         	movff	ceilf@u+2,??_ceilf+2
  2147  00353A  C014  F008         	movff	ceilf@u+3,??_ceilf+3
  2148  00353E  0E20               	movlw	32
  2149  003540  EFA7  F01A         	goto	u6480
  2150  003544                     u6485:
  2151  003544  90D8               	bcf	status,0,c
  2152  003546  3208               	rrcf	(??_ceilf+3)^0,f,c
  2153  003548  3207               	rrcf	(??_ceilf+2)^0,f,c
  2154  00354A  3206               	rrcf	(??_ceilf+1)^0,f,c
  2155  00354C  3205               	rrcf	??_ceilf^0,f,c
  2156  00354E                     u6480:
  2157  00354E  2EE8               	decfsz	wreg,f,c
  2158  003550  EFA2  F01A         	goto	u6485
  2159  003554  5005               	movf	??_ceilf^0,w,c
  2160  003556  1006               	iorwf	(??_ceilf+1)^0,w,c
  2161  003558  1007               	iorwf	(??_ceilf+2)^0,w,c
  2162  00355A  1008               	iorwf	(??_ceilf+3)^0,w,c
  2163  00355C  B4D8               	btfsc	status,2,c
  2164  00355E  EFB3  F01A         	goto	u6491
  2165  003562  EFB5  F01A         	goto	u6490
  2166  003566                     u6491:
  2167  003566  EFBF  F01A         	goto	l4870
  2168  00356A                     u6490:
  2169  00356A  0E00               	movlw	0
  2170  00356C  6E11               	movwf	ceilf@u^0,c
  2171  00356E  0E00               	movlw	0
  2172  003570  6E12               	movwf	(ceilf@u+1)^0,c
  2173  003572  0E00               	movlw	0
  2174  003574  6E13               	movwf	(ceilf@u+2)^0,c
  2175  003576  0E80               	movlw	128
  2176  003578  6E14               	movwf	(ceilf@u+3)^0,c
  2177  00357A  EFDB  F01A         	goto	l4874
  2178  00357E                     l4870:
  2179  00357E  90D8               	bcf	status,0,c
  2180  003580  3411               	rlcf	ceilf@u^0,w,c
  2181  003582  6E05               	movwf	??_ceilf^0,c
  2182  003584  3412               	rlcf	(ceilf@u+1)^0,w,c
  2183  003586  6E06               	movwf	(??_ceilf+1)^0,c
  2184  003588  3413               	rlcf	(ceilf@u+2)^0,w,c
  2185  00358A  6E07               	movwf	(??_ceilf+2)^0,c
  2186  00358C  3414               	rlcf	(ceilf@u+3)^0,w,c
  2187  00358E  6E08               	movwf	(??_ceilf+3)^0,c
  2188  003590  5005               	movf	??_ceilf^0,w,c
  2189  003592  1006               	iorwf	(??_ceilf+1)^0,w,c
  2190  003594  1007               	iorwf	(??_ceilf+2)^0,w,c
  2191  003596  1008               	iorwf	(??_ceilf+3)^0,w,c
  2192  003598  B4D8               	btfsc	status,2,c
  2193  00359A  EFD1  F01A         	goto	u6501
  2194  00359E  EFD3  F01A         	goto	u6500
  2195  0035A2                     u6501:
  2196  0035A2  EFDB  F01A         	goto	l4874
  2197  0035A6                     u6500:
  2198  0035A6  0E00               	movlw	0
  2199  0035A8  6E11               	movwf	ceilf@u^0,c
  2200  0035AA  0E00               	movlw	0
  2201  0035AC  6E12               	movwf	(ceilf@u+1)^0,c
  2202  0035AE  0E80               	movlw	128
  2203  0035B0  6E13               	movwf	(ceilf@u+2)^0,c
  2204  0035B2  0E3F               	movlw	63
  2205  0035B4  6E14               	movwf	(ceilf@u+3)^0,c
  2206  0035B6                     l4874:
  2207  0035B6  C011  F001         	movff	ceilf@u,?_ceilf
  2208  0035BA  C012  F002         	movff	ceilf@u+1,?_ceilf+1
  2209  0035BE  C013  F003         	movff	ceilf@u+2,?_ceilf+2
  2210  0035C2  C014  F004         	movff	ceilf@u+3,?_ceilf+3
  2211  0035C6                     l886:
  2212  0035C6  0012               	return		;funcret
  2213  0035C8                     __end_of_ceilf:
  2214                           	callstack 0
  2215                           
  2216 ;; *************** function ___xxtofl *****************
  2217 ;; Defined at:
  2218 ;;		line 10 in file "/Applications/microchip/xc8/v2.31/pic/sources/c99/common/xxtofl.c"
  2219 ;; Parameters:    Size  Location     Type
  2220 ;;  sign            1    wreg     unsigned char 
  2221 ;;  val             4   10[COMRAM] long 
  2222 ;; Auto vars:     Size  Location     Type
  2223 ;;  sign            1   18[COMRAM] unsigned char 
  2224 ;;  arg             4   20[COMRAM] unsigned long 
  2225 ;;  exp             1   19[COMRAM] unsigned char 
  2226 ;; Return value:  Size  Location     Type
  2227 ;;                  4   10[COMRAM] unsigned char 
  2228 ;; Registers used:
  2229 ;;		wreg, status,2, status,0
  2230 ;; Tracked objects:
  2231 ;;		On entry : 0/0
  2232 ;;		On exit  : 0/0
  2233 ;;		Unchanged: 0/0
  2234 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  2235 ;;      Params:         4       0       0       0       0       0       0       0       0
  2236 ;;      Locals:         6       0       0       0       0       0       0       0       0
  2237 ;;      Temps:          4       0       0       0       0       0       0       0       0
  2238 ;;      Totals:        14       0       0       0       0       0       0       0       0
  2239 ;;Total ram usage:       14 bytes
  2240 ;; Hardware stack levels used:    1
  2241 ;; This function calls:
  2242 ;;		Nothing
  2243 ;; This function is called by:
  2244 ;;		_SensorLM35
  2245 ;; This function uses a non-reentrant model
  2246 ;;
  2247                           
  2248                           	psect	text5
  2249  0039D2                     __ptext5:
  2250                           	callstack 0
  2251  0039D2                     ___xxtofl:
  2252                           	callstack 29
  2253                           
  2254                           ;incstack = 0
  2255                           ;___xxtofl@sign stored from wreg
  2256  0039D2  6E13               	movwf	___xxtofl@sign^0,c
  2257  0039D4  5013               	movf	___xxtofl@sign^0,w,c
  2258  0039D6  B4D8               	btfsc	status,2,c
  2259  0039D8  EFF0  F01C         	goto	u6541
  2260  0039DC  EFF2  F01C         	goto	u6540
  2261  0039E0                     u6541:
  2262  0039E0  EF14  F01D         	goto	l864
  2263  0039E4                     u6540:
  2264  0039E4  BE0E               	btfsc	(___xxtofl@val+3)^0,7,c
  2265  0039E6  EFF9  F01C         	goto	u6550
  2266  0039EA  EFF7  F01C         	goto	u6551
  2267  0039EE                     u6551:
  2268  0039EE  EF14  F01D         	goto	l864
  2269  0039F2                     u6550:
  2270  0039F2  C00B  F00F         	movff	___xxtofl@val,??___xxtofl
  2271  0039F6  C00C  F010         	movff	___xxtofl@val+1,??___xxtofl+1
  2272  0039FA  C00D  F011         	movff	___xxtofl@val+2,??___xxtofl+2
  2273  0039FE  C00E  F012         	movff	___xxtofl@val+3,??___xxtofl+3
  2274  003A02  1E0F               	comf	??___xxtofl^0,f,c
  2275  003A04  1E10               	comf	(??___xxtofl+1)^0,f,c
  2276  003A06  1E11               	comf	(??___xxtofl+2)^0,f,c
  2277  003A08  1E12               	comf	(??___xxtofl+3)^0,f,c
  2278  003A0A  2A0F               	incf	??___xxtofl^0,f,c
  2279  003A0C  0E00               	movlw	0
  2280  003A0E  2210               	addwfc	(??___xxtofl+1)^0,f,c
  2281  003A10  2211               	addwfc	(??___xxtofl+2)^0,f,c
  2282  003A12  2212               	addwfc	(??___xxtofl+3)^0,f,c
  2283  003A14  C00F  F015         	movff	??___xxtofl,___xxtofl@arg
  2284  003A18  C010  F016         	movff	??___xxtofl+1,___xxtofl@arg+1
  2285  003A1C  C011  F017         	movff	??___xxtofl+2,___xxtofl@arg+2
  2286  003A20  C012  F018         	movff	??___xxtofl+3,___xxtofl@arg+3
  2287  003A24  EF1C  F01D         	goto	l4920
  2288  003A28                     l864:
  2289  003A28  C00B  F015         	movff	___xxtofl@val,___xxtofl@arg
  2290  003A2C  C00C  F016         	movff	___xxtofl@val+1,___xxtofl@arg+1
  2291  003A30  C00D  F017         	movff	___xxtofl@val+2,___xxtofl@arg+2
  2292  003A34  C00E  F018         	movff	___xxtofl@val+3,___xxtofl@arg+3
  2293  003A38                     l4920:
  2294  003A38  500B               	movf	___xxtofl@val^0,w,c
  2295  003A3A  100C               	iorwf	(___xxtofl@val+1)^0,w,c
  2296  003A3C  100D               	iorwf	(___xxtofl@val+2)^0,w,c
  2297  003A3E  100E               	iorwf	(___xxtofl@val+3)^0,w,c
  2298  003A40  A4D8               	btfss	status,2,c
  2299  003A42  EF25  F01D         	goto	u6561
  2300  003A46  EF27  F01D         	goto	u6560
  2301  003A4A                     u6561:
  2302  003A4A  EF31  F01D         	goto	l4926
  2303  003A4E                     u6560:
  2304  003A4E  0E00               	movlw	0
  2305  003A50  6E0B               	movwf	?___xxtofl^0,c
  2306  003A52  0E00               	movlw	0
  2307  003A54  6E0C               	movwf	(?___xxtofl+1)^0,c
  2308  003A56  0E00               	movlw	0
  2309  003A58  6E0D               	movwf	(?___xxtofl+2)^0,c
  2310  003A5A  0E00               	movlw	0
  2311  003A5C  6E0E               	movwf	(?___xxtofl+3)^0,c
  2312  003A5E  EFC2  F01D         	goto	l867
  2313  003A62                     l4926:
  2314  003A62  0E96               	movlw	150
  2315  003A64  6E14               	movwf	___xxtofl@exp^0,c
  2316  003A66  EF3B  F01D         	goto	l4930
  2317  003A6A                     l4928:
  2318  003A6A  2A14               	incf	___xxtofl@exp^0,f,c
  2319  003A6C  90D8               	bcf	status,0,c
  2320  003A6E  3218               	rrcf	(___xxtofl@arg+3)^0,f,c
  2321  003A70  3217               	rrcf	(___xxtofl@arg+2)^0,f,c
  2322  003A72  3216               	rrcf	(___xxtofl@arg+1)^0,f,c
  2323  003A74  3215               	rrcf	___xxtofl@arg^0,f,c
  2324  003A76                     l4930:
  2325  003A76  0E00               	movlw	0
  2326  003A78  1415               	andwf	___xxtofl@arg^0,w,c
  2327  003A7A  6E0F               	movwf	??___xxtofl^0,c
  2328  003A7C  0E00               	movlw	0
  2329  003A7E  1416               	andwf	(___xxtofl@arg+1)^0,w,c
  2330  003A80  6E10               	movwf	(??___xxtofl+1)^0,c
  2331  003A82  0E00               	movlw	0
  2332  003A84  1417               	andwf	(___xxtofl@arg+2)^0,w,c
  2333  003A86  6E11               	movwf	(??___xxtofl+2)^0,c
  2334  003A88  0EFE               	movlw	254
  2335  003A8A  1418               	andwf	(___xxtofl@arg+3)^0,w,c
  2336  003A8C  6E12               	movwf	(??___xxtofl+3)^0,c
  2337  003A8E  500F               	movf	??___xxtofl^0,w,c
  2338  003A90  1010               	iorwf	(??___xxtofl+1)^0,w,c
  2339  003A92  1011               	iorwf	(??___xxtofl+2)^0,w,c
  2340  003A94  1012               	iorwf	(??___xxtofl+3)^0,w,c
  2341  003A96  A4D8               	btfss	status,2,c
  2342  003A98  EF50  F01D         	goto	u6571
  2343  003A9C  EF52  F01D         	goto	u6570
  2344  003AA0                     u6571:
  2345  003AA0  EF35  F01D         	goto	l4928
  2346  003AA4                     u6570:
  2347  003AA4  EF60  F01D         	goto	l871
  2348  003AA8                     l4932:
  2349  003AA8  2A14               	incf	___xxtofl@exp^0,f,c
  2350  003AAA  0E01               	movlw	1
  2351  003AAC  2615               	addwf	___xxtofl@arg^0,f,c
  2352  003AAE  0E00               	movlw	0
  2353  003AB0  2216               	addwfc	(___xxtofl@arg+1)^0,f,c
  2354  003AB2  2217               	addwfc	(___xxtofl@arg+2)^0,f,c
  2355  003AB4  2218               	addwfc	(___xxtofl@arg+3)^0,f,c
  2356  003AB6  90D8               	bcf	status,0,c
  2357  003AB8  3218               	rrcf	(___xxtofl@arg+3)^0,f,c
  2358  003ABA  3217               	rrcf	(___xxtofl@arg+2)^0,f,c
  2359  003ABC  3216               	rrcf	(___xxtofl@arg+1)^0,f,c
  2360  003ABE  3215               	rrcf	___xxtofl@arg^0,f,c
  2361  003AC0                     l871:
  2362  003AC0  0E00               	movlw	0
  2363  003AC2  1415               	andwf	___xxtofl@arg^0,w,c
  2364  003AC4  6E0F               	movwf	??___xxtofl^0,c
  2365  003AC6  0E00               	movlw	0
  2366  003AC8  1416               	andwf	(___xxtofl@arg+1)^0,w,c
  2367  003ACA  6E10               	movwf	(??___xxtofl+1)^0,c
  2368  003ACC  0E00               	movlw	0
  2369  003ACE  1417               	andwf	(___xxtofl@arg+2)^0,w,c
  2370  003AD0  6E11               	movwf	(??___xxtofl+2)^0,c
  2371  003AD2  0EFF               	movlw	255
  2372  003AD4  1418               	andwf	(___xxtofl@arg+3)^0,w,c
  2373  003AD6  6E12               	movwf	(??___xxtofl+3)^0,c
  2374  003AD8  500F               	movf	??___xxtofl^0,w,c
  2375  003ADA  1010               	iorwf	(??___xxtofl+1)^0,w,c
  2376  003ADC  1011               	iorwf	(??___xxtofl+2)^0,w,c
  2377  003ADE  1012               	iorwf	(??___xxtofl+3)^0,w,c
  2378  003AE0  A4D8               	btfss	status,2,c
  2379  003AE2  EF75  F01D         	goto	u6581
  2380  003AE6  EF77  F01D         	goto	u6580
  2381  003AEA                     u6581:
  2382  003AEA  EF54  F01D         	goto	l4932
  2383  003AEE                     u6580:
  2384  003AEE  EF7F  F01D         	goto	l4940
  2385  003AF2                     l4938:
  2386  003AF2  0614               	decf	___xxtofl@exp^0,f,c
  2387  003AF4  90D8               	bcf	status,0,c
  2388  003AF6  3615               	rlcf	___xxtofl@arg^0,f,c
  2389  003AF8  3616               	rlcf	(___xxtofl@arg+1)^0,f,c
  2390  003AFA  3617               	rlcf	(___xxtofl@arg+2)^0,f,c
  2391  003AFC  3618               	rlcf	(___xxtofl@arg+3)^0,f,c
  2392  003AFE                     l4940:
  2393  003AFE  BE17               	btfsc	(___xxtofl@arg+2)^0,7,c
  2394  003B00  EF84  F01D         	goto	u6591
  2395  003B04  EF86  F01D         	goto	u6590
  2396  003B08                     u6591:
  2397  003B08  EF8E  F01D         	goto	l878
  2398  003B0C                     u6590:
  2399  003B0C  0E02               	movlw	2
  2400  003B0E  6014               	cpfslt	___xxtofl@exp^0,c
  2401  003B10  EF8C  F01D         	goto	u6601
  2402  003B14  EF8E  F01D         	goto	u6600
  2403  003B18                     u6601:
  2404  003B18  EF79  F01D         	goto	l4938
  2405  003B1C                     u6600:
  2406  003B1C                     l878:
  2407  003B1C  B014               	btfsc	___xxtofl@exp^0,0,c
  2408  003B1E  EF93  F01D         	goto	u6611
  2409  003B22  EF95  F01D         	goto	u6610
  2410  003B26                     u6611:
  2411  003B26  EF96  F01D         	goto	l4946
  2412  003B2A                     u6610:
  2413  003B2A  9E17               	bcf	(___xxtofl@arg+2)^0,7,c
  2414  003B2C                     l4946:
  2415  003B2C  90D8               	bcf	status,0,c
  2416  003B2E  3214               	rrcf	___xxtofl@exp^0,f,c
  2417  003B30  C014  F00F         	movff	___xxtofl@exp,??___xxtofl
  2418  003B34  6A10               	clrf	(??___xxtofl+1)^0,c
  2419  003B36  6A11               	clrf	(??___xxtofl+2)^0,c
  2420  003B38  6A12               	clrf	(??___xxtofl+3)^0,c
  2421  003B3A  C00F  F012         	movff	??___xxtofl,??___xxtofl+3
  2422  003B3E  6A11               	clrf	(??___xxtofl+2)^0,c
  2423  003B40  6A10               	clrf	(??___xxtofl+1)^0,c
  2424  003B42  6A0F               	clrf	??___xxtofl^0,c
  2425  003B44  500F               	movf	??___xxtofl^0,w,c
  2426  003B46  1215               	iorwf	___xxtofl@arg^0,f,c
  2427  003B48  5010               	movf	(??___xxtofl+1)^0,w,c
  2428  003B4A  1216               	iorwf	(___xxtofl@arg+1)^0,f,c
  2429  003B4C  5011               	movf	(??___xxtofl+2)^0,w,c
  2430  003B4E  1217               	iorwf	(___xxtofl@arg+2)^0,f,c
  2431  003B50  5012               	movf	(??___xxtofl+3)^0,w,c
  2432  003B52  1218               	iorwf	(___xxtofl@arg+3)^0,f,c
  2433  003B54  5013               	movf	___xxtofl@sign^0,w,c
  2434  003B56  B4D8               	btfsc	status,2,c
  2435  003B58  EFB0  F01D         	goto	u6621
  2436  003B5C  EFB2  F01D         	goto	u6620
  2437  003B60                     u6621:
  2438  003B60  EFBA  F01D         	goto	l4956
  2439  003B64                     u6620:
  2440  003B64  BE0E               	btfsc	(___xxtofl@val+3)^0,7,c
  2441  003B66  EFB9  F01D         	goto	u6630
  2442  003B6A  EFB7  F01D         	goto	u6631
  2443  003B6E                     u6631:
  2444  003B6E  EFBA  F01D         	goto	l4956
  2445  003B72                     u6630:
  2446  003B72  8E18               	bsf	(___xxtofl@arg+3)^0,7,c
  2447  003B74                     l4956:
  2448  003B74  C015  F00B         	movff	___xxtofl@arg,?___xxtofl
  2449  003B78  C016  F00C         	movff	___xxtofl@arg+1,?___xxtofl+1
  2450  003B7C  C017  F00D         	movff	___xxtofl@arg+2,?___xxtofl+2
  2451  003B80  C018  F00E         	movff	___xxtofl@arg+3,?___xxtofl+3
  2452  003B84                     l867:
  2453  003B84  0012               	return		;funcret
  2454  003B86                     __end_of___xxtofl:
  2455                           	callstack 0
  2456                           
  2457 ;; *************** function _Read_ADC1 *****************
  2458 ;; Defined at:
  2459 ;;		line 154 in file "SensorNegPosExactos.c"
  2460 ;; Parameters:    Size  Location     Type
  2461 ;;  canal           1    wreg     unsigned char 
  2462 ;; Auto vars:     Size  Location     Type
  2463 ;;  canal           1    4[COMRAM] unsigned char 
  2464 ;; Return value:  Size  Location     Type
  2465 ;;                  2    0[COMRAM] short 
  2466 ;; Registers used:
  2467 ;;		wreg, status,2, status,0
  2468 ;; Tracked objects:
  2469 ;;		On entry : 0/0
  2470 ;;		On exit  : 0/0
  2471 ;;		Unchanged: 0/0
  2472 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  2473 ;;      Params:         2       0       0       0       0       0       0       0       0
  2474 ;;      Locals:         1       0       0       0       0       0       0       0       0
  2475 ;;      Temps:          2       0       0       0       0       0       0       0       0
  2476 ;;      Totals:         5       0       0       0       0       0       0       0       0
  2477 ;;Total ram usage:        5 bytes
  2478 ;; Hardware stack levels used:    1
  2479 ;; This function calls:
  2480 ;;		Nothing
  2481 ;; This function is called by:
  2482 ;;		_SensorLM35
  2483 ;; This function uses a non-reentrant model
  2484 ;;
  2485                           
  2486                           	psect	text6
  2487  004B32                     __ptext6:
  2488                           	callstack 0
  2489  004B32                     _Read_ADC1:
  2490                           	callstack 29
  2491                           
  2492                           ;incstack = 0
  2493                           ;Read_ADC1@canal stored from wreg
  2494  004B32  6E05               	movwf	Read_ADC1@canal^0,c
  2495  004B34                     
  2496                           ;SensorNegPosExactos.c: 154: short Read_ADC1(char canal);SensorNegPosExactos.c: 155: {;S
      +                          ensorNegPosExactos.c: 157:     ADCON1bits.PVCFG = 0b00;
  2497  004B34  0EF3               	movlw	-13
  2498  004B36  16C1               	andwf	193,f,c	;volatile
  2499                           
  2500                           ;SensorNegPosExactos.c: 158:     ADCON1bits.NVCFG = 0b00;
  2501  004B38  0EFC               	movlw	-4
  2502  004B3A  16C1               	andwf	193,f,c	;volatile
  2503                           
  2504                           ;SensorNegPosExactos.c: 160:  ADCON0bits.CHS = 0b00010;
  2505  004B3C  50C2               	movf	194,w,c	;volatile
  2506  004B3E  0B83               	andlw	-125
  2507  004B40  0908               	iorlw	8
  2508  004B42  6EC2               	movwf	194,c	;volatile
  2509                           
  2510                           ;SensorNegPosExactos.c: 162:  switch(canal)
  2511  004B44  EFA8  F025         	goto	l4822
  2512  004B48                     l4818:
  2513                           
  2514                           ;SensorNegPosExactos.c: 165:             ADCON0 = 0b00001010;
  2515  004B48  0E0A               	movlw	10
  2516  004B4A  6EC2               	movwf	194,c	;volatile
  2517                           
  2518                           ;SensorNegPosExactos.c: 170:             break;
  2519  004B4C  EFB9  F025         	goto	l4824
  2520  004B50                     l4822:
  2521  004B50  5005               	movf	Read_ADC1@canal^0,w,c
  2522  004B52  6E03               	movwf	??_Read_ADC1^0,c
  2523  004B54  6A04               	clrf	(??_Read_ADC1+1)^0,c
  2524                           
  2525                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  2526                           ; Switch size 1, requested type "simple"
  2527                           ; Number of cases is 1, Range of values is 0 to 0
  2528                           ; switch strategies available:
  2529                           ; Name         Instructions Cycles
  2530                           ; simple_byte            4     3 (average)
  2531                           ;	Chosen strategy is simple_byte
  2532  004B56  5004               	movf	(??_Read_ADC1+1)^0,w,c
  2533  004B58  0A00               	xorlw	0	; case 0
  2534  004B5A  B4D8               	btfsc	status,2,c
  2535  004B5C  EFB2  F025         	goto	l5258
  2536  004B60  EFB9  F025         	goto	l4824
  2537  004B64                     l5258:
  2538                           
  2539                           ; Switch size 1, requested type "simple"
  2540                           ; Number of cases is 1, Range of values is 0 to 0
  2541                           ; switch strategies available:
  2542                           ; Name         Instructions Cycles
  2543                           ; simple_byte            4     3 (average)
  2544                           ;	Chosen strategy is simple_byte
  2545  004B64  5003               	movf	??_Read_ADC1^0,w,c
  2546  004B66  0A00               	xorlw	0	; case 0
  2547  004B68  B4D8               	btfsc	status,2,c
  2548  004B6A  EFA4  F025         	goto	l4818
  2549  004B6E  EFB9  F025         	goto	l4824
  2550  004B72                     l4824:
  2551                           
  2552                           ;SensorNegPosExactos.c: 176:  ADCON2 = 0b00100001;
  2553  004B72  0E21               	movlw	33
  2554  004B74  6EC0               	movwf	192,c	;volatile
  2555  004B76                     
  2556                           ;SensorNegPosExactos.c: 182:  ADCON0bits.ADON = 1;
  2557  004B76  80C2               	bsf	194,0,c	;volatile
  2558  004B78                     
  2559                           ;SensorNegPosExactos.c: 184:     ADCON0bits.GO = 1;
  2560  004B78  82C2               	bsf	194,1,c	;volatile
  2561  004B7A                     l127:
  2562  004B7A  B2C2               	btfsc	194,1,c	;volatile
  2563  004B7C  EFC2  F025         	goto	u6391
  2564  004B80  EFC4  F025         	goto	u6390
  2565  004B84                     u6391:
  2566  004B84  EFBD  F025         	goto	l127
  2567  004B88                     u6390:
  2568  004B88                     
  2569                           ;SensorNegPosExactos.c: 187:     return ADRESL + ADRESH*256;
  2570  004B88  50C4               	movf	196,w,c	;volatile
  2571  004B8A  6E04               	movwf	(??_Read_ADC1+1)^0,c
  2572  004B8C  6A03               	clrf	??_Read_ADC1^0,c
  2573  004B8E  50C3               	movf	195,w,c	;volatile
  2574  004B90  2403               	addwf	??_Read_ADC1^0,w,c
  2575  004B92  6E01               	movwf	?_Read_ADC1^0,c
  2576  004B94  0E00               	movlw	0
  2577  004B96  2004               	addwfc	(??_Read_ADC1+1)^0,w,c
  2578  004B98  6E02               	movwf	(?_Read_ADC1+1)^0,c
  2579  004B9A  0012               	return		;funcret
  2580  004B9C                     __end_of_Read_ADC1:
  2581                           	callstack 0
  2582                           
  2583 ;; *************** function _Read_ADC *****************
  2584 ;; Defined at:
  2585 ;;		line 111 in file "SensorNegPosExactos.c"
  2586 ;; Parameters:    Size  Location     Type
  2587 ;;  canal           1    wreg     unsigned char 
  2588 ;; Auto vars:     Size  Location     Type
  2589 ;;  canal           1    4[COMRAM] unsigned char 
  2590 ;; Return value:  Size  Location     Type
  2591 ;;                  2    0[COMRAM] short 
  2592 ;; Registers used:
  2593 ;;		wreg, status,2, status,0
  2594 ;; Tracked objects:
  2595 ;;		On entry : 0/0
  2596 ;;		On exit  : 0/0
  2597 ;;		Unchanged: 0/0
  2598 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  2599 ;;      Params:         2       0       0       0       0       0       0       0       0
  2600 ;;      Locals:         1       0       0       0       0       0       0       0       0
  2601 ;;      Temps:          2       0       0       0       0       0       0       0       0
  2602 ;;      Totals:         5       0       0       0       0       0       0       0       0
  2603 ;;Total ram usage:        5 bytes
  2604 ;; Hardware stack levels used:    1
  2605 ;; This function calls:
  2606 ;;		Nothing
  2607 ;; This function is called by:
  2608 ;;		_SensorLM35
  2609 ;; This function uses a non-reentrant model
  2610 ;;
  2611                           
  2612                           	psect	text7
  2613  004AC4                     __ptext7:
  2614                           	callstack 0
  2615  004AC4                     _Read_ADC:
  2616                           	callstack 29
  2617                           
  2618                           ;incstack = 0
  2619                           ;Read_ADC@canal stored from wreg
  2620  004AC4  6E05               	movwf	Read_ADC@canal^0,c
  2621  004AC6                     
  2622                           ;SensorNegPosExactos.c: 111: short Read_ADC(char canal);SensorNegPosExactos.c: 112: {;Se
      +                          nsorNegPosExactos.c: 114:     ADCON1bits.PVCFG = 0b00;
  2623  004AC6  0EF3               	movlw	-13
  2624  004AC8  16C1               	andwf	193,f,c	;volatile
  2625                           
  2626                           ;SensorNegPosExactos.c: 115:     ADCON1bits.NVCFG = 0b00;
  2627  004ACA  0EFC               	movlw	-4
  2628  004ACC  16C1               	andwf	193,f,c	;volatile
  2629                           
  2630                           ;SensorNegPosExactos.c: 117:  ADCON0bits.CHS = 0b00000;
  2631  004ACE  0E83               	movlw	-125
  2632  004AD0  16C2               	andwf	194,f,c	;volatile
  2633                           
  2634                           ;SensorNegPosExactos.c: 118:  ADCON0bits.CHS = 0b00010;
  2635  004AD2  50C2               	movf	194,w,c	;volatile
  2636  004AD4  0B83               	andlw	-125
  2637  004AD6  0908               	iorlw	8
  2638  004AD8  6EC2               	movwf	194,c	;volatile
  2639                           
  2640                           ;SensorNegPosExactos.c: 120:  switch(canal)
  2641  004ADA  EF73  F025         	goto	l4800
  2642  004ADE                     l4796:
  2643                           
  2644                           ;SensorNegPosExactos.c: 123:             ADCON0 = 0b00000010;
  2645  004ADE  0E02               	movlw	2
  2646  004AE0  6EC2               	movwf	194,c	;volatile
  2647                           
  2648                           ;SensorNegPosExactos.c: 128:             break;
  2649  004AE2  EF84  F025         	goto	l4802
  2650  004AE6                     l4800:
  2651  004AE6  5005               	movf	Read_ADC@canal^0,w,c
  2652  004AE8  6E03               	movwf	??_Read_ADC^0,c
  2653  004AEA  6A04               	clrf	(??_Read_ADC+1)^0,c
  2654                           
  2655                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  2656                           ; Switch size 1, requested type "simple"
  2657                           ; Number of cases is 1, Range of values is 0 to 0
  2658                           ; switch strategies available:
  2659                           ; Name         Instructions Cycles
  2660                           ; simple_byte            4     3 (average)
  2661                           ;	Chosen strategy is simple_byte
  2662  004AEC  5004               	movf	(??_Read_ADC+1)^0,w,c
  2663  004AEE  0A00               	xorlw	0	; case 0
  2664  004AF0  B4D8               	btfsc	status,2,c
  2665  004AF2  EF7D  F025         	goto	l5260
  2666  004AF6  EF84  F025         	goto	l4802
  2667  004AFA                     l5260:
  2668                           
  2669                           ; Switch size 1, requested type "simple"
  2670                           ; Number of cases is 1, Range of values is 0 to 0
  2671                           ; switch strategies available:
  2672                           ; Name         Instructions Cycles
  2673                           ; simple_byte            4     3 (average)
  2674                           ;	Chosen strategy is simple_byte
  2675  004AFA  5003               	movf	??_Read_ADC^0,w,c
  2676  004AFC  0A00               	xorlw	0	; case 0
  2677  004AFE  B4D8               	btfsc	status,2,c
  2678  004B00  EF6F  F025         	goto	l4796
  2679  004B04  EF84  F025         	goto	l4802
  2680  004B08                     l4802:
  2681                           
  2682                           ;SensorNegPosExactos.c: 134:  ADCON2 = 0b00100001;
  2683  004B08  0E21               	movlw	33
  2684  004B0A  6EC0               	movwf	192,c	;volatile
  2685  004B0C                     
  2686                           ;SensorNegPosExactos.c: 140:  ADCON0bits.ADON = 1;
  2687  004B0C  80C2               	bsf	194,0,c	;volatile
  2688  004B0E                     
  2689                           ;SensorNegPosExactos.c: 142:     ADCON0bits.GO = 1;
  2690  004B0E  82C2               	bsf	194,1,c	;volatile
  2691  004B10                     l118:
  2692  004B10  B2C2               	btfsc	194,1,c	;volatile
  2693  004B12  EF8D  F025         	goto	u6381
  2694  004B16  EF8F  F025         	goto	u6380
  2695  004B1A                     u6381:
  2696  004B1A  EF88  F025         	goto	l118
  2697  004B1E                     u6380:
  2698  004B1E                     
  2699                           ;SensorNegPosExactos.c: 145:     return ADRESL + ADRESH*256;
  2700  004B1E  50C4               	movf	196,w,c	;volatile
  2701  004B20  6E04               	movwf	(??_Read_ADC+1)^0,c
  2702  004B22  6A03               	clrf	??_Read_ADC^0,c
  2703  004B24  50C3               	movf	195,w,c	;volatile
  2704  004B26  2403               	addwf	??_Read_ADC^0,w,c
  2705  004B28  6E01               	movwf	?_Read_ADC^0,c
  2706  004B2A  0E00               	movlw	0
  2707  004B2C  2004               	addwfc	(??_Read_ADC+1)^0,w,c
  2708  004B2E  6E02               	movwf	(?_Read_ADC+1)^0,c
  2709  004B30  0012               	return		;funcret
  2710  004B32                     __end_of_Read_ADC:
  2711                           	callstack 0
  2712                           
  2713 ;; *************** function _LCD_COMANDOS *****************
  2714 ;; Defined at:
  2715 ;;		line 254 in file "SensorNegPosExactos.c"
  2716 ;; Parameters:    Size  Location     Type
  2717 ;;  comando         1    wreg     unsigned char 
  2718 ;; Auto vars:     Size  Location     Type
  2719 ;;  comando         1    3[COMRAM] unsigned char 
  2720 ;; Return value:  Size  Location     Type
  2721 ;;                  1    wreg      void 
  2722 ;; Registers used:
  2723 ;;		wreg, status,2, status,0, cstack
  2724 ;; Tracked objects:
  2725 ;;		On entry : 0/0
  2726 ;;		On exit  : 0/0
  2727 ;;		Unchanged: 0/0
  2728 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  2729 ;;      Params:         0       0       0       0       0       0       0       0       0
  2730 ;;      Locals:         1       0       0       0       0       0       0       0       0
  2731 ;;      Temps:          0       0       0       0       0       0       0       0       0
  2732 ;;      Totals:         1       0       0       0       0       0       0       0       0
  2733 ;;Total ram usage:        1 bytes
  2734 ;; Hardware stack levels used:    1
  2735 ;; Hardware stack levels required when called:    2
  2736 ;; This function calls:
  2737 ;;		_Get_DATA
  2738 ;; This function is called by:
  2739 ;;		_main
  2740 ;; This function uses a non-reentrant model
  2741 ;;
  2742                           
  2743                           	psect	text8
  2744  005084                     __ptext8:
  2745                           	callstack 0
  2746  005084                     _LCD_COMANDOS:
  2747                           	callstack 28
  2748                           
  2749                           ;incstack = 0
  2750                           ;LCD_COMANDOS@comando stored from wreg
  2751  005084  6E04               	movwf	LCD_COMANDOS@comando^0,c
  2752  005086                     
  2753                           ;SensorNegPosExactos.c: 254: void LCD_COMANDOS(char comando);SensorNegPosExactos.c: 255:
      +                           {;SensorNegPosExactos.c: 256:     LATDbits.LD0 = 0;
  2754  005086  908C               	bcf	140,0,c	;volatile
  2755  005088                     
  2756                           ;SensorNegPosExactos.c: 257:     Get_DATA((comando >> 4)&0b00001111);
  2757  005088  3804               	swapf	LCD_COMANDOS@comando^0,w,c
  2758  00508A  0B0F               	andlw	15
  2759  00508C  0B0F               	andlw	15
  2760  00508E  ECCE  F025         	call	_Get_DATA
  2761                           
  2762                           ;SensorNegPosExactos.c: 258:     Get_DATA((comando)&0b00001111);
  2763  005092  5004               	movf	LCD_COMANDOS@comando^0,w,c
  2764  005094  0B0F               	andlw	15
  2765  005096  ECCE  F025         	call	_Get_DATA
  2766  00509A  0012               	return		;funcret
  2767  00509C                     __end_of_LCD_COMANDOS:
  2768                           	callstack 0
  2769                           
  2770 ;; *************** function _Get_DATA *****************
  2771 ;; Defined at:
  2772 ;;		line 242 in file "SensorNegPosExactos.c"
  2773 ;; Parameters:    Size  Location     Type
  2774 ;;  data            1    wreg     unsigned char 
  2775 ;; Auto vars:     Size  Location     Type
  2776 ;;  data            1    2[COMRAM] unsigned char 
  2777 ;; Return value:  Size  Location     Type
  2778 ;;                  1    wreg      void 
  2779 ;; Registers used:
  2780 ;;		wreg, status,2, status,0, cstack
  2781 ;; Tracked objects:
  2782 ;;		On entry : 0/0
  2783 ;;		On exit  : 0/0
  2784 ;;		Unchanged: 0/0
  2785 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  2786 ;;      Params:         0       0       0       0       0       0       0       0       0
  2787 ;;      Locals:         1       0       0       0       0       0       0       0       0
  2788 ;;      Temps:          1       0       0       0       0       0       0       0       0
  2789 ;;      Totals:         2       0       0       0       0       0       0       0       0
  2790 ;;Total ram usage:        2 bytes
  2791 ;; Hardware stack levels used:    1
  2792 ;; Hardware stack levels required when called:    1
  2793 ;; This function calls:
  2794 ;;		_Set_DATA
  2795 ;; This function is called by:
  2796 ;;		_LCD_COMANDOS
  2797 ;; This function uses a non-reentrant model
  2798 ;;
  2799                           
  2800                           	psect	text9
  2801  004B9C                     __ptext9:
  2802                           	callstack 0
  2803  004B9C                     _Get_DATA:
  2804                           	callstack 28
  2805                           
  2806                           ;incstack = 0
  2807                           ;Get_DATA@data stored from wreg
  2808  004B9C  6E03               	movwf	Get_DATA@data^0,c
  2809  004B9E                     
  2810                           ;SensorNegPosExactos.c: 242: void Get_DATA(char data);SensorNegPosExactos.c: 243: {;Sens
      +                          orNegPosExactos.c: 244:     LATDbits.LD4 = data;
  2811  004B9E  B003               	btfsc	Get_DATA@data^0,0,c
  2812  004BA0  D002               	bra	u6405
  2813  004BA2  988C               	bcf	140,4,c	;volatile
  2814  004BA4  D001               	bra	u6406
  2815  004BA6                     u6405:
  2816  004BA6  888C               	bsf	140,4,c	;volatile
  2817  004BA8                     u6406:
  2818  004BA8                     
  2819                           ;SensorNegPosExactos.c: 245:     LATDbits.LD5 = data >> 1;
  2820  004BA8  C003  F002         	movff	Get_DATA@data,??_Get_DATA
  2821  004BAC  90D8               	bcf	status,0,c
  2822  004BAE  3202               	rrcf	??_Get_DATA^0,f,c
  2823  004BB0  3A02               	swapf	??_Get_DATA^0,f,c
  2824  004BB2  4602               	rlncf	??_Get_DATA^0,f,c
  2825  004BB4  508C               	movf	140,w,c	;volatile
  2826  004BB6  1802               	xorwf	??_Get_DATA^0,w,c
  2827  004BB8  0BDF               	andlw	-33
  2828  004BBA  1802               	xorwf	??_Get_DATA^0,w,c
  2829  004BBC  6E8C               	movwf	140,c	;volatile
  2830  004BBE                     
  2831                           ;SensorNegPosExactos.c: 246:     LATDbits.LD6 = data >> 2;
  2832  004BBE  C003  F002         	movff	Get_DATA@data,??_Get_DATA
  2833  004BC2  90D8               	bcf	status,0,c
  2834  004BC4  3202               	rrcf	??_Get_DATA^0,f,c
  2835  004BC6  90D8               	bcf	status,0,c
  2836  004BC8  3202               	rrcf	??_Get_DATA^0,f,c
  2837  004BCA  3A02               	swapf	??_Get_DATA^0,f,c
  2838  004BCC  4602               	rlncf	??_Get_DATA^0,f,c
  2839  004BCE  4602               	rlncf	??_Get_DATA^0,f,c
  2840  004BD0  508C               	movf	140,w,c	;volatile
  2841  004BD2  1802               	xorwf	??_Get_DATA^0,w,c
  2842  004BD4  0BBF               	andlw	-65
  2843  004BD6  1802               	xorwf	??_Get_DATA^0,w,c
  2844  004BD8  6E8C               	movwf	140,c	;volatile
  2845  004BDA                     
  2846                           ;SensorNegPosExactos.c: 247:     LATDbits.LD7 = data >> 3;
  2847  004BDA  C003  F002         	movff	Get_DATA@data,??_Get_DATA
  2848  004BDE  90D8               	bcf	status,0,c
  2849  004BE0  3202               	rrcf	??_Get_DATA^0,f,c
  2850  004BE2  90D8               	bcf	status,0,c
  2851  004BE4  3202               	rrcf	??_Get_DATA^0,f,c
  2852  004BE6  90D8               	bcf	status,0,c
  2853  004BE8  3202               	rrcf	??_Get_DATA^0,f,c
  2854  004BEA  3202               	rrcf	??_Get_DATA^0,f,c
  2855  004BEC  3202               	rrcf	??_Get_DATA^0,f,c
  2856  004BEE  508C               	movf	140,w,c	;volatile
  2857  004BF0  1802               	xorwf	??_Get_DATA^0,w,c
  2858  004BF2  0B7F               	andlw	-129
  2859  004BF4  1802               	xorwf	??_Get_DATA^0,w,c
  2860  004BF6  6E8C               	movwf	140,c	;volatile
  2861  004BF8                     
  2862                           ;SensorNegPosExactos.c: 249:     Set_DATA();
  2863  004BF8  EC4E  F028         	call	_Set_DATA	;wreg free
  2864  004BFC  0012               	return		;funcret
  2865  004BFE                     __end_of_Get_DATA:
  2866                           	callstack 0
  2867                           
  2868 ;; *************** function _Set_DATA *****************
  2869 ;; Defined at:
  2870 ;;		line 232 in file "SensorNegPosExactos.c"
  2871 ;; Parameters:    Size  Location     Type
  2872 ;;		None
  2873 ;; Auto vars:     Size  Location     Type
  2874 ;;		None
  2875 ;; Return value:  Size  Location     Type
  2876 ;;                  1    wreg      void 
  2877 ;; Registers used:
  2878 ;;		wreg
  2879 ;; Tracked objects:
  2880 ;;		On entry : 0/0
  2881 ;;		On exit  : 0/0
  2882 ;;		Unchanged: 0/0
  2883 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  2884 ;;      Params:         0       0       0       0       0       0       0       0       0
  2885 ;;      Locals:         0       0       0       0       0       0       0       0       0
  2886 ;;      Temps:          1       0       0       0       0       0       0       0       0
  2887 ;;      Totals:         1       0       0       0       0       0       0       0       0
  2888 ;;Total ram usage:        1 bytes
  2889 ;; Hardware stack levels used:    1
  2890 ;; This function calls:
  2891 ;;		Nothing
  2892 ;; This function is called by:
  2893 ;;		_Get_DATA
  2894 ;; This function uses a non-reentrant model
  2895 ;;
  2896                           
  2897                           	psect	text10
  2898  00509C                     __ptext10:
  2899                           	callstack 0
  2900  00509C                     _Set_DATA:
  2901                           	callstack 28
  2902  00509C                     
  2903                           ;SensorNegPosExactos.c: 234:     LATDbits.LD2 = 1;
  2904  00509C  848C               	bsf	140,2,c	;volatile
  2905  00509E                     
  2906                           ;SensorNegPosExactos.c: 235:     _delay((unsigned long)((1)*(8000000/4000.0)));
  2907  00509E  0E03               	movlw	3
  2908  0050A0  6E01               	movwf	??_Set_DATA^0,c
  2909  0050A2  0E98               	movlw	152
  2910  0050A4                     u6877:
  2911  0050A4  2EE8               	decfsz	wreg,f,c
  2912  0050A6  D7FE               	bra	u6877
  2913  0050A8  2E01               	decfsz	??_Set_DATA^0,f,c
  2914  0050AA  D7FC               	bra	u6877
  2915  0050AC                     
  2916                           ;SensorNegPosExactos.c: 236:     LATDbits.LD2 = 0;
  2917  0050AC  948C               	bcf	140,2,c	;volatile
  2918  0050AE  0012               	return		;funcret
  2919  0050B0                     __end_of_Set_DATA:
  2920                           	callstack 0
  2921                           
  2922 ;; *************** function _InicializaLCD *****************
  2923 ;; Defined at:
  2924 ;;		line 293 in file "SensorNegPosExactos.c"
  2925 ;; Parameters:    Size  Location     Type
  2926 ;;		None
  2927 ;; Auto vars:     Size  Location     Type
  2928 ;;		None
  2929 ;; Return value:  Size  Location     Type
  2930 ;;                  1    wreg      void 
  2931 ;; Registers used:
  2932 ;;		wreg, status,2, status,0, cstack
  2933 ;; Tracked objects:
  2934 ;;		On entry : 0/0
  2935 ;;		On exit  : 0/0
  2936 ;;		Unchanged: 0/0
  2937 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  2938 ;;      Params:         0       0       0       0       0       0       0       0       0
  2939 ;;      Locals:         0       0       0       0       0       0       0       0       0
  2940 ;;      Temps:          1       0       0       0       0       0       0       0       0
  2941 ;;      Totals:         1       0       0       0       0       0       0       0       0
  2942 ;;Total ram usage:        1 bytes
  2943 ;; Hardware stack levels used:    1
  2944 ;; Hardware stack levels required when called:    1
  2945 ;; This function calls:
  2946 ;;		_putcm
  2947 ;; This function is called by:
  2948 ;;		_main
  2949 ;; This function uses a non-reentrant model
  2950 ;;
  2951                           
  2952                           	psect	text11
  2953  0049C6                     __ptext11:
  2954                           	callstack 0
  2955  0049C6                     _InicializaLCD:
  2956                           	callstack 29
  2957  0049C6                     
  2958                           ;SensorNegPosExactos.c: 295:     _delay((unsigned long)((50)*(8000000/4000.0)));
  2959  0049C6  0E82               	movlw	130
  2960  0049C8  6E04               	movwf	??_InicializaLCD^0,c
  2961  0049CA  0EDE               	movlw	222
  2962  0049CC                     u6887:
  2963  0049CC  2EE8               	decfsz	wreg,f,c
  2964  0049CE  D7FE               	bra	u6887
  2965  0049D0  2E04               	decfsz	??_InicializaLCD^0,f,c
  2966  0049D2  D7FC               	bra	u6887
  2967  0049D4                     
  2968                           ;SensorNegPosExactos.c: 296:     putcm(0x02);
  2969  0049D4  0E02               	movlw	2
  2970  0049D6  EC3A  F027         	call	_putcm
  2971  0049DA                     
  2972                           ;SensorNegPosExactos.c: 297:     _delay((unsigned long)((1)*(8000000/4000.0)));
  2973  0049DA  0E03               	movlw	3
  2974  0049DC  6E04               	movwf	??_InicializaLCD^0,c
  2975  0049DE  0E98               	movlw	152
  2976  0049E0                     u6897:
  2977  0049E0  2EE8               	decfsz	wreg,f,c
  2978  0049E2  D7FE               	bra	u6897
  2979  0049E4  2E04               	decfsz	??_InicializaLCD^0,f,c
  2980  0049E6  D7FC               	bra	u6897
  2981                           
  2982                           ;SensorNegPosExactos.c: 299:     putcm(0x28);
  2983  0049E8  0E28               	movlw	40
  2984  0049EA  EC3A  F027         	call	_putcm
  2985  0049EE                     
  2986                           ;SensorNegPosExactos.c: 300:     _delay((unsigned long)((1)*(8000000/4000.0)));
  2987  0049EE  0E03               	movlw	3
  2988  0049F0  6E04               	movwf	??_InicializaLCD^0,c
  2989  0049F2  0E98               	movlw	152
  2990  0049F4                     u6907:
  2991  0049F4  2EE8               	decfsz	wreg,f,c
  2992  0049F6  D7FE               	bra	u6907
  2993  0049F8  2E04               	decfsz	??_InicializaLCD^0,f,c
  2994  0049FA  D7FC               	bra	u6907
  2995  0049FC                     
  2996                           ;SensorNegPosExactos.c: 302:     putcm(0x2C);
  2997  0049FC  0E2C               	movlw	44
  2998  0049FE  EC3A  F027         	call	_putcm
  2999                           
  3000                           ;SensorNegPosExactos.c: 303:     _delay((unsigned long)((1)*(8000000/4000.0)));
  3001  004A02  0E03               	movlw	3
  3002  004A04  6E04               	movwf	??_InicializaLCD^0,c
  3003  004A06  0E98               	movlw	152
  3004  004A08                     u6917:
  3005  004A08  2EE8               	decfsz	wreg,f,c
  3006  004A0A  D7FE               	bra	u6917
  3007  004A0C  2E04               	decfsz	??_InicializaLCD^0,f,c
  3008  004A0E  D7FC               	bra	u6917
  3009  004A10                     
  3010                           ;SensorNegPosExactos.c: 305:     putcm(0x0C);
  3011  004A10  0E0C               	movlw	12
  3012  004A12  EC3A  F027         	call	_putcm
  3013  004A16                     
  3014                           ;SensorNegPosExactos.c: 306:     _delay((unsigned long)((1)*(8000000/4000.0)));
  3015  004A16  0E03               	movlw	3
  3016  004A18  6E04               	movwf	??_InicializaLCD^0,c
  3017  004A1A  0E98               	movlw	152
  3018  004A1C                     u6927:
  3019  004A1C  2EE8               	decfsz	wreg,f,c
  3020  004A1E  D7FE               	bra	u6927
  3021  004A20  2E04               	decfsz	??_InicializaLCD^0,f,c
  3022  004A22  D7FC               	bra	u6927
  3023                           
  3024                           ;SensorNegPosExactos.c: 308:     putcm(0x06);
  3025  004A24  0E06               	movlw	6
  3026  004A26  EC3A  F027         	call	_putcm
  3027  004A2A                     
  3028                           ;SensorNegPosExactos.c: 309:     _delay((unsigned long)((1)*(8000000/4000.0)));
  3029  004A2A  0E03               	movlw	3
  3030  004A2C  6E04               	movwf	??_InicializaLCD^0,c
  3031  004A2E  0E98               	movlw	152
  3032  004A30                     u6937:
  3033  004A30  2EE8               	decfsz	wreg,f,c
  3034  004A32  D7FE               	bra	u6937
  3035  004A34  2E04               	decfsz	??_InicializaLCD^0,f,c
  3036  004A36  D7FC               	bra	u6937
  3037  004A38                     
  3038                           ;SensorNegPosExactos.c: 311:     putcm(0x80);
  3039  004A38  0E80               	movlw	128
  3040  004A3A  EC3A  F027         	call	_putcm
  3041                           
  3042                           ;SensorNegPosExactos.c: 312:     _delay((unsigned long)((1)*(8000000/4000.0)));
  3043  004A3E  0E03               	movlw	3
  3044  004A40  6E04               	movwf	??_InicializaLCD^0,c
  3045  004A42  0E98               	movlw	152
  3046  004A44                     u6947:
  3047  004A44  2EE8               	decfsz	wreg,f,c
  3048  004A46  D7FE               	bra	u6947
  3049  004A48  2E04               	decfsz	??_InicializaLCD^0,f,c
  3050  004A4A  D7FC               	bra	u6947
  3051  004A4C  0012               	return		;funcret
  3052  004A4E                     __end_of_InicializaLCD:
  3053                           	callstack 0
  3054                           
  3055 ;; *************** function _Configuracion *****************
  3056 ;; Defined at:
  3057 ;;		line 195 in file "SensorNegPosExactos.c"
  3058 ;; Parameters:    Size  Location     Type
  3059 ;;		None
  3060 ;; Auto vars:     Size  Location     Type
  3061 ;;		None
  3062 ;; Return value:  Size  Location     Type
  3063 ;;                  1    wreg      void 
  3064 ;; Registers used:
  3065 ;;		wreg, status,2
  3066 ;; Tracked objects:
  3067 ;;		On entry : 0/0
  3068 ;;		On exit  : 0/0
  3069 ;;		Unchanged: 0/0
  3070 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  3071 ;;      Params:         0       0       0       0       0       0       0       0       0
  3072 ;;      Locals:         0       0       0       0       0       0       0       0       0
  3073 ;;      Temps:          0       0       0       0       0       0       0       0       0
  3074 ;;      Totals:         0       0       0       0       0       0       0       0       0
  3075 ;;Total ram usage:        0 bytes
  3076 ;; Hardware stack levels used:    1
  3077 ;; This function calls:
  3078 ;;		Nothing
  3079 ;; This function is called by:
  3080 ;;		_main
  3081 ;; This function uses a non-reentrant model
  3082 ;;
  3083                           
  3084                           	psect	text12
  3085  004FFC                     __ptext12:
  3086                           	callstack 0
  3087  004FFC                     _Configuracion:
  3088                           	callstack 30
  3089  004FFC                     
  3090                           ;SensorNegPosExactos.c: 204:     TRISA = 0b11111111;
  3091  004FFC  6892               	setf	146,c	;volatile
  3092  004FFE                     
  3093                           ;SensorNegPosExactos.c: 205:  TRISD = 0b00000000;
  3094  004FFE  0E00               	movlw	0
  3095  005000  6E95               	movwf	149,c	;volatile
  3096                           
  3097                           ;SensorNegPosExactos.c: 209:     OSCCON = 0b01101100;
  3098  005002  0E6C               	movlw	108
  3099  005004  6ED3               	movwf	211,c	;volatile
  3100  005006                     
  3101                           ;SensorNegPosExactos.c: 217:     ANSELAbits.ANSA3 = 0;
  3102  005006  010F               	movlb	15	; () banked
  3103  005008  975B               	bcf	91,3,b	;volatile
  3104  00500A                     
  3105                           ; BSR set to: 15
  3106                           ;SensorNegPosExactos.c: 218:     ANSELAbits.ANSA1 = 0;
  3107  00500A  935B               	bcf	91,1,b	;volatile
  3108  00500C                     
  3109                           ; BSR set to: 15
  3110                           ;SensorNegPosExactos.c: 219:     ANSELAbits.ANSA5 = 0;
  3111  00500C  9B5B               	bcf	91,5,b	;volatile
  3112  00500E                     
  3113                           ; BSR set to: 15
  3114                           ;SensorNegPosExactos.c: 220:     TRISCbits.RC6 = 0;
  3115  00500E  9C94               	bcf	148,6,c	;volatile
  3116  005010                     
  3117                           ; BSR set to: 15
  3118                           ;SensorNegPosExactos.c: 221:     ANSELCbits.ANSC6 = 0;
  3119  005010  9D5D               	bcf	93,6,b	;volatile
  3120  005012                     
  3121                           ; BSR set to: 15
  3122                           ;SensorNegPosExactos.c: 222:     LATCbits.LATC6=0;
  3123  005012  9C8B               	bcf	139,6,c	;volatile
  3124                           
  3125                           ;SensorNegPosExactos.c: 225:     TRISB = 0;
  3126  005014  0E00               	movlw	0
  3127  005016  6E93               	movwf	147,c	;volatile
  3128                           
  3129                           ;SensorNegPosExactos.c: 226:     ANSELB = 0;
  3130  005018  0E00               	movlw	0
  3131  00501A  6F5C               	movwf	92,b	;volatile
  3132                           
  3133                           ;SensorNegPosExactos.c: 227:     LATB = 0;
  3134  00501C  0E00               	movlw	0
  3135  00501E  6E8A               	movwf	138,c	;volatile
  3136  005020                     
  3137                           ; BSR set to: 15
  3138  005020  0012               	return		;funcret
  3139  005022                     __end_of_Configuracion:
  3140                           	callstack 0
  3141                           
  3142 ;; *************** function _Alarma_LED *****************
  3143 ;; Defined at:
  3144 ;;		line 526 in file "SensorNegPosExactos.c"
  3145 ;; Parameters:    Size  Location     Type
  3146 ;;		None
  3147 ;; Auto vars:     Size  Location     Type
  3148 ;;  A               1    2[COMRAM] unsigned char 
  3149 ;; Return value:  Size  Location     Type
  3150 ;;                  1    wreg      void 
  3151 ;; Registers used:
  3152 ;;		wreg, status,2, status,0
  3153 ;; Tracked objects:
  3154 ;;		On entry : 0/0
  3155 ;;		On exit  : 0/0
  3156 ;;		Unchanged: 0/0
  3157 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  3158 ;;      Params:         0       0       0       0       0       0       0       0       0
  3159 ;;      Locals:         1       0       0       0       0       0       0       0       0
  3160 ;;      Temps:          2       0       0       0       0       0       0       0       0
  3161 ;;      Totals:         3       0       0       0       0       0       0       0       0
  3162 ;;Total ram usage:        3 bytes
  3163 ;; Hardware stack levels used:    1
  3164 ;; This function calls:
  3165 ;;		Nothing
  3166 ;; This function is called by:
  3167 ;;		_main
  3168 ;; This function uses a non-reentrant model
  3169 ;;
  3170                           
  3171                           	psect	text13
  3172  0040CC                     __ptext13:
  3173                           	callstack 0
  3174  0040CC                     _Alarma_LED:
  3175                           	callstack 30
  3176  0040CC                     
  3177                           ;SensorNegPosExactos.c: 531:     if(DH == Decenas_Horas && UH == Unidades_Horas && DM ==
      +                           Decenas_Minutos && UM == Unidades_Minutos && DS == Decenas_Segundos && US == Unidades_S
      +                          egundos)
  3178  0040CC  0100               	movlb	0	; () banked
  3179  0040CE  51F2               	movf	_Decenas_Horas& (0+255),w,b
  3180  0040D0  19E4               	xorwf	_DH& (0+255),w,b
  3181  0040D2  E107               	bnz	u6761
  3182  0040D4  51F3               	movf	(_Decenas_Horas+1)& (0+255),w,b
  3183  0040D6  19E5               	xorwf	(_DH+1)& (0+255),w,b
  3184  0040D8  A4D8               	btfss	status,2,c
  3185  0040DA  EF71  F020         	goto	u6761
  3186  0040DE  EF73  F020         	goto	u6760
  3187  0040E2                     u6761:
  3188  0040E2  EFD9  F020         	goto	l5174
  3189  0040E6                     u6760:
  3190  0040E6                     
  3191                           ; BSR set to: 0
  3192  0040E6  51F4               	movf	_Unidades_Horas& (0+255),w,b
  3193  0040E8  19E2               	xorwf	_UH& (0+255),w,b
  3194  0040EA  E107               	bnz	u6771
  3195  0040EC  51F5               	movf	(_Unidades_Horas+1)& (0+255),w,b
  3196  0040EE  19E3               	xorwf	(_UH+1)& (0+255),w,b
  3197  0040F0  A4D8               	btfss	status,2,c
  3198  0040F2  EF7D  F020         	goto	u6771
  3199  0040F6  EF7F  F020         	goto	u6770
  3200  0040FA                     u6771:
  3201  0040FA  EFD9  F020         	goto	l5174
  3202  0040FE                     u6770:
  3203  0040FE                     
  3204                           ; BSR set to: 0
  3205  0040FE  51EE               	movf	_Decenas_Minutos& (0+255),w,b
  3206  004100  19E0               	xorwf	_DM& (0+255),w,b
  3207  004102  E107               	bnz	u6781
  3208  004104  51EF               	movf	(_Decenas_Minutos+1)& (0+255),w,b
  3209  004106  19E1               	xorwf	(_DM+1)& (0+255),w,b
  3210  004108  A4D8               	btfss	status,2,c
  3211  00410A  EF89  F020         	goto	u6781
  3212  00410E  EF8B  F020         	goto	u6780
  3213  004112                     u6781:
  3214  004112  EFD9  F020         	goto	l5174
  3215  004116                     u6780:
  3216  004116                     
  3217                           ; BSR set to: 0
  3218  004116  51F0               	movf	_Unidades_Minutos& (0+255),w,b
  3219  004118  19DE               	xorwf	_UM& (0+255),w,b
  3220  00411A  E107               	bnz	u6791
  3221  00411C  51F1               	movf	(_Unidades_Minutos+1)& (0+255),w,b
  3222  00411E  19DF               	xorwf	(_UM+1)& (0+255),w,b
  3223  004120  A4D8               	btfss	status,2,c
  3224  004122  EF95  F020         	goto	u6791
  3225  004126  EF97  F020         	goto	u6790
  3226  00412A                     u6791:
  3227  00412A  EFD9  F020         	goto	l5174
  3228  00412E                     u6790:
  3229  00412E                     
  3230                           ; BSR set to: 0
  3231  00412E  51EA               	movf	_Decenas_Segundos& (0+255),w,b
  3232  004130  19DC               	xorwf	_DS& (0+255),w,b
  3233  004132  E107               	bnz	u6801
  3234  004134  51EB               	movf	(_Decenas_Segundos+1)& (0+255),w,b
  3235  004136  19DD               	xorwf	(_DS+1)& (0+255),w,b
  3236  004138  A4D8               	btfss	status,2,c
  3237  00413A  EFA1  F020         	goto	u6801
  3238  00413E  EFA3  F020         	goto	u6800
  3239  004142                     u6801:
  3240  004142  EFD9  F020         	goto	l5174
  3241  004146                     u6800:
  3242  004146                     
  3243                           ; BSR set to: 0
  3244  004146  51EC               	movf	_Unidades_Segundos& (0+255),w,b
  3245  004148  19DA               	xorwf	_US& (0+255),w,b
  3246  00414A  E107               	bnz	u6811
  3247  00414C  51ED               	movf	(_Unidades_Segundos+1)& (0+255),w,b
  3248  00414E  19DB               	xorwf	(_US+1)& (0+255),w,b
  3249  004150  A4D8               	btfss	status,2,c
  3250  004152  EFAD  F020         	goto	u6811
  3251  004156  EFAF  F020         	goto	u6810
  3252  00415A                     u6811:
  3253  00415A  EFD9  F020         	goto	l5174
  3254  00415E                     u6810:
  3255  00415E                     
  3256                           ; BSR set to: 0
  3257                           ;SensorNegPosExactos.c: 532:     {;SensorNegPosExactos.c: 533:         char A = 10;
  3258  00415E  0E0A               	movlw	10
  3259  004160  6E03               	movwf	Alarma_LED@A^0,c
  3260                           
  3261                           ;SensorNegPosExactos.c: 534:         while(A)
  3262  004162  EFCF  F020         	goto	l5172
  3263  004166                     l195:
  3264                           
  3265                           ;SensorNegPosExactos.c: 535:         {;SensorNegPosExactos.c: 536:             PORTB = 0
      +                          xFF;
  3266  004166  6881               	setf	129,c	;volatile
  3267  004168                     
  3268                           ;SensorNegPosExactos.c: 537:             _delay((unsigned long)((100)*(8000000/4000.0)))
      +                          ;
  3269  004168  0E02               	movlw	2
  3270  00416A  6E02               	movwf	(??_Alarma_LED+1)^0,c
  3271  00416C  0E04               	movlw	4
  3272  00416E  6E01               	movwf	??_Alarma_LED^0,c
  3273  004170  0EBA               	movlw	186
  3274  004172                     u6957:
  3275  004172  2EE8               	decfsz	wreg,f,c
  3276  004174  D7FE               	bra	u6957
  3277  004176  2E01               	decfsz	??_Alarma_LED^0,f,c
  3278  004178  D7FC               	bra	u6957
  3279  00417A  2E02               	decfsz	(??_Alarma_LED+1)^0,f,c
  3280  00417C  D7FA               	bra	u6957
  3281  00417E  D000               	nop2	
  3282  004180                     
  3283                           ;SensorNegPosExactos.c: 538:             PORTB = 0x00;
  3284  004180  0E00               	movlw	0
  3285  004182  6E81               	movwf	129,c	;volatile
  3286  004184                     
  3287                           ;SensorNegPosExactos.c: 539:             _delay((unsigned long)((100)*(8000000/4000.0)))
      +                          ;
  3288  004184  0E02               	movlw	2
  3289  004186  6E02               	movwf	(??_Alarma_LED+1)^0,c
  3290  004188  0E04               	movlw	4
  3291  00418A  6E01               	movwf	??_Alarma_LED^0,c
  3292  00418C  0EBA               	movlw	186
  3293  00418E                     u6967:
  3294  00418E  2EE8               	decfsz	wreg,f,c
  3295  004190  D7FE               	bra	u6967
  3296  004192  2E01               	decfsz	??_Alarma_LED^0,f,c
  3297  004194  D7FC               	bra	u6967
  3298  004196  2E02               	decfsz	(??_Alarma_LED+1)^0,f,c
  3299  004198  D7FA               	bra	u6967
  3300  00419A  D000               	nop2	
  3301  00419C                     
  3302                           ;SensorNegPosExactos.c: 540:             A -= 1;
  3303  00419C  0603               	decf	Alarma_LED@A^0,f,c
  3304  00419E                     l5172:
  3305                           
  3306                           ;SensorNegPosExactos.c: 534:         while(A)
  3307  00419E  5003               	movf	Alarma_LED@A^0,w,c
  3308  0041A0  A4D8               	btfss	status,2,c
  3309  0041A2  EFD5  F020         	goto	u6821
  3310  0041A6  EFD7  F020         	goto	u6820
  3311  0041AA                     u6821:
  3312  0041AA  EFB3  F020         	goto	l195
  3313  0041AE                     u6820:
  3314  0041AE  EFE7  F020         	goto	l198
  3315  0041B2                     l5174:
  3316                           
  3317                           ; BSR set to: 0
  3318                           ;SensorNegPosExactos.c: 544:     {;SensorNegPosExactos.c: 545:         PORTB = 0x00;
  3319  0041B2  0E00               	movlw	0
  3320  0041B4  6E81               	movwf	129,c	;volatile
  3321  0041B6                     
  3322                           ; BSR set to: 0
  3323                           ;SensorNegPosExactos.c: 546:         _delay((unsigned long)((100)*(8000000/4000.0)));
  3324  0041B6  0E02               	movlw	2
  3325  0041B8  6E02               	movwf	(??_Alarma_LED+1)^0,c
  3326  0041BA  0E04               	movlw	4
  3327  0041BC  6E01               	movwf	??_Alarma_LED^0,c
  3328  0041BE  0EBA               	movlw	186
  3329  0041C0                     u6977:
  3330  0041C0  2EE8               	decfsz	wreg,f,c
  3331  0041C2  D7FE               	bra	u6977
  3332  0041C4  2E01               	decfsz	??_Alarma_LED^0,f,c
  3333  0041C6  D7FC               	bra	u6977
  3334  0041C8  2E02               	decfsz	(??_Alarma_LED+1)^0,f,c
  3335  0041CA  D7FA               	bra	u6977
  3336  0041CC  D000               	nop2	
  3337  0041CE                     l198:
  3338  0041CE  0012               	return		;funcret
  3339  0041D0                     __end_of_Alarma_LED:
  3340                           	callstack 0
  3341                           
  3342 ;; *************** function _Alarma *****************
  3343 ;; Defined at:
  3344 ;;		line 460 in file "SensorNegPosExactos.c"
  3345 ;; Parameters:    Size  Location     Type
  3346 ;;		None
  3347 ;; Auto vars:     Size  Location     Type
  3348 ;;		None
  3349 ;; Return value:  Size  Location     Type
  3350 ;;                  1    wreg      void 
  3351 ;; Registers used:
  3352 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  3353 ;; Tracked objects:
  3354 ;;		On entry : 0/0
  3355 ;;		On exit  : 0/0
  3356 ;;		Unchanged: 0/0
  3357 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  3358 ;;      Params:         0       0       0       0       0       0       0       0       0
  3359 ;;      Locals:         0       0       0       0       0       0       0       0       0
  3360 ;;      Temps:          0       2       0       0       0       0       0       0       0
  3361 ;;      Totals:         0       2       0       0       0       0       0       0       0
  3362 ;;Total ram usage:        2 bytes
  3363 ;; Hardware stack levels used:    1
  3364 ;; Hardware stack levels required when called:   10
  3365 ;; This function calls:
  3366 ;;		_Cronometro
  3367 ;;		___awdiv
  3368 ;;		___awmod
  3369 ;;		_printf
  3370 ;;		_putcm
  3371 ;; This function is called by:
  3372 ;;		_main
  3373 ;; This function uses a non-reentrant model
  3374 ;;
  3375                           
  3376                           	psect	text14
  3377  003126                     __ptext14:
  3378                           	callstack 0
  3379  003126                     _Alarma:
  3380                           	callstack 20
  3381  003126                     
  3382                           ;SensorNegPosExactos.c: 462:     if(PORTAbits.RA1 == 0)
  3383  003126  B280               	btfsc	128,1,c	;volatile
  3384  003128  EF98  F018         	goto	u6691
  3385  00312C  EF9A  F018         	goto	u6690
  3386  003130                     u6691:
  3387  003130  EFAD  F018         	goto	l179
  3388  003134                     u6690:
  3389  003134                     
  3390                           ;SensorNegPosExactos.c: 463:     {;SensorNegPosExactos.c: 464:         PORTCbits.RC6 = 0
      +                          ;
  3391  003134  9C82               	bcf	130,6,c	;volatile
  3392  003136                     
  3393                           ;SensorNegPosExactos.c: 465:         _delay((unsigned long)((300)*(8000000/4000.0)));
  3394  003136  0E04               	movlw	4
  3395  003138  0100               	movlb	0	; () banked
  3396  00313A  6FC9               	movwf	(??_Alarma+1)& (0+255),b
  3397  00313C  0E0C               	movlw	12
  3398  00313E  6FC8               	movwf	??_Alarma& (0+255),b
  3399  003140  0E33               	movlw	51
  3400  003142                     u6987:
  3401  003142  2EE8               	decfsz	wreg,f,c
  3402  003144  D7FE               	bra	u6987
  3403  003146  2FC8               	decfsz	??_Alarma& (0+255),f,b
  3404  003148  D7FC               	bra	u6987
  3405  00314A  2FC9               	decfsz	(??_Alarma+1)& (0+255),f,b
  3406  00314C  D7FA               	bra	u6987
  3407  00314E  D000               	nop2	
  3408  003150                     
  3409                           ;SensorNegPosExactos.c: 466:         INTCONbits.GIE = 0;
  3410  003150  9EF2               	bcf	242,7,c	;volatile
  3411  003152                     
  3412                           ;SensorNegPosExactos.c: 467:         Cronometro();
  3413  003152  EC97  F024         	call	_Cronometro	;wreg free
  3414                           
  3415                           ;SensorNegPosExactos.c: 468:     }
  3416  003156  EFDA  F019         	goto	l190
  3417  00315A                     l179:
  3418                           
  3419                           ;SensorNegPosExactos.c: 470:     {;SensorNegPosExactos.c: 471:         PORTCbits.RC6 = 1
      +                          ;
  3420  00315A  8C82               	bsf	130,6,c	;volatile
  3421  00315C                     
  3422                           ;SensorNegPosExactos.c: 472:         _delay((unsigned long)((300)*(8000000/4000.0)));
  3423  00315C  0E04               	movlw	4
  3424  00315E  0100               	movlb	0	; () banked
  3425  003160  6FC9               	movwf	(??_Alarma+1)& (0+255),b
  3426  003162  0E0C               	movlw	12
  3427  003164  6FC8               	movwf	??_Alarma& (0+255),b
  3428  003166  0E33               	movlw	51
  3429  003168                     u6997:
  3430  003168  2EE8               	decfsz	wreg,f,c
  3431  00316A  D7FE               	bra	u6997
  3432  00316C  2FC8               	decfsz	??_Alarma& (0+255),f,b
  3433  00316E  D7FC               	bra	u6997
  3434  003170  2FC9               	decfsz	(??_Alarma+1)& (0+255),f,b
  3435  003172  D7FA               	bra	u6997
  3436  003174  D000               	nop2	
  3437  003176                     
  3438                           ;SensorNegPosExactos.c: 474:         putcm(0xC2);
  3439  003176  0EC2               	movlw	194
  3440  003178  EC3A  F027         	call	_putcm
  3441  00317C                     
  3442                           ;SensorNegPosExactos.c: 475:         printf(" Modo Alarma ");
  3443  00317C  0E59               	movlw	low STR_9
  3444  00317E  0100               	movlb	0	; () banked
  3445  003180  6FB6               	movwf	printf@fmt& (0+255),b
  3446  003182  0E08               	movlw	high STR_9
  3447  003184  6FB7               	movwf	(printf@fmt+1)& (0+255),b
  3448  003186  ECEA  F027         	call	_printf	;wreg free
  3449  00318A                     
  3450                           ;SensorNegPosExactos.c: 476:         _delay((unsigned long)((1000)*(8000000/4000.0)));
  3451  00318A  0E0B               	movlw	11
  3452  00318C  0100               	movlb	0	; () banked
  3453  00318E  6FC9               	movwf	(??_Alarma+1)& (0+255),b
  3454  003190  0E26               	movlw	38
  3455  003192  6FC8               	movwf	??_Alarma& (0+255),b
  3456  003194  0E5D               	movlw	93
  3457  003196                     u7007:
  3458  003196  2EE8               	decfsz	wreg,f,c
  3459  003198  D7FE               	bra	u7007
  3460  00319A  2FC8               	decfsz	??_Alarma& (0+255),f,b
  3461  00319C  D7FC               	bra	u7007
  3462  00319E  2FC9               	decfsz	(??_Alarma+1)& (0+255),f,b
  3463  0031A0  D7FA               	bra	u7007
  3464  0031A2  D000               	nop2	
  3465  0031A4                     
  3466                           ;SensorNegPosExactos.c: 478:         INTCONbits.GIE = 1;
  3467  0031A4  8EF2               	bsf	242,7,c	;volatile
  3468  0031A6                     
  3469                           ;SensorNegPosExactos.c: 479:         INTCONbits.PEIE = 1;
  3470  0031A6  8CF2               	bsf	242,6,c	;volatile
  3471                           
  3472                           ;SensorNegPosExactos.c: 480:         while(PORTAbits.RA1 == 1)
  3473  0031A8  EFC8  F019         	goto	l5142
  3474  0031AC                     l182:
  3475                           
  3476                           ;SensorNegPosExactos.c: 481:   {;SensorNegPosExactos.c: 482:             if(PORTAbits.RA
      +                          3 == 1)
  3477  0031AC  A680               	btfss	128,3,c	;volatile
  3478  0031AE  EFDB  F018         	goto	u6701
  3479  0031B2  EFDD  F018         	goto	u6700
  3480  0031B6                     u6701:
  3481  0031B6  EF1F  F019         	goto	l5118
  3482  0031BA                     u6700:
  3483  0031BA                     
  3484                           ;SensorNegPosExactos.c: 483:    {;SensorNegPosExactos.c: 484:                 DH = HORA 
      +                          / 10;
  3485  0031BA  C0E8  F006         	movff	_HORA,___awdiv@dividend
  3486  0031BE  C0E9  F007         	movff	_HORA+1,___awdiv@dividend+1
  3487  0031C2  0E00               	movlw	0
  3488  0031C4  6E09               	movwf	(___awdiv@divisor+1)^0,c
  3489  0031C6  0E0A               	movlw	10
  3490  0031C8  6E08               	movwf	___awdiv@divisor^0,c
  3491  0031CA  EC88  F023         	call	___awdiv	;wreg free
  3492  0031CE  C006  F0E4         	movff	?___awdiv,_DH
  3493  0031D2  C007  F0E5         	movff	?___awdiv+1,_DH+1
  3494                           
  3495                           ;SensorNegPosExactos.c: 485:                 UH = HORA % 10;
  3496  0031D6  C0E8  F001         	movff	_HORA,___awmod@dividend
  3497  0031DA  C0E9  F002         	movff	_HORA+1,___awmod@dividend+1
  3498  0031DE  0E00               	movlw	0
  3499  0031E0  6E04               	movwf	(___awmod@divisor+1)^0,c
  3500  0031E2  0E0A               	movlw	10
  3501  0031E4  6E03               	movwf	___awmod@divisor^0,c
  3502  0031E6  ECEA  F023         	call	___awmod	;wreg free
  3503  0031EA  C001  F0E2         	movff	?___awmod,_UH
  3504  0031EE  C002  F0E3         	movff	?___awmod+1,_UH+1
  3505  0031F2                     
  3506                           ;SensorNegPosExactos.c: 486:                 _delay((unsigned long)((500)*(8000000/4000.
      +                          0)));
  3507  0031F2  0E06               	movlw	6
  3508  0031F4  0100               	movlb	0	; () banked
  3509  0031F6  6FC9               	movwf	(??_Alarma+1)& (0+255),b
  3510  0031F8  0E13               	movlw	19
  3511  0031FA  6FC8               	movwf	??_Alarma& (0+255),b
  3512  0031FC  0EAD               	movlw	173
  3513  0031FE                     u7017:
  3514  0031FE  2EE8               	decfsz	wreg,f,c
  3515  003200  D7FE               	bra	u7017
  3516  003202  2FC8               	decfsz	??_Alarma& (0+255),f,b
  3517  003204  D7FC               	bra	u7017
  3518  003206  2FC9               	decfsz	(??_Alarma+1)& (0+255),f,b
  3519  003208  D7FA               	bra	u7017
  3520  00320A  D000               	nop2	
  3521  00320C                     
  3522                           ;SensorNegPosExactos.c: 487:                 HORA = HORA + 1;
  3523  00320C  0E01               	movlw	1
  3524  00320E  0100               	movlb	0	; () banked
  3525  003210  25E8               	addwf	_HORA& (0+255),w,b
  3526  003212  6FE8               	movwf	_HORA& (0+255),b
  3527  003214  0E00               	movlw	0
  3528  003216  21E9               	addwfc	(_HORA+1)& (0+255),w,b
  3529  003218  6FE9               	movwf	(_HORA+1)& (0+255),b
  3530  00321A                     
  3531                           ; BSR set to: 0
  3532                           ;SensorNegPosExactos.c: 488:                 if(HORA > 23)
  3533  00321A  BFE9               	btfsc	(_HORA+1)& (0+255),7,b
  3534  00321C  EF19  F019         	goto	u6711
  3535  003220  51E9               	movf	(_HORA+1)& (0+255),w,b
  3536  003222  E109               	bnz	u6710
  3537  003224  0E18               	movlw	24
  3538  003226  5DE8               	subwf	_HORA& (0+255),w,b
  3539  003228  A0D8               	btfss	status,0,c
  3540  00322A  EF19  F019         	goto	u6711
  3541  00322E  EF1B  F019         	goto	u6710
  3542  003232                     u6711:
  3543  003232  EF1F  F019         	goto	l5118
  3544  003236                     u6710:
  3545  003236                     
  3546                           ; BSR set to: 0
  3547                           ;SensorNegPosExactos.c: 489:                 {;SensorNegPosExactos.c: 490:              
      +                                 HORA=0;
  3548  003236  0E00               	movlw	0
  3549  003238  6FE9               	movwf	(_HORA+1)& (0+255),b
  3550  00323A  0E00               	movlw	0
  3551  00323C  6FE8               	movwf	_HORA& (0+255),b
  3552  00323E                     l5118:
  3553                           
  3554                           ;SensorNegPosExactos.c: 493:    if(PORTAbits.RA5 == 1)
  3555  00323E  AA80               	btfss	128,5,c	;volatile
  3556  003240  EF24  F019         	goto	u6721
  3557  003244  EF26  F019         	goto	u6720
  3558  003248                     u6721:
  3559  003248  EF68  F019         	goto	l5130
  3560  00324C                     u6720:
  3561  00324C                     
  3562                           ;SensorNegPosExactos.c: 494:             {;SensorNegPosExactos.c: 495:                 D
      +                          M = MINUTO / 10;
  3563  00324C  C0E6  F006         	movff	_MINUTO,___awdiv@dividend
  3564  003250  C0E7  F007         	movff	_MINUTO+1,___awdiv@dividend+1
  3565  003254  0E00               	movlw	0
  3566  003256  6E09               	movwf	(___awdiv@divisor+1)^0,c
  3567  003258  0E0A               	movlw	10
  3568  00325A  6E08               	movwf	___awdiv@divisor^0,c
  3569  00325C  EC88  F023         	call	___awdiv	;wreg free
  3570  003260  C006  F0E0         	movff	?___awdiv,_DM
  3571  003264  C007  F0E1         	movff	?___awdiv+1,_DM+1
  3572                           
  3573                           ;SensorNegPosExactos.c: 496:                 UM = MINUTO % 10;
  3574  003268  C0E6  F001         	movff	_MINUTO,___awmod@dividend
  3575  00326C  C0E7  F002         	movff	_MINUTO+1,___awmod@dividend+1
  3576  003270  0E00               	movlw	0
  3577  003272  6E04               	movwf	(___awmod@divisor+1)^0,c
  3578  003274  0E0A               	movlw	10
  3579  003276  6E03               	movwf	___awmod@divisor^0,c
  3580  003278  ECEA  F023         	call	___awmod	;wreg free
  3581  00327C  C001  F0DE         	movff	?___awmod,_UM
  3582  003280  C002  F0DF         	movff	?___awmod+1,_UM+1
  3583  003284                     
  3584                           ;SensorNegPosExactos.c: 497:                 _delay((unsigned long)((500)*(8000000/4000.
      +                          0)));
  3585  003284  0E06               	movlw	6
  3586  003286  0100               	movlb	0	; () banked
  3587  003288  6FC9               	movwf	(??_Alarma+1)& (0+255),b
  3588  00328A  0E13               	movlw	19
  3589  00328C  6FC8               	movwf	??_Alarma& (0+255),b
  3590  00328E  0EAD               	movlw	173
  3591  003290                     u7027:
  3592  003290  2EE8               	decfsz	wreg,f,c
  3593  003292  D7FE               	bra	u7027
  3594  003294  2FC8               	decfsz	??_Alarma& (0+255),f,b
  3595  003296  D7FC               	bra	u7027
  3596  003298  2FC9               	decfsz	(??_Alarma+1)& (0+255),f,b
  3597  00329A  D7FA               	bra	u7027
  3598  00329C  D000               	nop2	
  3599  00329E                     
  3600                           ;SensorNegPosExactos.c: 498:                 MINUTO = MINUTO + 1;
  3601  00329E  0E01               	movlw	1
  3602  0032A0  0100               	movlb	0	; () banked
  3603  0032A2  25E6               	addwf	_MINUTO& (0+255),w,b
  3604  0032A4  6FE6               	movwf	_MINUTO& (0+255),b
  3605  0032A6  0E00               	movlw	0
  3606  0032A8  21E7               	addwfc	(_MINUTO+1)& (0+255),w,b
  3607  0032AA  6FE7               	movwf	(_MINUTO+1)& (0+255),b
  3608  0032AC                     
  3609                           ; BSR set to: 0
  3610                           ;SensorNegPosExactos.c: 499:                 if(MINUTO > 59)
  3611  0032AC  BFE7               	btfsc	(_MINUTO+1)& (0+255),7,b
  3612  0032AE  EF62  F019         	goto	u6731
  3613  0032B2  51E7               	movf	(_MINUTO+1)& (0+255),w,b
  3614  0032B4  E109               	bnz	u6730
  3615  0032B6  0E3C               	movlw	60
  3616  0032B8  5DE6               	subwf	_MINUTO& (0+255),w,b
  3617  0032BA  A0D8               	btfss	status,0,c
  3618  0032BC  EF62  F019         	goto	u6731
  3619  0032C0  EF64  F019         	goto	u6730
  3620  0032C4                     u6731:
  3621  0032C4  EF68  F019         	goto	l5130
  3622  0032C8                     u6730:
  3623  0032C8                     
  3624                           ; BSR set to: 0
  3625                           ;SensorNegPosExactos.c: 500:                 {;SensorNegPosExactos.c: 501:              
      +                                 MINUTO = 0;
  3626  0032C8  0E00               	movlw	0
  3627  0032CA  6FE7               	movwf	(_MINUTO+1)& (0+255),b
  3628  0032CC  0E00               	movlw	0
  3629  0032CE  6FE6               	movwf	_MINUTO& (0+255),b
  3630  0032D0                     l5130:
  3631                           
  3632                           ;SensorNegPosExactos.c: 504:             if(HORA < 12)
  3633  0032D0  0100               	movlb	0	; () banked
  3634  0032D2  BFE9               	btfsc	(_HORA+1)& (0+255),7,b
  3635  0032D4  EF77  F019         	goto	u6740
  3636  0032D8  51E9               	movf	(_HORA+1)& (0+255),w,b
  3637  0032DA  E107               	bnz	u6741
  3638  0032DC  0E0C               	movlw	12
  3639  0032DE  5DE8               	subwf	_HORA& (0+255),w,b
  3640  0032E0  B0D8               	btfsc	status,0,c
  3641  0032E2  EF75  F019         	goto	u6741
  3642  0032E6  EF77  F019         	goto	u6740
  3643  0032EA                     u6741:
  3644  0032EA  EF9B  F019         	goto	l5136
  3645  0032EE                     u6740:
  3646  0032EE                     
  3647                           ; BSR set to: 0
  3648                           ;SensorNegPosExactos.c: 505:             {;SensorNegPosExactos.c: 506:                 p
      +                          utcm(0xC2);
  3649  0032EE  0EC2               	movlw	194
  3650  0032F0  EC3A  F027         	call	_putcm
  3651  0032F4                     
  3652                           ;SensorNegPosExactos.c: 507:                 printf("%d%d:%d%d:%d%d A.M",DH, UH, DM, UM,
      +                           DS, US);
  3653  0032F4  0E01               	movlw	low STR_7
  3654  0032F6  0100               	movlb	0	; () banked
  3655  0032F8  6FB6               	movwf	printf@fmt& (0+255),b
  3656  0032FA  0E08               	movlw	high STR_7
  3657  0032FC  6FB7               	movwf	(printf@fmt+1)& (0+255),b
  3658  0032FE  C0E4  F0B8         	movff	_DH,?_printf+2
  3659  003302  C0E5  F0B9         	movff	_DH+1,?_printf+3
  3660  003306  C0E2  F0BA         	movff	_UH,?_printf+4
  3661  00330A  C0E3  F0BB         	movff	_UH+1,?_printf+5
  3662  00330E  C0E0  F0BC         	movff	_DM,?_printf+6
  3663  003312  C0E1  F0BD         	movff	_DM+1,?_printf+7
  3664  003316  C0DE  F0BE         	movff	_UM,?_printf+8
  3665  00331A  C0DF  F0BF         	movff	_UM+1,?_printf+9
  3666  00331E  C0DC  F0C0         	movff	_DS,?_printf+10
  3667  003322  C0DD  F0C1         	movff	_DS+1,?_printf+11
  3668  003326  C0DA  F0C2         	movff	_US,?_printf+12
  3669  00332A  C0DB  F0C3         	movff	_US+1,?_printf+13
  3670  00332E  ECEA  F027         	call	_printf	;wreg free
  3671                           
  3672                           ;SensorNegPosExactos.c: 508:             }
  3673  003332  EFC8  F019         	goto	l5142
  3674  003336                     l5136:
  3675                           
  3676                           ; BSR set to: 0
  3677                           ;SensorNegPosExactos.c: 510:             {;SensorNegPosExactos.c: 511:                 c
      +                          ambio = 12 - HORA;
  3678  003336  51E8               	movf	_HORA& (0+255),w,b
  3679  003338  080C               	sublw	12
  3680  00333A  0101               	movlb	1	; () banked
  3681  00333C  6F1E               	movwf	_cambio& (0+255),b
  3682  00333E  0100               	movlb	0	; () banked
  3683  003340  51E9               	movf	(_HORA+1)& (0+255),w,b
  3684  003342  A0D8               	btfss	status,0,c
  3685  003344  2AE8               	incf	wreg,f,c
  3686  003346  0800               	sublw	0
  3687  003348  0101               	movlb	1	; () banked
  3688  00334A  6F1F               	movwf	(_cambio+1)& (0+255),b
  3689  00334C                     
  3690                           ; BSR set to: 1
  3691                           ;SensorNegPosExactos.c: 512:                 putcm(0xC2);
  3692  00334C  0EC2               	movlw	194
  3693  00334E  EC3A  F027         	call	_putcm
  3694  003352                     
  3695                           ;SensorNegPosExactos.c: 513:                 printf("%d%d:%d%d:%d%d P.M",DH, UH, DM, UM,
      +                           DS, US);
  3696  003352  0E14               	movlw	low STR_8
  3697  003354  0100               	movlb	0	; () banked
  3698  003356  6FB6               	movwf	printf@fmt& (0+255),b
  3699  003358  0E08               	movlw	high STR_8
  3700  00335A  6FB7               	movwf	(printf@fmt+1)& (0+255),b
  3701  00335C  C0E4  F0B8         	movff	_DH,?_printf+2
  3702  003360  C0E5  F0B9         	movff	_DH+1,?_printf+3
  3703  003364  C0E2  F0BA         	movff	_UH,?_printf+4
  3704  003368  C0E3  F0BB         	movff	_UH+1,?_printf+5
  3705  00336C  C0E0  F0BC         	movff	_DM,?_printf+6
  3706  003370  C0E1  F0BD         	movff	_DM+1,?_printf+7
  3707  003374  C0DE  F0BE         	movff	_UM,?_printf+8
  3708  003378  C0DF  F0BF         	movff	_UM+1,?_printf+9
  3709  00337C  C0DC  F0C0         	movff	_DS,?_printf+10
  3710  003380  C0DD  F0C1         	movff	_DS+1,?_printf+11
  3711  003384  C0DA  F0C2         	movff	_US,?_printf+12
  3712  003388  C0DB  F0C3         	movff	_US+1,?_printf+13
  3713  00338C  ECEA  F027         	call	_printf	;wreg free
  3714  003390                     l5142:
  3715                           
  3716                           ;SensorNegPosExactos.c: 480:         while(PORTAbits.RA1 == 1)
  3717  003390  B280               	btfsc	128,1,c	;volatile
  3718  003392  EFCD  F019         	goto	u6751
  3719  003396  EFCF  F019         	goto	u6750
  3720  00339A                     u6751:
  3721  00339A  EFD6  F018         	goto	l182
  3722  00339E                     u6750:
  3723  00339E                     
  3724                           ;SensorNegPosExactos.c: 516:   DS = 0;
  3725  00339E  0E00               	movlw	0
  3726  0033A0  0100               	movlb	0	; () banked
  3727  0033A2  6FDD               	movwf	(_DS+1)& (0+255),b
  3728  0033A4  0E00               	movlw	0
  3729  0033A6  6FDC               	movwf	_DS& (0+255),b
  3730                           
  3731                           ;SensorNegPosExactos.c: 517:   US = 0;
  3732  0033A8  0E00               	movlw	0
  3733  0033AA  6FDB               	movwf	(_US+1)& (0+255),b
  3734  0033AC  0E00               	movlw	0
  3735  0033AE  6FDA               	movwf	_US& (0+255),b
  3736  0033B0                     
  3737                           ; BSR set to: 0
  3738                           ;SensorNegPosExactos.c: 519:         INTCONbits.GIE = 1;
  3739  0033B0  8EF2               	bsf	242,7,c	;volatile
  3740  0033B2                     
  3741                           ; BSR set to: 0
  3742                           ;SensorNegPosExactos.c: 520:         INTCONbits.PEIE = 1;
  3743  0033B2  8CF2               	bsf	242,6,c	;volatile
  3744  0033B4                     l190:
  3745  0033B4  0012               	return		;funcret
  3746  0033B6                     __end_of_Alarma:
  3747                           	callstack 0
  3748                           
  3749 ;; *************** function _Cronometro *****************
  3750 ;; Defined at:
  3751 ;;		line 436 in file "SensorNegPosExactos.c"
  3752 ;; Parameters:    Size  Location     Type
  3753 ;;		None
  3754 ;; Auto vars:     Size  Location     Type
  3755 ;;		None
  3756 ;; Return value:  Size  Location     Type
  3757 ;;                  1    wreg      void 
  3758 ;; Registers used:
  3759 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  3760 ;; Tracked objects:
  3761 ;;		On entry : 0/0
  3762 ;;		On exit  : 0/0
  3763 ;;		Unchanged: 0/0
  3764 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  3765 ;;      Params:         0       0       0       0       0       0       0       0       0
  3766 ;;      Locals:         0       0       0       0       0       0       0       0       0
  3767 ;;      Temps:          2       0       0       0       0       0       0       0       0
  3768 ;;      Totals:         2       0       0       0       0       0       0       0       0
  3769 ;;Total ram usage:        2 bytes
  3770 ;; Hardware stack levels used:    1
  3771 ;; Hardware stack levels required when called:    9
  3772 ;; This function calls:
  3773 ;;		_Mostrar_Reloj
  3774 ;; This function is called by:
  3775 ;;		_Alarma
  3776 ;; This function uses a non-reentrant model
  3777 ;;
  3778                           
  3779                           	psect	text15
  3780  00492E                     __ptext15:
  3781                           	callstack 0
  3782  00492E                     _Cronometro:
  3783                           	callstack 20
  3784  00492E                     
  3785                           ;SensorNegPosExactos.c: 438:     Mostrar_Reloj();
  3786  00492E  EC39  F01F         	call	_Mostrar_Reloj	;wreg free
  3787  004932                     
  3788                           ;SensorNegPosExactos.c: 439:     segundos++;
  3789  004932  0100               	movlb	0	; () banked
  3790  004934  4BF6               	infsnz	_segundos& (0+255),f,b
  3791  004936  2BF7               	incf	(_segundos+1)& (0+255),f,b
  3792  004938                     
  3793                           ; BSR set to: 0
  3794                           ;SensorNegPosExactos.c: 440:  if(segundos > 59)
  3795  004938  BFF7               	btfsc	(_segundos+1)& (0+255),7,b
  3796  00493A  EFA8  F024         	goto	u6511
  3797  00493E  51F7               	movf	(_segundos+1)& (0+255),w,b
  3798  004940  E109               	bnz	u6510
  3799  004942  0E3C               	movlw	60
  3800  004944  5DF6               	subwf	_segundos& (0+255),w,b
  3801  004946  A0D8               	btfss	status,0,c
  3802  004948  EFA8  F024         	goto	u6511
  3803  00494C  EFAA  F024         	goto	u6510
  3804  004950                     u6511:
  3805  004950  EFD6  F024         	goto	l4910
  3806  004954                     u6510:
  3807  004954                     
  3808                           ; BSR set to: 0
  3809                           ;SensorNegPosExactos.c: 441:  {;SensorNegPosExactos.c: 442:   segundos = 0;
  3810  004954  0E00               	movlw	0
  3811  004956  6FF7               	movwf	(_segundos+1)& (0+255),b
  3812  004958  0E00               	movlw	0
  3813  00495A  6FF6               	movwf	_segundos& (0+255),b
  3814  00495C                     
  3815                           ; BSR set to: 0
  3816                           ;SensorNegPosExactos.c: 443:   minutos++;
  3817  00495C  4BFA               	infsnz	_minutos& (0+255),f,b
  3818  00495E  2BFB               	incf	(_minutos+1)& (0+255),f,b
  3819  004960                     
  3820                           ; BSR set to: 0
  3821                           ;SensorNegPosExactos.c: 444:   if(minutos > 59)
  3822  004960  BFFB               	btfsc	(_minutos+1)& (0+255),7,b
  3823  004962  EFBC  F024         	goto	u6521
  3824  004966  51FB               	movf	(_minutos+1)& (0+255),w,b
  3825  004968  E109               	bnz	u6520
  3826  00496A  0E3C               	movlw	60
  3827  00496C  5DFA               	subwf	_minutos& (0+255),w,b
  3828  00496E  A0D8               	btfss	status,0,c
  3829  004970  EFBC  F024         	goto	u6521
  3830  004974  EFBE  F024         	goto	u6520
  3831  004978                     u6521:
  3832  004978  EFD6  F024         	goto	l4910
  3833  00497C                     u6520:
  3834  00497C                     
  3835                           ; BSR set to: 0
  3836                           ;SensorNegPosExactos.c: 445:   {;SensorNegPosExactos.c: 446:    minutos = 0;
  3837  00497C  0E00               	movlw	0
  3838  00497E  6FFB               	movwf	(_minutos+1)& (0+255),b
  3839  004980  0E00               	movlw	0
  3840  004982  6FFA               	movwf	_minutos& (0+255),b
  3841  004984                     
  3842                           ; BSR set to: 0
  3843                           ;SensorNegPosExactos.c: 447:    horas++;
  3844  004984  4BF8               	infsnz	_horas& (0+255),f,b
  3845  004986  2BF9               	incf	(_horas+1)& (0+255),f,b
  3846  004988                     
  3847                           ; BSR set to: 0
  3848                           ;SensorNegPosExactos.c: 448:    if(horas > 23)
  3849  004988  BFF9               	btfsc	(_horas+1)& (0+255),7,b
  3850  00498A  EFD0  F024         	goto	u6531
  3851  00498E  51F9               	movf	(_horas+1)& (0+255),w,b
  3852  004990  E109               	bnz	u6530
  3853  004992  0E18               	movlw	24
  3854  004994  5DF8               	subwf	_horas& (0+255),w,b
  3855  004996  A0D8               	btfss	status,0,c
  3856  004998  EFD0  F024         	goto	u6531
  3857  00499C  EFD2  F024         	goto	u6530
  3858  0049A0                     u6531:
  3859  0049A0  EFD6  F024         	goto	l4910
  3860  0049A4                     u6530:
  3861  0049A4                     
  3862                           ; BSR set to: 0
  3863                           ;SensorNegPosExactos.c: 449:    {;SensorNegPosExactos.c: 450:     horas=0;
  3864  0049A4  0E00               	movlw	0
  3865  0049A6  6FF9               	movwf	(_horas+1)& (0+255),b
  3866  0049A8  0E00               	movlw	0
  3867  0049AA  6FF8               	movwf	_horas& (0+255),b
  3868  0049AC                     l4910:
  3869                           
  3870                           ; BSR set to: 0
  3871                           ;SensorNegPosExactos.c: 454:     TMR0L = 0xFF;
  3872  0049AC  68D6               	setf	214,c	;volatile
  3873  0049AE                     
  3874                           ; BSR set to: 0
  3875                           ;SensorNegPosExactos.c: 455:     _delay((unsigned long)((1000)*(8000000/4000.0)));
  3876  0049AE  0E0B               	movlw	11
  3877  0049B0  6E5F               	movwf	(??_Cronometro+1)^0,c
  3878  0049B2  0E26               	movlw	38
  3879  0049B4  6E5E               	movwf	??_Cronometro^0,c
  3880  0049B6  0E5E               	movlw	94
  3881  0049B8                     u7037:
  3882  0049B8  2EE8               	decfsz	wreg,f,c
  3883  0049BA  D7FE               	bra	u7037
  3884  0049BC  2E5E               	decfsz	??_Cronometro^0,f,c
  3885  0049BE  D7FC               	bra	u7037
  3886  0049C0  2E5F               	decfsz	(??_Cronometro+1)^0,f,c
  3887  0049C2  D7FA               	bra	u7037
  3888  0049C4  0012               	return		;funcret
  3889  0049C6                     __end_of_Cronometro:
  3890                           	callstack 0
  3891                           
  3892 ;; *************** function _Mostrar_Reloj *****************
  3893 ;; Defined at:
  3894 ;;		line 410 in file "SensorNegPosExactos.c"
  3895 ;; Parameters:    Size  Location     Type
  3896 ;;		None
  3897 ;; Auto vars:     Size  Location     Type
  3898 ;;		None
  3899 ;; Return value:  Size  Location     Type
  3900 ;;                  1    wreg      void 
  3901 ;; Registers used:
  3902 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  3903 ;; Tracked objects:
  3904 ;;		On entry : 0/0
  3905 ;;		On exit  : 0/0
  3906 ;;		Unchanged: 0/0
  3907 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  3908 ;;      Params:         0       0       0       0       0       0       0       0       0
  3909 ;;      Locals:         0       0       0       0       0       0       0       0       0
  3910 ;;      Temps:          0       0       0       0       0       0       0       0       0
  3911 ;;      Totals:         0       0       0       0       0       0       0       0       0
  3912 ;;Total ram usage:        0 bytes
  3913 ;; Hardware stack levels used:    1
  3914 ;; Hardware stack levels required when called:    8
  3915 ;; This function calls:
  3916 ;;		___awdiv
  3917 ;;		___awmod
  3918 ;;		_printf
  3919 ;;		_putcm
  3920 ;; This function is called by:
  3921 ;;		_Cronometro
  3922 ;; This function uses a non-reentrant model
  3923 ;;
  3924                           
  3925                           	psect	text16
  3926  003E72                     __ptext16:
  3927                           	callstack 0
  3928  003E72                     _Mostrar_Reloj:
  3929                           	callstack 20
  3930  003E72                     
  3931                           ;SensorNegPosExactos.c: 413:  Decenas_Horas = horas / 10;
  3932  003E72  C0F8  F006         	movff	_horas,___awdiv@dividend
  3933  003E76  C0F9  F007         	movff	_horas+1,___awdiv@dividend+1
  3934  003E7A  0E00               	movlw	0
  3935  003E7C  6E09               	movwf	(___awdiv@divisor+1)^0,c
  3936  003E7E  0E0A               	movlw	10
  3937  003E80  6E08               	movwf	___awdiv@divisor^0,c
  3938  003E82  EC88  F023         	call	___awdiv	;wreg free
  3939  003E86  C006  F0F2         	movff	?___awdiv,_Decenas_Horas
  3940  003E8A  C007  F0F3         	movff	?___awdiv+1,_Decenas_Horas+1
  3941                           
  3942                           ;SensorNegPosExactos.c: 414:  Unidades_Horas = horas % 10;
  3943  003E8E  C0F8  F001         	movff	_horas,___awmod@dividend
  3944  003E92  C0F9  F002         	movff	_horas+1,___awmod@dividend+1
  3945  003E96  0E00               	movlw	0
  3946  003E98  6E04               	movwf	(___awmod@divisor+1)^0,c
  3947  003E9A  0E0A               	movlw	10
  3948  003E9C  6E03               	movwf	___awmod@divisor^0,c
  3949  003E9E  ECEA  F023         	call	___awmod	;wreg free
  3950  003EA2  C001  F0F4         	movff	?___awmod,_Unidades_Horas
  3951  003EA6  C002  F0F5         	movff	?___awmod+1,_Unidades_Horas+1
  3952                           
  3953                           ;SensorNegPosExactos.c: 415:  Decenas_Minutos = minutos / 10;
  3954  003EAA  C0FA  F006         	movff	_minutos,___awdiv@dividend
  3955  003EAE  C0FB  F007         	movff	_minutos+1,___awdiv@dividend+1
  3956  003EB2  0E00               	movlw	0
  3957  003EB4  6E09               	movwf	(___awdiv@divisor+1)^0,c
  3958  003EB6  0E0A               	movlw	10
  3959  003EB8  6E08               	movwf	___awdiv@divisor^0,c
  3960  003EBA  EC88  F023         	call	___awdiv	;wreg free
  3961  003EBE  C006  F0EE         	movff	?___awdiv,_Decenas_Minutos
  3962  003EC2  C007  F0EF         	movff	?___awdiv+1,_Decenas_Minutos+1
  3963                           
  3964                           ;SensorNegPosExactos.c: 416:  Unidades_Minutos = minutos % 10;
  3965  003EC6  C0FA  F001         	movff	_minutos,___awmod@dividend
  3966  003ECA  C0FB  F002         	movff	_minutos+1,___awmod@dividend+1
  3967  003ECE  0E00               	movlw	0
  3968  003ED0  6E04               	movwf	(___awmod@divisor+1)^0,c
  3969  003ED2  0E0A               	movlw	10
  3970  003ED4  6E03               	movwf	___awmod@divisor^0,c
  3971  003ED6  ECEA  F023         	call	___awmod	;wreg free
  3972  003EDA  C001  F0F0         	movff	?___awmod,_Unidades_Minutos
  3973  003EDE  C002  F0F1         	movff	?___awmod+1,_Unidades_Minutos+1
  3974                           
  3975                           ;SensorNegPosExactos.c: 417:  Decenas_Segundos = segundos / 10;
  3976  003EE2  C0F6  F006         	movff	_segundos,___awdiv@dividend
  3977  003EE6  C0F7  F007         	movff	_segundos+1,___awdiv@dividend+1
  3978  003EEA  0E00               	movlw	0
  3979  003EEC  6E09               	movwf	(___awdiv@divisor+1)^0,c
  3980  003EEE  0E0A               	movlw	10
  3981  003EF0  6E08               	movwf	___awdiv@divisor^0,c
  3982  003EF2  EC88  F023         	call	___awdiv	;wreg free
  3983  003EF6  C006  F0EA         	movff	?___awdiv,_Decenas_Segundos
  3984  003EFA  C007  F0EB         	movff	?___awdiv+1,_Decenas_Segundos+1
  3985                           
  3986                           ;SensorNegPosExactos.c: 418:  Unidades_Segundos = segundos % 10;
  3987  003EFE  C0F6  F001         	movff	_segundos,___awmod@dividend
  3988  003F02  C0F7  F002         	movff	_segundos+1,___awmod@dividend+1
  3989  003F06  0E00               	movlw	0
  3990  003F08  6E04               	movwf	(___awmod@divisor+1)^0,c
  3991  003F0A  0E0A               	movlw	10
  3992  003F0C  6E03               	movwf	___awmod@divisor^0,c
  3993  003F0E  ECEA  F023         	call	___awmod	;wreg free
  3994  003F12  C001  F0EC         	movff	?___awmod,_Unidades_Segundos
  3995  003F16  C002  F0ED         	movff	?___awmod+1,_Unidades_Segundos+1
  3996  003F1A                     
  3997                           ;SensorNegPosExactos.c: 424:     if(horas < 12)
  3998  003F1A  0100               	movlb	0	; () banked
  3999  003F1C  BFF9               	btfsc	(_horas+1)& (0+255),7,b
  4000  003F1E  EF9C  F01F         	goto	u6370
  4001  003F22  51F9               	movf	(_horas+1)& (0+255),w,b
  4002  003F24  E107               	bnz	u6371
  4003  003F26  0E0C               	movlw	12
  4004  003F28  5DF8               	subwf	_horas& (0+255),w,b
  4005  003F2A  B0D8               	btfsc	status,0,c
  4006  003F2C  EF9A  F01F         	goto	u6371
  4007  003F30  EF9C  F01F         	goto	u6370
  4008  003F34                     u6371:
  4009  003F34  EFC0  F01F         	goto	l4790
  4010  003F38                     u6370:
  4011  003F38                     
  4012                           ; BSR set to: 0
  4013                           ;SensorNegPosExactos.c: 425:     {;SensorNegPosExactos.c: 426:         putcm(0xC2);
  4014  003F38  0EC2               	movlw	194
  4015  003F3A  EC3A  F027         	call	_putcm
  4016  003F3E                     
  4017                           ;SensorNegPosExactos.c: 427:         printf("%d%d:%d%d:%d%d A.M",Decenas_Horas, Unidades
      +                          _Horas, Decenas_Minutos, Unidades_Minutos, Decenas_Segundos, Unidades_Segundos);
  4018  003F3E  0E01               	movlw	low STR_7
  4019  003F40  0100               	movlb	0	; () banked
  4020  003F42  6FB6               	movwf	printf@fmt& (0+255),b
  4021  003F44  0E08               	movlw	high STR_7
  4022  003F46  6FB7               	movwf	(printf@fmt+1)& (0+255),b
  4023  003F48  C0F2  F0B8         	movff	_Decenas_Horas,?_printf+2
  4024  003F4C  C0F3  F0B9         	movff	_Decenas_Horas+1,?_printf+3
  4025  003F50  C0F4  F0BA         	movff	_Unidades_Horas,?_printf+4
  4026  003F54  C0F5  F0BB         	movff	_Unidades_Horas+1,?_printf+5
  4027  003F58  C0EE  F0BC         	movff	_Decenas_Minutos,?_printf+6
  4028  003F5C  C0EF  F0BD         	movff	_Decenas_Minutos+1,?_printf+7
  4029  003F60  C0F0  F0BE         	movff	_Unidades_Minutos,?_printf+8
  4030  003F64  C0F1  F0BF         	movff	_Unidades_Minutos+1,?_printf+9
  4031  003F68  C0EA  F0C0         	movff	_Decenas_Segundos,?_printf+10
  4032  003F6C  C0EB  F0C1         	movff	_Decenas_Segundos+1,?_printf+11
  4033  003F70  C0EC  F0C2         	movff	_Unidades_Segundos,?_printf+12
  4034  003F74  C0ED  F0C3         	movff	_Unidades_Segundos+1,?_printf+13
  4035  003F78  ECEA  F027         	call	_printf	;wreg free
  4036                           
  4037                           ;SensorNegPosExactos.c: 428:  }
  4038  003F7C  EFE2  F01F         	goto	l170
  4039  003F80                     l4790:
  4040                           
  4041                           ; BSR set to: 0
  4042                           ;SensorNegPosExactos.c: 430:     {;SensorNegPosExactos.c: 431:         putcm(0xC2);
  4043  003F80  0EC2               	movlw	194
  4044  003F82  EC3A  F027         	call	_putcm
  4045  003F86                     
  4046                           ;SensorNegPosExactos.c: 432:         printf("%d%d:%d%d:%d%d P.M",Decenas_Horas, Unidades
      +                          _Horas, Decenas_Minutos, Unidades_Minutos, Decenas_Segundos, Unidades_Segundos);
  4047  003F86  0E14               	movlw	low STR_8
  4048  003F88  0100               	movlb	0	; () banked
  4049  003F8A  6FB6               	movwf	printf@fmt& (0+255),b
  4050  003F8C  0E08               	movlw	high STR_8
  4051  003F8E  6FB7               	movwf	(printf@fmt+1)& (0+255),b
  4052  003F90  C0F2  F0B8         	movff	_Decenas_Horas,?_printf+2
  4053  003F94  C0F3  F0B9         	movff	_Decenas_Horas+1,?_printf+3
  4054  003F98  C0F4  F0BA         	movff	_Unidades_Horas,?_printf+4
  4055  003F9C  C0F5  F0BB         	movff	_Unidades_Horas+1,?_printf+5
  4056  003FA0  C0EE  F0BC         	movff	_Decenas_Minutos,?_printf+6
  4057  003FA4  C0EF  F0BD         	movff	_Decenas_Minutos+1,?_printf+7
  4058  003FA8  C0F0  F0BE         	movff	_Unidades_Minutos,?_printf+8
  4059  003FAC  C0F1  F0BF         	movff	_Unidades_Minutos+1,?_printf+9
  4060  003FB0  C0EA  F0C0         	movff	_Decenas_Segundos,?_printf+10
  4061  003FB4  C0EB  F0C1         	movff	_Decenas_Segundos+1,?_printf+11
  4062  003FB8  C0EC  F0C2         	movff	_Unidades_Segundos,?_printf+12
  4063  003FBC  C0ED  F0C3         	movff	_Unidades_Segundos+1,?_printf+13
  4064  003FC0  ECEA  F027         	call	_printf	;wreg free
  4065  003FC4                     l170:
  4066  003FC4  0012               	return		;funcret
  4067  003FC6                     __end_of_Mostrar_Reloj:
  4068                           	callstack 0
  4069                           
  4070 ;; *************** function _putcm *****************
  4071 ;; Defined at:
  4072 ;;		line 279 in file "SensorNegPosExactos.c"
  4073 ;; Parameters:    Size  Location     Type
  4074 ;;  data            1    wreg     unsigned char 
  4075 ;; Auto vars:     Size  Location     Type
  4076 ;;  data            1    1[COMRAM] unsigned char 
  4077 ;;  Activa          1    2[COMRAM] unsigned char 
  4078 ;; Return value:  Size  Location     Type
  4079 ;;                  1    wreg      void 
  4080 ;; Registers used:
  4081 ;;		wreg, status,2, status,0
  4082 ;; Tracked objects:
  4083 ;;		On entry : 0/0
  4084 ;;		On exit  : 0/0
  4085 ;;		Unchanged: 0/0
  4086 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  4087 ;;      Params:         0       0       0       0       0       0       0       0       0
  4088 ;;      Locals:         2       0       0       0       0       0       0       0       0
  4089 ;;      Temps:          1       0       0       0       0       0       0       0       0
  4090 ;;      Totals:         3       0       0       0       0       0       0       0       0
  4091 ;;Total ram usage:        3 bytes
  4092 ;; Hardware stack levels used:    1
  4093 ;; This function calls:
  4094 ;;		Nothing
  4095 ;; This function is called by:
  4096 ;;		_InicializaLCD
  4097 ;;		_SensorLM35
  4098 ;;		_Mostrar_Reloj
  4099 ;;		_Alarma
  4100 ;; This function uses a non-reentrant model
  4101 ;;
  4102                           
  4103                           	psect	text17
  4104  004E74                     __ptext17:
  4105                           	callstack 0
  4106  004E74                     _putcm:
  4107                           	callstack 29
  4108                           
  4109                           ;incstack = 0
  4110                           ;putcm@data stored from wreg
  4111  004E74  6E02               	movwf	putcm@data^0,c
  4112  004E76                     
  4113                           ;SensorNegPosExactos.c: 279: void putcm(char data);SensorNegPosExactos.c: 280: {;SensorN
      +                          egPosExactos.c: 281:     char Activa;;SensorNegPosExactos.c: 282:     Activa = data & 0x
      +                          F0;
  4114  004E76  5002               	movf	putcm@data^0,w,c
  4115  004E78  0BF0               	andlw	240
  4116  004E7A  6E03               	movwf	putcm@Activa^0,c
  4117                           
  4118                           ;SensorNegPosExactos.c: 283:     LATD = Activa | 0x04;
  4119  004E7C  5003               	movf	putcm@Activa^0,w,c
  4120  004E7E  0904               	iorlw	4
  4121  004E80  6E8C               	movwf	140,c	;volatile
  4122  004E82                     
  4123                           ;SensorNegPosExactos.c: 284:     _delay((unsigned long)((10)*(8000000/4000000.0)));
  4124  004E82  0E06               	movlw	6
  4125  004E84                     u7047:
  4126  004E84  2EE8               	decfsz	wreg,f,c
  4127  004E86  D7FE               	bra	u7047
  4128  004E88  D000               	nop2	
  4129  004E8A                     
  4130                           ;SensorNegPosExactos.c: 285:     LATD = Activa;
  4131  004E8A  C003  FF8C         	movff	putcm@Activa,3980	;volatile
  4132  004E8E                     
  4133                           ;SensorNegPosExactos.c: 286:     _delay((unsigned long)((1)*(8000000/4000.0)));
  4134  004E8E  0E03               	movlw	3
  4135  004E90  6E01               	movwf	??_putcm^0,c
  4136  004E92  0E98               	movlw	152
  4137  004E94                     u7057:
  4138  004E94  2EE8               	decfsz	wreg,f,c
  4139  004E96  D7FE               	bra	u7057
  4140  004E98  2E01               	decfsz	??_putcm^0,f,c
  4141  004E9A  D7FC               	bra	u7057
  4142                           
  4143                           ;SensorNegPosExactos.c: 287:     Activa = (unsigned char)(data << 4);
  4144  004E9C  3802               	swapf	putcm@data^0,w,c
  4145  004E9E  0BF0               	andlw	240
  4146  004EA0  6E03               	movwf	putcm@Activa^0,c
  4147                           
  4148                           ;SensorNegPosExactos.c: 288:     LATD = Activa | 0x04;
  4149  004EA2  5003               	movf	putcm@Activa^0,w,c
  4150  004EA4  0904               	iorlw	4
  4151  004EA6  6E8C               	movwf	140,c	;volatile
  4152  004EA8                     
  4153                           ;SensorNegPosExactos.c: 289:     _delay((unsigned long)((10)*(8000000/4000000.0)));
  4154  004EA8  0E06               	movlw	6
  4155  004EAA                     u7067:
  4156  004EAA  2EE8               	decfsz	wreg,f,c
  4157  004EAC  D7FE               	bra	u7067
  4158  004EAE  D000               	nop2	
  4159  004EB0                     
  4160                           ;SensorNegPosExactos.c: 290:     LATD = Activa;
  4161  004EB0  C003  FF8C         	movff	putcm@Activa,3980	;volatile
  4162  004EB4  0012               	return		;funcret
  4163  004EB6                     __end_of_putcm:
  4164                           	callstack 0
  4165                           
  4166 ;; *************** function _printf *****************
  4167 ;; Defined at:
  4168 ;;		line 5 in file "/Applications/microchip/xc8/v2.31/pic/sources/c99/common/printf.c"
  4169 ;; Parameters:    Size  Location     Type
  4170 ;;  fmt             2   86[BANK0 ] PTR const unsigned char 
  4171 ;;		 -> STR_11(19), STR_10(19), STR_9(14), STR_8(19), 
  4172 ;;		 -> STR_7(19), STR_6(16), STR_5(17), Valores(16), 
  4173 ;; Auto vars:     Size  Location     Type
  4174 ;;  ap              2  102[BANK0 ] PTR void [1]
  4175 ;;		 -> ?_printf(2), ?_sprintf(2), 
  4176 ;;  ret             2    0        int 
  4177 ;; Return value:  Size  Location     Type
  4178 ;;                  2   86[BANK0 ] int 
  4179 ;; Registers used:
  4180 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  4181 ;; Tracked objects:
  4182 ;;		On entry : 0/0
  4183 ;;		On exit  : 0/0
  4184 ;;		Unchanged: 0/0
  4185 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  4186 ;;      Params:         0      14       0       0       0       0       0       0       0
  4187 ;;      Locals:         0       4       0       0       0       0       0       0       0
  4188 ;;      Temps:          0       0       0       0       0       0       0       0       0
  4189 ;;      Totals:         0      18       0       0       0       0       0       0       0
  4190 ;;Total ram usage:       18 bytes
  4191 ;; Hardware stack levels used:    1
  4192 ;; Hardware stack levels required when called:    7
  4193 ;; This function calls:
  4194 ;;		_vfprintf
  4195 ;; This function is called by:
  4196 ;;		_SensorLM35
  4197 ;;		_Mostrar_Reloj
  4198 ;;		_Alarma
  4199 ;; This function uses a non-reentrant model
  4200 ;;
  4201                           
  4202                           	psect	text18
  4203  004FD4                     __ptext18:
  4204                           	callstack 0
  4205  004FD4                     _printf:
  4206                           	callstack 22
  4207  004FD4  0EB8               	movlw	low (?_printf+2)
  4208  004FD6  0100               	movlb	0	; () banked
  4209  004FD8  6FC6               	movwf	printf@ap& (0+255),b
  4210  004FDA  0E00               	movlw	high (?_printf+2)
  4211  004FDC  6FC7               	movwf	(printf@ap+1)& (0+255),b
  4212  004FDE                     
  4213                           ; BSR set to: 0
  4214  004FDE  0E00               	movlw	0
  4215  004FE0  6FB0               	movwf	vfprintf@fp& (0+255),b
  4216  004FE2  0E00               	movlw	0
  4217  004FE4  6FB1               	movwf	(vfprintf@fp+1)& (0+255),b
  4218  004FE6  C0B6  F0B2         	movff	printf@fmt,vfprintf@fmt
  4219  004FEA  C0B7  F0B3         	movff	printf@fmt+1,vfprintf@fmt+1
  4220  004FEE  0EC6               	movlw	low printf@ap
  4221  004FF0  6FB4               	movwf	vfprintf@ap& (0+255),b
  4222  004FF2  0E00               	movlw	high printf@ap
  4223  004FF4  6FB5               	movwf	(vfprintf@ap+1)& (0+255),b
  4224  004FF6  EC27  F025         	call	_vfprintf	;wreg free
  4225  004FFA  0012               	return		;funcret
  4226  004FFC                     __end_of_printf:
  4227                           	callstack 0
  4228                           
  4229 ;; *************** function _vfprintf *****************
  4230 ;; Defined at:
  4231 ;;		line 1390 in file "/Applications/microchip/xc8/v2.31/pic/sources/c99/common/doprnt.c"
  4232 ;; Parameters:    Size  Location     Type
  4233 ;;  fp              2   80[BANK0 ] PTR struct _IO_FILE
  4234 ;;		 -> NULL(0), sprintf@f(6), 
  4235 ;;  fmt             2   82[BANK0 ] PTR const unsigned char 
  4236 ;;		 -> STR_11(19), STR_10(19), STR_9(14), STR_8(19), 
  4237 ;;		 -> STR_7(19), STR_6(16), STR_5(17), STR_4(17), 
  4238 ;;		 -> STR_3(17), STR_2(17), STR_1(17), Valores(16), 
  4239 ;;  ap              2   84[BANK0 ] PTR PTR void 
  4240 ;;		 -> printf@ap(2), sprintf@ap(2), 
  4241 ;; Auto vars:     Size  Location     Type
  4242 ;;  cfmt            2   91[COMRAM] PTR unsigned char 
  4243 ;;		 -> STR_11(19), STR_10(19), STR_9(14), STR_8(19), 
  4244 ;;		 -> STR_7(19), STR_6(16), STR_5(17), STR_4(17), 
  4245 ;;		 -> STR_3(17), STR_2(17), STR_1(17), Valores(16), 
  4246 ;; Return value:  Size  Location     Type
  4247 ;;                  2   80[BANK0 ] int 
  4248 ;; Registers used:
  4249 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  4250 ;; Tracked objects:
  4251 ;;		On entry : 0/0
  4252 ;;		On exit  : 0/0
  4253 ;;		Unchanged: 0/0
  4254 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  4255 ;;      Params:         0       6       0       0       0       0       0       0       0
  4256 ;;      Locals:         2       0       0       0       0       0       0       0       0
  4257 ;;      Temps:          0       0       0       0       0       0       0       0       0
  4258 ;;      Totals:         2       6       0       0       0       0       0       0       0
  4259 ;;Total ram usage:        8 bytes
  4260 ;; Hardware stack levels used:    1
  4261 ;; Hardware stack levels required when called:    6
  4262 ;; This function calls:
  4263 ;;		_vfpfcnvrt
  4264 ;; This function is called by:
  4265 ;;		_sprintf
  4266 ;;		_printf
  4267 ;; This function uses a non-reentrant model
  4268 ;;
  4269                           
  4270                           	psect	text19
  4271  004A4E                     __ptext19:
  4272                           	callstack 0
  4273  004A4E                     _vfprintf:
  4274                           	callstack 22
  4275  004A4E                     
  4276                           ;/Applications/microchip/xc8/v2.31/pic/sources/c99/common/doprnt.c: 1390: int vfprintf(F
      +                          ILE *fp, const char *fmt, va_list ap);/Applications/microchip/xc8/v2.31/pic/sources/c99/
      +                          common/doprnt.c: 1391: {;/Applications/microchip/xc8/v2.31/pic/sources/c99/common/doprnt
      +                          .c: 1393:     char *cfmt;;/Applications/microchip/xc8/v2.31/pic/sources/c99/common/doprn
      +                          t.c: 1395:     cfmt = (char *)fmt;
  4277  004A4E  C0B2  F05C         	movff	vfprintf@fmt,vfprintf@cfmt
  4278  004A52  C0B3  F05D         	movff	vfprintf@fmt+1,vfprintf@cfmt+1
  4279  004A56                     
  4280                           ;/Applications/microchip/xc8/v2.31/pic/sources/c99/common/doprnt.c: 1396:     nout = 0;
  4281  004A56  0E00               	movlw	0
  4282  004A58  0100               	movlb	0	; () banked
  4283  004A5A  6FD3               	movwf	(_nout+1)& (0+255),b
  4284  004A5C  0E00               	movlw	0
  4285  004A5E  6FD2               	movwf	_nout& (0+255),b
  4286                           
  4287                           ;/Applications/microchip/xc8/v2.31/pic/sources/c99/common/doprnt.c: 1397:     while (*cf
      +                          mt) {
  4288  004A60  EF45  F025         	goto	l4754
  4289  004A64                     l4752:
  4290                           
  4291                           ;/Applications/microchip/xc8/v2.31/pic/sources/c99/common/doprnt.c: 1398:         nout +
      +                          = vfpfcnvrt(fp, &cfmt, ap);
  4292  004A64  C0B0  F052         	movff	vfprintf@fp,vfpfcnvrt@fp
  4293  004A68  C0B1  F053         	movff	vfprintf@fp+1,vfpfcnvrt@fp+1
  4294  004A6C  0E5C               	movlw	low vfprintf@cfmt
  4295  004A6E  6E54               	movwf	vfpfcnvrt@fmt^0,c
  4296  004A70  0E00               	movlw	high vfprintf@cfmt
  4297  004A72  6E55               	movwf	(vfpfcnvrt@fmt+1)^0,c
  4298  004A74  C0B4  F056         	movff	vfprintf@ap,vfpfcnvrt@ap
  4299  004A78  C0B5  F057         	movff	vfprintf@ap+1,vfpfcnvrt@ap+1
  4300  004A7C  EC6A  F00A         	call	_vfpfcnvrt	;wreg free
  4301  004A80  5052               	movf	?_vfpfcnvrt^0,w,c
  4302  004A82  0100               	movlb	0	; () banked
  4303  004A84  27D2               	addwf	_nout& (0+255),f,b
  4304  004A86  5053               	movf	(?_vfpfcnvrt+1)^0,w,c
  4305  004A88  23D3               	addwfc	(_nout+1)& (0+255),f,b
  4306  004A8A                     l4754:
  4307                           
  4308                           ; BSR set to: 0
  4309                           ;/Applications/microchip/xc8/v2.31/pic/sources/c99/common/doprnt.c: 1397:     while (*cf
      +                          mt) {
  4310  004A8A  C05C  FFF6         	movff	vfprintf@cfmt,tblptrl
  4311  004A8E  C05D  FFF7         	movff	vfprintf@cfmt+1,tblptrh
  4312  004A92  6AF8               	clrf	tblptru,c
  4313  004A94  0E07               	movlw	(high __ramtop+-1)
  4314  004A96  64F7               	cpfsgt	tblptrh,c
  4315  004A98  D003               	bra	u6357
  4316  004A9A  0008               	tblrd		*
  4317  004A9C  50F5               	movf	tablat,w,c
  4318  004A9E  D005               	bra	u6350
  4319  004AA0                     u6357:
  4320  004AA0  CFF6 FFE1          	movff	tblptrl,fsr1l
  4321  004AA4  CFF7 FFE2          	movff	tblptrh,fsr1h
  4322  004AA8  50E7               	movf	indf1,w,c
  4323  004AAA                     u6350:
  4324  004AAA  0900               	iorlw	0
  4325  004AAC  A4D8               	btfss	status,2,c
  4326  004AAE  EF5B  F025         	goto	u6361
  4327  004AB2  EF5D  F025         	goto	u6360
  4328  004AB6                     u6361:
  4329  004AB6  EF32  F025         	goto	l4752
  4330  004ABA                     u6360:
  4331  004ABA                     
  4332                           ;/Applications/microchip/xc8/v2.31/pic/sources/c99/common/doprnt.c: 1400:     return nou
      +                          t;
  4333  004ABA  C0D2  F0B0         	movff	_nout,?_vfprintf
  4334  004ABE  C0D3  F0B1         	movff	_nout+1,?_vfprintf+1
  4335  004AC2  0012               	return		;funcret
  4336  004AC4                     __end_of_vfprintf:
  4337                           	callstack 0
  4338                           
  4339 ;; *************** function _vfpfcnvrt *****************
  4340 ;; Defined at:
  4341 ;;		line 692 in file "/Applications/microchip/xc8/v2.31/pic/sources/c99/common/doprnt.c"
  4342 ;; Parameters:    Size  Location     Type
  4343 ;;  fp              2   81[COMRAM] PTR struct _IO_FILE
  4344 ;;		 -> NULL(0), sprintf@f(6), 
  4345 ;;  fmt             2   83[COMRAM] PTR PTR unsigned char 
  4346 ;;		 -> vfprintf@cfmt(2), 
  4347 ;;  ap              2   85[COMRAM] PTR PTR void 
  4348 ;;		 -> printf@ap(2), sprintf@ap(2), 
  4349 ;; Auto vars:     Size  Location     Type
  4350 ;;  ll              8   56[BANK0 ] long long 
  4351 ;;  llu             8    0        unsigned long long 
  4352 ;;  f               4   72[BANK0 ] unsigned long long 
  4353 ;;  ct              3   76[BANK0 ] unsigned char [3]
  4354 ;;  cp              3    0        PTR unsigned char 
  4355 ;;  vp              2   64[BANK0 ] PTR void 
  4356 ;;		 -> ?_printf(2), ?_sprintf(2), 
  4357 ;;  i               2    0        int 
  4358 ;;  done            2    0        int 
  4359 ;;  c               1   79[BANK0 ] unsigned char 
  4360 ;; Return value:  Size  Location     Type
  4361 ;;                  2   81[COMRAM] int 
  4362 ;; Registers used:
  4363 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  4364 ;; Tracked objects:
  4365 ;;		On entry : 0/0
  4366 ;;		On exit  : 0/0
  4367 ;;		Unchanged: 0/0
  4368 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  4369 ;;      Params:         6       0       0       0       0       0       0       0       0
  4370 ;;      Locals:         0      24       0       0       0       0       0       0       0
  4371 ;;      Temps:          4       0       0       0       0       0       0       0       0
  4372 ;;      Totals:        10      24       0       0       0       0       0       0       0
  4373 ;;Total ram usage:       34 bytes
  4374 ;; Hardware stack levels used:    1
  4375 ;; Hardware stack levels required when called:    5
  4376 ;; This function calls:
  4377 ;;		_atoi
  4378 ;;		_ctoa
  4379 ;;		_dtoa
  4380 ;;		_efgtoa
  4381 ;;		_fputc
  4382 ;;		_isdigit
  4383 ;;		_isupper
  4384 ;;		_strncmp
  4385 ;;		_tolower
  4386 ;; This function is called by:
  4387 ;;		_vfprintf
  4388 ;; This function uses a non-reentrant model
  4389 ;;
  4390                           
  4391                           	psect	text20
  4392  0014D4                     __ptext20:
  4393                           	callstack 0
  4394  0014D4                     _vfpfcnvrt:
  4395                           	callstack 22
  4396  0014D4                     
  4397                           ;/Applications/microchip/xc8/v2.31/pic/sources/c99/common/doprnt.c: 692: static int vfpf
      +                          cnvrt(FILE *fp, char *fmt[], va_list ap);/Applications/microchip/xc8/v2.31/pic/sources/c
      +                          99/common/doprnt.c: 693: {;/Applications/microchip/xc8/v2.31/pic/sources/c99/common/dopr
      +                          nt.c: 694:     char c, *cp, ct[3];;/Applications/microchip/xc8/v2.31/pic/sources/c99/com
      +                          mon/doprnt.c: 695:     int done, i;;/Applications/microchip/xc8/v2.31/pic/sources/c99/co
      +                          mmon/doprnt.c: 696:     long long ll;;/Applications/microchip/xc8/v2.31/pic/sources/c99/
      +                          common/doprnt.c: 697:     unsigned long long llu;
  4398  0014D4  C054  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  4399  0014D8  C055  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  4400  0014DC  CFDE FFF6          	movff	postinc2,tblptrl
  4401  0014E0  CFDE FFF7          	movff	postinc2,tblptrh
  4402  0014E4  0E07               	movlw	(high __ramtop+-1)
  4403  0014E6  64F7               	cpfsgt	tblptrh,c
  4404  0014E8  D003               	bra	u5947
  4405  0014EA  0008               	tblrd		*
  4406  0014EC  50F5               	movf	tablat,w,c
  4407  0014EE  D005               	bra	u5940
  4408  0014F0                     u5947:
  4409  0014F0  CFF6 FFE1          	movff	tblptrl,fsr1l
  4410  0014F4  CFF7 FFE2          	movff	tblptrh,fsr1h
  4411  0014F8  50E7               	movf	indf1,w,c
  4412  0014FA                     u5940:
  4413  0014FA  0A25               	xorlw	37
  4414  0014FC  A4D8               	btfss	status,2,c
  4415  0014FE  EF83  F00A         	goto	u5951
  4416  001502  EF85  F00A         	goto	u5950
  4417  001506                     u5951:
  4418  001506  EF7F  F00E         	goto	l4740
  4419  00150A                     u5950:
  4420  00150A                     
  4421                           ;/Applications/microchip/xc8/v2.31/pic/sources/c99/common/doprnt.c: 703:         ++*fmt;
  4422  00150A  C054  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  4423  00150E  C055  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  4424  001512  2ADE               	incf	postinc2,f,c
  4425  001514  0E00               	movlw	0
  4426  001516  22DD               	addwfc	postdec2,f,c
  4427  001518                     
  4428                           ;/Applications/microchip/xc8/v2.31/pic/sources/c99/common/doprnt.c: 705:         flags =
      +                           width = 0;
  4429  001518  0E00               	movlw	0
  4430  00151A  0100               	movlb	0	; () banked
  4431  00151C  6FD5               	movwf	(_width+1)& (0+255),b
  4432  00151E  0E00               	movlw	0
  4433  001520  6FD4               	movwf	_width& (0+255),b
  4434  001522  C0D4  F0D8         	movff	_width,_flags
  4435  001526  C0D5  F0D9         	movff	_width+1,_flags+1
  4436  00152A                     
  4437                           ; BSR set to: 0
  4438                           ;/Applications/microchip/xc8/v2.31/pic/sources/c99/common/doprnt.c: 706:         prec = 
      +                          -1;
  4439  00152A  69D6               	setf	_prec& (0+255),b
  4440  00152C  69D7               	setf	(_prec+1)& (0+255),b
  4441  00152E                     
  4442                           ; BSR set to: 0
  4443                           ;/Applications/microchip/xc8/v2.31/pic/sources/c99/common/doprnt.c: 745:         if ((*f
      +                          mt)[0] == '*') {
  4444  00152E  C054  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  4445  001532  C055  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  4446  001536  CFDE FFF6          	movff	postinc2,tblptrl
  4447  00153A  CFDE FFF7          	movff	postinc2,tblptrh
  4448  00153E  0E07               	movlw	(high __ramtop+-1)
  4449  001540  64F7               	cpfsgt	tblptrh,c
  4450  001542  D003               	bra	u5967
  4451  001544  0008               	tblrd		*
  4452  001546  50F5               	movf	tablat,w,c
  4453  001548  D005               	bra	u5960
  4454  00154A                     u5967:
  4455  00154A  CFF6 FFE1          	movff	tblptrl,fsr1l
  4456  00154E  CFF7 FFE2          	movff	tblptrh,fsr1h
  4457  001552  50E7               	movf	indf1,w,c
  4458  001554                     u5960:
  4459  001554  0A2A               	xorlw	42
  4460  001556  A4D8               	btfss	status,2,c
  4461  001558  EFB0  F00A         	goto	u5971
  4462  00155C  EFB2  F00A         	goto	u5970
  4463  001560                     u5971:
  4464  001560  EFDC  F00A         	goto	l4628
  4465  001564                     u5970:
  4466  001564                     
  4467                           ;/Applications/microchip/xc8/v2.31/pic/sources/c99/common/doprnt.c: 746:             ++*
      +                          fmt;
  4468  001564  C054  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  4469  001568  C055  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  4470  00156C  2ADE               	incf	postinc2,f,c
  4471  00156E  0E00               	movlw	0
  4472  001570  22DD               	addwfc	postdec2,f,c
  4473                           
  4474                           ;/Applications/microchip/xc8/v2.31/pic/sources/c99/common/doprnt.c: 747:             wid
      +                          th = (*(int *)__va_arg(*(int **)ap, (int)0));
  4475  001572  C056  FFD9         	movff	vfpfcnvrt@ap,fsr2l
  4476  001576  C057  FFDA         	movff	vfpfcnvrt@ap+1,fsr2h
  4477  00157A  CFDF F058          	movff	indf2,??_vfpfcnvrt
  4478  00157E  0E02               	movlw	2
  4479  001580  26DE               	addwf	postinc2,f,c
  4480  001582  CFDF F059          	movff	indf2,??_vfpfcnvrt+1
  4481  001586  0E00               	movlw	0
  4482  001588  22DD               	addwfc	postdec2,f,c
  4483  00158A  C058  FFD9         	movff	??_vfpfcnvrt,fsr2l
  4484  00158E  C059  FFDA         	movff	??_vfpfcnvrt+1,fsr2h
  4485  001592  CFDE F0D4          	movff	postinc2,_width
  4486  001596  CFDD F0D5          	movff	postdec2,_width+1
  4487  00159A                     
  4488                           ;/Applications/microchip/xc8/v2.31/pic/sources/c99/common/doprnt.c: 748:             if 
      +                          (width < 0) {
  4489  00159A  0100               	movlb	0	; () banked
  4490  00159C  BFD5               	btfsc	(_width+1)& (0+255),7,b
  4491  00159E  EFD5  F00A         	goto	u5980
  4492  0015A2  EFD3  F00A         	goto	u5981
  4493  0015A6                     u5981:
  4494  0015A6  EF29  F00B         	goto	l4638
  4495  0015AA                     u5980:
  4496  0015AA                     
  4497                           ; BSR set to: 0
  4498                           ;/Applications/microchip/xc8/v2.31/pic/sources/c99/common/doprnt.c: 749:                
      +                           flags |= (1 << 0);
  4499  0015AA  81D8               	bsf	_flags& (0+255),0,b
  4500                           
  4501                           ;/Applications/microchip/xc8/v2.31/pic/sources/c99/common/doprnt.c: 750:                
      +                           width = -width;
  4502  0015AC  6DD4               	negf	_width& (0+255),b
  4503  0015AE  1FD5               	comf	(_width+1)& (0+255),f,b
  4504  0015B0  B0D8               	btfsc	status,0,c
  4505  0015B2  2BD5               	incf	(_width+1)& (0+255),f,b
  4506  0015B4  EF29  F00B         	goto	l4638
  4507  0015B8                     l4628:
  4508                           
  4509                           ;/Applications/microchip/xc8/v2.31/pic/sources/c99/common/doprnt.c: 753:             wid
      +                          th = atoi(*fmt);
  4510  0015B8  C054  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  4511  0015BC  C055  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  4512  0015C0  CFDE F008          	movff	postinc2,atoi@s
  4513  0015C4  CFDD F009          	movff	postdec2,atoi@s+1
  4514  0015C8  ECED  F01B         	call	_atoi	;wreg free
  4515  0015CC  C008  F0D4         	movff	?_atoi,_width
  4516  0015D0  C009  F0D5         	movff	?_atoi+1,_width+1
  4517                           
  4518                           ;/Applications/microchip/xc8/v2.31/pic/sources/c99/common/doprnt.c: 754:             whi
      +                          le ((0 ? isdigit((*fmt)[0]) : ((unsigned)((*fmt)[0])-'0') < 10)) {
  4519  0015D4  EFF3  F00A         	goto	l4632
  4520  0015D8                     l4630:
  4521                           
  4522                           ; BSR set to: 0
  4523                           ;/Applications/microchip/xc8/v2.31/pic/sources/c99/common/doprnt.c: 755:                
      +                           ++*fmt;
  4524  0015D8  C054  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  4525  0015DC  C055  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  4526  0015E0  2ADE               	incf	postinc2,f,c
  4527  0015E2  0E00               	movlw	0
  4528  0015E4  22DD               	addwfc	postdec2,f,c
  4529  0015E6                     l4632:
  4530  0015E6  0ED0               	movlw	208
  4531  0015E8  6E58               	movwf	??_vfpfcnvrt^0,c
  4532  0015EA  0EFF               	movlw	255
  4533  0015EC  6E59               	movwf	(??_vfpfcnvrt+1)^0,c
  4534  0015EE  C054  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  4535  0015F2  C055  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  4536  0015F6  CFDE FFF6          	movff	postinc2,tblptrl
  4537  0015FA  CFDE FFF7          	movff	postinc2,tblptrh
  4538  0015FE  0E07               	movlw	(high __ramtop+-1)
  4539  001600  64F7               	cpfsgt	tblptrh,c
  4540  001602  D003               	bra	u5997
  4541  001604  0008               	tblrd		*
  4542  001606  50F5               	movf	tablat,w,c
  4543  001608  D005               	bra	u5990
  4544  00160A                     u5997:
  4545  00160A  CFF6 FFE1          	movff	tblptrl,fsr1l
  4546  00160E  CFF7 FFE2          	movff	tblptrh,fsr1h
  4547  001612  50E7               	movf	indf1,w,c
  4548  001614                     u5990:
  4549  001614  6E5A               	movwf	(??_vfpfcnvrt+2)^0,c
  4550  001616  6A5B               	clrf	(??_vfpfcnvrt+3)^0,c
  4551  001618  5058               	movf	??_vfpfcnvrt^0,w,c
  4552  00161A  265A               	addwf	(??_vfpfcnvrt+2)^0,f,c
  4553  00161C  5059               	movf	(??_vfpfcnvrt+1)^0,w,c
  4554  00161E  225B               	addwfc	(??_vfpfcnvrt+3)^0,f,c
  4555  001620  505B               	movf	(??_vfpfcnvrt+3)^0,w,c
  4556  001622  E10A               	bnz	u6000
  4557  001624  0E0A               	movlw	10
  4558  001626  5C5A               	subwf	(??_vfpfcnvrt+2)^0,w,c
  4559  001628  A0D8               	btfss	status,0,c
  4560  00162A  EF19  F00B         	goto	u6001
  4561  00162E  EF1C  F00B         	goto	u6000
  4562  001632                     u6001:
  4563  001632  0E01               	movlw	1
  4564  001634  EF1D  F00B         	goto	u6010
  4565  001638                     u6000:
  4566  001638  0E00               	movlw	0
  4567  00163A                     u6010:
  4568  00163A  0100               	movlb	0	; () banked
  4569  00163C  6FA2               	movwf	_vfpfcnvrt$1302& (0+255),b
  4570  00163E  6BA3               	clrf	(_vfpfcnvrt$1302+1)& (0+255),b
  4571  001640                     
  4572                           ; BSR set to: 0
  4573  001640  51A2               	movf	_vfpfcnvrt$1302& (0+255),w,b
  4574  001642  11A3               	iorwf	(_vfpfcnvrt$1302+1)& (0+255),w,b
  4575  001644  A4D8               	btfss	status,2,c
  4576  001646  EF27  F00B         	goto	u6021
  4577  00164A  EF29  F00B         	goto	u6020
  4578  00164E                     u6021:
  4579  00164E  EFEC  F00A         	goto	l4630
  4580  001652                     u6020:
  4581  001652                     l4638:
  4582                           
  4583                           ; BSR set to: 0
  4584                           ;/Applications/microchip/xc8/v2.31/pic/sources/c99/common/doprnt.c: 762:         if ((*f
      +                          mt)[0] == '.') {
  4585  001652  C054  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  4586  001656  C055  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  4587  00165A  CFDE FFF6          	movff	postinc2,tblptrl
  4588  00165E  CFDE FFF7          	movff	postinc2,tblptrh
  4589  001662  0E07               	movlw	(high __ramtop+-1)
  4590  001664  64F7               	cpfsgt	tblptrh,c
  4591  001666  D003               	bra	u6037
  4592  001668  0008               	tblrd		*
  4593  00166A  50F5               	movf	tablat,w,c
  4594  00166C  D005               	bra	u6030
  4595  00166E                     u6037:
  4596  00166E  CFF6 FFE1          	movff	tblptrl,fsr1l
  4597  001672  CFF7 FFE2          	movff	tblptrh,fsr1h
  4598  001676  50E7               	movf	indf1,w,c
  4599  001678                     u6030:
  4600  001678  0A2E               	xorlw	46
  4601  00167A  A4D8               	btfss	status,2,c
  4602  00167C  EF42  F00B         	goto	u6041
  4603  001680  EF44  F00B         	goto	u6040
  4604  001684                     u6041:
  4605  001684  EFD5  F00B         	goto	l4658
  4606  001688                     u6040:
  4607  001688                     
  4608                           ;/Applications/microchip/xc8/v2.31/pic/sources/c99/common/doprnt.c: 763:             pre
      +                          c = 0;
  4609  001688  0E00               	movlw	0
  4610  00168A  0100               	movlb	0	; () banked
  4611  00168C  6FD7               	movwf	(_prec+1)& (0+255),b
  4612  00168E  0E00               	movlw	0
  4613  001690  6FD6               	movwf	_prec& (0+255),b
  4614  001692                     
  4615                           ; BSR set to: 0
  4616                           ;/Applications/microchip/xc8/v2.31/pic/sources/c99/common/doprnt.c: 764:             ++*
      +                          fmt;
  4617  001692  C054  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  4618  001696  C055  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  4619  00169A  2ADE               	incf	postinc2,f,c
  4620  00169C  0E00               	movlw	0
  4621  00169E  22DD               	addwfc	postdec2,f,c
  4622  0016A0                     
  4623                           ; BSR set to: 0
  4624                           ;/Applications/microchip/xc8/v2.31/pic/sources/c99/common/doprnt.c: 765:             if 
      +                          ((*fmt)[0] == '*') {
  4625  0016A0  C054  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  4626  0016A4  C055  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  4627  0016A8  CFDE FFF6          	movff	postinc2,tblptrl
  4628  0016AC  CFDE FFF7          	movff	postinc2,tblptrh
  4629  0016B0  0E07               	movlw	(high __ramtop+-1)
  4630  0016B2  64F7               	cpfsgt	tblptrh,c
  4631  0016B4  D003               	bra	u6057
  4632  0016B6  0008               	tblrd		*
  4633  0016B8  50F5               	movf	tablat,w,c
  4634  0016BA  D005               	bra	u6050
  4635  0016BC                     u6057:
  4636  0016BC  CFF6 FFE1          	movff	tblptrl,fsr1l
  4637  0016C0  CFF7 FFE2          	movff	tblptrh,fsr1h
  4638  0016C4  50E7               	movf	indf1,w,c
  4639  0016C6                     u6050:
  4640  0016C6  0A2A               	xorlw	42
  4641  0016C8  A4D8               	btfss	status,2,c
  4642  0016CA  EF69  F00B         	goto	u6061
  4643  0016CE  EF6B  F00B         	goto	u6060
  4644  0016D2                     u6061:
  4645  0016D2  EF88  F00B         	goto	l4648
  4646  0016D6                     u6060:
  4647  0016D6                     
  4648                           ;/Applications/microchip/xc8/v2.31/pic/sources/c99/common/doprnt.c: 766:                
      +                           ++*fmt;
  4649  0016D6  C054  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  4650  0016DA  C055  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  4651  0016DE  2ADE               	incf	postinc2,f,c
  4652  0016E0  0E00               	movlw	0
  4653  0016E2  22DD               	addwfc	postdec2,f,c
  4654                           
  4655                           ;/Applications/microchip/xc8/v2.31/pic/sources/c99/common/doprnt.c: 767:                
      +                           prec = (*(int *)__va_arg(*(int **)ap, (int)0));
  4656  0016E4  C056  FFD9         	movff	vfpfcnvrt@ap,fsr2l
  4657  0016E8  C057  FFDA         	movff	vfpfcnvrt@ap+1,fsr2h
  4658  0016EC  CFDF F058          	movff	indf2,??_vfpfcnvrt
  4659  0016F0  0E02               	movlw	2
  4660  0016F2  26DE               	addwf	postinc2,f,c
  4661  0016F4  CFDF F059          	movff	indf2,??_vfpfcnvrt+1
  4662  0016F8  0E00               	movlw	0
  4663  0016FA  22DD               	addwfc	postdec2,f,c
  4664  0016FC  C058  FFD9         	movff	??_vfpfcnvrt,fsr2l
  4665  001700  C059  FFDA         	movff	??_vfpfcnvrt+1,fsr2h
  4666  001704  CFDE F0D6          	movff	postinc2,_prec
  4667  001708  CFDD F0D7          	movff	postdec2,_prec+1
  4668                           
  4669                           ;/Applications/microchip/xc8/v2.31/pic/sources/c99/common/doprnt.c: 768:             } e
      +                          lse {
  4670  00170C  EFD5  F00B         	goto	l4658
  4671  001710                     l4648:
  4672                           
  4673                           ;/Applications/microchip/xc8/v2.31/pic/sources/c99/common/doprnt.c: 769:                
      +                           prec = atoi(*fmt);
  4674  001710  C054  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  4675  001714  C055  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  4676  001718  CFDE F008          	movff	postinc2,atoi@s
  4677  00171C  CFDD F009          	movff	postdec2,atoi@s+1
  4678  001720  ECED  F01B         	call	_atoi	;wreg free
  4679  001724  C008  F0D6         	movff	?_atoi,_prec
  4680  001728  C009  F0D7         	movff	?_atoi+1,_prec+1
  4681                           
  4682                           ;/Applications/microchip/xc8/v2.31/pic/sources/c99/common/doprnt.c: 770:                
      +                           while ((0 ? isdigit((*fmt)[0]) : ((unsigned)((*fmt)[0])-'0') < 10)) {
  4683  00172C  EF9F  F00B         	goto	l4652
  4684  001730                     l4650:
  4685                           
  4686                           ; BSR set to: 0
  4687                           ;/Applications/microchip/xc8/v2.31/pic/sources/c99/common/doprnt.c: 771:                
      +                               ++*fmt;
  4688  001730  C054  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  4689  001734  C055  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  4690  001738  2ADE               	incf	postinc2,f,c
  4691  00173A  0E00               	movlw	0
  4692  00173C  22DD               	addwfc	postdec2,f,c
  4693  00173E                     l4652:
  4694  00173E  0ED0               	movlw	208
  4695  001740  6E58               	movwf	??_vfpfcnvrt^0,c
  4696  001742  0EFF               	movlw	255
  4697  001744  6E59               	movwf	(??_vfpfcnvrt+1)^0,c
  4698  001746  C054  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  4699  00174A  C055  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  4700  00174E  CFDE FFF6          	movff	postinc2,tblptrl
  4701  001752  CFDE FFF7          	movff	postinc2,tblptrh
  4702  001756  0E07               	movlw	(high __ramtop+-1)
  4703  001758  64F7               	cpfsgt	tblptrh,c
  4704  00175A  D003               	bra	u6077
  4705  00175C  0008               	tblrd		*
  4706  00175E  50F5               	movf	tablat,w,c
  4707  001760  D005               	bra	u6070
  4708  001762                     u6077:
  4709  001762  CFF6 FFE1          	movff	tblptrl,fsr1l
  4710  001766  CFF7 FFE2          	movff	tblptrh,fsr1h
  4711  00176A  50E7               	movf	indf1,w,c
  4712  00176C                     u6070:
  4713  00176C  6E5A               	movwf	(??_vfpfcnvrt+2)^0,c
  4714  00176E  6A5B               	clrf	(??_vfpfcnvrt+3)^0,c
  4715  001770  5058               	movf	??_vfpfcnvrt^0,w,c
  4716  001772  265A               	addwf	(??_vfpfcnvrt+2)^0,f,c
  4717  001774  5059               	movf	(??_vfpfcnvrt+1)^0,w,c
  4718  001776  225B               	addwfc	(??_vfpfcnvrt+3)^0,f,c
  4719  001778  505B               	movf	(??_vfpfcnvrt+3)^0,w,c
  4720  00177A  E10A               	bnz	u6080
  4721  00177C  0E0A               	movlw	10
  4722  00177E  5C5A               	subwf	(??_vfpfcnvrt+2)^0,w,c
  4723  001780  A0D8               	btfss	status,0,c
  4724  001782  EFC5  F00B         	goto	u6081
  4725  001786  EFC8  F00B         	goto	u6080
  4726  00178A                     u6081:
  4727  00178A  0E01               	movlw	1
  4728  00178C  EFC9  F00B         	goto	u6090
  4729  001790                     u6080:
  4730  001790  0E00               	movlw	0
  4731  001792                     u6090:
  4732  001792  0100               	movlb	0	; () banked
  4733  001794  6FA4               	movwf	_vfpfcnvrt$1303& (0+255),b
  4734  001796  6BA5               	clrf	(_vfpfcnvrt$1303+1)& (0+255),b
  4735  001798                     
  4736                           ; BSR set to: 0
  4737  001798  51A4               	movf	_vfpfcnvrt$1303& (0+255),w,b
  4738  00179A  11A5               	iorwf	(_vfpfcnvrt$1303+1)& (0+255),w,b
  4739  00179C  A4D8               	btfss	status,2,c
  4740  00179E  EFD3  F00B         	goto	u6101
  4741  0017A2  EFD5  F00B         	goto	u6100
  4742  0017A6                     u6101:
  4743  0017A6  EF98  F00B         	goto	l4650
  4744  0017AA                     u6100:
  4745  0017AA                     l4658:
  4746                           
  4747                           ;/Applications/microchip/xc8/v2.31/pic/sources/c99/common/doprnt.c: 779:         ct[0] =
      +                           (char)tolower((int)(*fmt)[0]);
  4748  0017AA  C054  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  4749  0017AE  C055  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  4750  0017B2  CFDE FFF6          	movff	postinc2,tblptrl
  4751  0017B6  CFDE FFF7          	movff	postinc2,tblptrh
  4752  0017BA  0E07               	movlw	(high __ramtop+-1)
  4753  0017BC  64F7               	cpfsgt	tblptrh,c
  4754  0017BE  D003               	bra	u6117
  4755  0017C0  0008               	tblrd		*
  4756  0017C2  50F5               	movf	tablat,w,c
  4757  0017C4  D005               	bra	u6110
  4758  0017C6                     u6117:
  4759  0017C6  CFF6 FFE1          	movff	tblptrl,fsr1l
  4760  0017CA  CFF7 FFE2          	movff	tblptrh,fsr1h
  4761  0017CE  50E7               	movf	indf1,w,c
  4762  0017D0                     u6110:
  4763  0017D0  6E58               	movwf	??_vfpfcnvrt^0,c
  4764  0017D2  5058               	movf	??_vfpfcnvrt^0,w,c
  4765  0017D4  6E07               	movwf	tolower@c^0,c
  4766  0017D6  6A08               	clrf	(tolower@c+1)^0,c
  4767  0017D8  ECFF  F025         	call	_tolower	;wreg free
  4768  0017DC  5007               	movf	?_tolower^0,w,c
  4769  0017DE  0100               	movlb	0	; () banked
  4770  0017E0  6FAC               	movwf	vfpfcnvrt@ct& (0+255),b
  4771  0017E2                     
  4772                           ; BSR set to: 0
  4773                           ;/Applications/microchip/xc8/v2.31/pic/sources/c99/common/doprnt.c: 780:         if (ct[
      +                          0]) {
  4774  0017E2  51AC               	movf	vfpfcnvrt@ct& (0+255),w,b
  4775  0017E4  B4D8               	btfsc	status,2,c
  4776  0017E6  EFF7  F00B         	goto	u6121
  4777  0017EA  EFF9  F00B         	goto	u6120
  4778  0017EE                     u6121:
  4779  0017EE  EF4B  F00C         	goto	l4668
  4780  0017F2                     u6120:
  4781  0017F2                     
  4782                           ; BSR set to: 0
  4783                           ;/Applications/microchip/xc8/v2.31/pic/sources/c99/common/doprnt.c: 781:             ct[
      +                          1] = (char)tolower((int)(*fmt)[1]);
  4784  0017F2  C054  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  4785  0017F6  C055  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  4786  0017FA  CFDE F058          	movff	postinc2,??_vfpfcnvrt
  4787  0017FE  CFDD F059          	movff	postdec2,??_vfpfcnvrt+1
  4788  001802  0E01               	movlw	1
  4789  001804  2658               	addwf	??_vfpfcnvrt^0,f,c
  4790  001806  0E00               	movlw	0
  4791  001808  2259               	addwfc	(??_vfpfcnvrt+1)^0,f,c
  4792  00180A  C058  FFF6         	movff	??_vfpfcnvrt,tblptrl
  4793  00180E  C059  FFF7         	movff	??_vfpfcnvrt+1,tblptrh
  4794  001812  6AF8               	clrf	tblptru,c
  4795  001814  0E07               	movlw	(high __ramtop+-1)
  4796  001816  64F7               	cpfsgt	tblptrh,c
  4797  001818  D003               	bra	u6137
  4798  00181A  0008               	tblrd		*
  4799  00181C  50F5               	movf	tablat,w,c
  4800  00181E  D005               	bra	u6130
  4801  001820                     u6137:
  4802  001820  CFF6 FFE1          	movff	tblptrl,fsr1l
  4803  001824  CFF7 FFE2          	movff	tblptrh,fsr1h
  4804  001828  50E7               	movf	indf1,w,c
  4805  00182A                     u6130:
  4806  00182A  6E5A               	movwf	(??_vfpfcnvrt+2)^0,c
  4807  00182C  505A               	movf	(??_vfpfcnvrt+2)^0,w,c
  4808  00182E  6E07               	movwf	tolower@c^0,c
  4809  001830  6A08               	clrf	(tolower@c+1)^0,c
  4810  001832  ECFF  F025         	call	_tolower	;wreg free
  4811  001836  5007               	movf	?_tolower^0,w,c
  4812  001838  0100               	movlb	0	; () banked
  4813  00183A  6FAD               	movwf	(vfpfcnvrt@ct+1)& (0+255),b
  4814  00183C                     
  4815                           ; BSR set to: 0
  4816                           ;/Applications/microchip/xc8/v2.31/pic/sources/c99/common/doprnt.c: 782:             if 
      +                          (ct[1]) {
  4817  00183C  51AD               	movf	(vfpfcnvrt@ct+1)& (0+255),w,b
  4818  00183E  B4D8               	btfsc	status,2,c
  4819  001840  EF24  F00C         	goto	u6141
  4820  001844  EF26  F00C         	goto	u6140
  4821  001848                     u6141:
  4822  001848  EF4B  F00C         	goto	l4668
  4823  00184C                     u6140:
  4824  00184C                     
  4825                           ; BSR set to: 0
  4826                           ;/Applications/microchip/xc8/v2.31/pic/sources/c99/common/doprnt.c: 783:                
      +                           ct[2] = (char)tolower((int)(*fmt)[2]);
  4827  00184C  C054  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  4828  001850  C055  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  4829  001854  CFDE F058          	movff	postinc2,??_vfpfcnvrt
  4830  001858  CFDD F059          	movff	postdec2,??_vfpfcnvrt+1
  4831  00185C  0E02               	movlw	2
  4832  00185E  2658               	addwf	??_vfpfcnvrt^0,f,c
  4833  001860  0E00               	movlw	0
  4834  001862  2259               	addwfc	(??_vfpfcnvrt+1)^0,f,c
  4835  001864  C058  FFF6         	movff	??_vfpfcnvrt,tblptrl
  4836  001868  C059  FFF7         	movff	??_vfpfcnvrt+1,tblptrh
  4837  00186C  6AF8               	clrf	tblptru,c
  4838  00186E  0E07               	movlw	(high __ramtop+-1)
  4839  001870  64F7               	cpfsgt	tblptrh,c
  4840  001872  D003               	bra	u6157
  4841  001874  0008               	tblrd		*
  4842  001876  50F5               	movf	tablat,w,c
  4843  001878  D005               	bra	u6150
  4844  00187A                     u6157:
  4845  00187A  CFF6 FFE1          	movff	tblptrl,fsr1l
  4846  00187E  CFF7 FFE2          	movff	tblptrh,fsr1h
  4847  001882  50E7               	movf	indf1,w,c
  4848  001884                     u6150:
  4849  001884  6E5A               	movwf	(??_vfpfcnvrt+2)^0,c
  4850  001886  505A               	movf	(??_vfpfcnvrt+2)^0,w,c
  4851  001888  6E07               	movwf	tolower@c^0,c
  4852  00188A  6A08               	clrf	(tolower@c+1)^0,c
  4853  00188C  ECFF  F025         	call	_tolower	;wreg free
  4854  001890  5007               	movf	?_tolower^0,w,c
  4855  001892  0100               	movlb	0	; () banked
  4856  001894  6FAE               	movwf	(vfpfcnvrt@ct+2)& (0+255),b
  4857  001896                     l4668:
  4858                           
  4859                           ; BSR set to: 0
  4860                           ;/Applications/microchip/xc8/v2.31/pic/sources/c99/common/doprnt.c: 814:         if (*fm
      +                          t[0] == 'c') {
  4861  001896  C054  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  4862  00189A  C055  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  4863  00189E  CFDE FFF6          	movff	postinc2,tblptrl
  4864  0018A2  CFDE FFF7          	movff	postinc2,tblptrh
  4865  0018A6  0E07               	movlw	(high __ramtop+-1)
  4866  0018A8  64F7               	cpfsgt	tblptrh,c
  4867  0018AA  D003               	bra	u6167
  4868  0018AC  0008               	tblrd		*
  4869  0018AE  50F5               	movf	tablat,w,c
  4870  0018B0  D005               	bra	u6160
  4871  0018B2                     u6167:
  4872  0018B2  CFF6 FFE1          	movff	tblptrl,fsr1l
  4873  0018B6  CFF7 FFE2          	movff	tblptrh,fsr1h
  4874  0018BA  50E7               	movf	indf1,w,c
  4875  0018BC                     u6160:
  4876  0018BC  0A63               	xorlw	99
  4877  0018BE  A4D8               	btfss	status,2,c
  4878  0018C0  EF64  F00C         	goto	u6171
  4879  0018C4  EF66  F00C         	goto	u6170
  4880  0018C8                     u6171:
  4881  0018C8  EF8E  F00C         	goto	l4676
  4882  0018CC                     u6170:
  4883  0018CC                     
  4884                           ;/Applications/microchip/xc8/v2.31/pic/sources/c99/common/doprnt.c: 815:             ++*
      +                          fmt;
  4885  0018CC  C054  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  4886  0018D0  C055  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  4887  0018D4  2ADE               	incf	postinc2,f,c
  4888  0018D6  0E00               	movlw	0
  4889  0018D8  22DD               	addwfc	postdec2,f,c
  4890                           
  4891                           ;/Applications/microchip/xc8/v2.31/pic/sources/c99/common/doprnt.c: 816:             c =
      +                           (unsigned char)(*(int *)__va_arg(*(int **)ap, (int)0));
  4892  0018DA  C056  FFD9         	movff	vfpfcnvrt@ap,fsr2l
  4893  0018DE  C057  FFDA         	movff	vfpfcnvrt@ap+1,fsr2h
  4894  0018E2  CFDF F058          	movff	indf2,??_vfpfcnvrt
  4895  0018E6  0E02               	movlw	2
  4896  0018E8  26DE               	addwf	postinc2,f,c
  4897  0018EA  CFDF F059          	movff	indf2,??_vfpfcnvrt+1
  4898  0018EE  0E00               	movlw	0
  4899  0018F0  22DD               	addwfc	postdec2,f,c
  4900  0018F2  C058  FFD9         	movff	??_vfpfcnvrt,fsr2l
  4901  0018F6  C059  FFDA         	movff	??_vfpfcnvrt+1,fsr2h
  4902  0018FA  50DF               	movf	indf2,w,c
  4903  0018FC  0100               	movlb	0	; () banked
  4904  0018FE  6FAF               	movwf	vfpfcnvrt@c& (0+255),b
  4905  001900                     
  4906                           ; BSR set to: 0
  4907                           ;/Applications/microchip/xc8/v2.31/pic/sources/c99/common/doprnt.c: 817:             ret
      +                          urn ctoa(fp, c);
  4908  001900  C052  F00D         	movff	vfpfcnvrt@fp,ctoa@fp
  4909  001904  C053  F00E         	movff	vfpfcnvrt@fp+1,ctoa@fp+1
  4910  001908  C0AF  F00F         	movff	vfpfcnvrt@c,ctoa@c
  4911  00190C  ECE9  F021         	call	_ctoa	;wreg free
  4912  001910  C00D  F052         	movff	?_ctoa,?_vfpfcnvrt
  4913  001914  C00E  F053         	movff	?_ctoa+1,?_vfpfcnvrt+1
  4914  001918  EFA5  F00E         	goto	l1123
  4915  00191C                     l4676:
  4916                           
  4917                           ;/Applications/microchip/xc8/v2.31/pic/sources/c99/common/doprnt.c: 847:         if ((*f
      +                          mt[0] == 'd') || (*fmt[0] == 'i')) {
  4918  00191C  C054  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  4919  001920  C055  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  4920  001924  CFDE FFF6          	movff	postinc2,tblptrl
  4921  001928  CFDE FFF7          	movff	postinc2,tblptrh
  4922  00192C  0E07               	movlw	(high __ramtop+-1)
  4923  00192E  64F7               	cpfsgt	tblptrh,c
  4924  001930  D003               	bra	u6187
  4925  001932  0008               	tblrd		*
  4926  001934  50F5               	movf	tablat,w,c
  4927  001936  D005               	bra	u6180
  4928  001938                     u6187:
  4929  001938  CFF6 FFE1          	movff	tblptrl,fsr1l
  4930  00193C  CFF7 FFE2          	movff	tblptrh,fsr1h
  4931  001940  50E7               	movf	indf1,w,c
  4932  001942                     u6180:
  4933  001942  0A64               	xorlw	100
  4934  001944  B4D8               	btfsc	status,2,c
  4935  001946  EFA7  F00C         	goto	u6191
  4936  00194A  EFA9  F00C         	goto	u6190
  4937  00194E                     u6191:
  4938  00194E  EFC4  F00C         	goto	l4680
  4939  001952                     u6190:
  4940  001952  C054  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  4941  001956  C055  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  4942  00195A  CFDE FFF6          	movff	postinc2,tblptrl
  4943  00195E  CFDE FFF7          	movff	postinc2,tblptrh
  4944  001962  0E07               	movlw	(high __ramtop+-1)
  4945  001964  64F7               	cpfsgt	tblptrh,c
  4946  001966  D003               	bra	u6207
  4947  001968  0008               	tblrd		*
  4948  00196A  50F5               	movf	tablat,w,c
  4949  00196C  D005               	bra	u6200
  4950  00196E                     u6207:
  4951  00196E  CFF6 FFE1          	movff	tblptrl,fsr1l
  4952  001972  CFF7 FFE2          	movff	tblptrh,fsr1h
  4953  001976  50E7               	movf	indf1,w,c
  4954  001978                     u6200:
  4955  001978  0A69               	xorlw	105
  4956  00197A  A4D8               	btfss	status,2,c
  4957  00197C  EFC2  F00C         	goto	u6211
  4958  001980  EFC4  F00C         	goto	u6210
  4959  001984                     u6211:
  4960  001984  EF05  F00D         	goto	l4686
  4961  001988                     u6210:
  4962  001988                     l4680:
  4963                           
  4964                           ;/Applications/microchip/xc8/v2.31/pic/sources/c99/common/doprnt.c: 849:             ++*
      +                          fmt;
  4965  001988  C054  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  4966  00198C  C055  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  4967  001990  2ADE               	incf	postinc2,f,c
  4968  001992  0E00               	movlw	0
  4969  001994  22DD               	addwfc	postdec2,f,c
  4970                           
  4971                           ;/Applications/microchip/xc8/v2.31/pic/sources/c99/common/doprnt.c: 850:             ll 
      +                          = (long long)(*(int *)__va_arg(*(int **)ap, (int)0));
  4972  001996  C056  FFD9         	movff	vfpfcnvrt@ap,fsr2l
  4973  00199A  C057  FFDA         	movff	vfpfcnvrt@ap+1,fsr2h
  4974  00199E  CFDF F058          	movff	indf2,??_vfpfcnvrt
  4975  0019A2  0E02               	movlw	2
  4976  0019A4  26DE               	addwf	postinc2,f,c
  4977  0019A6  CFDF F059          	movff	indf2,??_vfpfcnvrt+1
  4978  0019AA  0E00               	movlw	0
  4979  0019AC  22DD               	addwfc	postdec2,f,c
  4980  0019AE  C058  FFD9         	movff	??_vfpfcnvrt,fsr2l
  4981  0019B2  C059  FFDA         	movff	??_vfpfcnvrt+1,fsr2h
  4982  0019B6  CFDE F098          	movff	postinc2,vfpfcnvrt@ll
  4983  0019BA  CFDD F099          	movff	postdec2,vfpfcnvrt@ll+1
  4984  0019BE  0100               	movlb	0	; () banked
  4985  0019C0  0E00               	movlw	0
  4986  0019C2  BF99               	btfsc	(vfpfcnvrt@ll+1)& (0+255),7,b
  4987  0019C4  0EFF               	movlw	-1
  4988  0019C6  6F9A               	movwf	(vfpfcnvrt@ll+2)& (0+255),b
  4989  0019C8  6F9B               	movwf	(vfpfcnvrt@ll+3)& (0+255),b
  4990  0019CA  6F9C               	movwf	(vfpfcnvrt@ll+4)& (0+255),b
  4991  0019CC  6F9D               	movwf	(vfpfcnvrt@ll+5)& (0+255),b
  4992  0019CE  6F9E               	movwf	(vfpfcnvrt@ll+6)& (0+255),b
  4993  0019D0  6F9F               	movwf	(vfpfcnvrt@ll+7)& (0+255),b
  4994  0019D2                     
  4995                           ; BSR set to: 0
  4996                           ;/Applications/microchip/xc8/v2.31/pic/sources/c99/common/doprnt.c: 852:             ret
      +                          urn dtoa(fp, ll);
  4997  0019D2  C052  F01F         	movff	vfpfcnvrt@fp,dtoa@fp
  4998  0019D6  C053  F020         	movff	vfpfcnvrt@fp+1,dtoa@fp+1
  4999  0019DA  C098  F021         	movff	vfpfcnvrt@ll,dtoa@d
  5000  0019DE  C099  F022         	movff	vfpfcnvrt@ll+1,dtoa@d+1
  5001  0019E2  C09A  F023         	movff	vfpfcnvrt@ll+2,dtoa@d+2
  5002  0019E6  C09B  F024         	movff	vfpfcnvrt@ll+3,dtoa@d+3
  5003  0019EA  C09C  F025         	movff	vfpfcnvrt@ll+4,dtoa@d+4
  5004  0019EE  C09D  F026         	movff	vfpfcnvrt@ll+5,dtoa@d+5
  5005  0019F2  C09E  F027         	movff	vfpfcnvrt@ll+6,dtoa@d+6
  5006  0019F6  C09F  F028         	movff	vfpfcnvrt@ll+7,dtoa@d+7
  5007  0019FA  EC21  F017         	call	_dtoa	;wreg free
  5008  0019FE  C01F  F052         	movff	?_dtoa,?_vfpfcnvrt
  5009  001A02  C020  F053         	movff	?_dtoa+1,?_vfpfcnvrt+1
  5010  001A06  EFA5  F00E         	goto	l1123
  5011  001A0A                     l4686:
  5012                           
  5013                           ;/Applications/microchip/xc8/v2.31/pic/sources/c99/common/doprnt.c: 942:         if (ct[
      +                          0] == 'f') {
  5014  001A0A  0E66               	movlw	102
  5015  001A0C  0100               	movlb	0	; () banked
  5016  001A0E  19AC               	xorwf	vfpfcnvrt@ct& (0+255),w,b
  5017  001A10  A4D8               	btfss	status,2,c
  5018  001A12  EF0D  F00D         	goto	u6221
  5019  001A16  EF0F  F00D         	goto	u6220
  5020  001A1A                     u6221:
  5021  001A1A  EF59  F00D         	goto	l4698
  5022  001A1E                     u6220:
  5023  001A1E                     
  5024                           ; BSR set to: 0
  5025                           ;/Applications/microchip/xc8/v2.31/pic/sources/c99/common/doprnt.c: 944:             c =
      +                           (*fmt)[0];
  5026  001A1E  C054  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  5027  001A22  C055  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  5028  001A26  CFDE FFF6          	movff	postinc2,tblptrl
  5029  001A2A  CFDE FFF7          	movff	postinc2,tblptrh
  5030  001A2E  0E07               	movlw	(high __ramtop+-1)
  5031  001A30  64F7               	cpfsgt	tblptrh,c
  5032  001A32  D003               	bra	u6237
  5033  001A34  0008               	tblrd		*
  5034  001A36  50F5               	movf	tablat,w,c
  5035  001A38  D005               	bra	u6230
  5036  001A3A                     u6237:
  5037  001A3A  CFF6 FFE1          	movff	tblptrl,fsr1l
  5038  001A3E  CFF7 FFE2          	movff	tblptrh,fsr1h
  5039  001A42  50E7               	movf	indf1,w,c
  5040  001A44                     u6230:
  5041  001A44  0100               	movlb	0	; () banked
  5042  001A46  6FAF               	movwf	vfpfcnvrt@c& (0+255),b
  5043  001A48                     
  5044                           ; BSR set to: 0
  5045                           ;/Applications/microchip/xc8/v2.31/pic/sources/c99/common/doprnt.c: 945:             ++*
      +                          fmt;
  5046  001A48  C054  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  5047  001A4C  C055  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  5048  001A50  2ADE               	incf	postinc2,f,c
  5049  001A52  0E00               	movlw	0
  5050  001A54  22DD               	addwfc	postdec2,f,c
  5051  001A56                     
  5052                           ; BSR set to: 0
  5053                           ;/Applications/microchip/xc8/v2.31/pic/sources/c99/common/doprnt.c: 946:             f =
      +                           (long double)(*(double *)__va_arg(*(double **)ap, (double)0));
  5054  001A56  C056  FFD9         	movff	vfpfcnvrt@ap,fsr2l
  5055  001A5A  C057  FFDA         	movff	vfpfcnvrt@ap+1,fsr2h
  5056  001A5E  CFDF F058          	movff	indf2,??_vfpfcnvrt
  5057  001A62  0E04               	movlw	4
  5058  001A64  26DE               	addwf	postinc2,f,c
  5059  001A66  CFDF F059          	movff	indf2,??_vfpfcnvrt+1
  5060  001A6A  0E00               	movlw	0
  5061  001A6C  22DD               	addwfc	postdec2,f,c
  5062  001A6E  C058  FFD9         	movff	??_vfpfcnvrt,fsr2l
  5063  001A72  C059  FFDA         	movff	??_vfpfcnvrt+1,fsr2h
  5064  001A76  CFDE F0A8          	movff	postinc2,vfpfcnvrt@f
  5065  001A7A  CFDE F0A9          	movff	postinc2,vfpfcnvrt@f+1
  5066  001A7E  CFDE F0AA          	movff	postinc2,vfpfcnvrt@f+2
  5067  001A82  CFDE F0AB          	movff	postinc2,vfpfcnvrt@f+3
  5068  001A86                     l4694:
  5069                           
  5070                           ; BSR set to: 0
  5071                           ;/Applications/microchip/xc8/v2.31/pic/sources/c99/common/doprnt.c: 948:             ret
      +                          urn efgtoa(fp, f, c);
  5072  001A86  C052  F046         	movff	vfpfcnvrt@fp,efgtoa@fp
  5073  001A8A  C053  F047         	movff	vfpfcnvrt@fp+1,efgtoa@fp+1
  5074  001A8E  C0A8  F048         	movff	vfpfcnvrt@f,efgtoa@f
  5075  001A92  C0A9  F049         	movff	vfpfcnvrt@f+1,efgtoa@f+1
  5076  001A96  C0AA  F04A         	movff	vfpfcnvrt@f+2,efgtoa@f+2
  5077  001A9A  C0AB  F04B         	movff	vfpfcnvrt@f+3,efgtoa@f+3
  5078  001A9E  C0AF  F04C         	movff	vfpfcnvrt@c,efgtoa@c
  5079  001AA2  EC3E  F004         	call	_efgtoa	;wreg free
  5080  001AA6  C046  F052         	movff	?_efgtoa,?_vfpfcnvrt
  5081  001AAA  C047  F053         	movff	?_efgtoa+1,?_vfpfcnvrt+1
  5082  001AAE  EFA5  F00E         	goto	l1123
  5083  001AB2                     l4698:
  5084                           
  5085                           ; BSR set to: 0
  5086                           ;/Applications/microchip/xc8/v2.31/pic/sources/c99/common/doprnt.c: 950:         if (!st
      +                          rncmp(ct, "lf", ((sizeof("lf")/sizeof("lf"[0]))-1))) {
  5087  001AB2  0EAC               	movlw	low vfpfcnvrt@ct
  5088  001AB4  6E01               	movwf	strncmp@_l^0,c
  5089  001AB6  0E00               	movlw	high vfpfcnvrt@ct
  5090  001AB8  6E02               	movwf	(strncmp@_l+1)^0,c
  5091  001ABA  0E77               	movlw	low STR_20
  5092  001ABC  6E03               	movwf	strncmp@_r^0,c
  5093  001ABE  0E08               	movlw	high STR_20
  5094  001AC0  6E04               	movwf	(strncmp@_r+1)^0,c
  5095  001AC2  0E00               	movlw	0
  5096  001AC4  6E06               	movwf	(strncmp@n+1)^0,c
  5097  001AC6  0E02               	movlw	2
  5098  001AC8  6E05               	movwf	strncmp@n^0,c
  5099  001ACA  EC55  F022         	call	_strncmp	;wreg free
  5100  001ACE  5001               	movf	?_strncmp^0,w,c
  5101  001AD0  1002               	iorwf	(?_strncmp+1)^0,w,c
  5102  001AD2  A4D8               	btfss	status,2,c
  5103  001AD4  EF6E  F00D         	goto	u6241
  5104  001AD8  EF70  F00D         	goto	u6240
  5105  001ADC                     u6241:
  5106  001ADC  EF00  F00E         	goto	l4714
  5107  001AE0                     u6240:
  5108  001AE0                     
  5109                           ;/Applications/microchip/xc8/v2.31/pic/sources/c99/common/doprnt.c: 953:             if 
      +                          ((0 ? isupper((int)(*fmt)[0]) : ((unsigned)((int)(*fmt)[0])-'A') < 26)) {
  5110  001AE0  C054  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  5111  001AE4  C055  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  5112  001AE8  CFDE F058          	movff	postinc2,??_vfpfcnvrt
  5113  001AEC  CFDD F059          	movff	postdec2,??_vfpfcnvrt+1
  5114  001AF0  0E01               	movlw	1
  5115  001AF2  2658               	addwf	??_vfpfcnvrt^0,f,c
  5116  001AF4  0E00               	movlw	0
  5117  001AF6  2259               	addwfc	(??_vfpfcnvrt+1)^0,f,c
  5118  001AF8  C058  FFF6         	movff	??_vfpfcnvrt,tblptrl
  5119  001AFC  C059  FFF7         	movff	??_vfpfcnvrt+1,tblptrh
  5120  001B00  6AF8               	clrf	tblptru,c
  5121  001B02  0E07               	movlw	(high __ramtop+-1)
  5122  001B04  64F7               	cpfsgt	tblptrh,c
  5123  001B06  D003               	bra	u6257
  5124  001B08  0008               	tblrd		*
  5125  001B0A  50F5               	movf	tablat,w,c
  5126  001B0C  D005               	bra	u6250
  5127  001B0E                     u6257:
  5128  001B0E  CFF6 FFE1          	movff	tblptrl,fsr1l
  5129  001B12  CFF7 FFE2          	movff	tblptrh,fsr1h
  5130  001B16  50E7               	movf	indf1,w,c
  5131  001B18                     u6250:
  5132  001B18  0100               	movlb	0	; () banked
  5133  001B1A  6FAF               	movwf	vfpfcnvrt@c& (0+255),b
  5134  001B1C  0EBF               	movlw	191
  5135  001B1E  6E58               	movwf	??_vfpfcnvrt^0,c
  5136  001B20  0EFF               	movlw	255
  5137  001B22  6E59               	movwf	(??_vfpfcnvrt+1)^0,c
  5138  001B24  C054  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  5139  001B28  C055  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  5140  001B2C  CFDE FFF6          	movff	postinc2,tblptrl
  5141  001B30  CFDE FFF7          	movff	postinc2,tblptrh
  5142  001B34  0E07               	movlw	(high __ramtop+-1)
  5143  001B36  64F7               	cpfsgt	tblptrh,c
  5144  001B38  D003               	bra	u6267
  5145  001B3A  0008               	tblrd		*
  5146  001B3C  50F5               	movf	tablat,w,c
  5147  001B3E  D005               	bra	u6260
  5148  001B40                     u6267:
  5149  001B40  CFF6 FFE1          	movff	tblptrl,fsr1l
  5150  001B44  CFF7 FFE2          	movff	tblptrh,fsr1h
  5151  001B48  50E7               	movf	indf1,w,c
  5152  001B4A                     u6260:
  5153  001B4A  6E5A               	movwf	(??_vfpfcnvrt+2)^0,c
  5154  001B4C  6A5B               	clrf	(??_vfpfcnvrt+3)^0,c
  5155  001B4E  5058               	movf	??_vfpfcnvrt^0,w,c
  5156  001B50  265A               	addwf	(??_vfpfcnvrt+2)^0,f,c
  5157  001B52  5059               	movf	(??_vfpfcnvrt+1)^0,w,c
  5158  001B54  225B               	addwfc	(??_vfpfcnvrt+3)^0,f,c
  5159  001B56  505B               	movf	(??_vfpfcnvrt+3)^0,w,c
  5160  001B58  E10A               	bnz	u6270
  5161  001B5A  0E1A               	movlw	26
  5162  001B5C  5C5A               	subwf	(??_vfpfcnvrt+2)^0,w,c
  5163  001B5E  A0D8               	btfss	status,0,c
  5164  001B60  EFB4  F00D         	goto	u6271
  5165  001B64  EFB7  F00D         	goto	u6270
  5166  001B68                     u6271:
  5167  001B68  0E01               	movlw	1
  5168  001B6A  EFB8  F00D         	goto	u6280
  5169  001B6E                     u6270:
  5170  001B6E  0E00               	movlw	0
  5171  001B70                     u6280:
  5172  001B70  0100               	movlb	0	; () banked
  5173  001B72  6FA6               	movwf	_vfpfcnvrt$1309& (0+255),b
  5174  001B74  6BA7               	clrf	(_vfpfcnvrt$1309+1)& (0+255),b
  5175  001B76                     
  5176                           ; BSR set to: 0
  5177  001B76  51A6               	movf	_vfpfcnvrt$1309& (0+255),w,b
  5178  001B78  11A7               	iorwf	(_vfpfcnvrt$1309+1)& (0+255),w,b
  5179  001B7A  B4D8               	btfsc	status,2,c
  5180  001B7C  EFC2  F00D         	goto	u6291
  5181  001B80  EFC4  F00D         	goto	u6290
  5182  001B84                     u6291:
  5183  001B84  EFDE  F00D         	goto	l4708
  5184  001B88                     u6290:
  5185  001B88                     
  5186                           ; BSR set to: 0
  5187                           ;/Applications/microchip/xc8/v2.31/pic/sources/c99/common/doprnt.c: 954:                
      +                           f = (*(long double *)__va_arg(*(long double **)ap, (long double)0));
  5188  001B88  C056  FFD9         	movff	vfpfcnvrt@ap,fsr2l
  5189  001B8C  C057  FFDA         	movff	vfpfcnvrt@ap+1,fsr2h
  5190  001B90  CFDF F058          	movff	indf2,??_vfpfcnvrt
  5191  001B94  0E04               	movlw	4
  5192  001B96  26DE               	addwf	postinc2,f,c
  5193  001B98  CFDF F059          	movff	indf2,??_vfpfcnvrt+1
  5194  001B9C  0E00               	movlw	0
  5195  001B9E  22DD               	addwfc	postdec2,f,c
  5196  001BA0  C058  FFD9         	movff	??_vfpfcnvrt,fsr2l
  5197  001BA4  C059  FFDA         	movff	??_vfpfcnvrt+1,fsr2h
  5198  001BA8  CFDE F0A8          	movff	postinc2,vfpfcnvrt@f
  5199  001BAC  CFDE F0A9          	movff	postinc2,vfpfcnvrt@f+1
  5200  001BB0  CFDE F0AA          	movff	postinc2,vfpfcnvrt@f+2
  5201  001BB4  CFDE F0AB          	movff	postinc2,vfpfcnvrt@f+3
  5202                           
  5203                           ;/Applications/microchip/xc8/v2.31/pic/sources/c99/common/doprnt.c: 955:             } e
      +                          lse {
  5204  001BB8  EFF6  F00D         	goto	l1134
  5205  001BBC                     l4708:
  5206                           
  5207                           ; BSR set to: 0
  5208                           ;/Applications/microchip/xc8/v2.31/pic/sources/c99/common/doprnt.c: 956:                
      +                           f = (long double)(*(double *)__va_arg(*(double **)ap, (double)0));
  5209  001BBC  C056  FFD9         	movff	vfpfcnvrt@ap,fsr2l
  5210  001BC0  C057  FFDA         	movff	vfpfcnvrt@ap+1,fsr2h
  5211  001BC4  CFDF F058          	movff	indf2,??_vfpfcnvrt
  5212  001BC8  0E04               	movlw	4
  5213  001BCA  26DE               	addwf	postinc2,f,c
  5214  001BCC  CFDF F059          	movff	indf2,??_vfpfcnvrt+1
  5215  001BD0  0E00               	movlw	0
  5216  001BD2  22DD               	addwfc	postdec2,f,c
  5217  001BD4  C058  FFD9         	movff	??_vfpfcnvrt,fsr2l
  5218  001BD8  C059  FFDA         	movff	??_vfpfcnvrt+1,fsr2h
  5219  001BDC  CFDE F0A8          	movff	postinc2,vfpfcnvrt@f
  5220  001BE0  CFDE F0A9          	movff	postinc2,vfpfcnvrt@f+1
  5221  001BE4  CFDE F0AA          	movff	postinc2,vfpfcnvrt@f+2
  5222  001BE8  CFDE F0AB          	movff	postinc2,vfpfcnvrt@f+3
  5223  001BEC                     l1134:
  5224                           
  5225                           ; BSR set to: 0
  5226                           ;/Applications/microchip/xc8/v2.31/pic/sources/c99/common/doprnt.c: 958:             *fm
      +                          t += ((sizeof("lf")/sizeof("lf"[0]))-1);
  5227  001BEC  0E02               	movlw	2
  5228  001BEE  C054  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  5229  001BF2  C055  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  5230  001BF6  26DE               	addwf	postinc2,f,c
  5231  001BF8  0E00               	movlw	0
  5232  001BFA  22DD               	addwfc	postdec2,f,c
  5233  001BFC  EF43  F00D         	goto	l4694
  5234  001C00                     l4714:
  5235                           
  5236                           ;/Applications/microchip/xc8/v2.31/pic/sources/c99/common/doprnt.c: 1099:         if (*f
      +                          mt[0] == 'n') {
  5237  001C00  C054  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  5238  001C04  C055  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  5239  001C08  CFDE FFF6          	movff	postinc2,tblptrl
  5240  001C0C  CFDE FFF7          	movff	postinc2,tblptrh
  5241  001C10  0E07               	movlw	(high __ramtop+-1)
  5242  001C12  64F7               	cpfsgt	tblptrh,c
  5243  001C14  D003               	bra	u6307
  5244  001C16  0008               	tblrd		*
  5245  001C18  50F5               	movf	tablat,w,c
  5246  001C1A  D005               	bra	u6300
  5247  001C1C                     u6307:
  5248  001C1C  CFF6 FFE1          	movff	tblptrl,fsr1l
  5249  001C20  CFF7 FFE2          	movff	tblptrh,fsr1h
  5250  001C24  50E7               	movf	indf1,w,c
  5251  001C26                     u6300:
  5252  001C26  0A6E               	xorlw	110
  5253  001C28  A4D8               	btfss	status,2,c
  5254  001C2A  EF19  F00E         	goto	u6311
  5255  001C2E  EF1B  F00E         	goto	u6310
  5256  001C32                     u6311:
  5257  001C32  EF44  F00E         	goto	l4724
  5258  001C36                     u6310:
  5259  001C36                     
  5260                           ;/Applications/microchip/xc8/v2.31/pic/sources/c99/common/doprnt.c: 1100:             ++
      +                          *fmt;
  5261  001C36  C054  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  5262  001C3A  C055  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  5263  001C3E  2ADE               	incf	postinc2,f,c
  5264  001C40  0E00               	movlw	0
  5265  001C42  22DD               	addwfc	postdec2,f,c
  5266                           
  5267                           ;/Applications/microchip/xc8/v2.31/pic/sources/c99/common/doprnt.c: 1101:             vp
      +                           = (void *)(*(int * *)__va_arg(*(int * **)ap, (int *)0));
  5268  001C44  C056  FFD9         	movff	vfpfcnvrt@ap,fsr2l
  5269  001C48  C057  FFDA         	movff	vfpfcnvrt@ap+1,fsr2h
  5270  001C4C  CFDF F058          	movff	indf2,??_vfpfcnvrt
  5271  001C50  0E02               	movlw	2
  5272  001C52  26DE               	addwf	postinc2,f,c
  5273  001C54  CFDF F059          	movff	indf2,??_vfpfcnvrt+1
  5274  001C58  0E00               	movlw	0
  5275  001C5A  22DD               	addwfc	postdec2,f,c
  5276  001C5C  C058  FFD9         	movff	??_vfpfcnvrt,fsr2l
  5277  001C60  C059  FFDA         	movff	??_vfpfcnvrt+1,fsr2h
  5278  001C64  CFDE F0A0          	movff	postinc2,vfpfcnvrt@vp
  5279  001C68  CFDD F0A1          	movff	postdec2,vfpfcnvrt@vp+1
  5280  001C6C                     
  5281                           ;/Applications/microchip/xc8/v2.31/pic/sources/c99/common/doprnt.c: 1102:             *(
      +                          int *)vp = nout;
  5282  001C6C  C0A0  FFD9         	movff	vfpfcnvrt@vp,fsr2l
  5283  001C70  C0A1  FFDA         	movff	vfpfcnvrt@vp+1,fsr2h
  5284  001C74  C0D2  FFDE         	movff	_nout,postinc2
  5285  001C78  C0D3  FFDD         	movff	_nout+1,postdec2
  5286  001C7C                     l4720:
  5287                           
  5288                           ;/Applications/microchip/xc8/v2.31/pic/sources/c99/common/doprnt.c: 1103:             re
      +                          turn 0;
  5289  001C7C  0E00               	movlw	0
  5290  001C7E  6E53               	movwf	(?_vfpfcnvrt+1)^0,c
  5291  001C80  0E00               	movlw	0
  5292  001C82  6E52               	movwf	?_vfpfcnvrt^0,c
  5293  001C84  EFA5  F00E         	goto	l1123
  5294  001C88                     l4724:
  5295                           
  5296                           ;/Applications/microchip/xc8/v2.31/pic/sources/c99/common/doprnt.c: 1372:         if ((*
      +                          fmt)[0] == '%') {
  5297  001C88  C054  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  5298  001C8C  C055  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  5299  001C90  CFDE FFF6          	movff	postinc2,tblptrl
  5300  001C94  CFDE FFF7          	movff	postinc2,tblptrh
  5301  001C98  0E07               	movlw	(high __ramtop+-1)
  5302  001C9A  64F7               	cpfsgt	tblptrh,c
  5303  001C9C  D003               	bra	u6327
  5304  001C9E  0008               	tblrd		*
  5305  001CA0  50F5               	movf	tablat,w,c
  5306  001CA2  D005               	bra	u6320
  5307  001CA4                     u6327:
  5308  001CA4  CFF6 FFE1          	movff	tblptrl,fsr1l
  5309  001CA8  CFF7 FFE2          	movff	tblptrh,fsr1h
  5310  001CAC  50E7               	movf	indf1,w,c
  5311  001CAE                     u6320:
  5312  001CAE  0A25               	xorlw	37
  5313  001CB0  A4D8               	btfss	status,2,c
  5314  001CB2  EF5D  F00E         	goto	u6331
  5315  001CB6  EF5F  F00E         	goto	u6330
  5316  001CBA                     u6331:
  5317  001CBA  EF76  F00E         	goto	l4734
  5318  001CBE                     u6330:
  5319  001CBE                     
  5320                           ;/Applications/microchip/xc8/v2.31/pic/sources/c99/common/doprnt.c: 1373:             ++
      +                          *fmt;
  5321  001CBE  C054  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  5322  001CC2  C055  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  5323  001CC6  2ADE               	incf	postinc2,f,c
  5324  001CC8  0E00               	movlw	0
  5325  001CCA  22DD               	addwfc	postdec2,f,c
  5326  001CCC                     
  5327                           ;/Applications/microchip/xc8/v2.31/pic/sources/c99/common/doprnt.c: 1374:             fp
      +                          utc((int)'%', fp);
  5328  001CCC  0E00               	movlw	0
  5329  001CCE  6E05               	movwf	(fputc@c+1)^0,c
  5330  001CD0  0E25               	movlw	37
  5331  001CD2  6E04               	movwf	fputc@c^0,c
  5332  001CD4  C052  F006         	movff	vfpfcnvrt@fp,fputc@fp
  5333  001CD8  C053  F007         	movff	vfpfcnvrt@fp+1,fputc@fp+1
  5334  001CDC  ECC0  F022         	call	_fputc	;wreg free
  5335  001CE0                     l4730:
  5336                           
  5337                           ;/Applications/microchip/xc8/v2.31/pic/sources/c99/common/doprnt.c: 1375:             re
      +                          turn 1;
  5338  001CE0  0E00               	movlw	0
  5339  001CE2  6E53               	movwf	(?_vfpfcnvrt+1)^0,c
  5340  001CE4  0E01               	movlw	1
  5341  001CE6  6E52               	movwf	?_vfpfcnvrt^0,c
  5342  001CE8  EFA5  F00E         	goto	l1123
  5343  001CEC                     l4734:
  5344                           
  5345                           ;/Applications/microchip/xc8/v2.31/pic/sources/c99/common/doprnt.c: 1379:         ++*fmt
      +                          ;
  5346  001CEC  C054  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  5347  001CF0  C055  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  5348  001CF4  2ADE               	incf	postinc2,f,c
  5349  001CF6  0E00               	movlw	0
  5350  001CF8  22DD               	addwfc	postdec2,f,c
  5351  001CFA  EF3E  F00E         	goto	l4720
  5352  001CFE                     l4740:
  5353                           
  5354                           ;/Applications/microchip/xc8/v2.31/pic/sources/c99/common/doprnt.c: 1384:     fputc((int
      +                          )(*fmt)[0], fp);
  5355  001CFE  C054  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  5356  001D02  C055  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  5357  001D06  CFDE FFF6          	movff	postinc2,tblptrl
  5358  001D0A  CFDE FFF7          	movff	postinc2,tblptrh
  5359  001D0E  0E07               	movlw	(high __ramtop+-1)
  5360  001D10  64F7               	cpfsgt	tblptrh,c
  5361  001D12  D003               	bra	u6347
  5362  001D14  0008               	tblrd		*
  5363  001D16  50F5               	movf	tablat,w,c
  5364  001D18  D005               	bra	u6340
  5365  001D1A                     u6347:
  5366  001D1A  CFF6 FFE1          	movff	tblptrl,fsr1l
  5367  001D1E  CFF7 FFE2          	movff	tblptrh,fsr1h
  5368  001D22  50E7               	movf	indf1,w,c
  5369  001D24                     u6340:
  5370  001D24  6E58               	movwf	??_vfpfcnvrt^0,c
  5371  001D26  5058               	movf	??_vfpfcnvrt^0,w,c
  5372  001D28  6E04               	movwf	fputc@c^0,c
  5373  001D2A  6A05               	clrf	(fputc@c+1)^0,c
  5374  001D2C  C052  F006         	movff	vfpfcnvrt@fp,fputc@fp
  5375  001D30  C053  F007         	movff	vfpfcnvrt@fp+1,fputc@fp+1
  5376  001D34  ECC0  F022         	call	_fputc	;wreg free
  5377  001D38                     
  5378                           ;/Applications/microchip/xc8/v2.31/pic/sources/c99/common/doprnt.c: 1385:     ++*fmt;
  5379  001D38  C054  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  5380  001D3C  C055  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  5381  001D40  2ADE               	incf	postinc2,f,c
  5382  001D42  0E00               	movlw	0
  5383  001D44  22DD               	addwfc	postdec2,f,c
  5384  001D46  EF70  F00E         	goto	l4730
  5385  001D4A                     l1123:
  5386  001D4A  0012               	return		;funcret
  5387  001D4C                     __end_of_vfpfcnvrt:
  5388                           	callstack 0
  5389                           
  5390 ;; *************** function _strncmp *****************
  5391 ;; Defined at:
  5392 ;;		line 3 in file "/Applications/microchip/xc8/v2.31/pic/sources/c99/common/strncmp.c"
  5393 ;; Parameters:    Size  Location     Type
  5394 ;;  _l              2    0[COMRAM] PTR const unsigned char 
  5395 ;;		 -> vfpfcnvrt@ct(3), 
  5396 ;;  _r              2    2[COMRAM] PTR const unsigned char 
  5397 ;;		 -> STR_22(3), 
  5398 ;;  n               2    4[COMRAM] unsigned int 
  5399 ;; Auto vars:     Size  Location     Type
  5400 ;;  r               2    9[COMRAM] PTR const unsigned char 
  5401 ;;		 -> STR_22(3), 
  5402 ;;  l               2    7[COMRAM] PTR const unsigned char 
  5403 ;;		 -> vfpfcnvrt@ct(3), 
  5404 ;; Return value:  Size  Location     Type
  5405 ;;                  2    0[COMRAM] int 
  5406 ;; Registers used:
  5407 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru
  5408 ;; Tracked objects:
  5409 ;;		On entry : 0/0
  5410 ;;		On exit  : 0/0
  5411 ;;		Unchanged: 0/0
  5412 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  5413 ;;      Params:         6       0       0       0       0       0       0       0       0
  5414 ;;      Locals:         4       0       0       0       0       0       0       0       0
  5415 ;;      Temps:          1       0       0       0       0       0       0       0       0
  5416 ;;      Totals:        11       0       0       0       0       0       0       0       0
  5417 ;;Total ram usage:       11 bytes
  5418 ;; Hardware stack levels used:    1
  5419 ;; This function calls:
  5420 ;;		Nothing
  5421 ;; This function is called by:
  5422 ;;		_vfpfcnvrt
  5423 ;; This function uses a non-reentrant model
  5424 ;;
  5425                           
  5426                           	psect	text21
  5427  0044AA                     __ptext21:
  5428                           	callstack 0
  5429  0044AA                     _strncmp:
  5430                           	callstack 26
  5431  0044AA  C001  F008         	movff	strncmp@_l,strncmp@l
  5432  0044AE  C002  F009         	movff	strncmp@_l+1,strncmp@l+1
  5433  0044B2  C003  F00A         	movff	strncmp@_r,strncmp@r
  5434  0044B6  C004  F00B         	movff	strncmp@_r+1,strncmp@r+1
  5435  0044BA  0605               	decf	strncmp@n^0,f,c
  5436  0044BC  A0D8               	btfss	status,0,c
  5437  0044BE  0606               	decf	(strncmp@n+1)^0,f,c
  5438  0044C0  2805               	incf	strncmp@n^0,w,c
  5439  0044C2  E106               	bnz	u5891
  5440  0044C4  2806               	incf	(strncmp@n+1)^0,w,c
  5441  0044C6  A4D8               	btfss	status,2,c
  5442  0044C8  EF68  F022         	goto	u5891
  5443  0044CC  EF6A  F022         	goto	u5890
  5444  0044D0                     u5891:
  5445  0044D0  EF77  F022         	goto	l4600
  5446  0044D4                     u5890:
  5447  0044D4  0E00               	movlw	0
  5448  0044D6  6E02               	movwf	(?_strncmp+1)^0,c
  5449  0044D8  0E00               	movlw	0
  5450  0044DA  6E01               	movwf	?_strncmp^0,c
  5451  0044DC  EFBF  F022         	goto	l1254
  5452  0044E0                     l4598:
  5453  0044E0  4A08               	infsnz	strncmp@l^0,f,c
  5454  0044E2  2A09               	incf	(strncmp@l+1)^0,f,c
  5455  0044E4  4A0A               	infsnz	strncmp@r^0,f,c
  5456  0044E6  2A0B               	incf	(strncmp@r+1)^0,f,c
  5457  0044E8  0605               	decf	strncmp@n^0,f,c
  5458  0044EA  A0D8               	btfss	status,0,c
  5459  0044EC  0606               	decf	(strncmp@n+1)^0,f,c
  5460  0044EE                     l4600:
  5461  0044EE  C008  FFD9         	movff	strncmp@l,fsr2l
  5462  0044F2  C009  FFDA         	movff	strncmp@l+1,fsr2h
  5463  0044F6  50DF               	movf	indf2,w,c
  5464  0044F8  B4D8               	btfsc	status,2,c
  5465  0044FA  EF81  F022         	goto	u5901
  5466  0044FE  EF83  F022         	goto	u5900
  5467  004502                     u5901:
  5468  004502  EFAE  F022         	goto	l4608
  5469  004506                     u5900:
  5470  004506  C00A  FFF6         	movff	strncmp@r,tblptrl
  5471  00450A  C00B  FFF7         	movff	strncmp@r+1,tblptrh
  5472  00450E                     	if	0	;tblptru may be non-zero
  5473  00450E                     	endif
  5474  00450E                     	if	0	;tblptru may be non-zero
  5475  00450E                     	endif
  5476  00450E  0008               	tblrd		*
  5477  004510  50F5               	movf	tablat,w,c
  5478  004512  0900               	iorlw	0
  5479  004514  B4D8               	btfsc	status,2,c
  5480  004516  EF8F  F022         	goto	u5911
  5481  00451A  EF91  F022         	goto	u5910
  5482  00451E                     u5911:
  5483  00451E  EFAE  F022         	goto	l4608
  5484  004522                     u5910:
  5485  004522  5005               	movf	strncmp@n^0,w,c
  5486  004524  1006               	iorwf	(strncmp@n+1)^0,w,c
  5487  004526  B4D8               	btfsc	status,2,c
  5488  004528  EF98  F022         	goto	u5921
  5489  00452C  EF9A  F022         	goto	u5920
  5490  004530                     u5921:
  5491  004530  EFAE  F022         	goto	l4608
  5492  004534                     u5920:
  5493  004534  C008  FFD9         	movff	strncmp@l,fsr2l
  5494  004538  C009  FFDA         	movff	strncmp@l+1,fsr2h
  5495  00453C  50DF               	movf	indf2,w,c
  5496  00453E  6E07               	movwf	??_strncmp^0,c
  5497  004540  C00A  FFF6         	movff	strncmp@r,tblptrl
  5498  004544  C00B  FFF7         	movff	strncmp@r+1,tblptrh
  5499  004548                     	if	0	;tblptru may be non-zero
  5500  004548                     	endif
  5501  004548                     	if	0	;tblptru may be non-zero
  5502  004548                     	endif
  5503  004548  0008               	tblrd		*
  5504  00454A  50F5               	movf	tablat,w,c
  5505  00454C  1807               	xorwf	??_strncmp^0,w,c
  5506  00454E  B4D8               	btfsc	status,2,c
  5507  004550  EFAC  F022         	goto	u5931
  5508  004554  EFAE  F022         	goto	u5930
  5509  004558                     u5931:
  5510  004558  EF70  F022         	goto	l4598
  5511  00455C                     u5930:
  5512  00455C                     l4608:
  5513  00455C  C008  FFD9         	movff	strncmp@l,fsr2l
  5514  004560  C009  FFDA         	movff	strncmp@l+1,fsr2h
  5515  004564  50DF               	movf	indf2,w,c
  5516  004566  6E07               	movwf	??_strncmp^0,c
  5517  004568  C00A  FFF6         	movff	strncmp@r,tblptrl
  5518  00456C  C00B  FFF7         	movff	strncmp@r+1,tblptrh
  5519  004570                     	if	0	;tblptru may be non-zero
  5520  004570                     	endif
  5521  004570                     	if	0	;tblptru may be non-zero
  5522  004570                     	endif
  5523  004570  0008               	tblrd		*
  5524  004572  50F5               	movf	tablat,w,c
  5525  004574  5C07               	subwf	??_strncmp^0,w,c
  5526  004576  6E01               	movwf	?_strncmp^0,c
  5527  004578  6A02               	clrf	(?_strncmp+1)^0,c
  5528  00457A  A0D8               	btfss	status,0,c
  5529  00457C  0602               	decf	(?_strncmp+1)^0,f,c
  5530  00457E                     l1254:
  5531  00457E  0012               	return		;funcret
  5532  004580                     __end_of_strncmp:
  5533                           	callstack 0
  5534                           
  5535 ;; *************** function _efgtoa *****************
  5536 ;; Defined at:
  5537 ;;		line 332 in file "/Applications/microchip/xc8/v2.31/pic/sources/c99/common/doprnt.c"
  5538 ;; Parameters:    Size  Location     Type
  5539 ;;  fp              2   69[COMRAM] PTR struct _IO_FILE
  5540 ;;		 -> NULL(0), sprintf@f(6), 
  5541 ;;  f               4   71[COMRAM] PTR struct _IO_FILE
  5542 ;;  c               1   75[COMRAM] unsigned char 
  5543 ;; Auto vars:     Size  Location     Type
  5544 ;;  u               4   52[BANK0 ] unsigned char 
  5545 ;;  g               4   44[BANK0 ] unsigned char 
  5546 ;;  l               4   38[BANK0 ] unsigned char 
  5547 ;;  h               4   34[BANK0 ] unsigned char 
  5548 ;;  ou              4   20[BANK0 ] unsigned char 
  5549 ;;  n               2   50[BANK0 ] int 
  5550 ;;  e               2   48[BANK0 ] int 
  5551 ;;  i               2   42[BANK0 ] int 
  5552 ;;  w               2   30[BANK0 ] int 
  5553 ;;  p               2   28[BANK0 ] int 
  5554 ;;  sign            2   26[BANK0 ] int 
  5555 ;;  d               2   24[BANK0 ] int 
  5556 ;;  m               2   18[BANK0 ] int 
  5557 ;;  ne              2   16[BANK0 ] int 
  5558 ;;  pp              2   14[BANK0 ] int 
  5559 ;;  t               2   12[BANK0 ] int 
  5560 ;;  mode            1   33[BANK0 ] unsigned char 
  5561 ;;  nmode           1   32[BANK0 ] unsigned char 
  5562 ;; Return value:  Size  Location     Type
  5563 ;;                  2   69[COMRAM] int 
  5564 ;; Registers used:
  5565 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  5566 ;; Tracked objects:
  5567 ;;		On entry : 0/0
  5568 ;;		On exit  : 0/0
  5569 ;;		Unchanged: 0/0
  5570 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  5571 ;;      Params:         7       0       0       0       0       0       0       0       0
  5572 ;;      Locals:         0      56       0       0       0       0       0       0       0
  5573 ;;      Temps:          5       0       0       0       0       0       0       0       0
  5574 ;;      Totals:        12      56       0       0       0       0       0       0       0
  5575 ;;Total ram usage:       68 bytes
  5576 ;; Hardware stack levels used:    1
  5577 ;; Hardware stack levels required when called:    4
  5578 ;; This function calls:
  5579 ;;		___awdiv
  5580 ;;		___awmod
  5581 ;;		___fladd
  5582 ;;		___fldiv
  5583 ;;		___fleq
  5584 ;;		___flge
  5585 ;;		___flmul
  5586 ;;		___flneg
  5587 ;;		___flsub
  5588 ;;		___fltol
  5589 ;;		___fpclassifyf
  5590 ;;		_floorf
  5591 ;;		_isupper
  5592 ;;		_pad
  5593 ;;		_strcpy
  5594 ;;		_tolower
  5595 ;; This function is called by:
  5596 ;;		_vfpfcnvrt
  5597 ;; This function uses a non-reentrant model
  5598 ;;
  5599                           
  5600                           	psect	text22
  5601  00087C                     __ptext22:
  5602                           	callstack 0
  5603  00087C                     _efgtoa:
  5604                           	callstack 22
  5605  00087C                     
  5606                           ;/Applications/microchip/xc8/v2.31/pic/sources/c99/common/doprnt.c: 332: static int efgt
      +                          oa(FILE *fp, long double f, char c);/Applications/microchip/xc8/v2.31/pic/sources/c99/co
      +                          mmon/doprnt.c: 333: {;/Applications/microchip/xc8/v2.31/pic/sources/c99/common/doprnt.c:
      +                           334:     char mode, nmode;;/Applications/microchip/xc8/v2.31/pic/sources/c99/common/dop
      +                          rnt.c: 335:     int d, e, i, m, n, ne, p, pp, sign, t, w;;/Applications/microchip/xc8/v2
      +                          .31/pic/sources/c99/common/doprnt.c: 336:     long double g, h, l, ou, u;
  5607  00087C  0E00               	movlw	0
  5608  00087E  0100               	movlb	0	; () banked
  5609  000880  6F7B               	movwf	(efgtoa@sign+1)& (0+255),b
  5610  000882  0E00               	movlw	0
  5611  000884  6F7A               	movwf	efgtoa@sign& (0+255),b
  5612  000886                     
  5613                           ; BSR set to: 0
  5614                           ;/Applications/microchip/xc8/v2.31/pic/sources/c99/common/doprnt.c: 340:     g = f;
  5615  000886  C048  F08C         	movff	efgtoa@f,efgtoa@g
  5616  00088A  C049  F08D         	movff	efgtoa@f+1,efgtoa@g+1
  5617  00088E  C04A  F08E         	movff	efgtoa@f+2,efgtoa@g+2
  5618  000892  C04B  F08F         	movff	efgtoa@f+3,efgtoa@g+3
  5619  000896                     
  5620                           ; BSR set to: 0
  5621                           ;/Applications/microchip/xc8/v2.31/pic/sources/c99/common/doprnt.c: 341:     if (g < 0.0
      +                          ) {
  5622  000896  BF8F               	btfsc	(efgtoa@g+3)& (0+255),7,b
  5623  000898  EF52  F004         	goto	u5230
  5624  00089C  EF50  F004         	goto	u5231
  5625  0008A0                     u5231:
  5626  0008A0  EF68  F004         	goto	l4252
  5627  0008A4                     u5230:
  5628  0008A4                     
  5629                           ; BSR set to: 0
  5630                           ;/Applications/microchip/xc8/v2.31/pic/sources/c99/common/doprnt.c: 342:         sign = 
      +                          1;
  5631  0008A4  0E00               	movlw	0
  5632  0008A6  6F7B               	movwf	(efgtoa@sign+1)& (0+255),b
  5633  0008A8  0E01               	movlw	1
  5634  0008AA  6F7A               	movwf	efgtoa@sign& (0+255),b
  5635  0008AC                     
  5636                           ; BSR set to: 0
  5637                           ;/Applications/microchip/xc8/v2.31/pic/sources/c99/common/doprnt.c: 343:         g = -g;
  5638  0008AC  C08C  F001         	movff	efgtoa@g,___flneg@f1
  5639  0008B0  C08D  F002         	movff	efgtoa@g+1,___flneg@f1+1
  5640  0008B4  C08E  F003         	movff	efgtoa@g+2,___flneg@f1+2
  5641  0008B8  C08F  F004         	movff	efgtoa@g+3,___flneg@f1+3
  5642  0008BC  EC97  F027         	call	___flneg	;wreg free
  5643  0008C0  C001  F08C         	movff	?___flneg,efgtoa@g
  5644  0008C4  C002  F08D         	movff	?___flneg+1,efgtoa@g+1
  5645  0008C8  C003  F08E         	movff	?___flneg+2,efgtoa@g+2
  5646  0008CC  C004  F08F         	movff	?___flneg+3,efgtoa@g+3
  5647  0008D0                     l4252:
  5648                           
  5649                           ;/Applications/microchip/xc8/v2.31/pic/sources/c99/common/doprnt.c: 347:     n = 0;
  5650  0008D0  0E00               	movlw	0
  5651  0008D2  0100               	movlb	0	; () banked
  5652  0008D4  6F93               	movwf	(efgtoa@n+1)& (0+255),b
  5653  0008D6  0E00               	movlw	0
  5654  0008D8  6F92               	movwf	efgtoa@n& (0+255),b
  5655  0008DA                     
  5656                           ; BSR set to: 0
  5657                           ;/Applications/microchip/xc8/v2.31/pic/sources/c99/common/doprnt.c: 348:     w = width;
  5658  0008DA  C0D4  F07E         	movff	_width,efgtoa@w
  5659  0008DE  C0D5  F07F         	movff	_width+1,efgtoa@w+1
  5660  0008E2                     
  5661                           ; BSR set to: 0
  5662                           ;/Applications/microchip/xc8/v2.31/pic/sources/c99/common/doprnt.c: 349:     if (sign ||
      +                           (flags & (1 << 2))) {
  5663  0008E2  517A               	movf	efgtoa@sign& (0+255),w,b
  5664  0008E4  117B               	iorwf	(efgtoa@sign+1)& (0+255),w,b
  5665  0008E6  A4D8               	btfss	status,2,c
  5666  0008E8  EF78  F004         	goto	u5241
  5667  0008EC  EF7A  F004         	goto	u5240
  5668  0008F0                     u5241:
  5669  0008F0  EF81  F004         	goto	l4260
  5670  0008F4                     u5240:
  5671  0008F4                     
  5672                           ; BSR set to: 0
  5673  0008F4  A5D8               	btfss	_flags& (0+255),2,b
  5674  0008F6  EF7F  F004         	goto	u5251
  5675  0008FA  EF81  F004         	goto	u5250
  5676  0008FE                     u5251:
  5677  0008FE  EF9B  F004         	goto	l4272
  5678  000902                     u5250:
  5679  000902                     l4260:
  5680                           
  5681                           ; BSR set to: 0
  5682                           ;/Applications/microchip/xc8/v2.31/pic/sources/c99/common/doprnt.c: 350:         dbuf[n]
      +                           = sign ? '-' : '+';
  5683  000902  517A               	movf	efgtoa@sign& (0+255),w,b
  5684  000904  117B               	iorwf	(efgtoa@sign+1)& (0+255),w,b
  5685  000906  A4D8               	btfss	status,2,c
  5686  000908  EF88  F004         	goto	u5261
  5687  00090C  EF8A  F004         	goto	u5260
  5688  000910                     u5261:
  5689  000910  EF90  F004         	goto	l4264
  5690  000914                     u5260:
  5691  000914                     
  5692                           ; BSR set to: 0
  5693  000914  0E00               	movlw	0
  5694  000916  6F61               	movwf	(_efgtoa$1277+1)& (0+255),b
  5695  000918  0E2B               	movlw	43
  5696  00091A  6F60               	movwf	_efgtoa$1277& (0+255),b
  5697  00091C  EF94  F004         	goto	l4266
  5698  000920                     l4264:
  5699                           
  5700                           ; BSR set to: 0
  5701  000920  0E00               	movlw	0
  5702  000922  6F61               	movwf	(_efgtoa$1277+1)& (0+255),b
  5703  000924  0E2D               	movlw	45
  5704  000926  6F60               	movwf	_efgtoa$1277& (0+255),b
  5705  000928                     l4266:
  5706                           
  5707                           ; BSR set to: 0
  5708  000928  C060  F120         	movff	_efgtoa$1277,_dbuf
  5709  00092C                     
  5710                           ; BSR set to: 0
  5711                           ;/Applications/microchip/xc8/v2.31/pic/sources/c99/common/doprnt.c: 351:         ++n;
  5712  00092C  4B92               	infsnz	efgtoa@n& (0+255),f,b
  5713  00092E  2B93               	incf	(efgtoa@n+1)& (0+255),f,b
  5714  000930                     
  5715                           ; BSR set to: 0
  5716                           ;/Applications/microchip/xc8/v2.31/pic/sources/c99/common/doprnt.c: 352:         --w;
  5717  000930  077E               	decf	efgtoa@w& (0+255),f,b
  5718  000932  A0D8               	btfss	status,0,c
  5719  000934  077F               	decf	(efgtoa@w+1)& (0+255),f,b
  5720  000936                     l4272:
  5721                           
  5722                           ; BSR set to: 0
  5723                           ;/Applications/microchip/xc8/v2.31/pic/sources/c99/common/doprnt.c: 357:         if ((0 
      +                          ? isupper((int)c) : ((unsigned)((int)c)-'A') < 26)) {
  5724  000936  C08C  F001         	movff	efgtoa@g,___fpclassifyf@x
  5725  00093A  C08D  F002         	movff	efgtoa@g+1,___fpclassifyf@x+1
  5726  00093E  C08E  F003         	movff	efgtoa@g+2,___fpclassifyf@x+2
  5727  000942  C08F  F004         	movff	efgtoa@g+3,___fpclassifyf@x+3
  5728  000946  EC6A  F021         	call	___fpclassifyf	;wreg free
  5729  00094A  0401               	decf	?___fpclassifyf^0,w,c
  5730  00094C  1002               	iorwf	(?___fpclassifyf+1)^0,w,c
  5731  00094E  A4D8               	btfss	status,2,c
  5732  000950  EFAC  F004         	goto	u5271
  5733  000954  EFAE  F004         	goto	u5270
  5734  000958                     u5271:
  5735  000958  EF05  F005         	goto	l4290
  5736  00095C                     u5270:
  5737  00095C  0EBF               	movlw	191
  5738  00095E  6E4D               	movwf	??_efgtoa^0,c
  5739  000960  0EFF               	movlw	255
  5740  000962  6E4E               	movwf	(??_efgtoa+1)^0,c
  5741  000964  504C               	movf	efgtoa@c^0,w,c
  5742  000966  6E4F               	movwf	(??_efgtoa+2)^0,c
  5743  000968  6A50               	clrf	(??_efgtoa+3)^0,c
  5744  00096A  504D               	movf	??_efgtoa^0,w,c
  5745  00096C  264F               	addwf	(??_efgtoa+2)^0,f,c
  5746  00096E  504E               	movf	(??_efgtoa+1)^0,w,c
  5747  000970  2250               	addwfc	(??_efgtoa+3)^0,f,c
  5748  000972  5050               	movf	(??_efgtoa+3)^0,w,c
  5749  000974  E10A               	bnz	u5280
  5750  000976  0E1A               	movlw	26
  5751  000978  5C4F               	subwf	(??_efgtoa+2)^0,w,c
  5752  00097A  A0D8               	btfss	status,0,c
  5753  00097C  EFC2  F004         	goto	u5281
  5754  000980  EFC5  F004         	goto	u5280
  5755  000984                     u5281:
  5756  000984  0E01               	movlw	1
  5757  000986  EFC6  F004         	goto	u5290
  5758  00098A                     u5280:
  5759  00098A  0E00               	movlw	0
  5760  00098C                     u5290:
  5761  00098C  0100               	movlb	0	; () banked
  5762  00098E  6F62               	movwf	_efgtoa$1278& (0+255),b
  5763  000990  6B63               	clrf	(_efgtoa$1278+1)& (0+255),b
  5764  000992                     
  5765                           ; BSR set to: 0
  5766  000992  5162               	movf	_efgtoa$1278& (0+255),w,b
  5767  000994  1163               	iorwf	(_efgtoa$1278+1)& (0+255),w,b
  5768  000996  B4D8               	btfsc	status,2,c
  5769  000998  EFD0  F004         	goto	u5301
  5770  00099C  EFD2  F004         	goto	u5300
  5771  0009A0                     u5301:
  5772  0009A0  EFE0  F004         	goto	l4282
  5773  0009A4                     u5300:
  5774  0009A4                     
  5775                           ; BSR set to: 0
  5776                           ;/Applications/microchip/xc8/v2.31/pic/sources/c99/common/doprnt.c: 358:             str
      +                          cpy(&dbuf[n], "INF");
  5777  0009A4  0E20               	movlw	low _dbuf
  5778  0009A6  2592               	addwf	efgtoa@n& (0+255),w,b
  5779  0009A8  6E01               	movwf	strcpy@dest^0,c
  5780  0009AA  0E01               	movlw	high _dbuf
  5781  0009AC  2193               	addwfc	(efgtoa@n+1)& (0+255),w,b
  5782  0009AE  6E02               	movwf	(strcpy@dest+1)^0,c
  5783  0009B0  0E67               	movlw	low STR_12
  5784  0009B2  6E03               	movwf	strcpy@src^0,c
  5785  0009B4  0E08               	movlw	high STR_12
  5786  0009B6  6E04               	movwf	(strcpy@src+1)^0,c
  5787  0009B8  EC2F  F026         	call	_strcpy	;wreg free
  5788                           
  5789                           ;/Applications/microchip/xc8/v2.31/pic/sources/c99/common/doprnt.c: 359:         } else 
      +                          {
  5790  0009BC  EFEC  F004         	goto	l4284
  5791  0009C0                     l4282:
  5792                           
  5793                           ; BSR set to: 0
  5794                           ;/Applications/microchip/xc8/v2.31/pic/sources/c99/common/doprnt.c: 360:             str
      +                          cpy(&dbuf[n], "inf");
  5795  0009C0  0E20               	movlw	low _dbuf
  5796  0009C2  2592               	addwf	efgtoa@n& (0+255),w,b
  5797  0009C4  6E01               	movwf	strcpy@dest^0,c
  5798  0009C6  0E01               	movlw	high _dbuf
  5799  0009C8  2193               	addwfc	(efgtoa@n+1)& (0+255),w,b
  5800  0009CA  6E02               	movwf	(strcpy@dest+1)^0,c
  5801  0009CC  0E6F               	movlw	low STR_13
  5802  0009CE  6E03               	movwf	strcpy@src^0,c
  5803  0009D0  0E08               	movlw	high STR_13
  5804  0009D2  6E04               	movwf	(strcpy@src+1)^0,c
  5805  0009D4  EC2F  F026         	call	_strcpy	;wreg free
  5806  0009D8                     l4284:
  5807                           
  5808                           ;/Applications/microchip/xc8/v2.31/pic/sources/c99/common/doprnt.c: 362:         w -= ((
      +                          sizeof("inf")/sizeof("inf"[0]))-1);
  5809  0009D8  0100               	movlb	0	; () banked
  5810  0009DA  0EFD               	movlw	253
  5811  0009DC  277E               	addwf	efgtoa@w& (0+255),f,b
  5812  0009DE  0EFF               	movlw	255
  5813  0009E0  237F               	addwfc	(efgtoa@w+1)& (0+255),f,b
  5814  0009E2                     l4286:
  5815                           
  5816                           ;/Applications/microchip/xc8/v2.31/pic/sources/c99/common/doprnt.c: 363:         return 
      +                          pad(fp, &dbuf[0], w);
  5817  0009E2  C046  F014         	movff	efgtoa@fp,pad@fp
  5818  0009E6  C047  F015         	movff	efgtoa@fp+1,pad@fp+1
  5819  0009EA  0E20               	movlw	low _dbuf
  5820  0009EC  6E16               	movwf	pad@buf^0,c
  5821  0009EE  0E01               	movlw	high _dbuf
  5822  0009F0  6E17               	movwf	(pad@buf+1)^0,c
  5823  0009F2  C07E  F018         	movff	efgtoa@w,pad@p
  5824  0009F6  C07F  F019         	movff	efgtoa@w+1,pad@p+1
  5825  0009FA  EC25  F023         	call	_pad	;wreg free
  5826  0009FE  C014  F046         	movff	?_pad,?_efgtoa
  5827  000A02  C015  F047         	movff	?_pad+1,?_efgtoa+1
  5828  000A06  EF69  F00A         	goto	l1021
  5829  000A0A                     l4290:
  5830                           
  5831                           ;/Applications/microchip/xc8/v2.31/pic/sources/c99/common/doprnt.c: 366:         if ((0 
      +                          ? isupper((int)c) : ((unsigned)((int)c)-'A') < 26)) {
  5832  000A0A  C08C  F001         	movff	efgtoa@g,___fpclassifyf@x
  5833  000A0E  C08D  F002         	movff	efgtoa@g+1,___fpclassifyf@x+1
  5834  000A12  C08E  F003         	movff	efgtoa@g+2,___fpclassifyf@x+2
  5835  000A16  C08F  F004         	movff	efgtoa@g+3,___fpclassifyf@x+3
  5836  000A1A  EC6A  F021         	call	___fpclassifyf	;wreg free
  5837  000A1E  5001               	movf	?___fpclassifyf^0,w,c
  5838  000A20  1002               	iorwf	(?___fpclassifyf+1)^0,w,c
  5839  000A22  A4D8               	btfss	status,2,c
  5840  000A24  EF16  F005         	goto	u5311
  5841  000A28  EF18  F005         	goto	u5310
  5842  000A2C                     u5311:
  5843  000A2C  EF58  F005         	goto	l4308
  5844  000A30                     u5310:
  5845  000A30  0EBF               	movlw	191
  5846  000A32  6E4D               	movwf	??_efgtoa^0,c
  5847  000A34  0EFF               	movlw	255
  5848  000A36  6E4E               	movwf	(??_efgtoa+1)^0,c
  5849  000A38  504C               	movf	efgtoa@c^0,w,c
  5850  000A3A  6E4F               	movwf	(??_efgtoa+2)^0,c
  5851  000A3C  6A50               	clrf	(??_efgtoa+3)^0,c
  5852  000A3E  504D               	movf	??_efgtoa^0,w,c
  5853  000A40  264F               	addwf	(??_efgtoa+2)^0,f,c
  5854  000A42  504E               	movf	(??_efgtoa+1)^0,w,c
  5855  000A44  2250               	addwfc	(??_efgtoa+3)^0,f,c
  5856  000A46  5050               	movf	(??_efgtoa+3)^0,w,c
  5857  000A48  E10A               	bnz	u5320
  5858  000A4A  0E1A               	movlw	26
  5859  000A4C  5C4F               	subwf	(??_efgtoa+2)^0,w,c
  5860  000A4E  A0D8               	btfss	status,0,c
  5861  000A50  EF2C  F005         	goto	u5321
  5862  000A54  EF2F  F005         	goto	u5320
  5863  000A58                     u5321:
  5864  000A58  0E01               	movlw	1
  5865  000A5A  EF30  F005         	goto	u5330
  5866  000A5E                     u5320:
  5867  000A5E  0E00               	movlw	0
  5868  000A60                     u5330:
  5869  000A60  0100               	movlb	0	; () banked
  5870  000A62  6F64               	movwf	_efgtoa$1282& (0+255),b
  5871  000A64  6B65               	clrf	(_efgtoa$1282+1)& (0+255),b
  5872  000A66                     
  5873                           ; BSR set to: 0
  5874  000A66  5164               	movf	_efgtoa$1282& (0+255),w,b
  5875  000A68  1165               	iorwf	(_efgtoa$1282+1)& (0+255),w,b
  5876  000A6A  B4D8               	btfsc	status,2,c
  5877  000A6C  EF3A  F005         	goto	u5341
  5878  000A70  EF3C  F005         	goto	u5340
  5879  000A74                     u5341:
  5880  000A74  EF4A  F005         	goto	l4300
  5881  000A78                     u5340:
  5882  000A78                     
  5883                           ; BSR set to: 0
  5884                           ;/Applications/microchip/xc8/v2.31/pic/sources/c99/common/doprnt.c: 367:             str
      +                          cpy(&dbuf[n], "NAN");
  5885  000A78  0E20               	movlw	low _dbuf
  5886  000A7A  2592               	addwf	efgtoa@n& (0+255),w,b
  5887  000A7C  6E01               	movwf	strcpy@dest^0,c
  5888  000A7E  0E01               	movlw	high _dbuf
  5889  000A80  2193               	addwfc	(efgtoa@n+1)& (0+255),w,b
  5890  000A82  6E02               	movwf	(strcpy@dest+1)^0,c
  5891  000A84  0E6B               	movlw	low STR_16
  5892  000A86  6E03               	movwf	strcpy@src^0,c
  5893  000A88  0E08               	movlw	high STR_16
  5894  000A8A  6E04               	movwf	(strcpy@src+1)^0,c
  5895  000A8C  EC2F  F026         	call	_strcpy	;wreg free
  5896                           
  5897                           ;/Applications/microchip/xc8/v2.31/pic/sources/c99/common/doprnt.c: 368:         } else 
      +                          {
  5898  000A90  EFEC  F004         	goto	l4284
  5899  000A94                     l4300:
  5900                           
  5901                           ; BSR set to: 0
  5902                           ;/Applications/microchip/xc8/v2.31/pic/sources/c99/common/doprnt.c: 369:             str
      +                          cpy(&dbuf[n], "nan");
  5903  000A94  0E20               	movlw	low _dbuf
  5904  000A96  2592               	addwf	efgtoa@n& (0+255),w,b
  5905  000A98  6E01               	movwf	strcpy@dest^0,c
  5906  000A9A  0E01               	movlw	high _dbuf
  5907  000A9C  2193               	addwfc	(efgtoa@n+1)& (0+255),w,b
  5908  000A9E  6E02               	movwf	(strcpy@dest+1)^0,c
  5909  000AA0  0E73               	movlw	low STR_17
  5910  000AA2  6E03               	movwf	strcpy@src^0,c
  5911  000AA4  0E08               	movlw	high STR_17
  5912  000AA6  6E04               	movwf	(strcpy@src+1)^0,c
  5913  000AA8  EC2F  F026         	call	_strcpy	;wreg free
  5914  000AAC  EFEC  F004         	goto	l4284
  5915  000AB0                     l4308:
  5916                           
  5917                           ;/Applications/microchip/xc8/v2.31/pic/sources/c99/common/doprnt.c: 376:     u = 1.0;
  5918  000AB0  0E00               	movlw	0
  5919  000AB2  0100               	movlb	0	; () banked
  5920  000AB4  6F94               	movwf	efgtoa@u& (0+255),b
  5921  000AB6  0E00               	movlw	0
  5922  000AB8  6F95               	movwf	(efgtoa@u+1)& (0+255),b
  5923  000ABA  0E80               	movlw	128
  5924  000ABC  6F96               	movwf	(efgtoa@u+2)& (0+255),b
  5925  000ABE  0E3F               	movlw	63
  5926  000AC0  6F97               	movwf	(efgtoa@u+3)& (0+255),b
  5927                           
  5928                           ;/Applications/microchip/xc8/v2.31/pic/sources/c99/common/doprnt.c: 377:     e = 0;
  5929  000AC2  0E00               	movlw	0
  5930  000AC4  6F91               	movwf	(efgtoa@e+1)& (0+255),b
  5931  000AC6  0E00               	movlw	0
  5932  000AC8  6F90               	movwf	efgtoa@e& (0+255),b
  5933  000ACA                     
  5934                           ; BSR set to: 0
  5935                           ;/Applications/microchip/xc8/v2.31/pic/sources/c99/common/doprnt.c: 378:     if (!(g == 
      +                          0.0)) {
  5936  000ACA  C08C  F001         	movff	efgtoa@g,___fleq@ff1
  5937  000ACE  C08D  F002         	movff	efgtoa@g+1,___fleq@ff1+1
  5938  000AD2  C08E  F003         	movff	efgtoa@g+2,___fleq@ff1+2
  5939  000AD6  C08F  F004         	movff	efgtoa@g+3,___fleq@ff1+3
  5940  000ADA  0E00               	movlw	0
  5941  000ADC  6E05               	movwf	___fleq@ff2^0,c
  5942  000ADE  0E00               	movlw	0
  5943  000AE0  6E06               	movwf	(___fleq@ff2+1)^0,c
  5944  000AE2  0E00               	movlw	0
  5945  000AE4  6E07               	movwf	(___fleq@ff2+2)^0,c
  5946  000AE6  0E00               	movlw	0
  5947  000AE8  6E08               	movwf	(___fleq@ff2+3)^0,c
  5948  000AEA  EC42  F024         	call	___fleq	;wreg free
  5949  000AEE  B0D8               	btfsc	status,0,c
  5950  000AF0  EF7C  F005         	goto	u5351
  5951  000AF4  EF7E  F005         	goto	u5350
  5952  000AF8                     u5351:
  5953  000AF8  EF01  F006         	goto	l4326
  5954  000AFC                     u5350:
  5955  000AFC  EF9D  F005         	goto	l4318
  5956  000B00                     l4314:
  5957                           
  5958                           ;/Applications/microchip/xc8/v2.31/pic/sources/c99/common/doprnt.c: 380:             u =
      +                           u*10.0;
  5959  000B00  C094  F019         	movff	efgtoa@u,___flmul@b
  5960  000B04  C095  F01A         	movff	efgtoa@u+1,___flmul@b+1
  5961  000B08  C096  F01B         	movff	efgtoa@u+2,___flmul@b+2
  5962  000B0C  C097  F01C         	movff	efgtoa@u+3,___flmul@b+3
  5963  000B10  0E00               	movlw	0
  5964  000B12  6E1D               	movwf	___flmul@a^0,c
  5965  000B14  0E00               	movlw	0
  5966  000B16  6E1E               	movwf	(___flmul@a+1)^0,c
  5967  000B18  0E20               	movlw	32
  5968  000B1A  6E1F               	movwf	(___flmul@a+2)^0,c
  5969  000B1C  0E41               	movlw	65
  5970  000B1E  6E20               	movwf	(___flmul@a+3)^0,c
  5971  000B20  EC3F  F013         	call	___flmul	;wreg free
  5972  000B24  C019  F094         	movff	?___flmul,efgtoa@u
  5973  000B28  C01A  F095         	movff	?___flmul+1,efgtoa@u+1
  5974  000B2C  C01B  F096         	movff	?___flmul+2,efgtoa@u+2
  5975  000B30  C01C  F097         	movff	?___flmul+3,efgtoa@u+3
  5976  000B34                     
  5977                           ;/Applications/microchip/xc8/v2.31/pic/sources/c99/common/doprnt.c: 381:             ++e
      +                          ;
  5978  000B34  0100               	movlb	0	; () banked
  5979  000B36  4B90               	infsnz	efgtoa@e& (0+255),f,b
  5980  000B38  2B91               	incf	(efgtoa@e+1)& (0+255),f,b
  5981  000B3A                     l4318:
  5982                           
  5983                           ;/Applications/microchip/xc8/v2.31/pic/sources/c99/common/doprnt.c: 379:         while (
      +                          !(g < (u*10.0))) {
  5984  000B3A  C08C  F03A         	movff	efgtoa@g,___flge@ff1
  5985  000B3E  C08D  F03B         	movff	efgtoa@g+1,___flge@ff1+1
  5986  000B42  C08E  F03C         	movff	efgtoa@g+2,___flge@ff1+2
  5987  000B46  C08F  F03D         	movff	efgtoa@g+3,___flge@ff1+3
  5988  000B4A  0E00               	movlw	0
  5989  000B4C  6E1D               	movwf	___flmul@a^0,c
  5990  000B4E  0E00               	movlw	0
  5991  000B50  6E1E               	movwf	(___flmul@a+1)^0,c
  5992  000B52  0E20               	movlw	32
  5993  000B54  6E1F               	movwf	(___flmul@a+2)^0,c
  5994  000B56  0E41               	movlw	65
  5995  000B58  6E20               	movwf	(___flmul@a+3)^0,c
  5996  000B5A  C094  F019         	movff	efgtoa@u,___flmul@b
  5997  000B5E  C095  F01A         	movff	efgtoa@u+1,___flmul@b+1
  5998  000B62  C096  F01B         	movff	efgtoa@u+2,___flmul@b+2
  5999  000B66  C097  F01C         	movff	efgtoa@u+3,___flmul@b+3
  6000  000B6A  EC3F  F013         	call	___flmul	;wreg free
  6001  000B6E  C019  F03E         	movff	?___flmul,___flge@ff2
  6002  000B72  C01A  F03F         	movff	?___flmul+1,___flge@ff2+1
  6003  000B76  C01B  F040         	movff	?___flmul+2,___flge@ff2+2
  6004  000B7A  C01C  F041         	movff	?___flmul+3,___flge@ff2+3
  6005  000B7E  ECE8  F020         	call	___flge	;wreg free
  6006  000B82  B0D8               	btfsc	status,0,c
  6007  000B84  EFC6  F005         	goto	u5361
  6008  000B88  EFC8  F005         	goto	u5360
  6009  000B8C                     u5361:
  6010  000B8C  EF80  F005         	goto	l4314
  6011  000B90                     u5360:
  6012  000B90  EFE8  F005         	goto	l4324
  6013  000B94                     l4320:
  6014                           
  6015                           ;/Applications/microchip/xc8/v2.31/pic/sources/c99/common/doprnt.c: 384:             u =
      +                           u/10.0;
  6016  000B94  C094  F001         	movff	efgtoa@u,___fldiv@b
  6017  000B98  C095  F002         	movff	efgtoa@u+1,___fldiv@b+1
  6018  000B9C  C096  F003         	movff	efgtoa@u+2,___fldiv@b+2
  6019  000BA0  C097  F004         	movff	efgtoa@u+3,___fldiv@b+3
  6020  000BA4  0E00               	movlw	0
  6021  000BA6  6E05               	movwf	___fldiv@a^0,c
  6022  000BA8  0E00               	movlw	0
  6023  000BAA  6E06               	movwf	(___fldiv@a+1)^0,c
  6024  000BAC  0E20               	movlw	32
  6025  000BAE  6E07               	movwf	(___fldiv@a+2)^0,c
  6026  000BB0  0E41               	movlw	65
  6027  000BB2  6E08               	movwf	(___fldiv@a+3)^0,c
  6028  000BB4  EC54  F015         	call	___fldiv	;wreg free
  6029  000BB8  C001  F094         	movff	?___fldiv,efgtoa@u
  6030  000BBC  C002  F095         	movff	?___fldiv+1,efgtoa@u+1
  6031  000BC0  C003  F096         	movff	?___fldiv+2,efgtoa@u+2
  6032  000BC4  C004  F097         	movff	?___fldiv+3,efgtoa@u+3
  6033  000BC8                     
  6034                           ;/Applications/microchip/xc8/v2.31/pic/sources/c99/common/doprnt.c: 385:             --e
      +                          ;
  6035  000BC8  0100               	movlb	0	; () banked
  6036  000BCA  0790               	decf	efgtoa@e& (0+255),f,b
  6037  000BCC  A0D8               	btfss	status,0,c
  6038  000BCE  0791               	decf	(efgtoa@e+1)& (0+255),f,b
  6039  000BD0                     l4324:
  6040                           
  6041                           ;/Applications/microchip/xc8/v2.31/pic/sources/c99/common/doprnt.c: 383:         while (
      +                          g < u) {
  6042  000BD0  C08C  F03A         	movff	efgtoa@g,___flge@ff1
  6043  000BD4  C08D  F03B         	movff	efgtoa@g+1,___flge@ff1+1
  6044  000BD8  C08E  F03C         	movff	efgtoa@g+2,___flge@ff1+2
  6045  000BDC  C08F  F03D         	movff	efgtoa@g+3,___flge@ff1+3
  6046  000BE0  C094  F03E         	movff	efgtoa@u,___flge@ff2
  6047  000BE4  C095  F03F         	movff	efgtoa@u+1,___flge@ff2+1
  6048  000BE8  C096  F040         	movff	efgtoa@u+2,___flge@ff2+2
  6049  000BEC  C097  F041         	movff	efgtoa@u+3,___flge@ff2+3
  6050  000BF0  ECE8  F020         	call	___flge	;wreg free
  6051  000BF4  A0D8               	btfss	status,0,c
  6052  000BF6  EFFF  F005         	goto	u5371
  6053  000BFA  EF01  F006         	goto	u5370
  6054  000BFE                     u5371:
  6055  000BFE  EFCA  F005         	goto	l4320
  6056  000C02                     u5370:
  6057  000C02                     l4326:
  6058                           
  6059                           ;/Applications/microchip/xc8/v2.31/pic/sources/c99/common/doprnt.c: 390:     mode = (cha
      +                          r)tolower((int)c);
  6060  000C02  C04C  F007         	movff	efgtoa@c,tolower@c
  6061  000C06  6A08               	clrf	(tolower@c+1)^0,c
  6062  000C08  ECFF  F025         	call	_tolower	;wreg free
  6063  000C0C  5007               	movf	?_tolower^0,w,c
  6064  000C0E  0100               	movlb	0	; () banked
  6065  000C10  6F81               	movwf	efgtoa@mode& (0+255),b
  6066  000C12                     
  6067                           ; BSR set to: 0
  6068                           ;/Applications/microchip/xc8/v2.31/pic/sources/c99/common/doprnt.c: 391:     nmode = mod
      +                          e;
  6069  000C12  C081  F080         	movff	efgtoa@mode,efgtoa@nmode
  6070  000C16                     
  6071                           ; BSR set to: 0
  6072                           ;/Applications/microchip/xc8/v2.31/pic/sources/c99/common/doprnt.c: 392:     if (mode ==
      +                           'g') {
  6073  000C16  0E67               	movlw	103
  6074  000C18  1981               	xorwf	efgtoa@mode& (0+255),w,b
  6075  000C1A  A4D8               	btfss	status,2,c
  6076  000C1C  EF12  F006         	goto	u5381
  6077  000C20  EF14  F006         	goto	u5380
  6078  000C24                     u5381:
  6079  000C24  EF3A  F006         	goto	l4340
  6080  000C28                     u5380:
  6081  000C28                     
  6082                           ; BSR set to: 0
  6083                           ;/Applications/microchip/xc8/v2.31/pic/sources/c99/common/doprnt.c: 393:   if (prec == 0
      +                          ) {
  6084  000C28  51D6               	movf	_prec& (0+255),w,b
  6085  000C2A  11D7               	iorwf	(_prec+1)& (0+255),w,b
  6086  000C2C  A4D8               	btfss	status,2,c
  6087  000C2E  EF1B  F006         	goto	u5391
  6088  000C32  EF1D  F006         	goto	u5390
  6089  000C36                     u5391:
  6090  000C36  EF21  F006         	goto	l4336
  6091  000C3A                     u5390:
  6092  000C3A                     
  6093                           ; BSR set to: 0
  6094                           ;/Applications/microchip/xc8/v2.31/pic/sources/c99/common/doprnt.c: 394:    prec = 1;
  6095  000C3A  0E00               	movlw	0
  6096  000C3C  6FD7               	movwf	(_prec+1)& (0+255),b
  6097  000C3E  0E01               	movlw	1
  6098  000C40  6FD6               	movwf	_prec& (0+255),b
  6099  000C42                     l4336:
  6100                           
  6101                           ; BSR set to: 0
  6102                           ;/Applications/microchip/xc8/v2.31/pic/sources/c99/common/doprnt.c: 396:         p = (0 
      +                          < prec) ? prec : 6;
  6103  000C42  BFD7               	btfsc	(_prec+1)& (0+255),7,b
  6104  000C44  EF2E  F006         	goto	u5400
  6105  000C48  51D7               	movf	(_prec+1)& (0+255),w,b
  6106  000C4A  E106               	bnz	u5401
  6107  000C4C  05D6               	decf	_prec& (0+255),w,b
  6108  000C4E  B0D8               	btfsc	status,0,c
  6109  000C50  EF2C  F006         	goto	u5401
  6110  000C54  EF2E  F006         	goto	u5400
  6111  000C58                     u5401:
  6112  000C58  EF34  F006         	goto	l1039
  6113  000C5C                     u5400:
  6114  000C5C                     l4338:
  6115                           
  6116                           ; BSR set to: 0
  6117  000C5C  0E00               	movlw	0
  6118  000C5E  6F7D               	movwf	(efgtoa@p+1)& (0+255),b
  6119  000C60  0E06               	movlw	6
  6120  000C62  6F7C               	movwf	efgtoa@p& (0+255),b
  6121  000C64  EF43  F006         	goto	l4346
  6122  000C68                     l1039:
  6123                           
  6124                           ; BSR set to: 0
  6125  000C68  C0D6  F07C         	movff	_prec,efgtoa@p
  6126  000C6C  C0D7  F07D         	movff	_prec+1,efgtoa@p+1
  6127  000C70  EF43  F006         	goto	l4346
  6128  000C74                     l4340:
  6129                           
  6130                           ; BSR set to: 0
  6131                           ;/Applications/microchip/xc8/v2.31/pic/sources/c99/common/doprnt.c: 398:         p = (pr
      +                          ec < 0) ? 6 : prec;
  6132  000C74  BFD7               	btfsc	(_prec+1)& (0+255),7,b
  6133  000C76  EF3F  F006         	goto	u5411
  6134  000C7A  EF41  F006         	goto	u5410
  6135  000C7E                     u5411:
  6136  000C7E  EF2E  F006         	goto	l4338
  6137  000C82                     u5410:
  6138  000C82  EF34  F006         	goto	l1039
  6139  000C86                     l4346:
  6140                           
  6141                           ; BSR set to: 0
  6142                           ;/Applications/microchip/xc8/v2.31/pic/sources/c99/common/doprnt.c: 402:     if (mode ==
      +                           'g') {
  6143  000C86  0E67               	movlw	103
  6144  000C88  1981               	xorwf	efgtoa@mode& (0+255),w,b
  6145  000C8A  A4D8               	btfss	status,2,c
  6146  000C8C  EF4A  F006         	goto	u5421
  6147  000C90  EF4C  F006         	goto	u5420
  6148  000C94                     u5421:
  6149  000C94  EF7B  F006         	goto	l4356
  6150  000C98                     u5420:
  6151  000C98                     
  6152                           ; BSR set to: 0
  6153                           ;/Applications/microchip/xc8/v2.31/pic/sources/c99/common/doprnt.c: 403:         if (!(e
      +                           < -4) && !((p - 1) < e)) {
  6154  000C98  AF91               	btfss	(efgtoa@e+1)& (0+255),7,b
  6155  000C9A  EF5A  F006         	goto	u5430
  6156  000C9E  0EFC               	movlw	252
  6157  000CA0  5D90               	subwf	efgtoa@e& (0+255),w,b
  6158  000CA2  0EFF               	movlw	255
  6159  000CA4  5991               	subwfb	(efgtoa@e+1)& (0+255),w,b
  6160  000CA6  A0D8               	btfss	status,0,c
  6161  000CA8  EF58  F006         	goto	u5431
  6162  000CAC  EF5A  F006         	goto	u5430
  6163  000CB0                     u5431:
  6164  000CB0  EF79  F006         	goto	l4354
  6165  000CB4                     u5430:
  6166  000CB4                     
  6167                           ; BSR set to: 0
  6168  000CB4  0EFF               	movlw	255
  6169  000CB6  6E4D               	movwf	??_efgtoa^0,c
  6170  000CB8  0EFF               	movlw	255
  6171  000CBA  6E4E               	movwf	(??_efgtoa+1)^0,c
  6172  000CBC  C07C  F04F         	movff	efgtoa@p,??_efgtoa+2
  6173  000CC0  C07D  F050         	movff	efgtoa@p+1,??_efgtoa+3
  6174  000CC4  504D               	movf	??_efgtoa^0,w,c
  6175  000CC6  264F               	addwf	(??_efgtoa+2)^0,f,c
  6176  000CC8  504E               	movf	(??_efgtoa+1)^0,w,c
  6177  000CCA  2250               	addwfc	(??_efgtoa+3)^0,f,c
  6178  000CCC  5190               	movf	efgtoa@e& (0+255),w,b
  6179  000CCE  5C4F               	subwf	(??_efgtoa+2)^0,w,c
  6180  000CD0  5050               	movf	(??_efgtoa+3)^0,w,c
  6181  000CD2  0A80               	xorlw	128
  6182  000CD4  6E51               	movwf	(??_efgtoa+4)^0,c
  6183  000CD6  5191               	movf	(efgtoa@e+1)& (0+255),w,b
  6184  000CD8  0A80               	xorlw	128
  6185  000CDA  5851               	subwfb	(??_efgtoa+4)^0,w,c
  6186  000CDC  A0D8               	btfss	status,0,c
  6187  000CDE  EF73  F006         	goto	u5441
  6188  000CE2  EF75  F006         	goto	u5440
  6189  000CE6                     u5441:
  6190  000CE6  EF79  F006         	goto	l4354
  6191  000CEA                     u5440:
  6192  000CEA                     
  6193                           ; BSR set to: 0
  6194                           ;/Applications/microchip/xc8/v2.31/pic/sources/c99/common/doprnt.c: 404:             nmo
      +                          de = 'f';
  6195  000CEA  0E66               	movlw	102
  6196  000CEC  6F80               	movwf	efgtoa@nmode& (0+255),b
  6197                           
  6198                           ;/Applications/microchip/xc8/v2.31/pic/sources/c99/common/doprnt.c: 405:         } else 
      +                          {
  6199  000CEE  EF7B  F006         	goto	l4356
  6200  000CF2                     l4354:
  6201                           
  6202                           ; BSR set to: 0
  6203                           ;/Applications/microchip/xc8/v2.31/pic/sources/c99/common/doprnt.c: 406:             nmo
      +                          de = 'e';
  6204  000CF2  0E65               	movlw	101
  6205  000CF4  6F80               	movwf	efgtoa@nmode& (0+255),b
  6206  000CF6                     l4356:
  6207                           
  6208                           ; BSR set to: 0
  6209                           ;/Applications/microchip/xc8/v2.31/pic/sources/c99/common/doprnt.c: 411:     m = p;
  6210  000CF6  C07C  F072         	movff	efgtoa@p,efgtoa@m
  6211  000CFA  C07D  F073         	movff	efgtoa@p+1,efgtoa@m+1
  6212  000CFE                     
  6213                           ; BSR set to: 0
  6214                           ;/Applications/microchip/xc8/v2.31/pic/sources/c99/common/doprnt.c: 412:     if (!(mode 
      +                          == 'g') || ((nmode == 'f') && (e < 0))) {
  6215  000CFE  0E67               	movlw	103
  6216  000D00  1981               	xorwf	efgtoa@mode& (0+255),w,b
  6217  000D02  A4D8               	btfss	status,2,c
  6218  000D04  EF86  F006         	goto	u5451
  6219  000D08  EF88  F006         	goto	u5450
  6220  000D0C                     u5451:
  6221  000D0C  EF98  F006         	goto	l4364
  6222  000D10                     u5450:
  6223  000D10                     
  6224                           ; BSR set to: 0
  6225  000D10  0E66               	movlw	102
  6226  000D12  1980               	xorwf	efgtoa@nmode& (0+255),w,b
  6227  000D14  A4D8               	btfss	status,2,c
  6228  000D16  EF8F  F006         	goto	u5461
  6229  000D1A  EF91  F006         	goto	u5460
  6230  000D1E                     u5461:
  6231  000D1E  EF9A  F006         	goto	l4366
  6232  000D22                     u5460:
  6233  000D22                     
  6234                           ; BSR set to: 0
  6235  000D22  BF91               	btfsc	(efgtoa@e+1)& (0+255),7,b
  6236  000D24  EF98  F006         	goto	u5470
  6237  000D28  EF96  F006         	goto	u5471
  6238  000D2C                     u5471:
  6239  000D2C  EF9A  F006         	goto	l4366
  6240  000D30                     u5470:
  6241  000D30                     l4364:
  6242                           
  6243                           ; BSR set to: 0
  6244                           ;/Applications/microchip/xc8/v2.31/pic/sources/c99/common/doprnt.c: 413:         ++m;
  6245  000D30  4B72               	infsnz	efgtoa@m& (0+255),f,b
  6246  000D32  2B73               	incf	(efgtoa@m+1)& (0+255),f,b
  6247  000D34                     l4366:
  6248                           
  6249                           ; BSR set to: 0
  6250                           ;/Applications/microchip/xc8/v2.31/pic/sources/c99/common/doprnt.c: 417:     if (nmode =
      +                          = 'f') {
  6251  000D34  0E66               	movlw	102
  6252  000D36  1980               	xorwf	efgtoa@nmode& (0+255),w,b
  6253  000D38  A4D8               	btfss	status,2,c
  6254  000D3A  EFA1  F006         	goto	u5481
  6255  000D3E  EFA3  F006         	goto	u5480
  6256  000D42                     u5481:
  6257  000D42  EFC3  F006         	goto	l4376
  6258  000D46                     u5480:
  6259  000D46                     
  6260                           ; BSR set to: 0
  6261                           ;/Applications/microchip/xc8/v2.31/pic/sources/c99/common/doprnt.c: 418:         if (e <
      +                           0) {
  6262  000D46  BF91               	btfsc	(efgtoa@e+1)& (0+255),7,b
  6263  000D48  EFAA  F006         	goto	u5490
  6264  000D4C  EFA8  F006         	goto	u5491
  6265  000D50                     u5491:
  6266  000D50  EFB6  F006         	goto	l4372
  6267  000D54                     u5490:
  6268  000D54                     
  6269                           ; BSR set to: 0
  6270                           ;/Applications/microchip/xc8/v2.31/pic/sources/c99/common/doprnt.c: 419:             u =
      +                           1.0;
  6271  000D54  0E00               	movlw	0
  6272  000D56  6F94               	movwf	efgtoa@u& (0+255),b
  6273  000D58  0E00               	movlw	0
  6274  000D5A  6F95               	movwf	(efgtoa@u+1)& (0+255),b
  6275  000D5C  0E80               	movlw	128
  6276  000D5E  6F96               	movwf	(efgtoa@u+2)& (0+255),b
  6277  000D60  0E3F               	movlw	63
  6278  000D62  6F97               	movwf	(efgtoa@u+3)& (0+255),b
  6279                           
  6280                           ;/Applications/microchip/xc8/v2.31/pic/sources/c99/common/doprnt.c: 420:             e =
      +                           0;
  6281  000D64  0E00               	movlw	0
  6282  000D66  6F91               	movwf	(efgtoa@e+1)& (0+255),b
  6283  000D68  0E00               	movlw	0
  6284  000D6A  6F90               	movwf	efgtoa@e& (0+255),b
  6285  000D6C                     l4372:
  6286                           
  6287                           ; BSR set to: 0
  6288                           ;/Applications/microchip/xc8/v2.31/pic/sources/c99/common/doprnt.c: 422:         if (!(m
      +                          ode == 'g')) {
  6289  000D6C  0E67               	movlw	103
  6290  000D6E  1981               	xorwf	efgtoa@mode& (0+255),w,b
  6291  000D70  B4D8               	btfsc	status,2,c
  6292  000D72  EFBD  F006         	goto	u5501
  6293  000D76  EFBF  F006         	goto	u5500
  6294  000D7A                     u5501:
  6295  000D7A  EFC3  F006         	goto	l4376
  6296  000D7E                     u5500:
  6297  000D7E                     
  6298                           ; BSR set to: 0
  6299                           ;/Applications/microchip/xc8/v2.31/pic/sources/c99/common/doprnt.c: 423:             m +
      +                          = e;
  6300  000D7E  5190               	movf	efgtoa@e& (0+255),w,b
  6301  000D80  2772               	addwf	efgtoa@m& (0+255),f,b
  6302  000D82  5191               	movf	(efgtoa@e+1)& (0+255),w,b
  6303  000D84  2373               	addwfc	(efgtoa@m+1)& (0+255),f,b
  6304  000D86                     l4376:
  6305                           
  6306                           ; BSR set to: 0
  6307                           ;/Applications/microchip/xc8/v2.31/pic/sources/c99/common/doprnt.c: 428:     i = 0;
  6308  000D86  0E00               	movlw	0
  6309  000D88  6F8B               	movwf	(efgtoa@i+1)& (0+255),b
  6310  000D8A  0E00               	movlw	0
  6311  000D8C  6F8A               	movwf	efgtoa@i& (0+255),b
  6312  000D8E                     
  6313                           ; BSR set to: 0
  6314                           ;/Applications/microchip/xc8/v2.31/pic/sources/c99/common/doprnt.c: 429:     h = g;
  6315  000D8E  C08C  F082         	movff	efgtoa@g,efgtoa@h
  6316  000D92  C08D  F083         	movff	efgtoa@g+1,efgtoa@h+1
  6317  000D96  C08E  F084         	movff	efgtoa@g+2,efgtoa@h+2
  6318  000D9A  C08F  F085         	movff	efgtoa@g+3,efgtoa@h+3
  6319  000D9E                     
  6320                           ; BSR set to: 0
  6321                           ;/Applications/microchip/xc8/v2.31/pic/sources/c99/common/doprnt.c: 430:     ou = u;
  6322  000D9E  C094  F074         	movff	efgtoa@u,efgtoa@ou
  6323  000DA2  C095  F075         	movff	efgtoa@u+1,efgtoa@ou+1
  6324  000DA6  C096  F076         	movff	efgtoa@u+2,efgtoa@ou+2
  6325  000DAA  C097  F077         	movff	efgtoa@u+3,efgtoa@ou+3
  6326                           
  6327                           ;/Applications/microchip/xc8/v2.31/pic/sources/c99/common/doprnt.c: 431:     while (i < 
      +                          m) {
  6328  000DAE  EF54  F007         	goto	l4390
  6329  000DB2                     l4382:
  6330                           
  6331                           ; BSR set to: 0
  6332                           ;/Applications/microchip/xc8/v2.31/pic/sources/c99/common/doprnt.c: 432:         l = flo
      +                          orf(h/u);
  6333  000DB2  C082  F001         	movff	efgtoa@h,___fldiv@b
  6334  000DB6  C083  F002         	movff	efgtoa@h+1,___fldiv@b+1
  6335  000DBA  C084  F003         	movff	efgtoa@h+2,___fldiv@b+2
  6336  000DBE  C085  F004         	movff	efgtoa@h+3,___fldiv@b+3
  6337  000DC2  C094  F005         	movff	efgtoa@u,___fldiv@a
  6338  000DC6  C095  F006         	movff	efgtoa@u+1,___fldiv@a+1
  6339  000DCA  C096  F007         	movff	efgtoa@u+2,___fldiv@a+2
  6340  000DCE  C097  F008         	movff	efgtoa@u+3,___fldiv@a+3
  6341  000DD2  EC54  F015         	call	___fldiv	;wreg free
  6342  000DD6  C001  F01A         	movff	?___fldiv,floorf@x
  6343  000DDA  C002  F01B         	movff	?___fldiv+1,floorf@x+1
  6344  000DDE  C003  F01C         	movff	?___fldiv+2,floorf@x+2
  6345  000DE2  C004  F01D         	movff	?___fldiv+3,floorf@x+3
  6346  000DE6  ECE4  F01A         	call	_floorf	;wreg free
  6347  000DEA  C01A  F086         	movff	?_floorf,efgtoa@l
  6348  000DEE  C01B  F087         	movff	?_floorf+1,efgtoa@l+1
  6349  000DF2  C01C  F088         	movff	?_floorf+2,efgtoa@l+2
  6350  000DF6  C01D  F089         	movff	?_floorf+3,efgtoa@l+3
  6351                           
  6352                           ;/Applications/microchip/xc8/v2.31/pic/sources/c99/common/doprnt.c: 433:         d = (in
      +                          t)l;
  6353  000DFA  C086  F001         	movff	efgtoa@l,___fltol@f1
  6354  000DFE  C087  F002         	movff	efgtoa@l+1,___fltol@f1+1
  6355  000E02  C088  F003         	movff	efgtoa@l+2,___fltol@f1+2
  6356  000E06  C089  F004         	movff	efgtoa@l+3,___fltol@f1+3
  6357  000E0A  ECE3  F01F         	call	___fltol	;wreg free
  6358  000E0E  C001  F078         	movff	?___fltol,efgtoa@d
  6359  000E12  C002  F079         	movff	?___fltol+1,efgtoa@d+1
  6360  000E16                     
  6361                           ;/Applications/microchip/xc8/v2.31/pic/sources/c99/common/doprnt.c: 434:         h -= l*
      +                          u;
  6362  000E16  C082  F032         	movff	efgtoa@h,___flsub@b
  6363  000E1A  C083  F033         	movff	efgtoa@h+1,___flsub@b+1
  6364  000E1E  C084  F034         	movff	efgtoa@h+2,___flsub@b+2
  6365  000E22  C085  F035         	movff	efgtoa@h+3,___flsub@b+3
  6366  000E26  C094  F01D         	movff	efgtoa@u,___flmul@a
  6367  000E2A  C095  F01E         	movff	efgtoa@u+1,___flmul@a+1
  6368  000E2E  C096  F01F         	movff	efgtoa@u+2,___flmul@a+2
  6369  000E32  C097  F020         	movff	efgtoa@u+3,___flmul@a+3
  6370  000E36  C086  F019         	movff	efgtoa@l,___flmul@b
  6371  000E3A  C087  F01A         	movff	efgtoa@l+1,___flmul@b+1
  6372  000E3E  C088  F01B         	movff	efgtoa@l+2,___flmul@b+2
  6373  000E42  C089  F01C         	movff	efgtoa@l+3,___flmul@b+3
  6374  000E46  EC3F  F013         	call	___flmul	;wreg free
  6375  000E4A  C019  F036         	movff	?___flmul,___flsub@a
  6376  000E4E  C01A  F037         	movff	?___flmul+1,___flsub@a+1
  6377  000E52  C01B  F038         	movff	?___flmul+2,___flsub@a+2
  6378  000E56  C01C  F039         	movff	?___flmul+3,___flsub@a+3
  6379  000E5A  ECD2  F026         	call	___flsub	;wreg free
  6380  000E5E  C032  F082         	movff	?___flsub,efgtoa@h
  6381  000E62  C033  F083         	movff	?___flsub+1,efgtoa@h+1
  6382  000E66  C034  F084         	movff	?___flsub+2,efgtoa@h+2
  6383  000E6A  C035  F085         	movff	?___flsub+3,efgtoa@h+3
  6384  000E6E                     
  6385                           ;/Applications/microchip/xc8/v2.31/pic/sources/c99/common/doprnt.c: 435:         u = u/1
      +                          0.0;
  6386  000E6E  C094  F001         	movff	efgtoa@u,___fldiv@b
  6387  000E72  C095  F002         	movff	efgtoa@u+1,___fldiv@b+1
  6388  000E76  C096  F003         	movff	efgtoa@u+2,___fldiv@b+2
  6389  000E7A  C097  F004         	movff	efgtoa@u+3,___fldiv@b+3
  6390  000E7E  0E00               	movlw	0
  6391  000E80  6E05               	movwf	___fldiv@a^0,c
  6392  000E82  0E00               	movlw	0
  6393  000E84  6E06               	movwf	(___fldiv@a+1)^0,c
  6394  000E86  0E20               	movlw	32
  6395  000E88  6E07               	movwf	(___fldiv@a+2)^0,c
  6396  000E8A  0E41               	movlw	65
  6397  000E8C  6E08               	movwf	(___fldiv@a+3)^0,c
  6398  000E8E  EC54  F015         	call	___fldiv	;wreg free
  6399  000E92  C001  F094         	movff	?___fldiv,efgtoa@u
  6400  000E96  C002  F095         	movff	?___fldiv+1,efgtoa@u+1
  6401  000E9A  C003  F096         	movff	?___fldiv+2,efgtoa@u+2
  6402  000E9E  C004  F097         	movff	?___fldiv+3,efgtoa@u+3
  6403  000EA2                     
  6404                           ;/Applications/microchip/xc8/v2.31/pic/sources/c99/common/doprnt.c: 436:         ++i;
  6405  000EA2  0100               	movlb	0	; () banked
  6406  000EA4  4B8A               	infsnz	efgtoa@i& (0+255),f,b
  6407  000EA6  2B8B               	incf	(efgtoa@i+1)& (0+255),f,b
  6408  000EA8                     l4390:
  6409                           
  6410                           ; BSR set to: 0
  6411                           ;/Applications/microchip/xc8/v2.31/pic/sources/c99/common/doprnt.c: 431:     while (i < 
      +                          m) {
  6412  000EA8  5172               	movf	efgtoa@m& (0+255),w,b
  6413  000EAA  5D8A               	subwf	efgtoa@i& (0+255),w,b
  6414  000EAC  518B               	movf	(efgtoa@i+1)& (0+255),w,b
  6415  000EAE  0A80               	xorlw	128
  6416  000EB0  6E4D               	movwf	??_efgtoa^0,c
  6417  000EB2  5173               	movf	(efgtoa@m+1)& (0+255),w,b
  6418  000EB4  0A80               	xorlw	128
  6419  000EB6  584D               	subwfb	??_efgtoa^0,w,c
  6420  000EB8  A0D8               	btfss	status,0,c
  6421  000EBA  EF61  F007         	goto	u5511
  6422  000EBE  EF63  F007         	goto	u5510
  6423  000EC2                     u5511:
  6424  000EC2  EFD9  F006         	goto	l4382
  6425  000EC6                     u5510:
  6426  000EC6                     
  6427                           ; BSR set to: 0
  6428                           ;/Applications/microchip/xc8/v2.31/pic/sources/c99/common/doprnt.c: 440:     l = u*5.0;
  6429  000EC6  C094  F019         	movff	efgtoa@u,___flmul@b
  6430  000ECA  C095  F01A         	movff	efgtoa@u+1,___flmul@b+1
  6431  000ECE  C096  F01B         	movff	efgtoa@u+2,___flmul@b+2
  6432  000ED2  C097  F01C         	movff	efgtoa@u+3,___flmul@b+3
  6433  000ED6  0E00               	movlw	0
  6434  000ED8  6E1D               	movwf	___flmul@a^0,c
  6435  000EDA  0E00               	movlw	0
  6436  000EDC  6E1E               	movwf	(___flmul@a+1)^0,c
  6437  000EDE  0EA0               	movlw	160
  6438  000EE0  6E1F               	movwf	(___flmul@a+2)^0,c
  6439  000EE2  0E40               	movlw	64
  6440  000EE4  6E20               	movwf	(___flmul@a+3)^0,c
  6441  000EE6  EC3F  F013         	call	___flmul	;wreg free
  6442  000EEA  C019  F086         	movff	?___flmul,efgtoa@l
  6443  000EEE  C01A  F087         	movff	?___flmul+1,efgtoa@l+1
  6444  000EF2  C01B  F088         	movff	?___flmul+2,efgtoa@l+2
  6445  000EF6  C01C  F089         	movff	?___flmul+3,efgtoa@l+3
  6446  000EFA                     
  6447                           ;/Applications/microchip/xc8/v2.31/pic/sources/c99/common/doprnt.c: 441:     if (h < l) 
      +                          {
  6448  000EFA  C082  F03A         	movff	efgtoa@h,___flge@ff1
  6449  000EFE  C083  F03B         	movff	efgtoa@h+1,___flge@ff1+1
  6450  000F02  C084  F03C         	movff	efgtoa@h+2,___flge@ff1+2
  6451  000F06  C085  F03D         	movff	efgtoa@h+3,___flge@ff1+3
  6452  000F0A  C086  F03E         	movff	efgtoa@l,___flge@ff2
  6453  000F0E  C087  F03F         	movff	efgtoa@l+1,___flge@ff2+1
  6454  000F12  C088  F040         	movff	efgtoa@l+2,___flge@ff2+2
  6455  000F16  C089  F041         	movff	efgtoa@l+3,___flge@ff2+3
  6456  000F1A  ECE8  F020         	call	___flge	;wreg free
  6457  000F1E  B0D8               	btfsc	status,0,c
  6458  000F20  EF94  F007         	goto	u5521
  6459  000F24  EF96  F007         	goto	u5520
  6460  000F28                     u5521:
  6461  000F28  EFA1  F007         	goto	l4398
  6462  000F2C                     u5520:
  6463  000F2C                     
  6464                           ;/Applications/microchip/xc8/v2.31/pic/sources/c99/common/doprnt.c: 442:         l = 0.0
      +                          ;
  6465  000F2C  0E00               	movlw	0
  6466  000F2E  0100               	movlb	0	; () banked
  6467  000F30  6F86               	movwf	efgtoa@l& (0+255),b
  6468  000F32  0E00               	movlw	0
  6469  000F34  6F87               	movwf	(efgtoa@l+1)& (0+255),b
  6470  000F36  0E00               	movlw	0
  6471  000F38  6F88               	movwf	(efgtoa@l+2)& (0+255),b
  6472  000F3A  0E00               	movlw	0
  6473  000F3C  6F89               	movwf	(efgtoa@l+3)& (0+255),b
  6474                           
  6475                           ;/Applications/microchip/xc8/v2.31/pic/sources/c99/common/doprnt.c: 443:     } else {
  6476  000F3E  EFCA  F007         	goto	l4404
  6477  000F42                     l4398:
  6478                           
  6479                           ;/Applications/microchip/xc8/v2.31/pic/sources/c99/common/doprnt.c: 445:         if ((h 
      +                          == l) && !(d % 2)) {
  6480  000F42  C082  F001         	movff	efgtoa@h,___fleq@ff1
  6481  000F46  C083  F002         	movff	efgtoa@h+1,___fleq@ff1+1
  6482  000F4A  C084  F003         	movff	efgtoa@h+2,___fleq@ff1+2
  6483  000F4E  C085  F004         	movff	efgtoa@h+3,___fleq@ff1+3
  6484  000F52  C086  F005         	movff	efgtoa@l,___fleq@ff2
  6485  000F56  C087  F006         	movff	efgtoa@l+1,___fleq@ff2+1
  6486  000F5A  C088  F007         	movff	efgtoa@l+2,___fleq@ff2+2
  6487  000F5E  C089  F008         	movff	efgtoa@l+3,___fleq@ff2+3
  6488  000F62  EC42  F024         	call	___fleq	;wreg free
  6489  000F66  A0D8               	btfss	status,0,c
  6490  000F68  EFB8  F007         	goto	u5531
  6491  000F6C  EFBA  F007         	goto	u5530
  6492  000F70                     u5531:
  6493  000F70  EFCA  F007         	goto	l4404
  6494  000F74                     u5530:
  6495  000F74  0100               	movlb	0	; () banked
  6496  000F76  B178               	btfsc	efgtoa@d& (0+255),0,b
  6497  000F78  EFC0  F007         	goto	u5541
  6498  000F7C  EFC2  F007         	goto	u5540
  6499  000F80                     u5541:
  6500  000F80  EFCA  F007         	goto	l4404
  6501  000F84                     u5540:
  6502  000F84                     
  6503                           ; BSR set to: 0
  6504                           ;/Applications/microchip/xc8/v2.31/pic/sources/c99/common/doprnt.c: 446:             l =
      +                           0.0;
  6505  000F84  0E00               	movlw	0
  6506  000F86  6F86               	movwf	efgtoa@l& (0+255),b
  6507  000F88  0E00               	movlw	0
  6508  000F8A  6F87               	movwf	(efgtoa@l+1)& (0+255),b
  6509  000F8C  0E00               	movlw	0
  6510  000F8E  6F88               	movwf	(efgtoa@l+2)& (0+255),b
  6511  000F90  0E00               	movlw	0
  6512  000F92  6F89               	movwf	(efgtoa@l+3)& (0+255),b
  6513  000F94                     l4404:
  6514                           
  6515                           ;/Applications/microchip/xc8/v2.31/pic/sources/c99/common/doprnt.c: 451:     h = g + l;
  6516  000F94  C08C  F001         	movff	efgtoa@g,___fladd@b
  6517  000F98  C08D  F002         	movff	efgtoa@g+1,___fladd@b+1
  6518  000F9C  C08E  F003         	movff	efgtoa@g+2,___fladd@b+2
  6519  000FA0  C08F  F004         	movff	efgtoa@g+3,___fladd@b+3
  6520  000FA4  C086  F005         	movff	efgtoa@l,___fladd@a
  6521  000FA8  C087  F006         	movff	efgtoa@l+1,___fladd@a+1
  6522  000FAC  C088  F007         	movff	efgtoa@l+2,___fladd@a+2
  6523  000FB0  C089  F008         	movff	efgtoa@l+3,___fladd@a+3
  6524  000FB4  ECA6  F00E         	call	___fladd	;wreg free
  6525  000FB8  C001  F082         	movff	?___fladd,efgtoa@h
  6526  000FBC  C002  F083         	movff	?___fladd+1,efgtoa@h+1
  6527  000FC0  C003  F084         	movff	?___fladd+2,efgtoa@h+2
  6528  000FC4  C004  F085         	movff	?___fladd+3,efgtoa@h+3
  6529  000FC8                     
  6530                           ;/Applications/microchip/xc8/v2.31/pic/sources/c99/common/doprnt.c: 453:  if (h >= (ou*1
      +                          0.0)) {
  6531  000FC8  C082  F03A         	movff	efgtoa@h,___flge@ff1
  6532  000FCC  C083  F03B         	movff	efgtoa@h+1,___flge@ff1+1
  6533  000FD0  C084  F03C         	movff	efgtoa@h+2,___flge@ff1+2
  6534  000FD4  C085  F03D         	movff	efgtoa@h+3,___flge@ff1+3
  6535  000FD8  0E00               	movlw	0
  6536  000FDA  6E1D               	movwf	___flmul@a^0,c
  6537  000FDC  0E00               	movlw	0
  6538  000FDE  6E1E               	movwf	(___flmul@a+1)^0,c
  6539  000FE0  0E20               	movlw	32
  6540  000FE2  6E1F               	movwf	(___flmul@a+2)^0,c
  6541  000FE4  0E41               	movlw	65
  6542  000FE6  6E20               	movwf	(___flmul@a+3)^0,c
  6543  000FE8  C074  F019         	movff	efgtoa@ou,___flmul@b
  6544  000FEC  C075  F01A         	movff	efgtoa@ou+1,___flmul@b+1
  6545  000FF0  C076  F01B         	movff	efgtoa@ou+2,___flmul@b+2
  6546  000FF4  C077  F01C         	movff	efgtoa@ou+3,___flmul@b+3
  6547  000FF8  EC3F  F013         	call	___flmul	;wreg free
  6548  000FFC  C019  F03E         	movff	?___flmul,___flge@ff2
  6549  001000  C01A  F03F         	movff	?___flmul+1,___flge@ff2+1
  6550  001004  C01B  F040         	movff	?___flmul+2,___flge@ff2+2
  6551  001008  C01C  F041         	movff	?___flmul+3,___flge@ff2+3
  6552  00100C  ECE8  F020         	call	___flge	;wreg free
  6553  001010  A0D8               	btfss	status,0,c
  6554  001012  EF0D  F008         	goto	u5551
  6555  001016  EF0F  F008         	goto	u5550
  6556  00101A                     u5551:
  6557  00101A  EF38  F008         	goto	l4416
  6558  00101E                     u5550:
  6559  00101E                     
  6560                           ;/Applications/microchip/xc8/v2.31/pic/sources/c99/common/doprnt.c: 454:   e++;
  6561  00101E  0100               	movlb	0	; () banked
  6562  001020  4B90               	infsnz	efgtoa@e& (0+255),f,b
  6563  001022  2B91               	incf	(efgtoa@e+1)& (0+255),f,b
  6564  001024                     
  6565                           ; BSR set to: 0
  6566                           ;/Applications/microchip/xc8/v2.31/pic/sources/c99/common/doprnt.c: 455:   ou *= 10.0;
  6567  001024  C074  F019         	movff	efgtoa@ou,___flmul@b
  6568  001028  C075  F01A         	movff	efgtoa@ou+1,___flmul@b+1
  6569  00102C  C076  F01B         	movff	efgtoa@ou+2,___flmul@b+2
  6570  001030  C077  F01C         	movff	efgtoa@ou+3,___flmul@b+3
  6571  001034  0E00               	movlw	0
  6572  001036  6E1D               	movwf	___flmul@a^0,c
  6573  001038  0E00               	movlw	0
  6574  00103A  6E1E               	movwf	(___flmul@a+1)^0,c
  6575  00103C  0E20               	movlw	32
  6576  00103E  6E1F               	movwf	(___flmul@a+2)^0,c
  6577  001040  0E41               	movlw	65
  6578  001042  6E20               	movwf	(___flmul@a+3)^0,c
  6579  001044  EC3F  F013         	call	___flmul	;wreg free
  6580  001048  C019  F074         	movff	?___flmul,efgtoa@ou
  6581  00104C  C01A  F075         	movff	?___flmul+1,efgtoa@ou+1
  6582  001050  C01B  F076         	movff	?___flmul+2,efgtoa@ou+2
  6583  001054  C01C  F077         	movff	?___flmul+3,efgtoa@ou+3
  6584  001058                     
  6585                           ;/Applications/microchip/xc8/v2.31/pic/sources/c99/common/doprnt.c: 456:   if (nmode == 
      +                          'f') {
  6586  001058  0E66               	movlw	102
  6587  00105A  0100               	movlb	0	; () banked
  6588  00105C  1980               	xorwf	efgtoa@nmode& (0+255),w,b
  6589  00105E  A4D8               	btfss	status,2,c
  6590  001060  EF34  F008         	goto	u5561
  6591  001064  EF36  F008         	goto	u5560
  6592  001068                     u5561:
  6593  001068  EF38  F008         	goto	l4416
  6594  00106C                     u5560:
  6595  00106C                     
  6596                           ; BSR set to: 0
  6597                           ;/Applications/microchip/xc8/v2.31/pic/sources/c99/common/doprnt.c: 458:    m++;
  6598  00106C  4B72               	infsnz	efgtoa@m& (0+255),f,b
  6599  00106E  2B73               	incf	(efgtoa@m+1)& (0+255),f,b
  6600  001070                     l4416:
  6601                           
  6602                           ;/Applications/microchip/xc8/v2.31/pic/sources/c99/common/doprnt.c: 463:     u = ou;
  6603  001070  C074  F094         	movff	efgtoa@ou,efgtoa@u
  6604  001074  C075  F095         	movff	efgtoa@ou+1,efgtoa@u+1
  6605  001078  C076  F096         	movff	efgtoa@ou+2,efgtoa@u+2
  6606  00107C  C077  F097         	movff	efgtoa@ou+3,efgtoa@u+3
  6607  001080                     
  6608                           ;/Applications/microchip/xc8/v2.31/pic/sources/c99/common/doprnt.c: 464:     ne = (nmode
      +                           == 'e') ? 0 : e;
  6609  001080  0E65               	movlw	101
  6610  001082  0100               	movlb	0	; () banked
  6611  001084  1980               	xorwf	efgtoa@nmode& (0+255),w,b
  6612  001086  B4D8               	btfsc	status,2,c
  6613  001088  EF48  F008         	goto	u5571
  6614  00108C  EF4A  F008         	goto	u5570
  6615  001090                     u5571:
  6616  001090  EF50  F008         	goto	l4422
  6617  001094                     u5570:
  6618  001094                     
  6619                           ; BSR set to: 0
  6620  001094  C090  F070         	movff	efgtoa@e,efgtoa@ne
  6621  001098  C091  F071         	movff	efgtoa@e+1,efgtoa@ne+1
  6622  00109C  EF54  F008         	goto	l1067
  6623  0010A0                     l4422:
  6624                           
  6625                           ; BSR set to: 0
  6626  0010A0  0E00               	movlw	0
  6627  0010A2  6F71               	movwf	(efgtoa@ne+1)& (0+255),b
  6628  0010A4  0E00               	movlw	0
  6629  0010A6  6F70               	movwf	efgtoa@ne& (0+255),b
  6630  0010A8                     l1067:
  6631                           
  6632                           ; BSR set to: 0
  6633                           ;/Applications/microchip/xc8/v2.31/pic/sources/c99/common/doprnt.c: 465:     pp = 0;
  6634  0010A8  0E00               	movlw	0
  6635  0010AA  6F6F               	movwf	(efgtoa@pp+1)& (0+255),b
  6636  0010AC  0E00               	movlw	0
  6637  0010AE  6F6E               	movwf	efgtoa@pp& (0+255),b
  6638                           
  6639                           ;/Applications/microchip/xc8/v2.31/pic/sources/c99/common/doprnt.c: 466:     t = 0;
  6640  0010B0  0E00               	movlw	0
  6641  0010B2  6F6D               	movwf	(efgtoa@t+1)& (0+255),b
  6642  0010B4  0E00               	movlw	0
  6643  0010B6  6F6C               	movwf	efgtoa@t& (0+255),b
  6644                           
  6645                           ;/Applications/microchip/xc8/v2.31/pic/sources/c99/common/doprnt.c: 467:     i = 0;
  6646  0010B8  0E00               	movlw	0
  6647  0010BA  6F8B               	movwf	(efgtoa@i+1)& (0+255),b
  6648  0010BC  0E00               	movlw	0
  6649  0010BE  6F8A               	movwf	efgtoa@i& (0+255),b
  6650                           
  6651                           ;/Applications/microchip/xc8/v2.31/pic/sources/c99/common/doprnt.c: 468:     while ((i <
      +                           m) && (n < (80 - 5))) {
  6652  0010C0  EF4F  F009         	goto	l4472
  6653  0010C4                     l4424:
  6654                           
  6655                           ; BSR set to: 0
  6656                           ;/Applications/microchip/xc8/v2.31/pic/sources/c99/common/doprnt.c: 469:         l = flo
      +                          orf(h/u);
  6657  0010C4  C082  F001         	movff	efgtoa@h,___fldiv@b
  6658  0010C8  C083  F002         	movff	efgtoa@h+1,___fldiv@b+1
  6659  0010CC  C084  F003         	movff	efgtoa@h+2,___fldiv@b+2
  6660  0010D0  C085  F004         	movff	efgtoa@h+3,___fldiv@b+3
  6661  0010D4  C094  F005         	movff	efgtoa@u,___fldiv@a
  6662  0010D8  C095  F006         	movff	efgtoa@u+1,___fldiv@a+1
  6663  0010DC  C096  F007         	movff	efgtoa@u+2,___fldiv@a+2
  6664  0010E0  C097  F008         	movff	efgtoa@u+3,___fldiv@a+3
  6665  0010E4  EC54  F015         	call	___fldiv	;wreg free
  6666  0010E8  C001  F01A         	movff	?___fldiv,floorf@x
  6667  0010EC  C002  F01B         	movff	?___fldiv+1,floorf@x+1
  6668  0010F0  C003  F01C         	movff	?___fldiv+2,floorf@x+2
  6669  0010F4  C004  F01D         	movff	?___fldiv+3,floorf@x+3
  6670  0010F8  ECE4  F01A         	call	_floorf	;wreg free
  6671  0010FC  C01A  F086         	movff	?_floorf,efgtoa@l
  6672  001100  C01B  F087         	movff	?_floorf+1,efgtoa@l+1
  6673  001104  C01C  F088         	movff	?_floorf+2,efgtoa@l+2
  6674  001108  C01D  F089         	movff	?_floorf+3,efgtoa@l+3
  6675                           
  6676                           ;/Applications/microchip/xc8/v2.31/pic/sources/c99/common/doprnt.c: 470:         d = (in
      +                          t)l;
  6677  00110C  C086  F001         	movff	efgtoa@l,___fltol@f1
  6678  001110  C087  F002         	movff	efgtoa@l+1,___fltol@f1+1
  6679  001114  C088  F003         	movff	efgtoa@l+2,___fltol@f1+2
  6680  001118  C089  F004         	movff	efgtoa@l+3,___fltol@f1+3
  6681  00111C  ECE3  F01F         	call	___fltol	;wreg free
  6682  001120  C001  F078         	movff	?___fltol,efgtoa@d
  6683  001124  C002  F079         	movff	?___fltol+1,efgtoa@d+1
  6684  001128                     
  6685                           ;/Applications/microchip/xc8/v2.31/pic/sources/c99/common/doprnt.c: 471:         if (!(f
      +                          lags & (1 << 4)) && !d && (mode == 'g') && (ne < 0)) {
  6686  001128  0100               	movlb	0	; () banked
  6687  00112A  B9D8               	btfsc	_flags& (0+255),4,b
  6688  00112C  EF9A  F008         	goto	u5581
  6689  001130  EF9C  F008         	goto	u5580
  6690  001134                     u5581:
  6691  001134  EFB9  F008         	goto	l4436
  6692  001138                     u5580:
  6693  001138                     
  6694                           ; BSR set to: 0
  6695  001138  5178               	movf	efgtoa@d& (0+255),w,b
  6696  00113A  1179               	iorwf	(efgtoa@d+1)& (0+255),w,b
  6697  00113C  A4D8               	btfss	status,2,c
  6698  00113E  EFA3  F008         	goto	u5591
  6699  001142  EFA5  F008         	goto	u5590
  6700  001146                     u5591:
  6701  001146  EFB9  F008         	goto	l4436
  6702  00114A                     u5590:
  6703  00114A                     
  6704                           ; BSR set to: 0
  6705  00114A  0E67               	movlw	103
  6706  00114C  1981               	xorwf	efgtoa@mode& (0+255),w,b
  6707  00114E  A4D8               	btfss	status,2,c
  6708  001150  EFAC  F008         	goto	u5601
  6709  001154  EFAE  F008         	goto	u5600
  6710  001158                     u5601:
  6711  001158  EFB9  F008         	goto	l4436
  6712  00115C                     u5600:
  6713  00115C                     
  6714                           ; BSR set to: 0
  6715  00115C  BF71               	btfsc	(efgtoa@ne+1)& (0+255),7,b
  6716  00115E  EFB5  F008         	goto	u5610
  6717  001162  EFB3  F008         	goto	u5611
  6718  001166                     u5611:
  6719  001166  EFB9  F008         	goto	l4436
  6720  00116A                     u5610:
  6721  00116A                     
  6722                           ; BSR set to: 0
  6723                           ;/Applications/microchip/xc8/v2.31/pic/sources/c99/common/doprnt.c: 472:             ++t
      +                          ;
  6724  00116A  4B6C               	infsnz	efgtoa@t& (0+255),f,b
  6725  00116C  2B6D               	incf	(efgtoa@t+1)& (0+255),f,b
  6726                           
  6727                           ;/Applications/microchip/xc8/v2.31/pic/sources/c99/common/doprnt.c: 473:         } else 
      +                          {
  6728  00116E  EF03  F009         	goto	l4464
  6729  001172                     l4436:
  6730                           
  6731                           ; BSR set to: 0
  6732                           ;/Applications/microchip/xc8/v2.31/pic/sources/c99/common/doprnt.c: 474:             if 
      +                          (!pp && (ne < 0)) {
  6733  001172  516E               	movf	efgtoa@pp& (0+255),w,b
  6734  001174  116F               	iorwf	(efgtoa@pp+1)& (0+255),w,b
  6735  001176  A4D8               	btfss	status,2,c
  6736  001178  EFC0  F008         	goto	u5621
  6737  00117C  EFC2  F008         	goto	u5620
  6738  001180                     u5621:
  6739  001180  EFEC  F008         	goto	l4456
  6740  001184                     u5620:
  6741  001184                     
  6742                           ; BSR set to: 0
  6743  001184  BF71               	btfsc	(efgtoa@ne+1)& (0+255),7,b
  6744  001186  EFC9  F008         	goto	u5630
  6745  00118A  EFC7  F008         	goto	u5631
  6746  00118E                     u5631:
  6747  00118E  EFEC  F008         	goto	l4456
  6748  001192                     u5630:
  6749  001192                     
  6750                           ; BSR set to: 0
  6751                           ;/Applications/microchip/xc8/v2.31/pic/sources/c99/common/doprnt.c: 475:                
      +                           dbuf[n++] = '.';
  6752  001192  0E20               	movlw	low _dbuf
  6753  001194  2592               	addwf	efgtoa@n& (0+255),w,b
  6754  001196  6ED9               	movwf	fsr2l,c
  6755  001198  0E01               	movlw	high _dbuf
  6756  00119A  2193               	addwfc	(efgtoa@n+1)& (0+255),w,b
  6757  00119C  6EDA               	movwf	fsr2h,c
  6758  00119E  0E2E               	movlw	46
  6759  0011A0  6EDF               	movwf	indf2,c
  6760  0011A2                     
  6761                           ; BSR set to: 0
  6762  0011A2  4B92               	infsnz	efgtoa@n& (0+255),f,b
  6763  0011A4  2B93               	incf	(efgtoa@n+1)& (0+255),f,b
  6764  0011A6                     
  6765                           ; BSR set to: 0
  6766                           ;/Applications/microchip/xc8/v2.31/pic/sources/c99/common/doprnt.c: 476:                
      +                           --w;
  6767  0011A6  077E               	decf	efgtoa@w& (0+255),f,b
  6768  0011A8  A0D8               	btfss	status,0,c
  6769  0011AA  077F               	decf	(efgtoa@w+1)& (0+255),f,b
  6770  0011AC                     
  6771                           ; BSR set to: 0
  6772                           ;/Applications/microchip/xc8/v2.31/pic/sources/c99/common/doprnt.c: 477:                
      +                           pp = 1;
  6773  0011AC  0E00               	movlw	0
  6774  0011AE  6F6F               	movwf	(efgtoa@pp+1)& (0+255),b
  6775  0011B0  0E01               	movlw	1
  6776  0011B2  6F6E               	movwf	efgtoa@pp& (0+255),b
  6777  0011B4  EFEC  F008         	goto	l4456
  6778  0011B8                     l4448:
  6779                           
  6780                           ; BSR set to: 0
  6781                           ;/Applications/microchip/xc8/v2.31/pic/sources/c99/common/doprnt.c: 480:                
      +                           dbuf[n++] = '0';
  6782  0011B8  0E20               	movlw	low _dbuf
  6783  0011BA  2592               	addwf	efgtoa@n& (0+255),w,b
  6784  0011BC  6ED9               	movwf	fsr2l,c
  6785  0011BE  0E01               	movlw	high _dbuf
  6786  0011C0  2193               	addwfc	(efgtoa@n+1)& (0+255),w,b
  6787  0011C2  6EDA               	movwf	fsr2h,c
  6788  0011C4  0E30               	movlw	48
  6789  0011C6  6EDF               	movwf	indf2,c
  6790  0011C8                     
  6791                           ; BSR set to: 0
  6792  0011C8  4B92               	infsnz	efgtoa@n& (0+255),f,b
  6793  0011CA  2B93               	incf	(efgtoa@n+1)& (0+255),f,b
  6794  0011CC                     
  6795                           ; BSR set to: 0
  6796                           ;/Applications/microchip/xc8/v2.31/pic/sources/c99/common/doprnt.c: 481:                
      +                           --w;
  6797  0011CC  077E               	decf	efgtoa@w& (0+255),f,b
  6798  0011CE  A0D8               	btfss	status,0,c
  6799  0011D0  077F               	decf	(efgtoa@w+1)& (0+255),f,b
  6800  0011D2                     
  6801                           ; BSR set to: 0
  6802                           ;/Applications/microchip/xc8/v2.31/pic/sources/c99/common/doprnt.c: 482:                
      +                           --t;
  6803  0011D2  076C               	decf	efgtoa@t& (0+255),f,b
  6804  0011D4  A0D8               	btfss	status,0,c
  6805  0011D6  076D               	decf	(efgtoa@t+1)& (0+255),f,b
  6806  0011D8                     l4456:
  6807                           
  6808                           ; BSR set to: 0
  6809                           ;/Applications/microchip/xc8/v2.31/pic/sources/c99/common/doprnt.c: 479:             whi
      +                          le (t) {
  6810  0011D8  516C               	movf	efgtoa@t& (0+255),w,b
  6811  0011DA  116D               	iorwf	(efgtoa@t+1)& (0+255),w,b
  6812  0011DC  A4D8               	btfss	status,2,c
  6813  0011DE  EFF3  F008         	goto	u5641
  6814  0011E2  EFF5  F008         	goto	u5640
  6815  0011E6                     u5641:
  6816  0011E6  EFDC  F008         	goto	l4448
  6817  0011EA                     u5640:
  6818  0011EA                     
  6819                           ; BSR set to: 0
  6820                           ;/Applications/microchip/xc8/v2.31/pic/sources/c99/common/doprnt.c: 484:             dbu
      +                          f[n++] = (char)((int)'0' + d);
  6821  0011EA  0E20               	movlw	low _dbuf
  6822  0011EC  2592               	addwf	efgtoa@n& (0+255),w,b
  6823  0011EE  6ED9               	movwf	fsr2l,c
  6824  0011F0  0E01               	movlw	high _dbuf
  6825  0011F2  2193               	addwfc	(efgtoa@n+1)& (0+255),w,b
  6826  0011F4  6EDA               	movwf	fsr2h,c
  6827  0011F6  5178               	movf	efgtoa@d& (0+255),w,b
  6828  0011F8  0F30               	addlw	48
  6829  0011FA  6EDF               	movwf	indf2,c
  6830  0011FC                     
  6831                           ; BSR set to: 0
  6832  0011FC  4B92               	infsnz	efgtoa@n& (0+255),f,b
  6833  0011FE  2B93               	incf	(efgtoa@n+1)& (0+255),f,b
  6834  001200                     
  6835                           ; BSR set to: 0
  6836                           ;/Applications/microchip/xc8/v2.31/pic/sources/c99/common/doprnt.c: 485:             --w
      +                          ;
  6837  001200  077E               	decf	efgtoa@w& (0+255),f,b
  6838  001202  A0D8               	btfss	status,0,c
  6839  001204  077F               	decf	(efgtoa@w+1)& (0+255),f,b
  6840  001206                     l4464:
  6841                           
  6842                           ; BSR set to: 0
  6843                           ;/Applications/microchip/xc8/v2.31/pic/sources/c99/common/doprnt.c: 487:         h -= l*
      +                          u;
  6844  001206  C082  F032         	movff	efgtoa@h,___flsub@b
  6845  00120A  C083  F033         	movff	efgtoa@h+1,___flsub@b+1
  6846  00120E  C084  F034         	movff	efgtoa@h+2,___flsub@b+2
  6847  001212  C085  F035         	movff	efgtoa@h+3,___flsub@b+3
  6848  001216  C094  F01D         	movff	efgtoa@u,___flmul@a
  6849  00121A  C095  F01E         	movff	efgtoa@u+1,___flmul@a+1
  6850  00121E  C096  F01F         	movff	efgtoa@u+2,___flmul@a+2
  6851  001222  C097  F020         	movff	efgtoa@u+3,___flmul@a+3
  6852  001226  C086  F019         	movff	efgtoa@l,___flmul@b
  6853  00122A  C087  F01A         	movff	efgtoa@l+1,___flmul@b+1
  6854  00122E  C088  F01B         	movff	efgtoa@l+2,___flmul@b+2
  6855  001232  C089  F01C         	movff	efgtoa@l+3,___flmul@b+3
  6856  001236  EC3F  F013         	call	___flmul	;wreg free
  6857  00123A  C019  F036         	movff	?___flmul,___flsub@a
  6858  00123E  C01A  F037         	movff	?___flmul+1,___flsub@a+1
  6859  001242  C01B  F038         	movff	?___flmul+2,___flsub@a+2
  6860  001246  C01C  F039         	movff	?___flmul+3,___flsub@a+3
  6861  00124A  ECD2  F026         	call	___flsub	;wreg free
  6862  00124E  C032  F082         	movff	?___flsub,efgtoa@h
  6863  001252  C033  F083         	movff	?___flsub+1,efgtoa@h+1
  6864  001256  C034  F084         	movff	?___flsub+2,efgtoa@h+2
  6865  00125A  C035  F085         	movff	?___flsub+3,efgtoa@h+3
  6866  00125E                     
  6867                           ;/Applications/microchip/xc8/v2.31/pic/sources/c99/common/doprnt.c: 488:         u = u/1
      +                          0.0;
  6868  00125E  C094  F001         	movff	efgtoa@u,___fldiv@b
  6869  001262  C095  F002         	movff	efgtoa@u+1,___fldiv@b+1
  6870  001266  C096  F003         	movff	efgtoa@u+2,___fldiv@b+2
  6871  00126A  C097  F004         	movff	efgtoa@u+3,___fldiv@b+3
  6872  00126E  0E00               	movlw	0
  6873  001270  6E05               	movwf	___fldiv@a^0,c
  6874  001272  0E00               	movlw	0
  6875  001274  6E06               	movwf	(___fldiv@a+1)^0,c
  6876  001276  0E20               	movlw	32
  6877  001278  6E07               	movwf	(___fldiv@a+2)^0,c
  6878  00127A  0E41               	movlw	65
  6879  00127C  6E08               	movwf	(___fldiv@a+3)^0,c
  6880  00127E  EC54  F015         	call	___fldiv	;wreg free
  6881  001282  C001  F094         	movff	?___fldiv,efgtoa@u
  6882  001286  C002  F095         	movff	?___fldiv+1,efgtoa@u+1
  6883  00128A  C003  F096         	movff	?___fldiv+2,efgtoa@u+2
  6884  00128E  C004  F097         	movff	?___fldiv+3,efgtoa@u+3
  6885  001292                     
  6886                           ;/Applications/microchip/xc8/v2.31/pic/sources/c99/common/doprnt.c: 489:         --ne;
  6887  001292  0100               	movlb	0	; () banked
  6888  001294  0770               	decf	efgtoa@ne& (0+255),f,b
  6889  001296  A0D8               	btfss	status,0,c
  6890  001298  0771               	decf	(efgtoa@ne+1)& (0+255),f,b
  6891  00129A                     
  6892                           ; BSR set to: 0
  6893                           ;/Applications/microchip/xc8/v2.31/pic/sources/c99/common/doprnt.c: 490:         ++i;
  6894  00129A  4B8A               	infsnz	efgtoa@i& (0+255),f,b
  6895  00129C  2B8B               	incf	(efgtoa@i+1)& (0+255),f,b
  6896  00129E                     l4472:
  6897                           
  6898                           ; BSR set to: 0
  6899                           ;/Applications/microchip/xc8/v2.31/pic/sources/c99/common/doprnt.c: 468:     while ((i <
      +                           m) && (n < (80 - 5))) {
  6900  00129E  5172               	movf	efgtoa@m& (0+255),w,b
  6901  0012A0  5D8A               	subwf	efgtoa@i& (0+255),w,b
  6902  0012A2  518B               	movf	(efgtoa@i+1)& (0+255),w,b
  6903  0012A4  0A80               	xorlw	128
  6904  0012A6  6E4D               	movwf	??_efgtoa^0,c
  6905  0012A8  5173               	movf	(efgtoa@m+1)& (0+255),w,b
  6906  0012AA  0A80               	xorlw	128
  6907  0012AC  584D               	subwfb	??_efgtoa^0,w,c
  6908  0012AE  B0D8               	btfsc	status,0,c
  6909  0012B0  EF5C  F009         	goto	u5651
  6910  0012B4  EF5E  F009         	goto	u5650
  6911  0012B8                     u5651:
  6912  0012B8  EF6C  F009         	goto	l4476
  6913  0012BC                     u5650:
  6914  0012BC                     
  6915                           ; BSR set to: 0
  6916  0012BC  BF93               	btfsc	(efgtoa@n+1)& (0+255),7,b
  6917  0012BE  EF6A  F009         	goto	u5661
  6918  0012C2  5193               	movf	(efgtoa@n+1)& (0+255),w,b
  6919  0012C4  E109               	bnz	u5660
  6920  0012C6  0E4B               	movlw	75
  6921  0012C8  5D92               	subwf	efgtoa@n& (0+255),w,b
  6922  0012CA  A0D8               	btfss	status,0,c
  6923  0012CC  EF6A  F009         	goto	u5661
  6924  0012D0  EF6C  F009         	goto	u5660
  6925  0012D4                     u5661:
  6926  0012D4  EF62  F008         	goto	l4424
  6927  0012D8                     u5660:
  6928  0012D8                     l4476:
  6929                           
  6930                           ; BSR set to: 0
  6931                           ;/Applications/microchip/xc8/v2.31/pic/sources/c99/common/doprnt.c: 492:     if (!pp && 
      +                          (flags & (1 << 4))) {
  6932  0012D8  516E               	movf	efgtoa@pp& (0+255),w,b
  6933  0012DA  116F               	iorwf	(efgtoa@pp+1)& (0+255),w,b
  6934  0012DC  A4D8               	btfss	status,2,c
  6935  0012DE  EF73  F009         	goto	u5671
  6936  0012E2  EF75  F009         	goto	u5670
  6937  0012E6                     u5671:
  6938  0012E6  EF86  F009         	goto	l4484
  6939  0012EA                     u5670:
  6940  0012EA                     
  6941                           ; BSR set to: 0
  6942  0012EA  A9D8               	btfss	_flags& (0+255),4,b
  6943  0012EC  EF7A  F009         	goto	u5681
  6944  0012F0  EF7C  F009         	goto	u5680
  6945  0012F4                     u5681:
  6946  0012F4  EF86  F009         	goto	l4484
  6947  0012F8                     u5680:
  6948  0012F8                     
  6949                           ; BSR set to: 0
  6950                           ;/Applications/microchip/xc8/v2.31/pic/sources/c99/common/doprnt.c: 493:         dbuf[n+
      +                          +] = '.';
  6951  0012F8  0E20               	movlw	low _dbuf
  6952  0012FA  2592               	addwf	efgtoa@n& (0+255),w,b
  6953  0012FC  6ED9               	movwf	fsr2l,c
  6954  0012FE  0E01               	movlw	high _dbuf
  6955  001300  2193               	addwfc	(efgtoa@n+1)& (0+255),w,b
  6956  001302  6EDA               	movwf	fsr2h,c
  6957  001304  0E2E               	movlw	46
  6958  001306  6EDF               	movwf	indf2,c
  6959  001308                     
  6960                           ; BSR set to: 0
  6961  001308  4B92               	infsnz	efgtoa@n& (0+255),f,b
  6962  00130A  2B93               	incf	(efgtoa@n+1)& (0+255),f,b
  6963  00130C                     l4484:
  6964                           
  6965                           ; BSR set to: 0
  6966                           ;/Applications/microchip/xc8/v2.31/pic/sources/c99/common/doprnt.c: 495:     dbuf[n] = '
      +                          \0';
  6967  00130C  0E20               	movlw	low _dbuf
  6968  00130E  2592               	addwf	efgtoa@n& (0+255),w,b
  6969  001310  6ED9               	movwf	fsr2l,c
  6970  001312  0E01               	movlw	high _dbuf
  6971  001314  2193               	addwfc	(efgtoa@n+1)& (0+255),w,b
  6972  001316  6EDA               	movwf	fsr2h,c
  6973  001318  0E00               	movlw	0
  6974  00131A  6EDF               	movwf	indf2,c
  6975  00131C                     
  6976                           ; BSR set to: 0
  6977                           ;/Applications/microchip/xc8/v2.31/pic/sources/c99/common/doprnt.c: 498:     if (nmode =
      +                          = 'e') {
  6978  00131C  0E65               	movlw	101
  6979  00131E  1980               	xorwf	efgtoa@nmode& (0+255),w,b
  6980  001320  A4D8               	btfss	status,2,c
  6981  001322  EF95  F009         	goto	u5691
  6982  001326  EF97  F009         	goto	u5690
  6983  00132A                     u5691:
  6984  00132A  EFF1  F004         	goto	l4286
  6985  00132E                     u5690:
  6986  00132E                     
  6987                           ; BSR set to: 0
  6988                           ;/Applications/microchip/xc8/v2.31/pic/sources/c99/common/doprnt.c: 499:         i = siz
      +                          eof(dbuf) - 1;
  6989  00132E  0E00               	movlw	0
  6990  001330  6F8B               	movwf	(efgtoa@i+1)& (0+255),b
  6991  001332  0E4F               	movlw	79
  6992  001334  6F8A               	movwf	efgtoa@i& (0+255),b
  6993  001336                     
  6994                           ; BSR set to: 0
  6995                           ;/Applications/microchip/xc8/v2.31/pic/sources/c99/common/doprnt.c: 500:         dbuf[i]
      +                           = '\0';
  6996  001336  0E20               	movlw	low _dbuf
  6997  001338  258A               	addwf	efgtoa@i& (0+255),w,b
  6998  00133A  6ED9               	movwf	fsr2l,c
  6999  00133C  0E01               	movlw	high _dbuf
  7000  00133E  218B               	addwfc	(efgtoa@i+1)& (0+255),w,b
  7001  001340  6EDA               	movwf	fsr2h,c
  7002  001342  0E00               	movlw	0
  7003  001344  6EDF               	movwf	indf2,c
  7004  001346                     
  7005                           ; BSR set to: 0
  7006                           ;/Applications/microchip/xc8/v2.31/pic/sources/c99/common/doprnt.c: 501:         sign = 
      +                          0;
  7007  001346  0E00               	movlw	0
  7008  001348  6F7B               	movwf	(efgtoa@sign+1)& (0+255),b
  7009  00134A  0E00               	movlw	0
  7010  00134C  6F7A               	movwf	efgtoa@sign& (0+255),b
  7011  00134E                     
  7012                           ; BSR set to: 0
  7013                           ;/Applications/microchip/xc8/v2.31/pic/sources/c99/common/doprnt.c: 502:         if (e <
      +                           0) {
  7014  00134E  BF91               	btfsc	(efgtoa@e+1)& (0+255),7,b
  7015  001350  EFAE  F009         	goto	u5700
  7016  001354  EFAC  F009         	goto	u5701
  7017  001358                     u5701:
  7018  001358  EFB6  F009         	goto	l4500
  7019  00135C                     u5700:
  7020  00135C                     
  7021                           ; BSR set to: 0
  7022                           ;/Applications/microchip/xc8/v2.31/pic/sources/c99/common/doprnt.c: 503:             sig
      +                          n = 1;
  7023  00135C  0E00               	movlw	0
  7024  00135E  6F7B               	movwf	(efgtoa@sign+1)& (0+255),b
  7025  001360  0E01               	movlw	1
  7026  001362  6F7A               	movwf	efgtoa@sign& (0+255),b
  7027  001364                     
  7028                           ; BSR set to: 0
  7029                           ;/Applications/microchip/xc8/v2.31/pic/sources/c99/common/doprnt.c: 504:             e =
      +                           -e;
  7030  001364  6D90               	negf	efgtoa@e& (0+255),b
  7031  001366  1F91               	comf	(efgtoa@e+1)& (0+255),f,b
  7032  001368  B0D8               	btfsc	status,0,c
  7033  00136A  2B91               	incf	(efgtoa@e+1)& (0+255),f,b
  7034  00136C                     l4500:
  7035                           
  7036                           ; BSR set to: 0
  7037                           ;/Applications/microchip/xc8/v2.31/pic/sources/c99/common/doprnt.c: 506:         p = 2;
  7038  00136C  0E00               	movlw	0
  7039  00136E  6F7D               	movwf	(efgtoa@p+1)& (0+255),b
  7040  001370  0E02               	movlw	2
  7041  001372  6F7C               	movwf	efgtoa@p& (0+255),b
  7042                           
  7043                           ;/Applications/microchip/xc8/v2.31/pic/sources/c99/common/doprnt.c: 507:         while (
      +                          e || (0 < p)) {
  7044  001374  EFE7  F009         	goto	l4512
  7045  001378                     l4502:
  7046                           
  7047                           ; BSR set to: 0
  7048                           ;/Applications/microchip/xc8/v2.31/pic/sources/c99/common/doprnt.c: 508:             --i
      +                          ;
  7049  001378  078A               	decf	efgtoa@i& (0+255),f,b
  7050  00137A  A0D8               	btfss	status,0,c
  7051  00137C  078B               	decf	(efgtoa@i+1)& (0+255),f,b
  7052  00137E                     
  7053                           ; BSR set to: 0
  7054                           ;/Applications/microchip/xc8/v2.31/pic/sources/c99/common/doprnt.c: 509:             dbu
      +                          f[i] = '0' + (e % 10);
  7055  00137E  0E20               	movlw	low _dbuf
  7056  001380  258A               	addwf	efgtoa@i& (0+255),w,b
  7057  001382  6ED9               	movwf	fsr2l,c
  7058  001384  0E01               	movlw	high _dbuf
  7059  001386  218B               	addwfc	(efgtoa@i+1)& (0+255),w,b
  7060  001388  6EDA               	movwf	fsr2h,c
  7061  00138A  C090  F001         	movff	efgtoa@e,___awmod@dividend
  7062  00138E  C091  F002         	movff	efgtoa@e+1,___awmod@dividend+1
  7063  001392  0E00               	movlw	0
  7064  001394  6E04               	movwf	(___awmod@divisor+1)^0,c
  7065  001396  0E0A               	movlw	10
  7066  001398  6E03               	movwf	___awmod@divisor^0,c
  7067  00139A  ECEA  F023         	call	___awmod	;wreg free
  7068  00139E  5001               	movf	?___awmod^0,w,c
  7069  0013A0  0F30               	addlw	48
  7070  0013A2  6EDF               	movwf	indf2,c
  7071  0013A4                     
  7072                           ;/Applications/microchip/xc8/v2.31/pic/sources/c99/common/doprnt.c: 510:             e =
      +                           e / 10;
  7073  0013A4  C090  F006         	movff	efgtoa@e,___awdiv@dividend
  7074  0013A8  C091  F007         	movff	efgtoa@e+1,___awdiv@dividend+1
  7075  0013AC  0E00               	movlw	0
  7076  0013AE  6E09               	movwf	(___awdiv@divisor+1)^0,c
  7077  0013B0  0E0A               	movlw	10
  7078  0013B2  6E08               	movwf	___awdiv@divisor^0,c
  7079  0013B4  EC88  F023         	call	___awdiv	;wreg free
  7080  0013B8  C006  F090         	movff	?___awdiv,efgtoa@e
  7081  0013BC  C007  F091         	movff	?___awdiv+1,efgtoa@e+1
  7082  0013C0                     
  7083                           ;/Applications/microchip/xc8/v2.31/pic/sources/c99/common/doprnt.c: 511:             --p
      +                          ;
  7084  0013C0  0100               	movlb	0	; () banked
  7085  0013C2  077C               	decf	efgtoa@p& (0+255),f,b
  7086  0013C4  A0D8               	btfss	status,0,c
  7087  0013C6  077D               	decf	(efgtoa@p+1)& (0+255),f,b
  7088  0013C8                     
  7089                           ; BSR set to: 0
  7090                           ;/Applications/microchip/xc8/v2.31/pic/sources/c99/common/doprnt.c: 512:             --w
      +                          ;
  7091  0013C8  077E               	decf	efgtoa@w& (0+255),f,b
  7092  0013CA  A0D8               	btfss	status,0,c
  7093  0013CC  077F               	decf	(efgtoa@w+1)& (0+255),f,b
  7094  0013CE                     l4512:
  7095                           
  7096                           ; BSR set to: 0
  7097                           ;/Applications/microchip/xc8/v2.31/pic/sources/c99/common/doprnt.c: 507:         while (
      +                          e || (0 < p)) {
  7098  0013CE  5190               	movf	efgtoa@e& (0+255),w,b
  7099  0013D0  1191               	iorwf	(efgtoa@e+1)& (0+255),w,b
  7100  0013D2  A4D8               	btfss	status,2,c
  7101  0013D4  EFEE  F009         	goto	u5711
  7102  0013D8  EFF0  F009         	goto	u5710
  7103  0013DC                     u5711:
  7104  0013DC  EFBC  F009         	goto	l4502
  7105  0013E0                     u5710:
  7106  0013E0                     
  7107                           ; BSR set to: 0
  7108  0013E0  BF7D               	btfsc	(efgtoa@p+1)& (0+255),7,b
  7109  0013E2  EFFD  F009         	goto	u5720
  7110  0013E6  517D               	movf	(efgtoa@p+1)& (0+255),w,b
  7111  0013E8  E106               	bnz	u5721
  7112  0013EA  057C               	decf	efgtoa@p& (0+255),w,b
  7113  0013EC  B0D8               	btfsc	status,0,c
  7114  0013EE  EFFB  F009         	goto	u5721
  7115  0013F2  EFFD  F009         	goto	u5720
  7116  0013F6                     u5721:
  7117  0013F6  EFBC  F009         	goto	l4502
  7118  0013FA                     u5720:
  7119  0013FA                     
  7120                           ; BSR set to: 0
  7121                           ;/Applications/microchip/xc8/v2.31/pic/sources/c99/common/doprnt.c: 514:         --i;
  7122  0013FA  078A               	decf	efgtoa@i& (0+255),f,b
  7123  0013FC  A0D8               	btfss	status,0,c
  7124  0013FE  078B               	decf	(efgtoa@i+1)& (0+255),f,b
  7125  001400                     
  7126                           ; BSR set to: 0
  7127                           ;/Applications/microchip/xc8/v2.31/pic/sources/c99/common/doprnt.c: 515:         dbuf[i]
      +                           = sign ? '-' : '+';
  7128  001400  517A               	movf	efgtoa@sign& (0+255),w,b
  7129  001402  117B               	iorwf	(efgtoa@sign+1)& (0+255),w,b
  7130  001404  A4D8               	btfss	status,2,c
  7131  001406  EF07  F00A         	goto	u5731
  7132  00140A  EF09  F00A         	goto	u5730
  7133  00140E                     u5731:
  7134  00140E  EF0F  F00A         	goto	l4522
  7135  001412                     u5730:
  7136  001412                     
  7137                           ; BSR set to: 0
  7138  001412  0E00               	movlw	0
  7139  001414  6F67               	movwf	(_efgtoa$1286+1)& (0+255),b
  7140  001416  0E2B               	movlw	43
  7141  001418  6F66               	movwf	_efgtoa$1286& (0+255),b
  7142  00141A  EF13  F00A         	goto	l4524
  7143  00141E                     l4522:
  7144                           
  7145                           ; BSR set to: 0
  7146  00141E  0E00               	movlw	0
  7147  001420  6F67               	movwf	(_efgtoa$1286+1)& (0+255),b
  7148  001422  0E2D               	movlw	45
  7149  001424  6F66               	movwf	_efgtoa$1286& (0+255),b
  7150  001426                     l4524:
  7151                           
  7152                           ; BSR set to: 0
  7153  001426  0E20               	movlw	low _dbuf
  7154  001428  258A               	addwf	efgtoa@i& (0+255),w,b
  7155  00142A  6ED9               	movwf	fsr2l,c
  7156  00142C  0E01               	movlw	high _dbuf
  7157  00142E  218B               	addwfc	(efgtoa@i+1)& (0+255),w,b
  7158  001430  6EDA               	movwf	fsr2h,c
  7159  001432  C066  FFDF         	movff	_efgtoa$1286,indf2
  7160  001436                     
  7161                           ; BSR set to: 0
  7162                           ;/Applications/microchip/xc8/v2.31/pic/sources/c99/common/doprnt.c: 516:         --w;
  7163  001436  077E               	decf	efgtoa@w& (0+255),f,b
  7164  001438  A0D8               	btfss	status,0,c
  7165  00143A  077F               	decf	(efgtoa@w+1)& (0+255),f,b
  7166  00143C                     
  7167                           ; BSR set to: 0
  7168                           ;/Applications/microchip/xc8/v2.31/pic/sources/c99/common/doprnt.c: 518:         dbuf[i]
      +                           = (0 ? isupper((int)c) : ((unsigned)((int)c)-'A') < 26) ? 'E' : 'e';
  7169  00143C  078A               	decf	efgtoa@i& (0+255),f,b
  7170  00143E  A0D8               	btfss	status,0,c
  7171  001440  078B               	decf	(efgtoa@i+1)& (0+255),f,b
  7172  001442                     
  7173                           ; BSR set to: 0
  7174  001442  0EBF               	movlw	191
  7175  001444  6E4D               	movwf	??_efgtoa^0,c
  7176  001446  0EFF               	movlw	255
  7177  001448  6E4E               	movwf	(??_efgtoa+1)^0,c
  7178  00144A  504C               	movf	efgtoa@c^0,w,c
  7179  00144C  6E4F               	movwf	(??_efgtoa+2)^0,c
  7180  00144E  6A50               	clrf	(??_efgtoa+3)^0,c
  7181  001450  504D               	movf	??_efgtoa^0,w,c
  7182  001452  264F               	addwf	(??_efgtoa+2)^0,f,c
  7183  001454  504E               	movf	(??_efgtoa+1)^0,w,c
  7184  001456  2250               	addwfc	(??_efgtoa+3)^0,f,c
  7185  001458  5050               	movf	(??_efgtoa+3)^0,w,c
  7186  00145A  E10A               	bnz	u5740
  7187  00145C  0E1A               	movlw	26
  7188  00145E  5C4F               	subwf	(??_efgtoa+2)^0,w,c
  7189  001460  A0D8               	btfss	status,0,c
  7190  001462  EF35  F00A         	goto	u5741
  7191  001466  EF38  F00A         	goto	u5740
  7192  00146A                     u5741:
  7193  00146A  0E01               	movlw	1
  7194  00146C  EF39  F00A         	goto	u5750
  7195  001470                     u5740:
  7196  001470  0E00               	movlw	0
  7197  001472                     u5750:
  7198  001472  6F6A               	movwf	_efgtoa$1288& (0+255),b
  7199  001474  6B6B               	clrf	(_efgtoa$1288+1)& (0+255),b
  7200  001476                     
  7201                           ; BSR set to: 0
  7202  001476  516A               	movf	_efgtoa$1288& (0+255),w,b
  7203  001478  116B               	iorwf	(_efgtoa$1288+1)& (0+255),w,b
  7204  00147A  A4D8               	btfss	status,2,c
  7205  00147C  EF42  F00A         	goto	u5761
  7206  001480  EF44  F00A         	goto	u5760
  7207  001484                     u5761:
  7208  001484  EF4A  F00A         	goto	l4538
  7209  001488                     u5760:
  7210  001488                     
  7211                           ; BSR set to: 0
  7212  001488  0E00               	movlw	0
  7213  00148A  6F69               	movwf	(_efgtoa$1287+1)& (0+255),b
  7214  00148C  0E65               	movlw	101
  7215  00148E  6F68               	movwf	_efgtoa$1287& (0+255),b
  7216  001490  EF4E  F00A         	goto	l4540
  7217  001494                     l4538:
  7218                           
  7219                           ; BSR set to: 0
  7220  001494  0E00               	movlw	0
  7221  001496  6F69               	movwf	(_efgtoa$1287+1)& (0+255),b
  7222  001498  0E45               	movlw	69
  7223  00149A  6F68               	movwf	_efgtoa$1287& (0+255),b
  7224  00149C                     l4540:
  7225                           
  7226                           ; BSR set to: 0
  7227  00149C  0E20               	movlw	low _dbuf
  7228  00149E  258A               	addwf	efgtoa@i& (0+255),w,b
  7229  0014A0  6ED9               	movwf	fsr2l,c
  7230  0014A2  0E01               	movlw	high _dbuf
  7231  0014A4  218B               	addwfc	(efgtoa@i+1)& (0+255),w,b
  7232  0014A6  6EDA               	movwf	fsr2h,c
  7233  0014A8  C068  FFDF         	movff	_efgtoa$1287,indf2
  7234  0014AC                     
  7235                           ; BSR set to: 0
  7236                           ;/Applications/microchip/xc8/v2.31/pic/sources/c99/common/doprnt.c: 519:         --w;
  7237  0014AC  077E               	decf	efgtoa@w& (0+255),f,b
  7238  0014AE  A0D8               	btfss	status,0,c
  7239  0014B0  077F               	decf	(efgtoa@w+1)& (0+255),f,b
  7240  0014B2                     
  7241                           ; BSR set to: 0
  7242                           ;/Applications/microchip/xc8/v2.31/pic/sources/c99/common/doprnt.c: 520:         strcpy(
      +                          &dbuf[n], &dbuf[i]);
  7243  0014B2  0E20               	movlw	low _dbuf
  7244  0014B4  2592               	addwf	efgtoa@n& (0+255),w,b
  7245  0014B6  6E01               	movwf	strcpy@dest^0,c
  7246  0014B8  0E01               	movlw	high _dbuf
  7247  0014BA  2193               	addwfc	(efgtoa@n+1)& (0+255),w,b
  7248  0014BC  6E02               	movwf	(strcpy@dest+1)^0,c
  7249  0014BE  0E20               	movlw	low _dbuf
  7250  0014C0  258A               	addwf	efgtoa@i& (0+255),w,b
  7251  0014C2  6E03               	movwf	strcpy@src^0,c
  7252  0014C4  0E01               	movlw	high _dbuf
  7253  0014C6  218B               	addwfc	(efgtoa@i+1)& (0+255),w,b
  7254  0014C8  6E04               	movwf	(strcpy@src+1)^0,c
  7255  0014CA  EC2F  F026         	call	_strcpy	;wreg free
  7256  0014CE  EFF1  F004         	goto	l4286
  7257  0014D2                     l1021:
  7258  0014D2  0012               	return		;funcret
  7259  0014D4                     __end_of_efgtoa:
  7260                           	callstack 0
  7261                           
  7262 ;; *************** function _tolower *****************
  7263 ;; Defined at:
  7264 ;;		line 4 in file "/Applications/microchip/xc8/v2.31/pic/sources/c99/common/tolower.c"
  7265 ;; Parameters:    Size  Location     Type
  7266 ;;  c               2    6[COMRAM] int 
  7267 ;; Auto vars:     Size  Location     Type
  7268 ;;		None
  7269 ;; Return value:  Size  Location     Type
  7270 ;;                  2    6[COMRAM] int 
  7271 ;; Registers used:
  7272 ;;		wreg, status,2, status,0
  7273 ;; Tracked objects:
  7274 ;;		On entry : 0/0
  7275 ;;		On exit  : 0/0
  7276 ;;		Unchanged: 0/0
  7277 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  7278 ;;      Params:         2       0       0       0       0       0       0       0       0
  7279 ;;      Locals:         2       0       0       0       0       0       0       0       0
  7280 ;;      Temps:          4       0       0       0       0       0       0       0       0
  7281 ;;      Totals:         8       0       0       0       0       0       0       0       0
  7282 ;;Total ram usage:        8 bytes
  7283 ;; Hardware stack levels used:    1
  7284 ;; Hardware stack levels required when called:    1
  7285 ;; This function calls:
  7286 ;;		_isupper
  7287 ;; This function is called by:
  7288 ;;		_efgtoa
  7289 ;;		_vfpfcnvrt
  7290 ;; This function uses a non-reentrant model
  7291 ;;
  7292                           
  7293                           	psect	text23
  7294  004BFE                     __ptext23:
  7295                           	callstack 0
  7296  004BFE                     _tolower:
  7297                           	callstack 25
  7298  004BFE  0EBF               	movlw	191
  7299  004C00  6E09               	movwf	??_tolower^0,c
  7300  004C02  0EFF               	movlw	255
  7301  004C04  6E0A               	movwf	(??_tolower+1)^0,c
  7302  004C06  C007  F00B         	movff	tolower@c,??_tolower+2
  7303  004C0A  C008  F00C         	movff	tolower@c+1,??_tolower+3
  7304  004C0E  5009               	movf	??_tolower^0,w,c
  7305  004C10  260B               	addwf	(??_tolower+2)^0,f,c
  7306  004C12  500A               	movf	(??_tolower+1)^0,w,c
  7307  004C14  220C               	addwfc	(??_tolower+3)^0,f,c
  7308  004C16  500C               	movf	(??_tolower+3)^0,w,c
  7309  004C18  E10A               	bnz	u4960
  7310  004C1A  0E1A               	movlw	26
  7311  004C1C  5C0B               	subwf	(??_tolower+2)^0,w,c
  7312  004C1E  A0D8               	btfss	status,0,c
  7313  004C20  EF14  F026         	goto	u4961
  7314  004C24  EF17  F026         	goto	u4960
  7315  004C28                     u4961:
  7316  004C28  0E01               	movlw	1
  7317  004C2A  EF18  F026         	goto	u4970
  7318  004C2E                     u4960:
  7319  004C2E  0E00               	movlw	0
  7320  004C30                     u4970:
  7321  004C30  6E0D               	movwf	_tolower$1433^0,c
  7322  004C32  6A0E               	clrf	(_tolower$1433+1)^0,c
  7323  004C34  500D               	movf	_tolower$1433^0,w,c
  7324  004C36  100E               	iorwf	(_tolower$1433+1)^0,w,c
  7325  004C38  B4D8               	btfsc	status,2,c
  7326  004C3A  EF21  F026         	goto	u4981
  7327  004C3E  EF23  F026         	goto	u4980
  7328  004C42                     u4981:
  7329  004C42  EF2A  F026         	goto	l1264
  7330  004C46                     u4980:
  7331  004C46  0E20               	movlw	32
  7332  004C48  1007               	iorwf	tolower@c^0,w,c
  7333  004C4A  6E07               	movwf	?_tolower^0,c
  7334  004C4C  5008               	movf	(tolower@c+1)^0,w,c
  7335  004C4E  6E08               	movwf	(?_tolower+1)^0,c
  7336  004C50  EF2E  F026         	goto	l1269
  7337  004C54                     l1264:
  7338  004C54  C007  F007         	movff	tolower@c,?_tolower
  7339  004C58  C008  F008         	movff	tolower@c+1,?_tolower+1
  7340  004C5C                     l1269:
  7341  004C5C  0012               	return		;funcret
  7342  004C5E                     __end_of_tolower:
  7343                           	callstack 0
  7344                           
  7345 ;; *************** function _isupper *****************
  7346 ;; Defined at:
  7347 ;;		line 5 in file "/Applications/microchip/xc8/v2.31/pic/sources/c99/common/isupper.c"
  7348 ;; Parameters:    Size  Location     Type
  7349 ;;  c               2    0[COMRAM] int 
  7350 ;; Auto vars:     Size  Location     Type
  7351 ;;		None
  7352 ;; Return value:  Size  Location     Type
  7353 ;;                  2    0[COMRAM] int 
  7354 ;; Registers used:
  7355 ;;		wreg, status,2, status,0
  7356 ;; Tracked objects:
  7357 ;;		On entry : 0/0
  7358 ;;		On exit  : 0/0
  7359 ;;		Unchanged: 0/0
  7360 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  7361 ;;      Params:         2       0       0       0       0       0       0       0       0
  7362 ;;      Locals:         0       0       0       0       0       0       0       0       0
  7363 ;;      Temps:          4       0       0       0       0       0       0       0       0
  7364 ;;      Totals:         6       0       0       0       0       0       0       0       0
  7365 ;;Total ram usage:        6 bytes
  7366 ;; Hardware stack levels used:    1
  7367 ;; This function calls:
  7368 ;;		Nothing
  7369 ;; This function is called by:
  7370 ;;		_efgtoa
  7371 ;;		_vfpfcnvrt
  7372 ;;		_tolower
  7373 ;; This function uses a non-reentrant model
  7374 ;;
  7375                           
  7376                           	psect	text24
  7377  004EF6                     __ptext24:
  7378                           	callstack 0
  7379  004EF6                     _isupper:
  7380                           	callstack 25
  7381  004EF6  0EBF               	movlw	191
  7382  004EF8  6E03               	movwf	??_isupper^0,c
  7383  004EFA  0EFF               	movlw	255
  7384  004EFC  6E04               	movwf	(??_isupper+1)^0,c
  7385  004EFE  C001  F005         	movff	isupper@c,??_isupper+2
  7386  004F02  C002  F006         	movff	isupper@c+1,??_isupper+3
  7387  004F06  5003               	movf	??_isupper^0,w,c
  7388  004F08  2605               	addwf	(??_isupper+2)^0,f,c
  7389  004F0A  5004               	movf	(??_isupper+1)^0,w,c
  7390  004F0C  2206               	addwfc	(??_isupper+3)^0,f,c
  7391  004F0E  5006               	movf	(??_isupper+3)^0,w,c
  7392  004F10  E10A               	bnz	u3870
  7393  004F12  0E1A               	movlw	26
  7394  004F14  5C05               	subwf	(??_isupper+2)^0,w,c
  7395  004F16  A0D8               	btfss	status,0,c
  7396  004F18  EF90  F027         	goto	u3871
  7397  004F1C  EF93  F027         	goto	u3870
  7398  004F20                     u3871:
  7399  004F20  0E01               	movlw	1
  7400  004F22  EF94  F027         	goto	u3880
  7401  004F26                     u3870:
  7402  004F26  0E00               	movlw	0
  7403  004F28                     u3880:
  7404  004F28  6E01               	movwf	?_isupper^0,c
  7405  004F2A  6A02               	clrf	(?_isupper+1)^0,c
  7406  004F2C  0012               	return		;funcret
  7407  004F2E                     __end_of_isupper:
  7408                           	callstack 0
  7409                           
  7410 ;; *************** function _strcpy *****************
  7411 ;; Defined at:
  7412 ;;		line 3 in file "/Applications/microchip/xc8/v2.31/pic/sources/c99/common/strcpy.c"
  7413 ;; Parameters:    Size  Location     Type
  7414 ;;  dest            2    0[COMRAM] PTR unsigned char 
  7415 ;;		 -> dbuf(80), 
  7416 ;;  src             2    2[COMRAM] PTR const unsigned char 
  7417 ;;		 -> STR_17(4), STR_16(4), STR_13(4), STR_12(4), 
  7418 ;;		 -> dbuf(80), 
  7419 ;; Auto vars:     Size  Location     Type
  7420 ;;  d               2    8[COMRAM] PTR unsigned char 
  7421 ;;		 -> dbuf(80), 
  7422 ;;  s               2    6[COMRAM] PTR const unsigned char 
  7423 ;;		 -> STR_17(4), STR_16(4), STR_13(4), STR_12(4), 
  7424 ;;		 -> dbuf(80), 
  7425 ;; Return value:  Size  Location     Type
  7426 ;;                  2    0[COMRAM] PTR unsigned char 
  7427 ;; Registers used:
  7428 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru
  7429 ;; Tracked objects:
  7430 ;;		On entry : 0/0
  7431 ;;		On exit  : 0/0
  7432 ;;		Unchanged: 0/0
  7433 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  7434 ;;      Params:         4       0       0       0       0       0       0       0       0
  7435 ;;      Locals:         4       0       0       0       0       0       0       0       0
  7436 ;;      Temps:          2       0       0       0       0       0       0       0       0
  7437 ;;      Totals:        10       0       0       0       0       0       0       0       0
  7438 ;;Total ram usage:       10 bytes
  7439 ;; Hardware stack levels used:    1
  7440 ;; This function calls:
  7441 ;;		Nothing
  7442 ;; This function is called by:
  7443 ;;		_efgtoa
  7444 ;; This function uses a non-reentrant model
  7445 ;;
  7446                           
  7447                           	psect	text25
  7448  004C5E                     __ptext25:
  7449                           	callstack 0
  7450  004C5E                     _strcpy:
  7451                           	callstack 25
  7452  004C5E  C003  F007         	movff	strcpy@src,strcpy@s
  7453  004C62  C004  F008         	movff	strcpy@src+1,strcpy@s+1
  7454  004C66  C001  F009         	movff	strcpy@dest,strcpy@d
  7455  004C6A  C002  F00A         	movff	strcpy@dest+1,strcpy@d+1
  7456  004C6E                     l4124:
  7457  004C6E  5007               	movf	strcpy@s^0,w,c
  7458  004C70  6E05               	movwf	??_strcpy^0,c
  7459  004C72  5008               	movf	(strcpy@s+1)^0,w,c
  7460  004C74  6E06               	movwf	(??_strcpy+1)^0,c
  7461  004C76  4A07               	infsnz	strcpy@s^0,f,c
  7462  004C78  2A08               	incf	(strcpy@s+1)^0,f,c
  7463  004C7A  C005  FFF6         	movff	??_strcpy,tblptrl
  7464  004C7E  C006  FFF7         	movff	??_strcpy+1,tblptrh
  7465  004C82  6AF8               	clrf	tblptru,c
  7466  004C84  C009  FFD9         	movff	strcpy@d,fsr2l
  7467  004C88  C00A  FFDA         	movff	strcpy@d+1,fsr2h
  7468  004C8C  4A09               	infsnz	strcpy@d^0,f,c
  7469  004C8E  2A0A               	incf	(strcpy@d+1)^0,f,c
  7470  004C90  0E07               	movlw	(high __ramtop+-1)
  7471  004C92  64F7               	cpfsgt	tblptrh,c
  7472  004C94  D003               	bra	u4947
  7473  004C96  0008               	tblrd		*
  7474  004C98  50F5               	movf	tablat,w,c
  7475  004C9A  D005               	bra	u4940
  7476  004C9C                     u4947:
  7477  004C9C  CFF6 FFE1          	movff	tblptrl,fsr1l
  7478  004CA0  CFF7 FFE2          	movff	tblptrh,fsr1h
  7479  004CA4  50E7               	movf	indf1,w,c
  7480  004CA6                     u4940:
  7481  004CA6  6EDF               	movwf	indf2,c
  7482  004CA8  50DF               	movf	indf2,w,c
  7483  004CAA  A4D8               	btfss	status,2,c
  7484  004CAC  EF5A  F026         	goto	u4951
  7485  004CB0  EF5C  F026         	goto	u4950
  7486  004CB4                     u4951:
  7487  004CB4  EF37  F026         	goto	l4124
  7488  004CB8                     u4950:
  7489  004CB8  0012               	return		;funcret
  7490  004CBA                     __end_of_strcpy:
  7491                           	callstack 0
  7492                           
  7493 ;; *************** function _floorf *****************
  7494 ;; Defined at:
  7495 ;;		line 3 in file "/Applications/microchip/xc8/v2.31/pic/sources/c99/common/floorf.c"
  7496 ;; Parameters:    Size  Location     Type
  7497 ;;  x               4   25[COMRAM] float 
  7498 ;; Auto vars:     Size  Location     Type
  7499 ;;  u               4   41[COMRAM] struct .
  7500 ;;  m               4   35[COMRAM] unsigned long 
  7501 ;;  e               2   39[COMRAM] int 
  7502 ;; Return value:  Size  Location     Type
  7503 ;;                  4   25[COMRAM] float 
  7504 ;; Registers used:
  7505 ;;		wreg, status,2, status,0
  7506 ;; Tracked objects:
  7507 ;;		On entry : 0/0
  7508 ;;		On exit  : 0/0
  7509 ;;		Unchanged: 0/0
  7510 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  7511 ;;      Params:         4       0       0       0       0       0       0       0       0
  7512 ;;      Locals:        10       0       0       0       0       0       0       0       0
  7513 ;;      Temps:          6       0       0       0       0       0       0       0       0
  7514 ;;      Totals:        20       0       0       0       0       0       0       0       0
  7515 ;;Total ram usage:       20 bytes
  7516 ;; Hardware stack levels used:    1
  7517 ;; This function calls:
  7518 ;;		Nothing
  7519 ;; This function is called by:
  7520 ;;		_SensorLM35
  7521 ;;		_efgtoa
  7522 ;; This function uses a non-reentrant model
  7523 ;;
  7524                           
  7525                           	psect	text26
  7526  0035C8                     __ptext26:
  7527                           	callstack 0
  7528  0035C8                     _floorf:
  7529                           	callstack 25
  7530  0035C8  C104  F02A         	movff	floorf@F527,floorf@u
  7531  0035CC  C105  F02B         	movff	floorf@F527+1,floorf@u+1
  7532  0035D0  C106  F02C         	movff	floorf@F527+2,floorf@u+2
  7533  0035D4  C107  F02D         	movff	floorf@F527+3,floorf@u+3
  7534  0035D8  C01A  F02A         	movff	floorf@x,floorf@u
  7535  0035DC  C01B  F02B         	movff	floorf@x+1,floorf@u+1
  7536  0035E0  C01C  F02C         	movff	floorf@x+2,floorf@u+2
  7537  0035E4  C01D  F02D         	movff	floorf@x+3,floorf@u+3
  7538  0035E8  0E81               	movlw	129
  7539  0035EA  6E1E               	movwf	??_floorf^0,c
  7540  0035EC  0EFF               	movlw	255
  7541  0035EE  6E1F               	movwf	(??_floorf+1)^0,c
  7542  0035F0  C02A  F020         	movff	floorf@u,??_floorf+2
  7543  0035F4  C02B  F021         	movff	floorf@u+1,??_floorf+3
  7544  0035F8  C02C  F022         	movff	floorf@u+2,??_floorf+4
  7545  0035FC  C02D  F023         	movff	floorf@u+3,??_floorf+5
  7546  003600  0E18               	movlw	24
  7547  003602  EF08  F01B         	goto	u3890
  7548  003606                     u3895:
  7549  003606  90D8               	bcf	status,0,c
  7550  003608  3223               	rrcf	(??_floorf+5)^0,f,c
  7551  00360A  3222               	rrcf	(??_floorf+4)^0,f,c
  7552  00360C  3221               	rrcf	(??_floorf+3)^0,f,c
  7553  00360E  3220               	rrcf	(??_floorf+2)^0,f,c
  7554  003610                     u3890:
  7555  003610  2EE8               	decfsz	wreg,f,c
  7556  003612  EF03  F01B         	goto	u3895
  7557  003616  5020               	movf	(??_floorf+2)^0,w,c
  7558  003618  241E               	addwf	??_floorf^0,w,c
  7559  00361A  6E28               	movwf	floorf@e^0,c
  7560  00361C  0E00               	movlw	0
  7561  00361E  201F               	addwfc	(??_floorf+1)^0,w,c
  7562  003620  6E29               	movwf	(floorf@e+1)^0,c
  7563  003622  BE29               	btfsc	(floorf@e+1)^0,7,c
  7564  003624  EF1D  F01B         	goto	u3901
  7565  003628  5029               	movf	(floorf@e+1)^0,w,c
  7566  00362A  E109               	bnz	u3900
  7567  00362C  0E17               	movlw	23
  7568  00362E  5C28               	subwf	floorf@e^0,w,c
  7569  003630  A0D8               	btfss	status,0,c
  7570  003632  EF1D  F01B         	goto	u3901
  7571  003636  EF1F  F01B         	goto	u3900
  7572  00363A                     u3901:
  7573  00363A  EF29  F01B         	goto	l3522
  7574  00363E                     u3900:
  7575  00363E                     l3520:
  7576  00363E  C01A  F01A         	movff	floorf@x,?_floorf
  7577  003642  C01B  F01B         	movff	floorf@x+1,?_floorf+1
  7578  003646  C01C  F01C         	movff	floorf@x+2,?_floorf+2
  7579  00364A  C01D  F01D         	movff	floorf@x+3,?_floorf+3
  7580  00364E  EFEC  F01B         	goto	l899
  7581  003652                     l3522:
  7582  003652  BE29               	btfsc	(floorf@e+1)^0,7,c
  7583  003654  EF2E  F01B         	goto	u3911
  7584  003658  EF30  F01B         	goto	u3910
  7585  00365C                     u3911:
  7586  00365C  EFA0  F01B         	goto	l3532
  7587  003660                     u3910:
  7588  003660  C028  F01E         	movff	floorf@e,??_floorf
  7589  003664  0EFF               	movlw	255
  7590  003666  6E1F               	movwf	(??_floorf+1)^0,c
  7591  003668  0EFF               	movlw	255
  7592  00366A  6E20               	movwf	(??_floorf+2)^0,c
  7593  00366C  0E7F               	movlw	127
  7594  00366E  6E21               	movwf	(??_floorf+3)^0,c
  7595  003670  0E00               	movlw	0
  7596  003672  6E22               	movwf	(??_floorf+4)^0,c
  7597  003674                     u3925:
  7598  003674  661E               	tstfsz	??_floorf^0,c
  7599  003676  EF3F  F01B         	goto	u3926
  7600  00367A  EF47  F01B         	goto	u3927
  7601  00367E                     u3926:
  7602  00367E  3422               	rlcf	(??_floorf+4)^0,w,c
  7603  003680  3222               	rrcf	(??_floorf+4)^0,f,c
  7604  003682  3221               	rrcf	(??_floorf+3)^0,f,c
  7605  003684  3220               	rrcf	(??_floorf+2)^0,f,c
  7606  003686  321F               	rrcf	(??_floorf+1)^0,f,c
  7607  003688  2E1E               	decfsz	??_floorf^0,f,c
  7608  00368A  EF3A  F01B         	goto	u3925
  7609  00368E                     u3927:
  7610  00368E  C01F  F024         	movff	??_floorf+1,floorf@m
  7611  003692  C020  F025         	movff	??_floorf+2,floorf@m+1
  7612  003696  C021  F026         	movff	??_floorf+3,floorf@m+2
  7613  00369A  C022  F027         	movff	??_floorf+4,floorf@m+3
  7614  00369E  5024               	movf	floorf@m^0,w,c
  7615  0036A0  142A               	andwf	floorf@u^0,w,c
  7616  0036A2  6E1E               	movwf	??_floorf^0,c
  7617  0036A4  5025               	movf	(floorf@m+1)^0,w,c
  7618  0036A6  142B               	andwf	(floorf@u+1)^0,w,c
  7619  0036A8  6E1F               	movwf	(??_floorf+1)^0,c
  7620  0036AA  5026               	movf	(floorf@m+2)^0,w,c
  7621  0036AC  142C               	andwf	(floorf@u+2)^0,w,c
  7622  0036AE  6E20               	movwf	(??_floorf+2)^0,c
  7623  0036B0  5027               	movf	(floorf@m+3)^0,w,c
  7624  0036B2  142D               	andwf	(floorf@u+3)^0,w,c
  7625  0036B4  6E21               	movwf	(??_floorf+3)^0,c
  7626  0036B6  501E               	movf	??_floorf^0,w,c
  7627  0036B8  101F               	iorwf	(??_floorf+1)^0,w,c
  7628  0036BA  1020               	iorwf	(??_floorf+2)^0,w,c
  7629  0036BC  1021               	iorwf	(??_floorf+3)^0,w,c
  7630  0036BE  A4D8               	btfss	status,2,c
  7631  0036C0  EF64  F01B         	goto	u3931
  7632  0036C4  EF66  F01B         	goto	u3930
  7633  0036C8                     u3931:
  7634  0036C8  EF68  F01B         	goto	l3528
  7635  0036CC                     u3930:
  7636  0036CC  EF1F  F01B         	goto	l3520
  7637  0036D0                     l3528:
  7638  0036D0  C02A  F01E         	movff	floorf@u,??_floorf
  7639  0036D4  C02B  F01F         	movff	floorf@u+1,??_floorf+1
  7640  0036D8  C02C  F020         	movff	floorf@u+2,??_floorf+2
  7641  0036DC  C02D  F021         	movff	floorf@u+3,??_floorf+3
  7642  0036E0  0E20               	movlw	32
  7643  0036E2  EF78  F01B         	goto	u3940
  7644  0036E6                     u3945:
  7645  0036E6  90D8               	bcf	status,0,c
  7646  0036E8  3221               	rrcf	(??_floorf+3)^0,f,c
  7647  0036EA  3220               	rrcf	(??_floorf+2)^0,f,c
  7648  0036EC  321F               	rrcf	(??_floorf+1)^0,f,c
  7649  0036EE  321E               	rrcf	??_floorf^0,f,c
  7650  0036F0                     u3940:
  7651  0036F0  2EE8               	decfsz	wreg,f,c
  7652  0036F2  EF73  F01B         	goto	u3945
  7653  0036F6  501E               	movf	??_floorf^0,w,c
  7654  0036F8  101F               	iorwf	(??_floorf+1)^0,w,c
  7655  0036FA  1020               	iorwf	(??_floorf+2)^0,w,c
  7656  0036FC  1021               	iorwf	(??_floorf+3)^0,w,c
  7657  0036FE  B4D8               	btfsc	status,2,c
  7658  003700  EF84  F01B         	goto	u3951
  7659  003704  EF86  F01B         	goto	u3950
  7660  003708                     u3951:
  7661  003708  EF8E  F01B         	goto	l902
  7662  00370C                     u3950:
  7663  00370C  5024               	movf	floorf@m^0,w,c
  7664  00370E  262A               	addwf	floorf@u^0,f,c
  7665  003710  5025               	movf	(floorf@m+1)^0,w,c
  7666  003712  222B               	addwfc	(floorf@u+1)^0,f,c
  7667  003714  5026               	movf	(floorf@m+2)^0,w,c
  7668  003716  222C               	addwfc	(floorf@u+2)^0,f,c
  7669  003718  5027               	movf	(floorf@m+3)^0,w,c
  7670  00371A  222D               	addwfc	(floorf@u+3)^0,f,c
  7671  00371C                     l902:
  7672  00371C  1C24               	comf	floorf@m^0,w,c
  7673  00371E  6E1E               	movwf	??_floorf^0,c
  7674  003720  1C25               	comf	(floorf@m+1)^0,w,c
  7675  003722  6E1F               	movwf	(??_floorf+1)^0,c
  7676  003724  1C26               	comf	(floorf@m+2)^0,w,c
  7677  003726  6E20               	movwf	(??_floorf+2)^0,c
  7678  003728  1C27               	comf	(floorf@m+3)^0,w,c
  7679  00372A  6E21               	movwf	(??_floorf+3)^0,c
  7680  00372C  501E               	movf	??_floorf^0,w,c
  7681  00372E  162A               	andwf	floorf@u^0,f,c
  7682  003730  501F               	movf	(??_floorf+1)^0,w,c
  7683  003732  162B               	andwf	(floorf@u+1)^0,f,c
  7684  003734  5020               	movf	(??_floorf+2)^0,w,c
  7685  003736  162C               	andwf	(floorf@u+2)^0,f,c
  7686  003738  5021               	movf	(??_floorf+3)^0,w,c
  7687  00373A  162D               	andwf	(floorf@u+3)^0,f,c
  7688  00373C  EFE4  F01B         	goto	l3540
  7689  003740                     l3532:
  7690  003740  C02A  F01E         	movff	floorf@u,??_floorf
  7691  003744  C02B  F01F         	movff	floorf@u+1,??_floorf+1
  7692  003748  C02C  F020         	movff	floorf@u+2,??_floorf+2
  7693  00374C  C02D  F021         	movff	floorf@u+3,??_floorf+3
  7694  003750  0E20               	movlw	32
  7695  003752  EFB0  F01B         	goto	u3960
  7696  003756                     u3965:
  7697  003756  90D8               	bcf	status,0,c
  7698  003758  3221               	rrcf	(??_floorf+3)^0,f,c
  7699  00375A  3220               	rrcf	(??_floorf+2)^0,f,c
  7700  00375C  321F               	rrcf	(??_floorf+1)^0,f,c
  7701  00375E  321E               	rrcf	??_floorf^0,f,c
  7702  003760                     u3960:
  7703  003760  2EE8               	decfsz	wreg,f,c
  7704  003762  EFAB  F01B         	goto	u3965
  7705  003766  501E               	movf	??_floorf^0,w,c
  7706  003768  101F               	iorwf	(??_floorf+1)^0,w,c
  7707  00376A  1020               	iorwf	(??_floorf+2)^0,w,c
  7708  00376C  1021               	iorwf	(??_floorf+3)^0,w,c
  7709  00376E  A4D8               	btfss	status,2,c
  7710  003770  EFBC  F01B         	goto	u3971
  7711  003774  EFBE  F01B         	goto	u3970
  7712  003778                     u3971:
  7713  003778  EFC8  F01B         	goto	l3536
  7714  00377C                     u3970:
  7715  00377C  0E00               	movlw	0
  7716  00377E  6E2A               	movwf	floorf@u^0,c
  7717  003780  0E00               	movlw	0
  7718  003782  6E2B               	movwf	(floorf@u+1)^0,c
  7719  003784  0E00               	movlw	0
  7720  003786  6E2C               	movwf	(floorf@u+2)^0,c
  7721  003788  0E00               	movlw	0
  7722  00378A  6E2D               	movwf	(floorf@u+3)^0,c
  7723  00378C  EFE4  F01B         	goto	l3540
  7724  003790                     l3536:
  7725  003790  90D8               	bcf	status,0,c
  7726  003792  342A               	rlcf	floorf@u^0,w,c
  7727  003794  6E1E               	movwf	??_floorf^0,c
  7728  003796  342B               	rlcf	(floorf@u+1)^0,w,c
  7729  003798  6E1F               	movwf	(??_floorf+1)^0,c
  7730  00379A  342C               	rlcf	(floorf@u+2)^0,w,c
  7731  00379C  6E20               	movwf	(??_floorf+2)^0,c
  7732  00379E  342D               	rlcf	(floorf@u+3)^0,w,c
  7733  0037A0  6E21               	movwf	(??_floorf+3)^0,c
  7734  0037A2  501E               	movf	??_floorf^0,w,c
  7735  0037A4  101F               	iorwf	(??_floorf+1)^0,w,c
  7736  0037A6  1020               	iorwf	(??_floorf+2)^0,w,c
  7737  0037A8  1021               	iorwf	(??_floorf+3)^0,w,c
  7738  0037AA  B4D8               	btfsc	status,2,c
  7739  0037AC  EFDA  F01B         	goto	u3981
  7740  0037B0  EFDC  F01B         	goto	u3980
  7741  0037B4                     u3981:
  7742  0037B4  EFE4  F01B         	goto	l3540
  7743  0037B8                     u3980:
  7744  0037B8  0E00               	movlw	0
  7745  0037BA  6E2A               	movwf	floorf@u^0,c
  7746  0037BC  0E00               	movlw	0
  7747  0037BE  6E2B               	movwf	(floorf@u+1)^0,c
  7748  0037C0  0E80               	movlw	128
  7749  0037C2  6E2C               	movwf	(floorf@u+2)^0,c
  7750  0037C4  0EBF               	movlw	191
  7751  0037C6  6E2D               	movwf	(floorf@u+3)^0,c
  7752  0037C8                     l3540:
  7753  0037C8  C02A  F01A         	movff	floorf@u,?_floorf
  7754  0037CC  C02B  F01B         	movff	floorf@u+1,?_floorf+1
  7755  0037D0  C02C  F01C         	movff	floorf@u+2,?_floorf+2
  7756  0037D4  C02D  F01D         	movff	floorf@u+3,?_floorf+3
  7757  0037D8                     l899:
  7758  0037D8  0012               	return		;funcret
  7759  0037DA                     __end_of_floorf:
  7760                           	callstack 0
  7761                           
  7762 ;; *************** function ___fpclassifyf *****************
  7763 ;; Defined at:
  7764 ;;		line 4 in file "/Applications/microchip/xc8/v2.31/pic/sources/c99/common/__fpclassifyf.c"
  7765 ;; Parameters:    Size  Location     Type
  7766 ;;  x               4    0[COMRAM] float 
  7767 ;; Auto vars:     Size  Location     Type
  7768 ;;  u               4   10[COMRAM] struct .
  7769 ;;  e               2    8[COMRAM] int 
  7770 ;; Return value:  Size  Location     Type
  7771 ;;                  2    0[COMRAM] int 
  7772 ;; Registers used:
  7773 ;;		wreg, status,2, status,0
  7774 ;; Tracked objects:
  7775 ;;		On entry : 0/0
  7776 ;;		On exit  : 0/0
  7777 ;;		Unchanged: 0/0
  7778 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  7779 ;;      Params:         4       0       0       0       0       0       0       0       0
  7780 ;;      Locals:         6       0       0       0       0       0       0       0       0
  7781 ;;      Temps:          4       0       0       0       0       0       0       0       0
  7782 ;;      Totals:        14       0       0       0       0       0       0       0       0
  7783 ;;Total ram usage:       14 bytes
  7784 ;; Hardware stack levels used:    1
  7785 ;; This function calls:
  7786 ;;		Nothing
  7787 ;; This function is called by:
  7788 ;;		_efgtoa
  7789 ;; This function uses a non-reentrant model
  7790 ;;
  7791                           
  7792                           	psect	text27
  7793  0042D4                     __ptext27:
  7794                           	callstack 0
  7795  0042D4                     ___fpclassifyf:
  7796                           	callstack 25
  7797  0042D4  C100  F00B         	movff	___fpclassifyf@F465,___fpclassifyf@u
  7798  0042D8  C101  F00C         	movff	___fpclassifyf@F465+1,___fpclassifyf@u+1
  7799  0042DC  C102  F00D         	movff	___fpclassifyf@F465+2,___fpclassifyf@u+2
  7800  0042E0  C103  F00E         	movff	___fpclassifyf@F465+3,___fpclassifyf@u+3
  7801  0042E4  C001  F00B         	movff	___fpclassifyf@x,___fpclassifyf@u
  7802  0042E8  C002  F00C         	movff	___fpclassifyf@x+1,___fpclassifyf@u+1
  7803  0042EC  C003  F00D         	movff	___fpclassifyf@x+2,___fpclassifyf@u+2
  7804  0042F0  C004  F00E         	movff	___fpclassifyf@x+3,___fpclassifyf@u+3
  7805  0042F4  C00B  F005         	movff	___fpclassifyf@u,??___fpclassifyf
  7806  0042F8  C00C  F006         	movff	___fpclassifyf@u+1,??___fpclassifyf+1
  7807  0042FC  C00D  F007         	movff	___fpclassifyf@u+2,??___fpclassifyf+2
  7808  004300  C00E  F008         	movff	___fpclassifyf@u+3,??___fpclassifyf+3
  7809  004304  0E18               	movlw	24
  7810  004306  EF8A  F021         	goto	u4870
  7811  00430A                     u4875:
  7812  00430A  90D8               	bcf	status,0,c
  7813  00430C  3208               	rrcf	(??___fpclassifyf+3)^0,f,c
  7814  00430E  3207               	rrcf	(??___fpclassifyf+2)^0,f,c
  7815  004310  3206               	rrcf	(??___fpclassifyf+1)^0,f,c
  7816  004312  3205               	rrcf	??___fpclassifyf^0,f,c
  7817  004314                     u4870:
  7818  004314  2EE8               	decfsz	wreg,f,c
  7819  004316  EF85  F021         	goto	u4875
  7820  00431A  5005               	movf	??___fpclassifyf^0,w,c
  7821  00431C  6E09               	movwf	___fpclassifyf@e^0,c
  7822  00431E  6A0A               	clrf	(___fpclassifyf@e+1)^0,c
  7823  004320  5009               	movf	___fpclassifyf@e^0,w,c
  7824  004322  100A               	iorwf	(___fpclassifyf@e+1)^0,w,c
  7825  004324  A4D8               	btfss	status,2,c
  7826  004326  EF97  F021         	goto	u4881
  7827  00432A  EF99  F021         	goto	u4880
  7828  00432E                     u4881:
  7829  00432E  EFB9  F021         	goto	l4112
  7830  004332                     u4880:
  7831  004332  90D8               	bcf	status,0,c
  7832  004334  340B               	rlcf	___fpclassifyf@u^0,w,c
  7833  004336  6E05               	movwf	??___fpclassifyf^0,c
  7834  004338  340C               	rlcf	(___fpclassifyf@u+1)^0,w,c
  7835  00433A  6E06               	movwf	(??___fpclassifyf+1)^0,c
  7836  00433C  340D               	rlcf	(___fpclassifyf@u+2)^0,w,c
  7837  00433E  6E07               	movwf	(??___fpclassifyf+2)^0,c
  7838  004340  340E               	rlcf	(___fpclassifyf@u+3)^0,w,c
  7839  004342  6E08               	movwf	(??___fpclassifyf+3)^0,c
  7840  004344  5005               	movf	??___fpclassifyf^0,w,c
  7841  004346  1006               	iorwf	(??___fpclassifyf+1)^0,w,c
  7842  004348  1007               	iorwf	(??___fpclassifyf+2)^0,w,c
  7843  00434A  1008               	iorwf	(??___fpclassifyf+3)^0,w,c
  7844  00434C  A4D8               	btfss	status,2,c
  7845  00434E  EFAB  F021         	goto	u4891
  7846  004352  EFAD  F021         	goto	u4890
  7847  004356                     u4891:
  7848  004356  EFB3  F021         	goto	l4108
  7849  00435A                     u4890:
  7850  00435A  0E00               	movlw	0
  7851  00435C  6E02               	movwf	(?___fpclassifyf+1)^0,c
  7852  00435E  0E02               	movlw	2
  7853  004360  6E01               	movwf	?___fpclassifyf^0,c
  7854  004362  EFE8  F021         	goto	l1152
  7855  004366                     l4108:
  7856  004366  0E00               	movlw	0
  7857  004368  6E02               	movwf	(?___fpclassifyf+1)^0,c
  7858  00436A  0E03               	movlw	3
  7859  00436C  6E01               	movwf	?___fpclassifyf^0,c
  7860  00436E  EFE8  F021         	goto	l1152
  7861  004372                     l4112:
  7862  004372  2809               	incf	___fpclassifyf@e^0,w,c
  7863  004374  100A               	iorwf	(___fpclassifyf@e+1)^0,w,c
  7864  004376  A4D8               	btfss	status,2,c
  7865  004378  EFC0  F021         	goto	u4901
  7866  00437C  EFC2  F021         	goto	u4900
  7867  004380                     u4901:
  7868  004380  EFE4  F021         	goto	l4118
  7869  004384                     u4900:
  7870  004384  C00B  F005         	movff	___fpclassifyf@u,??___fpclassifyf
  7871  004388  C00C  F006         	movff	___fpclassifyf@u+1,??___fpclassifyf+1
  7872  00438C  C00D  F007         	movff	___fpclassifyf@u+2,??___fpclassifyf+2
  7873  004390  C00E  F008         	movff	___fpclassifyf@u+3,??___fpclassifyf+3
  7874  004394  0E09               	movlw	9
  7875  004396                     u4915:
  7876  004396  90D8               	bcf	status,0,c
  7877  004398  3605               	rlcf	??___fpclassifyf^0,f,c
  7878  00439A  3606               	rlcf	(??___fpclassifyf+1)^0,f,c
  7879  00439C  3607               	rlcf	(??___fpclassifyf+2)^0,f,c
  7880  00439E  3608               	rlcf	(??___fpclassifyf+3)^0,f,c
  7881  0043A0  2EE8               	decfsz	wreg,f,c
  7882  0043A2  EFCB  F021         	goto	u4915
  7883  0043A6  5005               	movf	??___fpclassifyf^0,w,c
  7884  0043A8  1006               	iorwf	(??___fpclassifyf+1)^0,w,c
  7885  0043AA  1007               	iorwf	(??___fpclassifyf+2)^0,w,c
  7886  0043AC  1008               	iorwf	(??___fpclassifyf+3)^0,w,c
  7887  0043AE  B4D8               	btfsc	status,2,c
  7888  0043B0  EFDC  F021         	goto	u4921
  7889  0043B4  EFDF  F021         	goto	u4920
  7890  0043B8                     u4921:
  7891  0043B8  0E01               	movlw	1
  7892  0043BA  EFE0  F021         	goto	u4930
  7893  0043BE                     u4920:
  7894  0043BE  0E00               	movlw	0
  7895  0043C0                     u4930:
  7896  0043C0  6E01               	movwf	?___fpclassifyf^0,c
  7897  0043C2  6A02               	clrf	(?___fpclassifyf+1)^0,c
  7898  0043C4  EFE8  F021         	goto	l1152
  7899  0043C8                     l4118:
  7900  0043C8  0E00               	movlw	0
  7901  0043CA  6E02               	movwf	(?___fpclassifyf+1)^0,c
  7902  0043CC  0E04               	movlw	4
  7903  0043CE  6E01               	movwf	?___fpclassifyf^0,c
  7904  0043D0                     l1152:
  7905  0043D0  0012               	return		;funcret
  7906  0043D2                     __end_of___fpclassifyf:
  7907                           	callstack 0
  7908                           
  7909 ;; *************** function ___fltol *****************
  7910 ;; Defined at:
  7911 ;;		line 43 in file "/Applications/microchip/xc8/v2.31/pic/sources/c99/common/fltol.c"
  7912 ;; Parameters:    Size  Location     Type
  7913 ;;  f1              4    0[COMRAM] int 
  7914 ;; Auto vars:     Size  Location     Type
  7915 ;;  exp1            1    9[COMRAM] unsigned char 
  7916 ;;  sign1           1    8[COMRAM] unsigned char 
  7917 ;; Return value:  Size  Location     Type
  7918 ;;                  4    0[COMRAM] long 
  7919 ;; Registers used:
  7920 ;;		wreg, status,2, status,0
  7921 ;; Tracked objects:
  7922 ;;		On entry : 0/0
  7923 ;;		On exit  : 0/0
  7924 ;;		Unchanged: 0/0
  7925 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  7926 ;;      Params:         4       0       0       0       0       0       0       0       0
  7927 ;;      Locals:         2       0       0       0       0       0       0       0       0
  7928 ;;      Temps:          4       0       0       0       0       0       0       0       0
  7929 ;;      Totals:        10       0       0       0       0       0       0       0       0
  7930 ;;Total ram usage:       10 bytes
  7931 ;; Hardware stack levels used:    1
  7932 ;; This function calls:
  7933 ;;		Nothing
  7934 ;; This function is called by:
  7935 ;;		_SensorLM35
  7936 ;;		_efgtoa
  7937 ;; This function uses a non-reentrant model
  7938 ;;
  7939                           
  7940                           	psect	text28
  7941  003FC6                     __ptext28:
  7942                           	callstack 0
  7943  003FC6                     ___fltol:
  7944                           	callstack 25
  7945  003FC6  3403               	rlcf	(___fltol@f1+2)^0,w,c
  7946  003FC8  3404               	rlcf	(___fltol@f1+3)^0,w,c
  7947  003FCA  6E0A               	movwf	___fltol@exp1^0,c
  7948  003FCC  500A               	movf	___fltol@exp1^0,w,c
  7949  003FCE  A4D8               	btfss	status,2,c
  7950  003FD0  EFEC  F01F         	goto	u4751
  7951  003FD4  EFEE  F01F         	goto	u4750
  7952  003FD8                     u4751:
  7953  003FD8  EFF8  F01F         	goto	l4036
  7954  003FDC                     u4750:
  7955  003FDC                     l4032:
  7956  003FDC  0E00               	movlw	0
  7957  003FDE  6E01               	movwf	?___fltol^0,c
  7958  003FE0  0E00               	movlw	0
  7959  003FE2  6E02               	movwf	(?___fltol+1)^0,c
  7960  003FE4  0E00               	movlw	0
  7961  003FE6  6E03               	movwf	(?___fltol+2)^0,c
  7962  003FE8  0E00               	movlw	0
  7963  003FEA  6E04               	movwf	(?___fltol+3)^0,c
  7964  003FEC  EF65  F020         	goto	l506
  7965  003FF0                     l4036:
  7966  003FF0  C001  F005         	movff	___fltol@f1,??___fltol
  7967  003FF4  C002  F006         	movff	___fltol@f1+1,??___fltol+1
  7968  003FF8  C003  F007         	movff	___fltol@f1+2,??___fltol+2
  7969  003FFC  C004  F008         	movff	___fltol@f1+3,??___fltol+3
  7970  004000  0E20               	movlw	32
  7971  004002  EF08  F020         	goto	u4760
  7972  004006                     u4765:
  7973  004006  90D8               	bcf	status,0,c
  7974  004008  3208               	rrcf	(??___fltol+3)^0,f,c
  7975  00400A  3207               	rrcf	(??___fltol+2)^0,f,c
  7976  00400C  3206               	rrcf	(??___fltol+1)^0,f,c
  7977  00400E  3205               	rrcf	??___fltol^0,f,c
  7978  004010                     u4760:
  7979  004010  2EE8               	decfsz	wreg,f,c
  7980  004012  EF03  F020         	goto	u4765
  7981  004016  5005               	movf	??___fltol^0,w,c
  7982  004018  6E09               	movwf	___fltol@sign1^0,c
  7983  00401A  8E03               	bsf	(___fltol@f1+2)^0,7,c
  7984  00401C  0EFF               	movlw	255
  7985  00401E  1601               	andwf	___fltol@f1^0,f,c
  7986  004020  0EFF               	movlw	255
  7987  004022  1602               	andwf	(___fltol@f1+1)^0,f,c
  7988  004024  0EFF               	movlw	255
  7989  004026  1603               	andwf	(___fltol@f1+2)^0,f,c
  7990  004028  0E00               	movlw	0
  7991  00402A  1604               	andwf	(___fltol@f1+3)^0,f,c
  7992  00402C  0E96               	movlw	150
  7993  00402E  5E0A               	subwf	___fltol@exp1^0,f,c
  7994  004030  BE0A               	btfsc	___fltol@exp1^0,7,c
  7995  004032  EF1F  F020         	goto	u4770
  7996  004036  EF1D  F020         	goto	u4771
  7997  00403A                     u4771:
  7998  00403A  EF35  F020         	goto	l4056
  7999  00403E                     u4770:
  8000  00403E  500A               	movf	___fltol@exp1^0,w,c
  8001  004040  0A80               	xorlw	128
  8002  004042  0F97               	addlw	151
  8003  004044  B0D8               	btfsc	status,0,c
  8004  004046  EF27  F020         	goto	u4781
  8005  00404A  EF29  F020         	goto	u4780
  8006  00404E                     u4781:
  8007  00404E  EF2B  F020         	goto	l4052
  8008  004052                     u4780:
  8009  004052  EFEE  F01F         	goto	l4032
  8010  004056                     l4052:
  8011  004056  90D8               	bcf	status,0,c
  8012  004058  3204               	rrcf	(___fltol@f1+3)^0,f,c
  8013  00405A  3203               	rrcf	(___fltol@f1+2)^0,f,c
  8014  00405C  3202               	rrcf	(___fltol@f1+1)^0,f,c
  8015  00405E  3201               	rrcf	___fltol@f1^0,f,c
  8016  004060  3E0A               	incfsz	___fltol@exp1^0,f,c
  8017  004062  EF2B  F020         	goto	l4052
  8018  004066  EF4D  F020         	goto	l4066
  8019  00406A                     l4056:
  8020  00406A  0E1F               	movlw	31
  8021  00406C  640A               	cpfsgt	___fltol@exp1^0,c
  8022  00406E  EF3B  F020         	goto	u4791
  8023  004072  EF3D  F020         	goto	u4790
  8024  004076                     u4791:
  8025  004076  EF45  F020         	goto	l4064
  8026  00407A                     u4790:
  8027  00407A  EFEE  F01F         	goto	l4032
  8028  00407E                     l4062:
  8029  00407E  90D8               	bcf	status,0,c
  8030  004080  3601               	rlcf	___fltol@f1^0,f,c
  8031  004082  3602               	rlcf	(___fltol@f1+1)^0,f,c
  8032  004084  3603               	rlcf	(___fltol@f1+2)^0,f,c
  8033  004086  3604               	rlcf	(___fltol@f1+3)^0,f,c
  8034  004088  060A               	decf	___fltol@exp1^0,f,c
  8035  00408A                     l4064:
  8036  00408A  500A               	movf	___fltol@exp1^0,w,c
  8037  00408C  A4D8               	btfss	status,2,c
  8038  00408E  EF4B  F020         	goto	u4801
  8039  004092  EF4D  F020         	goto	u4800
  8040  004096                     u4801:
  8041  004096  EF3F  F020         	goto	l4062
  8042  00409A                     u4800:
  8043  00409A                     l4066:
  8044  00409A  5009               	movf	___fltol@sign1^0,w,c
  8045  00409C  B4D8               	btfsc	status,2,c
  8046  00409E  EF53  F020         	goto	u4811
  8047  0040A2  EF55  F020         	goto	u4810
  8048  0040A6                     u4811:
  8049  0040A6  EF5D  F020         	goto	l4070
  8050  0040AA                     u4810:
  8051  0040AA  1E04               	comf	(___fltol@f1+3)^0,f,c
  8052  0040AC  1E03               	comf	(___fltol@f1+2)^0,f,c
  8053  0040AE  1E02               	comf	(___fltol@f1+1)^0,f,c
  8054  0040B0  6C01               	negf	___fltol@f1^0,c
  8055  0040B2  0E00               	movlw	0
  8056  0040B4  2202               	addwfc	(___fltol@f1+1)^0,f,c
  8057  0040B6  2203               	addwfc	(___fltol@f1+2)^0,f,c
  8058  0040B8  2204               	addwfc	(___fltol@f1+3)^0,f,c
  8059  0040BA                     l4070:
  8060  0040BA  C001  F001         	movff	___fltol@f1,?___fltol
  8061  0040BE  C002  F002         	movff	___fltol@f1+1,?___fltol+1
  8062  0040C2  C003  F003         	movff	___fltol@f1+2,?___fltol+2
  8063  0040C6  C004  F004         	movff	___fltol@f1+3,?___fltol+3
  8064  0040CA                     l506:
  8065  0040CA  0012               	return		;funcret
  8066  0040CC                     __end_of___fltol:
  8067                           	callstack 0
  8068                           
  8069 ;; *************** function ___flsub *****************
  8070 ;; Defined at:
  8071 ;;		line 245 in file "/Applications/microchip/xc8/v2.31/pic/sources/c99/common/sprcadd.c"
  8072 ;; Parameters:    Size  Location     Type
  8073 ;;  b               4   49[COMRAM] long 
  8074 ;;  a               4   53[COMRAM] long 
  8075 ;; Auto vars:     Size  Location     Type
  8076 ;;		None
  8077 ;; Return value:  Size  Location     Type
  8078 ;;                  4   49[COMRAM] long 
  8079 ;; Registers used:
  8080 ;;		wreg, status,2, status,0, cstack
  8081 ;; Tracked objects:
  8082 ;;		On entry : 0/0
  8083 ;;		On exit  : 0/0
  8084 ;;		Unchanged: 0/0
  8085 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  8086 ;;      Params:         8       0       0       0       0       0       0       0       0
  8087 ;;      Locals:         0       0       0       0       0       0       0       0       0
  8088 ;;      Temps:          0       0       0       0       0       0       0       0       0
  8089 ;;      Totals:         8       0       0       0       0       0       0       0       0
  8090 ;;Total ram usage:        8 bytes
  8091 ;; Hardware stack levels used:    1
  8092 ;; Hardware stack levels required when called:    1
  8093 ;; This function calls:
  8094 ;;		___fladd
  8095 ;; This function is called by:
  8096 ;;		_SensorLM35
  8097 ;;		_efgtoa
  8098 ;; This function uses a non-reentrant model
  8099 ;;
  8100                           
  8101                           	psect	text29
  8102  004DA4                     __ptext29:
  8103                           	callstack 0
  8104  004DA4                     ___flsub:
  8105                           	callstack 24
  8106  004DA4  0E00               	movlw	0
  8107  004DA6  1A36               	xorwf	___flsub@a^0,f,c
  8108  004DA8  0E00               	movlw	0
  8109  004DAA  1A37               	xorwf	(___flsub@a+1)^0,f,c
  8110  004DAC  0E00               	movlw	0
  8111  004DAE  1A38               	xorwf	(___flsub@a+2)^0,f,c
  8112  004DB0  0E80               	movlw	128
  8113  004DB2  1A39               	xorwf	(___flsub@a+3)^0,f,c
  8114  004DB4  C032  F001         	movff	___flsub@b,___fladd@b
  8115  004DB8  C033  F002         	movff	___flsub@b+1,___fladd@b+1
  8116  004DBC  C034  F003         	movff	___flsub@b+2,___fladd@b+2
  8117  004DC0  C035  F004         	movff	___flsub@b+3,___fladd@b+3
  8118  004DC4  C036  F005         	movff	___flsub@a,___fladd@a
  8119  004DC8  C037  F006         	movff	___flsub@a+1,___fladd@a+1
  8120  004DCC  C038  F007         	movff	___flsub@a+2,___fladd@a+2
  8121  004DD0  C039  F008         	movff	___flsub@a+3,___fladd@a+3
  8122  004DD4  ECA6  F00E         	call	___fladd	;wreg free
  8123  004DD8  C001  F032         	movff	?___fladd,?___flsub
  8124  004DDC  C002  F033         	movff	?___fladd+1,?___flsub+1
  8125  004DE0  C003  F034         	movff	?___fladd+2,?___flsub+2
  8126  004DE4  C004  F035         	movff	?___fladd+3,?___flsub+3
  8127  004DE8  0012               	return		;funcret
  8128  004DEA                     __end_of___flsub:
  8129                           	callstack 0
  8130                           
  8131 ;; *************** function ___fladd *****************
  8132 ;; Defined at:
  8133 ;;		line 10 in file "/Applications/microchip/xc8/v2.31/pic/sources/c99/common/sprcadd.c"
  8134 ;; Parameters:    Size  Location     Type
  8135 ;;  b               4    0[COMRAM] long 
  8136 ;;  a               4    4[COMRAM] long 
  8137 ;; Auto vars:     Size  Location     Type
  8138 ;;  grs             1   15[COMRAM] unsigned char 
  8139 ;;  bexp            1   14[COMRAM] unsigned char 
  8140 ;;  aexp            1   13[COMRAM] unsigned char 
  8141 ;;  signs           1   12[COMRAM] unsigned char 
  8142 ;; Return value:  Size  Location     Type
  8143 ;;                  4    0[COMRAM] unsigned char 
  8144 ;; Registers used:
  8145 ;;		wreg, status,2, status,0
  8146 ;; Tracked objects:
  8147 ;;		On entry : 0/0
  8148 ;;		On exit  : 0/0
  8149 ;;		Unchanged: 0/0
  8150 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  8151 ;;      Params:         8       0       0       0       0       0       0       0       0
  8152 ;;      Locals:         4       0       0       0       0       0       0       0       0
  8153 ;;      Temps:          4       0       0       0       0       0       0       0       0
  8154 ;;      Totals:        16       0       0       0       0       0       0       0       0
  8155 ;;Total ram usage:       16 bytes
  8156 ;; Hardware stack levels used:    1
  8157 ;; This function calls:
  8158 ;;		Nothing
  8159 ;; This function is called by:
  8160 ;;		___flsub
  8161 ;;		_efgtoa
  8162 ;; This function uses a non-reentrant model
  8163 ;;
  8164                           
  8165                           	psect	text30
  8166  001D4C                     __ptext30:
  8167                           	callstack 0
  8168  001D4C                     ___fladd:
  8169                           	callstack 24
  8170  001D4C  5004               	movf	(___fladd@b+3)^0,w,c
  8171  001D4E  0B80               	andlw	128
  8172  001D50  6E0D               	movwf	___fladd@signs^0,c
  8173  001D52  5004               	movf	(___fladd@b+3)^0,w,c
  8174  001D54  2404               	addwf	(___fladd@b+3)^0,w,c
  8175  001D56  6E0F               	movwf	___fladd@bexp^0,c
  8176  001D58  AE03               	btfss	(___fladd@b+2)^0,7,c
  8177  001D5A  EFB1  F00E         	goto	u3461
  8178  001D5E  EFB3  F00E         	goto	u3460
  8179  001D62                     u3461:
  8180  001D62  EFB4  F00E         	goto	l3298
  8181  001D66                     u3460:
  8182  001D66  800F               	bsf	___fladd@bexp^0,0,c
  8183  001D68                     l3298:
  8184  001D68  500F               	movf	___fladd@bexp^0,w,c
  8185  001D6A  B4D8               	btfsc	status,2,c
  8186  001D6C  EFBA  F00E         	goto	u3471
  8187  001D70  EFBC  F00E         	goto	u3470
  8188  001D74                     u3471:
  8189  001D74  EFD1  F00E         	goto	l3308
  8190  001D78                     u3470:
  8191  001D78  280F               	incf	___fladd@bexp^0,w,c
  8192  001D7A  A4D8               	btfss	status,2,c
  8193  001D7C  EFC2  F00E         	goto	u3481
  8194  001D80  EFC4  F00E         	goto	u3480
  8195  001D84                     u3481:
  8196  001D84  EFCC  F00E         	goto	l3304
  8197  001D88                     u3480:
  8198  001D88  0E00               	movlw	0
  8199  001D8A  6E01               	movwf	___fladd@b^0,c
  8200  001D8C  0E00               	movlw	0
  8201  001D8E  6E02               	movwf	(___fladd@b+1)^0,c
  8202  001D90  0E00               	movlw	0
  8203  001D92  6E03               	movwf	(___fladd@b+2)^0,c
  8204  001D94  0E00               	movlw	0
  8205  001D96  6E04               	movwf	(___fladd@b+3)^0,c
  8206  001D98                     l3304:
  8207  001D98  8E03               	bsf	(___fladd@b+2)^0,7,c
  8208  001D9A  0E00               	movlw	0
  8209  001D9C  6E04               	movwf	(___fladd@b+3)^0,c
  8210  001D9E  EFD9  F00E         	goto	l3310
  8211  001DA2                     l3308:
  8212  001DA2  0E00               	movlw	0
  8213  001DA4  6E01               	movwf	___fladd@b^0,c
  8214  001DA6  0E00               	movlw	0
  8215  001DA8  6E02               	movwf	(___fladd@b+1)^0,c
  8216  001DAA  0E00               	movlw	0
  8217  001DAC  6E03               	movwf	(___fladd@b+2)^0,c
  8218  001DAE  0E00               	movlw	0
  8219  001DB0  6E04               	movwf	(___fladd@b+3)^0,c
  8220  001DB2                     l3310:
  8221  001DB2  5008               	movf	(___fladd@a+3)^0,w,c
  8222  001DB4  0B80               	andlw	128
  8223  001DB6  6E0E               	movwf	___fladd@aexp^0,c
  8224  001DB8  500D               	movf	___fladd@signs^0,w,c
  8225  001DBA  180E               	xorwf	___fladd@aexp^0,w,c
  8226  001DBC  B4D8               	btfsc	status,2,c
  8227  001DBE  EFE3  F00E         	goto	u3491
  8228  001DC2  EFE5  F00E         	goto	u3490
  8229  001DC6                     u3491:
  8230  001DC6  EFE6  F00E         	goto	l3316
  8231  001DCA                     u3490:
  8232  001DCA  8C0D               	bsf	___fladd@signs^0,6,c
  8233  001DCC                     l3316:
  8234  001DCC  5008               	movf	(___fladd@a+3)^0,w,c
  8235  001DCE  2408               	addwf	(___fladd@a+3)^0,w,c
  8236  001DD0  6E0E               	movwf	___fladd@aexp^0,c
  8237  001DD2  AE07               	btfss	(___fladd@a+2)^0,7,c
  8238  001DD4  EFEE  F00E         	goto	u3501
  8239  001DD8  EFF0  F00E         	goto	u3500
  8240  001DDC                     u3501:
  8241  001DDC  EFF1  F00E         	goto	l3322
  8242  001DE0                     u3500:
  8243  001DE0  800E               	bsf	___fladd@aexp^0,0,c
  8244  001DE2                     l3322:
  8245  001DE2  500E               	movf	___fladd@aexp^0,w,c
  8246  001DE4  B4D8               	btfsc	status,2,c
  8247  001DE6  EFF7  F00E         	goto	u3511
  8248  001DEA  EFF9  F00E         	goto	u3510
  8249  001DEE                     u3511:
  8250  001DEE  EF0E  F00F         	goto	l3332
  8251  001DF2                     u3510:
  8252  001DF2  280E               	incf	___fladd@aexp^0,w,c
  8253  001DF4  A4D8               	btfss	status,2,c
  8254  001DF6  EFFF  F00E         	goto	u3521
  8255  001DFA  EF01  F00F         	goto	u3520
  8256  001DFE                     u3521:
  8257  001DFE  EF09  F00F         	goto	l3328
  8258  001E02                     u3520:
  8259  001E02  0E00               	movlw	0
  8260  001E04  6E05               	movwf	___fladd@a^0,c
  8261  001E06  0E00               	movlw	0
  8262  001E08  6E06               	movwf	(___fladd@a+1)^0,c
  8263  001E0A  0E00               	movlw	0
  8264  001E0C  6E07               	movwf	(___fladd@a+2)^0,c
  8265  001E0E  0E00               	movlw	0
  8266  001E10  6E08               	movwf	(___fladd@a+3)^0,c
  8267  001E12                     l3328:
  8268  001E12  8E07               	bsf	(___fladd@a+2)^0,7,c
  8269  001E14  0E00               	movlw	0
  8270  001E16  6E08               	movwf	(___fladd@a+3)^0,c
  8271  001E18  EF16  F00F         	goto	l3334
  8272  001E1C                     l3332:
  8273  001E1C  0E00               	movlw	0
  8274  001E1E  6E05               	movwf	___fladd@a^0,c
  8275  001E20  0E00               	movlw	0
  8276  001E22  6E06               	movwf	(___fladd@a+1)^0,c
  8277  001E24  0E00               	movlw	0
  8278  001E26  6E07               	movwf	(___fladd@a+2)^0,c
  8279  001E28  0E00               	movlw	0
  8280  001E2A  6E08               	movwf	(___fladd@a+3)^0,c
  8281  001E2C                     l3334:
  8282  001E2C  500F               	movf	___fladd@bexp^0,w,c
  8283  001E2E  5C0E               	subwf	___fladd@aexp^0,w,c
  8284  001E30  B0D8               	btfsc	status,0,c
  8285  001E32  EF1D  F00F         	goto	u3531
  8286  001E36  EF1F  F00F         	goto	u3530
  8287  001E3A                     u3531:
  8288  001E3A  EF46  F00F         	goto	l3370
  8289  001E3E                     u3530:
  8290  001E3E  AC0D               	btfss	___fladd@signs^0,6,c
  8291  001E40  EF24  F00F         	goto	u3541
  8292  001E44  EF26  F00F         	goto	u3540
  8293  001E48                     u3541:
  8294  001E48  EF28  F00F         	goto	l3340
  8295  001E4C                     u3540:
  8296  001E4C  0E80               	movlw	128
  8297  001E4E  1A0D               	xorwf	___fladd@signs^0,f,c
  8298  001E50                     l3340:
  8299  001E50  C00F  F010         	movff	___fladd@bexp,___fladd@grs
  8300  001E54  C00E  F00F         	movff	___fladd@aexp,___fladd@bexp
  8301  001E58  C010  F00E         	movff	___fladd@grs,___fladd@aexp
  8302  001E5C  C001  F010         	movff	___fladd@b,___fladd@grs
  8303  001E60  C005  F001         	movff	___fladd@a,___fladd@b
  8304  001E64  C010  F005         	movff	___fladd@grs,___fladd@a
  8305  001E68  C002  F010         	movff	___fladd@b+1,___fladd@grs
  8306  001E6C  C006  F002         	movff	___fladd@a+1,___fladd@b+1
  8307  001E70  C010  F006         	movff	___fladd@grs,___fladd@a+1
  8308  001E74  C003  F010         	movff	___fladd@b+2,___fladd@grs
  8309  001E78  C007  F003         	movff	___fladd@a+2,___fladd@b+2
  8310  001E7C  C010  F007         	movff	___fladd@grs,___fladd@a+2
  8311  001E80  C004  F010         	movff	___fladd@b+3,___fladd@grs
  8312  001E84  C008  F004         	movff	___fladd@a+3,___fladd@b+3
  8313  001E88  C010  F008         	movff	___fladd@grs,___fladd@a+3
  8314  001E8C                     l3370:
  8315  001E8C  0E00               	movlw	0
  8316  001E8E  6E10               	movwf	___fladd@grs^0,c
  8317  001E90  500F               	movf	___fladd@bexp^0,w,c
  8318  001E92  C00E  F009         	movff	___fladd@aexp,??___fladd
  8319  001E96  6A0A               	clrf	(??___fladd+1)^0,c
  8320  001E98  5E09               	subwf	??___fladd^0,f,c
  8321  001E9A  0E00               	movlw	0
  8322  001E9C  5A0A               	subwfb	(??___fladd+1)^0,f,c
  8323  001E9E  BE0A               	btfsc	(??___fladd+1)^0,7,c
  8324  001EA0  EF5B  F00F         	goto	u3551
  8325  001EA4  500A               	movf	(??___fladd+1)^0,w,c
  8326  001EA6  E109               	bnz	u3550
  8327  001EA8  0E1A               	movlw	26
  8328  001EAA  5C09               	subwf	??___fladd^0,w,c
  8329  001EAC  A0D8               	btfss	status,0,c
  8330  001EAE  EF5B  F00F         	goto	u3551
  8331  001EB2  EF5D  F00F         	goto	u3550
  8332  001EB6                     u3551:
  8333  001EB6  EF94  F00F         	goto	l738
  8334  001EBA                     u3550:
  8335  001EBA  5001               	movf	___fladd@b^0,w,c
  8336  001EBC  1002               	iorwf	(___fladd@b+1)^0,w,c
  8337  001EBE  1003               	iorwf	(___fladd@b+2)^0,w,c
  8338  001EC0  1004               	iorwf	(___fladd@b+3)^0,w,c
  8339  001EC2  A4D8               	btfss	status,2,c
  8340  001EC4  EF66  F00F         	goto	u3561
  8341  001EC8  EF69  F00F         	goto	u3560
  8342  001ECC                     u3561:
  8343  001ECC  0E01               	movlw	1
  8344  001ECE  EF6A  F00F         	goto	u3570
  8345  001ED2                     u3560:
  8346  001ED2  0E00               	movlw	0
  8347  001ED4                     u3570:
  8348  001ED4  6E10               	movwf	___fladd@grs^0,c
  8349  001ED6  0E00               	movlw	0
  8350  001ED8  6E01               	movwf	___fladd@b^0,c
  8351  001EDA  0E00               	movlw	0
  8352  001EDC  6E02               	movwf	(___fladd@b+1)^0,c
  8353  001EDE  0E00               	movlw	0
  8354  001EE0  6E03               	movwf	(___fladd@b+2)^0,c
  8355  001EE2  0E00               	movlw	0
  8356  001EE4  6E04               	movwf	(___fladd@b+3)^0,c
  8357  001EE6  C00E  F00F         	movff	___fladd@aexp,___fladd@bexp
  8358  001EEA  EF9D  F00F         	goto	l737
  8359  001EEE                     l739:
  8360  001EEE  A010               	btfss	___fladd@grs^0,0,c
  8361  001EF0  EF7C  F00F         	goto	u3581
  8362  001EF4  EF7E  F00F         	goto	u3580
  8363  001EF8                     u3581:
  8364  001EF8  EF84  F00F         	goto	l3382
  8365  001EFC                     u3580:
  8366  001EFC  90D8               	bcf	status,0,c
  8367  001EFE  3010               	rrcf	___fladd@grs^0,w,c
  8368  001F00  0901               	iorlw	1
  8369  001F02  6E10               	movwf	___fladd@grs^0,c
  8370  001F04  EF86  F00F         	goto	l3384
  8371  001F08                     l3382:
  8372  001F08  90D8               	bcf	status,0,c
  8373  001F0A  3210               	rrcf	___fladd@grs^0,f,c
  8374  001F0C                     l3384:
  8375  001F0C  A001               	btfss	___fladd@b^0,0,c
  8376  001F0E  EF8B  F00F         	goto	u3591
  8377  001F12  EF8D  F00F         	goto	u3590
  8378  001F16                     u3591:
  8379  001F16  EF8E  F00F         	goto	l3388
  8380  001F1A                     u3590:
  8381  001F1A  8E10               	bsf	___fladd@grs^0,7,c
  8382  001F1C                     l3388:
  8383  001F1C  3404               	rlcf	(___fladd@b+3)^0,w,c
  8384  001F1E  3204               	rrcf	(___fladd@b+3)^0,f,c
  8385  001F20  3203               	rrcf	(___fladd@b+2)^0,f,c
  8386  001F22  3202               	rrcf	(___fladd@b+1)^0,f,c
  8387  001F24  3201               	rrcf	___fladd@b^0,f,c
  8388  001F26  2A0F               	incf	___fladd@bexp^0,f,c
  8389  001F28                     l738:
  8390  001F28  500E               	movf	___fladd@aexp^0,w,c
  8391  001F2A  5C0F               	subwf	___fladd@bexp^0,w,c
  8392  001F2C  A0D8               	btfss	status,0,c
  8393  001F2E  EF9B  F00F         	goto	u3601
  8394  001F32  EF9D  F00F         	goto	u3600
  8395  001F36                     u3601:
  8396  001F36  EF77  F00F         	goto	l739
  8397  001F3A                     u3600:
  8398  001F3A                     l737:
  8399  001F3A  BC0D               	btfsc	___fladd@signs^0,6,c
  8400  001F3C  EFA2  F00F         	goto	u3611
  8401  001F40  EFA4  F00F         	goto	u3610
  8402  001F44                     u3611:
  8403  001F44  EFE4  F00F         	goto	l3416
  8404  001F48                     u3610:
  8405  001F48  500F               	movf	___fladd@bexp^0,w,c
  8406  001F4A  A4D8               	btfss	status,2,c
  8407  001F4C  EFAA  F00F         	goto	u3621
  8408  001F50  EFAC  F00F         	goto	u3620
  8409  001F54                     u3621:
  8410  001F54  EFB6  F00F         	goto	l3398
  8411  001F58                     u3620:
  8412  001F58  0E00               	movlw	0
  8413  001F5A  6E01               	movwf	?___fladd^0,c
  8414  001F5C  0E00               	movlw	0
  8415  001F5E  6E02               	movwf	(?___fladd+1)^0,c
  8416  001F60  0E00               	movlw	0
  8417  001F62  6E03               	movwf	(?___fladd+2)^0,c
  8418  001F64  0E00               	movlw	0
  8419  001F66  6E04               	movwf	(?___fladd+3)^0,c
  8420  001F68  EF05  F011         	goto	l746
  8421  001F6C                     l3398:
  8422  001F6C  5005               	movf	___fladd@a^0,w,c
  8423  001F6E  2601               	addwf	___fladd@b^0,f,c
  8424  001F70  5006               	movf	(___fladd@a+1)^0,w,c
  8425  001F72  2202               	addwfc	(___fladd@b+1)^0,f,c
  8426  001F74  5007               	movf	(___fladd@a+2)^0,w,c
  8427  001F76  2203               	addwfc	(___fladd@b+2)^0,f,c
  8428  001F78  5008               	movf	(___fladd@a+3)^0,w,c
  8429  001F7A  2204               	addwfc	(___fladd@b+3)^0,f,c
  8430  001F7C  A004               	btfss	(___fladd@b+3)^0,0,c
  8431  001F7E  EFC3  F00F         	goto	u3631
  8432  001F82  EFC5  F00F         	goto	u3630
  8433  001F86                     u3631:
  8434  001F86  EF71  F010         	goto	l3452
  8435  001F8A                     u3630:
  8436  001F8A  A010               	btfss	___fladd@grs^0,0,c
  8437  001F8C  EFCA  F00F         	goto	u3641
  8438  001F90  EFCC  F00F         	goto	u3640
  8439  001F94                     u3641:
  8440  001F94  EFD2  F00F         	goto	l3406
  8441  001F98                     u3640:
  8442  001F98  90D8               	bcf	status,0,c
  8443  001F9A  3010               	rrcf	___fladd@grs^0,w,c
  8444  001F9C  0901               	iorlw	1
  8445  001F9E  6E10               	movwf	___fladd@grs^0,c
  8446  001FA0  EFD4  F00F         	goto	l3408
  8447  001FA4                     l3406:
  8448  001FA4  90D8               	bcf	status,0,c
  8449  001FA6  3210               	rrcf	___fladd@grs^0,f,c
  8450  001FA8                     l3408:
  8451  001FA8  A001               	btfss	___fladd@b^0,0,c
  8452  001FAA  EFD9  F00F         	goto	u3651
  8453  001FAE  EFDB  F00F         	goto	u3650
  8454  001FB2                     u3651:
  8455  001FB2  EFDC  F00F         	goto	l3412
  8456  001FB6                     u3650:
  8457  001FB6  8E10               	bsf	___fladd@grs^0,7,c
  8458  001FB8                     l3412:
  8459  001FB8  3404               	rlcf	(___fladd@b+3)^0,w,c
  8460  001FBA  3204               	rrcf	(___fladd@b+3)^0,f,c
  8461  001FBC  3203               	rrcf	(___fladd@b+2)^0,f,c
  8462  001FBE  3202               	rrcf	(___fladd@b+1)^0,f,c
  8463  001FC0  3201               	rrcf	___fladd@b^0,f,c
  8464  001FC2  2A0F               	incf	___fladd@bexp^0,f,c
  8465  001FC4  EF71  F010         	goto	l3452
  8466  001FC8                     l3416:
  8467  001FC8  5005               	movf	___fladd@a^0,w,c
  8468  001FCA  5C01               	subwf	___fladd@b^0,w,c
  8469  001FCC  5006               	movf	(___fladd@a+1)^0,w,c
  8470  001FCE  5802               	subwfb	(___fladd@b+1)^0,w,c
  8471  001FD0  5007               	movf	(___fladd@a+2)^0,w,c
  8472  001FD2  5803               	subwfb	(___fladd@b+2)^0,w,c
  8473  001FD4  5004               	movf	(___fladd@b+3)^0,w,c
  8474  001FD6  0A80               	xorlw	128
  8475  001FD8  6E09               	movwf	??___fladd^0,c
  8476  001FDA  5008               	movf	(___fladd@a+3)^0,w,c
  8477  001FDC  0A80               	xorlw	128
  8478  001FDE  5809               	subwfb	??___fladd^0,w,c
  8479  001FE0  B0D8               	btfsc	status,0,c
  8480  001FE2  EFF5  F00F         	goto	u3661
  8481  001FE6  EFF7  F00F         	goto	u3660
  8482  001FEA                     u3661:
  8483  001FEA  EF22  F010         	goto	l3426
  8484  001FEE                     u3660:
  8485  001FEE  5001               	movf	___fladd@b^0,w,c
  8486  001FF0  5C05               	subwf	___fladd@a^0,w,c
  8487  001FF2  6E09               	movwf	??___fladd^0,c
  8488  001FF4  5002               	movf	(___fladd@b+1)^0,w,c
  8489  001FF6  5806               	subwfb	(___fladd@a+1)^0,w,c
  8490  001FF8  6E0A               	movwf	(??___fladd+1)^0,c
  8491  001FFA  5003               	movf	(___fladd@b+2)^0,w,c
  8492  001FFC  5807               	subwfb	(___fladd@a+2)^0,w,c
  8493  001FFE  6E0B               	movwf	(??___fladd+2)^0,c
  8494  002000  5004               	movf	(___fladd@b+3)^0,w,c
  8495  002002  5808               	subwfb	(___fladd@a+3)^0,w,c
  8496  002004  6E0C               	movwf	(??___fladd+3)^0,c
  8497  002006  0EFF               	movlw	255
  8498  002008  2409               	addwf	??___fladd^0,w,c
  8499  00200A  6E01               	movwf	___fladd@b^0,c
  8500  00200C  0EFF               	movlw	255
  8501  00200E  200A               	addwfc	(??___fladd+1)^0,w,c
  8502  002010  6E02               	movwf	(___fladd@b+1)^0,c
  8503  002012  0EFF               	movlw	255
  8504  002014  200B               	addwfc	(??___fladd+2)^0,w,c
  8505  002016  6E03               	movwf	(___fladd@b+2)^0,c
  8506  002018  0EFF               	movlw	255
  8507  00201A  200C               	addwfc	(??___fladd+3)^0,w,c
  8508  00201C  6E04               	movwf	(___fladd@b+3)^0,c
  8509  00201E  0E80               	movlw	128
  8510  002020  1A0D               	xorwf	___fladd@signs^0,f,c
  8511  002022  6C10               	negf	___fladd@grs^0,c
  8512  002024  5010               	movf	___fladd@grs^0,w,c
  8513  002026  A4D8               	btfss	status,2,c
  8514  002028  EF18  F010         	goto	u3671
  8515  00202C  EF1A  F010         	goto	u3670
  8516  002030                     u3671:
  8517  002030  EF2A  F010         	goto	l754
  8518  002034                     u3670:
  8519  002034  0E01               	movlw	1
  8520  002036  2601               	addwf	___fladd@b^0,f,c
  8521  002038  0E00               	movlw	0
  8522  00203A  2202               	addwfc	(___fladd@b+1)^0,f,c
  8523  00203C  2203               	addwfc	(___fladd@b+2)^0,f,c
  8524  00203E  2204               	addwfc	(___fladd@b+3)^0,f,c
  8525  002040  EF2A  F010         	goto	l754
  8526  002044                     l3426:
  8527  002044  5005               	movf	___fladd@a^0,w,c
  8528  002046  5E01               	subwf	___fladd@b^0,f,c
  8529  002048  5006               	movf	(___fladd@a+1)^0,w,c
  8530  00204A  5A02               	subwfb	(___fladd@b+1)^0,f,c
  8531  00204C  5007               	movf	(___fladd@a+2)^0,w,c
  8532  00204E  5A03               	subwfb	(___fladd@b+2)^0,f,c
  8533  002050  5008               	movf	(___fladd@a+3)^0,w,c
  8534  002052  5A04               	subwfb	(___fladd@b+3)^0,f,c
  8535  002054                     l754:
  8536  002054  5001               	movf	___fladd@b^0,w,c
  8537  002056  1002               	iorwf	(___fladd@b+1)^0,w,c
  8538  002058  1003               	iorwf	(___fladd@b+2)^0,w,c
  8539  00205A  1004               	iorwf	(___fladd@b+3)^0,w,c
  8540  00205C  A4D8               	btfss	status,2,c
  8541  00205E  EF33  F010         	goto	u3681
  8542  002062  EF35  F010         	goto	u3680
  8543  002066                     u3681:
  8544  002066  EF6A  F010         	goto	l3450
  8545  00206A                     u3680:
  8546  00206A  5010               	movf	___fladd@grs^0,w,c
  8547  00206C  A4D8               	btfss	status,2,c
  8548  00206E  EF3B  F010         	goto	u3691
  8549  002072  EF3D  F010         	goto	u3690
  8550  002076                     u3691:
  8551  002076  EF6A  F010         	goto	l3450
  8552  00207A                     u3690:
  8553  00207A  0E00               	movlw	0
  8554  00207C  6E01               	movwf	?___fladd^0,c
  8555  00207E  0E00               	movlw	0
  8556  002080  6E02               	movwf	(?___fladd+1)^0,c
  8557  002082  0E00               	movlw	0
  8558  002084  6E03               	movwf	(?___fladd+2)^0,c
  8559  002086  0E00               	movlw	0
  8560  002088  6E04               	movwf	(?___fladd+3)^0,c
  8561  00208A  EF05  F011         	goto	l746
  8562  00208E                     l3434:
  8563  00208E  90D8               	bcf	status,0,c
  8564  002090  3601               	rlcf	___fladd@b^0,f,c
  8565  002092  3602               	rlcf	(___fladd@b+1)^0,f,c
  8566  002094  3603               	rlcf	(___fladd@b+2)^0,f,c
  8567  002096  3604               	rlcf	(___fladd@b+3)^0,f,c
  8568  002098  AE10               	btfss	___fladd@grs^0,7,c
  8569  00209A  EF51  F010         	goto	u3701
  8570  00209E  EF53  F010         	goto	u3700
  8571  0020A2                     u3701:
  8572  0020A2  EF54  F010         	goto	l3440
  8573  0020A6                     u3700:
  8574  0020A6  8001               	bsf	___fladd@b^0,0,c
  8575  0020A8                     l3440:
  8576  0020A8  A010               	btfss	___fladd@grs^0,0,c
  8577  0020AA  EF59  F010         	goto	u3711
  8578  0020AE  EF5B  F010         	goto	u3710
  8579  0020B2                     u3711:
  8580  0020B2  EF5F  F010         	goto	l3444
  8581  0020B6                     u3710:
  8582  0020B6  80D8               	bsf	status,0,c
  8583  0020B8  3610               	rlcf	___fladd@grs^0,f,c
  8584  0020BA  EF61  F010         	goto	l3446
  8585  0020BE                     l3444:
  8586  0020BE  90D8               	bcf	status,0,c
  8587  0020C0  3610               	rlcf	___fladd@grs^0,f,c
  8588  0020C2                     l3446:
  8589  0020C2  500F               	movf	___fladd@bexp^0,w,c
  8590  0020C4  B4D8               	btfsc	status,2,c
  8591  0020C6  EF67  F010         	goto	u3721
  8592  0020CA  EF69  F010         	goto	u3720
  8593  0020CE                     u3721:
  8594  0020CE  EF6A  F010         	goto	l3450
  8595  0020D2                     u3720:
  8596  0020D2  060F               	decf	___fladd@bexp^0,f,c
  8597  0020D4                     l3450:
  8598  0020D4  AE03               	btfss	(___fladd@b+2)^0,7,c
  8599  0020D6  EF6F  F010         	goto	u3731
  8600  0020DA  EF71  F010         	goto	u3730
  8601  0020DE                     u3731:
  8602  0020DE  EF47  F010         	goto	l3434
  8603  0020E2                     u3730:
  8604  0020E2                     l3452:
  8605  0020E2  0E00               	movlw	0
  8606  0020E4  6E0E               	movwf	___fladd@aexp^0,c
  8607  0020E6  AE10               	btfss	___fladd@grs^0,7,c
  8608  0020E8  EF78  F010         	goto	u3741
  8609  0020EC  EF7A  F010         	goto	u3740
  8610  0020F0                     u3741:
  8611  0020F0  EF92  F010         	goto	l763
  8612  0020F4                     u3740:
  8613  0020F4  C010  F009         	movff	___fladd@grs,??___fladd
  8614  0020F8  0E7F               	movlw	127
  8615  0020FA  1609               	andwf	??___fladd^0,f,c
  8616  0020FC  B4D8               	btfsc	status,2,c
  8617  0020FE  EF83  F010         	goto	u3751
  8618  002102  EF85  F010         	goto	u3750
  8619  002106                     u3751:
  8620  002106  EF89  F010         	goto	l764
  8621  00210A                     u3750:
  8622  00210A                     l3458:
  8623  00210A  0E01               	movlw	1
  8624  00210C  6E0E               	movwf	___fladd@aexp^0,c
  8625  00210E  EF92  F010         	goto	l763
  8626  002112                     l764:
  8627  002112  A001               	btfss	___fladd@b^0,0,c
  8628  002114  EF8E  F010         	goto	u3761
  8629  002118  EF90  F010         	goto	u3760
  8630  00211C                     u3761:
  8631  00211C  EF92  F010         	goto	l763
  8632  002120                     u3760:
  8633  002120  EF85  F010         	goto	l3458
  8634  002124                     l763:
  8635  002124  500E               	movf	___fladd@aexp^0,w,c
  8636  002126  B4D8               	btfsc	status,2,c
  8637  002128  EF98  F010         	goto	u3771
  8638  00212C  EF9A  F010         	goto	u3770
  8639  002130                     u3771:
  8640  002130  EFC5  F010         	goto	l3470
  8641  002134                     u3770:
  8642  002134  0E01               	movlw	1
  8643  002136  2601               	addwf	___fladd@b^0,f,c
  8644  002138  0E00               	movlw	0
  8645  00213A  2202               	addwfc	(___fladd@b+1)^0,f,c
  8646  00213C  2203               	addwfc	(___fladd@b+2)^0,f,c
  8647  00213E  2204               	addwfc	(___fladd@b+3)^0,f,c
  8648  002140  A004               	btfss	(___fladd@b+3)^0,0,c
  8649  002142  EFA5  F010         	goto	u3781
  8650  002146  EFA7  F010         	goto	u3780
  8651  00214A                     u3781:
  8652  00214A  EFC5  F010         	goto	l3470
  8653  00214E                     u3780:
  8654  00214E  C001  F009         	movff	___fladd@b,??___fladd
  8655  002152  C002  F00A         	movff	___fladd@b+1,??___fladd+1
  8656  002156  C003  F00B         	movff	___fladd@b+2,??___fladd+2
  8657  00215A  C004  F00C         	movff	___fladd@b+3,??___fladd+3
  8658  00215E  340C               	rlcf	(??___fladd+3)^0,w,c
  8659  002160  320C               	rrcf	(??___fladd+3)^0,f,c
  8660  002162  320B               	rrcf	(??___fladd+2)^0,f,c
  8661  002164  320A               	rrcf	(??___fladd+1)^0,f,c
  8662  002166  3209               	rrcf	??___fladd^0,f,c
  8663  002168  C009  F001         	movff	??___fladd,___fladd@b
  8664  00216C  C00A  F002         	movff	??___fladd+1,___fladd@b+1
  8665  002170  C00B  F003         	movff	??___fladd+2,___fladd@b+2
  8666  002174  C00C  F004         	movff	??___fladd+3,___fladd@b+3
  8667  002178  280F               	incf	___fladd@bexp^0,w,c
  8668  00217A  B4D8               	btfsc	status,2,c
  8669  00217C  EFC2  F010         	goto	u3791
  8670  002180  EFC4  F010         	goto	u3790
  8671  002184                     u3791:
  8672  002184  EFC5  F010         	goto	l3470
  8673  002188                     u3790:
  8674  002188  2A0F               	incf	___fladd@bexp^0,f,c
  8675  00218A                     l3470:
  8676  00218A  280F               	incf	___fladd@bexp^0,w,c
  8677  00218C  B4D8               	btfsc	status,2,c
  8678  00218E  EFCB  F010         	goto	u3801
  8679  002192  EFCD  F010         	goto	u3800
  8680  002196                     u3801:
  8681  002196  EFD5  F010         	goto	l3474
  8682  00219A                     u3800:
  8683  00219A  500F               	movf	___fladd@bexp^0,w,c
  8684  00219C  A4D8               	btfss	status,2,c
  8685  00219E  EFD3  F010         	goto	u3811
  8686  0021A2  EFD5  F010         	goto	u3810
  8687  0021A6                     u3811:
  8688  0021A6  EFE7  F010         	goto	l3478
  8689  0021AA                     u3810:
  8690  0021AA                     l3474:
  8691  0021AA  0E00               	movlw	0
  8692  0021AC  6E01               	movwf	___fladd@b^0,c
  8693  0021AE  0E00               	movlw	0
  8694  0021B0  6E02               	movwf	(___fladd@b+1)^0,c
  8695  0021B2  0E00               	movlw	0
  8696  0021B4  6E03               	movwf	(___fladd@b+2)^0,c
  8697  0021B6  0E00               	movlw	0
  8698  0021B8  6E04               	movwf	(___fladd@b+3)^0,c
  8699  0021BA  500F               	movf	___fladd@bexp^0,w,c
  8700  0021BC  A4D8               	btfss	status,2,c
  8701  0021BE  EFE3  F010         	goto	u3821
  8702  0021C2  EFE5  F010         	goto	u3820
  8703  0021C6                     u3821:
  8704  0021C6  EFE7  F010         	goto	l3478
  8705  0021CA                     u3820:
  8706  0021CA  0E00               	movlw	0
  8707  0021CC  6E0D               	movwf	___fladd@signs^0,c
  8708  0021CE                     l3478:
  8709  0021CE  A00F               	btfss	___fladd@bexp^0,0,c
  8710  0021D0  EFEC  F010         	goto	u3831
  8711  0021D4  EFEE  F010         	goto	u3830
  8712  0021D8                     u3831:
  8713  0021D8  EFF1  F010         	goto	l3482
  8714  0021DC                     u3830:
  8715  0021DC  8E03               	bsf	(___fladd@b+2)^0,7,c
  8716  0021DE  EFF2  F010         	goto	l3484
  8717  0021E2                     l3482:
  8718  0021E2  9E03               	bcf	(___fladd@b+2)^0,7,c
  8719  0021E4                     l3484:
  8720  0021E4  90D8               	bcf	status,0,c
  8721  0021E6  300F               	rrcf	___fladd@bexp^0,w,c
  8722  0021E8  6E04               	movwf	(___fladd@b+3)^0,c
  8723  0021EA  AE0D               	btfss	___fladd@signs^0,7,c
  8724  0021EC  EFFA  F010         	goto	u3841
  8725  0021F0  EFFC  F010         	goto	u3840
  8726  0021F4                     u3841:
  8727  0021F4  EFFD  F010         	goto	l3490
  8728  0021F8                     u3840:
  8729  0021F8  8E04               	bsf	(___fladd@b+3)^0,7,c
  8730  0021FA                     l3490:
  8731  0021FA  C001  F001         	movff	___fladd@b,?___fladd
  8732  0021FE  C002  F002         	movff	___fladd@b+1,?___fladd+1
  8733  002202  C003  F003         	movff	___fladd@b+2,?___fladd+2
  8734  002206  C004  F004         	movff	___fladd@b+3,?___fladd+3
  8735  00220A                     l746:
  8736  00220A  0012               	return		;funcret
  8737  00220C                     __end_of___fladd:
  8738                           	callstack 0
  8739                           
  8740 ;; *************** function ___flneg *****************
  8741 ;; Defined at:
  8742 ;;		line 15 in file "/Applications/microchip/xc8/v2.31/pic/sources/c99/common/flneg.c"
  8743 ;; Parameters:    Size  Location     Type
  8744 ;;  f1              4    0[COMRAM] unsigned char 
  8745 ;; Auto vars:     Size  Location     Type
  8746 ;;		None
  8747 ;; Return value:  Size  Location     Type
  8748 ;;                  4    0[COMRAM] unsigned char 
  8749 ;; Registers used:
  8750 ;;		wreg, status,2, status,0
  8751 ;; Tracked objects:
  8752 ;;		On entry : 0/0
  8753 ;;		On exit  : 0/0
  8754 ;;		Unchanged: 0/0
  8755 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  8756 ;;      Params:         4       0       0       0       0       0       0       0       0
  8757 ;;      Locals:         0       0       0       0       0       0       0       0       0
  8758 ;;      Temps:          0       0       0       0       0       0       0       0       0
  8759 ;;      Totals:         4       0       0       0       0       0       0       0       0
  8760 ;;Total ram usage:        4 bytes
  8761 ;; Hardware stack levels used:    1
  8762 ;; This function calls:
  8763 ;;		Nothing
  8764 ;; This function is called by:
  8765 ;;		_efgtoa
  8766 ;; This function uses a non-reentrant model
  8767 ;;
  8768                           
  8769                           	psect	text31
  8770  004F2E                     __ptext31:
  8771                           	callstack 0
  8772  004F2E                     ___flneg:
  8773                           	callstack 25
  8774  004F2E  5001               	movf	___flneg@f1^0,w,c
  8775  004F30  1002               	iorwf	(___flneg@f1+1)^0,w,c
  8776  004F32  1003               	iorwf	(___flneg@f1+2)^0,w,c
  8777  004F34  1004               	iorwf	(___flneg@f1+3)^0,w,c
  8778  004F36  B4D8               	btfsc	status,2,c
  8779  004F38  EFA0  F027         	goto	u4741
  8780  004F3C  EFA2  F027         	goto	u4740
  8781  004F40                     u4741:
  8782  004F40  EFAA  F027         	goto	l4026
  8783  004F44                     u4740:
  8784  004F44  0E00               	movlw	0
  8785  004F46  1A01               	xorwf	___flneg@f1^0,f,c
  8786  004F48  0E00               	movlw	0
  8787  004F4A  1A02               	xorwf	(___flneg@f1+1)^0,f,c
  8788  004F4C  0E00               	movlw	0
  8789  004F4E  1A03               	xorwf	(___flneg@f1+2)^0,f,c
  8790  004F50  0E80               	movlw	128
  8791  004F52  1A04               	xorwf	(___flneg@f1+3)^0,f,c
  8792  004F54                     l4026:
  8793  004F54  C001  F001         	movff	___flneg@f1,?___flneg
  8794  004F58  C002  F002         	movff	___flneg@f1+1,?___flneg+1
  8795  004F5C  C003  F003         	movff	___flneg@f1+2,?___flneg+2
  8796  004F60  C004  F004         	movff	___flneg@f1+3,?___flneg+3
  8797  004F64  0012               	return		;funcret
  8798  004F66                     __end_of___flneg:
  8799                           	callstack 0
  8800                           
  8801 ;; *************** function ___flmul *****************
  8802 ;; Defined at:
  8803 ;;		line 8 in file "/Applications/microchip/xc8/v2.31/pic/sources/c99/common/sprcmul.c"
  8804 ;; Parameters:    Size  Location     Type
  8805 ;;  b               4   24[COMRAM] unsigned char 
  8806 ;;  a               4   28[COMRAM] unsigned char 
  8807 ;; Auto vars:     Size  Location     Type
  8808 ;;  prod            4   43[COMRAM] struct .
  8809 ;;  grs             4   37[COMRAM] unsigned long 
  8810 ;;  temp            2   47[COMRAM] struct .
  8811 ;;  bexp            1   42[COMRAM] unsigned char 
  8812 ;;  aexp            1   41[COMRAM] unsigned char 
  8813 ;;  sign            1   36[COMRAM] unsigned char 
  8814 ;; Return value:  Size  Location     Type
  8815 ;;                  4   24[COMRAM] unsigned char 
  8816 ;; Registers used:
  8817 ;;		wreg, status,2, status,0, prodl, prodh
  8818 ;; Tracked objects:
  8819 ;;		On entry : 0/0
  8820 ;;		On exit  : 0/0
  8821 ;;		Unchanged: 0/0
  8822 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  8823 ;;      Params:         8       0       0       0       0       0       0       0       0
  8824 ;;      Locals:        13       0       0       0       0       0       0       0       0
  8825 ;;      Temps:          4       0       0       0       0       0       0       0       0
  8826 ;;      Totals:        25       0       0       0       0       0       0       0       0
  8827 ;;Total ram usage:       25 bytes
  8828 ;; Hardware stack levels used:    1
  8829 ;; This function calls:
  8830 ;;		Nothing
  8831 ;; This function is called by:
  8832 ;;		_SensorLM35
  8833 ;;		_efgtoa
  8834 ;; This function uses a non-reentrant model
  8835 ;;
  8836                           
  8837                           	psect	text32
  8838  00267E                     __ptext32:
  8839                           	callstack 0
  8840  00267E                     ___flmul:
  8841                           	callstack 25
  8842  00267E  501C               	movf	(___flmul@b+3)^0,w,c
  8843  002680  0B80               	andlw	128
  8844  002682  6E25               	movwf	___flmul@sign^0,c
  8845  002684  501C               	movf	(___flmul@b+3)^0,w,c
  8846  002686  241C               	addwf	(___flmul@b+3)^0,w,c
  8847  002688  6E2B               	movwf	___flmul@bexp^0,c
  8848  00268A  AE1B               	btfss	(___flmul@b+2)^0,7,c
  8849  00268C  EF4A  F013         	goto	u4351
  8850  002690  EF4C  F013         	goto	u4350
  8851  002694                     u4351:
  8852  002694  EF4D  F013         	goto	l3774
  8853  002698                     u4350:
  8854  002698  802B               	bsf	___flmul@bexp^0,0,c
  8855  00269A                     l3774:
  8856  00269A  502B               	movf	___flmul@bexp^0,w,c
  8857  00269C  B4D8               	btfsc	status,2,c
  8858  00269E  EF53  F013         	goto	u4361
  8859  0026A2  EF55  F013         	goto	u4360
  8860  0026A6                     u4361:
  8861  0026A6  EF68  F013         	goto	l3782
  8862  0026AA                     u4360:
  8863  0026AA  282B               	incf	___flmul@bexp^0,w,c
  8864  0026AC  A4D8               	btfss	status,2,c
  8865  0026AE  EF5B  F013         	goto	u4371
  8866  0026B2  EF5D  F013         	goto	u4370
  8867  0026B6                     u4371:
  8868  0026B6  EF65  F013         	goto	l3780
  8869  0026BA                     u4370:
  8870  0026BA  0E00               	movlw	0
  8871  0026BC  6E19               	movwf	___flmul@b^0,c
  8872  0026BE  0E00               	movlw	0
  8873  0026C0  6E1A               	movwf	(___flmul@b+1)^0,c
  8874  0026C2  0E00               	movlw	0
  8875  0026C4  6E1B               	movwf	(___flmul@b+2)^0,c
  8876  0026C6  0E00               	movlw	0
  8877  0026C8  6E1C               	movwf	(___flmul@b+3)^0,c
  8878  0026CA                     l3780:
  8879  0026CA  8E1B               	bsf	(___flmul@b+2)^0,7,c
  8880  0026CC  EF70  F013         	goto	l3784
  8881  0026D0                     l3782:
  8882  0026D0  0E00               	movlw	0
  8883  0026D2  6E19               	movwf	___flmul@b^0,c
  8884  0026D4  0E00               	movlw	0
  8885  0026D6  6E1A               	movwf	(___flmul@b+1)^0,c
  8886  0026D8  0E00               	movlw	0
  8887  0026DA  6E1B               	movwf	(___flmul@b+2)^0,c
  8888  0026DC  0E00               	movlw	0
  8889  0026DE  6E1C               	movwf	(___flmul@b+3)^0,c
  8890  0026E0                     l3784:
  8891  0026E0  5020               	movf	(___flmul@a+3)^0,w,c
  8892  0026E2  0B80               	andlw	128
  8893  0026E4  1A25               	xorwf	___flmul@sign^0,f,c
  8894  0026E6  5020               	movf	(___flmul@a+3)^0,w,c
  8895  0026E8  2420               	addwf	(___flmul@a+3)^0,w,c
  8896  0026EA  6E2A               	movwf	___flmul@aexp^0,c
  8897  0026EC  AE1F               	btfss	(___flmul@a+2)^0,7,c
  8898  0026EE  EF7B  F013         	goto	u4381
  8899  0026F2  EF7D  F013         	goto	u4380
  8900  0026F6                     u4381:
  8901  0026F6  EF7E  F013         	goto	l3792
  8902  0026FA                     u4380:
  8903  0026FA  802A               	bsf	___flmul@aexp^0,0,c
  8904  0026FC                     l3792:
  8905  0026FC  502A               	movf	___flmul@aexp^0,w,c
  8906  0026FE  B4D8               	btfsc	status,2,c
  8907  002700  EF84  F013         	goto	u4391
  8908  002704  EF86  F013         	goto	u4390
  8909  002708                     u4391:
  8910  002708  EF99  F013         	goto	l3800
  8911  00270C                     u4390:
  8912  00270C  282A               	incf	___flmul@aexp^0,w,c
  8913  00270E  A4D8               	btfss	status,2,c
  8914  002710  EF8C  F013         	goto	u4401
  8915  002714  EF8E  F013         	goto	u4400
  8916  002718                     u4401:
  8917  002718  EF96  F013         	goto	l3798
  8918  00271C                     u4400:
  8919  00271C  0E00               	movlw	0
  8920  00271E  6E1D               	movwf	___flmul@a^0,c
  8921  002720  0E00               	movlw	0
  8922  002722  6E1E               	movwf	(___flmul@a+1)^0,c
  8923  002724  0E00               	movlw	0
  8924  002726  6E1F               	movwf	(___flmul@a+2)^0,c
  8925  002728  0E00               	movlw	0
  8926  00272A  6E20               	movwf	(___flmul@a+3)^0,c
  8927  00272C                     l3798:
  8928  00272C  8E1F               	bsf	(___flmul@a+2)^0,7,c
  8929  00272E  EFA1  F013         	goto	l823
  8930  002732                     l3800:
  8931  002732  0E00               	movlw	0
  8932  002734  6E1D               	movwf	___flmul@a^0,c
  8933  002736  0E00               	movlw	0
  8934  002738  6E1E               	movwf	(___flmul@a+1)^0,c
  8935  00273A  0E00               	movlw	0
  8936  00273C  6E1F               	movwf	(___flmul@a+2)^0,c
  8937  00273E  0E00               	movlw	0
  8938  002740  6E20               	movwf	(___flmul@a+3)^0,c
  8939  002742                     l823:
  8940  002742  502A               	movf	___flmul@aexp^0,w,c
  8941  002744  B4D8               	btfsc	status,2,c
  8942  002746  EFA7  F013         	goto	u4411
  8943  00274A  EFA9  F013         	goto	u4410
  8944  00274E                     u4411:
  8945  00274E  EFB1  F013         	goto	l3804
  8946  002752                     u4410:
  8947  002752  502B               	movf	___flmul@bexp^0,w,c
  8948  002754  A4D8               	btfss	status,2,c
  8949  002756  EFAF  F013         	goto	u4421
  8950  00275A  EFB1  F013         	goto	u4420
  8951  00275E                     u4421:
  8952  00275E  EFBB  F013         	goto	l3808
  8953  002762                     u4420:
  8954  002762                     l3804:
  8955  002762  0E00               	movlw	0
  8956  002764  6E19               	movwf	?___flmul^0,c
  8957  002766  0E00               	movlw	0
  8958  002768  6E1A               	movwf	(?___flmul+1)^0,c
  8959  00276A  0E00               	movlw	0
  8960  00276C  6E1B               	movwf	(?___flmul+2)^0,c
  8961  00276E  0E00               	movlw	0
  8962  002770  6E1C               	movwf	(?___flmul+3)^0,c
  8963  002772  EF53  F015         	goto	l827
  8964  002776                     l3808:
  8965  002776  501F               	movf	(___flmul@a+2)^0,w,c
  8966  002778  0219               	mulwf	___flmul@b^0,c
  8967  00277A  CFF3 F030          	movff	prodl,___flmul@temp
  8968  00277E  CFF4 F031          	movff	prodh,___flmul@temp+1
  8969  002782  5030               	movf	___flmul@temp^0,w,c
  8970  002784  6E26               	movwf	___flmul@grs^0,c
  8971  002786  6A27               	clrf	(___flmul@grs+1)^0,c
  8972  002788  6A28               	clrf	(___flmul@grs+2)^0,c
  8973  00278A  6A29               	clrf	(___flmul@grs+3)^0,c
  8974  00278C  5031               	movf	(___flmul@temp+1)^0,w,c
  8975  00278E  6E2C               	movwf	___flmul@prod^0,c
  8976  002790  6A2D               	clrf	(___flmul@prod+1)^0,c
  8977  002792  6A2E               	clrf	(___flmul@prod+2)^0,c
  8978  002794  6A2F               	clrf	(___flmul@prod+3)^0,c
  8979  002796  501E               	movf	(___flmul@a+1)^0,w,c
  8980  002798  021A               	mulwf	(___flmul@b+1)^0,c
  8981  00279A  CFF3 F030          	movff	prodl,___flmul@temp
  8982  00279E  CFF4 F031          	movff	prodh,___flmul@temp+1
  8983  0027A2  5030               	movf	___flmul@temp^0,w,c
  8984  0027A4  2626               	addwf	___flmul@grs^0,f,c
  8985  0027A6  0E00               	movlw	0
  8986  0027A8  2227               	addwfc	(___flmul@grs+1)^0,f,c
  8987  0027AA  2228               	addwfc	(___flmul@grs+2)^0,f,c
  8988  0027AC  2229               	addwfc	(___flmul@grs+3)^0,f,c
  8989  0027AE  5031               	movf	(___flmul@temp+1)^0,w,c
  8990  0027B0  262C               	addwf	___flmul@prod^0,f,c
  8991  0027B2  0E00               	movlw	0
  8992  0027B4  222D               	addwfc	(___flmul@prod+1)^0,f,c
  8993  0027B6  222E               	addwfc	(___flmul@prod+2)^0,f,c
  8994  0027B8  222F               	addwfc	(___flmul@prod+3)^0,f,c
  8995  0027BA  501D               	movf	___flmul@a^0,w,c
  8996  0027BC  021B               	mulwf	(___flmul@b+2)^0,c
  8997  0027BE  CFF3 F030          	movff	prodl,___flmul@temp
  8998  0027C2  CFF4 F031          	movff	prodh,___flmul@temp+1
  8999  0027C6  5030               	movf	___flmul@temp^0,w,c
  9000  0027C8  2626               	addwf	___flmul@grs^0,f,c
  9001  0027CA  0E00               	movlw	0
  9002  0027CC  2227               	addwfc	(___flmul@grs+1)^0,f,c
  9003  0027CE  2228               	addwfc	(___flmul@grs+2)^0,f,c
  9004  0027D0  2229               	addwfc	(___flmul@grs+3)^0,f,c
  9005  0027D2  5031               	movf	(___flmul@temp+1)^0,w,c
  9006  0027D4  262C               	addwf	___flmul@prod^0,f,c
  9007  0027D6  0E00               	movlw	0
  9008  0027D8  222D               	addwfc	(___flmul@prod+1)^0,f,c
  9009  0027DA  222E               	addwfc	(___flmul@prod+2)^0,f,c
  9010  0027DC  222F               	addwfc	(___flmul@prod+3)^0,f,c
  9011  0027DE  C028  F029         	movff	___flmul@grs+2,___flmul@grs+3
  9012  0027E2  C027  F028         	movff	___flmul@grs+1,___flmul@grs+2
  9013  0027E6  C026  F027         	movff	___flmul@grs,___flmul@grs+1
  9014  0027EA  6A26               	clrf	___flmul@grs^0,c
  9015  0027EC  501D               	movf	___flmul@a^0,w,c
  9016  0027EE  021A               	mulwf	(___flmul@b+1)^0,c
  9017  0027F0  CFF3 F030          	movff	prodl,___flmul@temp
  9018  0027F4  CFF4 F031          	movff	prodh,___flmul@temp+1
  9019  0027F8  5030               	movf	___flmul@temp^0,w,c
  9020  0027FA  2626               	addwf	___flmul@grs^0,f,c
  9021  0027FC  5031               	movf	(___flmul@temp+1)^0,w,c
  9022  0027FE  2227               	addwfc	(___flmul@grs+1)^0,f,c
  9023  002800  0E00               	movlw	0
  9024  002802  2228               	addwfc	(___flmul@grs+2)^0,f,c
  9025  002804  0E00               	movlw	0
  9026  002806  2229               	addwfc	(___flmul@grs+3)^0,f,c
  9027  002808  501E               	movf	(___flmul@a+1)^0,w,c
  9028  00280A  0219               	mulwf	___flmul@b^0,c
  9029  00280C  CFF3 F030          	movff	prodl,___flmul@temp
  9030  002810  CFF4 F031          	movff	prodh,___flmul@temp+1
  9031  002814  5030               	movf	___flmul@temp^0,w,c
  9032  002816  2626               	addwf	___flmul@grs^0,f,c
  9033  002818  5031               	movf	(___flmul@temp+1)^0,w,c
  9034  00281A  2227               	addwfc	(___flmul@grs+1)^0,f,c
  9035  00281C  0E00               	movlw	0
  9036  00281E  2228               	addwfc	(___flmul@grs+2)^0,f,c
  9037  002820  0E00               	movlw	0
  9038  002822  2229               	addwfc	(___flmul@grs+3)^0,f,c
  9039  002824  C028  F029         	movff	___flmul@grs+2,___flmul@grs+3
  9040  002828  C027  F028         	movff	___flmul@grs+1,___flmul@grs+2
  9041  00282C  C026  F027         	movff	___flmul@grs,___flmul@grs+1
  9042  002830  6A26               	clrf	___flmul@grs^0,c
  9043  002832  501D               	movf	___flmul@a^0,w,c
  9044  002834  0219               	mulwf	___flmul@b^0,c
  9045  002836  CFF3 F030          	movff	prodl,___flmul@temp
  9046  00283A  CFF4 F031          	movff	prodh,___flmul@temp+1
  9047  00283E  5030               	movf	___flmul@temp^0,w,c
  9048  002840  2626               	addwf	___flmul@grs^0,f,c
  9049  002842  5031               	movf	(___flmul@temp+1)^0,w,c
  9050  002844  2227               	addwfc	(___flmul@grs+1)^0,f,c
  9051  002846  0E00               	movlw	0
  9052  002848  2228               	addwfc	(___flmul@grs+2)^0,f,c
  9053  00284A  0E00               	movlw	0
  9054  00284C  2229               	addwfc	(___flmul@grs+3)^0,f,c
  9055  00284E  501F               	movf	(___flmul@a+2)^0,w,c
  9056  002850  021A               	mulwf	(___flmul@b+1)^0,c
  9057  002852  CFF3 F030          	movff	prodl,___flmul@temp
  9058  002856  CFF4 F031          	movff	prodh,___flmul@temp+1
  9059  00285A  5030               	movf	___flmul@temp^0,w,c
  9060  00285C  262C               	addwf	___flmul@prod^0,f,c
  9061  00285E  5031               	movf	(___flmul@temp+1)^0,w,c
  9062  002860  222D               	addwfc	(___flmul@prod+1)^0,f,c
  9063  002862  0E00               	movlw	0
  9064  002864  222E               	addwfc	(___flmul@prod+2)^0,f,c
  9065  002866  0E00               	movlw	0
  9066  002868  222F               	addwfc	(___flmul@prod+3)^0,f,c
  9067  00286A  501E               	movf	(___flmul@a+1)^0,w,c
  9068  00286C  021B               	mulwf	(___flmul@b+2)^0,c
  9069  00286E  CFF3 F030          	movff	prodl,___flmul@temp
  9070  002872  CFF4 F031          	movff	prodh,___flmul@temp+1
  9071  002876  5030               	movf	___flmul@temp^0,w,c
  9072  002878  262C               	addwf	___flmul@prod^0,f,c
  9073  00287A  5031               	movf	(___flmul@temp+1)^0,w,c
  9074  00287C  222D               	addwfc	(___flmul@prod+1)^0,f,c
  9075  00287E  0E00               	movlw	0
  9076  002880  222E               	addwfc	(___flmul@prod+2)^0,f,c
  9077  002882  0E00               	movlw	0
  9078  002884  222F               	addwfc	(___flmul@prod+3)^0,f,c
  9079  002886  501F               	movf	(___flmul@a+2)^0,w,c
  9080  002888  021B               	mulwf	(___flmul@b+2)^0,c
  9081  00288A  CFF3 F030          	movff	prodl,___flmul@temp
  9082  00288E  CFF4 F031          	movff	prodh,___flmul@temp+1
  9083  002892  5030               	movf	___flmul@temp^0,w,c
  9084  002894  6E21               	movwf	??___flmul^0,c
  9085  002896  5031               	movf	(___flmul@temp+1)^0,w,c
  9086  002898  6E22               	movwf	(??___flmul+1)^0,c
  9087  00289A  6A23               	clrf	(??___flmul+2)^0,c
  9088  00289C  6A24               	clrf	(??___flmul+3)^0,c
  9089  00289E  C023  F024         	movff	??___flmul+2,??___flmul+3
  9090  0028A2  C022  F023         	movff	??___flmul+1,??___flmul+2
  9091  0028A6  C021  F022         	movff	??___flmul,??___flmul+1
  9092  0028AA  6A21               	clrf	??___flmul^0,c
  9093  0028AC  5021               	movf	??___flmul^0,w,c
  9094  0028AE  262C               	addwf	___flmul@prod^0,f,c
  9095  0028B0  5022               	movf	(??___flmul+1)^0,w,c
  9096  0028B2  222D               	addwfc	(___flmul@prod+1)^0,f,c
  9097  0028B4  5023               	movf	(??___flmul+2)^0,w,c
  9098  0028B6  222E               	addwfc	(___flmul@prod+2)^0,f,c
  9099  0028B8  5024               	movf	(??___flmul+3)^0,w,c
  9100  0028BA  222F               	addwfc	(___flmul@prod+3)^0,f,c
  9101  0028BC  C026  F021         	movff	___flmul@grs,??___flmul
  9102  0028C0  C027  F022         	movff	___flmul@grs+1,??___flmul+1
  9103  0028C4  C028  F023         	movff	___flmul@grs+2,??___flmul+2
  9104  0028C8  C029  F024         	movff	___flmul@grs+3,??___flmul+3
  9105  0028CC  0E19               	movlw	25
  9106  0028CE  EF6E  F014         	goto	u4430
  9107  0028D2                     u4435:
  9108  0028D2  90D8               	bcf	status,0,c
  9109  0028D4  3224               	rrcf	(??___flmul+3)^0,f,c
  9110  0028D6  3223               	rrcf	(??___flmul+2)^0,f,c
  9111  0028D8  3222               	rrcf	(??___flmul+1)^0,f,c
  9112  0028DA  3221               	rrcf	??___flmul^0,f,c
  9113  0028DC                     u4430:
  9114  0028DC  2EE8               	decfsz	wreg,f,c
  9115  0028DE  EF69  F014         	goto	u4435
  9116  0028E2  5021               	movf	??___flmul^0,w,c
  9117  0028E4  262C               	addwf	___flmul@prod^0,f,c
  9118  0028E6  5022               	movf	(??___flmul+1)^0,w,c
  9119  0028E8  222D               	addwfc	(___flmul@prod+1)^0,f,c
  9120  0028EA  5023               	movf	(??___flmul+2)^0,w,c
  9121  0028EC  222E               	addwfc	(___flmul@prod+2)^0,f,c
  9122  0028EE  5024               	movf	(??___flmul+3)^0,w,c
  9123  0028F0  222F               	addwfc	(___flmul@prod+3)^0,f,c
  9124  0028F2  C028  F029         	movff	___flmul@grs+2,___flmul@grs+3
  9125  0028F6  C027  F028         	movff	___flmul@grs+1,___flmul@grs+2
  9126  0028FA  C026  F027         	movff	___flmul@grs,___flmul@grs+1
  9127  0028FE  6A26               	clrf	___flmul@grs^0,c
  9128  002900  502A               	movf	___flmul@aexp^0,w,c
  9129  002902  C02B  F021         	movff	___flmul@bexp,??___flmul
  9130  002906  6A22               	clrf	(??___flmul+1)^0,c
  9131  002908  2621               	addwf	??___flmul^0,f,c
  9132  00290A  0E00               	movlw	0
  9133  00290C  2222               	addwfc	(??___flmul+1)^0,f,c
  9134  00290E  0E82               	movlw	130
  9135  002910  2421               	addwf	??___flmul^0,w,c
  9136  002912  6E30               	movwf	___flmul@temp^0,c
  9137  002914  0EFF               	movlw	255
  9138  002916  2022               	addwfc	(??___flmul+1)^0,w,c
  9139  002918  6E31               	movwf	(___flmul@temp+1)^0,c
  9140  00291A  EFA4  F014         	goto	l3856
  9141  00291E                     l3850:
  9142  00291E  90D8               	bcf	status,0,c
  9143  002920  362C               	rlcf	___flmul@prod^0,f,c
  9144  002922  362D               	rlcf	(___flmul@prod+1)^0,f,c
  9145  002924  362E               	rlcf	(___flmul@prod+2)^0,f,c
  9146  002926  362F               	rlcf	(___flmul@prod+3)^0,f,c
  9147  002928  AE29               	btfss	(___flmul@grs+3)^0,7,c
  9148  00292A  EF99  F014         	goto	u4441
  9149  00292E  EF9B  F014         	goto	u4440
  9150  002932                     u4441:
  9151  002932  EF9C  F014         	goto	l830
  9152  002936                     u4440:
  9153  002936  802C               	bsf	___flmul@prod^0,0,c
  9154  002938                     l830:
  9155  002938  90D8               	bcf	status,0,c
  9156  00293A  3626               	rlcf	___flmul@grs^0,f,c
  9157  00293C  3627               	rlcf	(___flmul@grs+1)^0,f,c
  9158  00293E  3628               	rlcf	(___flmul@grs+2)^0,f,c
  9159  002940  3629               	rlcf	(___flmul@grs+3)^0,f,c
  9160  002942  0630               	decf	___flmul@temp^0,f,c
  9161  002944  A0D8               	btfss	status,0,c
  9162  002946  0631               	decf	(___flmul@temp+1)^0,f,c
  9163  002948                     l3856:
  9164  002948  AE2E               	btfss	(___flmul@prod+2)^0,7,c
  9165  00294A  EFA9  F014         	goto	u4451
  9166  00294E  EFAB  F014         	goto	u4450
  9167  002952                     u4451:
  9168  002952  EF8F  F014         	goto	l3850
  9169  002956                     u4450:
  9170  002956  0E00               	movlw	0
  9171  002958  6E2A               	movwf	___flmul@aexp^0,c
  9172  00295A  AE29               	btfss	(___flmul@grs+3)^0,7,c
  9173  00295C  EFB2  F014         	goto	u4461
  9174  002960  EFB4  F014         	goto	u4460
  9175  002964                     u4461:
  9176  002964  EFD8  F014         	goto	l832
  9177  002968                     u4460:
  9178  002968  0EFF               	movlw	255
  9179  00296A  1426               	andwf	___flmul@grs^0,w,c
  9180  00296C  6E21               	movwf	??___flmul^0,c
  9181  00296E  0EFF               	movlw	255
  9182  002970  1427               	andwf	(___flmul@grs+1)^0,w,c
  9183  002972  6E22               	movwf	(??___flmul+1)^0,c
  9184  002974  0EFF               	movlw	255
  9185  002976  1428               	andwf	(___flmul@grs+2)^0,w,c
  9186  002978  6E23               	movwf	(??___flmul+2)^0,c
  9187  00297A  0E7F               	movlw	127
  9188  00297C  1429               	andwf	(___flmul@grs+3)^0,w,c
  9189  00297E  6E24               	movwf	(??___flmul+3)^0,c
  9190  002980  5021               	movf	??___flmul^0,w,c
  9191  002982  1022               	iorwf	(??___flmul+1)^0,w,c
  9192  002984  1023               	iorwf	(??___flmul+2)^0,w,c
  9193  002986  1024               	iorwf	(??___flmul+3)^0,w,c
  9194  002988  B4D8               	btfsc	status,2,c
  9195  00298A  EFC9  F014         	goto	u4471
  9196  00298E  EFCB  F014         	goto	u4470
  9197  002992                     u4471:
  9198  002992  EFCF  F014         	goto	l833
  9199  002996                     u4470:
  9200  002996                     l3864:
  9201  002996  0E01               	movlw	1
  9202  002998  6E2A               	movwf	___flmul@aexp^0,c
  9203  00299A  EFD8  F014         	goto	l832
  9204  00299E                     l833:
  9205  00299E  A02C               	btfss	___flmul@prod^0,0,c
  9206  0029A0  EFD4  F014         	goto	u4481
  9207  0029A4  EFD6  F014         	goto	u4480
  9208  0029A8                     u4481:
  9209  0029A8  EFD8  F014         	goto	l832
  9210  0029AC                     u4480:
  9211  0029AC  EFCB  F014         	goto	l3864
  9212  0029B0                     l832:
  9213  0029B0  502A               	movf	___flmul@aexp^0,w,c
  9214  0029B2  B4D8               	btfsc	status,2,c
  9215  0029B4  EFDE  F014         	goto	u4491
  9216  0029B8  EFE0  F014         	goto	u4490
  9217  0029BC                     u4491:
  9218  0029BC  EF04  F015         	goto	l3876
  9219  0029C0                     u4490:
  9220  0029C0  0E01               	movlw	1
  9221  0029C2  262C               	addwf	___flmul@prod^0,f,c
  9222  0029C4  0E00               	movlw	0
  9223  0029C6  222D               	addwfc	(___flmul@prod+1)^0,f,c
  9224  0029C8  222E               	addwfc	(___flmul@prod+2)^0,f,c
  9225  0029CA  222F               	addwfc	(___flmul@prod+3)^0,f,c
  9226  0029CC  A02F               	btfss	(___flmul@prod+3)^0,0,c
  9227  0029CE  EFEB  F014         	goto	u4501
  9228  0029D2  EFED  F014         	goto	u4500
  9229  0029D6                     u4501:
  9230  0029D6  EF04  F015         	goto	l3876
  9231  0029DA                     u4500:
  9232  0029DA  C02C  F021         	movff	___flmul@prod,??___flmul
  9233  0029DE  C02D  F022         	movff	___flmul@prod+1,??___flmul+1
  9234  0029E2  C02E  F023         	movff	___flmul@prod+2,??___flmul+2
  9235  0029E6  C02F  F024         	movff	___flmul@prod+3,??___flmul+3
  9236  0029EA  3424               	rlcf	(??___flmul+3)^0,w,c
  9237  0029EC  3224               	rrcf	(??___flmul+3)^0,f,c
  9238  0029EE  3223               	rrcf	(??___flmul+2)^0,f,c
  9239  0029F0  3222               	rrcf	(??___flmul+1)^0,f,c
  9240  0029F2  3221               	rrcf	??___flmul^0,f,c
  9241  0029F4  C021  F02C         	movff	??___flmul,___flmul@prod
  9242  0029F8  C022  F02D         	movff	??___flmul+1,___flmul@prod+1
  9243  0029FC  C023  F02E         	movff	??___flmul+2,___flmul@prod+2
  9244  002A00  C024  F02F         	movff	??___flmul+3,___flmul@prod+3
  9245  002A04  4A30               	infsnz	___flmul@temp^0,f,c
  9246  002A06  2A31               	incf	(___flmul@temp+1)^0,f,c
  9247  002A08                     l3876:
  9248  002A08  BE31               	btfsc	(___flmul@temp+1)^0,7,c
  9249  002A0A  EF0F  F015         	goto	u4511
  9250  002A0E  5031               	movf	(___flmul@temp+1)^0,w,c
  9251  002A10  E108               	bnz	u4510
  9252  002A12  2830               	incf	___flmul@temp^0,w,c
  9253  002A14  A0D8               	btfss	status,0,c
  9254  002A16  EF0F  F015         	goto	u4511
  9255  002A1A  EF11  F015         	goto	u4510
  9256  002A1E                     u4511:
  9257  002A1E  EF1B  F015         	goto	l3880
  9258  002A22                     u4510:
  9259  002A22  0E00               	movlw	0
  9260  002A24  6E2C               	movwf	___flmul@prod^0,c
  9261  002A26  0E00               	movlw	0
  9262  002A28  6E2D               	movwf	(___flmul@prod+1)^0,c
  9263  002A2A  0E80               	movlw	128
  9264  002A2C  6E2E               	movwf	(___flmul@prod+2)^0,c
  9265  002A2E  0E7F               	movlw	127
  9266  002A30  6E2F               	movwf	(___flmul@prod+3)^0,c
  9267  002A32  EF49  F015         	goto	l3892
  9268  002A36                     l3880:
  9269  002A36  BE31               	btfsc	(___flmul@temp+1)^0,7,c
  9270  002A38  EF28  F015         	goto	u4520
  9271  002A3C  5031               	movf	(___flmul@temp+1)^0,w,c
  9272  002A3E  E106               	bnz	u4521
  9273  002A40  0430               	decf	___flmul@temp^0,w,c
  9274  002A42  B0D8               	btfsc	status,0,c
  9275  002A44  EF26  F015         	goto	u4521
  9276  002A48  EF28  F015         	goto	u4520
  9277  002A4C                     u4521:
  9278  002A4C  EF34  F015         	goto	l840
  9279  002A50                     u4520:
  9280  002A50  0E00               	movlw	0
  9281  002A52  6E2C               	movwf	___flmul@prod^0,c
  9282  002A54  0E00               	movlw	0
  9283  002A56  6E2D               	movwf	(___flmul@prod+1)^0,c
  9284  002A58  0E00               	movlw	0
  9285  002A5A  6E2E               	movwf	(___flmul@prod+2)^0,c
  9286  002A5C  0E00               	movlw	0
  9287  002A5E  6E2F               	movwf	(___flmul@prod+3)^0,c
  9288  002A60  0E00               	movlw	0
  9289  002A62  6E25               	movwf	___flmul@sign^0,c
  9290  002A64  EF49  F015         	goto	l3892
  9291  002A68                     l840:
  9292  002A68  C030  F02B         	movff	___flmul@temp,___flmul@bexp
  9293  002A6C  0EFF               	movlw	255
  9294  002A6E  162C               	andwf	___flmul@prod^0,f,c
  9295  002A70  0EFF               	movlw	255
  9296  002A72  162D               	andwf	(___flmul@prod+1)^0,f,c
  9297  002A74  0E7F               	movlw	127
  9298  002A76  162E               	andwf	(___flmul@prod+2)^0,f,c
  9299  002A78  0E00               	movlw	0
  9300  002A7A  162F               	andwf	(___flmul@prod+3)^0,f,c
  9301  002A7C  A02B               	btfss	___flmul@bexp^0,0,c
  9302  002A7E  EF43  F015         	goto	u4531
  9303  002A82  EF45  F015         	goto	u4530
  9304  002A86                     u4531:
  9305  002A86  EF46  F015         	goto	l3890
  9306  002A8A                     u4530:
  9307  002A8A  8E2E               	bsf	(___flmul@prod+2)^0,7,c
  9308  002A8C                     l3890:
  9309  002A8C  90D8               	bcf	status,0,c
  9310  002A8E  302B               	rrcf	___flmul@bexp^0,w,c
  9311  002A90  6E2F               	movwf	(___flmul@prod+3)^0,c
  9312  002A92                     l3892:
  9313  002A92  5025               	movf	___flmul@sign^0,w,c
  9314  002A94  122F               	iorwf	(___flmul@prod+3)^0,f,c
  9315  002A96  C02C  F019         	movff	___flmul@prod,?___flmul
  9316  002A9A  C02D  F01A         	movff	___flmul@prod+1,?___flmul+1
  9317  002A9E  C02E  F01B         	movff	___flmul@prod+2,?___flmul+2
  9318  002AA2  C02F  F01C         	movff	___flmul@prod+3,?___flmul+3
  9319  002AA6                     l827:
  9320  002AA6  0012               	return		;funcret
  9321  002AA8                     __end_of___flmul:
  9322                           	callstack 0
  9323                           
  9324 ;; *************** function ___flge *****************
  9325 ;; Defined at:
  9326 ;;		line 4 in file "/Applications/microchip/xc8/v2.31/pic/sources/c99/common/flge.c"
  9327 ;; Parameters:    Size  Location     Type
  9328 ;;  ff1             4   57[COMRAM] unsigned char 
  9329 ;;  ff2             4   61[COMRAM] unsigned char 
  9330 ;; Auto vars:     Size  Location     Type
  9331 ;;		None
  9332 ;; Return value:  Size  Location     Type
  9333 ;;		None               void
  9334 ;; Registers used:
  9335 ;;		wreg, status,2, status,0
  9336 ;; Tracked objects:
  9337 ;;		On entry : 0/0
  9338 ;;		On exit  : 0/0
  9339 ;;		Unchanged: 0/0
  9340 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  9341 ;;      Params:         8       0       0       0       0       0       0       0       0
  9342 ;;      Locals:         0       0       0       0       0       0       0       0       0
  9343 ;;      Temps:          4       0       0       0       0       0       0       0       0
  9344 ;;      Totals:        12       0       0       0       0       0       0       0       0
  9345 ;;Total ram usage:       12 bytes
  9346 ;; Hardware stack levels used:    1
  9347 ;; This function calls:
  9348 ;;		Nothing
  9349 ;; This function is called by:
  9350 ;;		_SensorLM35
  9351 ;;		_efgtoa
  9352 ;; This function uses a non-reentrant model
  9353 ;;
  9354                           
  9355                           	psect	text33
  9356  0041D0                     __ptext33:
  9357                           	callstack 0
  9358  0041D0                     ___flge:
  9359                           	callstack 25
  9360  0041D0  0E00               	movlw	0
  9361  0041D2  143A               	andwf	___flge@ff1^0,w,c
  9362  0041D4  6E42               	movwf	??___flge^0,c
  9363  0041D6  0E00               	movlw	0
  9364  0041D8  143B               	andwf	(___flge@ff1+1)^0,w,c
  9365  0041DA  6E43               	movwf	(??___flge+1)^0,c
  9366  0041DC  0E80               	movlw	128
  9367  0041DE  143C               	andwf	(___flge@ff1+2)^0,w,c
  9368  0041E0  6E44               	movwf	(??___flge+2)^0,c
  9369  0041E2  0E7F               	movlw	127
  9370  0041E4  143D               	andwf	(___flge@ff1+3)^0,w,c
  9371  0041E6  6E45               	movwf	(??___flge+3)^0,c
  9372  0041E8  5042               	movf	??___flge^0,w,c
  9373  0041EA  1043               	iorwf	(??___flge+1)^0,w,c
  9374  0041EC  1044               	iorwf	(??___flge+2)^0,w,c
  9375  0041EE  1045               	iorwf	(??___flge+3)^0,w,c
  9376  0041F0  A4D8               	btfss	status,2,c
  9377  0041F2  EFFD  F020         	goto	u4691
  9378  0041F6  EFFF  F020         	goto	u4690
  9379  0041FA                     u4691:
  9380  0041FA  EF07  F021         	goto	l4004
  9381  0041FE                     u4690:
  9382  0041FE  0E00               	movlw	0
  9383  004200  6E3A               	movwf	___flge@ff1^0,c
  9384  004202  0E00               	movlw	0
  9385  004204  6E3B               	movwf	(___flge@ff1+1)^0,c
  9386  004206  0E00               	movlw	0
  9387  004208  6E3C               	movwf	(___flge@ff1+2)^0,c
  9388  00420A  0E00               	movlw	0
  9389  00420C  6E3D               	movwf	(___flge@ff1+3)^0,c
  9390  00420E                     l4004:
  9391  00420E  0E00               	movlw	0
  9392  004210  143E               	andwf	___flge@ff2^0,w,c
  9393  004212  6E42               	movwf	??___flge^0,c
  9394  004214  0E00               	movlw	0
  9395  004216  143F               	andwf	(___flge@ff2+1)^0,w,c
  9396  004218  6E43               	movwf	(??___flge+1)^0,c
  9397  00421A  0E80               	movlw	128
  9398  00421C  1440               	andwf	(___flge@ff2+2)^0,w,c
  9399  00421E  6E44               	movwf	(??___flge+2)^0,c
  9400  004220  0E7F               	movlw	127
  9401  004222  1441               	andwf	(___flge@ff2+3)^0,w,c
  9402  004224  6E45               	movwf	(??___flge+3)^0,c
  9403  004226  5042               	movf	??___flge^0,w,c
  9404  004228  1043               	iorwf	(??___flge+1)^0,w,c
  9405  00422A  1044               	iorwf	(??___flge+2)^0,w,c
  9406  00422C  1045               	iorwf	(??___flge+3)^0,w,c
  9407  00422E  A4D8               	btfss	status,2,c
  9408  004230  EF1C  F021         	goto	u4701
  9409  004234  EF1E  F021         	goto	u4700
  9410  004238                     u4701:
  9411  004238  EF26  F021         	goto	l4008
  9412  00423C                     u4700:
  9413  00423C  0E00               	movlw	0
  9414  00423E  6E3E               	movwf	___flge@ff2^0,c
  9415  004240  0E00               	movlw	0
  9416  004242  6E3F               	movwf	(___flge@ff2+1)^0,c
  9417  004244  0E00               	movlw	0
  9418  004246  6E40               	movwf	(___flge@ff2+2)^0,c
  9419  004248  0E00               	movlw	0
  9420  00424A  6E41               	movwf	(___flge@ff2+3)^0,c
  9421  00424C                     l4008:
  9422  00424C  AE3D               	btfss	(___flge@ff1+3)^0,7,c
  9423  00424E  EF2B  F021         	goto	u4711
  9424  004252  EF2D  F021         	goto	u4710
  9425  004256                     u4711:
  9426  004256  EF36  F021         	goto	l4012
  9427  00425A                     u4710:
  9428  00425A  6C3A               	negf	___flge@ff1^0,c
  9429  00425C  1E3B               	comf	(___flge@ff1+1)^0,f,c
  9430  00425E  B0D8               	btfsc	status,0,c
  9431  004260  2A3B               	incf	(___flge@ff1+1)^0,f,c
  9432  004262  1E3C               	comf	(___flge@ff1+2)^0,f,c
  9433  004264  B0D8               	btfsc	status,0,c
  9434  004266  2A3C               	incf	(___flge@ff1+2)^0,f,c
  9435  004268  0E80               	movlw	128
  9436  00426A  563D               	subfwb	(___flge@ff1+3)^0,f,c
  9437  00426C                     l4012:
  9438  00426C  AE41               	btfss	(___flge@ff2+3)^0,7,c
  9439  00426E  EF3B  F021         	goto	u4721
  9440  004272  EF3D  F021         	goto	u4720
  9441  004276                     u4721:
  9442  004276  EF46  F021         	goto	l474
  9443  00427A                     u4720:
  9444  00427A  6C3E               	negf	___flge@ff2^0,c
  9445  00427C  1E3F               	comf	(___flge@ff2+1)^0,f,c
  9446  00427E  B0D8               	btfsc	status,0,c
  9447  004280  2A3F               	incf	(___flge@ff2+1)^0,f,c
  9448  004282  1E40               	comf	(___flge@ff2+2)^0,f,c
  9449  004284  B0D8               	btfsc	status,0,c
  9450  004286  2A40               	incf	(___flge@ff2+2)^0,f,c
  9451  004288  0E80               	movlw	128
  9452  00428A  5641               	subfwb	(___flge@ff2+3)^0,f,c
  9453  00428C                     l474:
  9454  00428C  0E00               	movlw	0
  9455  00428E  1A3A               	xorwf	___flge@ff1^0,f,c
  9456  004290  0E00               	movlw	0
  9457  004292  1A3B               	xorwf	(___flge@ff1+1)^0,f,c
  9458  004294  0E00               	movlw	0
  9459  004296  1A3C               	xorwf	(___flge@ff1+2)^0,f,c
  9460  004298  0E80               	movlw	128
  9461  00429A  1A3D               	xorwf	(___flge@ff1+3)^0,f,c
  9462  00429C  0E00               	movlw	0
  9463  00429E  1A3E               	xorwf	___flge@ff2^0,f,c
  9464  0042A0  0E00               	movlw	0
  9465  0042A2  1A3F               	xorwf	(___flge@ff2+1)^0,f,c
  9466  0042A4  0E00               	movlw	0
  9467  0042A6  1A40               	xorwf	(___flge@ff2+2)^0,f,c
  9468  0042A8  0E80               	movlw	128
  9469  0042AA  1A41               	xorwf	(___flge@ff2+3)^0,f,c
  9470  0042AC  503E               	movf	___flge@ff2^0,w,c
  9471  0042AE  5C3A               	subwf	___flge@ff1^0,w,c
  9472  0042B0  503F               	movf	(___flge@ff2+1)^0,w,c
  9473  0042B2  583B               	subwfb	(___flge@ff1+1)^0,w,c
  9474  0042B4  5040               	movf	(___flge@ff2+2)^0,w,c
  9475  0042B6  583C               	subwfb	(___flge@ff1+2)^0,w,c
  9476  0042B8  5041               	movf	(___flge@ff2+3)^0,w,c
  9477  0042BA  583D               	subwfb	(___flge@ff1+3)^0,w,c
  9478  0042BC  B0D8               	btfsc	status,0,c
  9479  0042BE  EF63  F021         	goto	u4731
  9480  0042C2  EF65  F021         	goto	u4730
  9481  0042C6                     u4731:
  9482  0042C6  EF68  F021         	goto	l4018
  9483  0042CA                     u4730:
  9484  0042CA  90D8               	bcf	status,0,c
  9485  0042CC  EF69  F021         	goto	l479
  9486  0042D0                     l4018:
  9487  0042D0  80D8               	bsf	status,0,c
  9488  0042D2                     l479:
  9489  0042D2  0012               	return		;funcret
  9490  0042D4                     __end_of___flge:
  9491                           	callstack 0
  9492                           
  9493 ;; *************** function ___fleq *****************
  9494 ;; Defined at:
  9495 ;;		line 4 in file "/Applications/microchip/xc8/v2.31/pic/sources/c99/common/fleq.c"
  9496 ;; Parameters:    Size  Location     Type
  9497 ;;  ff1             4    0[COMRAM] unsigned char 
  9498 ;;  ff2             4    4[COMRAM] unsigned char 
  9499 ;; Auto vars:     Size  Location     Type
  9500 ;;		None
  9501 ;; Return value:  Size  Location     Type
  9502 ;;		None               void
  9503 ;; Registers used:
  9504 ;;		wreg, status,2, status,0
  9505 ;; Tracked objects:
  9506 ;;		On entry : 0/0
  9507 ;;		On exit  : 0/0
  9508 ;;		Unchanged: 0/0
  9509 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  9510 ;;      Params:         8       0       0       0       0       0       0       0       0
  9511 ;;      Locals:         0       0       0       0       0       0       0       0       0
  9512 ;;      Temps:          4       0       0       0       0       0       0       0       0
  9513 ;;      Totals:        12       0       0       0       0       0       0       0       0
  9514 ;;Total ram usage:       12 bytes
  9515 ;; Hardware stack levels used:    1
  9516 ;; This function calls:
  9517 ;;		Nothing
  9518 ;; This function is called by:
  9519 ;;		_efgtoa
  9520 ;; This function uses a non-reentrant model
  9521 ;;
  9522                           
  9523                           	psect	text34
  9524  004884                     __ptext34:
  9525                           	callstack 0
  9526  004884                     ___fleq:
  9527                           	callstack 25
  9528  004884  0E00               	movlw	0
  9529  004886  1401               	andwf	___fleq@ff1^0,w,c
  9530  004888  6E09               	movwf	??___fleq^0,c
  9531  00488A  0E00               	movlw	0
  9532  00488C  1402               	andwf	(___fleq@ff1+1)^0,w,c
  9533  00488E  6E0A               	movwf	(??___fleq+1)^0,c
  9534  004890  0E80               	movlw	128
  9535  004892  1403               	andwf	(___fleq@ff1+2)^0,w,c
  9536  004894  6E0B               	movwf	(??___fleq+2)^0,c
  9537  004896  0E7F               	movlw	127
  9538  004898  1404               	andwf	(___fleq@ff1+3)^0,w,c
  9539  00489A  6E0C               	movwf	(??___fleq+3)^0,c
  9540  00489C  5009               	movf	??___fleq^0,w,c
  9541  00489E  100A               	iorwf	(??___fleq+1)^0,w,c
  9542  0048A0  100B               	iorwf	(??___fleq+2)^0,w,c
  9543  0048A2  100C               	iorwf	(??___fleq+3)^0,w,c
  9544  0048A4  A4D8               	btfss	status,2,c
  9545  0048A6  EF57  F024         	goto	u4661
  9546  0048AA  EF59  F024         	goto	u4660
  9547  0048AE                     u4661:
  9548  0048AE  EF61  F024         	goto	l3988
  9549  0048B2                     u4660:
  9550  0048B2  0E00               	movlw	0
  9551  0048B4  6E01               	movwf	___fleq@ff1^0,c
  9552  0048B6  0E00               	movlw	0
  9553  0048B8  6E02               	movwf	(___fleq@ff1+1)^0,c
  9554  0048BA  0E00               	movlw	0
  9555  0048BC  6E03               	movwf	(___fleq@ff1+2)^0,c
  9556  0048BE  0E00               	movlw	0
  9557  0048C0  6E04               	movwf	(___fleq@ff1+3)^0,c
  9558  0048C2                     l3988:
  9559  0048C2  0E00               	movlw	0
  9560  0048C4  1405               	andwf	___fleq@ff2^0,w,c
  9561  0048C6  6E09               	movwf	??___fleq^0,c
  9562  0048C8  0E00               	movlw	0
  9563  0048CA  1406               	andwf	(___fleq@ff2+1)^0,w,c
  9564  0048CC  6E0A               	movwf	(??___fleq+1)^0,c
  9565  0048CE  0E80               	movlw	128
  9566  0048D0  1407               	andwf	(___fleq@ff2+2)^0,w,c
  9567  0048D2  6E0B               	movwf	(??___fleq+2)^0,c
  9568  0048D4  0E7F               	movlw	127
  9569  0048D6  1408               	andwf	(___fleq@ff2+3)^0,w,c
  9570  0048D8  6E0C               	movwf	(??___fleq+3)^0,c
  9571  0048DA  5009               	movf	??___fleq^0,w,c
  9572  0048DC  100A               	iorwf	(??___fleq+1)^0,w,c
  9573  0048DE  100B               	iorwf	(??___fleq+2)^0,w,c
  9574  0048E0  100C               	iorwf	(??___fleq+3)^0,w,c
  9575  0048E2  A4D8               	btfss	status,2,c
  9576  0048E4  EF76  F024         	goto	u4671
  9577  0048E8  EF78  F024         	goto	u4670
  9578  0048EC                     u4671:
  9579  0048EC  EF80  F024         	goto	l3992
  9580  0048F0                     u4670:
  9581  0048F0  0E00               	movlw	0
  9582  0048F2  6E05               	movwf	___fleq@ff2^0,c
  9583  0048F4  0E00               	movlw	0
  9584  0048F6  6E06               	movwf	(___fleq@ff2+1)^0,c
  9585  0048F8  0E00               	movlw	0
  9586  0048FA  6E07               	movwf	(___fleq@ff2+2)^0,c
  9587  0048FC  0E00               	movlw	0
  9588  0048FE  6E08               	movwf	(___fleq@ff2+3)^0,c
  9589  004900                     l3992:
  9590  004900  5005               	movf	___fleq@ff2^0,w,c
  9591  004902  1801               	xorwf	___fleq@ff1^0,w,c
  9592  004904  E10F               	bnz	u4680
  9593  004906  5006               	movf	(___fleq@ff2+1)^0,w,c
  9594  004908  1802               	xorwf	(___fleq@ff1+1)^0,w,c
  9595  00490A  E10C               	bnz	u4680
  9596  00490C  5007               	movf	(___fleq@ff2+2)^0,w,c
  9597  00490E  1803               	xorwf	(___fleq@ff1+2)^0,w,c
  9598  004910  E109               	bnz	u4680
  9599  004912  5008               	movf	(___fleq@ff2+3)^0,w,c
  9600  004914  1804               	xorwf	(___fleq@ff1+3)^0,w,c
  9601  004916  B4D8               	btfsc	status,2,c
  9602  004918  EF90  F024         	goto	u4681
  9603  00491C  EF92  F024         	goto	u4680
  9604  004920                     u4681:
  9605  004920  EF95  F024         	goto	l3996
  9606  004924                     u4680:
  9607  004924  90D8               	bcf	status,0,c
  9608  004926  EF96  F024         	goto	l468
  9609  00492A                     l3996:
  9610  00492A  80D8               	bsf	status,0,c
  9611  00492C                     l468:
  9612  00492C  0012               	return		;funcret
  9613  00492E                     __end_of___fleq:
  9614                           	callstack 0
  9615                           
  9616 ;; *************** function ___fldiv *****************
  9617 ;; Defined at:
  9618 ;;		line 11 in file "/Applications/microchip/xc8/v2.31/pic/sources/c99/common/sprcdiv.c"
  9619 ;; Parameters:    Size  Location     Type
  9620 ;;  b               4    0[COMRAM] unsigned char 
  9621 ;;  a               4    4[COMRAM] unsigned char 
  9622 ;; Auto vars:     Size  Location     Type
  9623 ;;  grs             4   19[COMRAM] unsigned long 
  9624 ;;  rem             4   12[COMRAM] unsigned long 
  9625 ;;  new_exp         2   17[COMRAM] short 
  9626 ;;  aexp            1   24[COMRAM] unsigned char 
  9627 ;;  bexp            1   23[COMRAM] unsigned char 
  9628 ;;  sign            1   16[COMRAM] unsigned char 
  9629 ;; Return value:  Size  Location     Type
  9630 ;;                  4    0[COMRAM] unsigned char 
  9631 ;; Registers used:
  9632 ;;		wreg, status,2, status,0
  9633 ;; Tracked objects:
  9634 ;;		On entry : 0/0
  9635 ;;		On exit  : 0/0
  9636 ;;		Unchanged: 0/0
  9637 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  9638 ;;      Params:         8       0       0       0       0       0       0       0       0
  9639 ;;      Locals:        13       0       0       0       0       0       0       0       0
  9640 ;;      Temps:          4       0       0       0       0       0       0       0       0
  9641 ;;      Totals:        25       0       0       0       0       0       0       0       0
  9642 ;;Total ram usage:       25 bytes
  9643 ;; Hardware stack levels used:    1
  9644 ;; This function calls:
  9645 ;;		Nothing
  9646 ;; This function is called by:
  9647 ;;		_efgtoa
  9648 ;; This function uses a non-reentrant model
  9649 ;;
  9650                           
  9651                           	psect	text35
  9652  002AA8                     __ptext35:
  9653                           	callstack 0
  9654  002AA8                     ___fldiv:
  9655                           	callstack 25
  9656  002AA8  5004               	movf	(___fldiv@b+3)^0,w,c
  9657  002AAA  0B80               	andlw	128
  9658  002AAC  6E11               	movwf	___fldiv@sign^0,c
  9659  002AAE  5004               	movf	(___fldiv@b+3)^0,w,c
  9660  002AB0  2404               	addwf	(___fldiv@b+3)^0,w,c
  9661  002AB2  6E18               	movwf	___fldiv@bexp^0,c
  9662  002AB4  AE03               	btfss	(___fldiv@b+2)^0,7,c
  9663  002AB6  EF5F  F015         	goto	u4121
  9664  002ABA  EF61  F015         	goto	u4120
  9665  002ABE                     u4121:
  9666  002ABE  EF62  F015         	goto	l3636
  9667  002AC2                     u4120:
  9668  002AC2  8018               	bsf	___fldiv@bexp^0,0,c
  9669  002AC4                     l3636:
  9670  002AC4  5018               	movf	___fldiv@bexp^0,w,c
  9671  002AC6  B4D8               	btfsc	status,2,c
  9672  002AC8  EF68  F015         	goto	u4131
  9673  002ACC  EF6A  F015         	goto	u4130
  9674  002AD0                     u4131:
  9675  002AD0  EF7F  F015         	goto	l3646
  9676  002AD4                     u4130:
  9677  002AD4  2818               	incf	___fldiv@bexp^0,w,c
  9678  002AD6  A4D8               	btfss	status,2,c
  9679  002AD8  EF70  F015         	goto	u4141
  9680  002ADC  EF72  F015         	goto	u4140
  9681  002AE0                     u4141:
  9682  002AE0  EF7A  F015         	goto	l3642
  9683  002AE4                     u4140:
  9684  002AE4  0E00               	movlw	0
  9685  002AE6  6E01               	movwf	___fldiv@b^0,c
  9686  002AE8  0E00               	movlw	0
  9687  002AEA  6E02               	movwf	(___fldiv@b+1)^0,c
  9688  002AEC  0E00               	movlw	0
  9689  002AEE  6E03               	movwf	(___fldiv@b+2)^0,c
  9690  002AF0  0E00               	movlw	0
  9691  002AF2  6E04               	movwf	(___fldiv@b+3)^0,c
  9692  002AF4                     l3642:
  9693  002AF4  8E03               	bsf	(___fldiv@b+2)^0,7,c
  9694  002AF6  0E00               	movlw	0
  9695  002AF8  6E04               	movwf	(___fldiv@b+3)^0,c
  9696  002AFA  EF87  F015         	goto	l3648
  9697  002AFE                     l3646:
  9698  002AFE  0E00               	movlw	0
  9699  002B00  6E01               	movwf	___fldiv@b^0,c
  9700  002B02  0E00               	movlw	0
  9701  002B04  6E02               	movwf	(___fldiv@b+1)^0,c
  9702  002B06  0E00               	movlw	0
  9703  002B08  6E03               	movwf	(___fldiv@b+2)^0,c
  9704  002B0A  0E00               	movlw	0
  9705  002B0C  6E04               	movwf	(___fldiv@b+3)^0,c
  9706  002B0E                     l3648:
  9707  002B0E  5008               	movf	(___fldiv@a+3)^0,w,c
  9708  002B10  0B80               	andlw	128
  9709  002B12  1A11               	xorwf	___fldiv@sign^0,f,c
  9710  002B14  5008               	movf	(___fldiv@a+3)^0,w,c
  9711  002B16  2408               	addwf	(___fldiv@a+3)^0,w,c
  9712  002B18  6E19               	movwf	___fldiv@aexp^0,c
  9713  002B1A  AE07               	btfss	(___fldiv@a+2)^0,7,c
  9714  002B1C  EF92  F015         	goto	u4151
  9715  002B20  EF94  F015         	goto	u4150
  9716  002B24                     u4151:
  9717  002B24  EF95  F015         	goto	l3656
  9718  002B28                     u4150:
  9719  002B28  8019               	bsf	___fldiv@aexp^0,0,c
  9720  002B2A                     l3656:
  9721  002B2A  5019               	movf	___fldiv@aexp^0,w,c
  9722  002B2C  B4D8               	btfsc	status,2,c
  9723  002B2E  EF9B  F015         	goto	u4161
  9724  002B32  EF9D  F015         	goto	u4160
  9725  002B36                     u4161:
  9726  002B36  EFB2  F015         	goto	l3666
  9727  002B3A                     u4160:
  9728  002B3A  2819               	incf	___fldiv@aexp^0,w,c
  9729  002B3C  A4D8               	btfss	status,2,c
  9730  002B3E  EFA3  F015         	goto	u4171
  9731  002B42  EFA5  F015         	goto	u4170
  9732  002B46                     u4171:
  9733  002B46  EFAD  F015         	goto	l3662
  9734  002B4A                     u4170:
  9735  002B4A  0E00               	movlw	0
  9736  002B4C  6E05               	movwf	___fldiv@a^0,c
  9737  002B4E  0E00               	movlw	0
  9738  002B50  6E06               	movwf	(___fldiv@a+1)^0,c
  9739  002B52  0E00               	movlw	0
  9740  002B54  6E07               	movwf	(___fldiv@a+2)^0,c
  9741  002B56  0E00               	movlw	0
  9742  002B58  6E08               	movwf	(___fldiv@a+3)^0,c
  9743  002B5A                     l3662:
  9744  002B5A  8E07               	bsf	(___fldiv@a+2)^0,7,c
  9745  002B5C  0E00               	movlw	0
  9746  002B5E  6E08               	movwf	(___fldiv@a+3)^0,c
  9747  002B60  EFBA  F015         	goto	l3668
  9748  002B64                     l3666:
  9749  002B64  0E00               	movlw	0
  9750  002B66  6E05               	movwf	___fldiv@a^0,c
  9751  002B68  0E00               	movlw	0
  9752  002B6A  6E06               	movwf	(___fldiv@a+1)^0,c
  9753  002B6C  0E00               	movlw	0
  9754  002B6E  6E07               	movwf	(___fldiv@a+2)^0,c
  9755  002B70  0E00               	movlw	0
  9756  002B72  6E08               	movwf	(___fldiv@a+3)^0,c
  9757  002B74                     l3668:
  9758  002B74  5005               	movf	___fldiv@a^0,w,c
  9759  002B76  1006               	iorwf	(___fldiv@a+1)^0,w,c
  9760  002B78  1007               	iorwf	(___fldiv@a+2)^0,w,c
  9761  002B7A  1008               	iorwf	(___fldiv@a+3)^0,w,c
  9762  002B7C  A4D8               	btfss	status,2,c
  9763  002B7E  EFC3  F015         	goto	u4181
  9764  002B82  EFC5  F015         	goto	u4180
  9765  002B86                     u4181:
  9766  002B86  EFDD  F015         	goto	l3680
  9767  002B8A                     u4180:
  9768  002B8A  0E00               	movlw	0
  9769  002B8C  6E01               	movwf	___fldiv@b^0,c
  9770  002B8E  0E00               	movlw	0
  9771  002B90  6E02               	movwf	(___fldiv@b+1)^0,c
  9772  002B92  0E00               	movlw	0
  9773  002B94  6E03               	movwf	(___fldiv@b+2)^0,c
  9774  002B96  0E00               	movlw	0
  9775  002B98  6E04               	movwf	(___fldiv@b+3)^0,c
  9776  002B9A  0E80               	movlw	128
  9777  002B9C  1203               	iorwf	(___fldiv@b+2)^0,f,c
  9778  002B9E  0E7F               	movlw	127
  9779  002BA0  1204               	iorwf	(___fldiv@b+3)^0,f,c
  9780  002BA2                     l3674:
  9781  002BA2  5011               	movf	___fldiv@sign^0,w,c
  9782  002BA4  1204               	iorwf	(___fldiv@b+3)^0,f,c
  9783  002BA6  C001  F001         	movff	___fldiv@b,?___fldiv
  9784  002BAA  C002  F002         	movff	___fldiv@b+1,?___fldiv+1
  9785  002BAE  C003  F003         	movff	___fldiv@b+2,?___fldiv+2
  9786  002BB2  C004  F004         	movff	___fldiv@b+3,?___fldiv+3
  9787  002BB6  EF20  F017         	goto	l791
  9788  002BBA                     l3680:
  9789  002BBA  5018               	movf	___fldiv@bexp^0,w,c
  9790  002BBC  A4D8               	btfss	status,2,c
  9791  002BBE  EFE3  F015         	goto	u4191
  9792  002BC2  EFE5  F015         	goto	u4190
  9793  002BC6                     u4191:
  9794  002BC6  EFEF  F015         	goto	l3688
  9795  002BCA                     u4190:
  9796  002BCA  0E00               	movlw	0
  9797  002BCC  6E01               	movwf	?___fldiv^0,c
  9798  002BCE  0E00               	movlw	0
  9799  002BD0  6E02               	movwf	(?___fldiv+1)^0,c
  9800  002BD2  0E00               	movlw	0
  9801  002BD4  6E03               	movwf	(?___fldiv+2)^0,c
  9802  002BD6  0E00               	movlw	0
  9803  002BD8  6E04               	movwf	(?___fldiv+3)^0,c
  9804  002BDA  EF20  F017         	goto	l791
  9805  002BDE                     l3688:
  9806  002BDE  5019               	movf	___fldiv@aexp^0,w,c
  9807  002BE0  C018  F009         	movff	___fldiv@bexp,??___fldiv
  9808  002BE4  6A0A               	clrf	(??___fldiv+1)^0,c
  9809  002BE6  5E09               	subwf	??___fldiv^0,f,c
  9810  002BE8  0E00               	movlw	0
  9811  002BEA  5A0A               	subwfb	(??___fldiv+1)^0,f,c
  9812  002BEC  0E7F               	movlw	127
  9813  002BEE  2409               	addwf	??___fldiv^0,w,c
  9814  002BF0  6E12               	movwf	___fldiv@new_exp^0,c
  9815  002BF2  0E00               	movlw	0
  9816  002BF4  200A               	addwfc	(??___fldiv+1)^0,w,c
  9817  002BF6  6E13               	movwf	(___fldiv@new_exp+1)^0,c
  9818  002BF8  C001  F00D         	movff	___fldiv@b,___fldiv@rem
  9819  002BFC  C002  F00E         	movff	___fldiv@b+1,___fldiv@rem+1
  9820  002C00  C003  F00F         	movff	___fldiv@b+2,___fldiv@rem+2
  9821  002C04  C004  F010         	movff	___fldiv@b+3,___fldiv@rem+3
  9822  002C08  0E00               	movlw	0
  9823  002C0A  6E01               	movwf	___fldiv@b^0,c
  9824  002C0C  0E00               	movlw	0
  9825  002C0E  6E02               	movwf	(___fldiv@b+1)^0,c
  9826  002C10  0E00               	movlw	0
  9827  002C12  6E03               	movwf	(___fldiv@b+2)^0,c
  9828  002C14  0E00               	movlw	0
  9829  002C16  6E04               	movwf	(___fldiv@b+3)^0,c
  9830  002C18  0E00               	movlw	0
  9831  002C1A  6E14               	movwf	___fldiv@grs^0,c
  9832  002C1C  0E00               	movlw	0
  9833  002C1E  6E15               	movwf	(___fldiv@grs+1)^0,c
  9834  002C20  0E00               	movlw	0
  9835  002C22  6E16               	movwf	(___fldiv@grs+2)^0,c
  9836  002C24  0E00               	movlw	0
  9837  002C26  6E17               	movwf	(___fldiv@grs+3)^0,c
  9838  002C28  0E00               	movlw	0
  9839  002C2A  6E19               	movwf	___fldiv@aexp^0,c
  9840  002C2C  EF50  F016         	goto	l793
  9841  002C30                     l3698:
  9842  002C30  5019               	movf	___fldiv@aexp^0,w,c
  9843  002C32  B4D8               	btfsc	status,2,c
  9844  002C34  EF1E  F016         	goto	u4201
  9845  002C38  EF20  F016         	goto	u4200
  9846  002C3C                     u4201:
  9847  002C3C  EF37  F016         	goto	l3706
  9848  002C40                     u4200:
  9849  002C40  90D8               	bcf	status,0,c
  9850  002C42  360D               	rlcf	___fldiv@rem^0,f,c
  9851  002C44  360E               	rlcf	(___fldiv@rem+1)^0,f,c
  9852  002C46  360F               	rlcf	(___fldiv@rem+2)^0,f,c
  9853  002C48  3610               	rlcf	(___fldiv@rem+3)^0,f,c
  9854  002C4A  90D8               	bcf	status,0,c
  9855  002C4C  3601               	rlcf	___fldiv@b^0,f,c
  9856  002C4E  3602               	rlcf	(___fldiv@b+1)^0,f,c
  9857  002C50  3603               	rlcf	(___fldiv@b+2)^0,f,c
  9858  002C52  3604               	rlcf	(___fldiv@b+3)^0,f,c
  9859  002C54  AE17               	btfss	(___fldiv@grs+3)^0,7,c
  9860  002C56  EF2F  F016         	goto	u4211
  9861  002C5A  EF31  F016         	goto	u4210
  9862  002C5E                     u4211:
  9863  002C5E  EF32  F016         	goto	l796
  9864  002C62                     u4210:
  9865  002C62  8001               	bsf	___fldiv@b^0,0,c
  9866  002C64                     l796:
  9867  002C64  90D8               	bcf	status,0,c
  9868  002C66  3614               	rlcf	___fldiv@grs^0,f,c
  9869  002C68  3615               	rlcf	(___fldiv@grs+1)^0,f,c
  9870  002C6A  3616               	rlcf	(___fldiv@grs+2)^0,f,c
  9871  002C6C  3617               	rlcf	(___fldiv@grs+3)^0,f,c
  9872  002C6E                     l3706:
  9873  002C6E  5005               	movf	___fldiv@a^0,w,c
  9874  002C70  5C0D               	subwf	___fldiv@rem^0,w,c
  9875  002C72  5006               	movf	(___fldiv@a+1)^0,w,c
  9876  002C74  580E               	subwfb	(___fldiv@rem+1)^0,w,c
  9877  002C76  5007               	movf	(___fldiv@a+2)^0,w,c
  9878  002C78  580F               	subwfb	(___fldiv@rem+2)^0,w,c
  9879  002C7A  5008               	movf	(___fldiv@a+3)^0,w,c
  9880  002C7C  5810               	subwfb	(___fldiv@rem+3)^0,w,c
  9881  002C7E  A0D8               	btfss	status,0,c
  9882  002C80  EF44  F016         	goto	u4221
  9883  002C84  EF46  F016         	goto	u4220
  9884  002C88                     u4221:
  9885  002C88  EF4F  F016         	goto	l3712
  9886  002C8C                     u4220:
  9887  002C8C  8C17               	bsf	(___fldiv@grs+3)^0,6,c
  9888  002C8E  5005               	movf	___fldiv@a^0,w,c
  9889  002C90  5E0D               	subwf	___fldiv@rem^0,f,c
  9890  002C92  5006               	movf	(___fldiv@a+1)^0,w,c
  9891  002C94  5A0E               	subwfb	(___fldiv@rem+1)^0,f,c
  9892  002C96  5007               	movf	(___fldiv@a+2)^0,w,c
  9893  002C98  5A0F               	subwfb	(___fldiv@rem+2)^0,f,c
  9894  002C9A  5008               	movf	(___fldiv@a+3)^0,w,c
  9895  002C9C  5A10               	subwfb	(___fldiv@rem+3)^0,f,c
  9896  002C9E                     l3712:
  9897  002C9E  2A19               	incf	___fldiv@aexp^0,f,c
  9898  002CA0                     l793:
  9899  002CA0  0E19               	movlw	25
  9900  002CA2  6419               	cpfsgt	___fldiv@aexp^0,c
  9901  002CA4  EF56  F016         	goto	u4231
  9902  002CA8  EF58  F016         	goto	u4230
  9903  002CAC                     u4231:
  9904  002CAC  EF18  F016         	goto	l3698
  9905  002CB0                     u4230:
  9906  002CB0  500D               	movf	___fldiv@rem^0,w,c
  9907  002CB2  100E               	iorwf	(___fldiv@rem+1)^0,w,c
  9908  002CB4  100F               	iorwf	(___fldiv@rem+2)^0,w,c
  9909  002CB6  1010               	iorwf	(___fldiv@rem+3)^0,w,c
  9910  002CB8  B4D8               	btfsc	status,2,c
  9911  002CBA  EF61  F016         	goto	u4241
  9912  002CBE  EF63  F016         	goto	u4240
  9913  002CC2                     u4241:
  9914  002CC2  EF7B  F016         	goto	l3724
  9915  002CC6                     u4240:
  9916  002CC6  8014               	bsf	___fldiv@grs^0,0,c
  9917  002CC8  EF7B  F016         	goto	l3724
  9918  002CCC                     l3718:
  9919  002CCC  90D8               	bcf	status,0,c
  9920  002CCE  3601               	rlcf	___fldiv@b^0,f,c
  9921  002CD0  3602               	rlcf	(___fldiv@b+1)^0,f,c
  9922  002CD2  3603               	rlcf	(___fldiv@b+2)^0,f,c
  9923  002CD4  3604               	rlcf	(___fldiv@b+3)^0,f,c
  9924  002CD6  AE17               	btfss	(___fldiv@grs+3)^0,7,c
  9925  002CD8  EF70  F016         	goto	u4251
  9926  002CDC  EF72  F016         	goto	u4250
  9927  002CE0                     u4251:
  9928  002CE0  EF73  F016         	goto	l802
  9929  002CE4                     u4250:
  9930  002CE4  8001               	bsf	___fldiv@b^0,0,c
  9931  002CE6                     l802:
  9932  002CE6  90D8               	bcf	status,0,c
  9933  002CE8  3614               	rlcf	___fldiv@grs^0,f,c
  9934  002CEA  3615               	rlcf	(___fldiv@grs+1)^0,f,c
  9935  002CEC  3616               	rlcf	(___fldiv@grs+2)^0,f,c
  9936  002CEE  3617               	rlcf	(___fldiv@grs+3)^0,f,c
  9937  002CF0  0612               	decf	___fldiv@new_exp^0,f,c
  9938  002CF2  A0D8               	btfss	status,0,c
  9939  002CF4  0613               	decf	(___fldiv@new_exp+1)^0,f,c
  9940  002CF6                     l3724:
  9941  002CF6  AE03               	btfss	(___fldiv@b+2)^0,7,c
  9942  002CF8  EF80  F016         	goto	u4261
  9943  002CFC  EF82  F016         	goto	u4260
  9944  002D00                     u4261:
  9945  002D00  EF66  F016         	goto	l3718
  9946  002D04                     u4260:
  9947  002D04  0E00               	movlw	0
  9948  002D06  6E19               	movwf	___fldiv@aexp^0,c
  9949  002D08  AE17               	btfss	(___fldiv@grs+3)^0,7,c
  9950  002D0A  EF89  F016         	goto	u4271
  9951  002D0E  EF8B  F016         	goto	u4270
  9952  002D12                     u4271:
  9953  002D12  EFAF  F016         	goto	l804
  9954  002D16                     u4270:
  9955  002D16  0EFF               	movlw	255
  9956  002D18  1414               	andwf	___fldiv@grs^0,w,c
  9957  002D1A  6E09               	movwf	??___fldiv^0,c
  9958  002D1C  0EFF               	movlw	255
  9959  002D1E  1415               	andwf	(___fldiv@grs+1)^0,w,c
  9960  002D20  6E0A               	movwf	(??___fldiv+1)^0,c
  9961  002D22  0EFF               	movlw	255
  9962  002D24  1416               	andwf	(___fldiv@grs+2)^0,w,c
  9963  002D26  6E0B               	movwf	(??___fldiv+2)^0,c
  9964  002D28  0E7F               	movlw	127
  9965  002D2A  1417               	andwf	(___fldiv@grs+3)^0,w,c
  9966  002D2C  6E0C               	movwf	(??___fldiv+3)^0,c
  9967  002D2E  5009               	movf	??___fldiv^0,w,c
  9968  002D30  100A               	iorwf	(??___fldiv+1)^0,w,c
  9969  002D32  100B               	iorwf	(??___fldiv+2)^0,w,c
  9970  002D34  100C               	iorwf	(??___fldiv+3)^0,w,c
  9971  002D36  B4D8               	btfsc	status,2,c
  9972  002D38  EFA0  F016         	goto	u4281
  9973  002D3C  EFA2  F016         	goto	u4280
  9974  002D40                     u4281:
  9975  002D40  EFA6  F016         	goto	l805
  9976  002D44                     u4280:
  9977  002D44                     l3732:
  9978  002D44  0E01               	movlw	1
  9979  002D46  6E19               	movwf	___fldiv@aexp^0,c
  9980  002D48  EFAF  F016         	goto	l804
  9981  002D4C                     l805:
  9982  002D4C  A001               	btfss	___fldiv@b^0,0,c
  9983  002D4E  EFAB  F016         	goto	u4291
  9984  002D52  EFAD  F016         	goto	u4290
  9985  002D56                     u4291:
  9986  002D56  EFAF  F016         	goto	l804
  9987  002D5A                     u4290:
  9988  002D5A  EFA2  F016         	goto	l3732
  9989  002D5E                     l804:
  9990  002D5E  5019               	movf	___fldiv@aexp^0,w,c
  9991  002D60  B4D8               	btfsc	status,2,c
  9992  002D62  EFB5  F016         	goto	u4301
  9993  002D66  EFB7  F016         	goto	u4300
  9994  002D6A                     u4301:
  9995  002D6A  EFDB  F016         	goto	l3744
  9996  002D6E                     u4300:
  9997  002D6E  0E01               	movlw	1
  9998  002D70  2601               	addwf	___fldiv@b^0,f,c
  9999  002D72  0E00               	movlw	0
 10000  002D74  2202               	addwfc	(___fldiv@b+1)^0,f,c
 10001  002D76  2203               	addwfc	(___fldiv@b+2)^0,f,c
 10002  002D78  2204               	addwfc	(___fldiv@b+3)^0,f,c
 10003  002D7A  A004               	btfss	(___fldiv@b+3)^0,0,c
 10004  002D7C  EFC2  F016         	goto	u4311
 10005  002D80  EFC4  F016         	goto	u4310
 10006  002D84                     u4311:
 10007  002D84  EFDB  F016         	goto	l3744
 10008  002D88                     u4310:
 10009  002D88  C001  F009         	movff	___fldiv@b,??___fldiv
 10010  002D8C  C002  F00A         	movff	___fldiv@b+1,??___fldiv+1
 10011  002D90  C003  F00B         	movff	___fldiv@b+2,??___fldiv+2
 10012  002D94  C004  F00C         	movff	___fldiv@b+3,??___fldiv+3
 10013  002D98  340C               	rlcf	(??___fldiv+3)^0,w,c
 10014  002D9A  320C               	rrcf	(??___fldiv+3)^0,f,c
 10015  002D9C  320B               	rrcf	(??___fldiv+2)^0,f,c
 10016  002D9E  320A               	rrcf	(??___fldiv+1)^0,f,c
 10017  002DA0  3209               	rrcf	??___fldiv^0,f,c
 10018  002DA2  C009  F001         	movff	??___fldiv,___fldiv@b
 10019  002DA6  C00A  F002         	movff	??___fldiv+1,___fldiv@b+1
 10020  002DAA  C00B  F003         	movff	??___fldiv+2,___fldiv@b+2
 10021  002DAE  C00C  F004         	movff	??___fldiv+3,___fldiv@b+3
 10022  002DB2  4A12               	infsnz	___fldiv@new_exp^0,f,c
 10023  002DB4  2A13               	incf	(___fldiv@new_exp+1)^0,f,c
 10024  002DB6                     l3744:
 10025  002DB6  BE13               	btfsc	(___fldiv@new_exp+1)^0,7,c
 10026  002DB8  EFE6  F016         	goto	u4321
 10027  002DBC  5013               	movf	(___fldiv@new_exp+1)^0,w,c
 10028  002DBE  E108               	bnz	u4320
 10029  002DC0  2812               	incf	___fldiv@new_exp^0,w,c
 10030  002DC2  A0D8               	btfss	status,0,c
 10031  002DC4  EFE6  F016         	goto	u4321
 10032  002DC8  EFE8  F016         	goto	u4320
 10033  002DCC                     u4321:
 10034  002DCC  EFF3  F016         	goto	l3748
 10035  002DD0                     u4320:
 10036  002DD0  0E00               	movlw	0
 10037  002DD2  6E13               	movwf	(___fldiv@new_exp+1)^0,c
 10038  002DD4  6812               	setf	___fldiv@new_exp^0,c
 10039  002DD6  0E00               	movlw	0
 10040  002DD8  6E01               	movwf	___fldiv@b^0,c
 10041  002DDA  0E00               	movlw	0
 10042  002DDC  6E02               	movwf	(___fldiv@b+1)^0,c
 10043  002DDE  0E00               	movlw	0
 10044  002DE0  6E03               	movwf	(___fldiv@b+2)^0,c
 10045  002DE2  0E00               	movlw	0
 10046  002DE4  6E04               	movwf	(___fldiv@b+3)^0,c
 10047  002DE6                     l3748:
 10048  002DE6  BE13               	btfsc	(___fldiv@new_exp+1)^0,7,c
 10049  002DE8  EF00  F017         	goto	u4330
 10050  002DEC  5013               	movf	(___fldiv@new_exp+1)^0,w,c
 10051  002DEE  E106               	bnz	u4331
 10052  002DF0  0412               	decf	___fldiv@new_exp^0,w,c
 10053  002DF2  B0D8               	btfsc	status,0,c
 10054  002DF4  EFFE  F016         	goto	u4331
 10055  002DF8  EF00  F017         	goto	u4330
 10056  002DFC                     u4331:
 10057  002DFC  EF0E  F017         	goto	l3752
 10058  002E00                     u4330:
 10059  002E00  0E00               	movlw	0
 10060  002E02  6E13               	movwf	(___fldiv@new_exp+1)^0,c
 10061  002E04  0E00               	movlw	0
 10062  002E06  6E12               	movwf	___fldiv@new_exp^0,c
 10063  002E08  0E00               	movlw	0
 10064  002E0A  6E01               	movwf	___fldiv@b^0,c
 10065  002E0C  0E00               	movlw	0
 10066  002E0E  6E02               	movwf	(___fldiv@b+1)^0,c
 10067  002E10  0E00               	movlw	0
 10068  002E12  6E03               	movwf	(___fldiv@b+2)^0,c
 10069  002E14  0E00               	movlw	0
 10070  002E16  6E04               	movwf	(___fldiv@b+3)^0,c
 10071  002E18  0E00               	movlw	0
 10072  002E1A  6E11               	movwf	___fldiv@sign^0,c
 10073  002E1C                     l3752:
 10074  002E1C  C012  F018         	movff	___fldiv@new_exp,___fldiv@bexp
 10075  002E20  A018               	btfss	___fldiv@bexp^0,0,c
 10076  002E22  EF15  F017         	goto	u4341
 10077  002E26  EF17  F017         	goto	u4340
 10078  002E2A                     u4341:
 10079  002E2A  EF1A  F017         	goto	l3758
 10080  002E2E                     u4340:
 10081  002E2E  8E03               	bsf	(___fldiv@b+2)^0,7,c
 10082  002E30  EF1B  F017         	goto	l3760
 10083  002E34                     l3758:
 10084  002E34  9E03               	bcf	(___fldiv@b+2)^0,7,c
 10085  002E36                     l3760:
 10086  002E36  90D8               	bcf	status,0,c
 10087  002E38  3018               	rrcf	___fldiv@bexp^0,w,c
 10088  002E3A  6E04               	movwf	(___fldiv@b+3)^0,c
 10089  002E3C  EFD1  F015         	goto	l3674
 10090  002E40                     l791:
 10091  002E40  0012               	return		;funcret
 10092  002E42                     __end_of___fldiv:
 10093                           	callstack 0
 10094                           
 10095 ;; *************** function ___awmod *****************
 10096 ;; Defined at:
 10097 ;;		line 7 in file "/Applications/microchip/xc8/v2.31/pic/sources/c99/common/awmod.c"
 10098 ;; Parameters:    Size  Location     Type
 10099 ;;  dividend        2    0[COMRAM] int 
 10100 ;;  divisor         2    2[COMRAM] int 
 10101 ;; Auto vars:     Size  Location     Type
 10102 ;;  sign            1    5[COMRAM] unsigned char 
 10103 ;;  counter         1    4[COMRAM] unsigned char 
 10104 ;; Return value:  Size  Location     Type
 10105 ;;                  2    0[COMRAM] int 
 10106 ;; Registers used:
 10107 ;;		wreg, status,2, status,0
 10108 ;; Tracked objects:
 10109 ;;		On entry : 0/0
 10110 ;;		On exit  : 0/0
 10111 ;;		Unchanged: 0/0
 10112 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 10113 ;;      Params:         4       0       0       0       0       0       0       0       0
 10114 ;;      Locals:         2       0       0       0       0       0       0       0       0
 10115 ;;      Temps:          0       0       0       0       0       0       0       0       0
 10116 ;;      Totals:         6       0       0       0       0       0       0       0       0
 10117 ;;Total ram usage:        6 bytes
 10118 ;; Hardware stack levels used:    1
 10119 ;; This function calls:
 10120 ;;		Nothing
 10121 ;; This function is called by:
 10122 ;;		_Mostrar_Reloj
 10123 ;;		_Alarma
 10124 ;;		_efgtoa
 10125 ;; This function uses a non-reentrant model
 10126 ;;
 10127                           
 10128                           	psect	text36
 10129  0047D4                     __ptext36:
 10130                           	callstack 0
 10131  0047D4                     ___awmod:
 10132                           	callstack 25
 10133  0047D4  0E00               	movlw	0
 10134  0047D6  6E06               	movwf	___awmod@sign^0,c
 10135  0047D8  BE02               	btfsc	(___awmod@dividend+1)^0,7,c
 10136  0047DA  EFF3  F023         	goto	u4600
 10137  0047DE  EFF1  F023         	goto	u4601
 10138  0047E2                     u4601:
 10139  0047E2  EFF9  F023         	goto	l3956
 10140  0047E6                     u4600:
 10141  0047E6  6C01               	negf	___awmod@dividend^0,c
 10142  0047E8  1E02               	comf	(___awmod@dividend+1)^0,f,c
 10143  0047EA  B0D8               	btfsc	status,0,c
 10144  0047EC  2A02               	incf	(___awmod@dividend+1)^0,f,c
 10145  0047EE  0E01               	movlw	1
 10146  0047F0  6E06               	movwf	___awmod@sign^0,c
 10147  0047F2                     l3956:
 10148  0047F2  BE04               	btfsc	(___awmod@divisor+1)^0,7,c
 10149  0047F4  EF00  F024         	goto	u4610
 10150  0047F8  EFFE  F023         	goto	u4611
 10151  0047FC                     u4611:
 10152  0047FC  EF04  F024         	goto	l3960
 10153  004800                     u4610:
 10154  004800  6C03               	negf	___awmod@divisor^0,c
 10155  004802  1E04               	comf	(___awmod@divisor+1)^0,f,c
 10156  004804  B0D8               	btfsc	status,0,c
 10157  004806  2A04               	incf	(___awmod@divisor+1)^0,f,c
 10158  004808                     l3960:
 10159  004808  5003               	movf	___awmod@divisor^0,w,c
 10160  00480A  1004               	iorwf	(___awmod@divisor+1)^0,w,c
 10161  00480C  B4D8               	btfsc	status,2,c
 10162  00480E  EF0B  F024         	goto	u4621
 10163  004812  EF0D  F024         	goto	u4620
 10164  004816                     u4621:
 10165  004816  EF31  F024         	goto	l3976
 10166  00481A                     u4620:
 10167  00481A  0E01               	movlw	1
 10168  00481C  6E05               	movwf	___awmod@counter^0,c
 10169  00481E  EF15  F024         	goto	l3966
 10170  004822                     l3964:
 10171  004822  90D8               	bcf	status,0,c
 10172  004824  3603               	rlcf	___awmod@divisor^0,f,c
 10173  004826  3604               	rlcf	(___awmod@divisor+1)^0,f,c
 10174  004828  2A05               	incf	___awmod@counter^0,f,c
 10175  00482A                     l3966:
 10176  00482A  AE04               	btfss	(___awmod@divisor+1)^0,7,c
 10177  00482C  EF1A  F024         	goto	u4631
 10178  004830  EF1C  F024         	goto	u4630
 10179  004834                     u4631:
 10180  004834  EF11  F024         	goto	l3964
 10181  004838                     u4630:
 10182  004838                     l3968:
 10183  004838  5003               	movf	___awmod@divisor^0,w,c
 10184  00483A  5C01               	subwf	___awmod@dividend^0,w,c
 10185  00483C  5004               	movf	(___awmod@divisor+1)^0,w,c
 10186  00483E  5802               	subwfb	(___awmod@dividend+1)^0,w,c
 10187  004840  A0D8               	btfss	status,0,c
 10188  004842  EF25  F024         	goto	u4641
 10189  004846  EF27  F024         	goto	u4640
 10190  00484A                     u4641:
 10191  00484A  EF2B  F024         	goto	l3972
 10192  00484E                     u4640:
 10193  00484E  5003               	movf	___awmod@divisor^0,w,c
 10194  004850  5E01               	subwf	___awmod@dividend^0,f,c
 10195  004852  5004               	movf	(___awmod@divisor+1)^0,w,c
 10196  004854  5A02               	subwfb	(___awmod@dividend+1)^0,f,c
 10197  004856                     l3972:
 10198  004856  90D8               	bcf	status,0,c
 10199  004858  3204               	rrcf	(___awmod@divisor+1)^0,f,c
 10200  00485A  3203               	rrcf	___awmod@divisor^0,f,c
 10201  00485C  2E05               	decfsz	___awmod@counter^0,f,c
 10202  00485E  EF1C  F024         	goto	l3968
 10203  004862                     l3976:
 10204  004862  5006               	movf	___awmod@sign^0,w,c
 10205  004864  B4D8               	btfsc	status,2,c
 10206  004866  EF37  F024         	goto	u4651
 10207  00486A  EF39  F024         	goto	u4650
 10208  00486E                     u4651:
 10209  00486E  EF3D  F024         	goto	l3980
 10210  004872                     u4650:
 10211  004872  6C01               	negf	___awmod@dividend^0,c
 10212  004874  1E02               	comf	(___awmod@dividend+1)^0,f,c
 10213  004876  B0D8               	btfsc	status,0,c
 10214  004878  2A02               	incf	(___awmod@dividend+1)^0,f,c
 10215  00487A                     l3980:
 10216  00487A  C001  F001         	movff	___awmod@dividend,?___awmod
 10217  00487E  C002  F002         	movff	___awmod@dividend+1,?___awmod+1
 10218  004882  0012               	return		;funcret
 10219  004884                     __end_of___awmod:
 10220                           	callstack 0
 10221                           
 10222 ;; *************** function ___awdiv *****************
 10223 ;; Defined at:
 10224 ;;		line 7 in file "/Applications/microchip/xc8/v2.31/pic/sources/c99/common/awdiv.c"
 10225 ;; Parameters:    Size  Location     Type
 10226 ;;  dividend        2    5[COMRAM] int 
 10227 ;;  divisor         2    7[COMRAM] int 
 10228 ;; Auto vars:     Size  Location     Type
 10229 ;;  quotient        2   11[COMRAM] int 
 10230 ;;  sign            1   10[COMRAM] unsigned char 
 10231 ;;  counter         1    9[COMRAM] unsigned char 
 10232 ;; Return value:  Size  Location     Type
 10233 ;;                  2    5[COMRAM] int 
 10234 ;; Registers used:
 10235 ;;		wreg, status,2, status,0
 10236 ;; Tracked objects:
 10237 ;;		On entry : 0/0
 10238 ;;		On exit  : 0/0
 10239 ;;		Unchanged: 0/0
 10240 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 10241 ;;      Params:         4       0       0       0       0       0       0       0       0
 10242 ;;      Locals:         4       0       0       0       0       0       0       0       0
 10243 ;;      Temps:          0       0       0       0       0       0       0       0       0
 10244 ;;      Totals:         8       0       0       0       0       0       0       0       0
 10245 ;;Total ram usage:        8 bytes
 10246 ;; Hardware stack levels used:    1
 10247 ;; This function calls:
 10248 ;;		Nothing
 10249 ;; This function is called by:
 10250 ;;		_SensorLM35
 10251 ;;		_Mostrar_Reloj
 10252 ;;		_Alarma
 10253 ;;		_efgtoa
 10254 ;; This function uses a non-reentrant model
 10255 ;;
 10256                           
 10257                           	psect	text37
 10258  004710                     __ptext37:
 10259                           	callstack 0
 10260  004710                     ___awdiv:
 10261                           	callstack 25
 10262  004710  0E00               	movlw	0
 10263  004712  6E0B               	movwf	___awdiv@sign^0,c
 10264  004714  BE09               	btfsc	(___awdiv@divisor+1)^0,7,c
 10265  004716  EF91  F023         	goto	u4540
 10266  00471A  EF8F  F023         	goto	u4541
 10267  00471E                     u4541:
 10268  00471E  EF97  F023         	goto	l3912
 10269  004722                     u4540:
 10270  004722  6C08               	negf	___awdiv@divisor^0,c
 10271  004724  1E09               	comf	(___awdiv@divisor+1)^0,f,c
 10272  004726  B0D8               	btfsc	status,0,c
 10273  004728  2A09               	incf	(___awdiv@divisor+1)^0,f,c
 10274  00472A  0E01               	movlw	1
 10275  00472C  6E0B               	movwf	___awdiv@sign^0,c
 10276  00472E                     l3912:
 10277  00472E  BE07               	btfsc	(___awdiv@dividend+1)^0,7,c
 10278  004730  EF9E  F023         	goto	u4550
 10279  004734  EF9C  F023         	goto	u4551
 10280  004738                     u4551:
 10281  004738  EFA4  F023         	goto	l3918
 10282  00473C                     u4550:
 10283  00473C  6C06               	negf	___awdiv@dividend^0,c
 10284  00473E  1E07               	comf	(___awdiv@dividend+1)^0,f,c
 10285  004740  B0D8               	btfsc	status,0,c
 10286  004742  2A07               	incf	(___awdiv@dividend+1)^0,f,c
 10287  004744  0E01               	movlw	1
 10288  004746  1A0B               	xorwf	___awdiv@sign^0,f,c
 10289  004748                     l3918:
 10290  004748  0E00               	movlw	0
 10291  00474A  6E0D               	movwf	(___awdiv@quotient+1)^0,c
 10292  00474C  0E00               	movlw	0
 10293  00474E  6E0C               	movwf	___awdiv@quotient^0,c
 10294  004750  5008               	movf	___awdiv@divisor^0,w,c
 10295  004752  1009               	iorwf	(___awdiv@divisor+1)^0,w,c
 10296  004754  B4D8               	btfsc	status,2,c
 10297  004756  EFAF  F023         	goto	u4561
 10298  00475A  EFB1  F023         	goto	u4560
 10299  00475E                     u4561:
 10300  00475E  EFD9  F023         	goto	l3940
 10301  004762                     u4560:
 10302  004762  0E01               	movlw	1
 10303  004764  6E0A               	movwf	___awdiv@counter^0,c
 10304  004766  EFB9  F023         	goto	l3926
 10305  00476A                     l3924:
 10306  00476A  90D8               	bcf	status,0,c
 10307  00476C  3608               	rlcf	___awdiv@divisor^0,f,c
 10308  00476E  3609               	rlcf	(___awdiv@divisor+1)^0,f,c
 10309  004770  2A0A               	incf	___awdiv@counter^0,f,c
 10310  004772                     l3926:
 10311  004772  AE09               	btfss	(___awdiv@divisor+1)^0,7,c
 10312  004774  EFBE  F023         	goto	u4571
 10313  004778  EFC0  F023         	goto	u4570
 10314  00477C                     u4571:
 10315  00477C  EFB5  F023         	goto	l3924
 10316  004780                     u4570:
 10317  004780                     l3928:
 10318  004780  90D8               	bcf	status,0,c
 10319  004782  360C               	rlcf	___awdiv@quotient^0,f,c
 10320  004784  360D               	rlcf	(___awdiv@quotient+1)^0,f,c
 10321  004786  5008               	movf	___awdiv@divisor^0,w,c
 10322  004788  5C06               	subwf	___awdiv@dividend^0,w,c
 10323  00478A  5009               	movf	(___awdiv@divisor+1)^0,w,c
 10324  00478C  5807               	subwfb	(___awdiv@dividend+1)^0,w,c
 10325  00478E  A0D8               	btfss	status,0,c
 10326  004790  EFCC  F023         	goto	u4581
 10327  004794  EFCE  F023         	goto	u4580
 10328  004798                     u4581:
 10329  004798  EFD3  F023         	goto	l3936
 10330  00479C                     u4580:
 10331  00479C  5008               	movf	___awdiv@divisor^0,w,c
 10332  00479E  5E06               	subwf	___awdiv@dividend^0,f,c
 10333  0047A0  5009               	movf	(___awdiv@divisor+1)^0,w,c
 10334  0047A2  5A07               	subwfb	(___awdiv@dividend+1)^0,f,c
 10335  0047A4  800C               	bsf	___awdiv@quotient^0,0,c
 10336  0047A6                     l3936:
 10337  0047A6  90D8               	bcf	status,0,c
 10338  0047A8  3209               	rrcf	(___awdiv@divisor+1)^0,f,c
 10339  0047AA  3208               	rrcf	___awdiv@divisor^0,f,c
 10340  0047AC  2E0A               	decfsz	___awdiv@counter^0,f,c
 10341  0047AE  EFC0  F023         	goto	l3928
 10342  0047B2                     l3940:
 10343  0047B2  500B               	movf	___awdiv@sign^0,w,c
 10344  0047B4  B4D8               	btfsc	status,2,c
 10345  0047B6  EFDF  F023         	goto	u4591
 10346  0047BA  EFE1  F023         	goto	u4590
 10347  0047BE                     u4591:
 10348  0047BE  EFE5  F023         	goto	l3944
 10349  0047C2                     u4590:
 10350  0047C2  6C0C               	negf	___awdiv@quotient^0,c
 10351  0047C4  1E0D               	comf	(___awdiv@quotient+1)^0,f,c
 10352  0047C6  B0D8               	btfsc	status,0,c
 10353  0047C8  2A0D               	incf	(___awdiv@quotient+1)^0,f,c
 10354  0047CA                     l3944:
 10355  0047CA  C00C  F006         	movff	___awdiv@quotient,?___awdiv
 10356  0047CE  C00D  F007         	movff	___awdiv@quotient+1,?___awdiv+1
 10357  0047D2  0012               	return		;funcret
 10358  0047D4                     __end_of___awdiv:
 10359                           	callstack 0
 10360                           
 10361 ;; *************** function _dtoa *****************
 10362 ;; Defined at:
 10363 ;;		line 287 in file "/Applications/microchip/xc8/v2.31/pic/sources/c99/common/doprnt.c"
 10364 ;; Parameters:    Size  Location     Type
 10365 ;;  fp              2   30[COMRAM] PTR struct _IO_FILE
 10366 ;;		 -> NULL(0), sprintf@f(6), 
 10367 ;;  d               8   32[COMRAM] long long 
 10368 ;; Auto vars:     Size  Location     Type
 10369 ;;  n               8   56[COMRAM] long long 
 10370 ;;  i               2   64[COMRAM] int 
 10371 ;;  s               2   54[COMRAM] int 
 10372 ;;  w               2   52[COMRAM] int 
 10373 ;;  p               2   50[COMRAM] int 
 10374 ;; Return value:  Size  Location     Type
 10375 ;;                  2   30[COMRAM] int 
 10376 ;; Registers used:
 10377 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
 10378 ;; Tracked objects:
 10379 ;;		On entry : 0/0
 10380 ;;		On exit  : 0/0
 10381 ;;		Unchanged: 0/0
 10382 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 10383 ;;      Params:        10       0       0       0       0       0       0       0       0
 10384 ;;      Locals:        18       0       0       0       0       0       0       0       0
 10385 ;;      Temps:          8       0       0       0       0       0       0       0       0
 10386 ;;      Totals:        36       0       0       0       0       0       0       0       0
 10387 ;;Total ram usage:       36 bytes
 10388 ;; Hardware stack levels used:    1
 10389 ;; Hardware stack levels required when called:    4
 10390 ;; This function calls:
 10391 ;;		___aodiv
 10392 ;;		___aomod
 10393 ;;		_abs
 10394 ;;		_pad
 10395 ;; This function is called by:
 10396 ;;		_vfpfcnvrt
 10397 ;; This function uses a non-reentrant model
 10398 ;;
 10399                           
 10400                           	psect	text38
 10401  002E42                     __ptext38:
 10402                           	callstack 0
 10403  002E42                     _dtoa:
 10404                           	callstack 22
 10405  002E42                     
 10406                           ;/Applications/microchip/xc8/v2.31/pic/sources/c99/common/doprnt.c: 287: static int dtoa
      +                          (FILE *fp, long long d);/Applications/microchip/xc8/v2.31/pic/sources/c99/common/doprnt.
      +                          c: 288: {;/Applications/microchip/xc8/v2.31/pic/sources/c99/common/doprnt.c: 289:     in
      +                          t i, p, s, w;;/Applications/microchip/xc8/v2.31/pic/sources/c99/common/doprnt.c: 290:   
      +                            long long n;;/Applications/microchip/xc8/v2.31/pic/sources/c99/common/doprnt.c: 293:  
      +                             n = d;
 10407  002E42  C021  F039         	movff	dtoa@d,dtoa@n
 10408  002E46  C022  F03A         	movff	dtoa@d+1,dtoa@n+1
 10409  002E4A  C023  F03B         	movff	dtoa@d+2,dtoa@n+2
 10410  002E4E  C024  F03C         	movff	dtoa@d+3,dtoa@n+3
 10411  002E52  C025  F03D         	movff	dtoa@d+4,dtoa@n+4
 10412  002E56  C026  F03E         	movff	dtoa@d+5,dtoa@n+5
 10413  002E5A  C027  F03F         	movff	dtoa@d+6,dtoa@n+6
 10414  002E5E  C028  F040         	movff	dtoa@d+7,dtoa@n+7
 10415  002E62                     
 10416                           ;/Applications/microchip/xc8/v2.31/pic/sources/c99/common/doprnt.c: 294:     s = n < 0 ?
      +                           1 : 0;
 10417  002E62  BE40               	btfsc	(dtoa@n+7)^0,7,c
 10418  002E64  EF36  F017         	goto	u5081
 10419  002E68  EF39  F017         	goto	u5080
 10420  002E6C                     u5081:
 10421  002E6C  0E01               	movlw	1
 10422  002E6E  EF3A  F017         	goto	u5090
 10423  002E72                     u5080:
 10424  002E72  0E00               	movlw	0
 10425  002E74                     u5090:
 10426  002E74  6E37               	movwf	dtoa@s^0,c
 10427  002E76  6A38               	clrf	(dtoa@s+1)^0,c
 10428                           
 10429                           ;/Applications/microchip/xc8/v2.31/pic/sources/c99/common/doprnt.c: 295:     if (s) {
 10430  002E78  5037               	movf	dtoa@s^0,w,c
 10431  002E7A  1038               	iorwf	(dtoa@s+1)^0,w,c
 10432  002E7C  B4D8               	btfsc	status,2,c
 10433  002E7E  EF43  F017         	goto	u5101
 10434  002E82  EF45  F017         	goto	u5100
 10435  002E86                     u5101:
 10436  002E86  EF55  F017         	goto	l4186
 10437  002E8A                     u5100:
 10438  002E8A                     
 10439                           ;/Applications/microchip/xc8/v2.31/pic/sources/c99/common/doprnt.c: 296:         n = -n;
 10440  002E8A  1E40               	comf	(dtoa@n+7)^0,f,c
 10441  002E8C  1E3F               	comf	(dtoa@n+6)^0,f,c
 10442  002E8E  1E3E               	comf	(dtoa@n+5)^0,f,c
 10443  002E90  1E3D               	comf	(dtoa@n+4)^0,f,c
 10444  002E92  1E3C               	comf	(dtoa@n+3)^0,f,c
 10445  002E94  1E3B               	comf	(dtoa@n+2)^0,f,c
 10446  002E96  1E3A               	comf	(dtoa@n+1)^0,f,c
 10447  002E98  6C39               	negf	dtoa@n^0,c
 10448  002E9A  0E00               	movlw	0
 10449  002E9C  223A               	addwfc	(dtoa@n+1)^0,f,c
 10450  002E9E  223B               	addwfc	(dtoa@n+2)^0,f,c
 10451  002EA0  223C               	addwfc	(dtoa@n+3)^0,f,c
 10452  002EA2  223D               	addwfc	(dtoa@n+4)^0,f,c
 10453  002EA4  223E               	addwfc	(dtoa@n+5)^0,f,c
 10454  002EA6  223F               	addwfc	(dtoa@n+6)^0,f,c
 10455  002EA8  2240               	addwfc	(dtoa@n+7)^0,f,c
 10456  002EAA                     l4186:
 10457                           
 10458                           ;/Applications/microchip/xc8/v2.31/pic/sources/c99/common/doprnt.c: 300:     if (!(prec 
      +                          < 0)) {
 10459  002EAA  0100               	movlb	0	; () banked
 10460  002EAC  BFD7               	btfsc	(_prec+1)& (0+255),7,b
 10461  002EAE  EF5B  F017         	goto	u5111
 10462  002EB2  EF5D  F017         	goto	u5110
 10463  002EB6                     u5111:
 10464  002EB6  EF5E  F017         	goto	l4190
 10465  002EBA                     u5110:
 10466  002EBA                     
 10467                           ; BSR set to: 0
 10468                           ;/Applications/microchip/xc8/v2.31/pic/sources/c99/common/doprnt.c: 301:         flags &
      +                          = ~(1 << 1);
 10469  002EBA  93D8               	bcf	_flags& (0+255),1,b
 10470  002EBC                     l4190:
 10471                           
 10472                           ; BSR set to: 0
 10473                           ;/Applications/microchip/xc8/v2.31/pic/sources/c99/common/doprnt.c: 303:     p = (0 < pr
      +                          ec) ? prec : 1;
 10474  002EBC  BFD7               	btfsc	(_prec+1)& (0+255),7,b
 10475  002EBE  EF6B  F017         	goto	u5120
 10476  002EC2  51D7               	movf	(_prec+1)& (0+255),w,b
 10477  002EC4  E106               	bnz	u5121
 10478  002EC6  05D6               	decf	_prec& (0+255),w,b
 10479  002EC8  B0D8               	btfsc	status,0,c
 10480  002ECA  EF69  F017         	goto	u5121
 10481  002ECE  EF6B  F017         	goto	u5120
 10482  002ED2                     u5121:
 10483  002ED2  EF71  F017         	goto	l983
 10484  002ED6                     u5120:
 10485  002ED6                     
 10486                           ; BSR set to: 0
 10487  002ED6  0E00               	movlw	0
 10488  002ED8  6E34               	movwf	(dtoa@p+1)^0,c
 10489  002EDA  0E01               	movlw	1
 10490  002EDC  6E33               	movwf	dtoa@p^0,c
 10491  002EDE  EF75  F017         	goto	l985
 10492  002EE2                     l983:
 10493                           
 10494                           ; BSR set to: 0
 10495  002EE2  C0D6  F033         	movff	_prec,dtoa@p
 10496  002EE6  C0D7  F034         	movff	_prec+1,dtoa@p+1
 10497  002EEA                     l985:
 10498                           
 10499                           ; BSR set to: 0
 10500                           ;/Applications/microchip/xc8/v2.31/pic/sources/c99/common/doprnt.c: 304:     w = width;
 10501  002EEA  C0D4  F035         	movff	_width,dtoa@w
 10502  002EEE  C0D5  F036         	movff	_width+1,dtoa@w+1
 10503  002EF2                     
 10504                           ; BSR set to: 0
 10505                           ;/Applications/microchip/xc8/v2.31/pic/sources/c99/common/doprnt.c: 305:     if (s || (f
      +                          lags & (1 << 2))) {
 10506  002EF2  5037               	movf	dtoa@s^0,w,c
 10507  002EF4  1038               	iorwf	(dtoa@s+1)^0,w,c
 10508  002EF6  A4D8               	btfss	status,2,c
 10509  002EF8  EF80  F017         	goto	u5131
 10510  002EFC  EF82  F017         	goto	u5130
 10511  002F00                     u5131:
 10512  002F00  EF89  F017         	goto	l4198
 10513  002F04                     u5130:
 10514  002F04                     
 10515                           ; BSR set to: 0
 10516  002F04  A5D8               	btfss	_flags& (0+255),2,b
 10517  002F06  EF87  F017         	goto	u5141
 10518  002F0A  EF89  F017         	goto	u5140
 10519  002F0E                     u5141:
 10520  002F0E  EF8C  F017         	goto	l4200
 10521  002F12                     u5140:
 10522  002F12                     l4198:
 10523                           
 10524                           ; BSR set to: 0
 10525                           ;/Applications/microchip/xc8/v2.31/pic/sources/c99/common/doprnt.c: 306:         --w;
 10526  002F12  0635               	decf	dtoa@w^0,f,c
 10527  002F14  A0D8               	btfss	status,0,c
 10528  002F16  0636               	decf	(dtoa@w+1)^0,f,c
 10529  002F18                     l4200:
 10530                           
 10531                           ; BSR set to: 0
 10532                           ;/Applications/microchip/xc8/v2.31/pic/sources/c99/common/doprnt.c: 310:     i = sizeof(
      +                          dbuf) - 1;
 10533  002F18  0E00               	movlw	0
 10534  002F1A  6E42               	movwf	(dtoa@i+1)^0,c
 10535  002F1C  0E4F               	movlw	79
 10536  002F1E  6E41               	movwf	dtoa@i^0,c
 10537  002F20                     
 10538                           ; BSR set to: 0
 10539                           ;/Applications/microchip/xc8/v2.31/pic/sources/c99/common/doprnt.c: 311:     dbuf[i] = '
      +                          \0';
 10540  002F20  0E00               	movlw	0
 10541  002F22  0101               	movlb	1	; () banked
 10542  002F24  6F6F               	movwf	(_dbuf+79)& (0+255),b
 10543                           
 10544                           ;/Applications/microchip/xc8/v2.31/pic/sources/c99/common/doprnt.c: 312:     while (!(i 
      +                          < 1) && (n || (0 < p) || ((0 < w) && (flags & (1 << 1))))) {
 10545  002F26  EF11  F018         	goto	l4214
 10546  002F2A                     l4204:
 10547                           
 10548                           ;/Applications/microchip/xc8/v2.31/pic/sources/c99/common/doprnt.c: 313:         --i;
 10549  002F2A  0641               	decf	dtoa@i^0,f,c
 10550  002F2C  A0D8               	btfss	status,0,c
 10551  002F2E  0642               	decf	(dtoa@i+1)^0,f,c
 10552  002F30                     
 10553                           ;/Applications/microchip/xc8/v2.31/pic/sources/c99/common/doprnt.c: 314:         dbuf[i]
      +                           = (char)((int)'0' + abs(n % 10));
 10554  002F30  0E20               	movlw	low _dbuf
 10555  002F32  2441               	addwf	dtoa@i^0,w,c
 10556  002F34  6ED9               	movwf	fsr2l,c
 10557  002F36  0E01               	movlw	high _dbuf
 10558  002F38  2042               	addwfc	(dtoa@i+1)^0,w,c
 10559  002F3A  6EDA               	movwf	fsr2h,c
 10560  002F3C  C039  F001         	movff	dtoa@n,___aomod@dividend
 10561  002F40  C03A  F002         	movff	dtoa@n+1,___aomod@dividend+1
 10562  002F44  C03B  F003         	movff	dtoa@n+2,___aomod@dividend+2
 10563  002F48  C03C  F004         	movff	dtoa@n+3,___aomod@dividend+3
 10564  002F4C  C03D  F005         	movff	dtoa@n+4,___aomod@dividend+4
 10565  002F50  C03E  F006         	movff	dtoa@n+5,___aomod@dividend+5
 10566  002F54  C03F  F007         	movff	dtoa@n+6,___aomod@dividend+6
 10567  002F58  C040  F008         	movff	dtoa@n+7,___aomod@dividend+7
 10568  002F5C  0E0A               	movlw	10
 10569  002F5E  6E09               	movwf	___aomod@divisor^0,c
 10570  002F60  0E00               	movlw	0
 10571  002F62  6E0A               	movwf	(___aomod@divisor+1)^0,c
 10572  002F64  0E00               	movlw	0
 10573  002F66  6E0B               	movwf	(___aomod@divisor+2)^0,c
 10574  002F68  0E00               	movlw	0
 10575  002F6A  6E0C               	movwf	(___aomod@divisor+3)^0,c
 10576  002F6C  0E00               	movlw	0
 10577  002F6E  6E0D               	movwf	(___aomod@divisor+4)^0,c
 10578  002F70  0E00               	movlw	0
 10579  002F72  6E0E               	movwf	(___aomod@divisor+5)^0,c
 10580  002F74  0E00               	movlw	0
 10581  002F76  6E0F               	movwf	(___aomod@divisor+6)^0,c
 10582  002F78  0E00               	movlw	0
 10583  002F7A  6E10               	movwf	(___aomod@divisor+7)^0,c
 10584  002F7C  EC87  F01E         	call	___aomod	;wreg free
 10585  002F80  C001  F029         	movff	?___aomod,??_dtoa
 10586  002F84  C002  F02A         	movff	?___aomod+1,??_dtoa+1
 10587  002F88  C003  F02B         	movff	?___aomod+2,??_dtoa+2
 10588  002F8C  C004  F02C         	movff	?___aomod+3,??_dtoa+3
 10589  002F90  C005  F02D         	movff	?___aomod+4,??_dtoa+4
 10590  002F94  C006  F02E         	movff	?___aomod+5,??_dtoa+5
 10591  002F98  C007  F02F         	movff	?___aomod+6,??_dtoa+6
 10592  002F9C  C008  F030         	movff	?___aomod+7,??_dtoa+7
 10593  002FA0  C029  F013         	movff	??_dtoa,abs@a
 10594  002FA4  C02B  F014         	movff	??_dtoa+2,abs@a+1
 10595  002FA8  EC5B  F027         	call	_abs	;wreg free
 10596  002FAC  5013               	movf	?_abs^0,w,c
 10597  002FAE  0F30               	addlw	48
 10598  002FB0  6EDF               	movwf	indf2,c
 10599  002FB2                     
 10600                           ;/Applications/microchip/xc8/v2.31/pic/sources/c99/common/doprnt.c: 315:         --p;
 10601  002FB2  0633               	decf	dtoa@p^0,f,c
 10602  002FB4  A0D8               	btfss	status,0,c
 10603  002FB6  0634               	decf	(dtoa@p+1)^0,f,c
 10604  002FB8                     
 10605                           ;/Applications/microchip/xc8/v2.31/pic/sources/c99/common/doprnt.c: 316:         --w;
 10606  002FB8  0635               	decf	dtoa@w^0,f,c
 10607  002FBA  A0D8               	btfss	status,0,c
 10608  002FBC  0636               	decf	(dtoa@w+1)^0,f,c
 10609  002FBE                     
 10610                           ;/Applications/microchip/xc8/v2.31/pic/sources/c99/common/doprnt.c: 317:         n = n /
      +                           10;
 10611  002FBE  C039  F001         	movff	dtoa@n,___aodiv@dividend
 10612  002FC2  C03A  F002         	movff	dtoa@n+1,___aodiv@dividend+1
 10613  002FC6  C03B  F003         	movff	dtoa@n+2,___aodiv@dividend+2
 10614  002FCA  C03C  F004         	movff	dtoa@n+3,___aodiv@dividend+3
 10615  002FCE  C03D  F005         	movff	dtoa@n+4,___aodiv@dividend+4
 10616  002FD2  C03E  F006         	movff	dtoa@n+5,___aodiv@dividend+5
 10617  002FD6  C03F  F007         	movff	dtoa@n+6,___aodiv@dividend+6
 10618  002FDA  C040  F008         	movff	dtoa@n+7,___aodiv@dividend+7
 10619  002FDE  0E0A               	movlw	10
 10620  002FE0  6E09               	movwf	___aodiv@divisor^0,c
 10621  002FE2  0E00               	movlw	0
 10622  002FE4  6E0A               	movwf	(___aodiv@divisor+1)^0,c
 10623  002FE6  0E00               	movlw	0
 10624  002FE8  6E0B               	movwf	(___aodiv@divisor+2)^0,c
 10625  002FEA  0E00               	movlw	0
 10626  002FEC  6E0C               	movwf	(___aodiv@divisor+3)^0,c
 10627  002FEE  0E00               	movlw	0
 10628  002FF0  6E0D               	movwf	(___aodiv@divisor+4)^0,c
 10629  002FF2  0E00               	movlw	0
 10630  002FF4  6E0E               	movwf	(___aodiv@divisor+5)^0,c
 10631  002FF6  0E00               	movlw	0
 10632  002FF8  6E0F               	movwf	(___aodiv@divisor+6)^0,c
 10633  002FFA  0E00               	movlw	0
 10634  002FFC  6E10               	movwf	(___aodiv@divisor+7)^0,c
 10635  002FFE  ECC3  F01D         	call	___aodiv	;wreg free
 10636  003002  C001  F039         	movff	?___aodiv,dtoa@n
 10637  003006  C002  F03A         	movff	?___aodiv+1,dtoa@n+1
 10638  00300A  C003  F03B         	movff	?___aodiv+2,dtoa@n+2
 10639  00300E  C004  F03C         	movff	?___aodiv+3,dtoa@n+3
 10640  003012  C005  F03D         	movff	?___aodiv+4,dtoa@n+4
 10641  003016  C006  F03E         	movff	?___aodiv+5,dtoa@n+5
 10642  00301A  C007  F03F         	movff	?___aodiv+6,dtoa@n+6
 10643  00301E  C008  F040         	movff	?___aodiv+7,dtoa@n+7
 10644  003022                     l4214:
 10645                           
 10646                           ;/Applications/microchip/xc8/v2.31/pic/sources/c99/common/doprnt.c: 312:     while (!(i 
      +                          < 1) && (n || (0 < p) || ((0 < w) && (flags & (1 << 1))))) {
 10647  003022  BE42               	btfsc	(dtoa@i+1)^0,7,c
 10648  003024  EF1C  F018         	goto	u5151
 10649  003028  5042               	movf	(dtoa@i+1)^0,w,c
 10650  00302A  E108               	bnz	u5150
 10651  00302C  0441               	decf	dtoa@i^0,w,c
 10652  00302E  A0D8               	btfss	status,0,c
 10653  003030  EF1C  F018         	goto	u5151
 10654  003034  EF1E  F018         	goto	u5150
 10655  003038                     u5151:
 10656  003038  EF4F  F018         	goto	l4224
 10657  00303C                     u5150:
 10658  00303C  5039               	movf	dtoa@n^0,w,c
 10659  00303E  103A               	iorwf	(dtoa@n+1)^0,w,c
 10660  003040  103B               	iorwf	(dtoa@n+2)^0,w,c
 10661  003042  103C               	iorwf	(dtoa@n+3)^0,w,c
 10662  003044  103D               	iorwf	(dtoa@n+4)^0,w,c
 10663  003046  103E               	iorwf	(dtoa@n+5)^0,w,c
 10664  003048  103F               	iorwf	(dtoa@n+6)^0,w,c
 10665  00304A  1040               	iorwf	(dtoa@n+7)^0,w,c
 10666  00304C  A4D8               	btfss	status,2,c
 10667  00304E  EF2B  F018         	goto	u5161
 10668  003052  EF2D  F018         	goto	u5160
 10669  003056                     u5161:
 10670  003056  EF95  F017         	goto	l4204
 10671  00305A                     u5160:
 10672  00305A  BE34               	btfsc	(dtoa@p+1)^0,7,c
 10673  00305C  EF3A  F018         	goto	u5170
 10674  003060  5034               	movf	(dtoa@p+1)^0,w,c
 10675  003062  E106               	bnz	u5171
 10676  003064  0433               	decf	dtoa@p^0,w,c
 10677  003066  B0D8               	btfsc	status,0,c
 10678  003068  EF38  F018         	goto	u5171
 10679  00306C  EF3A  F018         	goto	u5170
 10680  003070                     u5171:
 10681  003070  EF95  F017         	goto	l4204
 10682  003074                     u5170:
 10683  003074  BE36               	btfsc	(dtoa@w+1)^0,7,c
 10684  003076  EF45  F018         	goto	u5181
 10685  00307A  5036               	movf	(dtoa@w+1)^0,w,c
 10686  00307C  E108               	bnz	u5180
 10687  00307E  0435               	decf	dtoa@w^0,w,c
 10688  003080  A0D8               	btfss	status,0,c
 10689  003082  EF45  F018         	goto	u5181
 10690  003086  EF47  F018         	goto	u5180
 10691  00308A                     u5181:
 10692  00308A  EF4F  F018         	goto	l4224
 10693  00308E                     u5180:
 10694  00308E  0100               	movlb	0	; () banked
 10695  003090  B3D8               	btfsc	_flags& (0+255),1,b
 10696  003092  EF4D  F018         	goto	u5191
 10697  003096  EF4F  F018         	goto	u5190
 10698  00309A                     u5191:
 10699  00309A  EF95  F017         	goto	l4204
 10700  00309E                     u5190:
 10701  00309E                     l4224:
 10702                           
 10703                           ;/Applications/microchip/xc8/v2.31/pic/sources/c99/common/doprnt.c: 321:     if (s || (f
      +                          lags & (1 << 2))) {
 10704  00309E  5037               	movf	dtoa@s^0,w,c
 10705  0030A0  1038               	iorwf	(dtoa@s+1)^0,w,c
 10706  0030A2  A4D8               	btfss	status,2,c
 10707  0030A4  EF56  F018         	goto	u5201
 10708  0030A8  EF58  F018         	goto	u5200
 10709  0030AC                     u5201:
 10710  0030AC  EF60  F018         	goto	l4228
 10711  0030B0                     u5200:
 10712  0030B0  0100               	movlb	0	; () banked
 10713  0030B2  A5D8               	btfss	_flags& (0+255),2,b
 10714  0030B4  EF5E  F018         	goto	u5211
 10715  0030B8  EF60  F018         	goto	u5210
 10716  0030BC                     u5211:
 10717  0030BC  EF7E  F018         	goto	l4238
 10718  0030C0                     u5210:
 10719  0030C0                     l4228:
 10720                           
 10721                           ;/Applications/microchip/xc8/v2.31/pic/sources/c99/common/doprnt.c: 322:         --i;
 10722  0030C0  0641               	decf	dtoa@i^0,f,c
 10723  0030C2  A0D8               	btfss	status,0,c
 10724  0030C4  0642               	decf	(dtoa@i+1)^0,f,c
 10725  0030C6                     
 10726                           ;/Applications/microchip/xc8/v2.31/pic/sources/c99/common/doprnt.c: 323:         dbuf[i]
      +                           = s ? '-' : '+';
 10727  0030C6  5037               	movf	dtoa@s^0,w,c
 10728  0030C8  1038               	iorwf	(dtoa@s+1)^0,w,c
 10729  0030CA  A4D8               	btfss	status,2,c
 10730  0030CC  EF6A  F018         	goto	u5221
 10731  0030D0  EF6C  F018         	goto	u5220
 10732  0030D4                     u5221:
 10733  0030D4  EF72  F018         	goto	l4234
 10734  0030D8                     u5220:
 10735  0030D8  0E00               	movlw	0
 10736  0030DA  6E32               	movwf	(_dtoa$1253+1)^0,c
 10737  0030DC  0E2B               	movlw	43
 10738  0030DE  6E31               	movwf	_dtoa$1253^0,c
 10739  0030E0  EF76  F018         	goto	l4236
 10740  0030E4                     l4234:
 10741  0030E4  0E00               	movlw	0
 10742  0030E6  6E32               	movwf	(_dtoa$1253+1)^0,c
 10743  0030E8  0E2D               	movlw	45
 10744  0030EA  6E31               	movwf	_dtoa$1253^0,c
 10745  0030EC                     l4236:
 10746  0030EC  0E20               	movlw	low _dbuf
 10747  0030EE  2441               	addwf	dtoa@i^0,w,c
 10748  0030F0  6ED9               	movwf	fsr2l,c
 10749  0030F2  0E01               	movlw	high _dbuf
 10750  0030F4  2042               	addwfc	(dtoa@i+1)^0,w,c
 10751  0030F6  6EDA               	movwf	fsr2h,c
 10752  0030F8  C031  FFDF         	movff	_dtoa$1253,indf2
 10753  0030FC                     l4238:
 10754                           
 10755                           ;/Applications/microchip/xc8/v2.31/pic/sources/c99/common/doprnt.c: 327:     return pad(
      +                          fp, &dbuf[i], w);
 10756  0030FC  C01F  F014         	movff	dtoa@fp,pad@fp
 10757  003100  C020  F015         	movff	dtoa@fp+1,pad@fp+1
 10758  003104  0E20               	movlw	low _dbuf
 10759  003106  2441               	addwf	dtoa@i^0,w,c
 10760  003108  6E16               	movwf	pad@buf^0,c
 10761  00310A  0E01               	movlw	high _dbuf
 10762  00310C  2042               	addwfc	(dtoa@i+1)^0,w,c
 10763  00310E  6E17               	movwf	(pad@buf+1)^0,c
 10764  003110  C035  F018         	movff	dtoa@w,pad@p
 10765  003114  C036  F019         	movff	dtoa@w+1,pad@p+1
 10766  003118  EC25  F023         	call	_pad	;wreg free
 10767  00311C  C014  F01F         	movff	?_pad,?_dtoa
 10768  003120  C015  F020         	movff	?_pad+1,?_dtoa+1
 10769  003124  0012               	return		;funcret
 10770  003126                     __end_of_dtoa:
 10771                           	callstack 0
 10772                           
 10773 ;; *************** function _pad *****************
 10774 ;; Defined at:
 10775 ;;		line 72 in file "/Applications/microchip/xc8/v2.31/pic/sources/c99/common/doprnt.c"
 10776 ;; Parameters:    Size  Location     Type
 10777 ;;  fp              2   19[COMRAM] PTR struct _IO_FILE
 10778 ;;		 -> NULL(0), sprintf@f(6), 
 10779 ;;  buf             2   21[COMRAM] PTR unsigned char 
 10780 ;;		 -> dbuf(80), 
 10781 ;;  p               2   23[COMRAM] int 
 10782 ;; Auto vars:     Size  Location     Type
 10783 ;;  w               2   28[COMRAM] int 
 10784 ;;  i               2   26[COMRAM] int 
 10785 ;; Return value:  Size  Location     Type
 10786 ;;                  2   19[COMRAM] int 
 10787 ;; Registers used:
 10788 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
 10789 ;; Tracked objects:
 10790 ;;		On entry : 0/0
 10791 ;;		On exit  : 0/0
 10792 ;;		Unchanged: 0/0
 10793 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 10794 ;;      Params:         6       0       0       0       0       0       0       0       0
 10795 ;;      Locals:         4       0       0       0       0       0       0       0       0
 10796 ;;      Temps:          1       0       0       0       0       0       0       0       0
 10797 ;;      Totals:        11       0       0       0       0       0       0       0       0
 10798 ;;Total ram usage:       11 bytes
 10799 ;; Hardware stack levels used:    1
 10800 ;; Hardware stack levels required when called:    3
 10801 ;; This function calls:
 10802 ;;		_fputc
 10803 ;;		_fputs
 10804 ;;		_strlen
 10805 ;; This function is called by:
 10806 ;;		_dtoa
 10807 ;;		_efgtoa
 10808 ;; This function uses a non-reentrant model
 10809 ;;
 10810                           
 10811                           	psect	text39
 10812  00464A                     __ptext39:
 10813                           	callstack 0
 10814  00464A                     _pad:
 10815                           	callstack 22
 10816  00464A                     
 10817                           ;/Applications/microchip/xc8/v2.31/pic/sources/c99/common/doprnt.c: 72: static int pad(F
      +                          ILE *fp, char *buf, int p);/Applications/microchip/xc8/v2.31/pic/sources/c99/common/dopr
      +                          nt.c: 73: {;/Applications/microchip/xc8/v2.31/pic/sources/c99/common/doprnt.c: 74:     i
      +                          nt i, w;;/Applications/microchip/xc8/v2.31/pic/sources/c99/common/doprnt.c: 77:     if (
      +                          flags & (1 << 0)) {
 10818  00464A  0100               	movlb	0	; () banked
 10819  00464C  A1D8               	btfss	_flags& (0+255),0,b
 10820  00464E  EF2B  F023         	goto	u4821
 10821  004652  EF2D  F023         	goto	u4820
 10822  004656                     u4821:
 10823  004656  EF37  F023         	goto	l4078
 10824  00465A                     u4820:
 10825  00465A                     
 10826                           ; BSR set to: 0
 10827                           ;/Applications/microchip/xc8/v2.31/pic/sources/c99/common/doprnt.c: 78:         fputs((c
      +                          onst char *)buf, fp);
 10828  00465A  C016  F00D         	movff	pad@buf,fputs@s
 10829  00465E  C017  F00E         	movff	pad@buf+1,fputs@s+1
 10830  004662  C014  F00F         	movff	pad@fp,fputs@fp
 10831  004666  C015  F010         	movff	pad@fp+1,fputs@fp+1
 10832  00466A  EC18  F027         	call	_fputs	;wreg free
 10833  00466E                     l4078:
 10834                           
 10835                           ;/Applications/microchip/xc8/v2.31/pic/sources/c99/common/doprnt.c: 82:     w = (p < 0) 
      +                          ? 0 : p;
 10836  00466E  BE19               	btfsc	(pad@p+1)^0,7,c
 10837  004670  EF3C  F023         	goto	u4831
 10838  004674  EF3E  F023         	goto	u4830
 10839  004678                     u4831:
 10840  004678  EF44  F023         	goto	l4082
 10841  00467C                     u4830:
 10842  00467C  C018  F01D         	movff	pad@p,pad@w
 10843  004680  C019  F01E         	movff	pad@p+1,pad@w+1
 10844  004684  EF48  F023         	goto	l956
 10845  004688                     l4082:
 10846  004688  0E00               	movlw	0
 10847  00468A  6E1E               	movwf	(pad@w+1)^0,c
 10848  00468C  0E00               	movlw	0
 10849  00468E  6E1D               	movwf	pad@w^0,c
 10850  004690                     l956:
 10851                           
 10852                           ;/Applications/microchip/xc8/v2.31/pic/sources/c99/common/doprnt.c: 83:     i = 0;
 10853  004690  0E00               	movlw	0
 10854  004692  6E1C               	movwf	(pad@i+1)^0,c
 10855  004694  0E00               	movlw	0
 10856  004696  6E1B               	movwf	pad@i^0,c
 10857                           
 10858                           ;/Applications/microchip/xc8/v2.31/pic/sources/c99/common/doprnt.c: 84:     while (i < w
      +                          ) {
 10859  004698  EF5A  F023         	goto	l4088
 10860  00469C                     l4084:
 10861                           
 10862                           ;/Applications/microchip/xc8/v2.31/pic/sources/c99/common/doprnt.c: 85:         fputc(' 
      +                          ', fp);
 10863  00469C  0E00               	movlw	0
 10864  00469E  6E05               	movwf	(fputc@c+1)^0,c
 10865  0046A0  0E20               	movlw	32
 10866  0046A2  6E04               	movwf	fputc@c^0,c
 10867  0046A4  C014  F006         	movff	pad@fp,fputc@fp
 10868  0046A8  C015  F007         	movff	pad@fp+1,fputc@fp+1
 10869  0046AC  ECC0  F022         	call	_fputc	;wreg free
 10870  0046B0                     
 10871                           ;/Applications/microchip/xc8/v2.31/pic/sources/c99/common/doprnt.c: 86:         ++i;
 10872  0046B0  4A1B               	infsnz	pad@i^0,f,c
 10873  0046B2  2A1C               	incf	(pad@i+1)^0,f,c
 10874  0046B4                     l4088:
 10875                           
 10876                           ;/Applications/microchip/xc8/v2.31/pic/sources/c99/common/doprnt.c: 84:     while (i < w
      +                          ) {
 10877  0046B4  501D               	movf	pad@w^0,w,c
 10878  0046B6  5C1B               	subwf	pad@i^0,w,c
 10879  0046B8  501C               	movf	(pad@i+1)^0,w,c
 10880  0046BA  0A80               	xorlw	128
 10881  0046BC  6E1A               	movwf	??_pad^0,c
 10882  0046BE  501E               	movf	(pad@w+1)^0,w,c
 10883  0046C0  0A80               	xorlw	128
 10884  0046C2  581A               	subwfb	??_pad^0,w,c
 10885  0046C4  A0D8               	btfss	status,0,c
 10886  0046C6  EF67  F023         	goto	u4841
 10887  0046CA  EF69  F023         	goto	u4840
 10888  0046CE                     u4841:
 10889  0046CE  EF4E  F023         	goto	l4084
 10890  0046D2                     u4840:
 10891  0046D2                     
 10892                           ;/Applications/microchip/xc8/v2.31/pic/sources/c99/common/doprnt.c: 90:     if (!(flags 
      +                          & (1 << 0))) {
 10893  0046D2  0100               	movlb	0	; () banked
 10894  0046D4  B1D8               	btfsc	_flags& (0+255),0,b
 10895  0046D6  EF6F  F023         	goto	u4851
 10896  0046DA  EF71  F023         	goto	u4850
 10897  0046DE                     u4851:
 10898  0046DE  EF7B  F023         	goto	l4092
 10899  0046E2                     u4850:
 10900  0046E2                     
 10901                           ; BSR set to: 0
 10902                           ;/Applications/microchip/xc8/v2.31/pic/sources/c99/common/doprnt.c: 91:         fputs((c
      +                          onst char *)buf, fp);
 10903  0046E2  C016  F00D         	movff	pad@buf,fputs@s
 10904  0046E6  C017  F00E         	movff	pad@buf+1,fputs@s+1
 10905  0046EA  C014  F00F         	movff	pad@fp,fputs@fp
 10906  0046EE  C015  F010         	movff	pad@fp+1,fputs@fp+1
 10907  0046F2  EC18  F027         	call	_fputs	;wreg free
 10908  0046F6                     l4092:
 10909                           
 10910                           ;/Applications/microchip/xc8/v2.31/pic/sources/c99/common/doprnt.c: 94:     return (int)
      +                          (strlen(buf) + (size_t)w);
 10911  0046F6  C016  F001         	movff	pad@buf,strlen@s
 10912  0046FA  C017  F002         	movff	pad@buf+1,strlen@s+1
 10913  0046FE  ECCF  F027         	call	_strlen	;wreg free
 10914  004702  501D               	movf	pad@w^0,w,c
 10915  004704  2401               	addwf	?_strlen^0,w,c
 10916  004706  6E14               	movwf	?_pad^0,c
 10917  004708  501E               	movf	(pad@w+1)^0,w,c
 10918  00470A  2002               	addwfc	(?_strlen+1)^0,w,c
 10919  00470C  6E15               	movwf	(?_pad+1)^0,c
 10920  00470E  0012               	return		;funcret
 10921  004710                     __end_of_pad:
 10922                           	callstack 0
 10923                           
 10924 ;; *************** function _strlen *****************
 10925 ;; Defined at:
 10926 ;;		line 5 in file "/Applications/microchip/xc8/v2.31/pic/sources/c99/common/strlen.c"
 10927 ;; Parameters:    Size  Location     Type
 10928 ;;  s               2    0[COMRAM] PTR const unsigned char 
 10929 ;;		 -> dbuf(80), 
 10930 ;; Auto vars:     Size  Location     Type
 10931 ;;  a               2    2[COMRAM] PTR const unsigned char 
 10932 ;;		 -> dbuf(80), 
 10933 ;; Return value:  Size  Location     Type
 10934 ;;                  2    0[COMRAM] unsigned int 
 10935 ;; Registers used:
 10936 ;;		wreg, fsr2l, fsr2h, status,2, status,0
 10937 ;; Tracked objects:
 10938 ;;		On entry : 0/0
 10939 ;;		On exit  : 0/0
 10940 ;;		Unchanged: 0/0
 10941 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 10942 ;;      Params:         2       0       0       0       0       0       0       0       0
 10943 ;;      Locals:         2       0       0       0       0       0       0       0       0
 10944 ;;      Temps:          0       0       0       0       0       0       0       0       0
 10945 ;;      Totals:         4       0       0       0       0       0       0       0       0
 10946 ;;Total ram usage:        4 bytes
 10947 ;; Hardware stack levels used:    1
 10948 ;; This function calls:
 10949 ;;		Nothing
 10950 ;; This function is called by:
 10951 ;;		_pad
 10952 ;; This function uses a non-reentrant model
 10953 ;;
 10954                           
 10955                           	psect	text40
 10956  004F9E                     __ptext40:
 10957                           	callstack 0
 10958  004F9E                     _strlen:
 10959                           	callstack 24
 10960  004F9E  C001  F003         	movff	strlen@s,strlen@a
 10961  004FA2  C002  F004         	movff	strlen@s+1,strlen@a+1
 10962  004FA6  EFD7  F027         	goto	l3506
 10963  004FAA                     l3504:
 10964  004FAA  4A01               	infsnz	strlen@s^0,f,c
 10965  004FAC  2A02               	incf	(strlen@s+1)^0,f,c
 10966  004FAE                     l3506:
 10967  004FAE  C001  FFD9         	movff	strlen@s,fsr2l
 10968  004FB2  C002  FFDA         	movff	strlen@s+1,fsr2h
 10969  004FB6  50DF               	movf	indf2,w,c
 10970  004FB8  A4D8               	btfss	status,2,c
 10971  004FBA  EFE1  F027         	goto	u3861
 10972  004FBE  EFE3  F027         	goto	u3860
 10973  004FC2                     u3861:
 10974  004FC2  EFD5  F027         	goto	l3504
 10975  004FC6                     u3860:
 10976  004FC6  5003               	movf	strlen@a^0,w,c
 10977  004FC8  5C01               	subwf	strlen@s^0,w,c
 10978  004FCA  6E01               	movwf	?_strlen^0,c
 10979  004FCC  5004               	movf	(strlen@a+1)^0,w,c
 10980  004FCE  5802               	subwfb	(strlen@s+1)^0,w,c
 10981  004FD0  6E02               	movwf	(?_strlen+1)^0,c
 10982  004FD2  0012               	return		;funcret
 10983  004FD4                     __end_of_strlen:
 10984                           	callstack 0
 10985                           
 10986 ;; *************** function _fputs *****************
 10987 ;; Defined at:
 10988 ;;		line 8 in file "/Applications/microchip/xc8/v2.31/pic/sources/c99/common/nf_fputs.c"
 10989 ;; Parameters:    Size  Location     Type
 10990 ;;  s               2   12[COMRAM] PTR const unsigned char 
 10991 ;;		 -> dbuf(80), 
 10992 ;;  fp              2   14[COMRAM] PTR struct _IO_FILE
 10993 ;;		 -> NULL(0), sprintf@f(6), 
 10994 ;; Auto vars:     Size  Location     Type
 10995 ;;  i               2   17[COMRAM] int 
 10996 ;;  c               1   16[COMRAM] unsigned char 
 10997 ;; Return value:  Size  Location     Type
 10998 ;;                  2   12[COMRAM] int 
 10999 ;; Registers used:
 11000 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
 11001 ;; Tracked objects:
 11002 ;;		On entry : 0/0
 11003 ;;		On exit  : 0/0
 11004 ;;		Unchanged: 0/0
 11005 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 11006 ;;      Params:         4       0       0       0       0       0       0       0       0
 11007 ;;      Locals:         3       0       0       0       0       0       0       0       0
 11008 ;;      Temps:          0       0       0       0       0       0       0       0       0
 11009 ;;      Totals:         7       0       0       0       0       0       0       0       0
 11010 ;;Total ram usage:        7 bytes
 11011 ;; Hardware stack levels used:    1
 11012 ;; Hardware stack levels required when called:    2
 11013 ;; This function calls:
 11014 ;;		_fputc
 11015 ;; This function is called by:
 11016 ;;		_pad
 11017 ;; This function uses a non-reentrant model
 11018 ;;
 11019                           
 11020                           	psect	text41
 11021  004E30                     __ptext41:
 11022                           	callstack 0
 11023  004E30                     _fputs:
 11024                           	callstack 22
 11025  004E30  0E00               	movlw	0
 11026  004E32  6E13               	movwf	(fputs@i+1)^0,c
 11027  004E34  0E00               	movlw	0
 11028  004E36  6E12               	movwf	fputs@i^0,c
 11029  004E38  EF29  F027         	goto	l3500
 11030  004E3C                     l3496:
 11031  004E3C  C011  F004         	movff	fputs@c,fputc@c
 11032  004E40  6A05               	clrf	(fputc@c+1)^0,c
 11033  004E42  C00F  F006         	movff	fputs@fp,fputc@fp
 11034  004E46  C010  F007         	movff	fputs@fp+1,fputc@fp+1
 11035  004E4A  ECC0  F022         	call	_fputc	;wreg free
 11036  004E4E  4A12               	infsnz	fputs@i^0,f,c
 11037  004E50  2A13               	incf	(fputs@i+1)^0,f,c
 11038  004E52                     l3500:
 11039  004E52  5012               	movf	fputs@i^0,w,c
 11040  004E54  240D               	addwf	fputs@s^0,w,c
 11041  004E56  6ED9               	movwf	fsr2l,c
 11042  004E58  5013               	movf	(fputs@i+1)^0,w,c
 11043  004E5A  200E               	addwfc	(fputs@s+1)^0,w,c
 11044  004E5C  6EDA               	movwf	fsr2h,c
 11045  004E5E  50DF               	movf	indf2,w,c
 11046  004E60  6E11               	movwf	fputs@c^0,c
 11047  004E62  5011               	movf	fputs@c^0,w,c
 11048  004E64  A4D8               	btfss	status,2,c
 11049  004E66  EF37  F027         	goto	u3851
 11050  004E6A  EF39  F027         	goto	u3850
 11051  004E6E                     u3851:
 11052  004E6E  EF1E  F027         	goto	l3496
 11053  004E72                     u3850:
 11054  004E72  0012               	return		;funcret
 11055  004E74                     __end_of_fputs:
 11056                           	callstack 0
 11057                           
 11058 ;; *************** function _abs *****************
 11059 ;; Defined at:
 11060 ;;		line 1 in file "/Applications/microchip/xc8/v2.31/pic/sources/c99/common/abs.c"
 11061 ;; Parameters:    Size  Location     Type
 11062 ;;  a               2   18[COMRAM] int 
 11063 ;; Auto vars:     Size  Location     Type
 11064 ;;		None
 11065 ;; Return value:  Size  Location     Type
 11066 ;;                  2   18[COMRAM] int 
 11067 ;; Registers used:
 11068 ;;		wreg, status,2, status,0
 11069 ;; Tracked objects:
 11070 ;;		On entry : 0/0
 11071 ;;		On exit  : 0/0
 11072 ;;		Unchanged: 0/0
 11073 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 11074 ;;      Params:         2       0       0       0       0       0       0       0       0
 11075 ;;      Locals:         0       0       0       0       0       0       0       0       0
 11076 ;;      Temps:          2       0       0       0       0       0       0       0       0
 11077 ;;      Totals:         4       0       0       0       0       0       0       0       0
 11078 ;;Total ram usage:        4 bytes
 11079 ;; Hardware stack levels used:    1
 11080 ;; This function calls:
 11081 ;;		Nothing
 11082 ;; This function is called by:
 11083 ;;		_dtoa
 11084 ;; This function uses a non-reentrant model
 11085 ;;
 11086                           
 11087                           	psect	text42
 11088  004EB6                     __ptext42:
 11089                           	callstack 0
 11090  004EB6                     _abs:
 11091                           	callstack 25
 11092  004EB6  BE14               	btfsc	(abs@a+1)^0,7,c
 11093  004EB8  EF68  F027         	goto	u4860
 11094  004EBC  5014               	movf	(abs@a+1)^0,w,c
 11095  004EBE  E106               	bnz	u4861
 11096  004EC0  0413               	decf	abs@a^0,w,c
 11097  004EC2  B0D8               	btfsc	status,0,c
 11098  004EC4  EF66  F027         	goto	u4861
 11099  004EC8  EF68  F027         	goto	u4860
 11100  004ECC                     u4861:
 11101  004ECC  EF76  F027         	goto	l1157
 11102  004ED0                     u4860:
 11103  004ED0  C013  F015         	movff	abs@a,??_abs
 11104  004ED4  C014  F016         	movff	abs@a+1,??_abs+1
 11105  004ED8  1E15               	comf	??_abs^0,f,c
 11106  004EDA  1E16               	comf	(??_abs+1)^0,f,c
 11107  004EDC  4A15               	infsnz	??_abs^0,f,c
 11108  004EDE  2A16               	incf	(??_abs+1)^0,f,c
 11109  004EE0  C015  F013         	movff	??_abs,?_abs
 11110  004EE4  C016  F014         	movff	??_abs+1,?_abs+1
 11111  004EE8  EF7A  F027         	goto	l1160
 11112  004EEC                     l1157:
 11113  004EEC  C013  F013         	movff	abs@a,?_abs
 11114  004EF0  C014  F014         	movff	abs@a+1,?_abs+1
 11115  004EF4                     l1160:
 11116  004EF4  0012               	return		;funcret
 11117  004EF6                     __end_of_abs:
 11118                           	callstack 0
 11119                           
 11120 ;; *************** function ___aomod *****************
 11121 ;; Defined at:
 11122 ;;		line 9 in file "/Applications/microchip/xc8/v2.31/pic/sources/c99/common/aomod.c"
 11123 ;; Parameters:    Size  Location     Type
 11124 ;;  dividend        8    0[COMRAM] long long 
 11125 ;;  divisor         8    8[COMRAM] long long 
 11126 ;; Auto vars:     Size  Location     Type
 11127 ;;  sign            1   17[COMRAM] unsigned char 
 11128 ;;  counter         1   16[COMRAM] unsigned char 
 11129 ;; Return value:  Size  Location     Type
 11130 ;;                  8    0[COMRAM] long long 
 11131 ;; Registers used:
 11132 ;;		wreg, status,2, status,0
 11133 ;; Tracked objects:
 11134 ;;		On entry : 0/0
 11135 ;;		On exit  : 0/0
 11136 ;;		Unchanged: 0/0
 11137 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 11138 ;;      Params:        16       0       0       0       0       0       0       0       0
 11139 ;;      Locals:         2       0       0       0       0       0       0       0       0
 11140 ;;      Temps:          0       0       0       0       0       0       0       0       0
 11141 ;;      Totals:        18       0       0       0       0       0       0       0       0
 11142 ;;Total ram usage:       18 bytes
 11143 ;; Hardware stack levels used:    1
 11144 ;; This function calls:
 11145 ;;		Nothing
 11146 ;; This function is called by:
 11147 ;;		_dtoa
 11148 ;; This function uses a non-reentrant model
 11149 ;;
 11150                           
 11151                           	psect	text43
 11152  003D0E                     __ptext43:
 11153                           	callstack 0
 11154  003D0E                     ___aomod:
 11155                           	callstack 25
 11156  003D0E  0E00               	movlw	0
 11157  003D10  6E12               	movwf	___aomod@sign^0,c
 11158  003D12  BE08               	btfsc	(___aomod@dividend+7)^0,7,c
 11159  003D14  EF90  F01E         	goto	u4060
 11160  003D18  EF8E  F01E         	goto	u4061
 11161  003D1C                     u4061:
 11162  003D1C  EFA2  F01E         	goto	l3602
 11163  003D20                     u4060:
 11164  003D20  1E08               	comf	(___aomod@dividend+7)^0,f,c
 11165  003D22  1E07               	comf	(___aomod@dividend+6)^0,f,c
 11166  003D24  1E06               	comf	(___aomod@dividend+5)^0,f,c
 11167  003D26  1E05               	comf	(___aomod@dividend+4)^0,f,c
 11168  003D28  1E04               	comf	(___aomod@dividend+3)^0,f,c
 11169  003D2A  1E03               	comf	(___aomod@dividend+2)^0,f,c
 11170  003D2C  1E02               	comf	(___aomod@dividend+1)^0,f,c
 11171  003D2E  6C01               	negf	___aomod@dividend^0,c
 11172  003D30  0E00               	movlw	0
 11173  003D32  2202               	addwfc	(___aomod@dividend+1)^0,f,c
 11174  003D34  2203               	addwfc	(___aomod@dividend+2)^0,f,c
 11175  003D36  2204               	addwfc	(___aomod@dividend+3)^0,f,c
 11176  003D38  2205               	addwfc	(___aomod@dividend+4)^0,f,c
 11177  003D3A  2206               	addwfc	(___aomod@dividend+5)^0,f,c
 11178  003D3C  2207               	addwfc	(___aomod@dividend+6)^0,f,c
 11179  003D3E  2208               	addwfc	(___aomod@dividend+7)^0,f,c
 11180  003D40  0E01               	movlw	1
 11181  003D42  6E12               	movwf	___aomod@sign^0,c
 11182  003D44                     l3602:
 11183  003D44  BE10               	btfsc	(___aomod@divisor+7)^0,7,c
 11184  003D46  EFA9  F01E         	goto	u4070
 11185  003D4A  EFA7  F01E         	goto	u4071
 11186  003D4E                     u4071:
 11187  003D4E  EFB9  F01E         	goto	l3606
 11188  003D52                     u4070:
 11189  003D52  1E10               	comf	(___aomod@divisor+7)^0,f,c
 11190  003D54  1E0F               	comf	(___aomod@divisor+6)^0,f,c
 11191  003D56  1E0E               	comf	(___aomod@divisor+5)^0,f,c
 11192  003D58  1E0D               	comf	(___aomod@divisor+4)^0,f,c
 11193  003D5A  1E0C               	comf	(___aomod@divisor+3)^0,f,c
 11194  003D5C  1E0B               	comf	(___aomod@divisor+2)^0,f,c
 11195  003D5E  1E0A               	comf	(___aomod@divisor+1)^0,f,c
 11196  003D60  6C09               	negf	___aomod@divisor^0,c
 11197  003D62  0E00               	movlw	0
 11198  003D64  220A               	addwfc	(___aomod@divisor+1)^0,f,c
 11199  003D66  220B               	addwfc	(___aomod@divisor+2)^0,f,c
 11200  003D68  220C               	addwfc	(___aomod@divisor+3)^0,f,c
 11201  003D6A  220D               	addwfc	(___aomod@divisor+4)^0,f,c
 11202  003D6C  220E               	addwfc	(___aomod@divisor+5)^0,f,c
 11203  003D6E  220F               	addwfc	(___aomod@divisor+6)^0,f,c
 11204  003D70  2210               	addwfc	(___aomod@divisor+7)^0,f,c
 11205  003D72                     l3606:
 11206  003D72  5009               	movf	___aomod@divisor^0,w,c
 11207  003D74  100A               	iorwf	(___aomod@divisor+1)^0,w,c
 11208  003D76  100B               	iorwf	(___aomod@divisor+2)^0,w,c
 11209  003D78  100C               	iorwf	(___aomod@divisor+3)^0,w,c
 11210  003D7A  100D               	iorwf	(___aomod@divisor+4)^0,w,c
 11211  003D7C  100E               	iorwf	(___aomod@divisor+5)^0,w,c
 11212  003D7E  100F               	iorwf	(___aomod@divisor+6)^0,w,c
 11213  003D80  1010               	iorwf	(___aomod@divisor+7)^0,w,c
 11214  003D82  B4D8               	btfsc	status,2,c
 11215  003D84  EFC6  F01E         	goto	u4081
 11216  003D88  EFC8  F01E         	goto	u4080
 11217  003D8C                     u4081:
 11218  003D8C  EF10  F01F         	goto	l3622
 11219  003D90                     u4080:
 11220  003D90  0E01               	movlw	1
 11221  003D92  6E11               	movwf	___aomod@counter^0,c
 11222  003D94  EFD6  F01E         	goto	l3612
 11223  003D98                     l3610:
 11224  003D98  90D8               	bcf	status,0,c
 11225  003D9A  3609               	rlcf	___aomod@divisor^0,f,c
 11226  003D9C  360A               	rlcf	(___aomod@divisor+1)^0,f,c
 11227  003D9E  360B               	rlcf	(___aomod@divisor+2)^0,f,c
 11228  003DA0  360C               	rlcf	(___aomod@divisor+3)^0,f,c
 11229  003DA2  360D               	rlcf	(___aomod@divisor+4)^0,f,c
 11230  003DA4  360E               	rlcf	(___aomod@divisor+5)^0,f,c
 11231  003DA6  360F               	rlcf	(___aomod@divisor+6)^0,f,c
 11232  003DA8  3610               	rlcf	(___aomod@divisor+7)^0,f,c
 11233  003DAA  2A11               	incf	___aomod@counter^0,f,c
 11234  003DAC                     l3612:
 11235  003DAC  AE10               	btfss	(___aomod@divisor+7)^0,7,c
 11236  003DAE  EFDB  F01E         	goto	u4091
 11237  003DB2  EFDD  F01E         	goto	u4090
 11238  003DB6                     u4091:
 11239  003DB6  EFCC  F01E         	goto	l3610
 11240  003DBA                     u4090:
 11241  003DBA                     l3614:
 11242  003DBA  5009               	movf	___aomod@divisor^0,w,c
 11243  003DBC  5C01               	subwf	___aomod@dividend^0,w,c
 11244  003DBE  500A               	movf	(___aomod@divisor+1)^0,w,c
 11245  003DC0  5802               	subwfb	(___aomod@dividend+1)^0,w,c
 11246  003DC2  500B               	movf	(___aomod@divisor+2)^0,w,c
 11247  003DC4  5803               	subwfb	(___aomod@dividend+2)^0,w,c
 11248  003DC6  500C               	movf	(___aomod@divisor+3)^0,w,c
 11249  003DC8  5804               	subwfb	(___aomod@dividend+3)^0,w,c
 11250  003DCA  500D               	movf	(___aomod@divisor+4)^0,w,c
 11251  003DCC  5805               	subwfb	(___aomod@dividend+4)^0,w,c
 11252  003DCE  500E               	movf	(___aomod@divisor+5)^0,w,c
 11253  003DD0  5806               	subwfb	(___aomod@dividend+5)^0,w,c
 11254  003DD2  500F               	movf	(___aomod@divisor+6)^0,w,c
 11255  003DD4  5807               	subwfb	(___aomod@dividend+6)^0,w,c
 11256  003DD6  5010               	movf	(___aomod@divisor+7)^0,w,c
 11257  003DD8  5808               	subwfb	(___aomod@dividend+7)^0,w,c
 11258  003DDA  A0D8               	btfss	status,0,c
 11259  003DDC  EFF2  F01E         	goto	u4101
 11260  003DE0  EFF4  F01E         	goto	u4100
 11261  003DE4                     u4101:
 11262  003DE4  EF04  F01F         	goto	l3618
 11263  003DE8                     u4100:
 11264  003DE8  5009               	movf	___aomod@divisor^0,w,c
 11265  003DEA  5E01               	subwf	___aomod@dividend^0,f,c
 11266  003DEC  500A               	movf	(___aomod@divisor+1)^0,w,c
 11267  003DEE  5A02               	subwfb	(___aomod@dividend+1)^0,f,c
 11268  003DF0  500B               	movf	(___aomod@divisor+2)^0,w,c
 11269  003DF2  5A03               	subwfb	(___aomod@dividend+2)^0,f,c
 11270  003DF4  500C               	movf	(___aomod@divisor+3)^0,w,c
 11271  003DF6  5A04               	subwfb	(___aomod@dividend+3)^0,f,c
 11272  003DF8  500D               	movf	(___aomod@divisor+4)^0,w,c
 11273  003DFA  5A05               	subwfb	(___aomod@dividend+4)^0,f,c
 11274  003DFC  500E               	movf	(___aomod@divisor+5)^0,w,c
 11275  003DFE  5A06               	subwfb	(___aomod@dividend+5)^0,f,c
 11276  003E00  500F               	movf	(___aomod@divisor+6)^0,w,c
 11277  003E02  5A07               	subwfb	(___aomod@dividend+6)^0,f,c
 11278  003E04  5010               	movf	(___aomod@divisor+7)^0,w,c
 11279  003E06  5A08               	subwfb	(___aomod@dividend+7)^0,f,c
 11280  003E08                     l3618:
 11281  003E08  90D8               	bcf	status,0,c
 11282  003E0A  3210               	rrcf	(___aomod@divisor+7)^0,f,c
 11283  003E0C  320F               	rrcf	(___aomod@divisor+6)^0,f,c
 11284  003E0E  320E               	rrcf	(___aomod@divisor+5)^0,f,c
 11285  003E10  320D               	rrcf	(___aomod@divisor+4)^0,f,c
 11286  003E12  320C               	rrcf	(___aomod@divisor+3)^0,f,c
 11287  003E14  320B               	rrcf	(___aomod@divisor+2)^0,f,c
 11288  003E16  320A               	rrcf	(___aomod@divisor+1)^0,f,c
 11289  003E18  3209               	rrcf	___aomod@divisor^0,f,c
 11290  003E1A  2E11               	decfsz	___aomod@counter^0,f,c
 11291  003E1C  EFDD  F01E         	goto	l3614
 11292  003E20                     l3622:
 11293  003E20  5012               	movf	___aomod@sign^0,w,c
 11294  003E22  B4D8               	btfsc	status,2,c
 11295  003E24  EF16  F01F         	goto	u4111
 11296  003E28  EF18  F01F         	goto	u4110
 11297  003E2C                     u4111:
 11298  003E2C  EF28  F01F         	goto	l3626
 11299  003E30                     u4110:
 11300  003E30  1E08               	comf	(___aomod@dividend+7)^0,f,c
 11301  003E32  1E07               	comf	(___aomod@dividend+6)^0,f,c
 11302  003E34  1E06               	comf	(___aomod@dividend+5)^0,f,c
 11303  003E36  1E05               	comf	(___aomod@dividend+4)^0,f,c
 11304  003E38  1E04               	comf	(___aomod@dividend+3)^0,f,c
 11305  003E3A  1E03               	comf	(___aomod@dividend+2)^0,f,c
 11306  003E3C  1E02               	comf	(___aomod@dividend+1)^0,f,c
 11307  003E3E  6C01               	negf	___aomod@dividend^0,c
 11308  003E40  0E00               	movlw	0
 11309  003E42  2202               	addwfc	(___aomod@dividend+1)^0,f,c
 11310  003E44  2203               	addwfc	(___aomod@dividend+2)^0,f,c
 11311  003E46  2204               	addwfc	(___aomod@dividend+3)^0,f,c
 11312  003E48  2205               	addwfc	(___aomod@dividend+4)^0,f,c
 11313  003E4A  2206               	addwfc	(___aomod@dividend+5)^0,f,c
 11314  003E4C  2207               	addwfc	(___aomod@dividend+6)^0,f,c
 11315  003E4E  2208               	addwfc	(___aomod@dividend+7)^0,f,c
 11316  003E50                     l3626:
 11317  003E50  C001  F001         	movff	___aomod@dividend,?___aomod
 11318  003E54  C002  F002         	movff	___aomod@dividend+1,?___aomod+1
 11319  003E58  C003  F003         	movff	___aomod@dividend+2,?___aomod+2
 11320  003E5C  C004  F004         	movff	___aomod@dividend+3,?___aomod+3
 11321  003E60  C005  F005         	movff	___aomod@dividend+4,?___aomod+4
 11322  003E64  C006  F006         	movff	___aomod@dividend+5,?___aomod+5
 11323  003E68  C007  F007         	movff	___aomod@dividend+6,?___aomod+6
 11324  003E6C  C008  F008         	movff	___aomod@dividend+7,?___aomod+7
 11325  003E70  0012               	return		;funcret
 11326  003E72                     __end_of___aomod:
 11327                           	callstack 0
 11328                           
 11329 ;; *************** function ___aodiv *****************
 11330 ;; Defined at:
 11331 ;;		line 9 in file "/Applications/microchip/xc8/v2.31/pic/sources/c99/common/aodiv.c"
 11332 ;; Parameters:    Size  Location     Type
 11333 ;;  dividend        8    0[COMRAM] long long 
 11334 ;;  divisor         8    8[COMRAM] long long 
 11335 ;; Auto vars:     Size  Location     Type
 11336 ;;  quotient        8   18[COMRAM] long long 
 11337 ;;  sign            1   17[COMRAM] unsigned char 
 11338 ;;  counter         1   16[COMRAM] unsigned char 
 11339 ;; Return value:  Size  Location     Type
 11340 ;;                  8    0[COMRAM] long long 
 11341 ;; Registers used:
 11342 ;;		wreg, fsr2l, fsr2h, status,2, status,0
 11343 ;; Tracked objects:
 11344 ;;		On entry : 0/0
 11345 ;;		On exit  : 0/0
 11346 ;;		Unchanged: 0/0
 11347 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 11348 ;;      Params:        16       0       0       0       0       0       0       0       0
 11349 ;;      Locals:        10       0       0       0       0       0       0       0       0
 11350 ;;      Temps:          0       0       0       0       0       0       0       0       0
 11351 ;;      Totals:        26       0       0       0       0       0       0       0       0
 11352 ;;Total ram usage:       26 bytes
 11353 ;; Hardware stack levels used:    1
 11354 ;; This function calls:
 11355 ;;		Nothing
 11356 ;; This function is called by:
 11357 ;;		_dtoa
 11358 ;; This function uses a non-reentrant model
 11359 ;;
 11360                           
 11361                           	psect	text44
 11362  003B86                     __ptext44:
 11363                           	callstack 0
 11364  003B86                     ___aodiv:
 11365                           	callstack 25
 11366  003B86  0E00               	movlw	0
 11367  003B88  6E12               	movwf	___aodiv@sign^0,c
 11368  003B8A  BE10               	btfsc	(___aodiv@divisor+7)^0,7,c
 11369  003B8C  EFCC  F01D         	goto	u3990
 11370  003B90  EFCA  F01D         	goto	u3991
 11371  003B94                     u3991:
 11372  003B94  EFDE  F01D         	goto	l3558
 11373  003B98                     u3990:
 11374  003B98  1E10               	comf	(___aodiv@divisor+7)^0,f,c
 11375  003B9A  1E0F               	comf	(___aodiv@divisor+6)^0,f,c
 11376  003B9C  1E0E               	comf	(___aodiv@divisor+5)^0,f,c
 11377  003B9E  1E0D               	comf	(___aodiv@divisor+4)^0,f,c
 11378  003BA0  1E0C               	comf	(___aodiv@divisor+3)^0,f,c
 11379  003BA2  1E0B               	comf	(___aodiv@divisor+2)^0,f,c
 11380  003BA4  1E0A               	comf	(___aodiv@divisor+1)^0,f,c
 11381  003BA6  6C09               	negf	___aodiv@divisor^0,c
 11382  003BA8  0E00               	movlw	0
 11383  003BAA  220A               	addwfc	(___aodiv@divisor+1)^0,f,c
 11384  003BAC  220B               	addwfc	(___aodiv@divisor+2)^0,f,c
 11385  003BAE  220C               	addwfc	(___aodiv@divisor+3)^0,f,c
 11386  003BB0  220D               	addwfc	(___aodiv@divisor+4)^0,f,c
 11387  003BB2  220E               	addwfc	(___aodiv@divisor+5)^0,f,c
 11388  003BB4  220F               	addwfc	(___aodiv@divisor+6)^0,f,c
 11389  003BB6  2210               	addwfc	(___aodiv@divisor+7)^0,f,c
 11390  003BB8  0E01               	movlw	1
 11391  003BBA  6E12               	movwf	___aodiv@sign^0,c
 11392  003BBC                     l3558:
 11393  003BBC  BE08               	btfsc	(___aodiv@dividend+7)^0,7,c
 11394  003BBE  EFE5  F01D         	goto	u4000
 11395  003BC2  EFE3  F01D         	goto	u4001
 11396  003BC6                     u4001:
 11397  003BC6  EFF7  F01D         	goto	l3564
 11398  003BCA                     u4000:
 11399  003BCA  1E08               	comf	(___aodiv@dividend+7)^0,f,c
 11400  003BCC  1E07               	comf	(___aodiv@dividend+6)^0,f,c
 11401  003BCE  1E06               	comf	(___aodiv@dividend+5)^0,f,c
 11402  003BD0  1E05               	comf	(___aodiv@dividend+4)^0,f,c
 11403  003BD2  1E04               	comf	(___aodiv@dividend+3)^0,f,c
 11404  003BD4  1E03               	comf	(___aodiv@dividend+2)^0,f,c
 11405  003BD6  1E02               	comf	(___aodiv@dividend+1)^0,f,c
 11406  003BD8  6C01               	negf	___aodiv@dividend^0,c
 11407  003BDA  0E00               	movlw	0
 11408  003BDC  2202               	addwfc	(___aodiv@dividend+1)^0,f,c
 11409  003BDE  2203               	addwfc	(___aodiv@dividend+2)^0,f,c
 11410  003BE0  2204               	addwfc	(___aodiv@dividend+3)^0,f,c
 11411  003BE2  2205               	addwfc	(___aodiv@dividend+4)^0,f,c
 11412  003BE4  2206               	addwfc	(___aodiv@dividend+5)^0,f,c
 11413  003BE6  2207               	addwfc	(___aodiv@dividend+6)^0,f,c
 11414  003BE8  2208               	addwfc	(___aodiv@dividend+7)^0,f,c
 11415  003BEA  0E01               	movlw	1
 11416  003BEC  1A12               	xorwf	___aodiv@sign^0,f,c
 11417  003BEE                     l3564:
 11418  003BEE  EE20  F013         	lfsr	2,___aodiv@quotient
 11419  003BF2  0E07               	movlw	7
 11420  003BF4                     u4011:
 11421  003BF4  6ADE               	clrf	postinc2,c
 11422  003BF6  06E8               	decf	wreg,f,c
 11423  003BF8  E2FD               	bc	u4011
 11424  003BFA  5009               	movf	___aodiv@divisor^0,w,c
 11425  003BFC  100A               	iorwf	(___aodiv@divisor+1)^0,w,c
 11426  003BFE  100B               	iorwf	(___aodiv@divisor+2)^0,w,c
 11427  003C00  100C               	iorwf	(___aodiv@divisor+3)^0,w,c
 11428  003C02  100D               	iorwf	(___aodiv@divisor+4)^0,w,c
 11429  003C04  100E               	iorwf	(___aodiv@divisor+5)^0,w,c
 11430  003C06  100F               	iorwf	(___aodiv@divisor+6)^0,w,c
 11431  003C08  1010               	iorwf	(___aodiv@divisor+7)^0,w,c
 11432  003C0A  B4D8               	btfsc	status,2,c
 11433  003C0C  EF0A  F01E         	goto	u4021
 11434  003C10  EF0C  F01E         	goto	u4020
 11435  003C14                     u4021:
 11436  003C14  EF5E  F01E         	goto	l3586
 11437  003C18                     u4020:
 11438  003C18  0E01               	movlw	1
 11439  003C1A  6E11               	movwf	___aodiv@counter^0,c
 11440  003C1C  EF1A  F01E         	goto	l3572
 11441  003C20                     l3570:
 11442  003C20  90D8               	bcf	status,0,c
 11443  003C22  3609               	rlcf	___aodiv@divisor^0,f,c
 11444  003C24  360A               	rlcf	(___aodiv@divisor+1)^0,f,c
 11445  003C26  360B               	rlcf	(___aodiv@divisor+2)^0,f,c
 11446  003C28  360C               	rlcf	(___aodiv@divisor+3)^0,f,c
 11447  003C2A  360D               	rlcf	(___aodiv@divisor+4)^0,f,c
 11448  003C2C  360E               	rlcf	(___aodiv@divisor+5)^0,f,c
 11449  003C2E  360F               	rlcf	(___aodiv@divisor+6)^0,f,c
 11450  003C30  3610               	rlcf	(___aodiv@divisor+7)^0,f,c
 11451  003C32  2A11               	incf	___aodiv@counter^0,f,c
 11452  003C34                     l3572:
 11453  003C34  AE10               	btfss	(___aodiv@divisor+7)^0,7,c
 11454  003C36  EF1F  F01E         	goto	u4031
 11455  003C3A  EF21  F01E         	goto	u4030
 11456  003C3E                     u4031:
 11457  003C3E  EF10  F01E         	goto	l3570
 11458  003C42                     u4030:
 11459  003C42                     l3574:
 11460  003C42  90D8               	bcf	status,0,c
 11461  003C44  3613               	rlcf	___aodiv@quotient^0,f,c
 11462  003C46  3614               	rlcf	(___aodiv@quotient+1)^0,f,c
 11463  003C48  3615               	rlcf	(___aodiv@quotient+2)^0,f,c
 11464  003C4A  3616               	rlcf	(___aodiv@quotient+3)^0,f,c
 11465  003C4C  3617               	rlcf	(___aodiv@quotient+4)^0,f,c
 11466  003C4E  3618               	rlcf	(___aodiv@quotient+5)^0,f,c
 11467  003C50  3619               	rlcf	(___aodiv@quotient+6)^0,f,c
 11468  003C52  361A               	rlcf	(___aodiv@quotient+7)^0,f,c
 11469  003C54  5009               	movf	___aodiv@divisor^0,w,c
 11470  003C56  5C01               	subwf	___aodiv@dividend^0,w,c
 11471  003C58  500A               	movf	(___aodiv@divisor+1)^0,w,c
 11472  003C5A  5802               	subwfb	(___aodiv@dividend+1)^0,w,c
 11473  003C5C  500B               	movf	(___aodiv@divisor+2)^0,w,c
 11474  003C5E  5803               	subwfb	(___aodiv@dividend+2)^0,w,c
 11475  003C60  500C               	movf	(___aodiv@divisor+3)^0,w,c
 11476  003C62  5804               	subwfb	(___aodiv@dividend+3)^0,w,c
 11477  003C64  500D               	movf	(___aodiv@divisor+4)^0,w,c
 11478  003C66  5805               	subwfb	(___aodiv@dividend+4)^0,w,c
 11479  003C68  500E               	movf	(___aodiv@divisor+5)^0,w,c
 11480  003C6A  5806               	subwfb	(___aodiv@dividend+5)^0,w,c
 11481  003C6C  500F               	movf	(___aodiv@divisor+6)^0,w,c
 11482  003C6E  5807               	subwfb	(___aodiv@dividend+6)^0,w,c
 11483  003C70  5010               	movf	(___aodiv@divisor+7)^0,w,c
 11484  003C72  5808               	subwfb	(___aodiv@dividend+7)^0,w,c
 11485  003C74  A0D8               	btfss	status,0,c
 11486  003C76  EF3F  F01E         	goto	u4041
 11487  003C7A  EF41  F01E         	goto	u4040
 11488  003C7E                     u4041:
 11489  003C7E  EF52  F01E         	goto	l3582
 11490  003C82                     u4040:
 11491  003C82  5009               	movf	___aodiv@divisor^0,w,c
 11492  003C84  5E01               	subwf	___aodiv@dividend^0,f,c
 11493  003C86  500A               	movf	(___aodiv@divisor+1)^0,w,c
 11494  003C88  5A02               	subwfb	(___aodiv@dividend+1)^0,f,c
 11495  003C8A  500B               	movf	(___aodiv@divisor+2)^0,w,c
 11496  003C8C  5A03               	subwfb	(___aodiv@dividend+2)^0,f,c
 11497  003C8E  500C               	movf	(___aodiv@divisor+3)^0,w,c
 11498  003C90  5A04               	subwfb	(___aodiv@dividend+3)^0,f,c
 11499  003C92  500D               	movf	(___aodiv@divisor+4)^0,w,c
 11500  003C94  5A05               	subwfb	(___aodiv@dividend+4)^0,f,c
 11501  003C96  500E               	movf	(___aodiv@divisor+5)^0,w,c
 11502  003C98  5A06               	subwfb	(___aodiv@dividend+5)^0,f,c
 11503  003C9A  500F               	movf	(___aodiv@divisor+6)^0,w,c
 11504  003C9C  5A07               	subwfb	(___aodiv@dividend+6)^0,f,c
 11505  003C9E  5010               	movf	(___aodiv@divisor+7)^0,w,c
 11506  003CA0  5A08               	subwfb	(___aodiv@dividend+7)^0,f,c
 11507  003CA2  8013               	bsf	___aodiv@quotient^0,0,c
 11508  003CA4                     l3582:
 11509  003CA4  90D8               	bcf	status,0,c
 11510  003CA6  3210               	rrcf	(___aodiv@divisor+7)^0,f,c
 11511  003CA8  320F               	rrcf	(___aodiv@divisor+6)^0,f,c
 11512  003CAA  320E               	rrcf	(___aodiv@divisor+5)^0,f,c
 11513  003CAC  320D               	rrcf	(___aodiv@divisor+4)^0,f,c
 11514  003CAE  320C               	rrcf	(___aodiv@divisor+3)^0,f,c
 11515  003CB0  320B               	rrcf	(___aodiv@divisor+2)^0,f,c
 11516  003CB2  320A               	rrcf	(___aodiv@divisor+1)^0,f,c
 11517  003CB4  3209               	rrcf	___aodiv@divisor^0,f,c
 11518  003CB6  2E11               	decfsz	___aodiv@counter^0,f,c
 11519  003CB8  EF21  F01E         	goto	l3574
 11520  003CBC                     l3586:
 11521  003CBC  5012               	movf	___aodiv@sign^0,w,c
 11522  003CBE  B4D8               	btfsc	status,2,c
 11523  003CC0  EF64  F01E         	goto	u4051
 11524  003CC4  EF66  F01E         	goto	u4050
 11525  003CC8                     u4051:
 11526  003CC8  EF76  F01E         	goto	l3590
 11527  003CCC                     u4050:
 11528  003CCC  1E1A               	comf	(___aodiv@quotient+7)^0,f,c
 11529  003CCE  1E19               	comf	(___aodiv@quotient+6)^0,f,c
 11530  003CD0  1E18               	comf	(___aodiv@quotient+5)^0,f,c
 11531  003CD2  1E17               	comf	(___aodiv@quotient+4)^0,f,c
 11532  003CD4  1E16               	comf	(___aodiv@quotient+3)^0,f,c
 11533  003CD6  1E15               	comf	(___aodiv@quotient+2)^0,f,c
 11534  003CD8  1E14               	comf	(___aodiv@quotient+1)^0,f,c
 11535  003CDA  6C13               	negf	___aodiv@quotient^0,c
 11536  003CDC  0E00               	movlw	0
 11537  003CDE  2214               	addwfc	(___aodiv@quotient+1)^0,f,c
 11538  003CE0  2215               	addwfc	(___aodiv@quotient+2)^0,f,c
 11539  003CE2  2216               	addwfc	(___aodiv@quotient+3)^0,f,c
 11540  003CE4  2217               	addwfc	(___aodiv@quotient+4)^0,f,c
 11541  003CE6  2218               	addwfc	(___aodiv@quotient+5)^0,f,c
 11542  003CE8  2219               	addwfc	(___aodiv@quotient+6)^0,f,c
 11543  003CEA  221A               	addwfc	(___aodiv@quotient+7)^0,f,c
 11544  003CEC                     l3590:
 11545  003CEC  C013  F001         	movff	___aodiv@quotient,?___aodiv
 11546  003CF0  C014  F002         	movff	___aodiv@quotient+1,?___aodiv+1
 11547  003CF4  C015  F003         	movff	___aodiv@quotient+2,?___aodiv+2
 11548  003CF8  C016  F004         	movff	___aodiv@quotient+3,?___aodiv+3
 11549  003CFC  C017  F005         	movff	___aodiv@quotient+4,?___aodiv+4
 11550  003D00  C018  F006         	movff	___aodiv@quotient+5,?___aodiv+5
 11551  003D04  C019  F007         	movff	___aodiv@quotient+6,?___aodiv+6
 11552  003D08  C01A  F008         	movff	___aodiv@quotient+7,?___aodiv+7
 11553  003D0C  0012               	return		;funcret
 11554  003D0E                     __end_of___aodiv:
 11555                           	callstack 0
 11556                           
 11557 ;; *************** function _ctoa *****************
 11558 ;; Defined at:
 11559 ;;		line 259 in file "/Applications/microchip/xc8/v2.31/pic/sources/c99/common/doprnt.c"
 11560 ;; Parameters:    Size  Location     Type
 11561 ;;  fp              2   12[COMRAM] PTR struct _IO_FILE
 11562 ;;		 -> NULL(0), sprintf@f(6), 
 11563 ;;  c               1   14[COMRAM] unsigned char 
 11564 ;; Auto vars:     Size  Location     Type
 11565 ;;  w               2   18[COMRAM] int 
 11566 ;;  l               2   16[COMRAM] int 
 11567 ;; Return value:  Size  Location     Type
 11568 ;;                  2   12[COMRAM] int 
 11569 ;; Registers used:
 11570 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
 11571 ;; Tracked objects:
 11572 ;;		On entry : 0/0
 11573 ;;		On exit  : 0/0
 11574 ;;		Unchanged: 0/0
 11575 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 11576 ;;      Params:         3       0       0       0       0       0       0       0       0
 11577 ;;      Locals:         4       0       0       0       0       0       0       0       0
 11578 ;;      Temps:          1       0       0       0       0       0       0       0       0
 11579 ;;      Totals:         8       0       0       0       0       0       0       0       0
 11580 ;;Total ram usage:        8 bytes
 11581 ;; Hardware stack levels used:    1
 11582 ;; Hardware stack levels required when called:    2
 11583 ;; This function calls:
 11584 ;;		_fputc
 11585 ;; This function is called by:
 11586 ;;		_vfpfcnvrt
 11587 ;; This function uses a non-reentrant model
 11588 ;;
 11589                           
 11590                           	psect	text45
 11591  0043D2                     __ptext45:
 11592                           	callstack 0
 11593  0043D2                     _ctoa:
 11594                           	callstack 24
 11595  0043D2                     
 11596                           ;/Applications/microchip/xc8/v2.31/pic/sources/c99/common/doprnt.c: 259: static int ctoa
      +                          (FILE *fp, char c);/Applications/microchip/xc8/v2.31/pic/sources/c99/common/doprnt.c: 26
      +                          0: {;/Applications/microchip/xc8/v2.31/pic/sources/c99/common/doprnt.c: 261:     int l, 
      +                          w;;/Applications/microchip/xc8/v2.31/pic/sources/c99/common/doprnt.c: 264:     w = width
      +                           ? width - 1 : width;
 11597  0043D2  0100               	movlb	0	; () banked
 11598  0043D4  51D4               	movf	_width& (0+255),w,b
 11599  0043D6  11D5               	iorwf	(_width+1)& (0+255),w,b
 11600  0043D8  A4D8               	btfss	status,2,c
 11601  0043DA  EFF1  F021         	goto	u5031
 11602  0043DE  EFF3  F021         	goto	u5030
 11603  0043E2                     u5031:
 11604  0043E2  EFF9  F021         	goto	l4156
 11605  0043E6                     u5030:
 11606  0043E6                     
 11607                           ; BSR set to: 0
 11608  0043E6  C0D4  F013         	movff	_width,ctoa@w
 11609  0043EA  C0D5  F014         	movff	_width+1,ctoa@w+1
 11610  0043EE  EFFF  F021         	goto	l4158
 11611  0043F2                     l4156:
 11612                           
 11613                           ; BSR set to: 0
 11614  0043F2  0EFF               	movlw	255
 11615  0043F4  25D4               	addwf	_width& (0+255),w,b
 11616  0043F6  6E13               	movwf	ctoa@w^0,c
 11617  0043F8  0EFF               	movlw	255
 11618  0043FA  21D5               	addwfc	(_width+1)& (0+255),w,b
 11619  0043FC  6E14               	movwf	(ctoa@w+1)^0,c
 11620  0043FE                     l4158:
 11621                           
 11622                           ; BSR set to: 0
 11623                           ;/Applications/microchip/xc8/v2.31/pic/sources/c99/common/doprnt.c: 267:     if (flags &
      +                           (1 << 0)) {
 11624  0043FE  A1D8               	btfss	_flags& (0+255),0,b
 11625  004400  EF04  F022         	goto	u5041
 11626  004404  EF06  F022         	goto	u5040
 11627  004408                     u5041:
 11628  004408  EF0F  F022         	goto	l4162
 11629  00440C                     u5040:
 11630  00440C                     
 11631                           ; BSR set to: 0
 11632                           ;/Applications/microchip/xc8/v2.31/pic/sources/c99/common/doprnt.c: 268:         fputc(c
      +                          , fp);
 11633  00440C  C00F  F004         	movff	ctoa@c,fputc@c
 11634  004410  6A05               	clrf	(fputc@c+1)^0,c
 11635  004412  C00D  F006         	movff	ctoa@fp,fputc@fp
 11636  004416  C00E  F007         	movff	ctoa@fp+1,fputc@fp+1
 11637  00441A  ECC0  F022         	call	_fputc	;wreg free
 11638  00441E                     l4162:
 11639                           
 11640                           ;/Applications/microchip/xc8/v2.31/pic/sources/c99/common/doprnt.c: 271:     w = (w < 0)
      +                           ? 0 : w;
 11641  00441E  BE14               	btfsc	(ctoa@w+1)^0,7,c
 11642  004420  EF14  F022         	goto	u5051
 11643  004424  EF16  F022         	goto	u5050
 11644  004428                     u5051:
 11645  004428  EF18  F022         	goto	l4166
 11646  00442C                     u5050:
 11647  00442C  EF1C  F022         	goto	l972
 11648  004430                     l4166:
 11649  004430  0E00               	movlw	0
 11650  004432  6E14               	movwf	(ctoa@w+1)^0,c
 11651  004434  0E00               	movlw	0
 11652  004436  6E13               	movwf	ctoa@w^0,c
 11653  004438                     l972:
 11654                           
 11655                           ;/Applications/microchip/xc8/v2.31/pic/sources/c99/common/doprnt.c: 272:     l = 0;
 11656  004438  0E00               	movlw	0
 11657  00443A  6E12               	movwf	(ctoa@l+1)^0,c
 11658  00443C  0E00               	movlw	0
 11659  00443E  6E11               	movwf	ctoa@l^0,c
 11660                           
 11661                           ;/Applications/microchip/xc8/v2.31/pic/sources/c99/common/doprnt.c: 273:     while (l < 
      +                          w) {
 11662  004440  EF2E  F022         	goto	l4172
 11663  004444                     l4168:
 11664                           
 11665                           ;/Applications/microchip/xc8/v2.31/pic/sources/c99/common/doprnt.c: 274:         fputc('
      +                           ', fp);
 11666  004444  0E00               	movlw	0
 11667  004446  6E05               	movwf	(fputc@c+1)^0,c
 11668  004448  0E20               	movlw	32
 11669  00444A  6E04               	movwf	fputc@c^0,c
 11670  00444C  C00D  F006         	movff	ctoa@fp,fputc@fp
 11671  004450  C00E  F007         	movff	ctoa@fp+1,fputc@fp+1
 11672  004454  ECC0  F022         	call	_fputc	;wreg free
 11673  004458                     
 11674                           ;/Applications/microchip/xc8/v2.31/pic/sources/c99/common/doprnt.c: 275:         ++l;
 11675  004458  4A11               	infsnz	ctoa@l^0,f,c
 11676  00445A  2A12               	incf	(ctoa@l+1)^0,f,c
 11677  00445C                     l4172:
 11678                           
 11679                           ;/Applications/microchip/xc8/v2.31/pic/sources/c99/common/doprnt.c: 273:     while (l < 
      +                          w) {
 11680  00445C  5013               	movf	ctoa@w^0,w,c
 11681  00445E  5C11               	subwf	ctoa@l^0,w,c
 11682  004460  5012               	movf	(ctoa@l+1)^0,w,c
 11683  004462  0A80               	xorlw	128
 11684  004464  6E10               	movwf	??_ctoa^0,c
 11685  004466  5014               	movf	(ctoa@w+1)^0,w,c
 11686  004468  0A80               	xorlw	128
 11687  00446A  5810               	subwfb	??_ctoa^0,w,c
 11688  00446C  A0D8               	btfss	status,0,c
 11689  00446E  EF3B  F022         	goto	u5061
 11690  004472  EF3D  F022         	goto	u5060
 11691  004476                     u5061:
 11692  004476  EF22  F022         	goto	l4168
 11693  00447A                     u5060:
 11694  00447A                     
 11695                           ;/Applications/microchip/xc8/v2.31/pic/sources/c99/common/doprnt.c: 278:     if (!(flags
      +                           & (1 << 0))) {
 11696  00447A  0100               	movlb	0	; () banked
 11697  00447C  B1D8               	btfsc	_flags& (0+255),0,b
 11698  00447E  EF43  F022         	goto	u5071
 11699  004482  EF45  F022         	goto	u5070
 11700  004486                     u5071:
 11701  004486  EF4E  F022         	goto	l4176
 11702  00448A                     u5070:
 11703  00448A                     
 11704                           ; BSR set to: 0
 11705                           ;/Applications/microchip/xc8/v2.31/pic/sources/c99/common/doprnt.c: 279:         fputc(c
      +                          , fp);
 11706  00448A  C00F  F004         	movff	ctoa@c,fputc@c
 11707  00448E  6A05               	clrf	(fputc@c+1)^0,c
 11708  004490  C00D  F006         	movff	ctoa@fp,fputc@fp
 11709  004494  C00E  F007         	movff	ctoa@fp+1,fputc@fp+1
 11710  004498  ECC0  F022         	call	_fputc	;wreg free
 11711  00449C                     l4176:
 11712                           
 11713                           ;/Applications/microchip/xc8/v2.31/pic/sources/c99/common/doprnt.c: 282:     return l+1;
 11714  00449C  0E01               	movlw	1
 11715  00449E  2411               	addwf	ctoa@l^0,w,c
 11716  0044A0  6E0D               	movwf	?_ctoa^0,c
 11717  0044A2  0E00               	movlw	0
 11718  0044A4  2012               	addwfc	(ctoa@l+1)^0,w,c
 11719  0044A6  6E0E               	movwf	(?_ctoa+1)^0,c
 11720  0044A8  0012               	return		;funcret
 11721  0044AA                     __end_of_ctoa:
 11722                           	callstack 0
 11723                           
 11724 ;; *************** function _fputc *****************
 11725 ;; Defined at:
 11726 ;;		line 8 in file "/Applications/microchip/xc8/v2.31/pic/sources/c99/common/nf_fputc.c"
 11727 ;; Parameters:    Size  Location     Type
 11728 ;;  c               2    3[COMRAM] int 
 11729 ;;  fp              2    5[COMRAM] PTR struct _IO_FILE
 11730 ;;		 -> NULL(0), sprintf@f(6), 
 11731 ;; Auto vars:     Size  Location     Type
 11732 ;;		None
 11733 ;; Return value:  Size  Location     Type
 11734 ;;                  2    3[COMRAM] int 
 11735 ;; Registers used:
 11736 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
 11737 ;; Tracked objects:
 11738 ;;		On entry : 0/0
 11739 ;;		On exit  : 0/0
 11740 ;;		Unchanged: 0/0
 11741 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 11742 ;;      Params:         4       0       0       0       0       0       0       0       0
 11743 ;;      Locals:         0       0       0       0       0       0       0       0       0
 11744 ;;      Temps:          5       0       0       0       0       0       0       0       0
 11745 ;;      Totals:         9       0       0       0       0       0       0       0       0
 11746 ;;Total ram usage:        9 bytes
 11747 ;; Hardware stack levels used:    1
 11748 ;; Hardware stack levels required when called:    1
 11749 ;; This function calls:
 11750 ;;		_putch
 11751 ;; This function is called by:
 11752 ;;		_pad
 11753 ;;		_ctoa
 11754 ;;		_vfpfcnvrt
 11755 ;;		_fputs
 11756 ;; This function uses a non-reentrant model
 11757 ;;
 11758                           
 11759                           	psect	text46
 11760  004580                     __ptext46:
 11761                           	callstack 0
 11762  004580                     _fputc:
 11763                           	callstack 25
 11764  004580  5006               	movf	fputc@fp^0,w,c
 11765  004582  1007               	iorwf	(fputc@fp+1)^0,w,c
 11766  004584  B4D8               	btfsc	status,2,c
 11767  004586  EFC7  F022         	goto	u3421
 11768  00458A  EFC9  F022         	goto	u3420
 11769  00458E                     u3421:
 11770  00458E  EFD2  F022         	goto	l3282
 11771  004592                     u3420:
 11772  004592  5006               	movf	fputc@fp^0,w,c
 11773  004594  1007               	iorwf	(fputc@fp+1)^0,w,c
 11774  004596  A4D8               	btfss	status,2,c
 11775  004598  EFD0  F022         	goto	u3431
 11776  00459C  EFD2  F022         	goto	u3430
 11777  0045A0                     u3431:
 11778  0045A0  EFD7  F022         	goto	l3284
 11779  0045A4                     u3430:
 11780  0045A4                     l3282:
 11781  0045A4  5004               	movf	fputc@c^0,w,c
 11782  0045A6  ECF5  F026         	call	_putch
 11783  0045AA  EF24  F023         	goto	l1223
 11784  0045AE                     l3284:
 11785  0045AE  EE20 F004          	lfsr	2,4
 11786  0045B2  5006               	movf	fputc@fp^0,w,c
 11787  0045B4  26D9               	addwf	fsr2l,f,c
 11788  0045B6  5007               	movf	(fputc@fp+1)^0,w,c
 11789  0045B8  22DA               	addwfc	fsr2h,f,c
 11790  0045BA  50DE               	movf	postinc2,w,c
 11791  0045BC  10DE               	iorwf	postinc2,w,c
 11792  0045BE  B4D8               	btfsc	status,2,c
 11793  0045C0  EFE4  F022         	goto	u3441
 11794  0045C4  EFE6  F022         	goto	u3440
 11795  0045C8                     u3441:
 11796  0045C8  EF01  F023         	goto	l3288
 11797  0045CC                     u3440:
 11798  0045CC  EE20 F004          	lfsr	2,4
 11799  0045D0  5006               	movf	fputc@fp^0,w,c
 11800  0045D2  26D9               	addwf	fsr2l,f,c
 11801  0045D4  5007               	movf	(fputc@fp+1)^0,w,c
 11802  0045D6  22DA               	addwfc	fsr2h,f,c
 11803  0045D8  EE10 F002          	lfsr	1,2
 11804  0045DC  5006               	movf	fputc@fp^0,w,c
 11805  0045DE  26E1               	addwf	fsr1l,f,c
 11806  0045E0  5007               	movf	(fputc@fp+1)^0,w,c
 11807  0045E2  22E2               	addwfc	fsr1h,f,c
 11808  0045E4  50DE               	movf	postinc2,w,c
 11809  0045E6  5CE6               	subwf	postinc1,w,c
 11810  0045E8  50E6               	movf	postinc1,w,c
 11811  0045EA  0A80               	xorlw	128
 11812  0045EC  6E0C               	movwf	(??_fputc+4)^0,c
 11813  0045EE  50DE               	movf	postinc2,w,c
 11814  0045F0  0A80               	xorlw	128
 11815  0045F2  580C               	subwfb	(??_fputc+4)^0,w,c
 11816  0045F4  B0D8               	btfsc	status,0,c
 11817  0045F6  EFFF  F022         	goto	u3451
 11818  0045FA  EF01  F023         	goto	u3450
 11819  0045FE                     u3451:
 11820  0045FE  EF24  F023         	goto	l1223
 11821  004602                     u3450:
 11822  004602                     l3288:
 11823  004602  EE20 F002          	lfsr	2,2
 11824  004606  5006               	movf	fputc@fp^0,w,c
 11825  004608  26D9               	addwf	fsr2l,f,c
 11826  00460A  5007               	movf	(fputc@fp+1)^0,w,c
 11827  00460C  22DA               	addwfc	fsr2h,f,c
 11828  00460E  CFDE F008          	movff	postinc2,??_fputc
 11829  004612  CFDD F009          	movff	postdec2,??_fputc+1
 11830  004616  C006  FFD9         	movff	fputc@fp,fsr2l
 11831  00461A  C007  FFDA         	movff	fputc@fp+1,fsr2h
 11832  00461E  CFDE F00A          	movff	postinc2,??_fputc+2
 11833  004622  CFDD F00B          	movff	postdec2,??_fputc+3
 11834  004626  5008               	movf	??_fputc^0,w,c
 11835  004628  240A               	addwf	(??_fputc+2)^0,w,c
 11836  00462A  6ED9               	movwf	fsr2l,c
 11837  00462C  5009               	movf	(??_fputc+1)^0,w,c
 11838  00462E  200B               	addwfc	(??_fputc+3)^0,w,c
 11839  004630  6EDA               	movwf	fsr2h,c
 11840  004632  C004  FFDF         	movff	fputc@c,indf2
 11841  004636  EE20 F002          	lfsr	2,2
 11842  00463A  5006               	movf	fputc@fp^0,w,c
 11843  00463C  26D9               	addwf	fsr2l,f,c
 11844  00463E  5007               	movf	(fputc@fp+1)^0,w,c
 11845  004640  22DA               	addwfc	fsr2h,f,c
 11846  004642  2ADE               	incf	postinc2,f,c
 11847  004644  0E00               	movlw	0
 11848  004646  22DD               	addwfc	postdec2,f,c
 11849  004648                     l1223:
 11850  004648  0012               	return		;funcret
 11851  00464A                     __end_of_fputc:
 11852                           	callstack 0
 11853                           
 11854 ;; *************** function _putch *****************
 11855 ;; Defined at:
 11856 ;;		line 263 in file "SensorNegPosExactos.c"
 11857 ;; Parameters:    Size  Location     Type
 11858 ;;  data            1    wreg     unsigned char 
 11859 ;; Auto vars:     Size  Location     Type
 11860 ;;  data            1    1[COMRAM] unsigned char 
 11861 ;;  Activa          1    2[COMRAM] unsigned char 
 11862 ;; Return value:  Size  Location     Type
 11863 ;;                  1    wreg      void 
 11864 ;; Registers used:
 11865 ;;		wreg, status,2, status,0
 11866 ;; Tracked objects:
 11867 ;;		On entry : 0/0
 11868 ;;		On exit  : 0/0
 11869 ;;		Unchanged: 0/0
 11870 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 11871 ;;      Params:         0       0       0       0       0       0       0       0       0
 11872 ;;      Locals:         2       0       0       0       0       0       0       0       0
 11873 ;;      Temps:          1       0       0       0       0       0       0       0       0
 11874 ;;      Totals:         3       0       0       0       0       0       0       0       0
 11875 ;;Total ram usage:        3 bytes
 11876 ;; Hardware stack levels used:    1
 11877 ;; This function calls:
 11878 ;;		Nothing
 11879 ;; This function is called by:
 11880 ;;		_fputc
 11881 ;; This function uses a non-reentrant model
 11882 ;;
 11883                           
 11884                           	psect	text47
 11885  004DEA                     __ptext47:
 11886                           	callstack 0
 11887  004DEA                     _putch:
 11888                           	callstack 25
 11889                           
 11890                           ;incstack = 0
 11891                           ;putch@data stored from wreg
 11892  004DEA  6E02               	movwf	putch@data^0,c
 11893  004DEC                     
 11894                           ;SensorNegPosExactos.c: 263: void putch(char data);SensorNegPosExactos.c: 264: {;SensorN
      +                          egPosExactos.c: 265:     char Activa;;SensorNegPosExactos.c: 266:     Activa = data & 0x
      +                          F0;
 11895  004DEC  5002               	movf	putch@data^0,w,c
 11896  004DEE  0BF0               	andlw	240
 11897  004DF0  6E03               	movwf	putch@Activa^0,c
 11898                           
 11899                           ;SensorNegPosExactos.c: 267:     LATD = Activa | 0x05;
 11900  004DF2  5003               	movf	putch@Activa^0,w,c
 11901  004DF4  0905               	iorlw	5
 11902  004DF6  6E8C               	movwf	140,c	;volatile
 11903  004DF8                     
 11904                           ;SensorNegPosExactos.c: 269:     _delay((unsigned long)((10)*(8000000/4000000.0)));
 11905  004DF8  0E06               	movlw	6
 11906  004DFA                     u7077:
 11907  004DFA  2EE8               	decfsz	wreg,f,c
 11908  004DFC  D7FE               	bra	u7077
 11909  004DFE  D000               	nop2	
 11910  004E00                     
 11911                           ;SensorNegPosExactos.c: 270:     LATD = Activa | 0x01;
 11912  004E00  5003               	movf	putch@Activa^0,w,c
 11913  004E02  0901               	iorlw	1
 11914  004E04  6E8C               	movwf	140,c	;volatile
 11915                           
 11916                           ;SensorNegPosExactos.c: 272:     _delay((unsigned long)((1)*(8000000/4000.0)));
 11917  004E06  0E03               	movlw	3
 11918  004E08  6E01               	movwf	??_putch^0,c
 11919  004E0A  0E98               	movlw	152
 11920  004E0C                     u7087:
 11921  004E0C  2EE8               	decfsz	wreg,f,c
 11922  004E0E  D7FE               	bra	u7087
 11923  004E10  2E01               	decfsz	??_putch^0,f,c
 11924  004E12  D7FC               	bra	u7087
 11925  004E14                     
 11926                           ;SensorNegPosExactos.c: 273:     Activa = (unsigned char)(data << 4);
 11927  004E14  3802               	swapf	putch@data^0,w,c
 11928  004E16  0BF0               	andlw	240
 11929  004E18  6E03               	movwf	putch@Activa^0,c
 11930  004E1A                     
 11931                           ;SensorNegPosExactos.c: 274:     LATD = Activa | 0x05;
 11932  004E1A  5003               	movf	putch@Activa^0,w,c
 11933  004E1C  0905               	iorlw	5
 11934  004E1E  6E8C               	movwf	140,c	;volatile
 11935                           
 11936                           ;SensorNegPosExactos.c: 275:     _delay((unsigned long)((10)*(8000000/4000000.0)));
 11937  004E20  0E06               	movlw	6
 11938  004E22                     u7097:
 11939  004E22  2EE8               	decfsz	wreg,f,c
 11940  004E24  D7FE               	bra	u7097
 11941  004E26  D000               	nop2	
 11942  004E28                     
 11943                           ;SensorNegPosExactos.c: 276:     LATD = Activa | 0x01;
 11944  004E28  5003               	movf	putch@Activa^0,w,c
 11945  004E2A  0901               	iorlw	1
 11946  004E2C  6E8C               	movwf	140,c	;volatile
 11947  004E2E  0012               	return		;funcret
 11948  004E30                     __end_of_putch:
 11949                           	callstack 0
 11950                           
 11951 ;; *************** function _atoi *****************
 11952 ;; Defined at:
 11953 ;;		line 4 in file "/Applications/microchip/xc8/v2.31/pic/sources/c99/common/atoi.c"
 11954 ;; Parameters:    Size  Location     Type
 11955 ;;  s               2    7[COMRAM] PTR const unsigned char 
 11956 ;;		 -> STR_11(19), STR_10(19), STR_9(14), STR_8(19), 
 11957 ;;		 -> STR_7(19), STR_6(16), STR_5(17), STR_4(17), 
 11958 ;;		 -> STR_3(17), STR_2(17), STR_1(17), Valores(16), 
 11959 ;; Auto vars:     Size  Location     Type
 11960 ;;  n               2   20[COMRAM] int 
 11961 ;;  neg             2   13[COMRAM] int 
 11962 ;; Return value:  Size  Location     Type
 11963 ;;                  2    7[COMRAM] int 
 11964 ;; Registers used:
 11965 ;;		wreg, fsr1l, fsr1h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 11966 ;; Tracked objects:
 11967 ;;		On entry : 0/0
 11968 ;;		On exit  : 0/0
 11969 ;;		Unchanged: 0/0
 11970 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 11971 ;;      Params:         2       0       0       0       0       0       0       0       0
 11972 ;;      Locals:         9       0       0       0       0       0       0       0       0
 11973 ;;      Temps:          4       0       0       0       0       0       0       0       0
 11974 ;;      Totals:        15       0       0       0       0       0       0       0       0
 11975 ;;Total ram usage:       15 bytes
 11976 ;; Hardware stack levels used:    1
 11977 ;; Hardware stack levels required when called:    1
 11978 ;; This function calls:
 11979 ;;		___wmul
 11980 ;;		_isdigit
 11981 ;;		_isspace
 11982 ;; This function is called by:
 11983 ;;		_vfpfcnvrt
 11984 ;; This function uses a non-reentrant model
 11985 ;;
 11986                           
 11987                           	psect	text48
 11988  0037DA                     __ptext48:
 11989                           	callstack 0
 11990  0037DA                     _atoi:
 11991                           	callstack 25
 11992  0037DA  0E00               	movlw	0
 11993  0037DC  6E16               	movwf	(atoi@n+1)^0,c
 11994  0037DE  0E00               	movlw	0
 11995  0037E0  6E15               	movwf	atoi@n^0,c
 11996  0037E2  0E00               	movlw	0
 11997  0037E4  6E0F               	movwf	(atoi@neg+1)^0,c
 11998  0037E6  0E00               	movlw	0
 11999  0037E8  6E0E               	movwf	atoi@neg^0,c
 12000  0037EA  EFF9  F01B         	goto	l4554
 12001  0037EE                     l4552:
 12002  0037EE  4A08               	infsnz	atoi@s^0,f,c
 12003  0037F0  2A09               	incf	(atoi@s+1)^0,f,c
 12004  0037F2                     l4554:
 12005  0037F2  0E01               	movlw	1
 12006  0037F4  6E14               	movwf	_atoi$1347^0,c
 12007  0037F6  C008  FFF6         	movff	atoi@s,tblptrl
 12008  0037FA  C009  FFF7         	movff	atoi@s+1,tblptrh
 12009  0037FE  6AF8               	clrf	tblptru,c
 12010  003800  0E07               	movlw	(high __ramtop+-1)
 12011  003802  64F7               	cpfsgt	tblptrh,c
 12012  003804  D003               	bra	u5777
 12013  003806  0008               	tblrd		*
 12014  003808  50F5               	movf	tablat,w,c
 12015  00380A  D005               	bra	u5770
 12016  00380C                     u5777:
 12017  00380C  CFF6 FFE1          	movff	tblptrl,fsr1l
 12018  003810  CFF7 FFE2          	movff	tblptrh,fsr1h
 12019  003814  50E7               	movf	indf1,w,c
 12020  003816                     u5770:
 12021  003816  0A20               	xorlw	32
 12022  003818  B4D8               	btfsc	status,2,c
 12023  00381A  EF11  F01C         	goto	u5781
 12024  00381E  EF13  F01C         	goto	u5780
 12025  003822                     u5781:
 12026  003822  EF3A  F01C         	goto	l4562
 12027  003826                     u5780:
 12028  003826  0EF7               	movlw	247
 12029  003828  6E0A               	movwf	??_atoi^0,c
 12030  00382A  0EFF               	movlw	255
 12031  00382C  6E0B               	movwf	(??_atoi+1)^0,c
 12032  00382E  C008  FFF6         	movff	atoi@s,tblptrl
 12033  003832  C009  FFF7         	movff	atoi@s+1,tblptrh
 12034  003836  6AF8               	clrf	tblptru,c
 12035  003838  0E07               	movlw	(high __ramtop+-1)
 12036  00383A  64F7               	cpfsgt	tblptrh,c
 12037  00383C  D003               	bra	u5797
 12038  00383E  0008               	tblrd		*
 12039  003840  50F5               	movf	tablat,w,c
 12040  003842  D005               	bra	u5790
 12041  003844                     u5797:
 12042  003844  CFF6 FFE1          	movff	tblptrl,fsr1l
 12043  003848  CFF7 FFE2          	movff	tblptrh,fsr1h
 12044  00384C  50E7               	movf	indf1,w,c
 12045  00384E                     u5790:
 12046  00384E  6E0C               	movwf	(??_atoi+2)^0,c
 12047  003850  6A0D               	clrf	(??_atoi+3)^0,c
 12048  003852  500A               	movf	??_atoi^0,w,c
 12049  003854  260C               	addwf	(??_atoi+2)^0,f,c
 12050  003856  500B               	movf	(??_atoi+1)^0,w,c
 12051  003858  220D               	addwfc	(??_atoi+3)^0,f,c
 12052  00385A  500D               	movf	(??_atoi+3)^0,w,c
 12053  00385C  E109               	bnz	u5800
 12054  00385E  0E05               	movlw	5
 12055  003860  5C0C               	subwf	(??_atoi+2)^0,w,c
 12056  003862  A0D8               	btfss	status,0,c
 12057  003864  EF36  F01C         	goto	u5801
 12058  003868  EF38  F01C         	goto	u5800
 12059  00386C                     u5801:
 12060  00386C  EF3A  F01C         	goto	l4562
 12061  003870                     u5800:
 12062  003870  0E00               	movlw	0
 12063  003872  6E14               	movwf	_atoi$1347^0,c
 12064  003874                     l4562:
 12065  003874  C014  F010         	movff	_atoi$1347,_atoi$1346
 12066  003878  6A11               	clrf	(_atoi$1346+1)^0,c
 12067  00387A  5010               	movf	_atoi$1346^0,w,c
 12068  00387C  1011               	iorwf	(_atoi$1346+1)^0,w,c
 12069  00387E  A4D8               	btfss	status,2,c
 12070  003880  EF44  F01C         	goto	u5811
 12071  003884  EF46  F01C         	goto	u5810
 12072  003888                     u5811:
 12073  003888  EFF7  F01B         	goto	l4552
 12074  00388C                     u5810:
 12075  00388C  EF50  F01C         	goto	l4572
 12076  003890                     l4568:
 12077  003890  0E00               	movlw	0
 12078  003892  6E0F               	movwf	(atoi@neg+1)^0,c
 12079  003894  0E01               	movlw	1
 12080  003896  6E0E               	movwf	atoi@neg^0,c
 12081  003898                     l4570:
 12082  003898  4A08               	infsnz	atoi@s^0,f,c
 12083  00389A  2A09               	incf	(atoi@s+1)^0,f,c
 12084  00389C  EF9B  F01C         	goto	l4578
 12085  0038A0                     l4572:
 12086  0038A0  C008  FFF6         	movff	atoi@s,tblptrl
 12087  0038A4  C009  FFF7         	movff	atoi@s+1,tblptrh
 12088  0038A8  6AF8               	clrf	tblptru,c
 12089  0038AA  0E07               	movlw	(high __ramtop+-1)
 12090  0038AC  64F7               	cpfsgt	tblptrh,c
 12091  0038AE  D003               	bra	u5827
 12092  0038B0  0008               	tblrd		*
 12093  0038B2  50F5               	movf	tablat,w,c
 12094  0038B4  D005               	bra	u5820
 12095  0038B6                     u5827:
 12096  0038B6  CFF6 FFE1          	movff	tblptrl,fsr1l
 12097  0038BA  CFF7 FFE2          	movff	tblptrh,fsr1h
 12098  0038BE  50E7               	movf	indf1,w,c
 12099  0038C0                     u5820:
 12100  0038C0  6E0A               	movwf	??_atoi^0,c
 12101  0038C2  6A0B               	clrf	(??_atoi+1)^0,c
 12102                           
 12103                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
 12104                           ; Switch size 1, requested type "simple"
 12105                           ; Number of cases is 1, Range of values is 0 to 0
 12106                           ; switch strategies available:
 12107                           ; Name         Instructions Cycles
 12108                           ; simple_byte            4     3 (average)
 12109                           ;	Chosen strategy is simple_byte
 12110  0038C4  500B               	movf	(??_atoi+1)^0,w,c
 12111  0038C6  0A00               	xorlw	0	; case 0
 12112  0038C8  B4D8               	btfsc	status,2,c
 12113  0038CA  EF69  F01C         	goto	l5262
 12114  0038CE  EF9B  F01C         	goto	l4578
 12115  0038D2                     l5262:
 12116                           
 12117                           ; Switch size 1, requested type "simple"
 12118                           ; Number of cases is 2, Range of values is 43 to 45
 12119                           ; switch strategies available:
 12120                           ; Name         Instructions Cycles
 12121                           ; simple_byte            7     4 (average)
 12122                           ;	Chosen strategy is simple_byte
 12123  0038D2  500A               	movf	??_atoi^0,w,c
 12124  0038D4  0A2B               	xorlw	43	; case 43
 12125  0038D6  B4D8               	btfsc	status,2,c
 12126  0038D8  EF4C  F01C         	goto	l4570
 12127  0038DC  0A06               	xorlw	6	; case 45
 12128  0038DE  B4D8               	btfsc	status,2,c
 12129  0038E0  EF48  F01C         	goto	l4568
 12130  0038E4  EF9B  F01C         	goto	l4578
 12131  0038E8                     l4574:
 12132  0038E8  C015  F001         	movff	atoi@n,___wmul@multiplier
 12133  0038EC  C016  F002         	movff	atoi@n+1,___wmul@multiplier+1
 12134  0038F0  0E00               	movlw	0
 12135  0038F2  6E04               	movwf	(___wmul@multiplicand+1)^0,c
 12136  0038F4  0E0A               	movlw	10
 12137  0038F6  6E03               	movwf	___wmul@multiplicand^0,c
 12138  0038F8  EC11  F028         	call	___wmul	;wreg free
 12139  0038FC  C008  FFF6         	movff	atoi@s,tblptrl
 12140  003900  C009  FFF7         	movff	atoi@s+1,tblptrh
 12141  003904  6AF8               	clrf	tblptru,c
 12142  003906  0E07               	movlw	(high __ramtop+-1)
 12143  003908  64F7               	cpfsgt	tblptrh,c
 12144  00390A  D003               	bra	u5837
 12145  00390C  0008               	tblrd		*
 12146  00390E  50F5               	movf	tablat,w,c
 12147  003910  D005               	bra	u5830
 12148  003912                     u5837:
 12149  003912  CFF6 FFE1          	movff	tblptrl,fsr1l
 12150  003916  CFF7 FFE2          	movff	tblptrh,fsr1h
 12151  00391A  50E7               	movf	indf1,w,c
 12152  00391C                     u5830:
 12153  00391C  6E0A               	movwf	??_atoi^0,c
 12154  00391E  500A               	movf	??_atoi^0,w,c
 12155  003920  5E01               	subwf	?___wmul^0,f,c
 12156  003922  0E00               	movlw	0
 12157  003924  5A02               	subwfb	(?___wmul+1)^0,f,c
 12158  003926  0E30               	movlw	48
 12159  003928  2401               	addwf	?___wmul^0,w,c
 12160  00392A  6E15               	movwf	atoi@n^0,c
 12161  00392C  0E00               	movlw	0
 12162  00392E  2002               	addwfc	(?___wmul+1)^0,w,c
 12163  003930  6E16               	movwf	(atoi@n+1)^0,c
 12164  003932  EF4C  F01C         	goto	l4570
 12165  003936                     l4578:
 12166  003936  0ED0               	movlw	208
 12167  003938  6E0A               	movwf	??_atoi^0,c
 12168  00393A  0EFF               	movlw	255
 12169  00393C  6E0B               	movwf	(??_atoi+1)^0,c
 12170  00393E  C008  FFF6         	movff	atoi@s,tblptrl
 12171  003942  C009  FFF7         	movff	atoi@s+1,tblptrh
 12172  003946  6AF8               	clrf	tblptru,c
 12173  003948  0E07               	movlw	(high __ramtop+-1)
 12174  00394A  64F7               	cpfsgt	tblptrh,c
 12175  00394C  D003               	bra	u5847
 12176  00394E  0008               	tblrd		*
 12177  003950  50F5               	movf	tablat,w,c
 12178  003952  D005               	bra	u5840
 12179  003954                     u5847:
 12180  003954  CFF6 FFE1          	movff	tblptrl,fsr1l
 12181  003958  CFF7 FFE2          	movff	tblptrh,fsr1h
 12182  00395C  50E7               	movf	indf1,w,c
 12183  00395E                     u5840:
 12184  00395E  6E0C               	movwf	(??_atoi+2)^0,c
 12185  003960  6A0D               	clrf	(??_atoi+3)^0,c
 12186  003962  500A               	movf	??_atoi^0,w,c
 12187  003964  260C               	addwf	(??_atoi+2)^0,f,c
 12188  003966  500B               	movf	(??_atoi+1)^0,w,c
 12189  003968  220D               	addwfc	(??_atoi+3)^0,f,c
 12190  00396A  500D               	movf	(??_atoi+3)^0,w,c
 12191  00396C  E10A               	bnz	u5850
 12192  00396E  0E0A               	movlw	10
 12193  003970  5C0C               	subwf	(??_atoi+2)^0,w,c
 12194  003972  A0D8               	btfss	status,0,c
 12195  003974  EFBE  F01C         	goto	u5851
 12196  003978  EFC1  F01C         	goto	u5850
 12197  00397C                     u5851:
 12198  00397C  0E01               	movlw	1
 12199  00397E  EFC2  F01C         	goto	u5860
 12200  003982                     u5850:
 12201  003982  0E00               	movlw	0
 12202  003984                     u5860:
 12203  003984  6E12               	movwf	_atoi$1348^0,c
 12204  003986  6A13               	clrf	(_atoi$1348+1)^0,c
 12205  003988  5012               	movf	_atoi$1348^0,w,c
 12206  00398A  1013               	iorwf	(_atoi$1348+1)^0,w,c
 12207  00398C  A4D8               	btfss	status,2,c
 12208  00398E  EFCB  F01C         	goto	u5871
 12209  003992  EFCD  F01C         	goto	u5870
 12210  003996                     u5871:
 12211  003996  EF74  F01C         	goto	l4574
 12212  00399A                     u5870:
 12213  00399A  500E               	movf	atoi@neg^0,w,c
 12214  00399C  100F               	iorwf	(atoi@neg+1)^0,w,c
 12215  00399E  A4D8               	btfss	status,2,c
 12216  0039A0  EFD4  F01C         	goto	u5881
 12217  0039A4  EFD6  F01C         	goto	u5880
 12218  0039A8                     u5881:
 12219  0039A8  EFE4  F01C         	goto	l1188
 12220  0039AC                     u5880:
 12221  0039AC  C015  F00A         	movff	atoi@n,??_atoi
 12222  0039B0  C016  F00B         	movff	atoi@n+1,??_atoi+1
 12223  0039B4  1E0A               	comf	??_atoi^0,f,c
 12224  0039B6  1E0B               	comf	(??_atoi+1)^0,f,c
 12225  0039B8  4A0A               	infsnz	??_atoi^0,f,c
 12226  0039BA  2A0B               	incf	(??_atoi+1)^0,f,c
 12227  0039BC  C00A  F008         	movff	??_atoi,?_atoi
 12228  0039C0  C00B  F009         	movff	??_atoi+1,?_atoi+1
 12229  0039C4  EFE8  F01C         	goto	l1191
 12230  0039C8                     l1188:
 12231  0039C8  C015  F008         	movff	atoi@n,?_atoi
 12232  0039CC  C016  F009         	movff	atoi@n+1,?_atoi+1
 12233  0039D0                     l1191:
 12234  0039D0  0012               	return		;funcret
 12235  0039D2                     __end_of_atoi:
 12236                           	callstack 0
 12237                           
 12238 ;; *************** function _isspace *****************
 12239 ;; Defined at:
 12240 ;;		line 5 in file "/Applications/microchip/xc8/v2.31/pic/sources/c99/common/isspace.c"
 12241 ;; Parameters:    Size  Location     Type
 12242 ;;  c               2    0[COMRAM] int 
 12243 ;; Auto vars:     Size  Location     Type
 12244 ;;		None
 12245 ;; Return value:  Size  Location     Type
 12246 ;;                  2    0[COMRAM] int 
 12247 ;; Registers used:
 12248 ;;		wreg, status,2, status,0
 12249 ;; Tracked objects:
 12250 ;;		On entry : 0/0
 12251 ;;		On exit  : 0/0
 12252 ;;		Unchanged: 0/0
 12253 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 12254 ;;      Params:         2       0       0       0       0       0       0       0       0
 12255 ;;      Locals:         1       0       0       0       0       0       0       0       0
 12256 ;;      Temps:          4       0       0       0       0       0       0       0       0
 12257 ;;      Totals:         7       0       0       0       0       0       0       0       0
 12258 ;;Total ram usage:        7 bytes
 12259 ;; Hardware stack levels used:    1
 12260 ;; This function calls:
 12261 ;;		Nothing
 12262 ;; This function is called by:
 12263 ;;		_atoi
 12264 ;; This function uses a non-reentrant model
 12265 ;;
 12266                           
 12267                           	psect	text49
 12268  004D0C                     __ptext49:
 12269                           	callstack 0
 12270  004D0C                     _isspace:
 12271                           	callstack 25
 12272  004D0C  0E01               	movlw	1
 12273  004D0E  6E07               	movwf	_isspace$1364^0,c
 12274  004D10  0E20               	movlw	32
 12275  004D12  1801               	xorwf	isspace@c^0,w,c
 12276  004D14  1002               	iorwf	(isspace@c+1)^0,w,c
 12277  004D16  B4D8               	btfsc	status,2,c
 12278  004D18  EF90  F026         	goto	u5011
 12279  004D1C  EF92  F026         	goto	u5010
 12280  004D20                     u5011:
 12281  004D20  EFAB  F026         	goto	l4148
 12282  004D24                     u5010:
 12283  004D24  0EF7               	movlw	247
 12284  004D26  6E03               	movwf	??_isspace^0,c
 12285  004D28  0EFF               	movlw	255
 12286  004D2A  6E04               	movwf	(??_isspace+1)^0,c
 12287  004D2C  C001  F005         	movff	isspace@c,??_isspace+2
 12288  004D30  C002  F006         	movff	isspace@c+1,??_isspace+3
 12289  004D34  5003               	movf	??_isspace^0,w,c
 12290  004D36  2605               	addwf	(??_isspace+2)^0,f,c
 12291  004D38  5004               	movf	(??_isspace+1)^0,w,c
 12292  004D3A  2206               	addwfc	(??_isspace+3)^0,f,c
 12293  004D3C  5006               	movf	(??_isspace+3)^0,w,c
 12294  004D3E  E109               	bnz	u5020
 12295  004D40  0E05               	movlw	5
 12296  004D42  5C05               	subwf	(??_isspace+2)^0,w,c
 12297  004D44  A0D8               	btfss	status,0,c
 12298  004D46  EFA7  F026         	goto	u5021
 12299  004D4A  EFA9  F026         	goto	u5020
 12300  004D4E                     u5021:
 12301  004D4E  EFAB  F026         	goto	l4148
 12302  004D52                     u5020:
 12303  004D52  0E00               	movlw	0
 12304  004D54  6E07               	movwf	_isspace$1364^0,c
 12305  004D56                     l4148:
 12306  004D56  C007  F001         	movff	_isspace$1364,?_isspace
 12307  004D5A  6A02               	clrf	(?_isspace+1)^0,c
 12308  004D5C  0012               	return		;funcret
 12309  004D5E                     __end_of_isspace:
 12310                           	callstack 0
 12311                           
 12312 ;; *************** function _isdigit *****************
 12313 ;; Defined at:
 12314 ;;		line 5 in file "/Applications/microchip/xc8/v2.31/pic/sources/c99/common/isdigit.c"
 12315 ;; Parameters:    Size  Location     Type
 12316 ;;  c               2    0[COMRAM] int 
 12317 ;; Auto vars:     Size  Location     Type
 12318 ;;		None
 12319 ;; Return value:  Size  Location     Type
 12320 ;;                  2    0[COMRAM] int 
 12321 ;; Registers used:
 12322 ;;		wreg, status,2, status,0
 12323 ;; Tracked objects:
 12324 ;;		On entry : 0/0
 12325 ;;		On exit  : 0/0
 12326 ;;		Unchanged: 0/0
 12327 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 12328 ;;      Params:         2       0       0       0       0       0       0       0       0
 12329 ;;      Locals:         0       0       0       0       0       0       0       0       0
 12330 ;;      Temps:          4       0       0       0       0       0       0       0       0
 12331 ;;      Totals:         6       0       0       0       0       0       0       0       0
 12332 ;;Total ram usage:        6 bytes
 12333 ;; Hardware stack levels used:    1
 12334 ;; This function calls:
 12335 ;;		Nothing
 12336 ;; This function is called by:
 12337 ;;		_vfpfcnvrt
 12338 ;;		_atoi
 12339 ;; This function uses a non-reentrant model
 12340 ;;
 12341                           
 12342                           	psect	text50
 12343  004F66                     __ptext50:
 12344                           	callstack 0
 12345  004F66                     _isdigit:
 12346                           	callstack 26
 12347  004F66  0ED0               	movlw	208
 12348  004F68  6E03               	movwf	??_isdigit^0,c
 12349  004F6A  0EFF               	movlw	255
 12350  004F6C  6E04               	movwf	(??_isdigit+1)^0,c
 12351  004F6E  C001  F005         	movff	isdigit@c,??_isdigit+2
 12352  004F72  C002  F006         	movff	isdigit@c+1,??_isdigit+3
 12353  004F76  5003               	movf	??_isdigit^0,w,c
 12354  004F78  2605               	addwf	(??_isdigit+2)^0,f,c
 12355  004F7A  5004               	movf	(??_isdigit+1)^0,w,c
 12356  004F7C  2206               	addwfc	(??_isdigit+3)^0,f,c
 12357  004F7E  5006               	movf	(??_isdigit+3)^0,w,c
 12358  004F80  E10A               	bnz	u4990
 12359  004F82  0E0A               	movlw	10
 12360  004F84  5C05               	subwf	(??_isdigit+2)^0,w,c
 12361  004F86  A0D8               	btfss	status,0,c
 12362  004F88  EFC8  F027         	goto	u4991
 12363  004F8C  EFCB  F027         	goto	u4990
 12364  004F90                     u4991:
 12365  004F90  0E01               	movlw	1
 12366  004F92  EFCC  F027         	goto	u5000
 12367  004F96                     u4990:
 12368  004F96  0E00               	movlw	0
 12369  004F98                     u5000:
 12370  004F98  6E01               	movwf	?_isdigit^0,c
 12371  004F9A  6A02               	clrf	(?_isdigit+1)^0,c
 12372  004F9C  0012               	return		;funcret
 12373  004F9E                     __end_of_isdigit:
 12374                           	callstack 0
 12375                           
 12376 ;; *************** function ___wmul *****************
 12377 ;; Defined at:
 12378 ;;		line 15 in file "/Applications/microchip/xc8/v2.31/pic/sources/c99/common/Umul16.c"
 12379 ;; Parameters:    Size  Location     Type
 12380 ;;  multiplier      2    0[COMRAM] unsigned int 
 12381 ;;  multiplicand    2    2[COMRAM] unsigned int 
 12382 ;; Auto vars:     Size  Location     Type
 12383 ;;  product         2    4[COMRAM] unsigned int 
 12384 ;; Return value:  Size  Location     Type
 12385 ;;                  2    0[COMRAM] unsigned int 
 12386 ;; Registers used:
 12387 ;;		wreg, status,2, status,0, prodl, prodh
 12388 ;; Tracked objects:
 12389 ;;		On entry : 0/0
 12390 ;;		On exit  : 0/0
 12391 ;;		Unchanged: 0/0
 12392 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 12393 ;;      Params:         4       0       0       0       0       0       0       0       0
 12394 ;;      Locals:         2       0       0       0       0       0       0       0       0
 12395 ;;      Temps:          0       0       0       0       0       0       0       0       0
 12396 ;;      Totals:         6       0       0       0       0       0       0       0       0
 12397 ;;Total ram usage:        6 bytes
 12398 ;; Hardware stack levels used:    1
 12399 ;; This function calls:
 12400 ;;		Nothing
 12401 ;; This function is called by:
 12402 ;;		_atoi
 12403 ;; This function uses a non-reentrant model
 12404 ;;
 12405                           
 12406                           	psect	text51
 12407  005022                     __ptext51:
 12408                           	callstack 0
 12409  005022                     ___wmul:
 12410                           	callstack 25
 12411  005022  5001               	movf	___wmul@multiplier^0,w,c
 12412  005024  0203               	mulwf	___wmul@multiplicand^0,c
 12413  005026  CFF3 F005          	movff	prodl,___wmul@product
 12414  00502A  CFF4 F006          	movff	prodh,___wmul@product+1
 12415  00502E  5001               	movf	___wmul@multiplier^0,w,c
 12416  005030  0204               	mulwf	(___wmul@multiplicand+1)^0,c
 12417  005032  50F3               	movf	243,w,c
 12418  005034  2606               	addwf	(___wmul@product+1)^0,f,c
 12419  005036  5002               	movf	(___wmul@multiplier+1)^0,w,c
 12420  005038  0203               	mulwf	___wmul@multiplicand^0,c
 12421  00503A  50F3               	movf	243,w,c
 12422  00503C  2606               	addwf	(___wmul@product+1)^0,f,c
 12423  00503E  C005  F001         	movff	___wmul@product,?___wmul
 12424  005042  C006  F002         	movff	___wmul@product+1,?___wmul+1
 12425  005046  0012               	return		;funcret
 12426  005048                     __end_of___wmul:
 12427                           	callstack 0
 12428                           
 12429                           	psect	rparam
 12430  0000                     
 12431                           	psect	idloc
 12432                           
 12433                           ;Config register IDLOC0 @ 0x200000
 12434                           ;	unspecified, using default values
 12435  200000                     	org	2097152
 12436  200000  FF                 	db	255
 12437                           
 12438                           ;Config register IDLOC1 @ 0x200001
 12439                           ;	unspecified, using default values
 12440  200001                     	org	2097153
 12441  200001  FF                 	db	255
 12442                           
 12443                           ;Config register IDLOC2 @ 0x200002
 12444                           ;	unspecified, using default values
 12445  200002                     	org	2097154
 12446  200002  FF                 	db	255
 12447                           
 12448                           ;Config register IDLOC3 @ 0x200003
 12449                           ;	unspecified, using default values
 12450  200003                     	org	2097155
 12451  200003  FF                 	db	255
 12452                           
 12453                           ;Config register IDLOC4 @ 0x200004
 12454                           ;	unspecified, using default values
 12455  200004                     	org	2097156
 12456  200004  FF                 	db	255
 12457                           
 12458                           ;Config register IDLOC5 @ 0x200005
 12459                           ;	unspecified, using default values
 12460  200005                     	org	2097157
 12461  200005  FF                 	db	255
 12462                           
 12463                           ;Config register IDLOC6 @ 0x200006
 12464                           ;	unspecified, using default values
 12465  200006                     	org	2097158
 12466  200006  FF                 	db	255
 12467                           
 12468                           ;Config register IDLOC7 @ 0x200007
 12469                           ;	unspecified, using default values
 12470  200007                     	org	2097159
 12471  200007  FF                 	db	255
 12472                           
 12473                           	psect	config
 12474                           
 12475                           ;Config register CONFIG1L @ 0x300000
 12476                           ;	PLL Selection
 12477                           ;	PLLSEL = 0x0, unprogrammed default
 12478                           ;	PLL Enable Configuration bit
 12479                           ;	CFGPLLEN = OFF, PLL Disabled (firmware controlled)
 12480                           ;	CPU System Clock Postscaler
 12481                           ;	CPUDIV = 0x0, unprogrammed default
 12482                           ;	Low Speed USB mode with 48 MHz system clock
 12483                           ;	LS48MHZ = 0x0, unprogrammed default
 12484  300000                     	org	3145728
 12485  300000  00                 	db	0
 12486                           
 12487                           ;Config register CONFIG1H @ 0x300001
 12488                           ;	Oscillator Selection
 12489                           ;	FOSC = INTOSCIO, Internal oscillator
 12490                           ;	Primary Oscillator Shutdown
 12491                           ;	PCLKEN = 0x1, unprogrammed default
 12492                           ;	Fail-Safe Clock Monitor
 12493                           ;	FCMEN = OFF, Fail-Safe Clock Monitor disabled
 12494                           ;	Internal/External Oscillator Switchover
 12495                           ;	IESO = OFF, Oscillator Switchover mode disabled
 12496  300001                     	org	3145729
 12497  300001  28                 	db	40
 12498                           
 12499                           ;Config register CONFIG2L @ 0x300002
 12500                           ;	Power-up Timer Enable
 12501                           ;	nPWRTEN = OFF, Power up timer disabled
 12502                           ;	Brown-out Reset Enable
 12503                           ;	BOREN = 0x3, unprogrammed default
 12504                           ;	Brown-out Reset Voltage
 12505                           ;	BORV = 0x3, unprogrammed default
 12506                           ;	Low-Power Brown-out Reset
 12507                           ;	nLPBOR = OFF, Low-Power Brown-out Reset disabled
 12508  300002                     	org	3145730
 12509  300002  5F                 	db	95
 12510                           
 12511                           ;Config register CONFIG2H @ 0x300003
 12512                           ;	Watchdog Timer Enable bits
 12513                           ;	WDTEN = OFF, WDT disabled in hardware (SWDTEN ignored)
 12514                           ;	Watchdog Timer Postscaler
 12515                           ;	WDTPS = 0xF, unprogrammed default
 12516  300003                     	org	3145731
 12517  300003  3C                 	db	60
 12518                           
 12519                           ; Padding undefined space
 12520  300004                     	org	3145732
 12521  300004  FF                 	db	255
 12522                           
 12523                           ;Config register CONFIG3H @ 0x300005
 12524                           ;	CCP2 MUX bit
 12525                           ;	CCP2MX = 0x1, unprogrammed default
 12526                           ;	PORTB A/D Enable bit
 12527                           ;	PBADEN = 0x1, unprogrammed default
 12528                           ;	Timer3 Clock Input MUX bit
 12529                           ;	T3CMX = 0x1, unprogrammed default
 12530                           ;	SDO Output MUX bit
 12531                           ;	SDOMX = 0x1, unprogrammed default
 12532                           ;	Master Clear Reset Pin Enable
 12533                           ;	MCLRE = ON, MCLR pin enabled; RE3 input disabled
 12534  300005                     	org	3145733
 12535  300005  D3                 	db	211
 12536                           
 12537                           ;Config register CONFIG4L @ 0x300006
 12538                           ;	Stack Full/Underflow Reset
 12539                           ;	STVREN = 0x1, unprogrammed default
 12540                           ;	Single-Supply ICSP Enable bit
 12541                           ;	LVP = OFF, Single-Supply ICSP disabled
 12542                           ;	Dedicated In-Circuit Debug/Programming Port Enable
 12543                           ;	ICPRT = OFF, ICPORT disabled
 12544                           ;	Extended Instruction Set Enable bit
 12545                           ;	XINST = OFF, Instruction set extension and Indexed Addressing mode disabled
 12546                           ;	Background Debugger Enable bit
 12547                           ;	DEBUG = 0x1, unprogrammed default
 12548  300006                     	org	3145734
 12549  300006  81                 	db	129
 12550                           
 12551                           ; Padding undefined space
 12552  300007                     	org	3145735
 12553  300007  FF                 	db	255
 12554                           
 12555                           ;Config register CONFIG5L @ 0x300008
 12556                           ;	Block 0 Code Protect
 12557                           ;	CP0 = OFF, Block 0 is not code-protected
 12558                           ;	Block 1 Code Protect
 12559                           ;	CP1 = OFF, Block 1 is not code-protected
 12560                           ;	Block 2 Code Protect
 12561                           ;	CP2 = OFF, Block 2 is not code-protected
 12562                           ;	Block 3 Code Protect
 12563                           ;	CP3 = OFF, Block 3 is not code-protected
 12564  300008                     	org	3145736
 12565  300008  0F                 	db	15
 12566                           
 12567                           ;Config register CONFIG5H @ 0x300009
 12568                           ;	Boot Block Code Protect
 12569                           ;	CPB = OFF, Boot block is not code-protected
 12570                           ;	Data EEPROM Code Protect
 12571                           ;	CPD = OFF, Data EEPROM is not code-protected
 12572  300009                     	org	3145737
 12573  300009  C0                 	db	192
 12574                           
 12575                           ;Config register CONFIG6L @ 0x30000A
 12576                           ;	Block 0 Write Protect
 12577                           ;	WRT0 = OFF, Block 0 (0800-1FFFh) is not write-protected
 12578                           ;	Block 1 Write Protect
 12579                           ;	WRT1 = OFF, Block 1 (2000-3FFFh) is not write-protected
 12580                           ;	Block 2 Write Protect
 12581                           ;	WRT2 = OFF, Block 2 (04000-5FFFh) is not write-protected
 12582                           ;	Block 3 Write Protect
 12583                           ;	WRT3 = OFF, Block 3 (06000-7FFFh) is not write-protected
 12584  30000A                     	org	3145738
 12585  30000A  0F                 	db	15
 12586                           
 12587                           ;Config register CONFIG6H @ 0x30000B
 12588                           ;	Configuration Registers Write Protect
 12589                           ;	WRTC = OFF, Configuration registers (300000-3000FFh) are not write-protected
 12590                           ;	Boot Block Write Protect
 12591                           ;	WRTB = OFF, Boot block (0000-7FFh) is not write-protected
 12592                           ;	Data EEPROM Write Protect
 12593                           ;	WRTD = OFF, Data EEPROM is not write-protected
 12594  30000B                     	org	3145739
 12595  30000B  E0                 	db	224
 12596                           
 12597                           ;Config register CONFIG7L @ 0x30000C
 12598                           ;	Block 0 Table Read Protect
 12599                           ;	EBTR0 = OFF, Block 0 is not protected from table reads executed in other blocks
 12600                           ;	Block 1 Table Read Protect
 12601                           ;	EBTR1 = OFF, Block 1 is not protected from table reads executed in other blocks
 12602                           ;	Block 2 Table Read Protect
 12603                           ;	EBTR2 = OFF, Block 2 is not protected from table reads executed in other blocks
 12604                           ;	Block 3 Table Read Protect
 12605                           ;	EBTR3 = OFF, Block 3 is not protected from table reads executed in other blocks
 12606  30000C                     	org	3145740
 12607  30000C  0F                 	db	15
 12608                           
 12609                           ;Config register CONFIG7H @ 0x30000D
 12610                           ;	Boot Block Table Read Protect
 12611                           ;	EBTRB = OFF, Boot block is not protected from table reads executed in other blocks
 12612  30000D                     	org	3145741
 12613  30000D  40                 	db	64
 12614                           tosu	equ	0xFFF
 12615                           tosh	equ	0xFFE
 12616                           tosl	equ	0xFFD
 12617                           stkptr	equ	0xFFC
 12618                           pclatu	equ	0xFFB
 12619                           pclath	equ	0xFFA
 12620                           pcl	equ	0xFF9
 12621                           tblptru	equ	0xFF8
 12622                           tblptrh	equ	0xFF7
 12623                           tblptrl	equ	0xFF6
 12624                           tablat	equ	0xFF5
 12625                           prodh	equ	0xFF4
 12626                           prodl	equ	0xFF3
 12627                           indf0	equ	0xFEF
 12628                           postinc0	equ	0xFEE
 12629                           postdec0	equ	0xFED
 12630                           preinc0	equ	0xFEC
 12631                           plusw0	equ	0xFEB
 12632                           fsr0h	equ	0xFEA
 12633                           fsr0l	equ	0xFE9
 12634                           wreg	equ	0xFE8
 12635                           indf1	equ	0xFE7
 12636                           postinc1	equ	0xFE6
 12637                           postdec1	equ	0xFE5
 12638                           preinc1	equ	0xFE4
 12639                           plusw1	equ	0xFE3
 12640                           fsr1h	equ	0xFE2
 12641                           fsr1l	equ	0xFE1
 12642                           bsr	equ	0xFE0
 12643                           indf2	equ	0xFDF
 12644                           postinc2	equ	0xFDE
 12645                           postdec2	equ	0xFDD
 12646                           preinc2	equ	0xFDC
 12647                           plusw2	equ	0xFDB
 12648                           fsr2h	equ	0xFDA
 12649                           fsr2l	equ	0xFD9
 12650                           status	equ	0xFD8

Data Sizes:
    Strings     121
    Constant    0
    Data        0
    BSS         178
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM           95     95      95
    BANK0           160    110     160
    BANK1           256      0     128
    BANK2           256      0       0
    BANK3           256      0       0
    BANK4           256      0       0
    BANK5           256      0       0
    BANK6           256      0       0
    BANK7           256      0       0

Pointer List with Targets:

    strncmp@_r	PTR const unsigned char  size(2) Largest target is 3
		 -> STR_22(CODE[3]), 

    strncmp@r	PTR const unsigned char  size(2) Largest target is 3
		 -> STR_22(CODE[3]), 

    strncmp@_l	PTR const unsigned char  size(2) Largest target is 3
		 -> vfpfcnvrt@ct(BANK0[3]), 

    strncmp@l	PTR const unsigned char  size(2) Largest target is 3
		 -> vfpfcnvrt@ct(BANK0[3]), 

    strlen@s	PTR const unsigned char  size(2) Largest target is 80
		 -> dbuf(BANK1[80]), 

    strlen@a	PTR const unsigned char  size(2) Largest target is 80
		 -> dbuf(BANK1[80]), 

    strcpy@dest	PTR unsigned char  size(2) Largest target is 80
		 -> dbuf(BANK1[80]), 

    strcpy@d	PTR unsigned char  size(2) Largest target is 80
		 -> dbuf(BANK1[80]), 

    strcpy@src	PTR const unsigned char  size(2) Largest target is 80
		 -> STR_17(CODE[4]), STR_16(CODE[4]), STR_13(CODE[4]), STR_12(CODE[4]), 
		 -> dbuf(BANK1[80]), 

    strcpy@s	PTR const unsigned char  size(2) Largest target is 80
		 -> STR_17(CODE[4]), STR_16(CODE[4]), STR_13(CODE[4]), STR_12(CODE[4]), 
		 -> dbuf(BANK1[80]), 

    printf@fmt	PTR const unsigned char  size(2) Largest target is 19
		 -> STR_11(CODE[19]), STR_10(CODE[19]), STR_9(CODE[14]), STR_8(CODE[19]), 
		 -> STR_7(CODE[19]), STR_6(CODE[16]), STR_5(CODE[17]), Valores(BANK1[16]), 

    printf@ap	PTR void [1] size(2) Largest target is 2
		 -> ?_printf(BANK0[2]), ?_sprintf(BANK0[2]), 

    fputs@s	PTR const unsigned char  size(2) Largest target is 80
		 -> dbuf(BANK1[80]), 

    fputs@fp	PTR struct _IO_FILE size(2) Largest target is 7
		 -> NULL(NULL[0]), sprintf@f(BANK0[6]), 

    fputc@fp.buffer	PTR unsigned char  size(2) Largest target is 16
		 -> Valores(BANK1[16]), 

    fputc@fp	PTR struct _IO_FILE size(2) Largest target is 7
		 -> NULL(NULL[0]), sprintf@f(BANK0[6]), 

    atoi@s	PTR const unsigned char  size(2) Largest target is 19
		 -> STR_11(CODE[19]), STR_10(CODE[19]), STR_9(CODE[14]), STR_8(CODE[19]), 
		 -> STR_7(CODE[19]), STR_6(CODE[16]), STR_5(CODE[17]), STR_4(CODE[17]), 
		 -> STR_3(CODE[17]), STR_2(CODE[17]), STR_1(CODE[17]), Valores(BANK1[16]), 

    vfprintf@ap	PTR PTR void  size(2) Largest target is 2
		 -> printf@ap(BANK0[2]), sprintf@ap(BANK0[2]), 

    vfprintf@fp	PTR struct _IO_FILE size(2) Largest target is 7
		 -> NULL(NULL[0]), sprintf@f(BANK0[6]), 

    vfprintf@fmt	PTR const unsigned char  size(2) Largest target is 19
		 -> STR_11(CODE[19]), STR_10(CODE[19]), STR_9(CODE[14]), STR_8(CODE[19]), 
		 -> STR_7(CODE[19]), STR_6(CODE[16]), STR_5(CODE[17]), STR_4(CODE[17]), 
		 -> STR_3(CODE[17]), STR_2(CODE[17]), STR_1(CODE[17]), Valores(BANK1[16]), 

    vfprintf@cfmt	PTR unsigned char  size(2) Largest target is 19
		 -> STR_11(CODE[19]), STR_10(CODE[19]), STR_9(CODE[14]), STR_8(CODE[19]), 
		 -> STR_7(CODE[19]), STR_6(CODE[16]), STR_5(CODE[17]), STR_4(CODE[17]), 
		 -> STR_3(CODE[17]), STR_2(CODE[17]), STR_1(CODE[17]), Valores(BANK1[16]), 

    vfpfcnvrt@vp	PTR void  size(2) Largest target is 2
		 -> ?_printf(BANK0[2]), ?_sprintf(BANK0[2]), 

    vfpfcnvrt@fp	PTR struct _IO_FILE size(2) Largest target is 7
		 -> NULL(NULL[0]), sprintf@f(BANK0[6]), 

    vfpfcnvrt@ap	PTR PTR void  size(2) Largest target is 2
		 -> printf@ap(BANK0[2]), sprintf@ap(BANK0[2]), 

    vfpfcnvrt@fmt	PTR PTR unsigned char  size(2) Largest target is 2
		 -> vfprintf@cfmt(COMRAM[2]), 

    efgtoa@fp	PTR struct _IO_FILE size(2) Largest target is 7
		 -> NULL(NULL[0]), sprintf@f(BANK0[6]), 

    sp__strcpy	PTR unsigned char  size(2) Largest target is 80
		 -> dbuf(BANK1[80]), 

    dtoa@fp	PTR struct _IO_FILE size(2) Largest target is 7
		 -> NULL(NULL[0]), sprintf@f(BANK0[6]), 

    ctoa@fp	PTR struct _IO_FILE size(2) Largest target is 7
		 -> NULL(NULL[0]), sprintf@f(BANK0[6]), 

    pad@fp	PTR struct _IO_FILE size(2) Largest target is 7
		 -> NULL(NULL[0]), sprintf@f(BANK0[6]), 

    pad@buf	PTR unsigned char  size(2) Largest target is 80
		 -> dbuf(BANK1[80]), 

    sprintf@fmt	PTR const unsigned char  size(2) Largest target is 17
		 -> STR_4(CODE[17]), STR_3(CODE[17]), STR_2(CODE[17]), STR_1(CODE[17]), 

    sprintf@s	PTR unsigned char  size(2) Largest target is 16
		 -> Valores(BANK1[16]), 

    sprintf@ap	PTR void [1] size(2) Largest target is 2
		 -> ?_printf(BANK0[2]), ?_sprintf(BANK0[2]), 

    S1136_IO_FILE$buffer	PTR unsigned char  size(2) Largest target is 16
		 -> Valores(BANK1[16]), 

    f.buffer	PTR unsigned char  size(2) Largest target is 16
		 -> Valores(BANK1[16]), 


Critical Paths under _main in COMRAM

    _main->_SensorLM35
    _sprintf->_vfprintf
    ___xxtofl->___fltol
    _LCD_COMANDOS->_Get_DATA
    _Get_DATA->_Set_DATA
    _InicializaLCD->_putcm
    _Alarma->_Cronometro
    _printf->_vfprintf
    _vfprintf->_vfpfcnvrt
    _vfpfcnvrt->_efgtoa
    _efgtoa->___flge
    _tolower->_isupper
    _floorf->___fldiv
    ___flsub->___flmul
    ___flmul->___xxtofl
    ___flge->___flsub
    ___awdiv->_Read_ADC
    ___awdiv->_Read_ADC1
    _dtoa->_pad
    _pad->_fputs
    _fputs->_fputc
    _abs->___aomod
    _ctoa->_fputc
    _fputc->_putch
    _atoi->_isspace

Critical Paths under _main in BANK0

    _main->_SensorLM35
    _SensorLM35->_sprintf
    _sprintf->_vfprintf
    _Alarma->_printf
    _Mostrar_Reloj->_printf
    _printf->_vfprintf
    _vfprintf->_vfpfcnvrt
    _vfpfcnvrt->_efgtoa

Critical Paths under _main in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _main in BANK6

    None.

Critical Paths under _main in BANK7

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 0     0      0  190965
                             _Alarma
                         _Alarma_LED
                      _Configuracion
                      _InicializaLCD
                       _LCD_COMANDOS
                         _SensorLM35
                _Timer0Configuration
 ---------------------------------------------------------------------------------
 (1) _Timer0Configuration                                  0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _SensorLM35                                           6     6      0   98305
                                             93 COMRAM     2     2      0
                                            106 BANK0      4     4      0
                           _Read_ADC
                          _Read_ADC1
                            ___awdiv
                             ___flge
                            ___flmul
                            ___flsub
                            ___fltol
                           ___xxtofl
                              _ceilf
                             _floorf
                             _printf
                              _putcm
                            _sprintf
 ---------------------------------------------------------------------------------
 (2) _sprintf                                             20    10     10   43244
                                             86 BANK0     20    10     10
                              _ceilf (ARG)
                           _vfprintf
 ---------------------------------------------------------------------------------
 (2) _ceilf                                               20    16      4     490
                                              0 COMRAM    20    16      4
 ---------------------------------------------------------------------------------
 (2) ___xxtofl                                            14    10      4     626
                                             10 COMRAM    14    10      4
                            ___fltol (ARG)
 ---------------------------------------------------------------------------------
 (2) _Read_ADC1                                            5     3      2      22
                                              0 COMRAM     5     3      2
 ---------------------------------------------------------------------------------
 (2) _Read_ADC                                             5     3      2      22
                                              0 COMRAM     5     3      2
 ---------------------------------------------------------------------------------
 (1) _LCD_COMANDOS                                         1     1      0     132
                                              3 COMRAM     1     1      0
                           _Get_DATA
 ---------------------------------------------------------------------------------
 (2) _Get_DATA                                             2     2      0      88
                                              1 COMRAM     2     2      0
                           _Set_DATA
 ---------------------------------------------------------------------------------
 (3) _Set_DATA                                             1     1      0       0
                                              0 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (1) _InicializaLCD                                        1     1      0     134
                                              3 COMRAM     1     1      0
                              _putcm
 ---------------------------------------------------------------------------------
 (1) _Configuracion                                        0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _Alarma_LED                                           3     3      0      24
                                              0 COMRAM     3     3      0
 ---------------------------------------------------------------------------------
 (1) _Alarma                                               2     2      0   92370
                                            104 BANK0      2     2      0
                         _Cronometro
                            ___awdiv
                            ___awmod
                             _printf
                              _putcm
 ---------------------------------------------------------------------------------
 (2) _Cronometro                                           2     2      0   46185
                                             93 COMRAM     2     2      0
                      _Mostrar_Reloj
 ---------------------------------------------------------------------------------
 (3) _Mostrar_Reloj                                        0     0      0   46185
                            ___awdiv
                            ___awmod
                             _printf
                              _putcm
 ---------------------------------------------------------------------------------
 (2) _putcm                                                3     3      0     134
                                              0 COMRAM     3     3      0
 ---------------------------------------------------------------------------------
 (2) _printf                                              18     4     14   43327
                                             86 BANK0     18     4     14
                           _vfprintf
 ---------------------------------------------------------------------------------
 (3) _vfprintf                                             8     2      6   42423
                                             91 COMRAM     2     2      0
                                             80 BANK0      6     0      6
                          _vfpfcnvrt
 ---------------------------------------------------------------------------------
 (4) _vfpfcnvrt                                           49    43      6   41805
                                             81 COMRAM    10     4      6
                                             56 BANK0     24    24      0
                               _atoi
                               _ctoa
                               _dtoa
                             _efgtoa
                              _fputc
                            _isdigit
                            _isupper
                            _strncmp
                            _tolower
 ---------------------------------------------------------------------------------
 (5) _strncmp                                             11     5      6     453
                                              0 COMRAM    11     5      6
 ---------------------------------------------------------------------------------
 (5) _efgtoa                                              68    61      7   26992
                                             69 COMRAM    12     5      7
                                              0 BANK0     56    56      0
                            ___awdiv
                            ___awmod
                            ___fladd
                            ___fldiv
                             ___fleq
                             ___flge
                            ___flmul
                            ___flneg
                            ___flsub
                            ___fltol
                      ___fpclassifyf
                             _floorf
                            _isupper
                                _pad
                             _strcpy
                            _tolower
 ---------------------------------------------------------------------------------
 (5) _tolower                                              8     6      2     944
                                              6 COMRAM     8     6      2
                            _isupper
 ---------------------------------------------------------------------------------
 (6) _isupper                                              6     4      2     465
                                              0 COMRAM     6     4      2
 ---------------------------------------------------------------------------------
 (6) _strcpy                                              10     6      4     856
                                              0 COMRAM    10     6      4
 ---------------------------------------------------------------------------------
 (6) _floorf                                              20    16      4     642
                                             25 COMRAM    20    16      4
                            ___fldiv (ARG)
 ---------------------------------------------------------------------------------
 (6) ___fpclassifyf                                       14    10      4     287
                                              0 COMRAM    14    10      4
 ---------------------------------------------------------------------------------
 (6) ___fltol                                             10     6      4     533
                                              0 COMRAM    10     6      4
 ---------------------------------------------------------------------------------
 (6) ___flsub                                              8     0      8    3345
                                             49 COMRAM     8     0      8
                            ___fladd
                            ___flmul (ARG)
                            ___fltol (ARG)
                           ___xxtofl (ARG)
 ---------------------------------------------------------------------------------
 (7) ___fladd                                             16     8      8    2414
                                              0 COMRAM    16     8      8
 ---------------------------------------------------------------------------------
 (6) ___flneg                                              4     0      4     121
                                              0 COMRAM     4     0      4
 ---------------------------------------------------------------------------------
 (6) ___flmul                                             25    17      8    2960
                                             24 COMRAM    25    17      8
                           ___xxtofl (ARG)
 ---------------------------------------------------------------------------------
 (6) ___flge                                              12     4      8    1398
                                             57 COMRAM    12     4      8
                            ___flmul (ARG)
                            ___flsub (ARG)
                            ___fltol (ARG)
                           ___xxtofl (ARG)
 ---------------------------------------------------------------------------------
 (6) ___fleq                                              12     4      8     646
                                              0 COMRAM    12     4      8
 ---------------------------------------------------------------------------------
 (6) ___fldiv                                             25    17      8    2007
                                              0 COMRAM    25    17      8
 ---------------------------------------------------------------------------------
 (6) ___awmod                                              6     2      4    1208
                                              0 COMRAM     6     2      4
 ---------------------------------------------------------------------------------
 (6) ___awdiv                                              8     4      4    1516
                                              5 COMRAM     8     4      4
                           _Read_ADC (ARG)
                          _Read_ADC1 (ARG)
 ---------------------------------------------------------------------------------
 (5) _dtoa                                                36    26     10    6222
                                             30 COMRAM    36    26     10
                            ___aodiv
                            ___aomod
                                _abs
                                _pad
 ---------------------------------------------------------------------------------
 (6) _pad                                                 11     5      6    4573
                                             19 COMRAM    11     5      6
                              _fputc
                              _fputs
                             _strlen
 ---------------------------------------------------------------------------------
 (7) _strlen                                               4     2      2     166
                                              0 COMRAM     4     2      2
 ---------------------------------------------------------------------------------
 (7) _fputs                                                7     3      4    1825
                                             12 COMRAM     7     3      4
                              _fputc
 ---------------------------------------------------------------------------------
 (6) _abs                                                  4     2      2     142
                                             18 COMRAM     4     2      2
                            ___aomod (ARG)
 ---------------------------------------------------------------------------------
 (6) ___aomod                                             18     2     16     448
                                              0 COMRAM    18     2     16
 ---------------------------------------------------------------------------------
 (6) ___aodiv                                             26    10     16     452
                                              0 COMRAM    26    10     16
 ---------------------------------------------------------------------------------
 (5) _ctoa                                                 8     5      3    1779
                                             12 COMRAM     8     5      3
                              _fputc
 ---------------------------------------------------------------------------------
 (5) _fputc                                                9     5      4    1424
                                              3 COMRAM     9     5      4
                              _putch
 ---------------------------------------------------------------------------------
 (6) _putch                                                3     3      0     134
                                              0 COMRAM     3     3      0
 ---------------------------------------------------------------------------------
 (5) _atoi                                                15    13      2    1488
                                              7 COMRAM    15    13      2
                             ___wmul
                            _isdigit
                            _isspace
 ---------------------------------------------------------------------------------
 (6) _isspace                                              7     5      2     207
                                              0 COMRAM     7     5      2
 ---------------------------------------------------------------------------------
 (5) _isdigit                                              6     4      2     313
                                              0 COMRAM     6     4      2
 ---------------------------------------------------------------------------------
 (6) ___wmul                                               6     2      4     495
                                              0 COMRAM     6     2      4
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 7
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _Alarma
     _Cronometro
       _Mostrar_Reloj
         ___awdiv
           _Read_ADC (ARG)
           _Read_ADC1 (ARG)
         ___awmod
         _printf
           _vfprintf
             _vfpfcnvrt
               _atoi
                 ___wmul
                 _isdigit
                 _isspace
               _ctoa
                 _fputc
                   _putch
               _dtoa
                 ___aodiv
                 ___aomod
                 _abs
                   ___aomod (ARG)
                 _pad
                   _fputc
                     _putch
                   _fputs
                     _fputc
                       _putch
                   _strlen
               _efgtoa
                 ___awdiv
                   _Read_ADC (ARG)
                   _Read_ADC1 (ARG)
                 ___awmod
                 ___fladd
                 ___fldiv
                 ___fleq
                 ___flge
                   ___flmul (ARG)
                     ___xxtofl (ARG)
                       ___fltol (ARG)
                   ___flsub (ARG)
                     ___fladd
                     ___flmul (ARG)
                       ___xxtofl (ARG)
                         ___fltol (ARG)
                     ___fltol (ARG)
                     ___xxtofl (ARG)
                       ___fltol (ARG)
                   ___fltol (ARG)
                   ___xxtofl (ARG)
                     ___fltol (ARG)
                 ___flmul
                   ___xxtofl (ARG)
                     ___fltol (ARG)
                 ___flneg
                 ___flsub
                   ___fladd
                   ___flmul (ARG)
                     ___xxtofl (ARG)
                       ___fltol (ARG)
                   ___fltol (ARG)
                   ___xxtofl (ARG)
                     ___fltol (ARG)
                 ___fltol
                 ___fpclassifyf
                 _floorf
                   ___fldiv (ARG)
                 _isupper
                 _pad
                   _fputc
                     _putch
                   _fputs
                     _fputc
                       _putch
                   _strlen
                 _strcpy
                 _tolower
                   _isupper
               _fputc
                 _putch
               _isdigit
               _isupper
               _strncmp
               _tolower
                 _isupper
         _putcm
     ___awdiv
       _Read_ADC (ARG)
       _Read_ADC1 (ARG)
     ___awmod
     _printf
       _vfprintf
         _vfpfcnvrt
           _atoi
             ___wmul
             _isdigit
             _isspace
           _ctoa
             _fputc
               _putch
           _dtoa
             ___aodiv
             ___aomod
             _abs
               ___aomod (ARG)
             _pad
               _fputc
                 _putch
               _fputs
                 _fputc
                   _putch
               _strlen
           _efgtoa
             ___awdiv
               _Read_ADC (ARG)
               _Read_ADC1 (ARG)
             ___awmod
             ___fladd
             ___fldiv
             ___fleq
             ___flge
               ___flmul (ARG)
                 ___xxtofl (ARG)
                   ___fltol (ARG)
               ___flsub (ARG)
                 ___fladd
                 ___flmul (ARG)
                   ___xxtofl (ARG)
                     ___fltol (ARG)
                 ___fltol (ARG)
                 ___xxtofl (ARG)
                   ___fltol (ARG)
               ___fltol (ARG)
               ___xxtofl (ARG)
                 ___fltol (ARG)
             ___flmul
               ___xxtofl (ARG)
                 ___fltol (ARG)
             ___flneg
             ___flsub
               ___fladd
               ___flmul (ARG)
                 ___xxtofl (ARG)
                   ___fltol (ARG)
               ___fltol (ARG)
               ___xxtofl (ARG)
                 ___fltol (ARG)
             ___fltol
             ___fpclassifyf
             _floorf
               ___fldiv (ARG)
             _isupper
             _pad
               _fputc
                 _putch
               _fputs
                 _fputc
                   _putch
               _strlen
             _strcpy
             _tolower
               _isupper
           _fputc
             _putch
           _isdigit
           _isupper
           _strncmp
           _tolower
             _isupper
     _putcm
   _Alarma_LED
   _Configuracion
   _InicializaLCD
     _putcm
   _LCD_COMANDOS
     _Get_DATA
       _Set_DATA
   _SensorLM35
     _Read_ADC
     _Read_ADC1
     ___awdiv
       _Read_ADC (ARG)
       _Read_ADC1 (ARG)
     ___flge
       ___flmul (ARG)
         ___xxtofl (ARG)
           ___fltol (ARG)
       ___flsub (ARG)
         ___fladd
         ___flmul (ARG)
           ___xxtofl (ARG)
             ___fltol (ARG)
         ___fltol (ARG)
         ___xxtofl (ARG)
           ___fltol (ARG)
       ___fltol (ARG)
       ___xxtofl (ARG)
         ___fltol (ARG)
     ___flmul
       ___xxtofl (ARG)
         ___fltol (ARG)
     ___flsub
       ___fladd
       ___flmul (ARG)
         ___xxtofl (ARG)
           ___fltol (ARG)
       ___fltol (ARG)
       ___xxtofl (ARG)
         ___fltol (ARG)
     ___fltol
     ___xxtofl
       ___fltol (ARG)
     _ceilf
     _floorf
       ___fldiv (ARG)
     _printf
       _vfprintf
         _vfpfcnvrt
           _atoi
             ___wmul
             _isdigit
             _isspace
           _ctoa
             _fputc
               _putch
           _dtoa
             ___aodiv
             ___aomod
             _abs
               ___aomod (ARG)
             _pad
               _fputc
                 _putch
               _fputs
                 _fputc
                   _putch
               _strlen
           _efgtoa
             ___awdiv
               _Read_ADC (ARG)
               _Read_ADC1 (ARG)
             ___awmod
             ___fladd
             ___fldiv
             ___fleq
             ___flge
               ___flmul (ARG)
                 ___xxtofl (ARG)
                   ___fltol (ARG)
               ___flsub (ARG)
                 ___fladd
                 ___flmul (ARG)
                   ___xxtofl (ARG)
                     ___fltol (ARG)
                 ___fltol (ARG)
                 ___xxtofl (ARG)
                   ___fltol (ARG)
               ___fltol (ARG)
               ___xxtofl (ARG)
                 ___fltol (ARG)
             ___flmul
               ___xxtofl (ARG)
                 ___fltol (ARG)
             ___flneg
             ___flsub
               ___fladd
               ___flmul (ARG)
                 ___xxtofl (ARG)
                   ___fltol (ARG)
               ___fltol (ARG)
               ___xxtofl (ARG)
                 ___fltol (ARG)
             ___fltol
             ___fpclassifyf
             _floorf
               ___fldiv (ARG)
             _isupper
             _pad
               _fputc
                 _putch
               _fputs
                 _fputc
                   _putch
               _strlen
             _strcpy
             _tolower
               _isupper
           _fputc
             _putch
           _isdigit
           _isupper
           _strncmp
           _tolower
             _isupper
     _putcm
     _sprintf
       _ceilf (ARG)
       _vfprintf (ARG)
         _vfpfcnvrt
           _atoi
             ___wmul
             _isdigit
             _isspace
           _ctoa
             _fputc
               _putch
           _dtoa
             ___aodiv
             ___aomod
             _abs
               ___aomod (ARG)
             _pad
               _fputc
                 _putch
               _fputs
                 _fputc
                   _putch
               _strlen
           _efgtoa
             ___awdiv
               _Read_ADC (ARG)
               _Read_ADC1 (ARG)
             ___awmod
             ___fladd
             ___fldiv
             ___fleq
             ___flge
               ___flmul (ARG)
                 ___xxtofl (ARG)
                   ___fltol (ARG)
               ___flsub (ARG)
                 ___fladd
                 ___flmul (ARG)
                   ___xxtofl (ARG)
                     ___fltol (ARG)
                 ___fltol (ARG)
                 ___xxtofl (ARG)
                   ___fltol (ARG)
               ___fltol (ARG)
               ___xxtofl (ARG)
                 ___fltol (ARG)
             ___flmul
               ___xxtofl (ARG)
                 ___fltol (ARG)
             ___flneg
             ___flsub
               ___fladd
               ___flmul (ARG)
                 ___xxtofl (ARG)
                   ___fltol (ARG)
               ___fltol (ARG)
               ___xxtofl (ARG)
                 ___fltol (ARG)
             ___fltol
             ___fpclassifyf
             _floorf
               ___fldiv (ARG)
             _isupper
             _pad
               _fputc
                 _putch
               _fputs
                 _fputc
                   _putch
               _strlen
             _strcpy
             _tolower
               _isupper
           _fputc
             _putch
           _isdigit
           _isupper
           _strncmp
           _tolower
             _isupper
   _Timer0Configuration

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             7FF      0       0      21        0.0%
EEDATA             100      0       0       0        0.0%
BITBANK7           100      0       0      19        0.0%
BANK7              100      0       0      20        0.0%
BITBANK6           100      0       0      17        0.0%
BANK6              100      0       0      18        0.0%
BITBANK5           100      0       0      15        0.0%
BANK5              100      0       0      16        0.0%
BITBANK4           100      0       0      13        0.0%
BANK4              100      0       0      14        0.0%
BITBANK3           100      0       0      11        0.0%
BANK3              100      0       0      12        0.0%
BITBANK2           100      0       0       9        0.0%
BANK2              100      0       0      10        0.0%
BITBANK1           100      0       0       7        0.0%
BANK1              100      0      80       8       50.0%
BITBANK0            A0      0       0       4        0.0%
BANK0               A0     6E      A0       5      100.0%
BITCOMRAM           5F      0       0       0        0.0%
COMRAM              5F     5F      5F       1      100.0%
BITSFR_1             0      0       0     200        0.0%
SFR_1                0      0       0     200        0.0%
BITSFR               0      0       0     200        0.0%
SFR                  0      0       0     200        0.0%
STACK                0      0       0       2        0.0%
NULL                 0      0       0       0        0.0%
ABS                  0      0     17F       6        0.0%
DATA                 0      0     17F       3        0.0%
CODE                 0      0       0       0        0.0%


Microchip Technology PIC18 Macro Assembler V2.31 build 20201012212115 
Symbol Table                                                                                   Fri Apr 30 12:28:13 2021

                ___fldiv@aexp 0019                  ___fldiv@bexp 0018                  ___fldiv@sign 0011  
                          _DH 00E4                            _DM 00E0                            _DS 00DC  
                          _UH 00E2                            _UM 00DE                            _US 00DA  
                ___awdiv@sign 000B           ___wmul@multiplicand 0003                ??_LCD_COMANDOS 0004  
                         l121 4B30                           l130 4B9A                           l133 5020  
               _InicializaLCD 49C6                           l142 509A                           l118 4B10  
                         l151 4A4C                           l127 4B7A                           l136 50AE  
                         l209 5046                           l145 4E2E                           l170 3FC4  
                         l162 267C                           l323 3D0C                           l139 4BFC  
                         l148 4EB4                           l157 25C4                           l165 5082  
                         l182 31AC                           l190 33B4                           _ADC 00FE  
                         l336 3E70                           l440 47D2                           l176 49C4  
                         l506 40CA                           l179 315A                           l195 4166  
                         l453 4882                           l198 41CE                           l802 2CE6  
                         l474 428C                           l483 4F64                           l804 2D5E  
                         l468 492C                           l805 2D4C                           l830 2938  
                         l902 371C                           l479 42D2                           l823 2742  
                         l840 2A68                           l832 29B0                           l833 299E  
                         l737 1F3A                           l913 4D0A                           l754 2054  
                         l746 220A                           l738 1F28                           l827 2AA6  
                         l763 2124                           l739 1EEE                           l764 2112  
                         l791 2E40                           l871 3AC0                           l864 3A28  
                         l961 470E                           l793 2CA0                           l779 4DE8  
                         l867 3B84                           l972 4438                           l956 4690  
                         l796 2C64                           l878 3B1C                           l886 35C6  
                         l975 447A                           l959 46D2                           l983 2EE2  
                         l977 44A8                           l985 2EEA                           l889 350A  
                         l899 37D8                           _abs 4EB6                           _pad 464A  
                ___awmod@sign 0006                           wreg 000FE8                  ___flmul@aexp 002A  
                ___flmul@bexp 002B                  ___flmul@sign 0025                  ___flmul@temp 0030  
                ___flmul@prod 002C                  ___fltol@exp1 000A                          l1003 3124  
                        l1021 14D2                          l1202 4D5C                          l1123 1D4A  
                        ?_abs 0013                          l1141 4ABA                          l1134 1BEC  
                        l1142 4AC2                          l1223 4648                          l1231 4E72  
                        l1039 0C68                          l1160 4EF4                          l1152 43D0  
                        l1208 4F2C                          l1250 4FD2                          l1067 10A8  
                        l1244 4CB8                          l1157 4EEC                          l1254 457E  
                        l1238 4FFA                          l1191 39D0                          l4000 41D0  
                        l1264 4C54                          l1194 4F9C                          l4010 425A  
                        l4002 41FE                          l1188 39C8                          l4012 426C  
                        l4004 420E                          l3300 1D78                          l4100 42D4  
                        l1269 4C5C                          l4014 427A                          l4006 423C  
                        l4022 4F2E                          l3310 1DB2                          l3302 1D88  
                        l4030 3FC6                          l4102 42F4                          l4200 2F18  
                        l4016 42CA                          l4008 424C                          l4024 4F44  
                        l3400 1F7C                          l3320 1DE0                          l3312 1DB8  
                        l3304 1D98                          l4040 401C                          l4032 3FDC  
                        l4104 4332                          l4112 4372                          l5000 220C  
                        l4210 2FB8                          l4202 2F20                          l4018 42D0  
                        l4026 4F54                          l3410 1FB6                          l3402 1F8A  
                        l3330 1E14                          l3322 1DE2                          l3314 1DCA  
                        l3306 1D9A                          l4042 402C                          l4114 4384  
                        l4106 435A                          l4122 4C5E                          l4130 4C34  
                        l5010 232E                          l5002 2250                          l4140 4D0C  
                        l3500 4E52                          l4220 3074                          l4212 2FBE  
                        l4204 2F2A                          l3420 2022                          l3412 1FB8  
                        l3404 1F98                          l3340 1E50                          l3324 1DF2  
                        l3332 1E1C                          l3316 1DCC                          l3308 1DA2  
                        l4052 4056                          l4044 4030                          l4036 3FF0  
                        l4108 4366                          l4124 4C6E                          l4132 4C46  
                        l4300 0A94                          l5100 317C                          l5020 241A  
                        l5012 233E                          l5004 2262                          l4142 4D10  
                        l3270 4E00                          l3502 4F9E                          l4230 30C6  
                        l4222 308E                          l4206 2F30                          l4214 3022  
                        l3430 207A                          l3422 2024                          l3414 1FC2  
                        l3406 1FA4                          l3350 1E64                          l3342 1E54  
                        l3334 1E2C                          l3326 1E02                          l3318 1DD2  
                        l4070 40BA                          l4062 407E                          l4054 4060  
                        l4046 403E                          l4038 401A                          l4118 43C8  
                        l4126 4BFE                          l4310 0ACA                          l5110 31F2  
                        l5102 318A                          l5022 2428                          l5014 23C0  
                        l5006 22AE                          _ADC1 00FC                          l4136 4F66  
                        l4144 4D24                          l3272 4E14                          l3280 4592  
                        l4160 440C                          l4152 43D2                          l3600 3D40  
                        l3504 4FAA                          l4080 467C                          l4232 30D8  
                        l4216 303C                          l4224 309E                          l4208 2FB2  
                        l3440 20A8                          l3424 2034                          l3408 1FA8  
                        l3416 1FC8                          l3360 1E78                          l3352 1E68  
                        l3344 1E58                          l3336 1E3E                          l3328 1E12  
                        l4064 408A                          l4056 406A                          l3520 363E  
                        l3512 4EF6                          l4400 0F74                          l4320 0B94  
                        l5120 324C                          l5112 320C                          l5104 31A4  
                        l5016 23C6                          l5024 243C                          l5008 22FA  
                        l4146 4D52                          l3274 4E1A                          l3266 4DEC  
                        l3282 45A4                          l4170 4458                          l4162 441E  
                        l4154 43E6                          l3610 3D98                          l3602 3D44  
                        l3506 4FAE                          l4090 46E2                          l4082 4688  
                        l4074 464A                          l4234 30E4                          l4226 30B0  
                        l4218 305A                          l3442 20B6                          l3434 208E  
                        l3450 20D4                          l3418 1FEE                          l3426 2044  
                        l3362 1E7C                          l3354 1E6C                          l3346 1E5C  
                        l3338 1E4C                          l3370 1E8C                          l4066 409A  
                        l3530 370C                          l3522 3652                          l4410 1024  
                        l4402 0F84                          l4330 0C16                          l4322 0BC8  
                        l4314 0B00                          l4250 08AC                          l4242 087C  
                        l5122 3284                          l5130 32D0                          l5114 321A  
                        l5106 31A6                          l5026 2466                          l5018 240A  
                        l5034 2498                          l4148 4D56                          l3276 4E28  
                        l3268 4DF8                          l3284 45AE                          l4172 445C  
                        l4156 43F2                          l3620 3E1A                          l3612 3DAC  
                        l3604 3D52                          l3508 4FC6                          l4092 46F6  
                        l4084 469C                          l4076 465A                          l4236 30EC  
                        l4228 30C0                          l4180 2E42                          l3700 2C40  
                        l3444 20BE                          l3436 2098                          l3428 206A  
                        l3452 20E2                          l3380 1EFC                          l3372 1E90  
                        l3364 1E80                          l3356 1E70                          l3348 1E60  
                        l3292 1D4C                          l4068 40AA                          l3540 37C8  
                        l3524 3660                          l3532 3740                          l3516 35C8  
                        l4500 136C                          l4420 1094                          l4412 1058  
                        l4404 0F94                          l4332 0C28                          l4340 0C74  
                        l4324 0BD0                          l4316 0B34                          l4308 0AB0  
                        l4260 0902                          l4252 08D0                          l4244 0886  
                        l5140 3352                          l5132 32EE                          l5124 329E  
                        l5116 3236                          l5108 31BA                          l5060 260A  
                        l5036 251A                          l3286 45CC                          l3278 4580  
                        l4174 448A                          l4166 4430                          l4158 43FE  
                        l3550 3B86                          l3614 3DBA                          l3622 3E20  
                        l3606 3D72                          l4086 46B0                          l4078 466E  
                        l4238 30FC                          l4190 2EBC                          l4182 2E62  
                        l3710 2C8E                          l3702 2C54                          l3630 2AA8  
                        l3462 2134                          l3470 218A                          l3454 20E6  
                        l3446 20C2                          l3438 20A6                          l3390 1F26  
                        l3382 1F08                          l3374 1EBA                          l3366 1E84  
                        l3358 1E74                          l3294 1D58                          l3534 377C  
                        l3518 35E8                          l4510 13C8                          l4502 1378  
                        l4430 114A                          l4422 10A0                          l4414 106C  
                        l4406 0FC8                          l4350 0CB4                          l4334 0C3A  
                        l4318 0B3A                          l4326 0C02                          l4270 0930  
                        l4262 0914                          l4254 08DA                          l4246 0896  
                        l5134 32F4                          l5126 32AC                          l5118 323E  
                        l5142 3390                          l5150 40CC                          l5062 2620  
                        l5038 2520                          l5046 2568                          l5070 506A  
                        l3544 5022                          l3288 4602                          l4176 449C  
                        l4168 4444                          l3560 3BCA                          l3552 3B8A  
                        l3624 3E30                          l3616 3DE8                          l3608 3D90  
                        l4096 4EB6                          l4088 46B4                          l4192 2ED6  
                        l4184 2E8A                          l3720 2CD6                          l3712 2C9E  
                        l3704 2C62                          l3640 2AE4                          l3632 2AB4  
                        l3800 2732                          l3480 21DC                          l3472 219A  
                        l3464 2140                          l3456 20F4                          l3448 20D2  
                        l3392 1F48                          l3384 1F0C                          l3376 1ED6  
                        l3368 1E88                          l3296 1D66                          l3536 3790  
                        l3528 36D0                          l4520 1412                          l4504 137E  
                        l4512 13CE                          l4440 1192                          l4432 115C  
                        l4424 10C4                          l4408 101E                          l4416 1070  
                        l4360 0D10                          l4352 0CEA                          l4336 0C42  
                        l4328 0C12                          l4280 09A4                          l4264 0920  
                        l4272 0936                          l4256 08E2                          l4248 08A4  
                        l4600 44EE                          l5144 339E                          l5136 3336  
                        l5128 32C8                          l5160 4146                          l5152 40E6  
                        l5064 2652                          l5056 25F6                          l5048 2592  
                        l5080 507C                          l5072 5072                          l3546 503E  
                        l3570 3C20                          l3562 3BEA                          l3554 3B98  
                        l3626 3E50                          l3618 3E08                          l4098 4ED0  
                        l4194 2EF2                          l4186 2EAA                          l3730 2D16  
                        l3722 2CE4                          l3714 2CB0                          l3706 2C6E  
                        l3650 2B14                          l3642 2AF4                          l3634 2AC2  
                        l3810 2782                          l3802 2752                          l3490 21FA  
                        l3482 21E2                          l3474 21AA                          l3466 214E  
                        l3458 210A                          l3394 1F58                          l3386 1F1A  
                        l3378 1EE6                          l3298 1D68                          l3538 37B8  
                        l4530 1442                          l4522 141E                          l4514 13E0  
                        l4506 13A4                          l4450 11C8                          l4442 11A2  
                        l4434 116A                          l4426 1128                          l4418 1080  
                        l4370 0D54                          l4362 0D22                          l4354 0CF2  
                        l4346 0C86                          l4338 0C5C                          l4282 09C0  
                        l4274 095C                          l4290 0A0A                          l4266 0928  
                        l4258 08F4                          l4602 4506                          l5146 33B0  
                        l5138 334C                          l5090 3136                          l5170 419C  
                        l5162 415E                          l5154 40FE                          l5066 2658  
                        l5058 25FC                          l5082 507E                          l5074 5076  
                        l3580 3CA2                          l3572 3C34                          l3564 3BEE  
                        l3556 3BB8                          l4196 2F04                          l4188 2EBA  
                        l3740 2D88                          l3732 2D44                          l3716 2CC6  
                        l3724 2CF6                          l3708 2C8C                          l3660 2B4A  
                        l3652 2B1A                          l3644 2AF6                          l3636 2AC4  
                        l3820 27D2                          l3812 278C                          l3804 2762  
                        l3484 21E4                          l3476 21CA                          l3468 2188  
                        l3388 1F1C                          l3900 4DB4                          l4540 149C  
                        l4524 1426                          l4516 13FA                          l4508 13C0  
                        l4460 11FC                          l4452 11CC                          l4444 11A6  
                        l4428 1138                          l4436 1172                          l4380 0D9E  
                        l4372 0D6C                          l4364 0D30                          l4348 0C98  
                        l4356 0CF6                          l4292 0A30                          l4284 09D8  
                        l4268 092C                          l4604 4522                          l4700 1AE0  
                        l4620 152E                          l4612 14D4                          l5148 33B2  
                        l5092 3150                          l5164 4168                          l5172 419E  
                        l5156 4116                          l5260 4AFA                          l5068 2666  
                        l5084 5080                          l5076 5078                          l5180 4D66  
                        l5262 38D2                          l4550 37DA                          l3590 3CEC  
                        l3582 3CA4                          l3574 3C42                          l3566 3BFA  
                        l3558 3BBC                          l3494 4E30                          l4198 2F12  
                        l3910 472A                          l3750 2E00                          l3742 2DB2  
                        l3726 2D04                          l3718 2CCC                          l3670 2B8A  
                        l3662 2B5A                          l3654 2B28                          l3638 2AD4  
                        l3646 2AFE                          l3830 2814                          l3822 27DE  
                        l3814 27A2                          l3486 21EA                          l3478 21CE  
                        l3398 1F6C                          l4542 14AC                          l4534 1476  
                        l4526 1436                          l4518 1400                          l4470 129A  
                        l4462 1200                          l4454 11D2                          l4446 11AC  
                        l4438 1184                          l4382 0DB2                          l4390 0EA8  
                        l4374 0D7E                          l4366 0D34                          l4358 0CFE  
                        l4286 09E2                          l4278 0992                          l4606 4534  
                        l4630 15D8                          l4622 1564                          l4614 150A  
                        l5094 3152                          l5086 3126                          l5166 4180  
                        l5158 412E                          l5174 41B2                          l5078 507A  
                        l5190 4D88                          l5182 4D6A                          ?_pad 0014  
                        l4560 3870                          l4552 37EE                          l3584 3CB6  
                        l3576 3C54                          l3568 3C18                          l3496 4E3C  
                        l3920 4750                          l3912 472E                          l3904 4710  
                        l3760 2E36                          l3752 2E1C                          l3736 2D6E  
                        l3744 2DB6                          l3728 2D08                          l3672 2B9A  
                        l3680 2BBA                          l3664 2B5C                          l3656 2B2A  
                        l3648 2B0E                          l3840 2876                          l3832 2824  
                        l3824 27EC                          l3816 27AE                          l3808 2776  
                        l3488 21F8                          l4544 14B2                          l4536 1488  
                        l4528 143C                          l4480 12F8                          l4448 11B8  
                        l4456 11D8                          l4464 1206                          l4472 129E  
                        l4392 0EC6                          l4384 0E16                          l4368 0D46  
                        l4376 0D86                          l4296 0A66                          l4608 455C  
                        l4720 1C7C                          l4704 1B76                          l4640 1688  
                        l4632 15E6                          l4624 159A                          l4616 1518  
                        l5096 315C                          l5088 3134                          l5176 41B6  
                        l5168 4184                          l4800 4AE6                          l5192 4D90  
                        l5184 4D70                          l4570 3898                          l4562 3874  
                        l4554 37F2                          l3578 3C82                          l3586 3CBC  
                        l3594 3D0E                          l3498 4E4E                          l3930 4786  
                        l3922 4762                          l3914 473C                          l3906 4714  
                        l3754 2E20                          l3746 2DD0                          l3738 2D7A  
                        l3690 2BF8                          l3682 2BCA                          l3674 2BA2  
                        l3658 2B3A                          l3666 2B64                          l3850 291E  
                        l3842 2892                          l3834 283E                          l3826 27F8  
                        l3818 27C6                          l3770 268A                          l4538 1494  
                        l4490 1336                          l4482 1308                          l4474 12BC  
                        l4466 125E                          l4458 11EA                          l4394 0EFA  
                        l4386 0E6E                          l4378 0D8E                          l4298 0A78  
                        l4730 1CE0                          l4706 1B88                          l4714 1C00  
                        l4650 1730                          l4642 1692                          l4626 15AA  
                        l4618 152A                          l5098 3176                          l4802 4B08  
                        l5258 4B64                          l5194 4D94                          l5186 4D76  
                        l5178 4D5E                          l4572 38A0                          l4556 37F6  
                        l3588 3CCC                          l3596 3D12                          l3932 479C  
                        l3924 476A                          l3940 47B2                          l3916 4744  
                        l3908 4722                          l3756 2E2E                          l3748 2DE6  
                        l3692 2C08                          l3684 2BCA                          l3676 2BA6  
                        l3668 2B74                          l3860 295A                          l3852 2928  
                        l3844 28BC                          l3836 284E                          l3828 2808  
                        l3780 26CA                          l3772 2698                          l4492 1346  
                        l4484 130C                          l4476 12D8                          l4468 1292  
                        l4396 0F2C                          l4388 0EA2                          l4716 1C36  
                        l4724 1C88                          l4708 1BBC                          l4660 17E2  
                        l4652 173E                          l4644 16A0                          l4636 1640  
                        l4628 15B8                          l4740 1CFE                          l4900 4960  
                        l4804 4B0C                          l5196 4D98                          l5188 4D80  
                        l4582 3988                          l4574 38E8                          l4566 387A  
                        l4558 3826                          l3598 3D20                          l3942 47C2  
                        l3934 47A4                          l3926 4772                          l3918 4748  
                        l3950 47D8                          l3758 2E34                          l3694 2C18  
                        l3870 29CC                          l3862 2968                          l3854 2936  
                        l3846 28F2                          l3838 286A                          l3790 26FA  
                        l3782 26D0                          l3774 269A                          l4494 134E  
                        l4486 131C                          l4478 12EA                          l4398 0F42  
                        l4742 1D38                          l4726 1CBE                          l4734 1CEC  
                        l4718 1C6C                          l4670 18CC                          l4662 17F2  
                        l4646 16D6                          l4638 1652                          l4750 4A56  
                        l4902 497C                          l4910 49AC                          l4806 4B0E  
                        l4830 4B88                          l4822 4B50                          l4584 399A  
                        l4568 3890                          l3944 47CA                          l3936 47A6  
                        l3928 4780                          l3960 4808                          l3952 47E6  
                        l3696 2C28                          l3688 2BDE                          l3880 2A36  
                        l3872 29DA                          l3864 2996                          l3856 2948  
                        l3848 2900                          l3792 26FC                          l3784 26E0  
                        l3776 26AA                          l3768 267E                          l4496 135C  
                        l4488 132E                          l4592 44AA                          l4728 1CCC  
                        l4680 1988                          l4672 1900                          l4664 183C  
                        l4656 1798                          l4648 1710                          l4752 4A64  
                        l4760 4E8A                          l4912 49AE                          l4904 4984  
                        l4840 4BA8                          l4808 4B1E                          l4824 4B72  
                        l4816 4B34                          l4920 3A38                          l4586 39AC  
                        l4578 3936                          l3938 47AC                          l3970 484E  
                        l3962 481A                          l3954 47EE                          l3698 2C30  
                        l3890 2A8C                          l3882 2A50                          l3874 2A04  
                        l3858 2956                          l3794 270C                          l3786 26E6  
                        l3778 26BA                          l4498 1364                          l4594 44D4  
                        l4690 1A48                          l4682 19D2                          l4666 184C  
                        l4658 17AA                          l4754 4A8A                          l4770 4FDE  
                        l4762 4E8E                          l4906 4988                          l4842 4BBE  
                        l4826 4B76                          l4818 4B48                          l4930 3A76  
                        l4922 3A4E                          l4914 39D4                          l4850 33B6  
                        l3980 487A                          l3972 4856                          l3964 4822  
                        l3956 47F2                          l3948 47D4                          l3884 2A6C  
                        l3892 2A92                          l3868 29C0                          l3876 2A08  
                        l3796 271C                          l3788 26EC                          l4692 1A56  
                        l4676 191C                          l4668 1896                          l4748 4A4E  
                        l4764 4EA8                          l4756 4E76                          l4908 49A4  
                        l4844 4BDA                          l4828 4B78                          l4940 3AFE  
                        l4932 3AA8                          l4916 39E4                          l4852 33D6  
                        l3974 485C                          l3966 482A                          l3958 4800  
                        l3990 48F0                          l3894 2A96                          l3886 2A7C  
                        l3878 2A22                          l3798 272C                          l4598 44E0  
                        l4694 1A86                          l4686 1A0A                          l4678 1952  
                        l4766 4EB0                          l4758 4E82                          l4790 3F80  
                        l4782 3E72                          l4774 509C                          l4846 4BF8  
                        l4838 4B9E                          l4950 3B54                          l4942 3B0C  
                        l4934 3AAA                          l4926 3A62                          l4918 39F2  
                        l4870 357E                          l4862 34BE                          l4854 342C  
                        l3968 4838                          l3976 4862                          l3992 4900  
                        l3984 4884                          l3888 2A8A                          l4688 1A1E  
                        l4768 4FD4                          l4792 3F86                          l4784 3F1A  
                        l4960 4FFC                          l4776 509E                          l4952 3B64  
                        l4944 3B2A                          l4936 3AB6                          l4928 3A6A  
                        l4872 35A6                          l4864 34FA                          l4856 3440  
                        l4880 4CCC                          l3978 4872                          l3994 4924  
                        l3986 48B2                          l3898 4DA4                          l4698 1AB2  
                        l4786 3F38                          l4890 492E                          l4970 500E  
                        l4962 4FFE                          l4778 50AC                          l4794 4AC6  
                        l4954 3B72                          l4946 3B2C                          l4938 3AF2  
                        l4874 35B6                          l4858 344E                          l4866 352E  
                        l4882 4CD4                          l3996 492A                          l3988 48C2  
                        l4788 3F3E                          l4892 4932                          l4972 5010  
                        l4964 5006                          l4796 4ADE                          l4956 3B74  
                        l4948 3B30                          l4868 356A                          l4884 4CDC  
                        l4894 4938                          l4974 5012                          l4966 500A  
                        l4990 49FC                          l4982 49C6                          l4886 4CF8  
                        l4878 4CBA                          l4896 4954                          l4968 500C  
                        l4992 4A10                          l4984 49D4                          l4976 5086  
                        l4898 495C                          l4994 4A16                          l4986 49DA  
                        l4978 5088                          l4996 4A2A                          l4988 49EE  
                        l4998 4A38                          STR_1 0838                          STR_2 0838  
                        STR_3 0838                          STR_4 0838                          STR_5 0827  
                        STR_6 0849                          STR_7 0801                          STR_8 0814  
                        STR_9 0859                          _LATB 000F8A                          u4000 3BCA  
                        _LATD 000F8C                          u4001 3BC6                          u4011 3BF4  
                        u4020 3C18                          u4100 3DE8                          u4021 3C14  
                        u4101 3DE4                          u4030 3C42                          u4110 3E30  
                        u4031 3C3E                          u4111 3E2C                          u5000 4F98  
                        u4040 3C82                          u4200 2C40                          u4120 2AC2  
                        u4041 3C7E                          u4201 2C3C                          u4121 2ABE  
                        u5010 4D24                          u4050 3CCC                          u4210 2C62  
                        u4130 2AD4                          u5011 4D20                          u4051 3CC8  
                        u4211 2C5E                          u4131 2AD0                          u5020 4D52  
                        u3420 4592                          u4060 3D20                          u5100 2E8A  
                        u4300 2D6E                          u4220 2C8C                          u4140 2AE4  
                        u3500 1DE0                          u5021 4D4E                          u3421 458E  
                        u4061 3D1C                          u5101 2E86                          u4301 2D6A  
                        u4221 2C88                          u4141 2AE0                          u3501 1DDC  
                        u3430 45A4                          u5030 43E6                          u4070 3D52  
                        u5110 2EBA                          u4310 2D88                          u4230 2CB0  
                        u4150 2B28                          u3510 1DF2                          u3431 45A0  
                        u5031 43E2                          u4071 3D4E                          u5111 2EB6  
                        u4311 2D84                          u4231 2CAC                          u4151 2B24  
                        u3511 1DEE                          u3440 45CC                          u5040 440C  
                        u4080 3D90                          u5200 30B0                          u5120 2ED6  
                        u4320 2DD0                          u4240 2CC6                          u4160 2B3A  
                        u4400 271C                          u3600 1F3A                          u3520 1E02  
                        u6000 1638                          u3441 45C8                          u5041 4408  
                        u4081 3D8C                          u5201 30AC                          u5121 2ED2  
                        u4321 2DCC                          u4241 2CC2                          u4161 2B36  
                        u4401 2718                          u3601 1F36                          u3521 1DFE  
                        u6001 1632                          _HORA 00E8                          u3450 4602  
                        u5050 442C                          u4090 3DBA                          u5210 30C0  
                        u5130 2F04                          u4330 2E00                          u4250 2CE4  
                        u4170 2B4A                          u4410 2752                          u3610 1F48  
                        u3530 1E3E                          u6010 163A                          u3451 45FE  
                        u5051 4428                          u4091 3DB6                          u5211 30BC  
                        u5131 2F00                          u4331 2DFC                          u4251 2CE0  
                        u4171 2B46                          u4411 274E                          u3611 1F44  
                        u3531 1E3A                          u5060 447A                          u5220 30D8  
                        u5140 2F12                          u4340 2E2E                          u4260 2D04  
                        u4180 2B8A                          u4500 29DA                          u4420 2762  
                        u3700 20A6                          u3620 1F58                          u3540 1E4C  
                        u3460 1D66                          u5300 09A4                          u6100 17AA  
                        u6020 1652                          u5061 4476                          u5221 30D4  
                        u5141 2F0E                          u4341 2E2A                          u4261 2D00  
                        u4181 2B86                          u4501 29D6                          u4421 275E  
                        u3701 20A2                          u3621 1F54                          u3541 1E48  
                        u3461 1D62                          u5301 09A0                          u6101 17A6  
                        u6021 164E                          u5070 448A                          u5150 303C  
                        u4270 2D16                          u4190 2BCA                          u4510 2A22  
                        u4430 28DC                          u4350 2698                          u3710 20B6  
                        u3630 1F8A                          u3550 1EBA                          u3470 1D78  
                        u5310 0A30                          u5230 08A4                          u6110 17D0  
                        u6030 1678                          u5071 4486                          u5151 3038  
                        u4271 2D12                          u4191 2BC6                          u4511 2A1E  
                        u4351 2694                          u3711 20B2                          u3631 1F86  
                        u3551 1EB6                          u3471 1D74                          u5311 0A2C  
                        u5231 08A0                          u5160 305A                          u5080 2E72  
                        u4600 47E6                          u4280 2D44                          u4520 2A50  
                        u4440 2936                          u4360 26AA                          u3800 219A  
                        u3720 20D2                          u3640 1F98                          u3560 1ED2  
                        u3480 1D88                          u5400 0C5C                          u5320 0A5E  
                        u5240 08F4                          u6200 1978                          u6120 17F2  
                        u6040 1688                          u5161 3056                          u5081 2E6C  
                        u4601 47E2                          u4281 2D40                          u4521 2A4C  
                        u4441 2932                          u4361 26A6                          u3801 2196  
                        u3721 20CE                          u3641 1F94                          u3561 1ECC  
                        u3481 1D84                          u5401 0C58                          u5321 0A58  
                        u5241 08F0                          u6121 17EE                          u6041 1684  
                        u5170 3074                          u5090 2E74                          u4610 4800  
                        u4290 2D5A                          u4530 2A8A                          u4450 2956  
                        u4370 26BA                          u3810 21AA                          u3730 20E2  
                        u3650 1FB6                          u3570 1ED4                          u3490 1DCA  
                        u5410 0C82                          u5330 0A60                          u5250 0902  
                        u6210 1988                          u6130 182A                          u6050 16C6  
                        u5171 3070                          u4611 47FC                          u4291 2D56  
                        u4531 2A86                          u4451 2952                          u4435 28D2  
                        u4371 26B6                          u3811 21A6                          u3731 20DE  
                        u3651 1FB2                          u3491 1DC6                          u5411 0C7E  
                        u5251 08FE                          u6211 1984                          u5180 308E  
                        u4540 4722                          u4620 481A                          u4700 423C  
                        u4460 2968                          u4380 26FA                          u3820 21CA  
                        u3740 20F4                          u3660 1FEE                          u3580 1EFC  
                        u3900 363E                          u5500 0D7E                          u5420 0C98  
                        u5340 0A78                          u5260 0914                          u6300 1C26  
                        u6220 1A1E                          u6140 184C                          u6060 16D6  
                        u5181 308A                          u4541 471E                          u4621 4816  
                        u4701 4238                          u4461 2964                          u4381 26F6  
                        u3821 21C6                          u3741 20F0                          u3661 1FEA  
                        u3581 1EF8                          u3901 363A                          u5501 0D7A  
                        u5421 0C94                          u5341 0A74                          u5261 0910  
                        u6221 1A1A                          u6141 1848                          u6117 17C6  
                        u6061 16D2                          u6037 166E                          u5190 309E  
                        u4550 473C                          u4630 4838                          u4710 425A  
                        u4470 2996                          u4390 270C                          u3830 21DC  
                        u3750 210A                          u3670 2034                          u3590 1F1A  
                        u3910 3660                          u5510 0EC6                          u5430 0CB4  
                        u5350 0AFC                          u5270 095C                          u6310 1C36  
                        u6230 1A44                          u6150 1884                          u6070 176C  
                        u5191 309A                          u4551 4738                          u4631 4834  
                        u4711 4256                          u4471 2992                          u4391 2708  
                        u3831 21D8                          u3751 2106                          u3671 2030  
                        u3591 1F16                          u3911 365C                          u5511 0EC2  
                        u5431 0CB0                          u5351 0AF8                          u5271 0958  
                        u6311 1C32                          u6207 196E                          u7007 3196  
                        u4560 4762                          u4640 484E                          u4720 427A  
                        u4480 29AC                          u3840 21F8                          u3760 2120  
                        u3680 206A                          u4800 409A                          u5600 115C  
                        u5520 0F2C                          u5440 0CEA                          u5360 0B90  
                        u5280 098A                          u6320 1CAE                          u6240 1AE0  
                        u6160 18BC                          u6080 1790                          u4561 475E  
                        u4641 484A                          u4721 4276                          u4481 29A8  
                        u3841 21F4                          u3761 211C                          u3681 2066  
                        u4801 4096                          u5601 1158                          u5521 0F28  
                        u5441 0CE6                          u5361 0B8C                          u5281 0984  
                        u6241 1ADC                          u6137 1820                          u6081 178A  
                        u6057 16BC                          u7017 31FE                          u3850 4E72  
                        u4570 4780                          u4650 4872                          u4730 42CA  
                        u4490 29C0                          u3770 2134                          u3690 207A  
                        u4810 40AA                          u3930 36CC                          u5610 116A  
                        u5530 0F74                          u5450 0D10                          u5370 0C02  
                        u5290 098C                          u6330 1CBE                          u6250 1B18  
                        u6170 18CC                          u6090 1792                          u6410 33FE  
                        u3851 4E6E                          u4571 477C                          u4651 486E  
                        u4731 42C6                          u4491 29BC                          u3771 2130  
                        u3691 2076                          u4811 40A6                          u3931 36C8  
                        u5611 1166                          u5531 0F70                          u5451 0D0C  
                        u5371 0BFE                          u6331 1CBA                          u6307 1C1C  
                        u6171 18C8                          u7027 3290                          u3860 4FC6  
                        u4820 465A                          u4580 479C                          u4660 48B2  
                        u4740 4F44                          u3780 214E                          u4900 4384  
                        u3940 36F0                          u5700 135C                          u5620 1184  
                        u5540 0F84                          u5460 0D22                          u5380 0C28  
                        u6340 1D24                          u6260 1B4A                          u6180 1942  
                        u6500 35A6                          u6420 342C                          u3861 4FC2  
                        u4821 4656                          u4581 4798                          u4661 48AE  
                        u4741 4F40                          u3781 214A                          u4901 4380  
                        u3925 3674                          u5701 1358                          u5621 1180  
                        u5541 0F80                          u5461 0D1E                          u5381 0C24  
                        u6237 1A3A                          u6157 187A                          u6077 1762  
                        u7037 49B8                          u6405 4BA6                          u6501 35A2  
                        u6421 3428                          u4830 467C                          u4590 47C2  
                        u4670 48F0                          u3790 2188                          u4750 3FDC  
                        u3950 370C                          u3926 367E                          u3870 4F26  
                        u5710 13E0                          u5630 1192                          u5550 101E  
                        u5470 0D30                          u5390 0C3A                          u6270 1B6E  
                        u6190 1952                          u6350 4AAA                          u6510 4954  
                        u6406 4BA8                          u6430 344E                          u4831 4678  
                        u4591 47BE                          u4671 48EC                          u3791 2184  
                        u4751 3FD8                          u3951 3708                          u3927 368E  
                        u3871 4F20                          u5711 13DC                          u5631 118E  
                        u5551 101A                          u5471 0D2C                          u5391 0C36  
                        u6327 1CA4                          u6271 1B68                          u6191 194E  
                        u6167 18B2                          u7047 4E84                          u6511 4950  
                        u6431 344A                          u6415 33F4                          u5800 3870  
                        u4840 46D2                          u4680 4924                          u4760 4010  
                        u4920 43BE                          u3960 3760                          u3880 4F28  
                        u5720 13FA                          u5640 11EA                          u5560 106C  
                        u5480 0D46                          u6280 1B70                          u6360 4ABA  
                        u6520 497C                          u6600 3B1C                          u5801 386C  
                        u4841 46CE                          u4681 4920                          u4921 43B8  
                        u3945 36E6                          u5721 13F6                          u5641 11E6  
                        u5561 1068                          u5481 0D42                          u6257 1B0E  
                        u6361 4AB6                          u7057 4E94                          u6521 4978  
                        u6601 3B18                          u5810 388C                          u4850 46E2  
                        u4690 41FE                          u4770 403E                          u4930 43C0  
                        u3970 377C                          u3890 3610                          u5730 1412  
                        u5650 12BC                          u5570 1094                          u5490 0D54  
                        u6290 1B88                          u6370 3F38                          u6530 49A4  
                        u6610 3B2A                          u6450 34BA                          u5811 3888  
                        u4851 46DE                          u4691 41FA                          u4771 403A  
                        u4915 4396                          u3971 3778                          u5731 140E  
                        u5651 12B8                          u5571 1090                          u5491 0D50  
                        u6347 1D1A                          u6291 1B84                          u6267 1B40  
                        u6187 1938                          u7067 4EAA                          u6371 3F34  
                        u6531 49A0                          u6611 3B26                          u6451 34B6  
                        u5820 38C0                          u4860 4ED0                          u4780 4052  
                        u3980 37B8                          u4940 4CA6                          u5740 1470  
                        u5660 12D8                          u5580 1138                          u5900 4506  
                        u6700 31BA                          u6380 4B1E                          u6620 3B64  
                        u6540 39E4                          u6460 34DE                          u7077 4DFA  
                        u4861 4ECC                          u4781 404E                          u4765 4006  
                        u3981 37B4                          u3965 3756                          u5741 146A  
                        u5661 12D4                          u5581 1134                          u5901 4502  
                        u6357 4AA0                          u6701 31B6                          u6381 4B1A  
                        u6621 3B60                          u6541 39E0                          u6445 3462  
                        u5830 391C                          u3990 3B98                          u4790 407A  
                        u4870 4314                          u4950 4CB8                          u5750 1472  
                        u5670 12EA                          u5590 114A                          u5910 4522  
                        u6710 3236                          u6390 4B88                          u6630 3B72  
                        u6550 39F2                          u6470 34FA                          u6446 346C  
                        u7087 4E0C                          u3991 3B94                          u4791 4076  
                        u3895 3606                          u4951 4CB4                          u5671 12E6  
                        u5591 1146                          u5911 451E                          u6711 3232  
                        u6391 4B84                          u6631 3B6E                          u6551 39EE  
                        u6471 34F6                          u6447 347C                          u5840 395E  
                        u4880 4332                          u4960 4C2E                          u5760 1488  
                        u5680 12F8                          u5920 4534                          u6720 324C  
                        u6800 4146                          u6560 3A4E                          u6480 354E  
                        u6640 233E                          u7097 4E22                          u4881 432E  
                        u4961 4C28                          u5761 1484                          u5681 12F4  
                        u5921 4530                          u6721 3248                          u6801 4142  
                        u6561 3A4A                          u6465 34D4                          u6641 233A  
                        u5850 3982                          u5770 3816                          u4890 435A  
                        u4970 4C30                          u5690 132E                          u5930 455C  
                        u6730 32C8                          u6810 415E                          u6570 3AA4  
                        u6490 356A                          u6650 23C0                          u5851 397C  
                        u5827 38B6                          u4891 4356                          u4875 430A  
                        u4947 4C9C                          u5691 132A                          u5931 4558  
                        u6731 32C4                          u6811 415A                          u6571 3AA0  
                        u6491 3566                          u6651 23BC                          u5860 3984  
                        u5780 3826                          u4980 4C46                          u5940 14FA  
                        u6740 32EE                          u6820 41AE                          u6580 3AEE  
                        u6660 251A                          u5837 3912                          u5781 3822  
                        u4981 4C42                          u6741 32EA                          u6821 41AA  
                        u6581 3AEA                          u6485 3544                          u6661 2516  
                        u4990 4F96                          u5870 399A                          u5790 384E  
                        u5950 150A                          u6750 339E                          u6590 3B0C  
                        u6670 25F6                          u4991 4F90                          u5871 3996  
                        u5847 3954                          u5951 1506                          u6751 339A  
                        u6591 3B08                          u6671 25F2                          u5880 39AC  
                        u5960 1554                          u6760 40E6                          u6680 2652  
                        u5881 39A8                          u5777 380C                          u6761 40E2  
                        u6681 264E                          u5890 44D4                          u5970 1564  
                        u6690 3134                          u6770 40FE                          u5891 44D0  
                        u5971 1560                          u5947 14F0                          u6691 3130  
                        u6771 40FA                          u6907 49F4                          u5980 15AA  
                        u6780 4116                          u5797 3844                          u5981 15A6  
                        u6781 4112                          u6917 4A08                          u6837 2410  
                        u5990 1614                          u6790 412E                          u5967 154A  
                        u6791 412A                          u6927 4A1C                          u6847 242E  
                        u6937 4A30                          u6857 2614                          u6947 4A44  
                        u6867 2670                          u5997 160A                          u6957 4172  
                        u6877 50A4                          u6967 418E                          u6887 49CC  
                        u6977 41C0                          u6897 49E0                          u6987 3142  
                        u6997 3168                    _Alarma_LED 40CC                          abs@a 0013  
                        _dbuf 0120                          _atoi 37DA                          _ctoa 43D2  
                        _main 4D5E                          _dtoa 2E42                          _prec 00D6  
                        _nout 00D2                          pad@i 001B                          pad@p 0018  
                        fsr1h 000FE2                          fsr2h 000FDA                          indf1 000FE7  
                        indf2 000FDF                          fsr1l 000FE1                          pad@w 001D  
                        fsr2l 000FD9                 ___fpclassifyf 42D4                          prodh 000FF4  
                        prodl 000FF3                          start 0000               ___fldiv@new_exp 0012  
       ??_Timer0Configuration 0001                  _tolower$1433 000D                  ___param_bank 000000  
                       ??_abs 0015                         ??_pad 001A                ?_InicializaLCD 0001  
               ___fltol@sign1 0009               __end_of___aodiv 3D0E                         ?_atoi 0008  
                       ?_ctoa 000D               __end_of___fladd 220C                         ?_main 0001  
                       ?_dtoa 001F               __end_of___aomod 3E72               __end_of___fldiv 2E42  
             __end_of___awdiv 47D4               __end_of___flneg 4F66                         STR_10 0801  
                       STR_11 0814                         STR_20 0877                         STR_12 0867  
                       STR_13 086F                         STR_22 0877                         STR_16 086B  
                       STR_17 0873               __end_of___awmod 4884               __end_of___flmul 2AA8  
             __end_of___flsub 4DEA               __end_of___fltol 40CC               ___awdiv@divisor 0008  
             ___awdiv@counter 000A                  vfpfcnvrt@fmt 0054                         _TMR0L 000FD6  
                       _PORTB 000F81                         _TRISA 000F92                         _TRISB 000F93  
                       _TRISD 000F95                         _R_CAD 0114                         _ceilf 33B6  
                       _flags 00D8                         _horas 00F8                         _fputc 4580  
                       _fputs 4E30               __end_of_isdigit 4F9E                         atoi@n 0015  
                       pad@fp 0014                         atoi@s 0008                         _width 00D4  
                       ctoa@c 000F                         _putch 4DEA                         ctoa@l 0011  
                       _putcm 4E74                         ctoa@w 0013                         dtoa@d 0021  
                       dtoa@i 0041                         dtoa@n 0039                         dtoa@p 0033  
                       dtoa@s 0037                         dtoa@w 0035               __end_of_isspace 4D5E  
             __end_of_isupper 4F2E                         tablat 000FF5                         status 000FD8  
             __end_of_sprintf 4D0C                ?___fpclassifyf 0001               __end_of_tolower 4C5E  
             __end_of_strncmp 4580              __end_of_Get_DATA 4BFE                    _Cronometro 492E  
             __initialization 5048                  __end_of_atoi 39D2                  __end_of_ctoa 44AA  
                __end_of_main 4DA4                  __end_of_dtoa 3126              __end_of_Read_ADC 4B32  
            __end_of_Set_DATA 50B0                        ??_atoi 000A                        ??_ctoa 0010  
                      ??_main 0060                        ??_dtoa 0029                 __activetblptr 000002  
                      ?_ceilf 0001                        _ADCON0 000FC2                        _ADCON2 000FC0  
                      ?_fputc 0004                        ?_fputs 000D                        _ADRESH 000FC4  
                      _ADRESL 000FC3              ___awdiv@dividend 0006                        ?_putch 0001  
                      _ANSELB 000F5C                        ?_putcm 0001                   ?_Alarma_LED 0001  
          __size_of_Read_ADC1 006A                        _MINUTO 00E6                        _OSCCON 000FD3  
        __end_of_LCD_COMANDOS 509C                        _R_LM35 0118              __end_of___xxtofl 3B86  
                      _Alarma 3126                    _SensorLM35 220C                  vfprintf@cfmt 005C  
       __end_of_Mostrar_Reloj 3FC6                        ___flge 41D0                        ___fleq 4884  
                   ??___aodiv 0011                     ??___fladd 0009                     ??___aomod 0011  
                      ___wmul 5022                        _cambio 011E                     ??___fldiv 0009  
                   ??___awdiv 000A                     ??___flneg 0005                     ??___awmod 0005  
                   ??___flmul 0021                     ??___flsub 003A                     ??___fltol 0005  
                      _efgtoa 087C               ??_InicializaLCD 0004                        _floorf 35C8  
                      ceilf@e 000F                        ceilf@m 000B                        ceilf@u 0011  
                      ceilf@x 0001                        clear_0 504E                        clear_1 505A  
            ___awdiv@quotient 000C               ___awmod@divisor 0003               ___awmod@counter 0005  
                      _printf 4FD4                        pad@buf 0016                        ctoa@fp 000D  
                      dtoa@fp 001F                        _strcpy 4C5E                        _strlen 4F9E  
                      fputc@c 0004                        fputs@c 0011                        fputs@i 0012  
                      fputs@s 000D                     ??_isdigit 0003               ___fpclassifyf@e 0009  
             ___fpclassifyf@u 000B               ___fpclassifyf@x 0001                  __mediumconst 0000  
                   ??_isspace 0003                        tblptrh 000FF7                     ??_isupper 0003  
                      tblptrl 000FF6                        tblptru 000FF8              __end_of_vfprintf 4AC4  
                   ??_sprintf 005E                     ??_tolower 0009                     ??_strncmp 0007  
             _Decenas_Minutos 00EE                    ___flge@ff1 003A                    ___flge@ff2 003E  
             ??___fpclassifyf 0005                  ___xxtofl@arg 0015                  ___xxtofl@exp 0014  
                ___xxtofl@val 000B                    ___fleq@ff1 0001                    ___fleq@ff2 0005  
                  __accesstop 0060       __end_of__initialization 5060                    ___flneg@f1 0001  
                 ?_Cronometro 0001                 ___rparam_used 000001                    ___fltol@f1 0001  
              __pcstackCOMRAM 0001                 __end_of_ceilf 35C8                 __end_of_fputc 464A  
               __end_of_fputs 4E74                 __end_of_putch 4E30                 __end_of_putcm 4EB6  
           __end_of_Read_ADC1 4B9C           __size_of_Alarma_LED 0104                     ?_Get_DATA 0001  
               Read_ADC@canal 0005                       ??_ceilf 0005                       ??_fputc 0008  
                     ??_fputs 0011                       ??_putch 0001                       ??_putcm 0001  
               _Decenas_Horas 00F2                    __pbssBANK0 00CE                    __pbssBANK1 0100  
       __end_of_Configuracion 5022                     ?_Read_ADC 0001                     ?_Set_DATA 0001  
                     ?_Alarma 0001                   ?_SensorLM35 0001                       ?___flge 003A  
                     ?___fleq 0001                       ?___wmul 0001                       ?_efgtoa 0046  
                     ?_floorf 001A                       ?_printf 00B6                       ?_strcpy 0001  
                     ?_strlen 0001                     ?___xxtofl 000B           __size_of_Cronometro 0098  
                  ??_Get_DATA 0002                       _SEGUNDO 011C            __size_of_vfpfcnvrt 0878  
       __size_of_LCD_COMANDOS 0018                    ??_Read_ADC 0003   __end_of_Timer0Configuration 5084  
                  ??_Set_DATA 0001               _SensorLM35$1658 00CA               __size_of_Alarma 0290  
                     __Hparam 0000                       __Lparam 0000                       _Valores 0170  
             __size_of___flge 0104               __size_of___fleq 00AA                       ___aodiv 3B86  
                     ___fladd 1D4C                       ___aomod 3D0E                       ___fldiv 2AA8  
                     ___awdiv 4710                       ___flneg 4F2E                       ___awmod 47D4  
                     ___flmul 267E                       ___flsub 4DA4                       ___fltol 3FC6  
             __size_of___wmul 0026                     ?_vfprintf 00B0                  __psmallconst 0800  
             __size_of_efgtoa 0C58               __size_of_floorf 0212                       __pcinit 5048  
                     __ramtop 0800                       __ptext0 4D5E                       __ptext1 506A  
                     __ptext2 220C                       __ptext3 4CBA                       __ptext4 33B6  
                     __ptext5 39D2                       __ptext6 4B32                       __ptext7 4AC4  
                     __ptext8 5084                       __ptext9 4B9C               __size_of_printf 0028  
                _LCD_COMANDOS 5084                     _T0CONbits 000FD5               __size_of_strcpy 005C  
             __size_of_strlen 0036                  __size_of_abs 0040                  __size_of_pad 00C6  
                     _isdigit 4F66                    ??___xxtofl 000F              ___awmod@dividend 0001  
                     _isspace 4D0C                       _minutos 00FA                       _isupper 4EF6  
                     efgtoa@c 004C                       efgtoa@d 0078                       efgtoa@e 0090  
                     efgtoa@f 0048                       efgtoa@g 008C                       efgtoa@h 0082  
                     efgtoa@i 008A                       efgtoa@l 0086                       efgtoa@m 0072  
                     efgtoa@n 0092                       efgtoa@p 007C                       efgtoa@t 006C  
                     efgtoa@u 0094                       efgtoa@w 007E                       atoi@neg 000E  
         __size_of_SensorLM35 0472                       _sprintf 4CBA                       _tolower 4BFE  
                     _strncmp 44AA          end_of_initialization 5060                       floorf@e 0028  
                     floorf@m 0024                       floorf@u 002A                       floorf@x 001A  
                ??_Alarma_LED 0001                       fputc@fp 0006                 __Lmediumconst 0000  
                     fputs@fp 000F              _Unidades_Minutos 00F0             __end_of_vfpfcnvrt 1D4C  
                  efgtoa@mode 0081                    efgtoa@sign 007A                       postdec2 000FDD  
                     postinc0 000FEE                       postinc1 000FE6                       postinc2 000FDE  
                  ??_vfprintf 005C                       strcpy@d 0009                       strlen@a 0003  
                     strcpy@s 0007                       strlen@s 0001                     _PORTAbits 000F80  
                   _PORTCbits 000F82            __end_of_Alarma_LED 41D0              _Decenas_Segundos 00EA  
                 ___fladd@grs 0010                 ___xxtofl@sign 0013                     _TRISCbits 000F94  
                 ___fldiv@grs 0014                   ___fldiv@rem 000D                   ___flmul@grs 0026  
                ??_Cronometro 005E                __end_of_Alarma 33B6                __end_of___flge 42D4  
              __end_of___fleq 492E                   vfpfcnvrt@ap 0056                   vfpfcnvrt@ct 00AC  
                 vfpfcnvrt@fp 0052                   vfpfcnvrt@ll 0098                __end_of___wmul 5048  
                 vfpfcnvrt@vp 00A0                __end_of_efgtoa 14D4                   putch@Activa 0003  
       __end_of_InicializaLCD 4A4E                __end_of_floorf 37DA                    floorf@F527 0104  
              __end_of_printf 4FFC                __end_of_strcpy 4CBA                __end_of_strlen 4FD4  
                 putcm@Activa 0003           start_initialization 5048                     _Read_ADC1 4B32  
          __end_of_Cronometro 49C6                Read_ADC1@canal 0005                   __end_of_abs 4EF6  
                 __end_of_pad 4710             __size_of_Get_DATA 0062        __size_of_Mostrar_Reloj 0154  
                Get_DATA@data 0003         __end_of___fpclassifyf 43D2                      ??_Alarma 00C8  
           __size_of_Read_ADC 006E             __size_of_Set_DATA 0014                  ??_SensorLM35 005E  
                 vfprintf@fmt 00B2                      ??___flge 0042                      ??___fleq 0009  
                    ??___wmul 0005                      ??_efgtoa 004D                      ??_floorf 001E  
              _Unidades_Horas 00F4                      ??_printf 005E                      ??_strcpy 0005  
                    ??_strlen 0003                     ___fladd@a 0005                     ___fladd@b 0001  
                   ___fldiv@a 0005                     ___fldiv@b 0001                     ___flmul@a 001D  
                   ___flmul@b 0019                    ?_Read_ADC1 0001                     ___flsub@a 0036  
                   ___flsub@b 0032                 __pcstackBANK0 0060              ___aodiv@dividend 0001  
           __size_of___xxtofl 01B4            __end_of_SensorLM35 267E                     _atoi$1346 0010  
                   _atoi$1347 0014                     _atoi$1348 0012                   _efgtoa$1282 0064  
                 _efgtoa$1277 0060                   _efgtoa$1286 0066                   _efgtoa$1278 0062  
                 _efgtoa$1287 0068                   _efgtoa$1288 006A                     _dtoa$1253 0031  
                    ?___aodiv 0001                      ?___fladd 0001                 _Mostrar_Reloj 3E72  
                    ?___aomod 0001                      ?___fldiv 0001                      ?___awdiv 0006  
            ___aodiv@quotient 0013                      ?___flneg 0001                      ?___awmod 0001  
                    ?___flmul 0019                      ?___flsub 0032                      ?___fltol 0001  
      __size_of_Configuracion 0026             __size_of_vfprintf 0076                     ceilf@F527 0108  
                 __smallconst 0800                      ?_isdigit 0001                      ?_isspace 0001  
                    ?_isupper 0001                __size_of_ceilf 0212                      ?_sprintf 00B6  
                    ?_tolower 0007                __size_of_fputc 00CA                __size_of_fputs 0044  
                    ?_strncmp 0001                __size_of_putch 0046                __size_of_putcm 0042  
              ___wmul@product 0005                      _LATCbits 000F8B                      _LATDbits 000F8C  
__size_of_Timer0Configuration 001A                ?_Mostrar_Reloj 0001                     _vfpfcnvrt 14D4  
                  _ADCON0bits 000FC2                    _ADCON1bits 000FC1             ___wmul@multiplier 0001  
                 Alarma_LED@A 0003                   ??_Read_ADC1 0003                      _Get_DATA 4B9C  
                _isspace$1364 0007                    vfpfcnvrt@c 00AF                    vfpfcnvrt@f 00A8  
                    _Read_ADC 4AC4                 _Configuracion 4FFC                      _Set_DATA 509C  
                    __Hrparam 0000                    vfprintf@ap 00B4                      __Lrparam 0000  
                  vfprintf@fp 00B0              __size_of___aodiv 0188              __size_of___fladd 04C0  
            __size_of___aomod 0164              __size_of___fldiv 039A              __size_of___awdiv 00C4  
            __size_of___flneg 0038              __size_of___awmod 00B0              __size_of___flmul 042A  
            __size_of___flsub 0046              __size_of___fltol 0106                    ?_vfpfcnvrt 0052  
                    _VoltajeA 0110                      _VoltajeB 010C               ___aodiv@divisor 0009  
             ___aodiv@counter 0011                    _ANSELAbits 000F5B                    _ANSELCbits 000F5D  
          ___fpclassifyf@F465 0100                    sprintf@fmt 00B8                      ___xxtofl 39D2  
            __size_of_isdigit 0038              __size_of_isspace 0052                      __ptext10 509C  
                    __ptext11 49C6                      __ptext20 14D4                      __ptext12 4FFC  
                    __ptext21 44AA                      __ptext13 40CC                      __ptext30 1D4C  
                    __ptext22 087C                      __ptext14 3126                      __ptext31 4F2E  
                    __ptext23 4BFE                      __ptext15 492E                      __ptext40 4F9E  
                    __ptext32 267E                      __ptext24 4EF6                      __ptext16 3E72  
                    __ptext41 4E30                      __ptext33 41D0                      __ptext25 4C5E  
                    __ptext17 4E74                      __ptext50 4F66                      __ptext42 4EB6  
                    __ptext34 4884                      __ptext26 35C8                      __ptext18 4FD4  
                    __ptext51 5022                      __ptext43 3D0E                      __ptext35 2AA8  
                    __ptext27 42D4                      __ptext19 4A4E                      __ptext44 3B86  
                    __ptext36 47D4                      __ptext28 3FC6                      __ptext45 43D2  
                    __ptext37 4710                      __ptext29 4DA4                      __ptext46 4580  
                    __ptext38 2E42                      __ptext47 4DEA                      __ptext39 464A  
                    __ptext48 37DA                      __ptext49 4D0C              __size_of_isupper 0038  
            __size_of_sprintf 0052              __size_of_tolower 0060                ?_Configuracion 0001  
                  strcpy@dest 0001              __size_of_strncmp 00D6                 __size_of_atoi 01F8  
               __size_of_ctoa 00D8                 __size_of_main 0046                 __size_of_dtoa 02E4  
             ??_Mostrar_Reloj 005E                      _segundos 00F6                      efgtoa@fp 0046  
                    efgtoa@ne 0070                      efgtoa@pp 006E                      efgtoa@ou 0074  
                    _vfprintf 4A4E                     printf@fmt 00B6              ___aomod@dividend 0001  
                   putch@data 0002                _vfpfcnvrt$1302 00A2                _vfpfcnvrt$1303 00A4  
              _vfpfcnvrt$1309 00A6                    _INTCONbits 000FF2                     putcm@data 0002  
                    isdigit@c 0001                     sprintf@ap 00C2                      isspace@c 0001  
      __size_of_InicializaLCD 0088                     strcpy@src 0003             _Unidades_Segundos 00EC  
                    isupper@c 0001                     strncmp@_l 0001                     strncmp@_r 0003  
                 efgtoa@nmode 0080                      printf@ap 00C6               ___aomod@divisor 0009  
                 ??_vfpfcnvrt 0058               ___aomod@counter 0011                 ?_LCD_COMANDOS 0001  
                 _temperatura 00CE                      sprintf@f 00C4                      tolower@c 0007  
                    sprintf@s 00B6        __size_of___fpclassifyf 00FE                      strncmp@l 0008  
                    strncmp@n 0005                      strncmp@r 000A           _Timer0Configuration 506A  
         LCD_COMANDOS@comando 0004               ??_Configuracion 0001                 ___fladd@signs 000D  
                ___aodiv@sign 0012                  ___fladd@aexp 000E                  ___fladd@bexp 000F  
                ___aomod@sign 0012          ?_Timer0Configuration 0001  
