

Microchip MPLAB XC8 Assembler V2.31 build 20201012212115 
                                                                                               Sat Feb 20 17:17:35 2021

Microchip MPLAB XC8 C Compiler v2.31 (Free license) build 20201012212115 Og1 
     1                           	processor	18F45K50
     2                           	fnconf	rparam,??,?,0
     3                           	pagewidth 120
     4                           	opt	flic
     5                           	psect	cinit,global,reloc=2,class=CODE,delta=1
     6                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
     7                           	psect	text0,global,reloc=2,class=CODE,delta=1
     8                           	psect	text1,global,reloc=2,class=CODE,delta=1
     9                           	psect	intcodelo,global,reloc=2,class=CODE,delta=1
    10                           	psect	intcode,global,reloc=2,class=CODE,delta=1
    11                           	psect	intcode_body,global,reloc=2,class=CODE,delta=1
    12                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1,noexec
    13                           	psect	rparam,global,class=COMRAM,space=1,delta=1,noexec
    14                           	psect	temp,global,ovrld,common,class=COMRAM,space=1,delta=1
    15                           	psect	idloc,global,abs,ovrld,class=IDLOC,space=5,delta=1,noexec
    16                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=1,noexec
    17  0000                     
    18                           ; Version 2.20
    19                           ; Generated 05/05/2020 GMT
    20                           ; 
    21                           ; Copyright Â© 2020, Microchip Technology Inc. and its subsidiaries ("Microchip")
    22                           ; All rights reserved.
    23                           ; 
    24                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    25                           ; 
    26                           ; Redistribution and use in source and binary forms, with or without modification, are
    27                           ; permitted provided that the following conditions are met:
    28                           ; 
    29                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    30                           ;        conditions and the following disclaimer.
    31                           ; 
    32                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    33                           ;        of conditions and the following disclaimer in the documentation and/or other
    34                           ;        materials provided with the distribution.
    35                           ; 
    36                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    37                           ;        software without specific prior written permission.
    38                           ; 
    39                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    40                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    41                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    42                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    43                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    44                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    45                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    46                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    47                           ; 
    48                           ; 
    49                           ; Code-generator required, PIC18F45K50 Definitions
    50                           ; 
    51                           ; SFR Addresses
    52  0000                     _ANSELD	set	3934
    53  0000                     _ANSELB	set	3932
    54  0000                     _ANSELA	set	3931
    55  0000                     _PORTA	set	3968
    56  0000                     _RCONbits	set	4048
    57  0000                     _INTCON3	set	4080
    58  0000                     _INTCON	set	4082
    59  0000                     _LATD	set	3980
    60  0000                     _LATA	set	3977
    61  0000                     _TRISD	set	3989
    62  0000                     _TRISB	set	3987
    63  0000                     _TRISA	set	3986
    64  0000                     _INTCON3bits	set	4080
    65  0000                     _INTCONbits	set	4082
    66  0000                     _PORTD	set	3971
    67                           
    68                           ; #config settings
    69                           
    70                           	psect	cinit
    71  0000F8                     __pcinit:
    72                           	callstack 0
    73  0000F8                     start_initialization:
    74                           	callstack 0
    75  0000F8                     __initialization:
    76                           	callstack 0
    77  0000F8                     end_of_initialization:
    78                           	callstack 0
    79  0000F8                     __end_of__initialization:
    80                           	callstack 0
    81  0000F8  9009               	bcf	int$flags,0,c	;clear compiler interrupt flag (level 1)
    82  0000FA  9209               	bcf	int$flags,1,c	;clear compiler interrupt flag (level 2)
    83  0000FC  0100               	movlb	0
    84  0000FE  EF6C  F000         	goto	_main	;jump to C main() function
    85                           
    86                           	psect	cstackCOMRAM
    87  000001                     __pcstackCOMRAM:
    88                           	callstack 0
    89  000001                     ??_myHiIsr:
    90  000001                     
    91                           ; 1 bytes @ 0x0
    92  000001                     	ds	1
    93  000002                     myHiIsr@A:
    94                           	callstack 0
    95                           
    96                           ; 1 bytes @ 0x1
    97  000002                     	ds	1
    98  000003                     ??_myLoIsr:
    99                           
   100                           ; 1 bytes @ 0x2
   101  000003                     	ds	4
   102  000007                     myLoIsr@A:
   103                           	callstack 0
   104                           
   105                           ; 1 bytes @ 0x6
   106  000007                     	ds	1
   107  000008                     ??_main:
   108                           
   109                           ; 1 bytes @ 0x7
   110  000008                     	ds	1
   111                           
   112 ;;
   113 ;;Main: autosize = 0, tempsize = 1, incstack = 0, save=0
   114 ;;
   115 ;; *************** function _main *****************
   116 ;; Defined at:
   117 ;;		line 67 in file "Practica_3.c"
   118 ;; Parameters:    Size  Location     Type
   119 ;;		None
   120 ;; Auto vars:     Size  Location     Type
   121 ;;		None
   122 ;; Return value:  Size  Location     Type
   123 ;;                  1    wreg      void 
   124 ;; Registers used:
   125 ;;		wreg, status,2, status,0, cstack
   126 ;; Tracked objects:
   127 ;;		On entry : 0/0
   128 ;;		On exit  : 0/0
   129 ;;		Unchanged: 0/0
   130 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
   131 ;;      Params:         0       0       0       0       0       0       0       0       0
   132 ;;      Locals:         0       0       0       0       0       0       0       0       0
   133 ;;      Temps:          1       0       0       0       0       0       0       0       0
   134 ;;      Totals:         1       0       0       0       0       0       0       0       0
   135 ;;Total ram usage:        1 bytes
   136 ;; Hardware stack levels required when called:    3
   137 ;; This function calls:
   138 ;;		_Configuracion
   139 ;; This function is called by:
   140 ;;		Startup code after reset
   141 ;; This function uses a non-reentrant model
   142 ;;
   143                           
   144                           	psect	text0
   145  0000D8                     __ptext0:
   146                           	callstack 0
   147  0000D8                     _main:
   148                           	callstack 28
   149  0000D8                     
   150                           ;Practica_3.c: 69:     Configuracion();
   151  0000D8  EC56  F000         	call	_Configuracion	;wreg free
   152  0000DC                     l763:
   153                           
   154                           ;Practica_3.c: 71:     {;Practica_3.c: 72:         PORTA ^= 1;
   155  0000DC  0E01               	movlw	1
   156  0000DE  1A80               	xorwf	128,f,c	;volatile
   157  0000E0                     
   158                           ;Practica_3.c: 73:         _delay((unsigned long)((500)*(1000000/4000.0)));
   159  0000E0  0EA3               	movlw	163
   160  0000E2  6E08               	movwf	??_main^0,c
   161  0000E4  0E55               	movlw	85
   162  0000E6                     u37:
   163  0000E6  2EE8               	decfsz	wreg,f,c
   164  0000E8  D7FE               	bra	u37
   165  0000EA  2E08               	decfsz	??_main^0,f,c
   166  0000EC  D7FC               	bra	u37
   167  0000EE  F000               	nop	
   168  0000F0  EF6E  F000         	goto	l763
   169  0000F4  EF33  F000         	goto	start
   170  0000F8                     __end_of_main:
   171                           	callstack 0
   172                           
   173 ;; *************** function _Configuracion *****************
   174 ;; Defined at:
   175 ;;		line 51 in file "Practica_3.c"
   176 ;; Parameters:    Size  Location     Type
   177 ;;		None
   178 ;; Auto vars:     Size  Location     Type
   179 ;;		None
   180 ;; Return value:  Size  Location     Type
   181 ;;                  1    wreg      void 
   182 ;; Registers used:
   183 ;;		wreg, status,2
   184 ;; Tracked objects:
   185 ;;		On entry : 0/0
   186 ;;		On exit  : 0/0
   187 ;;		Unchanged: 0/0
   188 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
   189 ;;      Params:         0       0       0       0       0       0       0       0       0
   190 ;;      Locals:         0       0       0       0       0       0       0       0       0
   191 ;;      Temps:          0       0       0       0       0       0       0       0       0
   192 ;;      Totals:         0       0       0       0       0       0       0       0       0
   193 ;;Total ram usage:        0 bytes
   194 ;; Hardware stack levels used:    1
   195 ;; Hardware stack levels required when called:    2
   196 ;; This function calls:
   197 ;;		Nothing
   198 ;; This function is called by:
   199 ;;		_main
   200 ;; This function uses a non-reentrant model
   201 ;;
   202                           
   203                           	psect	text1
   204  0000AC                     __ptext1:
   205                           	callstack 0
   206  0000AC                     _Configuracion:
   207                           	callstack 28
   208  0000AC                     
   209                           ;Practica_3.c: 53:     TRISA=0;
   210  0000AC  0E00               	movlw	0
   211  0000AE  6E92               	movwf	146,c	;volatile
   212  0000B0                     
   213                           ;Practica_3.c: 54:     TRISB=0xFF;
   214  0000B0  6893               	setf	147,c	;volatile
   215                           
   216                           ;Practica_3.c: 55:     TRISD=0;
   217  0000B2  0E00               	movlw	0
   218  0000B4  6E95               	movwf	149,c	;volatile
   219                           
   220                           ;Practica_3.c: 56:     ANSELA=0;
   221  0000B6  0E00               	movlw	0
   222  0000B8  010F               	movlb	15	; () banked
   223  0000BA  6F5B               	movwf	91,b	;volatile
   224                           
   225                           ;Practica_3.c: 57:     ANSELB=0;
   226  0000BC  0E00               	movlw	0
   227  0000BE  6F5C               	movwf	92,b	;volatile
   228                           
   229                           ;Practica_3.c: 58:     ANSELD=0;
   230  0000C0  0E00               	movlw	0
   231  0000C2  6F5E               	movwf	94,b	;volatile
   232                           
   233                           ;Practica_3.c: 59:     LATA = 0;
   234  0000C4  0E00               	movlw	0
   235  0000C6  6E89               	movwf	137,c	;volatile
   236                           
   237                           ;Practica_3.c: 60:     LATD = 0;
   238  0000C8  0E00               	movlw	0
   239  0000CA  6E8C               	movwf	140,c	;volatile
   240                           
   241                           ;Practica_3.c: 62:     INTCON=0xD0;
   242  0000CC  0ED0               	movlw	208
   243  0000CE  6EF2               	movwf	242,c	;volatile
   244                           
   245                           ;Practica_3.c: 63:     INTCON3=0x08;
   246  0000D0  0E08               	movlw	8
   247  0000D2  6EF0               	movwf	240,c	;volatile
   248  0000D4                     
   249                           ; BSR set to: 15
   250                           ;Practica_3.c: 64:     RCONbits.IPEN = 1;
   251  0000D4  8ED0               	bsf	208,7,c	;volatile
   252  0000D6                     
   253                           ; BSR set to: 15
   254  0000D6  0012               	return		;funcret
   255  0000D8                     __end_of_Configuracion:
   256                           	callstack 0
   257                           
   258 ;; *************** function _myLoIsr *****************
   259 ;; Defined at:
   260 ;;		line 34 in file "Practica_3.c"
   261 ;; Parameters:    Size  Location     Type
   262 ;;		None
   263 ;; Auto vars:     Size  Location     Type
   264 ;;  A               1    6[COMRAM] unsigned char 
   265 ;; Return value:  Size  Location     Type
   266 ;;                  1    wreg      void 
   267 ;; Registers used:
   268 ;;		wreg, status,2, status,0
   269 ;; Tracked objects:
   270 ;;		On entry : 0/0
   271 ;;		On exit  : 0/0
   272 ;;		Unchanged: 0/0
   273 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
   274 ;;      Params:         0       0       0       0       0       0       0       0       0
   275 ;;      Locals:         1       0       0       0       0       0       0       0       0
   276 ;;      Temps:          4       0       0       0       0       0       0       0       0
   277 ;;      Totals:         5       0       0       0       0       0       0       0       0
   278 ;;Total ram usage:        5 bytes
   279 ;; Hardware stack levels used:    1
   280 ;; Hardware stack levels required when called:    1
   281 ;; This function calls:
   282 ;;		Nothing
   283 ;; This function is called by:
   284 ;;		Interrupt level 1
   285 ;; This function uses a non-reentrant model
   286 ;;
   287                           
   288                           	psect	intcodelo
   289  000018                     __pintcodelo:
   290                           	callstack 0
   291  000018                     _myLoIsr:
   292                           	callstack 28
   293                           
   294                           ; BSR set to: 15
   295                           ;incstack = 0
   296  000018  8009               	bsf	int$flags,0,c	;set compiler interrupt flag (level 1)
   297  00001A  CFD8 F004          	movff	status,??_myLoIsr+1
   298  00001E  CFE8 F005          	movff	wreg,??_myLoIsr+2
   299  000022  CFE0 F006          	movff	bsr,??_myLoIsr+3
   300  000026                     
   301                           ;Practica_3.c: 36:     char A = 10;
   302  000026  0E0A               	movlw	10
   303  000028  6E07               	movwf	myLoIsr@A^0,c
   304                           
   305                           ;Practica_3.c: 37:     while(A)
   306  00002A  EF22  F000         	goto	i1l759
   307  00002E                     i1l46:
   308                           
   309                           ;Practica_3.c: 38:     {;Practica_3.c: 39:         PORTD = A;
   310  00002E  C007  FF83         	movff	myLoIsr@A,3971	;volatile
   311  000032                     
   312                           ;Practica_3.c: 40:        _delay((unsigned long)((500)*(1000000/4000.0)));
   313  000032  0EA3               	movlw	163
   314  000034  6E03               	movwf	??_myLoIsr^0,c
   315  000036  0E55               	movlw	85
   316  000038                     i1u4_27:
   317  000038  2EE8               	decfsz	wreg,f,c
   318  00003A  D7FE               	bra	i1u4_27
   319  00003C  2E03               	decfsz	??_myLoIsr^0,f,c
   320  00003E  D7FC               	bra	i1u4_27
   321  000040  F000               	nop	
   322  000042                     
   323                           ;Practica_3.c: 41:        A -= 1;
   324  000042  0607               	decf	myLoIsr@A^0,f,c
   325  000044                     i1l759:
   326                           
   327                           ;Practica_3.c: 37:     while(A)
   328  000044  5007               	movf	myLoIsr@A^0,w,c
   329  000046  A4D8               	btfss	status,2,c
   330  000048  EF28  F000         	goto	i1u2_21
   331  00004C  EF2A  F000         	goto	i1u2_20
   332  000050                     i1u2_21:
   333  000050  EF17  F000         	goto	i1l46
   334  000054                     i1u2_20:
   335  000054                     
   336                           ;Practica_3.c: 43:     INTCON3bits.INT1F=0;
   337  000054  90F0               	bcf	240,0,c	;volatile
   338  000056  C006  FFE0         	movff	??_myLoIsr+3,bsr
   339  00005A  C005  FFE8         	movff	??_myLoIsr+2,wreg
   340  00005E  C004  FFD8         	movff	??_myLoIsr+1,status
   341  000062  9009               	bcf	int$flags,0,c	;clear compiler interrupt flag (level 1)
   342  000064  0010               	retfie	
   343  000066                     __end_of_myLoIsr:
   344                           	callstack 0
   345                           
   346 ;; *************** function _myHiIsr *****************
   347 ;; Defined at:
   348 ;;		line 19 in file "Practica_3.c"
   349 ;; Parameters:    Size  Location     Type
   350 ;;		None
   351 ;; Auto vars:     Size  Location     Type
   352 ;;  A               1    1[COMRAM] unsigned char 
   353 ;; Return value:  Size  Location     Type
   354 ;;                  1    wreg      void 
   355 ;; Registers used:
   356 ;;		wreg, status,2, status,0
   357 ;; Tracked objects:
   358 ;;		On entry : 0/0
   359 ;;		On exit  : 0/0
   360 ;;		Unchanged: 0/0
   361 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
   362 ;;      Params:         0       0       0       0       0       0       0       0       0
   363 ;;      Locals:         1       0       0       0       0       0       0       0       0
   364 ;;      Temps:          1       0       0       0       0       0       0       0       0
   365 ;;      Totals:         2       0       0       0       0       0       0       0       0
   366 ;;Total ram usage:        2 bytes
   367 ;; Hardware stack levels used:    1
   368 ;; This function calls:
   369 ;;		Nothing
   370 ;; This function is called by:
   371 ;;		Interrupt level 2
   372 ;; This function uses a non-reentrant model
   373 ;;
   374                           
   375                           	psect	intcode
   376  000008                     __pintcode:
   377                           	callstack 0
   378  000008                     _myHiIsr:
   379                           	callstack 28
   380                           
   381                           ;incstack = 0
   382  000008  8209               	bsf	int$flags,1,c	;set compiler interrupt flag (level 2)
   383  00000A  EF35  F000         	goto	int_func
   384                           
   385                           	psect	intcode_body
   386  00006A                     __pintcode_body:
   387                           	callstack 28
   388  00006A                     int_func:
   389                           	callstack 28
   390  00006A                     
   391                           ;Practica_3.c: 21:     char A = 10;
   392  00006A  0E0A               	movlw	10
   393  00006C  6E02               	movwf	myHiIsr@A^0,c
   394                           
   395                           ;Practica_3.c: 22:     while(A)
   396  00006E  EF4B  F000         	goto	i2l751
   397  000072                     i2l38:
   398                           
   399                           ;Practica_3.c: 23:     {;Practica_3.c: 24:         PORTD = 0xFF;
   400  000072  6883               	setf	131,c	;volatile
   401  000074                     
   402                           ;Practica_3.c: 25:         _delay((unsigned long)((400)*(1000000/4000.0)));
   403  000074  0E82               	movlw	130
   404  000076  6E01               	movwf	??_myHiIsr^0,c
   405  000078  0EDE               	movlw	222
   406  00007A                     i2u5_47:
   407  00007A  2EE8               	decfsz	wreg,f,c
   408  00007C  D7FE               	bra	i2u5_47
   409  00007E  2E01               	decfsz	??_myHiIsr^0,f,c
   410  000080  D7FC               	bra	i2u5_47
   411  000082                     
   412                           ;Practica_3.c: 26:         PORTD = 0x00;
   413  000082  0E00               	movlw	0
   414  000084  6E83               	movwf	131,c	;volatile
   415  000086                     
   416                           ;Practica_3.c: 27:         _delay((unsigned long)((400)*(1000000/4000.0)));
   417  000086  0E82               	movlw	130
   418  000088  6E01               	movwf	??_myHiIsr^0,c
   419  00008A  0EDE               	movlw	222
   420  00008C                     i2u6_47:
   421  00008C  2EE8               	decfsz	wreg,f,c
   422  00008E  D7FE               	bra	i2u6_47
   423  000090  2E01               	decfsz	??_myHiIsr^0,f,c
   424  000092  D7FC               	bra	i2u6_47
   425  000094                     
   426                           ;Practica_3.c: 28:         A -= 1;
   427  000094  0602               	decf	myHiIsr@A^0,f,c
   428  000096                     i2l751:
   429                           
   430                           ;Practica_3.c: 22:     while(A)
   431  000096  5002               	movf	myHiIsr@A^0,w,c
   432  000098  A4D8               	btfss	status,2,c
   433  00009A  EF51  F000         	goto	i2u1_41
   434  00009E  EF53  F000         	goto	i2u1_40
   435  0000A2                     i2u1_41:
   436  0000A2  EF39  F000         	goto	i2l38
   437  0000A6                     i2u1_40:
   438  0000A6                     
   439                           ;Practica_3.c: 30:     INTCONbits.INT0IF=0;
   440  0000A6  92F2               	bcf	242,1,c	;volatile
   441  0000A8  9209               	bcf	int$flags,1,c	;clear compiler interrupt flag (level 2)
   442  0000AA  0011               	retfie		f
   443  0000AC                     __end_of_myHiIsr:
   444                           	callstack 0
   445  0000                     
   446                           	psect	rparam
   447  0000                     
   448                           	psect	temp
   449  000009                     btemp:
   450                           	callstack 0
   451  000009                     	ds	1
   452  0000                     int$flags	set	btemp
   453  0000                     wtemp8	set	btemp+1
   454  0000                     ttemp5	set	btemp+1
   455  0000                     ttemp6	set	btemp+4
   456  0000                     ttemp7	set	btemp+8
   457                           
   458                           	psect	idloc
   459                           
   460                           ;Config register IDLOC0 @ 0x200000
   461                           ;	unspecified, using default values
   462  200000                     	org	2097152
   463  200000  FF                 	db	255
   464                           
   465                           ;Config register IDLOC1 @ 0x200001
   466                           ;	unspecified, using default values
   467  200001                     	org	2097153
   468  200001  FF                 	db	255
   469                           
   470                           ;Config register IDLOC2 @ 0x200002
   471                           ;	unspecified, using default values
   472  200002                     	org	2097154
   473  200002  FF                 	db	255
   474                           
   475                           ;Config register IDLOC3 @ 0x200003
   476                           ;	unspecified, using default values
   477  200003                     	org	2097155
   478  200003  FF                 	db	255
   479                           
   480                           ;Config register IDLOC4 @ 0x200004
   481                           ;	unspecified, using default values
   482  200004                     	org	2097156
   483  200004  FF                 	db	255
   484                           
   485                           ;Config register IDLOC5 @ 0x200005
   486                           ;	unspecified, using default values
   487  200005                     	org	2097157
   488  200005  FF                 	db	255
   489                           
   490                           ;Config register IDLOC6 @ 0x200006
   491                           ;	unspecified, using default values
   492  200006                     	org	2097158
   493  200006  FF                 	db	255
   494                           
   495                           ;Config register IDLOC7 @ 0x200007
   496                           ;	unspecified, using default values
   497  200007                     	org	2097159
   498  200007  FF                 	db	255
   499                           
   500                           	psect	config
   501                           
   502                           ;Config register CONFIG1L @ 0x300000
   503                           ;	unspecified, using default values
   504                           ;	PLL Selection
   505                           ;	PLLSEL = 0x0, unprogrammed default
   506                           ;	PLL Enable Configuration bit
   507                           ;	CFGPLLEN = 0x0, unprogrammed default
   508                           ;	CPU System Clock Postscaler
   509                           ;	CPUDIV = 0x0, unprogrammed default
   510                           ;	Low Speed USB mode with 48 MHz system clock
   511                           ;	LS48MHZ = 0x0, unprogrammed default
   512  300000                     	org	3145728
   513  300000  00                 	db	0
   514                           
   515                           ;Config register CONFIG1H @ 0x300001
   516                           ;	Oscillator Selection
   517                           ;	FOSC = INTOSCIO, Internal oscillator
   518                           ;	Primary Oscillator Shutdown
   519                           ;	PCLKEN = 0x1, unprogrammed default
   520                           ;	Fail-Safe Clock Monitor
   521                           ;	FCMEN = 0x0, unprogrammed default
   522                           ;	Internal/External Oscillator Switchover
   523                           ;	IESO = 0x0, unprogrammed default
   524  300001                     	org	3145729
   525  300001  28                 	db	40
   526                           
   527                           ;Config register CONFIG2L @ 0x300002
   528                           ;	unspecified, using default values
   529                           ;	Power-up Timer Enable
   530                           ;	nPWRTEN = 0x1, unprogrammed default
   531                           ;	Brown-out Reset Enable
   532                           ;	BOREN = 0x3, unprogrammed default
   533                           ;	Brown-out Reset Voltage
   534                           ;	BORV = 0x3, unprogrammed default
   535                           ;	Low-Power Brown-out Reset
   536                           ;	nLPBOR = 0x1, unprogrammed default
   537  300002                     	org	3145730
   538  300002  5F                 	db	95
   539                           
   540                           ;Config register CONFIG2H @ 0x300003
   541                           ;	Watchdog Timer Enable bits
   542                           ;	WDTEN = OFF, WDT disabled in hardware (SWDTEN ignored)
   543                           ;	Watchdog Timer Postscaler
   544                           ;	WDTPS = 0xF, unprogrammed default
   545  300003                     	org	3145731
   546  300003  3C                 	db	60
   547                           
   548                           ; Padding undefined space
   549  300004                     	org	3145732
   550  300004  FF                 	db	255
   551                           
   552                           ;Config register CONFIG3H @ 0x300005
   553                           ;	CCP2 MUX bit
   554                           ;	CCP2MX = 0x1, unprogrammed default
   555                           ;	PORTB A/D Enable bit
   556                           ;	PBADEN = 0x1, unprogrammed default
   557                           ;	Timer3 Clock Input MUX bit
   558                           ;	T3CMX = 0x1, unprogrammed default
   559                           ;	SDO Output MUX bit
   560                           ;	SDOMX = 0x1, unprogrammed default
   561                           ;	Master Clear Reset Pin Enable
   562                           ;	MCLRE = ON, MCLR pin enabled; RE3 input disabled
   563  300005                     	org	3145733
   564  300005  D3                 	db	211
   565                           
   566                           ;Config register CONFIG4L @ 0x300006
   567                           ;	Stack Full/Underflow Reset
   568                           ;	STVREN = 0x1, unprogrammed default
   569                           ;	Single-Supply ICSP Enable bit
   570                           ;	LVP = OFF, Single-Supply ICSP disabled
   571                           ;	Dedicated In-Circuit Debug/Programming Port Enable
   572                           ;	ICPRT = OFF, ICPORT disabled
   573                           ;	Extended Instruction Set Enable bit
   574                           ;	XINST = 0x0, unprogrammed default
   575                           ;	Background Debugger Enable bit
   576                           ;	DEBUG = 0x1, unprogrammed default
   577  300006                     	org	3145734
   578  300006  81                 	db	129
   579                           
   580                           ; Padding undefined space
   581  300007                     	org	3145735
   582  300007  FF                 	db	255
   583                           
   584                           ;Config register CONFIG5L @ 0x300008
   585                           ;	unspecified, using default values
   586                           ;	Block 0 Code Protect
   587                           ;	CP0 = 0x1, unprogrammed default
   588                           ;	Block 1 Code Protect
   589                           ;	CP1 = 0x1, unprogrammed default
   590                           ;	Block 2 Code Protect
   591                           ;	CP2 = 0x1, unprogrammed default
   592                           ;	Block 3 Code Protect
   593                           ;	CP3 = 0x1, unprogrammed default
   594  300008                     	org	3145736
   595  300008  0F                 	db	15
   596                           
   597                           ;Config register CONFIG5H @ 0x300009
   598                           ;	unspecified, using default values
   599                           ;	Boot Block Code Protect
   600                           ;	CPB = 0x1, unprogrammed default
   601                           ;	Data EEPROM Code Protect
   602                           ;	CPD = 0x1, unprogrammed default
   603  300009                     	org	3145737
   604  300009  C0                 	db	192
   605                           
   606                           ;Config register CONFIG6L @ 0x30000A
   607                           ;	unspecified, using default values
   608                           ;	Block 0 Write Protect
   609                           ;	WRT0 = 0x1, unprogrammed default
   610                           ;	Block 1 Write Protect
   611                           ;	WRT1 = 0x1, unprogrammed default
   612                           ;	Block 2 Write Protect
   613                           ;	WRT2 = 0x1, unprogrammed default
   614                           ;	Block 3 Write Protect
   615                           ;	WRT3 = 0x1, unprogrammed default
   616  30000A                     	org	3145738
   617  30000A  0F                 	db	15
   618                           
   619                           ;Config register CONFIG6H @ 0x30000B
   620                           ;	unspecified, using default values
   621                           ;	Configuration Registers Write Protect
   622                           ;	WRTC = 0x1, unprogrammed default
   623                           ;	Boot Block Write Protect
   624                           ;	WRTB = 0x1, unprogrammed default
   625                           ;	Data EEPROM Write Protect
   626                           ;	WRTD = 0x1, unprogrammed default
   627  30000B                     	org	3145739
   628  30000B  E0                 	db	224
   629                           
   630                           ;Config register CONFIG7L @ 0x30000C
   631                           ;	unspecified, using default values
   632                           ;	Block 0 Table Read Protect
   633                           ;	EBTR0 = 0x1, unprogrammed default
   634                           ;	Block 1 Table Read Protect
   635                           ;	EBTR1 = 0x1, unprogrammed default
   636                           ;	Block 2 Table Read Protect
   637                           ;	EBTR2 = 0x1, unprogrammed default
   638                           ;	Block 3 Table Read Protect
   639                           ;	EBTR3 = 0x1, unprogrammed default
   640  30000C                     	org	3145740
   641  30000C  0F                 	db	15
   642                           
   643                           ;Config register CONFIG7H @ 0x30000D
   644                           ;	unspecified, using default values
   645                           ;	Boot Block Table Read Protect
   646                           ;	EBTRB = 0x1, unprogrammed default
   647  30000D                     	org	3145741
   648  30000D  40                 	db	64
   649                           tosu	equ	0xFFF
   650                           tosh	equ	0xFFE
   651                           tosl	equ	0xFFD
   652                           stkptr	equ	0xFFC
   653                           pclatu	equ	0xFFB
   654                           pclath	equ	0xFFA
   655                           pcl	equ	0xFF9
   656                           tblptru	equ	0xFF8
   657                           tblptrh	equ	0xFF7
   658                           tblptrl	equ	0xFF6
   659                           tablat	equ	0xFF5
   660                           prodh	equ	0xFF4
   661                           prodl	equ	0xFF3
   662                           indf0	equ	0xFEF
   663                           postinc0	equ	0xFEE
   664                           postdec0	equ	0xFED
   665                           preinc0	equ	0xFEC
   666                           plusw0	equ	0xFEB
   667                           fsr0h	equ	0xFEA
   668                           fsr0l	equ	0xFE9
   669                           wreg	equ	0xFE8
   670                           indf1	equ	0xFE7
   671                           postinc1	equ	0xFE6
   672                           postdec1	equ	0xFE5
   673                           preinc1	equ	0xFE4
   674                           plusw1	equ	0xFE3
   675                           fsr1h	equ	0xFE2
   676                           fsr1l	equ	0xFE1
   677                           bsr	equ	0xFE0
   678                           indf2	equ	0xFDF
   679                           postinc2	equ	0xFDE
   680                           postdec2	equ	0xFDD
   681                           preinc2	equ	0xFDC
   682                           plusw2	equ	0xFDB
   683                           fsr2h	equ	0xFDA
   684                           fsr2l	equ	0xFD9
   685                           status	equ	0xFD8

Data Sizes:
    Strings     0
    Constant    0
    Data        0
    BSS         0
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM           94      8       8
    BANK0           160      0       0
    BANK1           256      0       0
    BANK2           256      0       0
    BANK3           256      0       0
    BANK4           256      0       0
    BANK5           256      0       0
    BANK6           256      0       0
    BANK7           256      0       0

Pointer List with Targets:

    None.

Critical Paths under _main in COMRAM

    None.

Critical Paths under _myLoIsr in COMRAM

    None.

Critical Paths under _myHiIsr in COMRAM

    None.

Critical Paths under _main in BANK0

    None.

Critical Paths under _myLoIsr in BANK0

    None.

Critical Paths under _myHiIsr in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _myLoIsr in BANK1

    None.

Critical Paths under _myHiIsr in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _myLoIsr in BANK2

    None.

Critical Paths under _myHiIsr in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _myLoIsr in BANK3

    None.

Critical Paths under _myHiIsr in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _myLoIsr in BANK4

    None.

Critical Paths under _myHiIsr in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _myLoIsr in BANK5

    None.

Critical Paths under _myHiIsr in BANK5

    None.

Critical Paths under _main in BANK6

    None.

Critical Paths under _myLoIsr in BANK6

    None.

Critical Paths under _myHiIsr in BANK6

    None.

Critical Paths under _main in BANK7

    None.

Critical Paths under _myLoIsr in BANK7

    None.

Critical Paths under _myHiIsr in BANK7

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 1     1      0       0
                                              7 COMRAM     1     1      0
                      _Configuracion
 ---------------------------------------------------------------------------------
 (1) _Configuracion                                        0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 1
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (2) _myLoIsr                                              5     5      0      30
                                              2 COMRAM     5     5      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 2
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (3) _myHiIsr                                              2     2      0      15
                                              0 COMRAM     2     2      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 3
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _Configuracion

 _myLoIsr (ROOT)

 _myHiIsr (ROOT)

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BITCOMRAM           5E      0       0       0        0.0%
EEDATA             100      0       0       0        0.0%
NULL                 0      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
COMRAM              5E      8       8       1        8.5%
STACK                0      0       0       2        0.0%
DATA                 0      0       0       3        0.0%
BITBANK0            A0      0       0       4        0.0%
BANK0               A0      0       0       5        0.0%
ABS                  0      0       0       6        0.0%
BITBANK1           100      0       0       7        0.0%
BANK1              100      0       0       8        0.0%
BITBANK2           100      0       0       9        0.0%
BANK2              100      0       0      10        0.0%
BITBANK3           100      0       0      11        0.0%
BANK3              100      0       0      12        0.0%
BITBANK4           100      0       0      13        0.0%
BANK4              100      0       0      14        0.0%
BITBANK5           100      0       0      15        0.0%
BANK5              100      0       0      16        0.0%
BITBANK6           100      0       0      17        0.0%
BANK6              100      0       0      18        0.0%
BITBANK7           100      0       0      19        0.0%
BANK7              100      0       0      20        0.0%
BIGRAM             7FF      0       0      21        0.0%
BITSFR_1             0      0       0     200        0.0%
SFR_1                0      0       0     200        0.0%
BITSFR               0      0       0     200        0.0%
SFR                  0      0       0     200        0.0%


Microchip Technology PIC18 Macro Assembler V2.31 build 20201012212115 
Symbol Table                                                                                   Sat Feb 20 17:17:35 2021

                     l51 00D6                       u37 00E6                       bsr 000FE0  
                    l735 00AC                      l737 00B0                      l761 00D8  
                    l739 00D4                      l763 00DC                      l765 00E0  
                    wreg 000FE8                     _LATA 000F89                     _LATD 000F8C  
                   i1l46 002E                     i1l47 0054                     i2l40 00A8  
                   i1l48 0056                     i2l38 0072                     i2l39 00A6  
                   _main 00D8                     btemp 0009                     start 0066  
           ___param_bank 000000                    ?_main 0001                    i1l753 0026  
                  i1l755 0032                    i1l757 0042                    i1l759 0044  
                  i2l741 006A                    i2l743 0074                    i2l751 0096  
                  i2l745 0082                    i2l747 0086                    i2l749 0094  
                  _PORTA 000F80                    _PORTD 000F83                    _TRISA 000F92  
                  _TRISB 000F93                    _TRISD 000F95          __end_of_myHiIsr 00AC  
        __end_of_myLoIsr 0066                    ttemp5 000A                    ttemp6 000D  
                  ttemp7 0011                    status 000FD8                    wtemp8 000A  
        __initialization 00F8             __end_of_main 00F8                   ??_main 0008  
          __activetblptr 000000                   _ANSELA 000F5B                   _ANSELB 000F5C  
                 _ANSELD 000F5E                   _INTCON 000FF2                   i1u2_20 0054  
                 i1u2_21 0050                   i1u4_27 0038                   i2u1_40 00A6  
                 i2u1_41 00A2                   i2u5_47 007A                   i2u6_47 008C  
              ??_myHiIsr 0001                ??_myLoIsr 0003               __accesstop 0060  
__end_of__initialization 00F8            ___rparam_used 000001           __pcstackCOMRAM 0001  
  __end_of_Configuracion 00D8                  _INTCON3 000FF0                  __Hparam 0000  
                __Lparam 0000                  __pcinit 00F8                  __ramtop 0800  
                __ptext0 00D8                  __ptext1 00AC                  _myHiIsr 0008  
                _myLoIsr 0018           __pintcode_body 006A     end_of_initialization 00F8  
                int_func 006A      start_initialization 00F8                __pintcode 0008  
            __pintcodelo 0018   __size_of_Configuracion 002C                 ?_myHiIsr 0001  
               ?_myLoIsr 0001                 _RCONbits 000FD0              _INTCON3bits 000FF0  
          _Configuracion 00AC                 __Hrparam 0000                 __Lrparam 0000  
       __size_of_myHiIsr 00A4         __size_of_myLoIsr 004E           ?_Configuracion 0001  
          __size_of_main 0020                 int$flags 0009               _INTCONbits 000FF2  
               myHiIsr@A 0002                 myLoIsr@A 0007                 intlevel1 0000  
               intlevel2 0000          ??_Configuracion 0008  
