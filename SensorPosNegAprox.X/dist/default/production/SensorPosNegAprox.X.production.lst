

Microchip MPLAB XC8 Assembler V2.31 build 20201012212115 
                                                                                               Fri Apr 30 12:26:11 2021

Microchip MPLAB XC8 C Compiler v2.31 (Free license) build 20201012212115 Og1 
     1                           	processor	18F45K50
     2                           	fnconf	rparam,??,?,0
     3                           	pagewidth 120
     4                           	opt	flic
     5                           	psect	smallconst,global,reloc=2,class=SMALLCONST,delta=1,noexec
     6                           	psect	cinit,global,reloc=2,class=CODE,delta=1
     7                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1,lowdata,noexec
     8                           	psect	bssBANK1,global,class=BANK1,space=1,delta=1,lowdata,noexec
     9                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1,lowdata,noexec
    10                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
    11                           	psect	text0,global,reloc=2,class=CODE,delta=1
    12                           	psect	text1,global,reloc=2,class=CODE,delta=1
    13                           	psect	text2,global,reloc=2,class=CODE,delta=1
    14                           	psect	text3,global,reloc=2,class=CODE,delta=1,group=3
    15                           	psect	text4,global,reloc=2,class=CODE,delta=1,group=2
    16                           	psect	text5,global,reloc=2,class=CODE,delta=1
    17                           	psect	text6,global,reloc=2,class=CODE,delta=1
    18                           	psect	text7,global,reloc=2,class=CODE,delta=1
    19                           	psect	text8,global,reloc=2,class=CODE,delta=1
    20                           	psect	text9,global,reloc=2,class=CODE,delta=1
    21                           	psect	text10,global,reloc=2,class=CODE,delta=1
    22                           	psect	text11,global,reloc=2,class=CODE,delta=1
    23                           	psect	text12,global,reloc=2,class=CODE,delta=1
    24                           	psect	text13,global,reloc=2,class=CODE,delta=1
    25                           	psect	text14,global,reloc=2,class=CODE,delta=1
    26                           	psect	text15,global,reloc=2,class=CODE,delta=1
    27                           	psect	text16,global,reloc=2,class=CODE,delta=1
    28                           	psect	text17,global,reloc=2,class=CODE,delta=1,group=3
    29                           	psect	text18,global,reloc=2,class=CODE,delta=1,group=1
    30                           	psect	text19,global,reloc=2,class=CODE,delta=1,group=1
    31                           	psect	text20,global,reloc=2,class=CODE,delta=1,group=3
    32                           	psect	text21,global,reloc=2,class=CODE,delta=1,group=1
    33                           	psect	text22,global,reloc=2,class=CODE,delta=1,group=3
    34                           	psect	text23,global,reloc=2,class=CODE,delta=1,group=3
    35                           	psect	text24,global,reloc=2,class=CODE,delta=1,group=3
    36                           	psect	text25,global,reloc=2,class=CODE,delta=1,group=3
    37                           	psect	text26,global,reloc=2,class=CODE,delta=1,group=3
    38                           	psect	text27,global,reloc=2,class=CODE,delta=1,group=2
    39                           	psect	text28,global,reloc=2,class=CODE,delta=1,group=2
    40                           	psect	text29,global,reloc=2,class=CODE,delta=1,group=2
    41                           	psect	text30,global,reloc=2,class=CODE,delta=1,group=2
    42                           	psect	text31,global,reloc=2,class=CODE,delta=1,group=2
    43                           	psect	text32,global,reloc=2,class=CODE,delta=1,group=2
    44                           	psect	text33,global,reloc=2,class=CODE,delta=1,group=2
    45                           	psect	text34,global,reloc=2,class=CODE,delta=1,group=2
    46                           	psect	text35,global,reloc=2,class=CODE,delta=1,group=2
    47                           	psect	text36,global,reloc=2,class=CODE,delta=1,group=2
    48                           	psect	text37,global,reloc=2,class=CODE,delta=1,group=1
    49                           	psect	text38,global,reloc=2,class=CODE,delta=1,group=1
    50                           	psect	text39,global,reloc=2,class=CODE,delta=1,group=3
    51                           	psect	text40,global,reloc=2,class=CODE,delta=1,group=3
    52                           	psect	text41,global,reloc=2,class=CODE,delta=1,group=3
    53                           	psect	text42,global,reloc=2,class=CODE,delta=1,group=2
    54                           	psect	text43,global,reloc=2,class=CODE,delta=1,group=2
    55                           	psect	text44,global,reloc=2,class=CODE,delta=1,group=1
    56                           	psect	text45,global,reloc=2,class=CODE,delta=1,group=3
    57                           	psect	text46,global,reloc=2,class=CODE,delta=1
    58                           	psect	text47,global,reloc=2,class=CODE,delta=1,group=3
    59                           	psect	text48,global,reloc=2,class=CODE,delta=1,group=3
    60                           	psect	text49,global,reloc=2,class=CODE,delta=1,group=3
    61                           	psect	text50,global,reloc=2,class=CODE,delta=1,group=2
    62                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1,noexec
    63                           	psect	rparam,global,class=COMRAM,space=1,delta=1,noexec
    64                           	psect	idloc,global,abs,ovrld,class=IDLOC,space=5,delta=1,noexec
    65                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=1,noexec
    66  0000                     
    67                           ; Version 2.20
    68                           ; Generated 05/05/2020 GMT
    69                           ; 
    70                           ; Copyright Â© 2020, Microchip Technology Inc. and its subsidiaries ("Microchip")
    71                           ; All rights reserved.
    72                           ; 
    73                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    74                           ; 
    75                           ; Redistribution and use in source and binary forms, with or without modification, are
    76                           ; permitted provided that the following conditions are met:
    77                           ; 
    78                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    79                           ;        conditions and the following disclaimer.
    80                           ; 
    81                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    82                           ;        of conditions and the following disclaimer in the documentation and/or other
    83                           ;        materials provided with the distribution.
    84                           ; 
    85                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    86                           ;        software without specific prior written permission.
    87                           ; 
    88                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    89                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    90                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    91                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    92                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    93                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    94                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    95                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    96                           ; 
    97                           ; 
    98                           ; Code-generator required, PIC18F45K50 Definitions
    99                           ; 
   100                           ; SFR Addresses
   101  0000                     _ANSELB	set	3932
   102  0000                     _ANSELCbits	set	3933
   103  0000                     _ANSELAbits	set	3931
   104  0000                     _PORTB	set	3969
   105  0000                     _PORTCbits	set	3970
   106  0000                     _PORTAbits	set	3968
   107  0000                     _INTCONbits	set	4082
   108  0000                     _TMR0L	set	4054
   109  0000                     _T0CONbits	set	4053
   110  0000                     _LATD	set	3980
   111  0000                     _LATDbits	set	3980
   112  0000                     _LATB	set	3978
   113  0000                     _TRISB	set	3987
   114  0000                     _LATCbits	set	3979
   115  0000                     _TRISCbits	set	3988
   116  0000                     _OSCCON	set	4051
   117  0000                     _TRISD	set	3989
   118  0000                     _TRISA	set	3986
   119  0000                     _ADRESH	set	4036
   120  0000                     _ADRESL	set	4035
   121  0000                     _ADCON2	set	4032
   122  0000                     _ADCON0	set	4034
   123  0000                     _ADCON0bits	set	4034
   124  0000                     _ADCON1bits	set	4033
   125                           
   126                           	psect	smallconst
   127  000800                     __psmallconst:
   128                           	callstack 0
   129  000800  00                 	db	0
   130  000801                     STR_6:
   131  000801  25                 	db	37
   132  000802  64                 	db	100	;'d'
   133  000803  25                 	db	37
   134  000804  64                 	db	100	;'d'
   135  000805  3A                 	db	58	;':'
   136  000806  25                 	db	37
   137  000807  64                 	db	100	;'d'
   138  000808  25                 	db	37
   139  000809  64                 	db	100	;'d'
   140  00080A  3A                 	db	58	;':'
   141  00080B  25                 	db	37
   142  00080C  64                 	db	100	;'d'
   143  00080D  25                 	db	37
   144  00080E  64                 	db	100	;'d'
   145  00080F  20                 	db	32
   146  000810  41                 	db	65	;'A'
   147  000811  2E                 	db	46
   148  000812  4D                 	db	77	;'M'
   149  000813  00                 	db	0
   150  000814                     STR_7:
   151  000814  25                 	db	37
   152  000815  64                 	db	100	;'d'
   153  000816  25                 	db	37
   154  000817  64                 	db	100	;'d'
   155  000818  3A                 	db	58	;':'
   156  000819  25                 	db	37
   157  00081A  64                 	db	100	;'d'
   158  00081B  25                 	db	37
   159  00081C  64                 	db	100	;'d'
   160  00081D  3A                 	db	58	;':'
   161  00081E  25                 	db	37
   162  00081F  64                 	db	100	;'d'
   163  000820  25                 	db	37
   164  000821  64                 	db	100	;'d'
   165  000822  20                 	db	32
   166  000823  50                 	db	80	;'P'
   167  000824  2E                 	db	46
   168  000825  4D                 	db	77	;'M'
   169  000826  00                 	db	0
   170  000827                     STR_5:
   171  000827  20                 	db	32
   172  000828  20                 	db	32
   173  000829  46                 	db	70	;'F'
   174  00082A  72                 	db	114	;'r'
   175  00082B  69                 	db	105	;'i'
   176  00082C  6F                 	db	111	;'o'
   177  00082D  20                 	db	32
   178  00082E  45                 	db	69	;'E'
   179  00082F  78                 	db	120	;'x'
   180  000830  74                 	db	116	;'t'
   181  000831  72                 	db	114	;'r'
   182  000832  65                 	db	101	;'e'
   183  000833  6D                 	db	109	;'m'
   184  000834  6F                 	db	111	;'o'
   185  000835  21                 	db	33
   186  000836  20                 	db	32
   187  000837  00                 	db	0
   188  000838                     STR_4:
   189  000838  20                 	db	32
   190  000839  43                 	db	67	;'C'
   191  00083A  61                 	db	97	;'a'
   192  00083B  6C                 	db	108	;'l'
   193  00083C  6F                 	db	111	;'o'
   194  00083D  72                 	db	114	;'r'
   195  00083E  20                 	db	32
   196  00083F  45                 	db	69	;'E'
   197  000840  78                 	db	120	;'x'
   198  000841  74                 	db	116	;'t'
   199  000842  72                 	db	114	;'r'
   200  000843  65                 	db	101	;'e'
   201  000844  6D                 	db	109	;'m'
   202  000845  6F                 	db	111	;'o'
   203  000846  21                 	db	33
   204  000847  20                 	db	32
   205  000848  00                 	db	0
   206  000849                     STR_2:
   207  000849  20                 	db	32
   208  00084A  54                 	db	84	;'T'
   209  00084B  20                 	db	32
   210  00084C  3D                 	db	61	;'='
   211  00084D  20                 	db	32
   212  00084E  25                 	db	37
   213  00084F  31                 	db	49	;'1'
   214  000850  2E                 	db	46
   215  000851  34                 	db	52	;'4'
   216  000852  66                 	db	102	;'f'
   217  000853  20                 	db	32
   218  000854  25                 	db	37
   219  000855  63                 	db	99	;'c'
   220  000856  43                 	db	67	;'C'
   221  000857  00                 	db	0
   222  000858                     STR_3:
   223  000858  20                 	db	32
   224  000859  54                 	db	84	;'T'
   225  00085A  20                 	db	32
   226  00085B  3D                 	db	61	;'='
   227  00085C  20                 	db	32
   228  00085D  25                 	db	37
   229  00085E  32                 	db	50	;'2'
   230  00085F  2E                 	db	46
   231  000860  34                 	db	52	;'4'
   232  000861  66                 	db	102	;'f'
   233  000862  20                 	db	32
   234  000863  25                 	db	37
   235  000864  63                 	db	99	;'c'
   236  000865  43                 	db	67	;'C'
   237  000866  00                 	db	0
   238  000867                     STR_1:
   239  000867  20                 	db	32
   240  000868  54                 	db	84	;'T'
   241  000869  20                 	db	32
   242  00086A  3D                 	db	61	;'='
   243  00086B  20                 	db	32
   244  00086C  25                 	db	37
   245  00086D  33                 	db	51	;'3'
   246  00086E  2E                 	db	46
   247  00086F  34                 	db	52	;'4'
   248  000870  66                 	db	102	;'f'
   249  000871  20                 	db	32
   250  000872  25                 	db	37
   251  000873  63                 	db	99	;'c'
   252  000874  43                 	db	67	;'C'
   253  000875  00                 	db	0
   254  000876                     STR_8:
   255  000876  20                 	db	32
   256  000877  4D                 	db	77	;'M'
   257  000878  6F                 	db	111	;'o'
   258  000879  64                 	db	100	;'d'
   259  00087A  6F                 	db	111	;'o'
   260  00087B  20                 	db	32
   261  00087C  41                 	db	65	;'A'
   262  00087D  6C                 	db	108	;'l'
   263  00087E  61                 	db	97	;'a'
   264  00087F  72                 	db	114	;'r'
   265  000880  6D                 	db	109	;'m'
   266  000881  61                 	db	97	;'a'
   267  000882  20                 	db	32
   268  000883  00                 	db	0
   269  000884                     STR_11:
   270  000884  49                 	db	73	;'I'
   271  000885  4E                 	db	78	;'N'
   272  000886  46                 	db	70	;'F'
   273  000887  00                 	db	0
   274  000888                     STR_15:
   275  000888  4E                 	db	78	;'N'
   276  000889  41                 	db	65	;'A'
   277  00088A  4E                 	db	78	;'N'
   278  00088B  00                 	db	0
   279  00088C                     STR_12:
   280  00088C  69                 	db	105	;'i'
   281  00088D  6E                 	db	110	;'n'
   282  00088E  66                 	db	102	;'f'
   283  00088F  00                 	db	0
   284  000890                     STR_16:
   285  000890  6E                 	db	110	;'n'
   286  000891  61                 	db	97	;'a'
   287  000892  6E                 	db	110	;'n'
   288  000893  00                 	db	0
   289  000894                     STR_19:
   290  000894  6C                 	db	108	;'l'
   291  000895  66                 	db	102	;'f'
   292  000896  00                 	db	0
   293  000897  00                 	db	0	; dummy byte at the end
   294  0000                     
   295                           ; #config settings
   296                           
   297                           	psect	cinit
   298  004CF4                     __pcinit:
   299                           	callstack 0
   300  004CF4                     start_initialization:
   301                           	callstack 0
   302  004CF4                     __initialization:
   303                           	callstack 0
   304                           
   305                           ; Clear objects allocated to BANK1 (112 bytes)
   306  004CF4  EE01  F000         	lfsr	0,__pbssBANK1
   307  004CF8  0E70               	movlw	112
   308  004CFA                     clear_0:
   309  004CFA  6AEE               	clrf	postinc0,c
   310  004CFC  06E8               	decf	wreg,f,c
   311  004CFE  E1FD               	bnz	clear_0
   312                           
   313                           ; Clear objects allocated to BANK0 (62 bytes)
   314  004D00  EE00  F0C0         	lfsr	0,__pbssBANK0
   315  004D04  0E3E               	movlw	62
   316  004D06                     clear_1:
   317  004D06  6AEE               	clrf	postinc0,c
   318  004D08  06E8               	decf	wreg,f,c
   319  004D0A  E1FD               	bnz	clear_1
   320  004D0C                     end_of_initialization:
   321                           	callstack 0
   322  004D0C                     __end_of__initialization:
   323                           	callstack 0
   324  004D0C  0E00               	movlw	low (__Lmediumconst shr (0+16))
   325  004D0E  6EF8               	movwf	tblptru,c
   326  004D10  0100               	movlb	0
   327  004D12  EF06  F025         	goto	_main	;jump to C main() function
   328                           
   329                           	psect	bssBANK0
   330  0000C0                     __pbssBANK0:
   331                           	callstack 0
   332  0000C0                     _temperatura:
   333                           	callstack 0
   334  0000C0                     	ds	4
   335  0000C4                     _VoltajeA:
   336                           	callstack 0
   337  0000C4                     	ds	4
   338  0000C8                     _R_LM35:
   339                           	callstack 0
   340  0000C8                     	ds	4
   341  0000CC                     _nout:
   342                           	callstack 0
   343  0000CC                     	ds	2
   344  0000CE                     _width:
   345                           	callstack 0
   346  0000CE                     	ds	2
   347  0000D0                     _prec:
   348                           	callstack 0
   349  0000D0                     	ds	2
   350  0000D2                     _flags:
   351                           	callstack 0
   352  0000D2                     	ds	2
   353  0000D4                     _US:
   354                           	callstack 0
   355  0000D4                     	ds	2
   356  0000D6                     _DS:
   357                           	callstack 0
   358  0000D6                     	ds	2
   359  0000D8                     _UM:
   360                           	callstack 0
   361  0000D8                     	ds	2
   362  0000DA                     _DM:
   363                           	callstack 0
   364  0000DA                     	ds	2
   365  0000DC                     _UH:
   366                           	callstack 0
   367  0000DC                     	ds	2
   368  0000DE                     _DH:
   369                           	callstack 0
   370  0000DE                     	ds	2
   371  0000E0                     _SEGUNDO:
   372                           	callstack 0
   373  0000E0                     	ds	2
   374  0000E2                     _MINUTO:
   375                           	callstack 0
   376  0000E2                     	ds	2
   377  0000E4                     _HORA:
   378                           	callstack 0
   379  0000E4                     	ds	2
   380  0000E6                     _Decenas_Segundos:
   381                           	callstack 0
   382  0000E6                     	ds	2
   383  0000E8                     _Unidades_Segundos:
   384                           	callstack 0
   385  0000E8                     	ds	2
   386  0000EA                     _Decenas_Minutos:
   387                           	callstack 0
   388  0000EA                     	ds	2
   389  0000EC                     _Unidades_Minutos:
   390                           	callstack 0
   391  0000EC                     	ds	2
   392  0000EE                     _Decenas_Horas:
   393                           	callstack 0
   394  0000EE                     	ds	2
   395  0000F0                     _Unidades_Horas:
   396                           	callstack 0
   397  0000F0                     	ds	2
   398  0000F2                     _segundos:
   399                           	callstack 0
   400  0000F2                     	ds	2
   401  0000F4                     _horas:
   402                           	callstack 0
   403  0000F4                     	ds	2
   404  0000F6                     _minutos:
   405                           	callstack 0
   406  0000F6                     	ds	2
   407  0000F8                     _cambio:
   408                           	callstack 0
   409  0000F8                     	ds	2
   410  0000FA                     _ADC1:
   411                           	callstack 0
   412  0000FA                     	ds	2
   413  0000FC                     _ADC:
   414                           	callstack 0
   415  0000FC                     	ds	2
   416                           
   417                           	psect	bssBANK1
   418  000100                     __pbssBANK1:
   419                           	callstack 0
   420  000100                     floorf@F527:
   421                           	callstack 0
   422  000100                     	ds	4
   423  000104                     ___fpclassifyf@F465:
   424                           	callstack 0
   425  000104                     	ds	4
   426  000108                     _VoltajeB:
   427                           	callstack 0
   428  000108                     	ds	4
   429  00010C                     _R_CAD:
   430                           	callstack 0
   431  00010C                     	ds	4
   432  000110                     _dbuf:
   433                           	callstack 0
   434  000110                     	ds	80
   435  000160                     _Valores:
   436                           	callstack 0
   437  000160                     	ds	16
   438                           
   439                           	psect	cstackBANK0
   440  000060                     __pcstackBANK0:
   441                           	callstack 0
   442  000060                     _efgtoa$1244:
   443                           	callstack 0
   444                           
   445                           ; 2 bytes @ 0x0
   446  000060                     	ds	2
   447  000062                     _efgtoa$1245:
   448                           	callstack 0
   449                           
   450                           ; 2 bytes @ 0x2
   451  000062                     	ds	2
   452  000064                     _efgtoa$1249:
   453                           	callstack 0
   454                           
   455                           ; 2 bytes @ 0x4
   456  000064                     	ds	2
   457  000066                     _efgtoa$1253:
   458                           	callstack 0
   459                           
   460                           ; 2 bytes @ 0x6
   461  000066                     	ds	2
   462  000068                     _efgtoa$1254:
   463                           	callstack 0
   464                           
   465                           ; 2 bytes @ 0x8
   466  000068                     	ds	2
   467  00006A                     _efgtoa$1255:
   468                           	callstack 0
   469                           
   470                           ; 2 bytes @ 0xA
   471  00006A                     	ds	2
   472  00006C                     efgtoa@t:
   473                           	callstack 0
   474                           
   475                           ; 2 bytes @ 0xC
   476  00006C                     	ds	2
   477  00006E                     efgtoa@pp:
   478                           	callstack 0
   479                           
   480                           ; 2 bytes @ 0xE
   481  00006E                     	ds	2
   482  000070                     efgtoa@ne:
   483                           	callstack 0
   484                           
   485                           ; 2 bytes @ 0x10
   486  000070                     	ds	2
   487  000072                     efgtoa@m:
   488                           	callstack 0
   489                           
   490                           ; 2 bytes @ 0x12
   491  000072                     	ds	2
   492  000074                     efgtoa@ou:
   493                           	callstack 0
   494                           
   495                           ; 4 bytes @ 0x14
   496  000074                     	ds	4
   497  000078                     efgtoa@d:
   498                           	callstack 0
   499                           
   500                           ; 2 bytes @ 0x18
   501  000078                     	ds	2
   502  00007A                     efgtoa@sign:
   503                           	callstack 0
   504                           
   505                           ; 2 bytes @ 0x1A
   506  00007A                     	ds	2
   507  00007C                     efgtoa@p:
   508                           	callstack 0
   509                           
   510                           ; 2 bytes @ 0x1C
   511  00007C                     	ds	2
   512  00007E                     efgtoa@w:
   513                           	callstack 0
   514                           
   515                           ; 2 bytes @ 0x1E
   516  00007E                     	ds	2
   517  000080                     efgtoa@nmode:
   518                           	callstack 0
   519                           
   520                           ; 1 bytes @ 0x20
   521  000080                     	ds	1
   522  000081                     efgtoa@mode:
   523                           	callstack 0
   524                           
   525                           ; 1 bytes @ 0x21
   526  000081                     	ds	1
   527  000082                     efgtoa@h:
   528                           	callstack 0
   529                           
   530                           ; 4 bytes @ 0x22
   531  000082                     	ds	4
   532  000086                     efgtoa@l:
   533                           	callstack 0
   534                           
   535                           ; 4 bytes @ 0x26
   536  000086                     	ds	4
   537  00008A                     efgtoa@i:
   538                           	callstack 0
   539                           
   540                           ; 2 bytes @ 0x2A
   541  00008A                     	ds	2
   542  00008C                     efgtoa@g:
   543                           	callstack 0
   544                           
   545                           ; 4 bytes @ 0x2C
   546  00008C                     	ds	4
   547  000090                     efgtoa@e:
   548                           	callstack 0
   549                           
   550                           ; 2 bytes @ 0x30
   551  000090                     	ds	2
   552  000092                     efgtoa@n:
   553                           	callstack 0
   554                           
   555                           ; 2 bytes @ 0x32
   556  000092                     	ds	2
   557  000094                     efgtoa@u:
   558                           	callstack 0
   559                           
   560                           ; 4 bytes @ 0x34
   561  000094                     	ds	4
   562  000098                     vfpfcnvrt@ll:
   563                           	callstack 0
   564                           
   565                           ; 8 bytes @ 0x38
   566  000098                     	ds	8
   567  0000A0                     vfpfcnvrt@vp:
   568                           	callstack 0
   569                           
   570                           ; 2 bytes @ 0x40
   571  0000A0                     	ds	2
   572  0000A2                     _vfpfcnvrt$1269:
   573                           	callstack 0
   574                           
   575                           ; 2 bytes @ 0x42
   576  0000A2                     	ds	2
   577  0000A4                     _vfpfcnvrt$1270:
   578                           	callstack 0
   579                           
   580                           ; 2 bytes @ 0x44
   581  0000A4                     	ds	2
   582  0000A6                     _vfpfcnvrt$1276:
   583                           	callstack 0
   584                           
   585                           ; 2 bytes @ 0x46
   586  0000A6                     	ds	2
   587  0000A8                     vfpfcnvrt@f:
   588                           	callstack 0
   589                           
   590                           ; 4 bytes @ 0x48
   591  0000A8                     	ds	4
   592  0000AC                     vfpfcnvrt@ct:
   593                           	callstack 0
   594                           
   595                           ; 3 bytes @ 0x4C
   596  0000AC                     	ds	3
   597  0000AF                     vfpfcnvrt@c:
   598                           	callstack 0
   599                           
   600                           ; 1 bytes @ 0x4F
   601  0000AF                     	ds	1
   602  0000B0                     ?_sprintf:
   603                           	callstack 0
   604  0000B0                     ?_printf:
   605                           	callstack 0
   606  0000B0                     sprintf@s:
   607                           	callstack 0
   608  0000B0                     printf@fmt:
   609                           	callstack 0
   610                           
   611                           ; 2 bytes @ 0x50
   612  0000B0                     	ds	2
   613  0000B2                     sprintf@fmt:
   614                           	callstack 0
   615                           
   616                           ; 2 bytes @ 0x52
   617  0000B2                     	ds	12
   618  0000BE                     ??_SensorLM35:
   619                           
   620                           ; 1 bytes @ 0x5E
   621  0000BE                     	ds	2
   622                           
   623                           	psect	cstackCOMRAM
   624  000001                     __pcstackCOMRAM:
   625                           	callstack 0
   626  000001                     ??_Set_DATA:
   627  000001                     ??_putch:
   628  000001                     ??_putcm:
   629  000001                     ??_Alarma_LED:
   630  000001                     ?_strlen:
   631                           	callstack 0
   632  000001                     ?___fpclassifyf:
   633                           	callstack 0
   634  000001                     ?_isupper:
   635                           	callstack 0
   636  000001                     ?_isdigit:
   637                           	callstack 0
   638  000001                     ?_strncmp:
   639                           	callstack 0
   640  000001                     ?_isspace:
   641                           	callstack 0
   642  000001                     ?_Read_ADC:
   643                           	callstack 0
   644  000001                     ?_Read_ADC1:
   645                           	callstack 0
   646  000001                     ?___wmul:
   647                           	callstack 0
   648  000001                     ?___awmod:
   649                           	callstack 0
   650  000001                     ?___fladd:
   651                           	callstack 0
   652  000001                     ?___fldiv:
   653                           	callstack 0
   654  000001                     ?___flneg:
   655                           	callstack 0
   656  000001                     ?___fltol:
   657                           	callstack 0
   658  000001                     ?___xxtofl:
   659                           	callstack 0
   660  000001                     ?___aodiv:
   661                           	callstack 0
   662  000001                     ?___aomod:
   663                           	callstack 0
   664  000001                     ___wmul@multiplier:
   665                           	callstack 0
   666  000001                     ___awmod@dividend:
   667                           	callstack 0
   668  000001                     isdigit@c:
   669                           	callstack 0
   670  000001                     isspace@c:
   671                           	callstack 0
   672  000001                     isupper@c:
   673                           	callstack 0
   674  000001                     strcpy@dest:
   675                           	callstack 0
   676  000001                     strlen@s:
   677                           	callstack 0
   678  000001                     strncmp@_l:
   679                           	callstack 0
   680  000001                     ___fleq@ff1:
   681                           	callstack 0
   682  000001                     ___flneg@f1:
   683                           	callstack 0
   684  000001                     ___fltol@f1:
   685                           	callstack 0
   686  000001                     ___fladd@b:
   687                           	callstack 0
   688  000001                     ___fldiv@b:
   689                           	callstack 0
   690  000001                     ___xxtofl@val:
   691                           	callstack 0
   692  000001                     ___fpclassifyf@x:
   693                           	callstack 0
   694  000001                     ___aodiv@dividend:
   695                           	callstack 0
   696  000001                     ___aomod@dividend:
   697                           	callstack 0
   698                           
   699                           ; 8 bytes @ 0x0
   700  000001                     	ds	1
   701  000002                     ??_Get_DATA:
   702  000002                     putch@data:
   703                           	callstack 0
   704  000002                     putcm@data:
   705                           	callstack 0
   706                           
   707                           ; 1 bytes @ 0x1
   708  000002                     	ds	1
   709  000003                     ??_isupper:
   710  000003                     ??_isdigit:
   711  000003                     ??_isspace:
   712  000003                     ??_Read_ADC:
   713  000003                     ??_Read_ADC1:
   714  000003                     Get_DATA@data:
   715                           	callstack 0
   716  000003                     putch@Activa:
   717                           	callstack 0
   718  000003                     putcm@Activa:
   719                           	callstack 0
   720  000003                     Alarma_LED@A:
   721                           	callstack 0
   722  000003                     ___wmul@multiplicand:
   723                           	callstack 0
   724  000003                     ___awmod@divisor:
   725                           	callstack 0
   726  000003                     strcpy@src:
   727                           	callstack 0
   728  000003                     strlen@a:
   729                           	callstack 0
   730  000003                     strncmp@_r:
   731                           	callstack 0
   732                           
   733                           ; 2 bytes @ 0x2
   734  000003                     	ds	1
   735  000004                     ??_InicializaLCD:
   736  000004                     LCD_COMANDOS@comando:
   737                           	callstack 0
   738  000004                     fputc@c:
   739                           	callstack 0
   740                           
   741                           ; 2 bytes @ 0x3
   742  000004                     	ds	1
   743  000005                     ??___fpclassifyf:
   744  000005                     ??_strcpy:
   745  000005                     ??___fltol:
   746  000005                     ??___xxtofl:
   747  000005                     Read_ADC@canal:
   748                           	callstack 0
   749  000005                     Read_ADC1@canal:
   750                           	callstack 0
   751  000005                     ___awmod@counter:
   752                           	callstack 0
   753  000005                     ___wmul@product:
   754                           	callstack 0
   755  000005                     strncmp@n:
   756                           	callstack 0
   757  000005                     ___fleq@ff2:
   758                           	callstack 0
   759  000005                     ___fladd@a:
   760                           	callstack 0
   761  000005                     ___fldiv@a:
   762                           	callstack 0
   763                           
   764                           ; 4 bytes @ 0x4
   765  000005                     	ds	1
   766  000006                     ?___awdiv:
   767                           	callstack 0
   768  000006                     ___awmod@sign:
   769                           	callstack 0
   770  000006                     ___awdiv@dividend:
   771                           	callstack 0
   772  000006                     fputc@fp:
   773                           	callstack 0
   774                           
   775                           ; 2 bytes @ 0x5
   776  000006                     	ds	1
   777  000007                     ??_strncmp:
   778  000007                     ?_tolower:
   779                           	callstack 0
   780  000007                     _isspace$1344:
   781                           	callstack 0
   782  000007                     strcpy@s:
   783                           	callstack 0
   784  000007                     tolower@c:
   785                           	callstack 0
   786                           
   787                           ; 2 bytes @ 0x6
   788  000007                     	ds	1
   789  000008                     ??_fputc:
   790  000008                     ?_atoi:
   791                           	callstack 0
   792  000008                     ___awdiv@divisor:
   793                           	callstack 0
   794  000008                     atoi@s:
   795                           	callstack 0
   796  000008                     strncmp@l:
   797                           	callstack 0
   798                           
   799                           ; 2 bytes @ 0x7
   800  000008                     	ds	1
   801  000009                     ??___fladd:
   802  000009                     ??___fldiv:
   803  000009                     ??_tolower:
   804  000009                     ??___fleq:
   805  000009                     ___fltol@sign1:
   806                           	callstack 0
   807  000009                     ___xxtofl@sign:
   808                           	callstack 0
   809  000009                     ___fpclassifyf@e:
   810                           	callstack 0
   811  000009                     strcpy@d:
   812                           	callstack 0
   813  000009                     ___aodiv@divisor:
   814                           	callstack 0
   815  000009                     ___aomod@divisor:
   816                           	callstack 0
   817                           
   818                           ; 8 bytes @ 0x8
   819  000009                     	ds	1
   820  00000A                     ??_atoi:
   821  00000A                     ___awdiv@counter:
   822                           	callstack 0
   823  00000A                     ___fltol@exp1:
   824                           	callstack 0
   825  00000A                     ___xxtofl@exp:
   826                           	callstack 0
   827  00000A                     strncmp@r:
   828                           	callstack 0
   829                           
   830                           ; 2 bytes @ 0x9
   831  00000A                     	ds	1
   832  00000B                     ___awdiv@sign:
   833                           	callstack 0
   834  00000B                     ___xxtofl@arg:
   835                           	callstack 0
   836  00000B                     ___fpclassifyf@u:
   837                           	callstack 0
   838                           
   839                           ; 4 bytes @ 0xA
   840  00000B                     	ds	1
   841  00000C                     ___awdiv@quotient:
   842                           	callstack 0
   843                           
   844                           ; 2 bytes @ 0xB
   845  00000C                     	ds	1
   846  00000D                     ?_ctoa:
   847                           	callstack 0
   848  00000D                     ___fladd@signs:
   849                           	callstack 0
   850  00000D                     ctoa@fp:
   851                           	callstack 0
   852  00000D                     fputs@s:
   853                           	callstack 0
   854  00000D                     _tolower$1413:
   855                           	callstack 0
   856  00000D                     ___fldiv@rem:
   857                           	callstack 0
   858                           
   859                           ; 4 bytes @ 0xC
   860  00000D                     	ds	1
   861  00000E                     ___fladd@aexp:
   862                           	callstack 0
   863  00000E                     atoi@neg:
   864                           	callstack 0
   865                           
   866                           ; 2 bytes @ 0xD
   867  00000E                     	ds	1
   868  00000F                     ?___flmul:
   869                           	callstack 0
   870  00000F                     ___fladd@bexp:
   871                           	callstack 0
   872  00000F                     ctoa@c:
   873                           	callstack 0
   874  00000F                     fputs@fp:
   875                           	callstack 0
   876  00000F                     ___flmul@b:
   877                           	callstack 0
   878                           
   879                           ; 4 bytes @ 0xE
   880  00000F                     	ds	1
   881  000010                     ??_ctoa:
   882  000010                     ___fladd@grs:
   883                           	callstack 0
   884  000010                     _atoi$1313:
   885                           	callstack 0
   886                           
   887                           ; 2 bytes @ 0xF
   888  000010                     	ds	1
   889  000011                     ___aodiv@counter:
   890                           	callstack 0
   891  000011                     ___aomod@counter:
   892                           	callstack 0
   893  000011                     ___fldiv@sign:
   894                           	callstack 0
   895  000011                     fputs@c:
   896                           	callstack 0
   897  000011                     ctoa@l:
   898                           	callstack 0
   899                           
   900                           ; 2 bytes @ 0x10
   901  000011                     	ds	1
   902  000012                     ___aodiv@sign:
   903                           	callstack 0
   904  000012                     ___aomod@sign:
   905                           	callstack 0
   906  000012                     ___fldiv@new_exp:
   907                           	callstack 0
   908  000012                     _atoi$1315:
   909                           	callstack 0
   910  000012                     fputs@i:
   911                           	callstack 0
   912                           
   913                           ; 2 bytes @ 0x11
   914  000012                     	ds	1
   915  000013                     ?_abs:
   916                           	callstack 0
   917  000013                     ctoa@w:
   918                           	callstack 0
   919  000013                     abs@a:
   920                           	callstack 0
   921  000013                     ___flmul@a:
   922                           	callstack 0
   923  000013                     ___aodiv@quotient:
   924                           	callstack 0
   925                           
   926                           ; 8 bytes @ 0x12
   927  000013                     	ds	1
   928  000014                     ?_pad:
   929                           	callstack 0
   930  000014                     _atoi$1314:
   931                           	callstack 0
   932  000014                     pad@fp:
   933                           	callstack 0
   934  000014                     ___fldiv@grs:
   935                           	callstack 0
   936                           
   937                           ; 4 bytes @ 0x13
   938  000014                     	ds	1
   939  000015                     ??_abs:
   940  000015                     atoi@n:
   941                           	callstack 0
   942                           
   943                           ; 2 bytes @ 0x14
   944  000015                     	ds	1
   945  000016                     pad@buf:
   946                           	callstack 0
   947                           
   948                           ; 2 bytes @ 0x15
   949  000016                     	ds	1
   950  000017                     ??___flmul:
   951                           
   952                           ; 1 bytes @ 0x16
   953  000017                     	ds	1
   954  000018                     ___fldiv@bexp:
   955                           	callstack 0
   956  000018                     pad@p:
   957                           	callstack 0
   958                           
   959                           ; 2 bytes @ 0x17
   960  000018                     	ds	1
   961  000019                     ___fldiv@aexp:
   962                           	callstack 0
   963                           
   964                           ; 1 bytes @ 0x18
   965  000019                     	ds	1
   966  00001A                     ??_pad:
   967  00001A                     ?_floorf:
   968                           	callstack 0
   969  00001A                     floorf@x:
   970                           	callstack 0
   971                           
   972                           ; 4 bytes @ 0x19
   973  00001A                     	ds	1
   974  00001B                     ___flmul@sign:
   975                           	callstack 0
   976  00001B                     pad@i:
   977                           	callstack 0
   978                           
   979                           ; 2 bytes @ 0x1A
   980  00001B                     	ds	1
   981  00001C                     ___flmul@grs:
   982                           	callstack 0
   983                           
   984                           ; 4 bytes @ 0x1B
   985  00001C                     	ds	1
   986  00001D                     pad@w:
   987                           	callstack 0
   988                           
   989                           ; 2 bytes @ 0x1C
   990  00001D                     	ds	1
   991  00001E                     ??_floorf:
   992                           
   993                           ; 1 bytes @ 0x1D
   994  00001E                     	ds	1
   995  00001F                     ?_dtoa:
   996                           	callstack 0
   997  00001F                     dtoa@fp:
   998                           	callstack 0
   999                           
  1000                           ; 2 bytes @ 0x1E
  1001  00001F                     	ds	1
  1002  000020                     ___flmul@aexp:
  1003                           	callstack 0
  1004                           
  1005                           ; 1 bytes @ 0x1F
  1006  000020                     	ds	1
  1007  000021                     ___flmul@bexp:
  1008                           	callstack 0
  1009  000021                     dtoa@d:
  1010                           	callstack 0
  1011                           
  1012                           ; 8 bytes @ 0x20
  1013  000021                     	ds	1
  1014  000022                     ___flmul@prod:
  1015                           	callstack 0
  1016                           
  1017                           ; 4 bytes @ 0x21
  1018  000022                     	ds	2
  1019  000024                     floorf@m:
  1020                           	callstack 0
  1021                           
  1022                           ; 4 bytes @ 0x23
  1023  000024                     	ds	2
  1024  000026                     ___flmul@temp:
  1025                           	callstack 0
  1026                           
  1027                           ; 2 bytes @ 0x25
  1028  000026                     	ds	2
  1029  000028                     ?___flsub:
  1030                           	callstack 0
  1031  000028                     floorf@e:
  1032                           	callstack 0
  1033  000028                     ___flge@ff1:
  1034                           	callstack 0
  1035  000028                     ___flsub@b:
  1036                           	callstack 0
  1037                           
  1038                           ; 4 bytes @ 0x27
  1039  000028                     	ds	1
  1040  000029                     ??_dtoa:
  1041                           
  1042                           ; 1 bytes @ 0x28
  1043  000029                     	ds	1
  1044  00002A                     floorf@u:
  1045                           	callstack 0
  1046                           
  1047                           ; 4 bytes @ 0x29
  1048  00002A                     	ds	2
  1049  00002C                     ___flge@ff2:
  1050                           	callstack 0
  1051  00002C                     ___flsub@a:
  1052                           	callstack 0
  1053                           
  1054                           ; 4 bytes @ 0x2B
  1055  00002C                     	ds	4
  1056  000030                     ??___flge:
  1057                           
  1058                           ; 1 bytes @ 0x2F
  1059  000030                     	ds	1
  1060  000031                     _dtoa$1220:
  1061                           	callstack 0
  1062                           
  1063                           ; 2 bytes @ 0x30
  1064  000031                     	ds	2
  1065  000033                     dtoa@p:
  1066                           	callstack 0
  1067                           
  1068                           ; 2 bytes @ 0x32
  1069  000033                     	ds	1
  1070  000034                     ?_efgtoa:
  1071                           	callstack 0
  1072  000034                     efgtoa@fp:
  1073                           	callstack 0
  1074                           
  1075                           ; 2 bytes @ 0x33
  1076  000034                     	ds	1
  1077  000035                     dtoa@w:
  1078                           	callstack 0
  1079                           
  1080                           ; 2 bytes @ 0x34
  1081  000035                     	ds	1
  1082  000036                     efgtoa@f:
  1083                           	callstack 0
  1084                           
  1085                           ; 4 bytes @ 0x35
  1086  000036                     	ds	1
  1087  000037                     dtoa@s:
  1088                           	callstack 0
  1089                           
  1090                           ; 2 bytes @ 0x36
  1091  000037                     	ds	2
  1092  000039                     dtoa@n:
  1093                           	callstack 0
  1094                           
  1095                           ; 8 bytes @ 0x38
  1096  000039                     	ds	1
  1097  00003A                     efgtoa@c:
  1098                           	callstack 0
  1099                           
  1100                           ; 1 bytes @ 0x39
  1101  00003A                     	ds	1
  1102  00003B                     ??_efgtoa:
  1103                           
  1104                           ; 1 bytes @ 0x3A
  1105  00003B                     	ds	6
  1106  000041                     dtoa@i:
  1107                           	callstack 0
  1108                           
  1109                           ; 2 bytes @ 0x40
  1110  000041                     	ds	2
  1111  000043                     ?_vfpfcnvrt:
  1112                           	callstack 0
  1113  000043                     vfpfcnvrt@fp:
  1114                           	callstack 0
  1115                           
  1116                           ; 2 bytes @ 0x42
  1117  000043                     	ds	2
  1118  000045                     vfpfcnvrt@fmt:
  1119                           	callstack 0
  1120                           
  1121                           ; 2 bytes @ 0x44
  1122  000045                     	ds	2
  1123  000047                     vfpfcnvrt@ap:
  1124                           	callstack 0
  1125                           
  1126                           ; 2 bytes @ 0x46
  1127  000047                     	ds	2
  1128  000049                     ??_vfpfcnvrt:
  1129                           
  1130                           ; 1 bytes @ 0x48
  1131  000049                     	ds	4
  1132  00004D                     ?_vfprintf:
  1133                           	callstack 0
  1134  00004D                     vfprintf@fp:
  1135                           	callstack 0
  1136                           
  1137                           ; 2 bytes @ 0x4C
  1138  00004D                     	ds	2
  1139  00004F                     vfprintf@fmt:
  1140                           	callstack 0
  1141                           
  1142                           ; 2 bytes @ 0x4E
  1143  00004F                     	ds	2
  1144  000051                     vfprintf@ap:
  1145                           	callstack 0
  1146                           
  1147                           ; 2 bytes @ 0x50
  1148  000051                     	ds	2
  1149  000053                     vfprintf@cfmt:
  1150                           	callstack 0
  1151                           
  1152                           ; 2 bytes @ 0x52
  1153  000053                     	ds	2
  1154  000055                     
  1155                           ; 1 bytes @ 0x54
  1156  000055                     	ds	2
  1157  000057                     sprintf@ap:
  1158                           	callstack 0
  1159  000057                     printf@ap:
  1160                           	callstack 0
  1161                           
  1162                           ; 2 bytes @ 0x56
  1163  000057                     	ds	2
  1164  000059                     ??_Cronometro:
  1165  000059                     sprintf@f:
  1166                           	callstack 0
  1167                           
  1168                           ; 6 bytes @ 0x58
  1169  000059                     	ds	2
  1170  00005B                     ??_Alarma:
  1171                           
  1172                           ; 1 bytes @ 0x5A
  1173  00005B                     	ds	4
  1174  00005F                     
  1175                           ; 1 bytes @ 0x5E
  1176 ;;
  1177 ;;Main: autosize = 0, tempsize = 0, incstack = 0, save=0
  1178 ;;
  1179 ;; *************** function _main *****************
  1180 ;; Defined at:
  1181 ;;		line 536 in file "SensorNegPosAprox.c"
  1182 ;; Parameters:    Size  Location     Type
  1183 ;;		None
  1184 ;; Auto vars:     Size  Location     Type
  1185 ;;		None
  1186 ;; Return value:  Size  Location     Type
  1187 ;;                  1    wreg      void 
  1188 ;; Registers used:
  1189 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  1190 ;; Tracked objects:
  1191 ;;		On entry : 0/0
  1192 ;;		On exit  : 0/0
  1193 ;;		Unchanged: 0/0
  1194 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  1195 ;;      Params:         0       0       0       0       0       0       0       0       0
  1196 ;;      Locals:         0       0       0       0       0       0       0       0       0
  1197 ;;      Temps:          0       0       0       0       0       0       0       0       0
  1198 ;;      Totals:         0       0       0       0       0       0       0       0       0
  1199 ;;Total ram usage:        0 bytes
  1200 ;; Hardware stack levels required when called:   11
  1201 ;; This function calls:
  1202 ;;		_Alarma
  1203 ;;		_Alarma_LED
  1204 ;;		_Configuracion
  1205 ;;		_InicializaLCD
  1206 ;;		_LCD_COMANDOS
  1207 ;;		_SensorLM35
  1208 ;;		_Timer0Configuration
  1209 ;; This function is called by:
  1210 ;;		Startup code after reset
  1211 ;; This function uses a non-reentrant model
  1212 ;;
  1213                           
  1214                           	psect	text0
  1215  004A0C                     __ptext0:
  1216                           	callstack 0
  1217  004A0C                     _main:
  1218                           	callstack 20
  1219  004A0C                     
  1220                           ;SensorNegPosAprox.c: 538:  Configuracion();
  1221  004A0C  EC41  F026         	call	_Configuracion	;wreg free
  1222                           
  1223                           ;SensorNegPosAprox.c: 540:     Timer0Configuration();
  1224  004A10  EC8B  F026         	call	_Timer0Configuration	;wreg free
  1225  004A14                     
  1226                           ;SensorNegPosAprox.c: 542:     InicializaLCD();
  1227  004A14  EC3B  F023         	call	_InicializaLCD	;wreg free
  1228  004A18                     
  1229                           ;SensorNegPosAprox.c: 543:     LCD_COMANDOS(1);
  1230  004A18  0E01               	movlw	1
  1231  004A1A  EC98  F026         	call	_LCD_COMANDOS
  1232  004A1E                     
  1233                           ;SensorNegPosAprox.c: 544:     LCD_COMANDOS(12);
  1234  004A1E  0E0C               	movlw	12
  1235  004A20  EC98  F026         	call	_LCD_COMANDOS
  1236  004A24                     
  1237                           ;SensorNegPosAprox.c: 547:     horas = 12;
  1238  004A24  0E00               	movlw	0
  1239  004A26  0100               	movlb	0	; () banked
  1240  004A28  6FF5               	movwf	(_horas+1)& (0+255),b
  1241  004A2A  0E0C               	movlw	12
  1242  004A2C  6FF4               	movwf	_horas& (0+255),b
  1243  004A2E                     
  1244                           ; BSR set to: 0
  1245                           ;SensorNegPosAprox.c: 548:  minutos = 59;
  1246  004A2E  0E00               	movlw	0
  1247  004A30  6FF7               	movwf	(_minutos+1)& (0+255),b
  1248  004A32  0E3B               	movlw	59
  1249  004A34  6FF6               	movwf	_minutos& (0+255),b
  1250  004A36                     
  1251                           ; BSR set to: 0
  1252                           ;SensorNegPosAprox.c: 549:  segundos = 50;
  1253  004A36  0E00               	movlw	0
  1254  004A38  6FF3               	movwf	(_segundos+1)& (0+255),b
  1255  004A3A  0E32               	movlw	50
  1256  004A3C  6FF2               	movwf	_segundos& (0+255),b
  1257  004A3E                     l5093:
  1258                           
  1259                           ;SensorNegPosAprox.c: 552:  {;SensorNegPosAprox.c: 553:         SensorLM35();
  1260  004A3E  ECF6  F014         	call	_SensorLM35	;wreg free
  1261  004A42                     
  1262                           ;SensorNegPosAprox.c: 558:         Alarma();
  1263  004A42  EC01  F018         	call	_Alarma	;wreg free
  1264  004A46                     
  1265                           ;SensorNegPosAprox.c: 560:         Alarma_LED();
  1266  004A46  ECBE  F01E         	call	_Alarma_LED	;wreg free
  1267  004A4A  EF1F  F025         	goto	l5093
  1268  004A4E  EF00  F000         	goto	start
  1269  004A52                     __end_of_main:
  1270                           	callstack 0
  1271                           
  1272 ;; *************** function _Timer0Configuration *****************
  1273 ;; Defined at:
  1274 ;;		line 377 in file "SensorNegPosAprox.c"
  1275 ;; Parameters:    Size  Location     Type
  1276 ;;		None
  1277 ;; Auto vars:     Size  Location     Type
  1278 ;;		None
  1279 ;; Return value:  Size  Location     Type
  1280 ;;                  1    wreg      void 
  1281 ;; Registers used:
  1282 ;;		wreg, status,2
  1283 ;; Tracked objects:
  1284 ;;		On entry : 0/0
  1285 ;;		On exit  : 0/0
  1286 ;;		Unchanged: 0/0
  1287 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  1288 ;;      Params:         0       0       0       0       0       0       0       0       0
  1289 ;;      Locals:         0       0       0       0       0       0       0       0       0
  1290 ;;      Temps:          0       0       0       0       0       0       0       0       0
  1291 ;;      Totals:         0       0       0       0       0       0       0       0       0
  1292 ;;Total ram usage:        0 bytes
  1293 ;; Hardware stack levels used:    1
  1294 ;; This function calls:
  1295 ;;		Nothing
  1296 ;; This function is called by:
  1297 ;;		_main
  1298 ;; This function uses a non-reentrant model
  1299 ;;
  1300                           
  1301                           	psect	text1
  1302  004D16                     __ptext1:
  1303                           	callstack 0
  1304  004D16                     _Timer0Configuration:
  1305                           	callstack 30
  1306  004D16                     
  1307                           ;SensorNegPosAprox.c: 379:     T0CONbits.T08BIT = 1;
  1308  004D16  8CD5               	bsf	213,6,c	;volatile
  1309                           
  1310                           ;SensorNegPosAprox.c: 380:     T0CONbits.T0CS = 1;
  1311  004D18  8AD5               	bsf	213,5,c	;volatile
  1312                           
  1313                           ;SensorNegPosAprox.c: 381:     T0CONbits.T0SE = 0;
  1314  004D1A  98D5               	bcf	213,4,c	;volatile
  1315                           
  1316                           ;SensorNegPosAprox.c: 382:     T0CONbits.PSA = 1;
  1317  004D1C  86D5               	bsf	213,3,c	;volatile
  1318  004D1E                     
  1319                           ;SensorNegPosAprox.c: 383:     T0CONbits.T0PS = 0b000;
  1320  004D1E  0EF8               	movlw	-8
  1321  004D20  16D5               	andwf	213,f,c	;volatile
  1322  004D22                     
  1323                           ;SensorNegPosAprox.c: 385:     TMR0L = 0xFF;
  1324  004D22  68D6               	setf	214,c	;volatile
  1325  004D24                     
  1326                           ;SensorNegPosAprox.c: 386:     T0CONbits.TMR0ON = 1;
  1327  004D24  8ED5               	bsf	213,7,c	;volatile
  1328  004D26                     
  1329                           ;SensorNegPosAprox.c: 389:     INTCONbits.GIE = 1;
  1330  004D26  8EF2               	bsf	242,7,c	;volatile
  1331  004D28                     
  1332                           ;SensorNegPosAprox.c: 390:     INTCONbits.PEIE = 1;
  1333  004D28  8CF2               	bsf	242,6,c	;volatile
  1334  004D2A                     
  1335                           ;SensorNegPosAprox.c: 391:     INTCONbits.TMR0IE = 1;
  1336  004D2A  8AF2               	bsf	242,5,c	;volatile
  1337  004D2C                     
  1338                           ;SensorNegPosAprox.c: 392:     INTCONbits.TMR0IE =0;
  1339  004D2C  9AF2               	bcf	242,5,c	;volatile
  1340  004D2E  0012               	return		;funcret
  1341  004D30                     __end_of_Timer0Configuration:
  1342                           	callstack 0
  1343                           
  1344 ;; *************** function _SensorLM35 *****************
  1345 ;; Defined at:
  1346 ;;		line 316 in file "SensorNegPosAprox.c"
  1347 ;; Parameters:    Size  Location     Type
  1348 ;;		None
  1349 ;; Auto vars:     Size  Location     Type
  1350 ;;		None
  1351 ;; Return value:  Size  Location     Type
  1352 ;;                  1    wreg      void 
  1353 ;; Registers used:
  1354 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  1355 ;; Tracked objects:
  1356 ;;		On entry : 0/0
  1357 ;;		On exit  : 0/0
  1358 ;;		Unchanged: 0/0
  1359 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  1360 ;;      Params:         0       0       0       0       0       0       0       0       0
  1361 ;;      Locals:         0       0       0       0       0       0       0       0       0
  1362 ;;      Temps:          0       2       0       0       0       0       0       0       0
  1363 ;;      Totals:         0       2       0       0       0       0       0       0       0
  1364 ;;Total ram usage:        2 bytes
  1365 ;; Hardware stack levels used:    1
  1366 ;; Hardware stack levels required when called:    8
  1367 ;; This function calls:
  1368 ;;		_Read_ADC
  1369 ;;		_Read_ADC1
  1370 ;;		___awdiv
  1371 ;;		___flge
  1372 ;;		___flmul
  1373 ;;		___flsub
  1374 ;;		___xxtofl
  1375 ;;		_printf
  1376 ;;		_putcm
  1377 ;;		_sprintf
  1378 ;; This function is called by:
  1379 ;;		_main
  1380 ;; This function uses a non-reentrant model
  1381 ;;
  1382                           
  1383                           	psect	text2
  1384  0029EC                     __ptext2:
  1385                           	callstack 0
  1386  0029EC                     _SensorLM35:
  1387                           	callstack 22
  1388  0029EC                     
  1389                           ;SensorNegPosAprox.c: 321:     ADC = Read_ADC(0)/64;
  1390  0029EC  0E00               	movlw	0
  1391  0029EE  ECBA  F023         	call	_Read_ADC
  1392  0029F2  C001  F006         	movff	?_Read_ADC,___awdiv@dividend
  1393  0029F6  C002  F007         	movff	?_Read_ADC+1,___awdiv@dividend+1
  1394  0029FA  0E00               	movlw	0
  1395  0029FC  6E09               	movwf	(___awdiv@divisor+1)^0,c
  1396  0029FE  0E40               	movlw	64
  1397  002A00  6E08               	movwf	___awdiv@divisor^0,c
  1398  002A02  ECE0  F021         	call	___awdiv	;wreg free
  1399  002A06  C006  F0FC         	movff	?___awdiv,_ADC
  1400  002A0A  C007  F0FD         	movff	?___awdiv+1,_ADC+1
  1401                           
  1402                           ;SensorNegPosAprox.c: 322:     ADC1 = Read_ADC1(2)/64;
  1403  002A0E  0E02               	movlw	2
  1404  002A10  ECF1  F023         	call	_Read_ADC1
  1405  002A14  C001  F006         	movff	?_Read_ADC1,___awdiv@dividend
  1406  002A18  C002  F007         	movff	?_Read_ADC1+1,___awdiv@dividend+1
  1407  002A1C  0E00               	movlw	0
  1408  002A1E  6E09               	movwf	(___awdiv@divisor+1)^0,c
  1409  002A20  0E40               	movlw	64
  1410  002A22  6E08               	movwf	___awdiv@divisor^0,c
  1411  002A24  ECE0  F021         	call	___awdiv	;wreg free
  1412  002A28  C006  F0FA         	movff	?___awdiv,_ADC1
  1413  002A2C  C007  F0FB         	movff	?___awdiv+1,_ADC1+1
  1414  002A30                     
  1415                           ;SensorNegPosAprox.c: 324:     R_LM35 = 500.01 / 1024;
  1416  002A30  0E48               	movlw	72
  1417  002A32  0100               	movlb	0	; () banked
  1418  002A34  6FC8               	movwf	_R_LM35& (0+255),b
  1419  002A36  0E01               	movlw	1
  1420  002A38  6FC9               	movwf	(_R_LM35+1)& (0+255),b
  1421  002A3A  0EFA               	movlw	250
  1422  002A3C  6FCA               	movwf	(_R_LM35+2)& (0+255),b
  1423  002A3E  0E3E               	movlw	62
  1424  002A40  6FCB               	movwf	(_R_LM35+3)& (0+255),b
  1425  002A42                     
  1426                           ; BSR set to: 0
  1427                           ;SensorNegPosAprox.c: 329:     VoltajeA = ADC*R_LM35;
  1428  002A42  C0FC  F001         	movff	_ADC,___xxtofl@val
  1429  002A46  C0FD  F002         	movff	_ADC+1,___xxtofl@val+1
  1430  002A4A  0E00               	movlw	0
  1431  002A4C  BE02               	btfsc	(___xxtofl@val+1)^0,7,c
  1432  002A4E  0EFF               	movlw	-1
  1433  002A50  6E03               	movwf	(___xxtofl@val+2)^0,c
  1434  002A52  6E04               	movwf	(___xxtofl@val+3)^0,c
  1435  002A54  0E01               	movlw	1
  1436  002A56  EC41  F01B         	call	___xxtofl
  1437  002A5A  C001  F00F         	movff	?___xxtofl,___flmul@b
  1438  002A5E  C002  F010         	movff	?___xxtofl+1,___flmul@b+1
  1439  002A62  C003  F011         	movff	?___xxtofl+2,___flmul@b+2
  1440  002A66  C004  F012         	movff	?___xxtofl+3,___flmul@b+3
  1441  002A6A  C0C8  F013         	movff	_R_LM35,___flmul@a
  1442  002A6E  C0C9  F014         	movff	_R_LM35+1,___flmul@a+1
  1443  002A72  C0CA  F015         	movff	_R_LM35+2,___flmul@a+2
  1444  002A76  C0CB  F016         	movff	_R_LM35+3,___flmul@a+3
  1445  002A7A  EC14  F011         	call	___flmul	;wreg free
  1446  002A7E  C00F  F0C4         	movff	?___flmul,_VoltajeA
  1447  002A82  C010  F0C5         	movff	?___flmul+1,_VoltajeA+1
  1448  002A86  C011  F0C6         	movff	?___flmul+2,_VoltajeA+2
  1449  002A8A  C012  F0C7         	movff	?___flmul+3,_VoltajeA+3
  1450  002A8E                     
  1451                           ;SensorNegPosAprox.c: 330:     VoltajeB = ADC1*R_LM35;
  1452  002A8E  C0FA  F001         	movff	_ADC1,___xxtofl@val
  1453  002A92  C0FB  F002         	movff	_ADC1+1,___xxtofl@val+1
  1454  002A96  0E00               	movlw	0
  1455  002A98  BE02               	btfsc	(___xxtofl@val+1)^0,7,c
  1456  002A9A  0EFF               	movlw	-1
  1457  002A9C  6E03               	movwf	(___xxtofl@val+2)^0,c
  1458  002A9E  6E04               	movwf	(___xxtofl@val+3)^0,c
  1459  002AA0  0E01               	movlw	1
  1460  002AA2  EC41  F01B         	call	___xxtofl
  1461  002AA6  C001  F00F         	movff	?___xxtofl,___flmul@b
  1462  002AAA  C002  F010         	movff	?___xxtofl+1,___flmul@b+1
  1463  002AAE  C003  F011         	movff	?___xxtofl+2,___flmul@b+2
  1464  002AB2  C004  F012         	movff	?___xxtofl+3,___flmul@b+3
  1465  002AB6  C0C8  F013         	movff	_R_LM35,___flmul@a
  1466  002ABA  C0C9  F014         	movff	_R_LM35+1,___flmul@a+1
  1467  002ABE  C0CA  F015         	movff	_R_LM35+2,___flmul@a+2
  1468  002AC2  C0CB  F016         	movff	_R_LM35+3,___flmul@a+3
  1469  002AC6  EC14  F011         	call	___flmul	;wreg free
  1470  002ACA  C00F  F108         	movff	?___flmul,_VoltajeB
  1471  002ACE  C010  F109         	movff	?___flmul+1,_VoltajeB+1
  1472  002AD2  C011  F10A         	movff	?___flmul+2,_VoltajeB+2
  1473  002AD6  C012  F10B         	movff	?___flmul+3,_VoltajeB+3
  1474  002ADA                     
  1475                           ;SensorNegPosAprox.c: 331:     temperatura = VoltajeA - VoltajeB;
  1476  002ADA  C0C4  F028         	movff	_VoltajeA,___flsub@b
  1477  002ADE  C0C5  F029         	movff	_VoltajeA+1,___flsub@b+1
  1478  002AE2  C0C6  F02A         	movff	_VoltajeA+2,___flsub@b+2
  1479  002AE6  C0C7  F02B         	movff	_VoltajeA+3,___flsub@b+3
  1480  002AEA  C108  F02C         	movff	_VoltajeB,___flsub@a
  1481  002AEE  C109  F02D         	movff	_VoltajeB+1,___flsub@a+1
  1482  002AF2  C10A  F02E         	movff	_VoltajeB+2,___flsub@a+2
  1483  002AF6  C10B  F02F         	movff	_VoltajeB+3,___flsub@a+3
  1484  002AFA  EC29  F025         	call	___flsub	;wreg free
  1485  002AFE  C028  F0C0         	movff	?___flsub,_temperatura
  1486  002B02  C029  F0C1         	movff	?___flsub+1,_temperatura+1
  1487  002B06  C02A  F0C2         	movff	?___flsub+2,_temperatura+2
  1488  002B0A  C02B  F0C3         	movff	?___flsub+3,_temperatura+3
  1489  002B0E                     
  1490                           ;SensorNegPosAprox.c: 333:     if(temperatura > 99)
  1491  002B0E  0E00               	movlw	0
  1492  002B10  6E28               	movwf	___flge@ff1^0,c
  1493  002B12  0E00               	movlw	0
  1494  002B14  6E29               	movwf	(___flge@ff1+1)^0,c
  1495  002B16  0EC6               	movlw	198
  1496  002B18  6E2A               	movwf	(___flge@ff1+2)^0,c
  1497  002B1A  0E42               	movlw	66
  1498  002B1C  6E2B               	movwf	(___flge@ff1+3)^0,c
  1499  002B1E  C0C0  F02C         	movff	_temperatura,___flge@ff2
  1500  002B22  C0C1  F02D         	movff	_temperatura+1,___flge@ff2+1
  1501  002B26  C0C2  F02E         	movff	_temperatura+2,___flge@ff2+2
  1502  002B2A  C0C3  F02F         	movff	_temperatura+3,___flge@ff2+3
  1503  002B2E  EC40  F01F         	call	___flge	;wreg free
  1504  002B32  B0D8               	btfsc	status,0,c
  1505  002B34  EF9E  F015         	goto	u6431
  1506  002B38  EFA0  F015         	goto	u6430
  1507  002B3C                     u6431:
  1508  002B3C  EFDD  F015         	goto	l4935
  1509  002B40                     u6430:
  1510  002B40                     
  1511                           ;SensorNegPosAprox.c: 334:     {;SensorNegPosAprox.c: 335:         putcm(0x80);
  1512  002B40  0E80               	movlw	128
  1513  002B42  EC91  F025         	call	_putcm
  1514  002B46                     
  1515                           ;SensorNegPosAprox.c: 336:         sprintf(Valores, " T = %3.4f %cC",temperatura, 0xDF);
  1516  002B46  0E60               	movlw	low _Valores
  1517  002B48  0100               	movlb	0	; () banked
  1518  002B4A  6FB0               	movwf	sprintf@s& (0+255),b
  1519  002B4C  0E01               	movlw	high _Valores
  1520  002B4E  6FB1               	movwf	(sprintf@s+1)& (0+255),b
  1521  002B50  0E67               	movlw	low STR_1
  1522  002B52  6FB2               	movwf	sprintf@fmt& (0+255),b
  1523  002B54  0E08               	movlw	high STR_1
  1524  002B56  6FB3               	movwf	(sprintf@fmt+1)& (0+255),b
  1525  002B58  C0C0  F0B4         	movff	_temperatura,?_sprintf+4
  1526  002B5C  C0C1  F0B5         	movff	_temperatura+1,?_sprintf+5
  1527  002B60  C0C2  F0B6         	movff	_temperatura+2,?_sprintf+6
  1528  002B64  C0C3  F0B7         	movff	_temperatura+3,?_sprintf+7
  1529  002B68  0E00               	movlw	0
  1530  002B6A  6FB9               	movwf	(?_sprintf+9)& (0+255),b
  1531  002B6C  0EDF               	movlw	223
  1532  002B6E  6FB8               	movwf	(?_sprintf+8)& (0+255),b
  1533  002B70  ECDE  F024         	call	_sprintf	;wreg free
  1534  002B74                     l4929:
  1535                           
  1536                           ;SensorNegPosAprox.c: 337:         _delay((unsigned long)((100)*(8000000/4000.0)));
  1537  002B74  0E02               	movlw	2
  1538  002B76  0100               	movlb	0	; () banked
  1539  002B78  6FBF               	movwf	(??_SensorLM35+1)& (0+255),b
  1540  002B7A  0E04               	movlw	4
  1541  002B7C  6FBE               	movwf	??_SensorLM35& (0+255),b
  1542  002B7E  0EBA               	movlw	186
  1543  002B80                     u6617:
  1544  002B80  2EE8               	decfsz	wreg,f,c
  1545  002B82  D7FE               	bra	u6617
  1546  002B84  2FBE               	decfsz	??_SensorLM35& (0+255),f,b
  1547  002B86  D7FC               	bra	u6617
  1548  002B88  2FBF               	decfsz	(??_SensorLM35+1)& (0+255),f,b
  1549  002B8A  D7FA               	bra	u6617
  1550  002B8C  F000               	nop	
  1551  002B8E                     
  1552                           ;SensorNegPosAprox.c: 338:         printf(Valores);
  1553  002B8E  0E60               	movlw	low _Valores
  1554  002B90  0100               	movlb	0	; () banked
  1555  002B92  6FB0               	movwf	printf@fmt& (0+255),b
  1556  002B94  0E01               	movlw	high _Valores
  1557  002B96  6FB1               	movwf	(printf@fmt+1)& (0+255),b
  1558  002B98  EC54  F026         	call	_printf	;wreg free
  1559  002B9C                     
  1560                           ;SensorNegPosAprox.c: 339:         _delay((unsigned long)((100)*(8000000/4000.0)));
  1561  002B9C  0E02               	movlw	2
  1562  002B9E  0100               	movlb	0	; () banked
  1563  002BA0  6FBF               	movwf	(??_SensorLM35+1)& (0+255),b
  1564  002BA2  0E04               	movlw	4
  1565  002BA4  6FBE               	movwf	??_SensorLM35& (0+255),b
  1566  002BA6  0EBA               	movlw	186
  1567  002BA8                     u6627:
  1568  002BA8  2EE8               	decfsz	wreg,f,c
  1569  002BAA  D7FE               	bra	u6627
  1570  002BAC  2FBE               	decfsz	??_SensorLM35& (0+255),f,b
  1571  002BAE  D7FC               	bra	u6627
  1572  002BB0  2FBF               	decfsz	(??_SensorLM35+1)& (0+255),f,b
  1573  002BB2  D7FA               	bra	u6627
  1574  002BB4  F000               	nop	
  1575                           
  1576                           ;SensorNegPosAprox.c: 340:     }
  1577  002BB6  EF2E  F016         	goto	l151
  1578  002BBA                     l4935:
  1579  002BBA  C0C0  F028         	movff	_temperatura,___flge@ff1
  1580  002BBE  C0C1  F029         	movff	_temperatura+1,___flge@ff1+1
  1581  002BC2  C0C2  F02A         	movff	_temperatura+2,___flge@ff1+2
  1582  002BC6  C0C3  F02B         	movff	_temperatura+3,___flge@ff1+3
  1583  002BCA  0E00               	movlw	0
  1584  002BCC  6E2C               	movwf	___flge@ff2^0,c
  1585  002BCE  0E00               	movlw	0
  1586  002BD0  6E2D               	movwf	(___flge@ff2+1)^0,c
  1587  002BD2  0E20               	movlw	32
  1588  002BD4  6E2E               	movwf	(___flge@ff2+2)^0,c
  1589  002BD6  0E41               	movlw	65
  1590  002BD8  6E2F               	movwf	(___flge@ff2+3)^0,c
  1591  002BDA  EC40  F01F         	call	___flge	;wreg free
  1592  002BDE  B0D8               	btfsc	status,0,c
  1593  002BE0  EFF4  F015         	goto	u6441
  1594  002BE4  EFF6  F015         	goto	u6440
  1595  002BE8                     u6441:
  1596  002BE8  EF12  F016         	goto	l4947
  1597  002BEC                     u6440:
  1598  002BEC                     
  1599                           ;SensorNegPosAprox.c: 342:     {;SensorNegPosAprox.c: 343:         putcm(0x80);
  1600  002BEC  0E80               	movlw	128
  1601  002BEE  EC91  F025         	call	_putcm
  1602  002BF2                     
  1603                           ;SensorNegPosAprox.c: 344:         sprintf(Valores, " T = %1.4f %cC",temperatura, 0xDF);
  1604  002BF2  0E60               	movlw	low _Valores
  1605  002BF4  0100               	movlb	0	; () banked
  1606  002BF6  6FB0               	movwf	sprintf@s& (0+255),b
  1607  002BF8  0E01               	movlw	high _Valores
  1608  002BFA  6FB1               	movwf	(sprintf@s+1)& (0+255),b
  1609  002BFC  0E49               	movlw	low STR_2
  1610  002BFE  6FB2               	movwf	sprintf@fmt& (0+255),b
  1611  002C00  0E08               	movlw	high STR_2
  1612  002C02  6FB3               	movwf	(sprintf@fmt+1)& (0+255),b
  1613  002C04  C0C0  F0B4         	movff	_temperatura,?_sprintf+4
  1614  002C08  C0C1  F0B5         	movff	_temperatura+1,?_sprintf+5
  1615  002C0C  C0C2  F0B6         	movff	_temperatura+2,?_sprintf+6
  1616  002C10  C0C3  F0B7         	movff	_temperatura+3,?_sprintf+7
  1617  002C14  0E00               	movlw	0
  1618  002C16  6FB9               	movwf	(?_sprintf+9)& (0+255),b
  1619  002C18  0EDF               	movlw	223
  1620  002C1A  6FB8               	movwf	(?_sprintf+8)& (0+255),b
  1621  002C1C  ECDE  F024         	call	_sprintf	;wreg free
  1622  002C20  EFBA  F015         	goto	l4929
  1623  002C24                     l4947:
  1624                           
  1625                           ;SensorNegPosAprox.c: 350:     {;SensorNegPosAprox.c: 351:         putcm(0x80);
  1626  002C24  0E80               	movlw	128
  1627  002C26  EC91  F025         	call	_putcm
  1628  002C2A                     
  1629                           ;SensorNegPosAprox.c: 352:         sprintf(Valores, " T = %2.4f %cC",temperatura, 0xDF);
  1630  002C2A  0E60               	movlw	low _Valores
  1631  002C2C  0100               	movlb	0	; () banked
  1632  002C2E  6FB0               	movwf	sprintf@s& (0+255),b
  1633  002C30  0E01               	movlw	high _Valores
  1634  002C32  6FB1               	movwf	(sprintf@s+1)& (0+255),b
  1635  002C34  0E58               	movlw	low STR_3
  1636  002C36  6FB2               	movwf	sprintf@fmt& (0+255),b
  1637  002C38  0E08               	movlw	high STR_3
  1638  002C3A  6FB3               	movwf	(sprintf@fmt+1)& (0+255),b
  1639  002C3C  C0C0  F0B4         	movff	_temperatura,?_sprintf+4
  1640  002C40  C0C1  F0B5         	movff	_temperatura+1,?_sprintf+5
  1641  002C44  C0C2  F0B6         	movff	_temperatura+2,?_sprintf+6
  1642  002C48  C0C3  F0B7         	movff	_temperatura+3,?_sprintf+7
  1643  002C4C  0E00               	movlw	0
  1644  002C4E  6FB9               	movwf	(?_sprintf+9)& (0+255),b
  1645  002C50  0EDF               	movlw	223
  1646  002C52  6FB8               	movwf	(?_sprintf+8)& (0+255),b
  1647  002C54  ECDE  F024         	call	_sprintf	;wreg free
  1648  002C58  EFBA  F015         	goto	l4929
  1649  002C5C                     l151:
  1650                           
  1651                           ;SensorNegPosAprox.c: 359:     if(temperatura >= 150)
  1652  002C5C  C0C0  F028         	movff	_temperatura,___flge@ff1
  1653  002C60  C0C1  F029         	movff	_temperatura+1,___flge@ff1+1
  1654  002C64  C0C2  F02A         	movff	_temperatura+2,___flge@ff1+2
  1655  002C68  C0C3  F02B         	movff	_temperatura+3,___flge@ff1+3
  1656  002C6C  0E00               	movlw	0
  1657  002C6E  6E2C               	movwf	___flge@ff2^0,c
  1658  002C70  0E00               	movlw	0
  1659  002C72  6E2D               	movwf	(___flge@ff2+1)^0,c
  1660  002C74  0E16               	movlw	22
  1661  002C76  6E2E               	movwf	(___flge@ff2+2)^0,c
  1662  002C78  0E43               	movlw	67
  1663  002C7A  6E2F               	movwf	(___flge@ff2+3)^0,c
  1664  002C7C  EC40  F01F         	call	___flge	;wreg free
  1665  002C80  A0D8               	btfss	status,0,c
  1666  002C82  EF45  F016         	goto	u6451
  1667  002C86  EF47  F016         	goto	u6450
  1668  002C8A                     u6451:
  1669  002C8A  EF5E  F016         	goto	l4963
  1670  002C8E                     u6450:
  1671  002C8E                     
  1672                           ;SensorNegPosAprox.c: 360:     {;SensorNegPosAprox.c: 361:         putcm(0x80);
  1673  002C8E  0E80               	movlw	128
  1674  002C90  EC91  F025         	call	_putcm
  1675  002C94                     
  1676                           ;SensorNegPosAprox.c: 362:         printf(" Calor Extremo! ");
  1677  002C94  0E38               	movlw	low STR_4
  1678  002C96  0100               	movlb	0	; () banked
  1679  002C98  6FB0               	movwf	printf@fmt& (0+255),b
  1680  002C9A  0E08               	movlw	high STR_4
  1681  002C9C  6FB1               	movwf	(printf@fmt+1)& (0+255),b
  1682  002C9E  EC54  F026         	call	_printf	;wreg free
  1683  002CA2                     
  1684                           ;SensorNegPosAprox.c: 363:         _delay((unsigned long)((1000)*(8000000/4000.0)));
  1685  002CA2  0E0B               	movlw	11
  1686  002CA4  0100               	movlb	0	; () banked
  1687  002CA6  6FBF               	movwf	(??_SensorLM35+1)& (0+255),b
  1688  002CA8  0E26               	movlw	38
  1689  002CAA  6FBE               	movwf	??_SensorLM35& (0+255),b
  1690  002CAC  0E5D               	movlw	93
  1691  002CAE                     u6637:
  1692  002CAE  2EE8               	decfsz	wreg,f,c
  1693  002CB0  D7FE               	bra	u6637
  1694  002CB2  2FBE               	decfsz	??_SensorLM35& (0+255),f,b
  1695  002CB4  D7FC               	bra	u6637
  1696  002CB6  2FBF               	decfsz	(??_SensorLM35+1)& (0+255),f,b
  1697  002CB8  D7FA               	bra	u6637
  1698  002CBA  D000               	nop2	
  1699  002CBC                     l4963:
  1700                           
  1701                           ;SensorNegPosAprox.c: 365:     if(temperatura <= -54)
  1702  002CBC  0E00               	movlw	0
  1703  002CBE  6E28               	movwf	___flge@ff1^0,c
  1704  002CC0  0E00               	movlw	0
  1705  002CC2  6E29               	movwf	(___flge@ff1+1)^0,c
  1706  002CC4  0E58               	movlw	88
  1707  002CC6  6E2A               	movwf	(___flge@ff1+2)^0,c
  1708  002CC8  0EC2               	movlw	194
  1709  002CCA  6E2B               	movwf	(___flge@ff1+3)^0,c
  1710  002CCC  C0C0  F02C         	movff	_temperatura,___flge@ff2
  1711  002CD0  C0C1  F02D         	movff	_temperatura+1,___flge@ff2+1
  1712  002CD4  C0C2  F02E         	movff	_temperatura+2,___flge@ff2+2
  1713  002CD8  C0C3  F02F         	movff	_temperatura+3,___flge@ff2+3
  1714  002CDC  EC40  F01F         	call	___flge	;wreg free
  1715  002CE0  A0D8               	btfss	status,0,c
  1716  002CE2  EF75  F016         	goto	u6461
  1717  002CE6  EF77  F016         	goto	u6460
  1718  002CEA                     u6461:
  1719  002CEA  EF8E  F016         	goto	l156
  1720  002CEE                     u6460:
  1721  002CEE                     
  1722                           ;SensorNegPosAprox.c: 366:     {;SensorNegPosAprox.c: 367:         putcm(0x80);
  1723  002CEE  0E80               	movlw	128
  1724  002CF0  EC91  F025         	call	_putcm
  1725  002CF4                     
  1726                           ;SensorNegPosAprox.c: 368:         printf("  Frio Extremo! ");
  1727  002CF4  0E27               	movlw	low STR_5
  1728  002CF6  0100               	movlb	0	; () banked
  1729  002CF8  6FB0               	movwf	printf@fmt& (0+255),b
  1730  002CFA  0E08               	movlw	high STR_5
  1731  002CFC  6FB1               	movwf	(printf@fmt+1)& (0+255),b
  1732  002CFE  EC54  F026         	call	_printf	;wreg free
  1733  002D02                     
  1734                           ;SensorNegPosAprox.c: 369:         _delay((unsigned long)((1000)*(8000000/4000.0)));
  1735  002D02  0E0B               	movlw	11
  1736  002D04  0100               	movlb	0	; () banked
  1737  002D06  6FBF               	movwf	(??_SensorLM35+1)& (0+255),b
  1738  002D08  0E26               	movlw	38
  1739  002D0A  6FBE               	movwf	??_SensorLM35& (0+255),b
  1740  002D0C  0E5D               	movlw	93
  1741  002D0E                     u6647:
  1742  002D0E  2EE8               	decfsz	wreg,f,c
  1743  002D10  D7FE               	bra	u6647
  1744  002D12  2FBE               	decfsz	??_SensorLM35& (0+255),f,b
  1745  002D14  D7FC               	bra	u6647
  1746  002D16  2FBF               	decfsz	(??_SensorLM35+1)& (0+255),f,b
  1747  002D18  D7FA               	bra	u6647
  1748  002D1A  D000               	nop2	
  1749  002D1C                     l156:
  1750  002D1C  0012               	return		;funcret
  1751  002D1E                     __end_of_SensorLM35:
  1752                           	callstack 0
  1753                           
  1754 ;; *************** function _sprintf *****************
  1755 ;; Defined at:
  1756 ;;		line 9 in file "/Applications/microchip/xc8/v2.31/pic/sources/c99/common/nf_sprintf.c"
  1757 ;; Parameters:    Size  Location     Type
  1758 ;;  s               2   80[BANK0 ] PTR unsigned char 
  1759 ;;		 -> Valores(16), 
  1760 ;;  fmt             2   82[BANK0 ] PTR const unsigned char 
  1761 ;;		 -> STR_3(15), STR_2(15), STR_1(15), 
  1762 ;; Auto vars:     Size  Location     Type
  1763 ;;  f               6   88[COMRAM] struct _IO_FILE
  1764 ;;  ap              2   86[COMRAM] PTR void [1]
  1765 ;;		 -> ?_printf(2), ?_sprintf(2), 
  1766 ;;  ret             2    0        int 
  1767 ;; Return value:  Size  Location     Type
  1768 ;;                  2   80[BANK0 ] int 
  1769 ;; Registers used:
  1770 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  1771 ;; Tracked objects:
  1772 ;;		On entry : 0/0
  1773 ;;		On exit  : 0/0
  1774 ;;		Unchanged: 0/0
  1775 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  1776 ;;      Params:         0      10       0       0       0       0       0       0       0
  1777 ;;      Locals:        10       0       0       0       0       0       0       0       0
  1778 ;;      Temps:          0       0       0       0       0       0       0       0       0
  1779 ;;      Totals:        10      10       0       0       0       0       0       0       0
  1780 ;;Total ram usage:       20 bytes
  1781 ;; Hardware stack levels used:    1
  1782 ;; Hardware stack levels required when called:    7
  1783 ;; This function calls:
  1784 ;;		_vfprintf
  1785 ;; This function is called by:
  1786 ;;		_SensorLM35
  1787 ;; This function uses a non-reentrant model
  1788 ;;
  1789                           
  1790                           	psect	text3
  1791  0049BC                     __ptext3:
  1792                           	callstack 0
  1793  0049BC                     _sprintf:
  1794                           	callstack 22
  1795  0049BC  0EB4               	movlw	low (?_sprintf+4)
  1796  0049BE  6E57               	movwf	sprintf@ap^0,c
  1797  0049C0  0E00               	movlw	high (?_sprintf+4)
  1798  0049C2  6E58               	movwf	(sprintf@ap+1)^0,c
  1799  0049C4  C0B0  F059         	movff	sprintf@s,sprintf@f
  1800  0049C8  C0B1  F05A         	movff	sprintf@s+1,sprintf@f+1
  1801  0049CC  0E00               	movlw	0
  1802  0049CE  6E5C               	movwf	(sprintf@f+3)^0,c
  1803  0049D0  0E00               	movlw	0
  1804  0049D2  6E5B               	movwf	(sprintf@f+2)^0,c
  1805  0049D4  0E00               	movlw	0
  1806  0049D6  6E5E               	movwf	(sprintf@f+5)^0,c
  1807  0049D8  0E00               	movlw	0
  1808  0049DA  6E5D               	movwf	(sprintf@f+4)^0,c
  1809  0049DC  0E59               	movlw	low sprintf@f
  1810  0049DE  6E4D               	movwf	vfprintf@fp^0,c
  1811  0049E0  0E00               	movlw	high sprintf@f
  1812  0049E2  6E4E               	movwf	(vfprintf@fp+1)^0,c
  1813  0049E4  C0B2  F04F         	movff	sprintf@fmt,vfprintf@fmt
  1814  0049E8  C0B3  F050         	movff	sprintf@fmt+1,vfprintf@fmt+1
  1815  0049EC  0E57               	movlw	low sprintf@ap
  1816  0049EE  6E51               	movwf	vfprintf@ap^0,c
  1817  0049F0  0E00               	movlw	high sprintf@ap
  1818  0049F2  6E52               	movwf	(vfprintf@ap+1)^0,c
  1819  0049F4  EC7F  F023         	call	_vfprintf	;wreg free
  1820  0049F8  505B               	movf	(sprintf@f+2)^0,w,c
  1821  0049FA  0100               	movlb	0	; () banked
  1822  0049FC  25B0               	addwf	sprintf@s& (0+255),w,b
  1823  0049FE  6ED9               	movwf	fsr2l,c
  1824  004A00  505C               	movf	(sprintf@f+3)^0,w,c
  1825  004A02  21B1               	addwfc	(sprintf@s+1)& (0+255),w,b
  1826  004A04  6EDA               	movwf	fsr2h,c
  1827  004A06  0E00               	movlw	0
  1828  004A08  6EDF               	movwf	indf2,c
  1829  004A0A                     
  1830                           ; BSR set to: 0
  1831  004A0A  0012               	return		;funcret
  1832  004A0C                     __end_of_sprintf:
  1833                           	callstack 0
  1834                           
  1835 ;; *************** function ___xxtofl *****************
  1836 ;; Defined at:
  1837 ;;		line 10 in file "/Applications/microchip/xc8/v2.31/pic/sources/c99/common/xxtofl.c"
  1838 ;; Parameters:    Size  Location     Type
  1839 ;;  sign            1    wreg     unsigned char 
  1840 ;;  val             4    0[COMRAM] long 
  1841 ;; Auto vars:     Size  Location     Type
  1842 ;;  sign            1    8[COMRAM] unsigned char 
  1843 ;;  arg             4   10[COMRAM] unsigned long 
  1844 ;;  exp             1    9[COMRAM] unsigned char 
  1845 ;; Return value:  Size  Location     Type
  1846 ;;                  4    0[COMRAM] unsigned char 
  1847 ;; Registers used:
  1848 ;;		wreg, status,2, status,0
  1849 ;; Tracked objects:
  1850 ;;		On entry : 0/0
  1851 ;;		On exit  : 0/0
  1852 ;;		Unchanged: 0/0
  1853 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  1854 ;;      Params:         4       0       0       0       0       0       0       0       0
  1855 ;;      Locals:         6       0       0       0       0       0       0       0       0
  1856 ;;      Temps:          4       0       0       0       0       0       0       0       0
  1857 ;;      Totals:        14       0       0       0       0       0       0       0       0
  1858 ;;Total ram usage:       14 bytes
  1859 ;; Hardware stack levels used:    1
  1860 ;; This function calls:
  1861 ;;		Nothing
  1862 ;; This function is called by:
  1863 ;;		_SensorLM35
  1864 ;; This function uses a non-reentrant model
  1865 ;;
  1866                           
  1867                           	psect	text4
  1868  003682                     __ptext4:
  1869                           	callstack 0
  1870  003682                     ___xxtofl:
  1871                           	callstack 29
  1872                           
  1873                           ; BSR set to: 0
  1874                           ;incstack = 0
  1875                           ;___xxtofl@sign stored from wreg
  1876  003682  6E09               	movwf	___xxtofl@sign^0,c
  1877  003684  5009               	movf	___xxtofl@sign^0,w,c
  1878  003686  B4D8               	btfsc	status,2,c
  1879  003688  EF48  F01B         	goto	u6331
  1880  00368C  EF4A  F01B         	goto	u6330
  1881  003690                     u6331:
  1882  003690  EF6C  F01B         	goto	l858
  1883  003694                     u6330:
  1884  003694  BE04               	btfsc	(___xxtofl@val+3)^0,7,c
  1885  003696  EF51  F01B         	goto	u6340
  1886  00369A  EF4F  F01B         	goto	u6341
  1887  00369E                     u6341:
  1888  00369E  EF6C  F01B         	goto	l858
  1889  0036A2                     u6340:
  1890  0036A2  C001  F005         	movff	___xxtofl@val,??___xxtofl
  1891  0036A6  C002  F006         	movff	___xxtofl@val+1,??___xxtofl+1
  1892  0036AA  C003  F007         	movff	___xxtofl@val+2,??___xxtofl+2
  1893  0036AE  C004  F008         	movff	___xxtofl@val+3,??___xxtofl+3
  1894  0036B2  1E05               	comf	??___xxtofl^0,f,c
  1895  0036B4  1E06               	comf	(??___xxtofl+1)^0,f,c
  1896  0036B6  1E07               	comf	(??___xxtofl+2)^0,f,c
  1897  0036B8  1E08               	comf	(??___xxtofl+3)^0,f,c
  1898  0036BA  2A05               	incf	??___xxtofl^0,f,c
  1899  0036BC  0E00               	movlw	0
  1900  0036BE  2206               	addwfc	(??___xxtofl+1)^0,f,c
  1901  0036C0  2207               	addwfc	(??___xxtofl+2)^0,f,c
  1902  0036C2  2208               	addwfc	(??___xxtofl+3)^0,f,c
  1903  0036C4  C005  F00B         	movff	??___xxtofl,___xxtofl@arg
  1904  0036C8  C006  F00C         	movff	??___xxtofl+1,___xxtofl@arg+1
  1905  0036CC  C007  F00D         	movff	??___xxtofl+2,___xxtofl@arg+2
  1906  0036D0  C008  F00E         	movff	??___xxtofl+3,___xxtofl@arg+3
  1907  0036D4  EF74  F01B         	goto	l4833
  1908  0036D8                     l858:
  1909  0036D8  C001  F00B         	movff	___xxtofl@val,___xxtofl@arg
  1910  0036DC  C002  F00C         	movff	___xxtofl@val+1,___xxtofl@arg+1
  1911  0036E0  C003  F00D         	movff	___xxtofl@val+2,___xxtofl@arg+2
  1912  0036E4  C004  F00E         	movff	___xxtofl@val+3,___xxtofl@arg+3
  1913  0036E8                     l4833:
  1914  0036E8  5001               	movf	___xxtofl@val^0,w,c
  1915  0036EA  1002               	iorwf	(___xxtofl@val+1)^0,w,c
  1916  0036EC  1003               	iorwf	(___xxtofl@val+2)^0,w,c
  1917  0036EE  1004               	iorwf	(___xxtofl@val+3)^0,w,c
  1918  0036F0  A4D8               	btfss	status,2,c
  1919  0036F2  EF7D  F01B         	goto	u6351
  1920  0036F6  EF7F  F01B         	goto	u6350
  1921  0036FA                     u6351:
  1922  0036FA  EF89  F01B         	goto	l4839
  1923  0036FE                     u6350:
  1924  0036FE  0E00               	movlw	0
  1925  003700  6E01               	movwf	?___xxtofl^0,c
  1926  003702  0E00               	movlw	0
  1927  003704  6E02               	movwf	(?___xxtofl+1)^0,c
  1928  003706  0E00               	movlw	0
  1929  003708  6E03               	movwf	(?___xxtofl+2)^0,c
  1930  00370A  0E00               	movlw	0
  1931  00370C  6E04               	movwf	(?___xxtofl+3)^0,c
  1932  00370E  EF1A  F01C         	goto	l861
  1933  003712                     l4839:
  1934  003712  0E96               	movlw	150
  1935  003714  6E0A               	movwf	___xxtofl@exp^0,c
  1936  003716  EF93  F01B         	goto	l4843
  1937  00371A                     l4841:
  1938  00371A  2A0A               	incf	___xxtofl@exp^0,f,c
  1939  00371C  90D8               	bcf	status,0,c
  1940  00371E  320E               	rrcf	(___xxtofl@arg+3)^0,f,c
  1941  003720  320D               	rrcf	(___xxtofl@arg+2)^0,f,c
  1942  003722  320C               	rrcf	(___xxtofl@arg+1)^0,f,c
  1943  003724  320B               	rrcf	___xxtofl@arg^0,f,c
  1944  003726                     l4843:
  1945  003726  0E00               	movlw	0
  1946  003728  140B               	andwf	___xxtofl@arg^0,w,c
  1947  00372A  6E05               	movwf	??___xxtofl^0,c
  1948  00372C  0E00               	movlw	0
  1949  00372E  140C               	andwf	(___xxtofl@arg+1)^0,w,c
  1950  003730  6E06               	movwf	(??___xxtofl+1)^0,c
  1951  003732  0E00               	movlw	0
  1952  003734  140D               	andwf	(___xxtofl@arg+2)^0,w,c
  1953  003736  6E07               	movwf	(??___xxtofl+2)^0,c
  1954  003738  0EFE               	movlw	254
  1955  00373A  140E               	andwf	(___xxtofl@arg+3)^0,w,c
  1956  00373C  6E08               	movwf	(??___xxtofl+3)^0,c
  1957  00373E  5005               	movf	??___xxtofl^0,w,c
  1958  003740  1006               	iorwf	(??___xxtofl+1)^0,w,c
  1959  003742  1007               	iorwf	(??___xxtofl+2)^0,w,c
  1960  003744  1008               	iorwf	(??___xxtofl+3)^0,w,c
  1961  003746  A4D8               	btfss	status,2,c
  1962  003748  EFA8  F01B         	goto	u6361
  1963  00374C  EFAA  F01B         	goto	u6360
  1964  003750                     u6361:
  1965  003750  EF8D  F01B         	goto	l4841
  1966  003754                     u6360:
  1967  003754  EFB8  F01B         	goto	l865
  1968  003758                     l4845:
  1969  003758  2A0A               	incf	___xxtofl@exp^0,f,c
  1970  00375A  0E01               	movlw	1
  1971  00375C  260B               	addwf	___xxtofl@arg^0,f,c
  1972  00375E  0E00               	movlw	0
  1973  003760  220C               	addwfc	(___xxtofl@arg+1)^0,f,c
  1974  003762  220D               	addwfc	(___xxtofl@arg+2)^0,f,c
  1975  003764  220E               	addwfc	(___xxtofl@arg+3)^0,f,c
  1976  003766  90D8               	bcf	status,0,c
  1977  003768  320E               	rrcf	(___xxtofl@arg+3)^0,f,c
  1978  00376A  320D               	rrcf	(___xxtofl@arg+2)^0,f,c
  1979  00376C  320C               	rrcf	(___xxtofl@arg+1)^0,f,c
  1980  00376E  320B               	rrcf	___xxtofl@arg^0,f,c
  1981  003770                     l865:
  1982  003770  0E00               	movlw	0
  1983  003772  140B               	andwf	___xxtofl@arg^0,w,c
  1984  003774  6E05               	movwf	??___xxtofl^0,c
  1985  003776  0E00               	movlw	0
  1986  003778  140C               	andwf	(___xxtofl@arg+1)^0,w,c
  1987  00377A  6E06               	movwf	(??___xxtofl+1)^0,c
  1988  00377C  0E00               	movlw	0
  1989  00377E  140D               	andwf	(___xxtofl@arg+2)^0,w,c
  1990  003780  6E07               	movwf	(??___xxtofl+2)^0,c
  1991  003782  0EFF               	movlw	255
  1992  003784  140E               	andwf	(___xxtofl@arg+3)^0,w,c
  1993  003786  6E08               	movwf	(??___xxtofl+3)^0,c
  1994  003788  5005               	movf	??___xxtofl^0,w,c
  1995  00378A  1006               	iorwf	(??___xxtofl+1)^0,w,c
  1996  00378C  1007               	iorwf	(??___xxtofl+2)^0,w,c
  1997  00378E  1008               	iorwf	(??___xxtofl+3)^0,w,c
  1998  003790  A4D8               	btfss	status,2,c
  1999  003792  EFCD  F01B         	goto	u6371
  2000  003796  EFCF  F01B         	goto	u6370
  2001  00379A                     u6371:
  2002  00379A  EFAC  F01B         	goto	l4845
  2003  00379E                     u6370:
  2004  00379E  EFD7  F01B         	goto	l4853
  2005  0037A2                     l4851:
  2006  0037A2  060A               	decf	___xxtofl@exp^0,f,c
  2007  0037A4  90D8               	bcf	status,0,c
  2008  0037A6  360B               	rlcf	___xxtofl@arg^0,f,c
  2009  0037A8  360C               	rlcf	(___xxtofl@arg+1)^0,f,c
  2010  0037AA  360D               	rlcf	(___xxtofl@arg+2)^0,f,c
  2011  0037AC  360E               	rlcf	(___xxtofl@arg+3)^0,f,c
  2012  0037AE                     l4853:
  2013  0037AE  BE0D               	btfsc	(___xxtofl@arg+2)^0,7,c
  2014  0037B0  EFDC  F01B         	goto	u6381
  2015  0037B4  EFDE  F01B         	goto	u6380
  2016  0037B8                     u6381:
  2017  0037B8  EFE6  F01B         	goto	l872
  2018  0037BC                     u6380:
  2019  0037BC  0E02               	movlw	2
  2020  0037BE  600A               	cpfslt	___xxtofl@exp^0,c
  2021  0037C0  EFE4  F01B         	goto	u6391
  2022  0037C4  EFE6  F01B         	goto	u6390
  2023  0037C8                     u6391:
  2024  0037C8  EFD1  F01B         	goto	l4851
  2025  0037CC                     u6390:
  2026  0037CC                     l872:
  2027  0037CC  B00A               	btfsc	___xxtofl@exp^0,0,c
  2028  0037CE  EFEB  F01B         	goto	u6401
  2029  0037D2  EFED  F01B         	goto	u6400
  2030  0037D6                     u6401:
  2031  0037D6  EFEE  F01B         	goto	l4859
  2032  0037DA                     u6400:
  2033  0037DA  9E0D               	bcf	(___xxtofl@arg+2)^0,7,c
  2034  0037DC                     l4859:
  2035  0037DC  90D8               	bcf	status,0,c
  2036  0037DE  320A               	rrcf	___xxtofl@exp^0,f,c
  2037  0037E0  C00A  F005         	movff	___xxtofl@exp,??___xxtofl
  2038  0037E4  6A06               	clrf	(??___xxtofl+1)^0,c
  2039  0037E6  6A07               	clrf	(??___xxtofl+2)^0,c
  2040  0037E8  6A08               	clrf	(??___xxtofl+3)^0,c
  2041  0037EA  C005  F008         	movff	??___xxtofl,??___xxtofl+3
  2042  0037EE  6A07               	clrf	(??___xxtofl+2)^0,c
  2043  0037F0  6A06               	clrf	(??___xxtofl+1)^0,c
  2044  0037F2  6A05               	clrf	??___xxtofl^0,c
  2045  0037F4  5005               	movf	??___xxtofl^0,w,c
  2046  0037F6  120B               	iorwf	___xxtofl@arg^0,f,c
  2047  0037F8  5006               	movf	(??___xxtofl+1)^0,w,c
  2048  0037FA  120C               	iorwf	(___xxtofl@arg+1)^0,f,c
  2049  0037FC  5007               	movf	(??___xxtofl+2)^0,w,c
  2050  0037FE  120D               	iorwf	(___xxtofl@arg+2)^0,f,c
  2051  003800  5008               	movf	(??___xxtofl+3)^0,w,c
  2052  003802  120E               	iorwf	(___xxtofl@arg+3)^0,f,c
  2053  003804  5009               	movf	___xxtofl@sign^0,w,c
  2054  003806  B4D8               	btfsc	status,2,c
  2055  003808  EF08  F01C         	goto	u6411
  2056  00380C  EF0A  F01C         	goto	u6410
  2057  003810                     u6411:
  2058  003810  EF12  F01C         	goto	l4869
  2059  003814                     u6410:
  2060  003814  BE04               	btfsc	(___xxtofl@val+3)^0,7,c
  2061  003816  EF11  F01C         	goto	u6420
  2062  00381A  EF0F  F01C         	goto	u6421
  2063  00381E                     u6421:
  2064  00381E  EF12  F01C         	goto	l4869
  2065  003822                     u6420:
  2066  003822  8E0E               	bsf	(___xxtofl@arg+3)^0,7,c
  2067  003824                     l4869:
  2068  003824  C00B  F001         	movff	___xxtofl@arg,?___xxtofl
  2069  003828  C00C  F002         	movff	___xxtofl@arg+1,?___xxtofl+1
  2070  00382C  C00D  F003         	movff	___xxtofl@arg+2,?___xxtofl+2
  2071  003830  C00E  F004         	movff	___xxtofl@arg+3,?___xxtofl+3
  2072  003834                     l861:
  2073  003834  0012               	return		;funcret
  2074  003836                     __end_of___xxtofl:
  2075                           	callstack 0
  2076                           
  2077 ;; *************** function _Read_ADC1 *****************
  2078 ;; Defined at:
  2079 ;;		line 153 in file "SensorNegPosAprox.c"
  2080 ;; Parameters:    Size  Location     Type
  2081 ;;  canal           1    wreg     unsigned char 
  2082 ;; Auto vars:     Size  Location     Type
  2083 ;;  canal           1    4[COMRAM] unsigned char 
  2084 ;; Return value:  Size  Location     Type
  2085 ;;                  2    0[COMRAM] short 
  2086 ;; Registers used:
  2087 ;;		wreg, status,2, status,0
  2088 ;; Tracked objects:
  2089 ;;		On entry : 0/0
  2090 ;;		On exit  : 0/0
  2091 ;;		Unchanged: 0/0
  2092 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  2093 ;;      Params:         2       0       0       0       0       0       0       0       0
  2094 ;;      Locals:         1       0       0       0       0       0       0       0       0
  2095 ;;      Temps:          2       0       0       0       0       0       0       0       0
  2096 ;;      Totals:         5       0       0       0       0       0       0       0       0
  2097 ;;Total ram usage:        5 bytes
  2098 ;; Hardware stack levels used:    1
  2099 ;; This function calls:
  2100 ;;		Nothing
  2101 ;; This function is called by:
  2102 ;;		_SensorLM35
  2103 ;; This function uses a non-reentrant model
  2104 ;;
  2105                           
  2106                           	psect	text5
  2107  0047E2                     __ptext5:
  2108                           	callstack 0
  2109  0047E2                     _Read_ADC1:
  2110                           	callstack 29
  2111                           
  2112                           ;incstack = 0
  2113                           ;Read_ADC1@canal stored from wreg
  2114  0047E2  6E05               	movwf	Read_ADC1@canal^0,c
  2115  0047E4                     
  2116                           ;SensorNegPosAprox.c: 153: short Read_ADC1(char canal);SensorNegPosAprox.c: 154: {;Senso
      +                          rNegPosAprox.c: 156:     ADCON1bits.PVCFG = 0b00;
  2117  0047E4  0EF3               	movlw	-13
  2118  0047E6  16C1               	andwf	193,f,c	;volatile
  2119                           
  2120                           ;SensorNegPosAprox.c: 157:     ADCON1bits.NVCFG = 0b00;
  2121  0047E8  0EFC               	movlw	-4
  2122  0047EA  16C1               	andwf	193,f,c	;volatile
  2123                           
  2124                           ;SensorNegPosAprox.c: 159:  ADCON0bits.CHS = 0b00010;
  2125  0047EC  50C2               	movf	194,w,c	;volatile
  2126  0047EE  0B83               	andlw	-125
  2127  0047F0  0908               	iorlw	8
  2128  0047F2  6EC2               	movwf	194,c	;volatile
  2129                           
  2130                           ;SensorNegPosAprox.c: 161:  switch(canal)
  2131  0047F4  EF00  F024         	goto	l4763
  2132  0047F8                     l4759:
  2133                           
  2134                           ;SensorNegPosAprox.c: 164:             ADCON0 = 0b00001010;
  2135  0047F8  0E0A               	movlw	10
  2136  0047FA  6EC2               	movwf	194,c	;volatile
  2137                           
  2138                           ;SensorNegPosAprox.c: 169:             break;
  2139  0047FC  EF11  F024         	goto	l4765
  2140  004800                     l4763:
  2141  004800  5005               	movf	Read_ADC1@canal^0,w,c
  2142  004802  6E03               	movwf	??_Read_ADC1^0,c
  2143  004804  6A04               	clrf	(??_Read_ADC1+1)^0,c
  2144                           
  2145                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  2146                           ; Switch size 1, requested type "simple"
  2147                           ; Number of cases is 1, Range of values is 0 to 0
  2148                           ; switch strategies available:
  2149                           ; Name         Instructions Cycles
  2150                           ; simple_byte            4     3 (average)
  2151                           ;	Chosen strategy is simple_byte
  2152  004806  5004               	movf	(??_Read_ADC1+1)^0,w,c
  2153  004808  0A00               	xorlw	0	; case 0
  2154  00480A  B4D8               	btfsc	status,2,c
  2155  00480C  EF0A  F024         	goto	l5159
  2156  004810  EF11  F024         	goto	l4765
  2157  004814                     l5159:
  2158                           
  2159                           ; Switch size 1, requested type "simple"
  2160                           ; Number of cases is 1, Range of values is 0 to 0
  2161                           ; switch strategies available:
  2162                           ; Name         Instructions Cycles
  2163                           ; simple_byte            4     3 (average)
  2164                           ;	Chosen strategy is simple_byte
  2165  004814  5003               	movf	??_Read_ADC1^0,w,c
  2166  004816  0A00               	xorlw	0	; case 0
  2167  004818  B4D8               	btfsc	status,2,c
  2168  00481A  EFFC  F023         	goto	l4759
  2169  00481E  EF11  F024         	goto	l4765
  2170  004822                     l4765:
  2171                           
  2172                           ;SensorNegPosAprox.c: 175:  ADCON2 = 0b00100001;
  2173  004822  0E21               	movlw	33
  2174  004824  6EC0               	movwf	192,c	;volatile
  2175  004826                     
  2176                           ;SensorNegPosAprox.c: 181:  ADCON0bits.ADON = 1;
  2177  004826  80C2               	bsf	194,0,c	;volatile
  2178  004828                     
  2179                           ;SensorNegPosAprox.c: 183:     ADCON0bits.GO = 1;
  2180  004828  82C2               	bsf	194,1,c	;volatile
  2181  00482A                     l123:
  2182  00482A  B2C2               	btfsc	194,1,c	;volatile
  2183  00482C  EF1A  F024         	goto	u6281
  2184  004830  EF1C  F024         	goto	u6280
  2185  004834                     u6281:
  2186  004834  EF15  F024         	goto	l123
  2187  004838                     u6280:
  2188  004838                     
  2189                           ;SensorNegPosAprox.c: 186:     return ADRESL + ADRESH*256;
  2190  004838  50C4               	movf	196,w,c	;volatile
  2191  00483A  6E04               	movwf	(??_Read_ADC1+1)^0,c
  2192  00483C  6A03               	clrf	??_Read_ADC1^0,c
  2193  00483E  50C3               	movf	195,w,c	;volatile
  2194  004840  2403               	addwf	??_Read_ADC1^0,w,c
  2195  004842  6E01               	movwf	?_Read_ADC1^0,c
  2196  004844  0E00               	movlw	0
  2197  004846  2004               	addwfc	(??_Read_ADC1+1)^0,w,c
  2198  004848  6E02               	movwf	(?_Read_ADC1+1)^0,c
  2199  00484A  0012               	return		;funcret
  2200  00484C                     __end_of_Read_ADC1:
  2201                           	callstack 0
  2202                           
  2203 ;; *************** function _Read_ADC *****************
  2204 ;; Defined at:
  2205 ;;		line 110 in file "SensorNegPosAprox.c"
  2206 ;; Parameters:    Size  Location     Type
  2207 ;;  canal           1    wreg     unsigned char 
  2208 ;; Auto vars:     Size  Location     Type
  2209 ;;  canal           1    4[COMRAM] unsigned char 
  2210 ;; Return value:  Size  Location     Type
  2211 ;;                  2    0[COMRAM] short 
  2212 ;; Registers used:
  2213 ;;		wreg, status,2, status,0
  2214 ;; Tracked objects:
  2215 ;;		On entry : 0/0
  2216 ;;		On exit  : 0/0
  2217 ;;		Unchanged: 0/0
  2218 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  2219 ;;      Params:         2       0       0       0       0       0       0       0       0
  2220 ;;      Locals:         1       0       0       0       0       0       0       0       0
  2221 ;;      Temps:          2       0       0       0       0       0       0       0       0
  2222 ;;      Totals:         5       0       0       0       0       0       0       0       0
  2223 ;;Total ram usage:        5 bytes
  2224 ;; Hardware stack levels used:    1
  2225 ;; This function calls:
  2226 ;;		Nothing
  2227 ;; This function is called by:
  2228 ;;		_SensorLM35
  2229 ;; This function uses a non-reentrant model
  2230 ;;
  2231                           
  2232                           	psect	text6
  2233  004774                     __ptext6:
  2234                           	callstack 0
  2235  004774                     _Read_ADC:
  2236                           	callstack 29
  2237                           
  2238                           ;incstack = 0
  2239                           ;Read_ADC@canal stored from wreg
  2240  004774  6E05               	movwf	Read_ADC@canal^0,c
  2241  004776                     
  2242                           ;SensorNegPosAprox.c: 110: short Read_ADC(char canal);SensorNegPosAprox.c: 111: {;Sensor
      +                          NegPosAprox.c: 113:     ADCON1bits.PVCFG = 0b00;
  2243  004776  0EF3               	movlw	-13
  2244  004778  16C1               	andwf	193,f,c	;volatile
  2245                           
  2246                           ;SensorNegPosAprox.c: 114:     ADCON1bits.NVCFG = 0b00;
  2247  00477A  0EFC               	movlw	-4
  2248  00477C  16C1               	andwf	193,f,c	;volatile
  2249                           
  2250                           ;SensorNegPosAprox.c: 116:  ADCON0bits.CHS = 0b00000;
  2251  00477E  0E83               	movlw	-125
  2252  004780  16C2               	andwf	194,f,c	;volatile
  2253                           
  2254                           ;SensorNegPosAprox.c: 117:  ADCON0bits.CHS = 0b00010;
  2255  004782  50C2               	movf	194,w,c	;volatile
  2256  004784  0B83               	andlw	-125
  2257  004786  0908               	iorlw	8
  2258  004788  6EC2               	movwf	194,c	;volatile
  2259                           
  2260                           ;SensorNegPosAprox.c: 119:  switch(canal)
  2261  00478A  EFCB  F023         	goto	l4741
  2262  00478E                     l4737:
  2263                           
  2264                           ;SensorNegPosAprox.c: 122:             ADCON0 = 0b00000010;
  2265  00478E  0E02               	movlw	2
  2266  004790  6EC2               	movwf	194,c	;volatile
  2267                           
  2268                           ;SensorNegPosAprox.c: 127:             break;
  2269  004792  EFDC  F023         	goto	l4743
  2270  004796                     l4741:
  2271  004796  5005               	movf	Read_ADC@canal^0,w,c
  2272  004798  6E03               	movwf	??_Read_ADC^0,c
  2273  00479A  6A04               	clrf	(??_Read_ADC+1)^0,c
  2274                           
  2275                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  2276                           ; Switch size 1, requested type "simple"
  2277                           ; Number of cases is 1, Range of values is 0 to 0
  2278                           ; switch strategies available:
  2279                           ; Name         Instructions Cycles
  2280                           ; simple_byte            4     3 (average)
  2281                           ;	Chosen strategy is simple_byte
  2282  00479C  5004               	movf	(??_Read_ADC+1)^0,w,c
  2283  00479E  0A00               	xorlw	0	; case 0
  2284  0047A0  B4D8               	btfsc	status,2,c
  2285  0047A2  EFD5  F023         	goto	l5161
  2286  0047A6  EFDC  F023         	goto	l4743
  2287  0047AA                     l5161:
  2288                           
  2289                           ; Switch size 1, requested type "simple"
  2290                           ; Number of cases is 1, Range of values is 0 to 0
  2291                           ; switch strategies available:
  2292                           ; Name         Instructions Cycles
  2293                           ; simple_byte            4     3 (average)
  2294                           ;	Chosen strategy is simple_byte
  2295  0047AA  5003               	movf	??_Read_ADC^0,w,c
  2296  0047AC  0A00               	xorlw	0	; case 0
  2297  0047AE  B4D8               	btfsc	status,2,c
  2298  0047B0  EFC7  F023         	goto	l4737
  2299  0047B4  EFDC  F023         	goto	l4743
  2300  0047B8                     l4743:
  2301                           
  2302                           ;SensorNegPosAprox.c: 133:  ADCON2 = 0b00100001;
  2303  0047B8  0E21               	movlw	33
  2304  0047BA  6EC0               	movwf	192,c	;volatile
  2305  0047BC                     
  2306                           ;SensorNegPosAprox.c: 139:  ADCON0bits.ADON = 1;
  2307  0047BC  80C2               	bsf	194,0,c	;volatile
  2308  0047BE                     
  2309                           ;SensorNegPosAprox.c: 141:     ADCON0bits.GO = 1;
  2310  0047BE  82C2               	bsf	194,1,c	;volatile
  2311  0047C0                     l114:
  2312  0047C0  B2C2               	btfsc	194,1,c	;volatile
  2313  0047C2  EFE5  F023         	goto	u6271
  2314  0047C6  EFE7  F023         	goto	u6270
  2315  0047CA                     u6271:
  2316  0047CA  EFE0  F023         	goto	l114
  2317  0047CE                     u6270:
  2318  0047CE                     
  2319                           ;SensorNegPosAprox.c: 144:     return ADRESL + ADRESH*256;
  2320  0047CE  50C4               	movf	196,w,c	;volatile
  2321  0047D0  6E04               	movwf	(??_Read_ADC+1)^0,c
  2322  0047D2  6A03               	clrf	??_Read_ADC^0,c
  2323  0047D4  50C3               	movf	195,w,c	;volatile
  2324  0047D6  2403               	addwf	??_Read_ADC^0,w,c
  2325  0047D8  6E01               	movwf	?_Read_ADC^0,c
  2326  0047DA  0E00               	movlw	0
  2327  0047DC  2004               	addwfc	(??_Read_ADC+1)^0,w,c
  2328  0047DE  6E02               	movwf	(?_Read_ADC+1)^0,c
  2329  0047E0  0012               	return		;funcret
  2330  0047E2                     __end_of_Read_ADC:
  2331                           	callstack 0
  2332                           
  2333 ;; *************** function _LCD_COMANDOS *****************
  2334 ;; Defined at:
  2335 ;;		line 253 in file "SensorNegPosAprox.c"
  2336 ;; Parameters:    Size  Location     Type
  2337 ;;  comando         1    wreg     unsigned char 
  2338 ;; Auto vars:     Size  Location     Type
  2339 ;;  comando         1    3[COMRAM] unsigned char 
  2340 ;; Return value:  Size  Location     Type
  2341 ;;                  1    wreg      void 
  2342 ;; Registers used:
  2343 ;;		wreg, status,2, status,0, cstack
  2344 ;; Tracked objects:
  2345 ;;		On entry : 0/0
  2346 ;;		On exit  : 0/0
  2347 ;;		Unchanged: 0/0
  2348 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  2349 ;;      Params:         0       0       0       0       0       0       0       0       0
  2350 ;;      Locals:         1       0       0       0       0       0       0       0       0
  2351 ;;      Temps:          0       0       0       0       0       0       0       0       0
  2352 ;;      Totals:         1       0       0       0       0       0       0       0       0
  2353 ;;Total ram usage:        1 bytes
  2354 ;; Hardware stack levels used:    1
  2355 ;; Hardware stack levels required when called:    2
  2356 ;; This function calls:
  2357 ;;		_Get_DATA
  2358 ;; This function is called by:
  2359 ;;		_main
  2360 ;; This function uses a non-reentrant model
  2361 ;;
  2362                           
  2363                           	psect	text7
  2364  004D30                     __ptext7:
  2365                           	callstack 0
  2366  004D30                     _LCD_COMANDOS:
  2367                           	callstack 28
  2368                           
  2369                           ;incstack = 0
  2370                           ;LCD_COMANDOS@comando stored from wreg
  2371  004D30  6E04               	movwf	LCD_COMANDOS@comando^0,c
  2372  004D32                     
  2373                           ;SensorNegPosAprox.c: 253: void LCD_COMANDOS(char comando);SensorNegPosAprox.c: 254: {;S
      +                          ensorNegPosAprox.c: 255:     LATDbits.LD0 = 0;
  2374  004D32  908C               	bcf	140,0,c	;volatile
  2375  004D34                     
  2376                           ;SensorNegPosAprox.c: 256:     Get_DATA((comando >> 4)&0b00001111);
  2377  004D34  3804               	swapf	LCD_COMANDOS@comando^0,w,c
  2378  004D36  0B0F               	andlw	15
  2379  004D38  0B0F               	andlw	15
  2380  004D3A  EC26  F024         	call	_Get_DATA
  2381                           
  2382                           ;SensorNegPosAprox.c: 257:     Get_DATA((comando)&0b00001111);
  2383  004D3E  5004               	movf	LCD_COMANDOS@comando^0,w,c
  2384  004D40  0B0F               	andlw	15
  2385  004D42  EC26  F024         	call	_Get_DATA
  2386  004D46  0012               	return		;funcret
  2387  004D48                     __end_of_LCD_COMANDOS:
  2388                           	callstack 0
  2389                           
  2390 ;; *************** function _Get_DATA *****************
  2391 ;; Defined at:
  2392 ;;		line 241 in file "SensorNegPosAprox.c"
  2393 ;; Parameters:    Size  Location     Type
  2394 ;;  data            1    wreg     unsigned char 
  2395 ;; Auto vars:     Size  Location     Type
  2396 ;;  data            1    2[COMRAM] unsigned char 
  2397 ;; Return value:  Size  Location     Type
  2398 ;;                  1    wreg      void 
  2399 ;; Registers used:
  2400 ;;		wreg, status,2, status,0, cstack
  2401 ;; Tracked objects:
  2402 ;;		On entry : 0/0
  2403 ;;		On exit  : 0/0
  2404 ;;		Unchanged: 0/0
  2405 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  2406 ;;      Params:         0       0       0       0       0       0       0       0       0
  2407 ;;      Locals:         1       0       0       0       0       0       0       0       0
  2408 ;;      Temps:          1       0       0       0       0       0       0       0       0
  2409 ;;      Totals:         2       0       0       0       0       0       0       0       0
  2410 ;;Total ram usage:        2 bytes
  2411 ;; Hardware stack levels used:    1
  2412 ;; Hardware stack levels required when called:    1
  2413 ;; This function calls:
  2414 ;;		_Set_DATA
  2415 ;; This function is called by:
  2416 ;;		_LCD_COMANDOS
  2417 ;; This function uses a non-reentrant model
  2418 ;;
  2419                           
  2420                           	psect	text8
  2421  00484C                     __ptext8:
  2422                           	callstack 0
  2423  00484C                     _Get_DATA:
  2424                           	callstack 28
  2425                           
  2426                           ;incstack = 0
  2427                           ;Get_DATA@data stored from wreg
  2428  00484C  6E03               	movwf	Get_DATA@data^0,c
  2429  00484E                     
  2430                           ;SensorNegPosAprox.c: 241: void Get_DATA(char data);SensorNegPosAprox.c: 242: {;SensorNe
      +                          gPosAprox.c: 243:     LATDbits.LD4 = data;
  2431  00484E  B003               	btfsc	Get_DATA@data^0,0,c
  2432  004850  D002               	bra	u6295
  2433  004852  988C               	bcf	140,4,c	;volatile
  2434  004854  D001               	bra	u6296
  2435  004856                     u6295:
  2436  004856  888C               	bsf	140,4,c	;volatile
  2437  004858                     u6296:
  2438  004858                     
  2439                           ;SensorNegPosAprox.c: 244:     LATDbits.LD5 = data >> 1;
  2440  004858  C003  F002         	movff	Get_DATA@data,??_Get_DATA
  2441  00485C  90D8               	bcf	status,0,c
  2442  00485E  3202               	rrcf	??_Get_DATA^0,f,c
  2443  004860  3A02               	swapf	??_Get_DATA^0,f,c
  2444  004862  4602               	rlncf	??_Get_DATA^0,f,c
  2445  004864  508C               	movf	140,w,c	;volatile
  2446  004866  1802               	xorwf	??_Get_DATA^0,w,c
  2447  004868  0BDF               	andlw	-33
  2448  00486A  1802               	xorwf	??_Get_DATA^0,w,c
  2449  00486C  6E8C               	movwf	140,c	;volatile
  2450  00486E                     
  2451                           ;SensorNegPosAprox.c: 245:     LATDbits.LD6 = data >> 2;
  2452  00486E  C003  F002         	movff	Get_DATA@data,??_Get_DATA
  2453  004872  90D8               	bcf	status,0,c
  2454  004874  3202               	rrcf	??_Get_DATA^0,f,c
  2455  004876  90D8               	bcf	status,0,c
  2456  004878  3202               	rrcf	??_Get_DATA^0,f,c
  2457  00487A  3A02               	swapf	??_Get_DATA^0,f,c
  2458  00487C  4602               	rlncf	??_Get_DATA^0,f,c
  2459  00487E  4602               	rlncf	??_Get_DATA^0,f,c
  2460  004880  508C               	movf	140,w,c	;volatile
  2461  004882  1802               	xorwf	??_Get_DATA^0,w,c
  2462  004884  0BBF               	andlw	-65
  2463  004886  1802               	xorwf	??_Get_DATA^0,w,c
  2464  004888  6E8C               	movwf	140,c	;volatile
  2465  00488A                     
  2466                           ;SensorNegPosAprox.c: 246:     LATDbits.LD7 = data >> 3;
  2467  00488A  C003  F002         	movff	Get_DATA@data,??_Get_DATA
  2468  00488E  90D8               	bcf	status,0,c
  2469  004890  3202               	rrcf	??_Get_DATA^0,f,c
  2470  004892  90D8               	bcf	status,0,c
  2471  004894  3202               	rrcf	??_Get_DATA^0,f,c
  2472  004896  90D8               	bcf	status,0,c
  2473  004898  3202               	rrcf	??_Get_DATA^0,f,c
  2474  00489A  3202               	rrcf	??_Get_DATA^0,f,c
  2475  00489C  3202               	rrcf	??_Get_DATA^0,f,c
  2476  00489E  508C               	movf	140,w,c	;volatile
  2477  0048A0  1802               	xorwf	??_Get_DATA^0,w,c
  2478  0048A2  0B7F               	andlw	-129
  2479  0048A4  1802               	xorwf	??_Get_DATA^0,w,c
  2480  0048A6  6E8C               	movwf	140,c	;volatile
  2481  0048A8                     
  2482                           ;SensorNegPosAprox.c: 248:     Set_DATA();
  2483  0048A8  ECA4  F026         	call	_Set_DATA	;wreg free
  2484  0048AC  0012               	return		;funcret
  2485  0048AE                     __end_of_Get_DATA:
  2486                           	callstack 0
  2487                           
  2488 ;; *************** function _Set_DATA *****************
  2489 ;; Defined at:
  2490 ;;		line 231 in file "SensorNegPosAprox.c"
  2491 ;; Parameters:    Size  Location     Type
  2492 ;;		None
  2493 ;; Auto vars:     Size  Location     Type
  2494 ;;		None
  2495 ;; Return value:  Size  Location     Type
  2496 ;;                  1    wreg      void 
  2497 ;; Registers used:
  2498 ;;		wreg
  2499 ;; Tracked objects:
  2500 ;;		On entry : 0/0
  2501 ;;		On exit  : 0/0
  2502 ;;		Unchanged: 0/0
  2503 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  2504 ;;      Params:         0       0       0       0       0       0       0       0       0
  2505 ;;      Locals:         0       0       0       0       0       0       0       0       0
  2506 ;;      Temps:          1       0       0       0       0       0       0       0       0
  2507 ;;      Totals:         1       0       0       0       0       0       0       0       0
  2508 ;;Total ram usage:        1 bytes
  2509 ;; Hardware stack levels used:    1
  2510 ;; This function calls:
  2511 ;;		Nothing
  2512 ;; This function is called by:
  2513 ;;		_Get_DATA
  2514 ;; This function uses a non-reentrant model
  2515 ;;
  2516                           
  2517                           	psect	text9
  2518  004D48                     __ptext9:
  2519                           	callstack 0
  2520  004D48                     _Set_DATA:
  2521                           	callstack 28
  2522  004D48                     
  2523                           ;SensorNegPosAprox.c: 233:     LATDbits.LD2 = 1;
  2524  004D48  848C               	bsf	140,2,c	;volatile
  2525  004D4A                     
  2526                           ;SensorNegPosAprox.c: 234:     _delay((unsigned long)((1)*(8000000/4000.0)));
  2527  004D4A  0E03               	movlw	3
  2528  004D4C  6E01               	movwf	??_Set_DATA^0,c
  2529  004D4E  0E98               	movlw	152
  2530  004D50                     u6657:
  2531  004D50  2EE8               	decfsz	wreg,f,c
  2532  004D52  D7FE               	bra	u6657
  2533  004D54  2E01               	decfsz	??_Set_DATA^0,f,c
  2534  004D56  D7FC               	bra	u6657
  2535  004D58                     
  2536                           ;SensorNegPosAprox.c: 235:     LATDbits.LD2 = 0;
  2537  004D58  948C               	bcf	140,2,c	;volatile
  2538  004D5A  0012               	return		;funcret
  2539  004D5C                     __end_of_Set_DATA:
  2540                           	callstack 0
  2541                           
  2542 ;; *************** function _InicializaLCD *****************
  2543 ;; Defined at:
  2544 ;;		line 292 in file "SensorNegPosAprox.c"
  2545 ;; Parameters:    Size  Location     Type
  2546 ;;		None
  2547 ;; Auto vars:     Size  Location     Type
  2548 ;;		None
  2549 ;; Return value:  Size  Location     Type
  2550 ;;                  1    wreg      void 
  2551 ;; Registers used:
  2552 ;;		wreg, status,2, status,0, cstack
  2553 ;; Tracked objects:
  2554 ;;		On entry : 0/0
  2555 ;;		On exit  : 0/0
  2556 ;;		Unchanged: 0/0
  2557 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  2558 ;;      Params:         0       0       0       0       0       0       0       0       0
  2559 ;;      Locals:         0       0       0       0       0       0       0       0       0
  2560 ;;      Temps:          1       0       0       0       0       0       0       0       0
  2561 ;;      Totals:         1       0       0       0       0       0       0       0       0
  2562 ;;Total ram usage:        1 bytes
  2563 ;; Hardware stack levels used:    1
  2564 ;; Hardware stack levels required when called:    1
  2565 ;; This function calls:
  2566 ;;		_putcm
  2567 ;; This function is called by:
  2568 ;;		_main
  2569 ;; This function uses a non-reentrant model
  2570 ;;
  2571                           
  2572                           	psect	text10
  2573  004676                     __ptext10:
  2574                           	callstack 0
  2575  004676                     _InicializaLCD:
  2576                           	callstack 29
  2577  004676                     
  2578                           ;SensorNegPosAprox.c: 294:     _delay((unsigned long)((50)*(8000000/4000.0)));
  2579  004676  0E82               	movlw	130
  2580  004678  6E04               	movwf	??_InicializaLCD^0,c
  2581  00467A  0EDE               	movlw	222
  2582  00467C                     u6667:
  2583  00467C  2EE8               	decfsz	wreg,f,c
  2584  00467E  D7FE               	bra	u6667
  2585  004680  2E04               	decfsz	??_InicializaLCD^0,f,c
  2586  004682  D7FC               	bra	u6667
  2587  004684                     
  2588                           ;SensorNegPosAprox.c: 295:     putcm(0x02);
  2589  004684  0E02               	movlw	2
  2590  004686  EC91  F025         	call	_putcm
  2591  00468A                     
  2592                           ;SensorNegPosAprox.c: 296:     _delay((unsigned long)((1)*(8000000/4000.0)));
  2593  00468A  0E03               	movlw	3
  2594  00468C  6E04               	movwf	??_InicializaLCD^0,c
  2595  00468E  0E98               	movlw	152
  2596  004690                     u6677:
  2597  004690  2EE8               	decfsz	wreg,f,c
  2598  004692  D7FE               	bra	u6677
  2599  004694  2E04               	decfsz	??_InicializaLCD^0,f,c
  2600  004696  D7FC               	bra	u6677
  2601                           
  2602                           ;SensorNegPosAprox.c: 298:     putcm(0x28);
  2603  004698  0E28               	movlw	40
  2604  00469A  EC91  F025         	call	_putcm
  2605  00469E                     
  2606                           ;SensorNegPosAprox.c: 299:     _delay((unsigned long)((1)*(8000000/4000.0)));
  2607  00469E  0E03               	movlw	3
  2608  0046A0  6E04               	movwf	??_InicializaLCD^0,c
  2609  0046A2  0E98               	movlw	152
  2610  0046A4                     u6687:
  2611  0046A4  2EE8               	decfsz	wreg,f,c
  2612  0046A6  D7FE               	bra	u6687
  2613  0046A8  2E04               	decfsz	??_InicializaLCD^0,f,c
  2614  0046AA  D7FC               	bra	u6687
  2615  0046AC                     
  2616                           ;SensorNegPosAprox.c: 301:     putcm(0x2C);
  2617  0046AC  0E2C               	movlw	44
  2618  0046AE  EC91  F025         	call	_putcm
  2619                           
  2620                           ;SensorNegPosAprox.c: 302:     _delay((unsigned long)((1)*(8000000/4000.0)));
  2621  0046B2  0E03               	movlw	3
  2622  0046B4  6E04               	movwf	??_InicializaLCD^0,c
  2623  0046B6  0E98               	movlw	152
  2624  0046B8                     u6697:
  2625  0046B8  2EE8               	decfsz	wreg,f,c
  2626  0046BA  D7FE               	bra	u6697
  2627  0046BC  2E04               	decfsz	??_InicializaLCD^0,f,c
  2628  0046BE  D7FC               	bra	u6697
  2629  0046C0                     
  2630                           ;SensorNegPosAprox.c: 304:     putcm(0x0C);
  2631  0046C0  0E0C               	movlw	12
  2632  0046C2  EC91  F025         	call	_putcm
  2633  0046C6                     
  2634                           ;SensorNegPosAprox.c: 305:     _delay((unsigned long)((1)*(8000000/4000.0)));
  2635  0046C6  0E03               	movlw	3
  2636  0046C8  6E04               	movwf	??_InicializaLCD^0,c
  2637  0046CA  0E98               	movlw	152
  2638  0046CC                     u6707:
  2639  0046CC  2EE8               	decfsz	wreg,f,c
  2640  0046CE  D7FE               	bra	u6707
  2641  0046D0  2E04               	decfsz	??_InicializaLCD^0,f,c
  2642  0046D2  D7FC               	bra	u6707
  2643                           
  2644                           ;SensorNegPosAprox.c: 307:     putcm(0x06);
  2645  0046D4  0E06               	movlw	6
  2646  0046D6  EC91  F025         	call	_putcm
  2647  0046DA                     
  2648                           ;SensorNegPosAprox.c: 308:     _delay((unsigned long)((1)*(8000000/4000.0)));
  2649  0046DA  0E03               	movlw	3
  2650  0046DC  6E04               	movwf	??_InicializaLCD^0,c
  2651  0046DE  0E98               	movlw	152
  2652  0046E0                     u6717:
  2653  0046E0  2EE8               	decfsz	wreg,f,c
  2654  0046E2  D7FE               	bra	u6717
  2655  0046E4  2E04               	decfsz	??_InicializaLCD^0,f,c
  2656  0046E6  D7FC               	bra	u6717
  2657  0046E8                     
  2658                           ;SensorNegPosAprox.c: 310:     putcm(0x80);
  2659  0046E8  0E80               	movlw	128
  2660  0046EA  EC91  F025         	call	_putcm
  2661                           
  2662                           ;SensorNegPosAprox.c: 311:     _delay((unsigned long)((1)*(8000000/4000.0)));
  2663  0046EE  0E03               	movlw	3
  2664  0046F0  6E04               	movwf	??_InicializaLCD^0,c
  2665  0046F2  0E98               	movlw	152
  2666  0046F4                     u6727:
  2667  0046F4  2EE8               	decfsz	wreg,f,c
  2668  0046F6  D7FE               	bra	u6727
  2669  0046F8  2E04               	decfsz	??_InicializaLCD^0,f,c
  2670  0046FA  D7FC               	bra	u6727
  2671  0046FC  0012               	return		;funcret
  2672  0046FE                     __end_of_InicializaLCD:
  2673                           	callstack 0
  2674                           
  2675 ;; *************** function _Configuracion *****************
  2676 ;; Defined at:
  2677 ;;		line 194 in file "SensorNegPosAprox.c"
  2678 ;; Parameters:    Size  Location     Type
  2679 ;;		None
  2680 ;; Auto vars:     Size  Location     Type
  2681 ;;		None
  2682 ;; Return value:  Size  Location     Type
  2683 ;;                  1    wreg      void 
  2684 ;; Registers used:
  2685 ;;		wreg, status,2
  2686 ;; Tracked objects:
  2687 ;;		On entry : 0/0
  2688 ;;		On exit  : 0/0
  2689 ;;		Unchanged: 0/0
  2690 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  2691 ;;      Params:         0       0       0       0       0       0       0       0       0
  2692 ;;      Locals:         0       0       0       0       0       0       0       0       0
  2693 ;;      Temps:          0       0       0       0       0       0       0       0       0
  2694 ;;      Totals:         0       0       0       0       0       0       0       0       0
  2695 ;;Total ram usage:        0 bytes
  2696 ;; Hardware stack levels used:    1
  2697 ;; This function calls:
  2698 ;;		Nothing
  2699 ;; This function is called by:
  2700 ;;		_main
  2701 ;; This function uses a non-reentrant model
  2702 ;;
  2703                           
  2704                           	psect	text11
  2705  004C82                     __ptext11:
  2706                           	callstack 0
  2707  004C82                     _Configuracion:
  2708                           	callstack 30
  2709  004C82                     
  2710                           ;SensorNegPosAprox.c: 203:     TRISA = 0b11111111;
  2711  004C82  6892               	setf	146,c	;volatile
  2712  004C84                     
  2713                           ;SensorNegPosAprox.c: 204:  TRISD = 0b00000000;
  2714  004C84  0E00               	movlw	0
  2715  004C86  6E95               	movwf	149,c	;volatile
  2716                           
  2717                           ;SensorNegPosAprox.c: 208:     OSCCON = 0b01101100;
  2718  004C88  0E6C               	movlw	108
  2719  004C8A  6ED3               	movwf	211,c	;volatile
  2720  004C8C                     
  2721                           ;SensorNegPosAprox.c: 216:     ANSELAbits.ANSA3 = 0;
  2722  004C8C  010F               	movlb	15	; () banked
  2723  004C8E  975B               	bcf	91,3,b	;volatile
  2724  004C90                     
  2725                           ; BSR set to: 15
  2726                           ;SensorNegPosAprox.c: 217:     ANSELAbits.ANSA1 = 0;
  2727  004C90  935B               	bcf	91,1,b	;volatile
  2728  004C92                     
  2729                           ; BSR set to: 15
  2730                           ;SensorNegPosAprox.c: 218:     ANSELAbits.ANSA5 = 0;
  2731  004C92  9B5B               	bcf	91,5,b	;volatile
  2732  004C94                     
  2733                           ; BSR set to: 15
  2734                           ;SensorNegPosAprox.c: 219:     TRISCbits.RC6 = 0;
  2735  004C94  9C94               	bcf	148,6,c	;volatile
  2736  004C96                     
  2737                           ; BSR set to: 15
  2738                           ;SensorNegPosAprox.c: 220:     ANSELCbits.ANSC6 = 0;
  2739  004C96  9D5D               	bcf	93,6,b	;volatile
  2740  004C98                     
  2741                           ; BSR set to: 15
  2742                           ;SensorNegPosAprox.c: 221:     LATCbits.LATC6=0;
  2743  004C98  9C8B               	bcf	139,6,c	;volatile
  2744                           
  2745                           ;SensorNegPosAprox.c: 224:     TRISB = 0;
  2746  004C9A  0E00               	movlw	0
  2747  004C9C  6E93               	movwf	147,c	;volatile
  2748                           
  2749                           ;SensorNegPosAprox.c: 225:     ANSELB = 0;
  2750  004C9E  0E00               	movlw	0
  2751  004CA0  6F5C               	movwf	92,b	;volatile
  2752                           
  2753                           ;SensorNegPosAprox.c: 226:     LATB = 0;
  2754  004CA2  0E00               	movlw	0
  2755  004CA4  6E8A               	movwf	138,c	;volatile
  2756  004CA6                     
  2757                           ; BSR set to: 15
  2758  004CA6  0012               	return		;funcret
  2759  004CA8                     __end_of_Configuracion:
  2760                           	callstack 0
  2761                           
  2762 ;; *************** function _Alarma_LED *****************
  2763 ;; Defined at:
  2764 ;;		line 511 in file "SensorNegPosAprox.c"
  2765 ;; Parameters:    Size  Location     Type
  2766 ;;		None
  2767 ;; Auto vars:     Size  Location     Type
  2768 ;;  A               1    2[COMRAM] unsigned char 
  2769 ;; Return value:  Size  Location     Type
  2770 ;;                  1    wreg      void 
  2771 ;; Registers used:
  2772 ;;		wreg, status,2, status,0
  2773 ;; Tracked objects:
  2774 ;;		On entry : 0/0
  2775 ;;		On exit  : 0/0
  2776 ;;		Unchanged: 0/0
  2777 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  2778 ;;      Params:         0       0       0       0       0       0       0       0       0
  2779 ;;      Locals:         1       0       0       0       0       0       0       0       0
  2780 ;;      Temps:          2       0       0       0       0       0       0       0       0
  2781 ;;      Totals:         3       0       0       0       0       0       0       0       0
  2782 ;;Total ram usage:        3 bytes
  2783 ;; Hardware stack levels used:    1
  2784 ;; This function calls:
  2785 ;;		Nothing
  2786 ;; This function is called by:
  2787 ;;		_main
  2788 ;; This function uses a non-reentrant model
  2789 ;;
  2790                           
  2791                           	psect	text12
  2792  003D7C                     __ptext12:
  2793                           	callstack 0
  2794  003D7C                     _Alarma_LED:
  2795                           	callstack 30
  2796  003D7C                     
  2797                           ;SensorNegPosAprox.c: 516:     if(DH == Decenas_Horas && UH == Unidades_Horas && DM == D
      +                          ecenas_Minutos && UM == Unidades_Minutos && DS == Decenas_Segundos && US == Unidades_Seg
      +                          undos)
  2798  003D7C  0100               	movlb	0	; () banked
  2799  003D7E  51EE               	movf	_Decenas_Horas& (0+255),w,b
  2800  003D80  19DE               	xorwf	_DH& (0+255),w,b
  2801  003D82  E107               	bnz	u6541
  2802  003D84  51EF               	movf	(_Decenas_Horas+1)& (0+255),w,b
  2803  003D86  19DF               	xorwf	(_DH+1)& (0+255),w,b
  2804  003D88  A4D8               	btfss	status,2,c
  2805  003D8A  EFC9  F01E         	goto	u6541
  2806  003D8E  EFCB  F01E         	goto	u6540
  2807  003D92                     u6541:
  2808  003D92  EF31  F01F         	goto	l5075
  2809  003D96                     u6540:
  2810  003D96                     
  2811                           ; BSR set to: 0
  2812  003D96  51F0               	movf	_Unidades_Horas& (0+255),w,b
  2813  003D98  19DC               	xorwf	_UH& (0+255),w,b
  2814  003D9A  E107               	bnz	u6551
  2815  003D9C  51F1               	movf	(_Unidades_Horas+1)& (0+255),w,b
  2816  003D9E  19DD               	xorwf	(_UH+1)& (0+255),w,b
  2817  003DA0  A4D8               	btfss	status,2,c
  2818  003DA2  EFD5  F01E         	goto	u6551
  2819  003DA6  EFD7  F01E         	goto	u6550
  2820  003DAA                     u6551:
  2821  003DAA  EF31  F01F         	goto	l5075
  2822  003DAE                     u6550:
  2823  003DAE                     
  2824                           ; BSR set to: 0
  2825  003DAE  51EA               	movf	_Decenas_Minutos& (0+255),w,b
  2826  003DB0  19DA               	xorwf	_DM& (0+255),w,b
  2827  003DB2  E107               	bnz	u6561
  2828  003DB4  51EB               	movf	(_Decenas_Minutos+1)& (0+255),w,b
  2829  003DB6  19DB               	xorwf	(_DM+1)& (0+255),w,b
  2830  003DB8  A4D8               	btfss	status,2,c
  2831  003DBA  EFE1  F01E         	goto	u6561
  2832  003DBE  EFE3  F01E         	goto	u6560
  2833  003DC2                     u6561:
  2834  003DC2  EF31  F01F         	goto	l5075
  2835  003DC6                     u6560:
  2836  003DC6                     
  2837                           ; BSR set to: 0
  2838  003DC6  51EC               	movf	_Unidades_Minutos& (0+255),w,b
  2839  003DC8  19D8               	xorwf	_UM& (0+255),w,b
  2840  003DCA  E107               	bnz	u6571
  2841  003DCC  51ED               	movf	(_Unidades_Minutos+1)& (0+255),w,b
  2842  003DCE  19D9               	xorwf	(_UM+1)& (0+255),w,b
  2843  003DD0  A4D8               	btfss	status,2,c
  2844  003DD2  EFED  F01E         	goto	u6571
  2845  003DD6  EFEF  F01E         	goto	u6570
  2846  003DDA                     u6571:
  2847  003DDA  EF31  F01F         	goto	l5075
  2848  003DDE                     u6570:
  2849  003DDE                     
  2850                           ; BSR set to: 0
  2851  003DDE  51E6               	movf	_Decenas_Segundos& (0+255),w,b
  2852  003DE0  19D6               	xorwf	_DS& (0+255),w,b
  2853  003DE2  E107               	bnz	u6581
  2854  003DE4  51E7               	movf	(_Decenas_Segundos+1)& (0+255),w,b
  2855  003DE6  19D7               	xorwf	(_DS+1)& (0+255),w,b
  2856  003DE8  A4D8               	btfss	status,2,c
  2857  003DEA  EFF9  F01E         	goto	u6581
  2858  003DEE  EFFB  F01E         	goto	u6580
  2859  003DF2                     u6581:
  2860  003DF2  EF31  F01F         	goto	l5075
  2861  003DF6                     u6580:
  2862  003DF6                     
  2863                           ; BSR set to: 0
  2864  003DF6  51E8               	movf	_Unidades_Segundos& (0+255),w,b
  2865  003DF8  19D4               	xorwf	_US& (0+255),w,b
  2866  003DFA  E107               	bnz	u6591
  2867  003DFC  51E9               	movf	(_Unidades_Segundos+1)& (0+255),w,b
  2868  003DFE  19D5               	xorwf	(_US+1)& (0+255),w,b
  2869  003E00  A4D8               	btfss	status,2,c
  2870  003E02  EF05  F01F         	goto	u6591
  2871  003E06  EF07  F01F         	goto	u6590
  2872  003E0A                     u6591:
  2873  003E0A  EF31  F01F         	goto	l5075
  2874  003E0E                     u6590:
  2875  003E0E                     
  2876                           ; BSR set to: 0
  2877                           ;SensorNegPosAprox.c: 517:     {;SensorNegPosAprox.c: 518:         char A = 10;
  2878  003E0E  0E0A               	movlw	10
  2879  003E10  6E03               	movwf	Alarma_LED@A^0,c
  2880                           
  2881                           ;SensorNegPosAprox.c: 519:         while(A)
  2882  003E12  EF27  F01F         	goto	l5073
  2883  003E16                     l189:
  2884                           
  2885                           ;SensorNegPosAprox.c: 520:         {;SensorNegPosAprox.c: 521:             PORTB = 0xFF;
  2886  003E16  6881               	setf	129,c	;volatile
  2887  003E18                     
  2888                           ;SensorNegPosAprox.c: 522:             _delay((unsigned long)((100)*(8000000/4000.0)));
  2889  003E18  0E02               	movlw	2
  2890  003E1A  6E02               	movwf	(??_Alarma_LED+1)^0,c
  2891  003E1C  0E04               	movlw	4
  2892  003E1E  6E01               	movwf	??_Alarma_LED^0,c
  2893  003E20  0EBA               	movlw	186
  2894  003E22                     u6737:
  2895  003E22  2EE8               	decfsz	wreg,f,c
  2896  003E24  D7FE               	bra	u6737
  2897  003E26  2E01               	decfsz	??_Alarma_LED^0,f,c
  2898  003E28  D7FC               	bra	u6737
  2899  003E2A  2E02               	decfsz	(??_Alarma_LED+1)^0,f,c
  2900  003E2C  D7FA               	bra	u6737
  2901  003E2E  D000               	nop2	
  2902  003E30                     
  2903                           ;SensorNegPosAprox.c: 523:             PORTB = 0x00;
  2904  003E30  0E00               	movlw	0
  2905  003E32  6E81               	movwf	129,c	;volatile
  2906  003E34                     
  2907                           ;SensorNegPosAprox.c: 524:             _delay((unsigned long)((100)*(8000000/4000.0)));
  2908  003E34  0E02               	movlw	2
  2909  003E36  6E02               	movwf	(??_Alarma_LED+1)^0,c
  2910  003E38  0E04               	movlw	4
  2911  003E3A  6E01               	movwf	??_Alarma_LED^0,c
  2912  003E3C  0EBA               	movlw	186
  2913  003E3E                     u6747:
  2914  003E3E  2EE8               	decfsz	wreg,f,c
  2915  003E40  D7FE               	bra	u6747
  2916  003E42  2E01               	decfsz	??_Alarma_LED^0,f,c
  2917  003E44  D7FC               	bra	u6747
  2918  003E46  2E02               	decfsz	(??_Alarma_LED+1)^0,f,c
  2919  003E48  D7FA               	bra	u6747
  2920  003E4A  D000               	nop2	
  2921  003E4C                     
  2922                           ;SensorNegPosAprox.c: 525:             A -= 1;
  2923  003E4C  0603               	decf	Alarma_LED@A^0,f,c
  2924  003E4E                     l5073:
  2925                           
  2926                           ;SensorNegPosAprox.c: 519:         while(A)
  2927  003E4E  5003               	movf	Alarma_LED@A^0,w,c
  2928  003E50  A4D8               	btfss	status,2,c
  2929  003E52  EF2D  F01F         	goto	u6601
  2930  003E56  EF2F  F01F         	goto	u6600
  2931  003E5A                     u6601:
  2932  003E5A  EF0B  F01F         	goto	l189
  2933  003E5E                     u6600:
  2934  003E5E  EF3F  F01F         	goto	l192
  2935  003E62                     l5075:
  2936                           
  2937                           ; BSR set to: 0
  2938                           ;SensorNegPosAprox.c: 529:     {;SensorNegPosAprox.c: 530:         PORTB = 0x00;
  2939  003E62  0E00               	movlw	0
  2940  003E64  6E81               	movwf	129,c	;volatile
  2941  003E66                     
  2942                           ; BSR set to: 0
  2943                           ;SensorNegPosAprox.c: 531:         _delay((unsigned long)((100)*(8000000/4000.0)));
  2944  003E66  0E02               	movlw	2
  2945  003E68  6E02               	movwf	(??_Alarma_LED+1)^0,c
  2946  003E6A  0E04               	movlw	4
  2947  003E6C  6E01               	movwf	??_Alarma_LED^0,c
  2948  003E6E  0EBA               	movlw	186
  2949  003E70                     u6757:
  2950  003E70  2EE8               	decfsz	wreg,f,c
  2951  003E72  D7FE               	bra	u6757
  2952  003E74  2E01               	decfsz	??_Alarma_LED^0,f,c
  2953  003E76  D7FC               	bra	u6757
  2954  003E78  2E02               	decfsz	(??_Alarma_LED+1)^0,f,c
  2955  003E7A  D7FA               	bra	u6757
  2956  003E7C  D000               	nop2	
  2957  003E7E                     l192:
  2958  003E7E  0012               	return		;funcret
  2959  003E80                     __end_of_Alarma_LED:
  2960                           	callstack 0
  2961                           
  2962 ;; *************** function _Alarma *****************
  2963 ;; Defined at:
  2964 ;;		line 445 in file "SensorNegPosAprox.c"
  2965 ;; Parameters:    Size  Location     Type
  2966 ;;		None
  2967 ;; Auto vars:     Size  Location     Type
  2968 ;;		None
  2969 ;; Return value:  Size  Location     Type
  2970 ;;                  1    wreg      void 
  2971 ;; Registers used:
  2972 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  2973 ;; Tracked objects:
  2974 ;;		On entry : 0/0
  2975 ;;		On exit  : 0/0
  2976 ;;		Unchanged: 0/0
  2977 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  2978 ;;      Params:         0       0       0       0       0       0       0       0       0
  2979 ;;      Locals:         0       0       0       0       0       0       0       0       0
  2980 ;;      Temps:          2       0       0       0       0       0       0       0       0
  2981 ;;      Totals:         2       0       0       0       0       0       0       0       0
  2982 ;;Total ram usage:        2 bytes
  2983 ;; Hardware stack levels used:    1
  2984 ;; Hardware stack levels required when called:   10
  2985 ;; This function calls:
  2986 ;;		_Cronometro
  2987 ;;		___awdiv
  2988 ;;		___awmod
  2989 ;;		_printf
  2990 ;;		_putcm
  2991 ;; This function is called by:
  2992 ;;		_main
  2993 ;; This function uses a non-reentrant model
  2994 ;;
  2995                           
  2996                           	psect	text13
  2997  003002                     __ptext13:
  2998                           	callstack 0
  2999  003002                     _Alarma:
  3000                           	callstack 20
  3001  003002                     
  3002                           ;SensorNegPosAprox.c: 447:     if(PORTAbits.RA1 == 0)
  3003  003002  B280               	btfsc	128,1,c	;volatile
  3004  003004  EF06  F018         	goto	u6471
  3005  003008  EF08  F018         	goto	u6470
  3006  00300C                     u6471:
  3007  00300C  EF19  F018         	goto	l173
  3008  003010                     u6470:
  3009  003010                     
  3010                           ;SensorNegPosAprox.c: 448:     {;SensorNegPosAprox.c: 449:         PORTCbits.RC6 = 0;
  3011  003010  9C82               	bcf	130,6,c	;volatile
  3012  003012                     
  3013                           ;SensorNegPosAprox.c: 450:         _delay((unsigned long)((300)*(8000000/4000.0)));
  3014  003012  0E04               	movlw	4
  3015  003014  6E5C               	movwf	(??_Alarma+1)^0,c
  3016  003016  0E0C               	movlw	12
  3017  003018  6E5B               	movwf	??_Alarma^0,c
  3018  00301A  0E34               	movlw	52
  3019  00301C                     u6767:
  3020  00301C  2EE8               	decfsz	wreg,f,c
  3021  00301E  D7FE               	bra	u6767
  3022  003020  2E5B               	decfsz	??_Alarma^0,f,c
  3023  003022  D7FC               	bra	u6767
  3024  003024  2E5C               	decfsz	(??_Alarma+1)^0,f,c
  3025  003026  D7FA               	bra	u6767
  3026  003028                     
  3027                           ;SensorNegPosAprox.c: 451:         INTCONbits.GIE = 0;
  3028  003028  9EF2               	bcf	242,7,c	;volatile
  3029  00302A                     
  3030                           ;SensorNegPosAprox.c: 452:         Cronometro();
  3031  00302A  ECEF  F022         	call	_Cronometro	;wreg free
  3032                           
  3033                           ;SensorNegPosAprox.c: 453:     }
  3034  00302E  EF3B  F019         	goto	l184
  3035  003032                     l173:
  3036                           
  3037                           ;SensorNegPosAprox.c: 455:     {;SensorNegPosAprox.c: 456:         PORTCbits.RC6 = 1;
  3038  003032  8C82               	bsf	130,6,c	;volatile
  3039  003034                     
  3040                           ;SensorNegPosAprox.c: 457:         _delay((unsigned long)((300)*(8000000/4000.0)));
  3041  003034  0E04               	movlw	4
  3042  003036  6E5C               	movwf	(??_Alarma+1)^0,c
  3043  003038  0E0C               	movlw	12
  3044  00303A  6E5B               	movwf	??_Alarma^0,c
  3045  00303C  0E34               	movlw	52
  3046  00303E                     u6777:
  3047  00303E  2EE8               	decfsz	wreg,f,c
  3048  003040  D7FE               	bra	u6777
  3049  003042  2E5B               	decfsz	??_Alarma^0,f,c
  3050  003044  D7FC               	bra	u6777
  3051  003046  2E5C               	decfsz	(??_Alarma+1)^0,f,c
  3052  003048  D7FA               	bra	u6777
  3053  00304A                     
  3054                           ;SensorNegPosAprox.c: 459:         putcm(0xC2);
  3055  00304A  0EC2               	movlw	194
  3056  00304C  EC91  F025         	call	_putcm
  3057  003050                     
  3058                           ;SensorNegPosAprox.c: 460:         printf(" Modo Alarma ");
  3059  003050  0E76               	movlw	low STR_8
  3060  003052  0100               	movlb	0	; () banked
  3061  003054  6FB0               	movwf	printf@fmt& (0+255),b
  3062  003056  0E08               	movlw	high STR_8
  3063  003058  6FB1               	movwf	(printf@fmt+1)& (0+255),b
  3064  00305A  EC54  F026         	call	_printf	;wreg free
  3065  00305E                     
  3066                           ;SensorNegPosAprox.c: 461:         _delay((unsigned long)((1000)*(8000000/4000.0)));
  3067  00305E  0E0B               	movlw	11
  3068  003060  6E5C               	movwf	(??_Alarma+1)^0,c
  3069  003062  0E26               	movlw	38
  3070  003064  6E5B               	movwf	??_Alarma^0,c
  3071  003066  0E5E               	movlw	94
  3072  003068                     u6787:
  3073  003068  2EE8               	decfsz	wreg,f,c
  3074  00306A  D7FE               	bra	u6787
  3075  00306C  2E5B               	decfsz	??_Alarma^0,f,c
  3076  00306E  D7FC               	bra	u6787
  3077  003070  2E5C               	decfsz	(??_Alarma+1)^0,f,c
  3078  003072  D7FA               	bra	u6787
  3079  003074                     
  3080                           ;SensorNegPosAprox.c: 463:         INTCONbits.GIE = 1;
  3081  003074  8EF2               	bsf	242,7,c	;volatile
  3082  003076                     
  3083                           ;SensorNegPosAprox.c: 464:         INTCONbits.PEIE = 1;
  3084  003076  8CF2               	bsf	242,6,c	;volatile
  3085                           
  3086                           ;SensorNegPosAprox.c: 465:         while(PORTAbits.RA1 == 1)
  3087  003078  EF29  F019         	goto	l5043
  3088  00307C                     l176:
  3089                           
  3090                           ;SensorNegPosAprox.c: 466:   {;SensorNegPosAprox.c: 467:             if(PORTAbits.RA3 ==
      +                           1)
  3091  00307C  A680               	btfss	128,3,c	;volatile
  3092  00307E  EF43  F018         	goto	u6481
  3093  003082  EF45  F018         	goto	u6480
  3094  003086                     u6481:
  3095  003086  EF85  F018         	goto	l5019
  3096  00308A                     u6480:
  3097  00308A                     
  3098                           ;SensorNegPosAprox.c: 468:    {;SensorNegPosAprox.c: 469:                 DH = HORA / 10
      +                          ;
  3099  00308A  C0E4  F006         	movff	_HORA,___awdiv@dividend
  3100  00308E  C0E5  F007         	movff	_HORA+1,___awdiv@dividend+1
  3101  003092  0E00               	movlw	0
  3102  003094  6E09               	movwf	(___awdiv@divisor+1)^0,c
  3103  003096  0E0A               	movlw	10
  3104  003098  6E08               	movwf	___awdiv@divisor^0,c
  3105  00309A  ECE0  F021         	call	___awdiv	;wreg free
  3106  00309E  C006  F0DE         	movff	?___awdiv,_DH
  3107  0030A2  C007  F0DF         	movff	?___awdiv+1,_DH+1
  3108                           
  3109                           ;SensorNegPosAprox.c: 470:                 UH = HORA % 10;
  3110  0030A6  C0E4  F001         	movff	_HORA,___awmod@dividend
  3111  0030AA  C0E5  F002         	movff	_HORA+1,___awmod@dividend+1
  3112  0030AE  0E00               	movlw	0
  3113  0030B0  6E04               	movwf	(___awmod@divisor+1)^0,c
  3114  0030B2  0E0A               	movlw	10
  3115  0030B4  6E03               	movwf	___awmod@divisor^0,c
  3116  0030B6  EC42  F022         	call	___awmod	;wreg free
  3117  0030BA  C001  F0DC         	movff	?___awmod,_UH
  3118  0030BE  C002  F0DD         	movff	?___awmod+1,_UH+1
  3119  0030C2                     
  3120                           ;SensorNegPosAprox.c: 471:                 _delay((unsigned long)((500)*(8000000/4000.0)
      +                          ));
  3121  0030C2  0E06               	movlw	6
  3122  0030C4  6E5C               	movwf	(??_Alarma+1)^0,c
  3123  0030C6  0E13               	movlw	19
  3124  0030C8  6E5B               	movwf	??_Alarma^0,c
  3125  0030CA  0EAE               	movlw	174
  3126  0030CC                     u6797:
  3127  0030CC  2EE8               	decfsz	wreg,f,c
  3128  0030CE  D7FE               	bra	u6797
  3129  0030D0  2E5B               	decfsz	??_Alarma^0,f,c
  3130  0030D2  D7FC               	bra	u6797
  3131  0030D4  2E5C               	decfsz	(??_Alarma+1)^0,f,c
  3132  0030D6  D7FA               	bra	u6797
  3133  0030D8                     
  3134                           ;SensorNegPosAprox.c: 472:                 HORA = HORA + 1;
  3135  0030D8  0E01               	movlw	1
  3136  0030DA  0100               	movlb	0	; () banked
  3137  0030DC  25E4               	addwf	_HORA& (0+255),w,b
  3138  0030DE  6FE4               	movwf	_HORA& (0+255),b
  3139  0030E0  0E00               	movlw	0
  3140  0030E2  21E5               	addwfc	(_HORA+1)& (0+255),w,b
  3141  0030E4  6FE5               	movwf	(_HORA+1)& (0+255),b
  3142  0030E6                     
  3143                           ; BSR set to: 0
  3144                           ;SensorNegPosAprox.c: 473:                 if(HORA > 23)
  3145  0030E6  BFE5               	btfsc	(_HORA+1)& (0+255),7,b
  3146  0030E8  EF7F  F018         	goto	u6491
  3147  0030EC  51E5               	movf	(_HORA+1)& (0+255),w,b
  3148  0030EE  E109               	bnz	u6490
  3149  0030F0  0E18               	movlw	24
  3150  0030F2  5DE4               	subwf	_HORA& (0+255),w,b
  3151  0030F4  A0D8               	btfss	status,0,c
  3152  0030F6  EF7F  F018         	goto	u6491
  3153  0030FA  EF81  F018         	goto	u6490
  3154  0030FE                     u6491:
  3155  0030FE  EF85  F018         	goto	l5019
  3156  003102                     u6490:
  3157  003102                     
  3158                           ; BSR set to: 0
  3159                           ;SensorNegPosAprox.c: 474:                 {;SensorNegPosAprox.c: 475:                  
      +                             HORA=0;
  3160  003102  0E00               	movlw	0
  3161  003104  6FE5               	movwf	(_HORA+1)& (0+255),b
  3162  003106  0E00               	movlw	0
  3163  003108  6FE4               	movwf	_HORA& (0+255),b
  3164  00310A                     l5019:
  3165                           
  3166                           ;SensorNegPosAprox.c: 478:    if(PORTAbits.RA5 == 1)
  3167  00310A  AA80               	btfss	128,5,c	;volatile
  3168  00310C  EF8A  F018         	goto	u6501
  3169  003110  EF8C  F018         	goto	u6500
  3170  003114                     u6501:
  3171  003114  EFCC  F018         	goto	l5031
  3172  003118                     u6500:
  3173  003118                     
  3174                           ;SensorNegPosAprox.c: 479:             {;SensorNegPosAprox.c: 480:                 DM = 
      +                          MINUTO / 10;
  3175  003118  C0E2  F006         	movff	_MINUTO,___awdiv@dividend
  3176  00311C  C0E3  F007         	movff	_MINUTO+1,___awdiv@dividend+1
  3177  003120  0E00               	movlw	0
  3178  003122  6E09               	movwf	(___awdiv@divisor+1)^0,c
  3179  003124  0E0A               	movlw	10
  3180  003126  6E08               	movwf	___awdiv@divisor^0,c
  3181  003128  ECE0  F021         	call	___awdiv	;wreg free
  3182  00312C  C006  F0DA         	movff	?___awdiv,_DM
  3183  003130  C007  F0DB         	movff	?___awdiv+1,_DM+1
  3184                           
  3185                           ;SensorNegPosAprox.c: 481:                 UM = MINUTO % 10;
  3186  003134  C0E2  F001         	movff	_MINUTO,___awmod@dividend
  3187  003138  C0E3  F002         	movff	_MINUTO+1,___awmod@dividend+1
  3188  00313C  0E00               	movlw	0
  3189  00313E  6E04               	movwf	(___awmod@divisor+1)^0,c
  3190  003140  0E0A               	movlw	10
  3191  003142  6E03               	movwf	___awmod@divisor^0,c
  3192  003144  EC42  F022         	call	___awmod	;wreg free
  3193  003148  C001  F0D8         	movff	?___awmod,_UM
  3194  00314C  C002  F0D9         	movff	?___awmod+1,_UM+1
  3195  003150                     
  3196                           ;SensorNegPosAprox.c: 482:                 _delay((unsigned long)((500)*(8000000/4000.0)
      +                          ));
  3197  003150  0E06               	movlw	6
  3198  003152  6E5C               	movwf	(??_Alarma+1)^0,c
  3199  003154  0E13               	movlw	19
  3200  003156  6E5B               	movwf	??_Alarma^0,c
  3201  003158  0EAE               	movlw	174
  3202  00315A                     u6807:
  3203  00315A  2EE8               	decfsz	wreg,f,c
  3204  00315C  D7FE               	bra	u6807
  3205  00315E  2E5B               	decfsz	??_Alarma^0,f,c
  3206  003160  D7FC               	bra	u6807
  3207  003162  2E5C               	decfsz	(??_Alarma+1)^0,f,c
  3208  003164  D7FA               	bra	u6807
  3209  003166                     
  3210                           ;SensorNegPosAprox.c: 483:                 MINUTO = MINUTO + 1;
  3211  003166  0E01               	movlw	1
  3212  003168  0100               	movlb	0	; () banked
  3213  00316A  25E2               	addwf	_MINUTO& (0+255),w,b
  3214  00316C  6FE2               	movwf	_MINUTO& (0+255),b
  3215  00316E  0E00               	movlw	0
  3216  003170  21E3               	addwfc	(_MINUTO+1)& (0+255),w,b
  3217  003172  6FE3               	movwf	(_MINUTO+1)& (0+255),b
  3218  003174                     
  3219                           ; BSR set to: 0
  3220                           ;SensorNegPosAprox.c: 484:                 if(MINUTO > 59)
  3221  003174  BFE3               	btfsc	(_MINUTO+1)& (0+255),7,b
  3222  003176  EFC6  F018         	goto	u6511
  3223  00317A  51E3               	movf	(_MINUTO+1)& (0+255),w,b
  3224  00317C  E109               	bnz	u6510
  3225  00317E  0E3C               	movlw	60
  3226  003180  5DE2               	subwf	_MINUTO& (0+255),w,b
  3227  003182  A0D8               	btfss	status,0,c
  3228  003184  EFC6  F018         	goto	u6511
  3229  003188  EFC8  F018         	goto	u6510
  3230  00318C                     u6511:
  3231  00318C  EFCC  F018         	goto	l5031
  3232  003190                     u6510:
  3233  003190                     
  3234                           ; BSR set to: 0
  3235                           ;SensorNegPosAprox.c: 485:                 {;SensorNegPosAprox.c: 486:                  
      +                             MINUTO = 0;
  3236  003190  0E00               	movlw	0
  3237  003192  6FE3               	movwf	(_MINUTO+1)& (0+255),b
  3238  003194  0E00               	movlw	0
  3239  003196  6FE2               	movwf	_MINUTO& (0+255),b
  3240  003198                     l5031:
  3241                           
  3242                           ;SensorNegPosAprox.c: 489:             if(HORA < 12)
  3243  003198  0100               	movlb	0	; () banked
  3244  00319A  BFE5               	btfsc	(_HORA+1)& (0+255),7,b
  3245  00319C  EFDB  F018         	goto	u6520
  3246  0031A0  51E5               	movf	(_HORA+1)& (0+255),w,b
  3247  0031A2  E107               	bnz	u6521
  3248  0031A4  0E0C               	movlw	12
  3249  0031A6  5DE4               	subwf	_HORA& (0+255),w,b
  3250  0031A8  B0D8               	btfsc	status,0,c
  3251  0031AA  EFD9  F018         	goto	u6521
  3252  0031AE  EFDB  F018         	goto	u6520
  3253  0031B2                     u6521:
  3254  0031B2  EFFF  F018         	goto	l5037
  3255  0031B6                     u6520:
  3256  0031B6                     
  3257                           ; BSR set to: 0
  3258                           ;SensorNegPosAprox.c: 490:             {;SensorNegPosAprox.c: 491:                 putcm
      +                          (0xC2);
  3259  0031B6  0EC2               	movlw	194
  3260  0031B8  EC91  F025         	call	_putcm
  3261  0031BC                     
  3262                           ;SensorNegPosAprox.c: 492:                 printf("%d%d:%d%d:%d%d A.M",DH, UH, DM, UM, D
      +                          S, US);
  3263  0031BC  0E01               	movlw	low STR_6
  3264  0031BE  0100               	movlb	0	; () banked
  3265  0031C0  6FB0               	movwf	printf@fmt& (0+255),b
  3266  0031C2  0E08               	movlw	high STR_6
  3267  0031C4  6FB1               	movwf	(printf@fmt+1)& (0+255),b
  3268  0031C6  C0DE  F0B2         	movff	_DH,?_printf+2
  3269  0031CA  C0DF  F0B3         	movff	_DH+1,?_printf+3
  3270  0031CE  C0DC  F0B4         	movff	_UH,?_printf+4
  3271  0031D2  C0DD  F0B5         	movff	_UH+1,?_printf+5
  3272  0031D6  C0DA  F0B6         	movff	_DM,?_printf+6
  3273  0031DA  C0DB  F0B7         	movff	_DM+1,?_printf+7
  3274  0031DE  C0D8  F0B8         	movff	_UM,?_printf+8
  3275  0031E2  C0D9  F0B9         	movff	_UM+1,?_printf+9
  3276  0031E6  C0D6  F0BA         	movff	_DS,?_printf+10
  3277  0031EA  C0D7  F0BB         	movff	_DS+1,?_printf+11
  3278  0031EE  C0D4  F0BC         	movff	_US,?_printf+12
  3279  0031F2  C0D5  F0BD         	movff	_US+1,?_printf+13
  3280  0031F6  EC54  F026         	call	_printf	;wreg free
  3281                           
  3282                           ;SensorNegPosAprox.c: 493:             }
  3283  0031FA  EF29  F019         	goto	l5043
  3284  0031FE                     l5037:
  3285                           
  3286                           ; BSR set to: 0
  3287                           ;SensorNegPosAprox.c: 495:             {;SensorNegPosAprox.c: 496:                 cambi
      +                          o = 12 - HORA;
  3288  0031FE  51E4               	movf	_HORA& (0+255),w,b
  3289  003200  080C               	sublw	12
  3290  003202  6FF8               	movwf	_cambio& (0+255),b
  3291  003204  51E5               	movf	(_HORA+1)& (0+255),w,b
  3292  003206  A0D8               	btfss	status,0,c
  3293  003208  2AE8               	incf	wreg,f,c
  3294  00320A  0800               	sublw	0
  3295  00320C  6FF9               	movwf	(_cambio+1)& (0+255),b
  3296  00320E                     
  3297                           ; BSR set to: 0
  3298                           ;SensorNegPosAprox.c: 497:                 putcm(0xC2);
  3299  00320E  0EC2               	movlw	194
  3300  003210  EC91  F025         	call	_putcm
  3301  003214                     
  3302                           ;SensorNegPosAprox.c: 498:                 printf("%d%d:%d%d:%d%d P.M",DH, UH, DM, UM, D
      +                          S, US);
  3303  003214  0E14               	movlw	low STR_7
  3304  003216  0100               	movlb	0	; () banked
  3305  003218  6FB0               	movwf	printf@fmt& (0+255),b
  3306  00321A  0E08               	movlw	high STR_7
  3307  00321C  6FB1               	movwf	(printf@fmt+1)& (0+255),b
  3308  00321E  C0DE  F0B2         	movff	_DH,?_printf+2
  3309  003222  C0DF  F0B3         	movff	_DH+1,?_printf+3
  3310  003226  C0DC  F0B4         	movff	_UH,?_printf+4
  3311  00322A  C0DD  F0B5         	movff	_UH+1,?_printf+5
  3312  00322E  C0DA  F0B6         	movff	_DM,?_printf+6
  3313  003232  C0DB  F0B7         	movff	_DM+1,?_printf+7
  3314  003236  C0D8  F0B8         	movff	_UM,?_printf+8
  3315  00323A  C0D9  F0B9         	movff	_UM+1,?_printf+9
  3316  00323E  C0D6  F0BA         	movff	_DS,?_printf+10
  3317  003242  C0D7  F0BB         	movff	_DS+1,?_printf+11
  3318  003246  C0D4  F0BC         	movff	_US,?_printf+12
  3319  00324A  C0D5  F0BD         	movff	_US+1,?_printf+13
  3320  00324E  EC54  F026         	call	_printf	;wreg free
  3321  003252                     l5043:
  3322                           
  3323                           ;SensorNegPosAprox.c: 465:         while(PORTAbits.RA1 == 1)
  3324  003252  B280               	btfsc	128,1,c	;volatile
  3325  003254  EF2E  F019         	goto	u6531
  3326  003258  EF30  F019         	goto	u6530
  3327  00325C                     u6531:
  3328  00325C  EF3E  F018         	goto	l176
  3329  003260                     u6530:
  3330  003260                     
  3331                           ;SensorNegPosAprox.c: 501:   DS = 0;
  3332  003260  0E00               	movlw	0
  3333  003262  0100               	movlb	0	; () banked
  3334  003264  6FD7               	movwf	(_DS+1)& (0+255),b
  3335  003266  0E00               	movlw	0
  3336  003268  6FD6               	movwf	_DS& (0+255),b
  3337                           
  3338                           ;SensorNegPosAprox.c: 502:   US = 0;
  3339  00326A  0E00               	movlw	0
  3340  00326C  6FD5               	movwf	(_US+1)& (0+255),b
  3341  00326E  0E00               	movlw	0
  3342  003270  6FD4               	movwf	_US& (0+255),b
  3343  003272                     
  3344                           ; BSR set to: 0
  3345                           ;SensorNegPosAprox.c: 504:         INTCONbits.GIE = 1;
  3346  003272  8EF2               	bsf	242,7,c	;volatile
  3347  003274                     
  3348                           ; BSR set to: 0
  3349                           ;SensorNegPosAprox.c: 505:         INTCONbits.PEIE = 1;
  3350  003274  8CF2               	bsf	242,6,c	;volatile
  3351  003276                     l184:
  3352  003276  0012               	return		;funcret
  3353  003278                     __end_of_Alarma:
  3354                           	callstack 0
  3355                           
  3356 ;; *************** function _Cronometro *****************
  3357 ;; Defined at:
  3358 ;;		line 421 in file "SensorNegPosAprox.c"
  3359 ;; Parameters:    Size  Location     Type
  3360 ;;		None
  3361 ;; Auto vars:     Size  Location     Type
  3362 ;;		None
  3363 ;; Return value:  Size  Location     Type
  3364 ;;                  1    wreg      void 
  3365 ;; Registers used:
  3366 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  3367 ;; Tracked objects:
  3368 ;;		On entry : 0/0
  3369 ;;		On exit  : 0/0
  3370 ;;		Unchanged: 0/0
  3371 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  3372 ;;      Params:         0       0       0       0       0       0       0       0       0
  3373 ;;      Locals:         0       0       0       0       0       0       0       0       0
  3374 ;;      Temps:          2       0       0       0       0       0       0       0       0
  3375 ;;      Totals:         2       0       0       0       0       0       0       0       0
  3376 ;;Total ram usage:        2 bytes
  3377 ;; Hardware stack levels used:    1
  3378 ;; Hardware stack levels required when called:    9
  3379 ;; This function calls:
  3380 ;;		_Mostrar_Reloj
  3381 ;; This function is called by:
  3382 ;;		_Alarma
  3383 ;; This function uses a non-reentrant model
  3384 ;;
  3385                           
  3386                           	psect	text14
  3387  0045DE                     __ptext14:
  3388                           	callstack 0
  3389  0045DE                     _Cronometro:
  3390                           	callstack 20
  3391  0045DE                     
  3392                           ;SensorNegPosAprox.c: 423:     Mostrar_Reloj();
  3393  0045DE  EC91  F01D         	call	_Mostrar_Reloj	;wreg free
  3394  0045E2                     
  3395                           ;SensorNegPosAprox.c: 424:     segundos++;
  3396  0045E2  0100               	movlb	0	; () banked
  3397  0045E4  4BF2               	infsnz	_segundos& (0+255),f,b
  3398  0045E6  2BF3               	incf	(_segundos+1)& (0+255),f,b
  3399  0045E8                     
  3400                           ; BSR set to: 0
  3401                           ;SensorNegPosAprox.c: 425:  if(segundos > 59)
  3402  0045E8  BFF3               	btfsc	(_segundos+1)& (0+255),7,b
  3403  0045EA  EF00  F023         	goto	u6301
  3404  0045EE  51F3               	movf	(_segundos+1)& (0+255),w,b
  3405  0045F0  E109               	bnz	u6300
  3406  0045F2  0E3C               	movlw	60
  3407  0045F4  5DF2               	subwf	_segundos& (0+255),w,b
  3408  0045F6  A0D8               	btfss	status,0,c
  3409  0045F8  EF00  F023         	goto	u6301
  3410  0045FC  EF02  F023         	goto	u6300
  3411  004600                     u6301:
  3412  004600  EF2E  F023         	goto	l4823
  3413  004604                     u6300:
  3414  004604                     
  3415                           ; BSR set to: 0
  3416                           ;SensorNegPosAprox.c: 426:  {;SensorNegPosAprox.c: 427:   segundos = 0;
  3417  004604  0E00               	movlw	0
  3418  004606  6FF3               	movwf	(_segundos+1)& (0+255),b
  3419  004608  0E00               	movlw	0
  3420  00460A  6FF2               	movwf	_segundos& (0+255),b
  3421  00460C                     
  3422                           ; BSR set to: 0
  3423                           ;SensorNegPosAprox.c: 428:   minutos++;
  3424  00460C  4BF6               	infsnz	_minutos& (0+255),f,b
  3425  00460E  2BF7               	incf	(_minutos+1)& (0+255),f,b
  3426  004610                     
  3427                           ; BSR set to: 0
  3428                           ;SensorNegPosAprox.c: 429:   if(minutos > 59)
  3429  004610  BFF7               	btfsc	(_minutos+1)& (0+255),7,b
  3430  004612  EF14  F023         	goto	u6311
  3431  004616  51F7               	movf	(_minutos+1)& (0+255),w,b
  3432  004618  E109               	bnz	u6310
  3433  00461A  0E3C               	movlw	60
  3434  00461C  5DF6               	subwf	_minutos& (0+255),w,b
  3435  00461E  A0D8               	btfss	status,0,c
  3436  004620  EF14  F023         	goto	u6311
  3437  004624  EF16  F023         	goto	u6310
  3438  004628                     u6311:
  3439  004628  EF2E  F023         	goto	l4823
  3440  00462C                     u6310:
  3441  00462C                     
  3442                           ; BSR set to: 0
  3443                           ;SensorNegPosAprox.c: 430:   {;SensorNegPosAprox.c: 431:    minutos = 0;
  3444  00462C  0E00               	movlw	0
  3445  00462E  6FF7               	movwf	(_minutos+1)& (0+255),b
  3446  004630  0E00               	movlw	0
  3447  004632  6FF6               	movwf	_minutos& (0+255),b
  3448  004634                     
  3449                           ; BSR set to: 0
  3450                           ;SensorNegPosAprox.c: 432:    horas++;
  3451  004634  4BF4               	infsnz	_horas& (0+255),f,b
  3452  004636  2BF5               	incf	(_horas+1)& (0+255),f,b
  3453  004638                     
  3454                           ; BSR set to: 0
  3455                           ;SensorNegPosAprox.c: 433:    if(horas > 23)
  3456  004638  BFF5               	btfsc	(_horas+1)& (0+255),7,b
  3457  00463A  EF28  F023         	goto	u6321
  3458  00463E  51F5               	movf	(_horas+1)& (0+255),w,b
  3459  004640  E109               	bnz	u6320
  3460  004642  0E18               	movlw	24
  3461  004644  5DF4               	subwf	_horas& (0+255),w,b
  3462  004646  A0D8               	btfss	status,0,c
  3463  004648  EF28  F023         	goto	u6321
  3464  00464C  EF2A  F023         	goto	u6320
  3465  004650                     u6321:
  3466  004650  EF2E  F023         	goto	l4823
  3467  004654                     u6320:
  3468  004654                     
  3469                           ; BSR set to: 0
  3470                           ;SensorNegPosAprox.c: 434:    {;SensorNegPosAprox.c: 435:     horas=0;
  3471  004654  0E00               	movlw	0
  3472  004656  6FF5               	movwf	(_horas+1)& (0+255),b
  3473  004658  0E00               	movlw	0
  3474  00465A  6FF4               	movwf	_horas& (0+255),b
  3475  00465C                     l4823:
  3476                           
  3477                           ; BSR set to: 0
  3478                           ;SensorNegPosAprox.c: 439:     TMR0L = 0xFF;
  3479  00465C  68D6               	setf	214,c	;volatile
  3480  00465E                     
  3481                           ; BSR set to: 0
  3482                           ;SensorNegPosAprox.c: 440:     _delay((unsigned long)((1000)*(8000000/4000.0)));
  3483  00465E  0E0B               	movlw	11
  3484  004660  6E5A               	movwf	(??_Cronometro+1)^0,c
  3485  004662  0E26               	movlw	38
  3486  004664  6E59               	movwf	??_Cronometro^0,c
  3487  004666  0E5E               	movlw	94
  3488  004668                     u6817:
  3489  004668  2EE8               	decfsz	wreg,f,c
  3490  00466A  D7FE               	bra	u6817
  3491  00466C  2E59               	decfsz	??_Cronometro^0,f,c
  3492  00466E  D7FC               	bra	u6817
  3493  004670  2E5A               	decfsz	(??_Cronometro+1)^0,f,c
  3494  004672  D7FA               	bra	u6817
  3495  004674  0012               	return		;funcret
  3496  004676                     __end_of_Cronometro:
  3497                           	callstack 0
  3498                           
  3499 ;; *************** function _Mostrar_Reloj *****************
  3500 ;; Defined at:
  3501 ;;		line 395 in file "SensorNegPosAprox.c"
  3502 ;; Parameters:    Size  Location     Type
  3503 ;;		None
  3504 ;; Auto vars:     Size  Location     Type
  3505 ;;		None
  3506 ;; Return value:  Size  Location     Type
  3507 ;;                  1    wreg      void 
  3508 ;; Registers used:
  3509 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  3510 ;; Tracked objects:
  3511 ;;		On entry : 0/0
  3512 ;;		On exit  : 0/0
  3513 ;;		Unchanged: 0/0
  3514 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  3515 ;;      Params:         0       0       0       0       0       0       0       0       0
  3516 ;;      Locals:         0       0       0       0       0       0       0       0       0
  3517 ;;      Temps:          0       0       0       0       0       0       0       0       0
  3518 ;;      Totals:         0       0       0       0       0       0       0       0       0
  3519 ;;Total ram usage:        0 bytes
  3520 ;; Hardware stack levels used:    1
  3521 ;; Hardware stack levels required when called:    8
  3522 ;; This function calls:
  3523 ;;		___awdiv
  3524 ;;		___awmod
  3525 ;;		_printf
  3526 ;;		_putcm
  3527 ;; This function is called by:
  3528 ;;		_Cronometro
  3529 ;; This function uses a non-reentrant model
  3530 ;;
  3531                           
  3532                           	psect	text15
  3533  003B22                     __ptext15:
  3534                           	callstack 0
  3535  003B22                     _Mostrar_Reloj:
  3536                           	callstack 20
  3537  003B22                     
  3538                           ;SensorNegPosAprox.c: 398:  Decenas_Horas = horas / 10;
  3539  003B22  C0F4  F006         	movff	_horas,___awdiv@dividend
  3540  003B26  C0F5  F007         	movff	_horas+1,___awdiv@dividend+1
  3541  003B2A  0E00               	movlw	0
  3542  003B2C  6E09               	movwf	(___awdiv@divisor+1)^0,c
  3543  003B2E  0E0A               	movlw	10
  3544  003B30  6E08               	movwf	___awdiv@divisor^0,c
  3545  003B32  ECE0  F021         	call	___awdiv	;wreg free
  3546  003B36  C006  F0EE         	movff	?___awdiv,_Decenas_Horas
  3547  003B3A  C007  F0EF         	movff	?___awdiv+1,_Decenas_Horas+1
  3548                           
  3549                           ;SensorNegPosAprox.c: 399:  Unidades_Horas = horas % 10;
  3550  003B3E  C0F4  F001         	movff	_horas,___awmod@dividend
  3551  003B42  C0F5  F002         	movff	_horas+1,___awmod@dividend+1
  3552  003B46  0E00               	movlw	0
  3553  003B48  6E04               	movwf	(___awmod@divisor+1)^0,c
  3554  003B4A  0E0A               	movlw	10
  3555  003B4C  6E03               	movwf	___awmod@divisor^0,c
  3556  003B4E  EC42  F022         	call	___awmod	;wreg free
  3557  003B52  C001  F0F0         	movff	?___awmod,_Unidades_Horas
  3558  003B56  C002  F0F1         	movff	?___awmod+1,_Unidades_Horas+1
  3559                           
  3560                           ;SensorNegPosAprox.c: 400:  Decenas_Minutos = minutos / 10;
  3561  003B5A  C0F6  F006         	movff	_minutos,___awdiv@dividend
  3562  003B5E  C0F7  F007         	movff	_minutos+1,___awdiv@dividend+1
  3563  003B62  0E00               	movlw	0
  3564  003B64  6E09               	movwf	(___awdiv@divisor+1)^0,c
  3565  003B66  0E0A               	movlw	10
  3566  003B68  6E08               	movwf	___awdiv@divisor^0,c
  3567  003B6A  ECE0  F021         	call	___awdiv	;wreg free
  3568  003B6E  C006  F0EA         	movff	?___awdiv,_Decenas_Minutos
  3569  003B72  C007  F0EB         	movff	?___awdiv+1,_Decenas_Minutos+1
  3570                           
  3571                           ;SensorNegPosAprox.c: 401:  Unidades_Minutos = minutos % 10;
  3572  003B76  C0F6  F001         	movff	_minutos,___awmod@dividend
  3573  003B7A  C0F7  F002         	movff	_minutos+1,___awmod@dividend+1
  3574  003B7E  0E00               	movlw	0
  3575  003B80  6E04               	movwf	(___awmod@divisor+1)^0,c
  3576  003B82  0E0A               	movlw	10
  3577  003B84  6E03               	movwf	___awmod@divisor^0,c
  3578  003B86  EC42  F022         	call	___awmod	;wreg free
  3579  003B8A  C001  F0EC         	movff	?___awmod,_Unidades_Minutos
  3580  003B8E  C002  F0ED         	movff	?___awmod+1,_Unidades_Minutos+1
  3581                           
  3582                           ;SensorNegPosAprox.c: 402:  Decenas_Segundos = segundos / 10;
  3583  003B92  C0F2  F006         	movff	_segundos,___awdiv@dividend
  3584  003B96  C0F3  F007         	movff	_segundos+1,___awdiv@dividend+1
  3585  003B9A  0E00               	movlw	0
  3586  003B9C  6E09               	movwf	(___awdiv@divisor+1)^0,c
  3587  003B9E  0E0A               	movlw	10
  3588  003BA0  6E08               	movwf	___awdiv@divisor^0,c
  3589  003BA2  ECE0  F021         	call	___awdiv	;wreg free
  3590  003BA6  C006  F0E6         	movff	?___awdiv,_Decenas_Segundos
  3591  003BAA  C007  F0E7         	movff	?___awdiv+1,_Decenas_Segundos+1
  3592                           
  3593                           ;SensorNegPosAprox.c: 403:  Unidades_Segundos = segundos % 10;
  3594  003BAE  C0F2  F001         	movff	_segundos,___awmod@dividend
  3595  003BB2  C0F3  F002         	movff	_segundos+1,___awmod@dividend+1
  3596  003BB6  0E00               	movlw	0
  3597  003BB8  6E04               	movwf	(___awmod@divisor+1)^0,c
  3598  003BBA  0E0A               	movlw	10
  3599  003BBC  6E03               	movwf	___awmod@divisor^0,c
  3600  003BBE  EC42  F022         	call	___awmod	;wreg free
  3601  003BC2  C001  F0E8         	movff	?___awmod,_Unidades_Segundos
  3602  003BC6  C002  F0E9         	movff	?___awmod+1,_Unidades_Segundos+1
  3603  003BCA                     
  3604                           ;SensorNegPosAprox.c: 409:     if(horas < 12)
  3605  003BCA  0100               	movlb	0	; () banked
  3606  003BCC  BFF5               	btfsc	(_horas+1)& (0+255),7,b
  3607  003BCE  EFF4  F01D         	goto	u6260
  3608  003BD2  51F5               	movf	(_horas+1)& (0+255),w,b
  3609  003BD4  E107               	bnz	u6261
  3610  003BD6  0E0C               	movlw	12
  3611  003BD8  5DF4               	subwf	_horas& (0+255),w,b
  3612  003BDA  B0D8               	btfsc	status,0,c
  3613  003BDC  EFF2  F01D         	goto	u6261
  3614  003BE0  EFF4  F01D         	goto	u6260
  3615  003BE4                     u6261:
  3616  003BE4  EF18  F01E         	goto	l4731
  3617  003BE8                     u6260:
  3618  003BE8                     
  3619                           ; BSR set to: 0
  3620                           ;SensorNegPosAprox.c: 410:     {;SensorNegPosAprox.c: 411:         putcm(0xC2);
  3621  003BE8  0EC2               	movlw	194
  3622  003BEA  EC91  F025         	call	_putcm
  3623  003BEE                     
  3624                           ;SensorNegPosAprox.c: 412:         printf("%d%d:%d%d:%d%d A.M",Decenas_Horas, Unidades_H
      +                          oras, Decenas_Minutos, Unidades_Minutos, Decenas_Segundos, Unidades_Segundos);
  3625  003BEE  0E01               	movlw	low STR_6
  3626  003BF0  0100               	movlb	0	; () banked
  3627  003BF2  6FB0               	movwf	printf@fmt& (0+255),b
  3628  003BF4  0E08               	movlw	high STR_6
  3629  003BF6  6FB1               	movwf	(printf@fmt+1)& (0+255),b
  3630  003BF8  C0EE  F0B2         	movff	_Decenas_Horas,?_printf+2
  3631  003BFC  C0EF  F0B3         	movff	_Decenas_Horas+1,?_printf+3
  3632  003C00  C0F0  F0B4         	movff	_Unidades_Horas,?_printf+4
  3633  003C04  C0F1  F0B5         	movff	_Unidades_Horas+1,?_printf+5
  3634  003C08  C0EA  F0B6         	movff	_Decenas_Minutos,?_printf+6
  3635  003C0C  C0EB  F0B7         	movff	_Decenas_Minutos+1,?_printf+7
  3636  003C10  C0EC  F0B8         	movff	_Unidades_Minutos,?_printf+8
  3637  003C14  C0ED  F0B9         	movff	_Unidades_Minutos+1,?_printf+9
  3638  003C18  C0E6  F0BA         	movff	_Decenas_Segundos,?_printf+10
  3639  003C1C  C0E7  F0BB         	movff	_Decenas_Segundos+1,?_printf+11
  3640  003C20  C0E8  F0BC         	movff	_Unidades_Segundos,?_printf+12
  3641  003C24  C0E9  F0BD         	movff	_Unidades_Segundos+1,?_printf+13
  3642  003C28  EC54  F026         	call	_printf	;wreg free
  3643                           
  3644                           ;SensorNegPosAprox.c: 413:  }
  3645  003C2C  EF3A  F01E         	goto	l164
  3646  003C30                     l4731:
  3647                           
  3648                           ; BSR set to: 0
  3649                           ;SensorNegPosAprox.c: 415:     {;SensorNegPosAprox.c: 416:         putcm(0xC2);
  3650  003C30  0EC2               	movlw	194
  3651  003C32  EC91  F025         	call	_putcm
  3652  003C36                     
  3653                           ;SensorNegPosAprox.c: 417:         printf("%d%d:%d%d:%d%d P.M",Decenas_Horas, Unidades_H
      +                          oras, Decenas_Minutos, Unidades_Minutos, Decenas_Segundos, Unidades_Segundos);
  3654  003C36  0E14               	movlw	low STR_7
  3655  003C38  0100               	movlb	0	; () banked
  3656  003C3A  6FB0               	movwf	printf@fmt& (0+255),b
  3657  003C3C  0E08               	movlw	high STR_7
  3658  003C3E  6FB1               	movwf	(printf@fmt+1)& (0+255),b
  3659  003C40  C0EE  F0B2         	movff	_Decenas_Horas,?_printf+2
  3660  003C44  C0EF  F0B3         	movff	_Decenas_Horas+1,?_printf+3
  3661  003C48  C0F0  F0B4         	movff	_Unidades_Horas,?_printf+4
  3662  003C4C  C0F1  F0B5         	movff	_Unidades_Horas+1,?_printf+5
  3663  003C50  C0EA  F0B6         	movff	_Decenas_Minutos,?_printf+6
  3664  003C54  C0EB  F0B7         	movff	_Decenas_Minutos+1,?_printf+7
  3665  003C58  C0EC  F0B8         	movff	_Unidades_Minutos,?_printf+8
  3666  003C5C  C0ED  F0B9         	movff	_Unidades_Minutos+1,?_printf+9
  3667  003C60  C0E6  F0BA         	movff	_Decenas_Segundos,?_printf+10
  3668  003C64  C0E7  F0BB         	movff	_Decenas_Segundos+1,?_printf+11
  3669  003C68  C0E8  F0BC         	movff	_Unidades_Segundos,?_printf+12
  3670  003C6C  C0E9  F0BD         	movff	_Unidades_Segundos+1,?_printf+13
  3671  003C70  EC54  F026         	call	_printf	;wreg free
  3672  003C74                     l164:
  3673  003C74  0012               	return		;funcret
  3674  003C76                     __end_of_Mostrar_Reloj:
  3675                           	callstack 0
  3676                           
  3677 ;; *************** function _putcm *****************
  3678 ;; Defined at:
  3679 ;;		line 278 in file "SensorNegPosAprox.c"
  3680 ;; Parameters:    Size  Location     Type
  3681 ;;  data            1    wreg     unsigned char 
  3682 ;; Auto vars:     Size  Location     Type
  3683 ;;  data            1    1[COMRAM] unsigned char 
  3684 ;;  Activa          1    2[COMRAM] unsigned char 
  3685 ;; Return value:  Size  Location     Type
  3686 ;;                  1    wreg      void 
  3687 ;; Registers used:
  3688 ;;		wreg, status,2, status,0
  3689 ;; Tracked objects:
  3690 ;;		On entry : 0/0
  3691 ;;		On exit  : 0/0
  3692 ;;		Unchanged: 0/0
  3693 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  3694 ;;      Params:         0       0       0       0       0       0       0       0       0
  3695 ;;      Locals:         2       0       0       0       0       0       0       0       0
  3696 ;;      Temps:          1       0       0       0       0       0       0       0       0
  3697 ;;      Totals:         3       0       0       0       0       0       0       0       0
  3698 ;;Total ram usage:        3 bytes
  3699 ;; Hardware stack levels used:    1
  3700 ;; This function calls:
  3701 ;;		Nothing
  3702 ;; This function is called by:
  3703 ;;		_InicializaLCD
  3704 ;;		_SensorLM35
  3705 ;;		_Mostrar_Reloj
  3706 ;;		_Alarma
  3707 ;; This function uses a non-reentrant model
  3708 ;;
  3709                           
  3710                           	psect	text16
  3711  004B22                     __ptext16:
  3712                           	callstack 0
  3713  004B22                     _putcm:
  3714                           	callstack 29
  3715                           
  3716                           ;incstack = 0
  3717                           ;putcm@data stored from wreg
  3718  004B22  6E02               	movwf	putcm@data^0,c
  3719  004B24                     
  3720                           ;SensorNegPosAprox.c: 278: void putcm(char data);SensorNegPosAprox.c: 279: {;SensorNegPo
      +                          sAprox.c: 280:     char Activa;;SensorNegPosAprox.c: 281:     Activa = data & 0xF0;
  3721  004B24  5002               	movf	putcm@data^0,w,c
  3722  004B26  0BF0               	andlw	240
  3723  004B28  6E03               	movwf	putcm@Activa^0,c
  3724                           
  3725                           ;SensorNegPosAprox.c: 282:     LATD = Activa | 0x04;
  3726  004B2A  5003               	movf	putcm@Activa^0,w,c
  3727  004B2C  0904               	iorlw	4
  3728  004B2E  6E8C               	movwf	140,c	;volatile
  3729  004B30                     
  3730                           ;SensorNegPosAprox.c: 283:     _delay((unsigned long)((10)*(8000000/4000000.0)));
  3731  004B30  0E06               	movlw	6
  3732  004B32                     u6827:
  3733  004B32  2EE8               	decfsz	wreg,f,c
  3734  004B34  D7FE               	bra	u6827
  3735  004B36  D000               	nop2	
  3736  004B38                     
  3737                           ;SensorNegPosAprox.c: 284:     LATD = Activa;
  3738  004B38  C003  FF8C         	movff	putcm@Activa,3980	;volatile
  3739  004B3C                     
  3740                           ;SensorNegPosAprox.c: 285:     _delay((unsigned long)((1)*(8000000/4000.0)));
  3741  004B3C  0E03               	movlw	3
  3742  004B3E  6E01               	movwf	??_putcm^0,c
  3743  004B40  0E98               	movlw	152
  3744  004B42                     u6837:
  3745  004B42  2EE8               	decfsz	wreg,f,c
  3746  004B44  D7FE               	bra	u6837
  3747  004B46  2E01               	decfsz	??_putcm^0,f,c
  3748  004B48  D7FC               	bra	u6837
  3749                           
  3750                           ;SensorNegPosAprox.c: 286:     Activa = (unsigned char)(data << 4);
  3751  004B4A  3802               	swapf	putcm@data^0,w,c
  3752  004B4C  0BF0               	andlw	240
  3753  004B4E  6E03               	movwf	putcm@Activa^0,c
  3754                           
  3755                           ;SensorNegPosAprox.c: 287:     LATD = Activa | 0x04;
  3756  004B50  5003               	movf	putcm@Activa^0,w,c
  3757  004B52  0904               	iorlw	4
  3758  004B54  6E8C               	movwf	140,c	;volatile
  3759  004B56                     
  3760                           ;SensorNegPosAprox.c: 288:     _delay((unsigned long)((10)*(8000000/4000000.0)));
  3761  004B56  0E06               	movlw	6
  3762  004B58                     u6847:
  3763  004B58  2EE8               	decfsz	wreg,f,c
  3764  004B5A  D7FE               	bra	u6847
  3765  004B5C  D000               	nop2	
  3766  004B5E                     
  3767                           ;SensorNegPosAprox.c: 289:     LATD = Activa;
  3768  004B5E  C003  FF8C         	movff	putcm@Activa,3980	;volatile
  3769  004B62  0012               	return		;funcret
  3770  004B64                     __end_of_putcm:
  3771                           	callstack 0
  3772                           
  3773 ;; *************** function _printf *****************
  3774 ;; Defined at:
  3775 ;;		line 5 in file "/Applications/microchip/xc8/v2.31/pic/sources/c99/common/printf.c"
  3776 ;; Parameters:    Size  Location     Type
  3777 ;;  fmt             2   80[BANK0 ] PTR const unsigned char 
  3778 ;;		 -> STR_10(19), STR_9(19), STR_8(14), STR_7(19), 
  3779 ;;		 -> STR_6(19), STR_5(17), STR_4(17), Valores(16), 
  3780 ;; Auto vars:     Size  Location     Type
  3781 ;;  ap              2   86[COMRAM] PTR void [1]
  3782 ;;		 -> ?_printf(2), ?_sprintf(2), 
  3783 ;;  ret             2    0        int 
  3784 ;; Return value:  Size  Location     Type
  3785 ;;                  2   80[BANK0 ] int 
  3786 ;; Registers used:
  3787 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  3788 ;; Tracked objects:
  3789 ;;		On entry : 0/0
  3790 ;;		On exit  : 0/0
  3791 ;;		Unchanged: 0/0
  3792 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  3793 ;;      Params:         0      14       0       0       0       0       0       0       0
  3794 ;;      Locals:         4       0       0       0       0       0       0       0       0
  3795 ;;      Temps:          0       0       0       0       0       0       0       0       0
  3796 ;;      Totals:         4      14       0       0       0       0       0       0       0
  3797 ;;Total ram usage:       18 bytes
  3798 ;; Hardware stack levels used:    1
  3799 ;; Hardware stack levels required when called:    7
  3800 ;; This function calls:
  3801 ;;		_vfprintf
  3802 ;; This function is called by:
  3803 ;;		_SensorLM35
  3804 ;;		_Mostrar_Reloj
  3805 ;;		_Alarma
  3806 ;; This function uses a non-reentrant model
  3807 ;;
  3808                           
  3809                           	psect	text17
  3810  004CA8                     __ptext17:
  3811                           	callstack 0
  3812  004CA8                     _printf:
  3813                           	callstack 22
  3814  004CA8  0EB2               	movlw	low (?_printf+2)
  3815  004CAA  6E57               	movwf	printf@ap^0,c
  3816  004CAC  0E00               	movlw	high (?_printf+2)
  3817  004CAE  6E58               	movwf	(printf@ap+1)^0,c
  3818  004CB0  0E00               	movlw	0
  3819  004CB2  6E4D               	movwf	vfprintf@fp^0,c
  3820  004CB4  0E00               	movlw	0
  3821  004CB6  6E4E               	movwf	(vfprintf@fp+1)^0,c
  3822  004CB8  C0B0  F04F         	movff	printf@fmt,vfprintf@fmt
  3823  004CBC  C0B1  F050         	movff	printf@fmt+1,vfprintf@fmt+1
  3824  004CC0  0E57               	movlw	low printf@ap
  3825  004CC2  6E51               	movwf	vfprintf@ap^0,c
  3826  004CC4  0E00               	movlw	high printf@ap
  3827  004CC6  6E52               	movwf	(vfprintf@ap+1)^0,c
  3828  004CC8  EC7F  F023         	call	_vfprintf	;wreg free
  3829  004CCC  0012               	return		;funcret
  3830  004CCE                     __end_of_printf:
  3831                           	callstack 0
  3832                           
  3833 ;; *************** function _vfprintf *****************
  3834 ;; Defined at:
  3835 ;;		line 1390 in file "/Applications/microchip/xc8/v2.31/pic/sources/c99/common/doprnt.c"
  3836 ;; Parameters:    Size  Location     Type
  3837 ;;  fp              2   76[COMRAM] PTR struct _IO_FILE
  3838 ;;		 -> NULL(0), sprintf@f(6), 
  3839 ;;  fmt             2   78[COMRAM] PTR const unsigned char 
  3840 ;;		 -> STR_10(19), STR_9(19), STR_8(14), STR_7(19), 
  3841 ;;		 -> STR_6(19), STR_5(17), STR_4(17), STR_3(15), 
  3842 ;;		 -> STR_2(15), STR_1(15), Valores(16), 
  3843 ;;  ap              2   80[COMRAM] PTR PTR void 
  3844 ;;		 -> printf@ap(2), sprintf@ap(2), 
  3845 ;; Auto vars:     Size  Location     Type
  3846 ;;  cfmt            2   82[COMRAM] PTR unsigned char 
  3847 ;;		 -> STR_10(19), STR_9(19), STR_8(14), STR_7(19), 
  3848 ;;		 -> STR_6(19), STR_5(17), STR_4(17), STR_3(15), 
  3849 ;;		 -> STR_2(15), STR_1(15), Valores(16), 
  3850 ;; Return value:  Size  Location     Type
  3851 ;;                  2   76[COMRAM] int 
  3852 ;; Registers used:
  3853 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  3854 ;; Tracked objects:
  3855 ;;		On entry : 0/0
  3856 ;;		On exit  : 0/0
  3857 ;;		Unchanged: 0/0
  3858 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  3859 ;;      Params:         6       0       0       0       0       0       0       0       0
  3860 ;;      Locals:         2       0       0       0       0       0       0       0       0
  3861 ;;      Temps:          0       0       0       0       0       0       0       0       0
  3862 ;;      Totals:         8       0       0       0       0       0       0       0       0
  3863 ;;Total ram usage:        8 bytes
  3864 ;; Hardware stack levels used:    1
  3865 ;; Hardware stack levels required when called:    6
  3866 ;; This function calls:
  3867 ;;		_vfpfcnvrt
  3868 ;; This function is called by:
  3869 ;;		_sprintf
  3870 ;;		_printf
  3871 ;; This function uses a non-reentrant model
  3872 ;;
  3873                           
  3874                           	psect	text18
  3875  0046FE                     __ptext18:
  3876                           	callstack 0
  3877  0046FE                     _vfprintf:
  3878                           	callstack 22
  3879  0046FE                     
  3880                           ;/Applications/microchip/xc8/v2.31/pic/sources/c99/common/doprnt.c: 1390: int vfprintf(F
      +                          ILE *fp, const char *fmt, va_list ap);/Applications/microchip/xc8/v2.31/pic/sources/c99/
      +                          common/doprnt.c: 1391: {;/Applications/microchip/xc8/v2.31/pic/sources/c99/common/doprnt
      +                          .c: 1393:     char *cfmt;;/Applications/microchip/xc8/v2.31/pic/sources/c99/common/doprn
      +                          t.c: 1395:     cfmt = (char *)fmt;
  3881  0046FE  C04F  F053         	movff	vfprintf@fmt,vfprintf@cfmt
  3882  004702  C050  F054         	movff	vfprintf@fmt+1,vfprintf@cfmt+1
  3883  004706                     
  3884                           ;/Applications/microchip/xc8/v2.31/pic/sources/c99/common/doprnt.c: 1396:     nout = 0;
  3885  004706  0E00               	movlw	0
  3886  004708  0100               	movlb	0	; () banked
  3887  00470A  6FCD               	movwf	(_nout+1)& (0+255),b
  3888  00470C  0E00               	movlw	0
  3889  00470E  6FCC               	movwf	_nout& (0+255),b
  3890                           
  3891                           ;/Applications/microchip/xc8/v2.31/pic/sources/c99/common/doprnt.c: 1397:     while (*cf
      +                          mt) {
  3892  004710  EF9D  F023         	goto	l4695
  3893  004714                     l4693:
  3894                           
  3895                           ;/Applications/microchip/xc8/v2.31/pic/sources/c99/common/doprnt.c: 1398:         nout +
      +                          = vfpfcnvrt(fp, &cfmt, ap);
  3896  004714  C04D  F043         	movff	vfprintf@fp,vfpfcnvrt@fp
  3897  004718  C04E  F044         	movff	vfprintf@fp+1,vfpfcnvrt@fp+1
  3898  00471C  0E53               	movlw	low vfprintf@cfmt
  3899  00471E  6E45               	movwf	vfpfcnvrt@fmt^0,c
  3900  004720  0E00               	movlw	high vfprintf@cfmt
  3901  004722  6E46               	movwf	(vfpfcnvrt@fmt+1)^0,c
  3902  004724  C051  F047         	movff	vfprintf@ap,vfpfcnvrt@ap
  3903  004728  C052  F048         	movff	vfprintf@ap+1,vfpfcnvrt@ap+1
  3904  00472C  EC78  F00A         	call	_vfpfcnvrt	;wreg free
  3905  004730  5043               	movf	?_vfpfcnvrt^0,w,c
  3906  004732  0100               	movlb	0	; () banked
  3907  004734  27CC               	addwf	_nout& (0+255),f,b
  3908  004736  5044               	movf	(?_vfpfcnvrt+1)^0,w,c
  3909  004738  23CD               	addwfc	(_nout+1)& (0+255),f,b
  3910  00473A                     l4695:
  3911                           
  3912                           ; BSR set to: 0
  3913                           ;/Applications/microchip/xc8/v2.31/pic/sources/c99/common/doprnt.c: 1397:     while (*cf
      +                          mt) {
  3914  00473A  C053  FFF6         	movff	vfprintf@cfmt,tblptrl
  3915  00473E  C054  FFF7         	movff	vfprintf@cfmt+1,tblptrh
  3916  004742  6AF8               	clrf	tblptru,c
  3917  004744  0E07               	movlw	(high __ramtop+-1)
  3918  004746  64F7               	cpfsgt	tblptrh,c
  3919  004748  D003               	bra	u6247
  3920  00474A  0008               	tblrd		*
  3921  00474C  50F5               	movf	tablat,w,c
  3922  00474E  D005               	bra	u6240
  3923  004750                     u6247:
  3924  004750  CFF6 FFE1          	movff	tblptrl,fsr1l
  3925  004754  CFF7 FFE2          	movff	tblptrh,fsr1h
  3926  004758  50E7               	movf	indf1,w,c
  3927  00475A                     u6240:
  3928  00475A  0900               	iorlw	0
  3929  00475C  A4D8               	btfss	status,2,c
  3930  00475E  EFB3  F023         	goto	u6251
  3931  004762  EFB5  F023         	goto	u6250
  3932  004766                     u6251:
  3933  004766  EF8A  F023         	goto	l4693
  3934  00476A                     u6250:
  3935  00476A                     
  3936                           ;/Applications/microchip/xc8/v2.31/pic/sources/c99/common/doprnt.c: 1400:     return nou
      +                          t;
  3937  00476A  C0CC  F04D         	movff	_nout,?_vfprintf
  3938  00476E  C0CD  F04E         	movff	_nout+1,?_vfprintf+1
  3939  004772  0012               	return		;funcret
  3940  004774                     __end_of_vfprintf:
  3941                           	callstack 0
  3942                           
  3943 ;; *************** function _vfpfcnvrt *****************
  3944 ;; Defined at:
  3945 ;;		line 692 in file "/Applications/microchip/xc8/v2.31/pic/sources/c99/common/doprnt.c"
  3946 ;; Parameters:    Size  Location     Type
  3947 ;;  fp              2   66[COMRAM] PTR struct _IO_FILE
  3948 ;;		 -> NULL(0), sprintf@f(6), 
  3949 ;;  fmt             2   68[COMRAM] PTR PTR unsigned char 
  3950 ;;		 -> vfprintf@cfmt(2), 
  3951 ;;  ap              2   70[COMRAM] PTR PTR void 
  3952 ;;		 -> printf@ap(2), sprintf@ap(2), 
  3953 ;; Auto vars:     Size  Location     Type
  3954 ;;  ll              8   56[BANK0 ] long long 
  3955 ;;  llu             8    0        unsigned long long 
  3956 ;;  f               4   72[BANK0 ] unsigned long long 
  3957 ;;  ct              3   76[BANK0 ] unsigned char [3]
  3958 ;;  cp              3    0        PTR unsigned char 
  3959 ;;  vp              2   64[BANK0 ] PTR void 
  3960 ;;		 -> ?_printf(2), ?_sprintf(2), 
  3961 ;;  i               2    0        int 
  3962 ;;  done            2    0        int 
  3963 ;;  c               1   79[BANK0 ] unsigned char 
  3964 ;; Return value:  Size  Location     Type
  3965 ;;                  2   66[COMRAM] int 
  3966 ;; Registers used:
  3967 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  3968 ;; Tracked objects:
  3969 ;;		On entry : 0/0
  3970 ;;		On exit  : 0/0
  3971 ;;		Unchanged: 0/0
  3972 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  3973 ;;      Params:         6       0       0       0       0       0       0       0       0
  3974 ;;      Locals:         0      24       0       0       0       0       0       0       0
  3975 ;;      Temps:          4       0       0       0       0       0       0       0       0
  3976 ;;      Totals:        10      24       0       0       0       0       0       0       0
  3977 ;;Total ram usage:       34 bytes
  3978 ;; Hardware stack levels used:    1
  3979 ;; Hardware stack levels required when called:    5
  3980 ;; This function calls:
  3981 ;;		_atoi
  3982 ;;		_ctoa
  3983 ;;		_dtoa
  3984 ;;		_efgtoa
  3985 ;;		_fputc
  3986 ;;		_isdigit
  3987 ;;		_isupper
  3988 ;;		_strncmp
  3989 ;;		_tolower
  3990 ;; This function is called by:
  3991 ;;		_vfprintf
  3992 ;; This function uses a non-reentrant model
  3993 ;;
  3994                           
  3995                           	psect	text19
  3996  0014F0                     __ptext19:
  3997                           	callstack 0
  3998  0014F0                     _vfpfcnvrt:
  3999                           	callstack 22
  4000  0014F0                     
  4001                           ;/Applications/microchip/xc8/v2.31/pic/sources/c99/common/doprnt.c: 692: static int vfpf
      +                          cnvrt(FILE *fp, char *fmt[], va_list ap);/Applications/microchip/xc8/v2.31/pic/sources/c
      +                          99/common/doprnt.c: 693: {;/Applications/microchip/xc8/v2.31/pic/sources/c99/common/dopr
      +                          nt.c: 694:     char c, *cp, ct[3];;/Applications/microchip/xc8/v2.31/pic/sources/c99/com
      +                          mon/doprnt.c: 695:     int done, i;;/Applications/microchip/xc8/v2.31/pic/sources/c99/co
      +                          mmon/doprnt.c: 696:     long long ll;;/Applications/microchip/xc8/v2.31/pic/sources/c99/
      +                          common/doprnt.c: 697:     unsigned long long llu;
  4002  0014F0  C045  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  4003  0014F4  C046  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  4004  0014F8  CFDE FFF6          	movff	postinc2,tblptrl
  4005  0014FC  CFDE FFF7          	movff	postinc2,tblptrh
  4006  001500  0E07               	movlw	(high __ramtop+-1)
  4007  001502  64F7               	cpfsgt	tblptrh,c
  4008  001504  D003               	bra	u5837
  4009  001506  0008               	tblrd		*
  4010  001508  50F5               	movf	tablat,w,c
  4011  00150A  D005               	bra	u5830
  4012  00150C                     u5837:
  4013  00150C  CFF6 FFE1          	movff	tblptrl,fsr1l
  4014  001510  CFF7 FFE2          	movff	tblptrh,fsr1h
  4015  001514  50E7               	movf	indf1,w,c
  4016  001516                     u5830:
  4017  001516  0A25               	xorlw	37
  4018  001518  A4D8               	btfss	status,2,c
  4019  00151A  EF91  F00A         	goto	u5841
  4020  00151E  EF93  F00A         	goto	u5840
  4021  001522                     u5841:
  4022  001522  EF8D  F00E         	goto	l4681
  4023  001526                     u5840:
  4024  001526                     
  4025                           ;/Applications/microchip/xc8/v2.31/pic/sources/c99/common/doprnt.c: 703:         ++*fmt;
  4026  001526  C045  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  4027  00152A  C046  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  4028  00152E  2ADE               	incf	postinc2,f,c
  4029  001530  0E00               	movlw	0
  4030  001532  22DD               	addwfc	postdec2,f,c
  4031  001534                     
  4032                           ;/Applications/microchip/xc8/v2.31/pic/sources/c99/common/doprnt.c: 705:         flags =
      +                           width = 0;
  4033  001534  0E00               	movlw	0
  4034  001536  0100               	movlb	0	; () banked
  4035  001538  6FCF               	movwf	(_width+1)& (0+255),b
  4036  00153A  0E00               	movlw	0
  4037  00153C  6FCE               	movwf	_width& (0+255),b
  4038  00153E  C0CE  F0D2         	movff	_width,_flags
  4039  001542  C0CF  F0D3         	movff	_width+1,_flags+1
  4040  001546                     
  4041                           ; BSR set to: 0
  4042                           ;/Applications/microchip/xc8/v2.31/pic/sources/c99/common/doprnt.c: 706:         prec = 
      +                          -1;
  4043  001546  69D0               	setf	_prec& (0+255),b
  4044  001548  69D1               	setf	(_prec+1)& (0+255),b
  4045  00154A                     
  4046                           ; BSR set to: 0
  4047                           ;/Applications/microchip/xc8/v2.31/pic/sources/c99/common/doprnt.c: 745:         if ((*f
      +                          mt)[0] == '*') {
  4048  00154A  C045  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  4049  00154E  C046  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  4050  001552  CFDE FFF6          	movff	postinc2,tblptrl
  4051  001556  CFDE FFF7          	movff	postinc2,tblptrh
  4052  00155A  0E07               	movlw	(high __ramtop+-1)
  4053  00155C  64F7               	cpfsgt	tblptrh,c
  4054  00155E  D003               	bra	u5857
  4055  001560  0008               	tblrd		*
  4056  001562  50F5               	movf	tablat,w,c
  4057  001564  D005               	bra	u5850
  4058  001566                     u5857:
  4059  001566  CFF6 FFE1          	movff	tblptrl,fsr1l
  4060  00156A  CFF7 FFE2          	movff	tblptrh,fsr1h
  4061  00156E  50E7               	movf	indf1,w,c
  4062  001570                     u5850:
  4063  001570  0A2A               	xorlw	42
  4064  001572  A4D8               	btfss	status,2,c
  4065  001574  EFBE  F00A         	goto	u5861
  4066  001578  EFC0  F00A         	goto	u5860
  4067  00157C                     u5861:
  4068  00157C  EFEA  F00A         	goto	l4569
  4069  001580                     u5860:
  4070  001580                     
  4071                           ;/Applications/microchip/xc8/v2.31/pic/sources/c99/common/doprnt.c: 746:             ++*
      +                          fmt;
  4072  001580  C045  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  4073  001584  C046  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  4074  001588  2ADE               	incf	postinc2,f,c
  4075  00158A  0E00               	movlw	0
  4076  00158C  22DD               	addwfc	postdec2,f,c
  4077                           
  4078                           ;/Applications/microchip/xc8/v2.31/pic/sources/c99/common/doprnt.c: 747:             wid
      +                          th = (*(int *)__va_arg(*(int **)ap, (int)0));
  4079  00158E  C047  FFD9         	movff	vfpfcnvrt@ap,fsr2l
  4080  001592  C048  FFDA         	movff	vfpfcnvrt@ap+1,fsr2h
  4081  001596  CFDF F049          	movff	indf2,??_vfpfcnvrt
  4082  00159A  0E02               	movlw	2
  4083  00159C  26DE               	addwf	postinc2,f,c
  4084  00159E  CFDF F04A          	movff	indf2,??_vfpfcnvrt+1
  4085  0015A2  0E00               	movlw	0
  4086  0015A4  22DD               	addwfc	postdec2,f,c
  4087  0015A6  C049  FFD9         	movff	??_vfpfcnvrt,fsr2l
  4088  0015AA  C04A  FFDA         	movff	??_vfpfcnvrt+1,fsr2h
  4089  0015AE  CFDE F0CE          	movff	postinc2,_width
  4090  0015B2  CFDD F0CF          	movff	postdec2,_width+1
  4091  0015B6                     
  4092                           ;/Applications/microchip/xc8/v2.31/pic/sources/c99/common/doprnt.c: 748:             if 
      +                          (width < 0) {
  4093  0015B6  0100               	movlb	0	; () banked
  4094  0015B8  BFCF               	btfsc	(_width+1)& (0+255),7,b
  4095  0015BA  EFE3  F00A         	goto	u5870
  4096  0015BE  EFE1  F00A         	goto	u5871
  4097  0015C2                     u5871:
  4098  0015C2  EF37  F00B         	goto	l4579
  4099  0015C6                     u5870:
  4100  0015C6                     
  4101                           ; BSR set to: 0
  4102                           ;/Applications/microchip/xc8/v2.31/pic/sources/c99/common/doprnt.c: 749:                
      +                           flags |= (1 << 0);
  4103  0015C6  81D2               	bsf	_flags& (0+255),0,b
  4104                           
  4105                           ;/Applications/microchip/xc8/v2.31/pic/sources/c99/common/doprnt.c: 750:                
      +                           width = -width;
  4106  0015C8  6DCE               	negf	_width& (0+255),b
  4107  0015CA  1FCF               	comf	(_width+1)& (0+255),f,b
  4108  0015CC  B0D8               	btfsc	status,0,c
  4109  0015CE  2BCF               	incf	(_width+1)& (0+255),f,b
  4110  0015D0  EF37  F00B         	goto	l4579
  4111  0015D4                     l4569:
  4112                           
  4113                           ;/Applications/microchip/xc8/v2.31/pic/sources/c99/common/doprnt.c: 753:             wid
      +                          th = atoi(*fmt);
  4114  0015D4  C045  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  4115  0015D8  C046  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  4116  0015DC  CFDE F008          	movff	postinc2,atoi@s
  4117  0015E0  CFDD F009          	movff	postdec2,atoi@s+1
  4118  0015E4  EC45  F01A         	call	_atoi	;wreg free
  4119  0015E8  C008  F0CE         	movff	?_atoi,_width
  4120  0015EC  C009  F0CF         	movff	?_atoi+1,_width+1
  4121                           
  4122                           ;/Applications/microchip/xc8/v2.31/pic/sources/c99/common/doprnt.c: 754:             whi
      +                          le ((0 ? isdigit((*fmt)[0]) : ((unsigned)((*fmt)[0])-'0') < 10)) {
  4123  0015F0  EF01  F00B         	goto	l4573
  4124  0015F4                     l4571:
  4125                           
  4126                           ; BSR set to: 0
  4127                           ;/Applications/microchip/xc8/v2.31/pic/sources/c99/common/doprnt.c: 755:                
      +                           ++*fmt;
  4128  0015F4  C045  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  4129  0015F8  C046  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  4130  0015FC  2ADE               	incf	postinc2,f,c
  4131  0015FE  0E00               	movlw	0
  4132  001600  22DD               	addwfc	postdec2,f,c
  4133  001602                     l4573:
  4134  001602  0ED0               	movlw	208
  4135  001604  6E49               	movwf	??_vfpfcnvrt^0,c
  4136  001606  0EFF               	movlw	255
  4137  001608  6E4A               	movwf	(??_vfpfcnvrt+1)^0,c
  4138  00160A  C045  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  4139  00160E  C046  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  4140  001612  CFDE FFF6          	movff	postinc2,tblptrl
  4141  001616  CFDE FFF7          	movff	postinc2,tblptrh
  4142  00161A  0E07               	movlw	(high __ramtop+-1)
  4143  00161C  64F7               	cpfsgt	tblptrh,c
  4144  00161E  D003               	bra	u5887
  4145  001620  0008               	tblrd		*
  4146  001622  50F5               	movf	tablat,w,c
  4147  001624  D005               	bra	u5880
  4148  001626                     u5887:
  4149  001626  CFF6 FFE1          	movff	tblptrl,fsr1l
  4150  00162A  CFF7 FFE2          	movff	tblptrh,fsr1h
  4151  00162E  50E7               	movf	indf1,w,c
  4152  001630                     u5880:
  4153  001630  6E4B               	movwf	(??_vfpfcnvrt+2)^0,c
  4154  001632  6A4C               	clrf	(??_vfpfcnvrt+3)^0,c
  4155  001634  5049               	movf	??_vfpfcnvrt^0,w,c
  4156  001636  264B               	addwf	(??_vfpfcnvrt+2)^0,f,c
  4157  001638  504A               	movf	(??_vfpfcnvrt+1)^0,w,c
  4158  00163A  224C               	addwfc	(??_vfpfcnvrt+3)^0,f,c
  4159  00163C  504C               	movf	(??_vfpfcnvrt+3)^0,w,c
  4160  00163E  E10A               	bnz	u5890
  4161  001640  0E0A               	movlw	10
  4162  001642  5C4B               	subwf	(??_vfpfcnvrt+2)^0,w,c
  4163  001644  A0D8               	btfss	status,0,c
  4164  001646  EF27  F00B         	goto	u5891
  4165  00164A  EF2A  F00B         	goto	u5890
  4166  00164E                     u5891:
  4167  00164E  0E01               	movlw	1
  4168  001650  EF2B  F00B         	goto	u5900
  4169  001654                     u5890:
  4170  001654  0E00               	movlw	0
  4171  001656                     u5900:
  4172  001656  0100               	movlb	0	; () banked
  4173  001658  6FA2               	movwf	_vfpfcnvrt$1269& (0+255),b
  4174  00165A  6BA3               	clrf	(_vfpfcnvrt$1269+1)& (0+255),b
  4175  00165C                     
  4176                           ; BSR set to: 0
  4177  00165C  51A2               	movf	_vfpfcnvrt$1269& (0+255),w,b
  4178  00165E  11A3               	iorwf	(_vfpfcnvrt$1269+1)& (0+255),w,b
  4179  001660  A4D8               	btfss	status,2,c
  4180  001662  EF35  F00B         	goto	u5911
  4181  001666  EF37  F00B         	goto	u5910
  4182  00166A                     u5911:
  4183  00166A  EFFA  F00A         	goto	l4571
  4184  00166E                     u5910:
  4185  00166E                     l4579:
  4186                           
  4187                           ; BSR set to: 0
  4188                           ;/Applications/microchip/xc8/v2.31/pic/sources/c99/common/doprnt.c: 762:         if ((*f
      +                          mt)[0] == '.') {
  4189  00166E  C045  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  4190  001672  C046  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  4191  001676  CFDE FFF6          	movff	postinc2,tblptrl
  4192  00167A  CFDE FFF7          	movff	postinc2,tblptrh
  4193  00167E  0E07               	movlw	(high __ramtop+-1)
  4194  001680  64F7               	cpfsgt	tblptrh,c
  4195  001682  D003               	bra	u5927
  4196  001684  0008               	tblrd		*
  4197  001686  50F5               	movf	tablat,w,c
  4198  001688  D005               	bra	u5920
  4199  00168A                     u5927:
  4200  00168A  CFF6 FFE1          	movff	tblptrl,fsr1l
  4201  00168E  CFF7 FFE2          	movff	tblptrh,fsr1h
  4202  001692  50E7               	movf	indf1,w,c
  4203  001694                     u5920:
  4204  001694  0A2E               	xorlw	46
  4205  001696  A4D8               	btfss	status,2,c
  4206  001698  EF50  F00B         	goto	u5931
  4207  00169C  EF52  F00B         	goto	u5930
  4208  0016A0                     u5931:
  4209  0016A0  EFE3  F00B         	goto	l4599
  4210  0016A4                     u5930:
  4211  0016A4                     
  4212                           ;/Applications/microchip/xc8/v2.31/pic/sources/c99/common/doprnt.c: 763:             pre
      +                          c = 0;
  4213  0016A4  0E00               	movlw	0
  4214  0016A6  0100               	movlb	0	; () banked
  4215  0016A8  6FD1               	movwf	(_prec+1)& (0+255),b
  4216  0016AA  0E00               	movlw	0
  4217  0016AC  6FD0               	movwf	_prec& (0+255),b
  4218  0016AE                     
  4219                           ; BSR set to: 0
  4220                           ;/Applications/microchip/xc8/v2.31/pic/sources/c99/common/doprnt.c: 764:             ++*
      +                          fmt;
  4221  0016AE  C045  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  4222  0016B2  C046  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  4223  0016B6  2ADE               	incf	postinc2,f,c
  4224  0016B8  0E00               	movlw	0
  4225  0016BA  22DD               	addwfc	postdec2,f,c
  4226  0016BC                     
  4227                           ; BSR set to: 0
  4228                           ;/Applications/microchip/xc8/v2.31/pic/sources/c99/common/doprnt.c: 765:             if 
      +                          ((*fmt)[0] == '*') {
  4229  0016BC  C045  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  4230  0016C0  C046  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  4231  0016C4  CFDE FFF6          	movff	postinc2,tblptrl
  4232  0016C8  CFDE FFF7          	movff	postinc2,tblptrh
  4233  0016CC  0E07               	movlw	(high __ramtop+-1)
  4234  0016CE  64F7               	cpfsgt	tblptrh,c
  4235  0016D0  D003               	bra	u5947
  4236  0016D2  0008               	tblrd		*
  4237  0016D4  50F5               	movf	tablat,w,c
  4238  0016D6  D005               	bra	u5940
  4239  0016D8                     u5947:
  4240  0016D8  CFF6 FFE1          	movff	tblptrl,fsr1l
  4241  0016DC  CFF7 FFE2          	movff	tblptrh,fsr1h
  4242  0016E0  50E7               	movf	indf1,w,c
  4243  0016E2                     u5940:
  4244  0016E2  0A2A               	xorlw	42
  4245  0016E4  A4D8               	btfss	status,2,c
  4246  0016E6  EF77  F00B         	goto	u5951
  4247  0016EA  EF79  F00B         	goto	u5950
  4248  0016EE                     u5951:
  4249  0016EE  EF96  F00B         	goto	l4589
  4250  0016F2                     u5950:
  4251  0016F2                     
  4252                           ;/Applications/microchip/xc8/v2.31/pic/sources/c99/common/doprnt.c: 766:                
      +                           ++*fmt;
  4253  0016F2  C045  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  4254  0016F6  C046  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  4255  0016FA  2ADE               	incf	postinc2,f,c
  4256  0016FC  0E00               	movlw	0
  4257  0016FE  22DD               	addwfc	postdec2,f,c
  4258                           
  4259                           ;/Applications/microchip/xc8/v2.31/pic/sources/c99/common/doprnt.c: 767:                
      +                           prec = (*(int *)__va_arg(*(int **)ap, (int)0));
  4260  001700  C047  FFD9         	movff	vfpfcnvrt@ap,fsr2l
  4261  001704  C048  FFDA         	movff	vfpfcnvrt@ap+1,fsr2h
  4262  001708  CFDF F049          	movff	indf2,??_vfpfcnvrt
  4263  00170C  0E02               	movlw	2
  4264  00170E  26DE               	addwf	postinc2,f,c
  4265  001710  CFDF F04A          	movff	indf2,??_vfpfcnvrt+1
  4266  001714  0E00               	movlw	0
  4267  001716  22DD               	addwfc	postdec2,f,c
  4268  001718  C049  FFD9         	movff	??_vfpfcnvrt,fsr2l
  4269  00171C  C04A  FFDA         	movff	??_vfpfcnvrt+1,fsr2h
  4270  001720  CFDE F0D0          	movff	postinc2,_prec
  4271  001724  CFDD F0D1          	movff	postdec2,_prec+1
  4272                           
  4273                           ;/Applications/microchip/xc8/v2.31/pic/sources/c99/common/doprnt.c: 768:             } e
      +                          lse {
  4274  001728  EFE3  F00B         	goto	l4599
  4275  00172C                     l4589:
  4276                           
  4277                           ;/Applications/microchip/xc8/v2.31/pic/sources/c99/common/doprnt.c: 769:                
      +                           prec = atoi(*fmt);
  4278  00172C  C045  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  4279  001730  C046  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  4280  001734  CFDE F008          	movff	postinc2,atoi@s
  4281  001738  CFDD F009          	movff	postdec2,atoi@s+1
  4282  00173C  EC45  F01A         	call	_atoi	;wreg free
  4283  001740  C008  F0D0         	movff	?_atoi,_prec
  4284  001744  C009  F0D1         	movff	?_atoi+1,_prec+1
  4285                           
  4286                           ;/Applications/microchip/xc8/v2.31/pic/sources/c99/common/doprnt.c: 770:                
      +                           while ((0 ? isdigit((*fmt)[0]) : ((unsigned)((*fmt)[0])-'0') < 10)) {
  4287  001748  EFAD  F00B         	goto	l4593
  4288  00174C                     l4591:
  4289                           
  4290                           ; BSR set to: 0
  4291                           ;/Applications/microchip/xc8/v2.31/pic/sources/c99/common/doprnt.c: 771:                
      +                               ++*fmt;
  4292  00174C  C045  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  4293  001750  C046  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  4294  001754  2ADE               	incf	postinc2,f,c
  4295  001756  0E00               	movlw	0
  4296  001758  22DD               	addwfc	postdec2,f,c
  4297  00175A                     l4593:
  4298  00175A  0ED0               	movlw	208
  4299  00175C  6E49               	movwf	??_vfpfcnvrt^0,c
  4300  00175E  0EFF               	movlw	255
  4301  001760  6E4A               	movwf	(??_vfpfcnvrt+1)^0,c
  4302  001762  C045  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  4303  001766  C046  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  4304  00176A  CFDE FFF6          	movff	postinc2,tblptrl
  4305  00176E  CFDE FFF7          	movff	postinc2,tblptrh
  4306  001772  0E07               	movlw	(high __ramtop+-1)
  4307  001774  64F7               	cpfsgt	tblptrh,c
  4308  001776  D003               	bra	u5967
  4309  001778  0008               	tblrd		*
  4310  00177A  50F5               	movf	tablat,w,c
  4311  00177C  D005               	bra	u5960
  4312  00177E                     u5967:
  4313  00177E  CFF6 FFE1          	movff	tblptrl,fsr1l
  4314  001782  CFF7 FFE2          	movff	tblptrh,fsr1h
  4315  001786  50E7               	movf	indf1,w,c
  4316  001788                     u5960:
  4317  001788  6E4B               	movwf	(??_vfpfcnvrt+2)^0,c
  4318  00178A  6A4C               	clrf	(??_vfpfcnvrt+3)^0,c
  4319  00178C  5049               	movf	??_vfpfcnvrt^0,w,c
  4320  00178E  264B               	addwf	(??_vfpfcnvrt+2)^0,f,c
  4321  001790  504A               	movf	(??_vfpfcnvrt+1)^0,w,c
  4322  001792  224C               	addwfc	(??_vfpfcnvrt+3)^0,f,c
  4323  001794  504C               	movf	(??_vfpfcnvrt+3)^0,w,c
  4324  001796  E10A               	bnz	u5970
  4325  001798  0E0A               	movlw	10
  4326  00179A  5C4B               	subwf	(??_vfpfcnvrt+2)^0,w,c
  4327  00179C  A0D8               	btfss	status,0,c
  4328  00179E  EFD3  F00B         	goto	u5971
  4329  0017A2  EFD6  F00B         	goto	u5970
  4330  0017A6                     u5971:
  4331  0017A6  0E01               	movlw	1
  4332  0017A8  EFD7  F00B         	goto	u5980
  4333  0017AC                     u5970:
  4334  0017AC  0E00               	movlw	0
  4335  0017AE                     u5980:
  4336  0017AE  0100               	movlb	0	; () banked
  4337  0017B0  6FA4               	movwf	_vfpfcnvrt$1270& (0+255),b
  4338  0017B2  6BA5               	clrf	(_vfpfcnvrt$1270+1)& (0+255),b
  4339  0017B4                     
  4340                           ; BSR set to: 0
  4341  0017B4  51A4               	movf	_vfpfcnvrt$1270& (0+255),w,b
  4342  0017B6  11A5               	iorwf	(_vfpfcnvrt$1270+1)& (0+255),w,b
  4343  0017B8  A4D8               	btfss	status,2,c
  4344  0017BA  EFE1  F00B         	goto	u5991
  4345  0017BE  EFE3  F00B         	goto	u5990
  4346  0017C2                     u5991:
  4347  0017C2  EFA6  F00B         	goto	l4591
  4348  0017C6                     u5990:
  4349  0017C6                     l4599:
  4350                           
  4351                           ;/Applications/microchip/xc8/v2.31/pic/sources/c99/common/doprnt.c: 779:         ct[0] =
      +                           (char)tolower((int)(*fmt)[0]);
  4352  0017C6  C045  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  4353  0017CA  C046  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  4354  0017CE  CFDE FFF6          	movff	postinc2,tblptrl
  4355  0017D2  CFDE FFF7          	movff	postinc2,tblptrh
  4356  0017D6  0E07               	movlw	(high __ramtop+-1)
  4357  0017D8  64F7               	cpfsgt	tblptrh,c
  4358  0017DA  D003               	bra	u6007
  4359  0017DC  0008               	tblrd		*
  4360  0017DE  50F5               	movf	tablat,w,c
  4361  0017E0  D005               	bra	u6000
  4362  0017E2                     u6007:
  4363  0017E2  CFF6 FFE1          	movff	tblptrl,fsr1l
  4364  0017E6  CFF7 FFE2          	movff	tblptrh,fsr1h
  4365  0017EA  50E7               	movf	indf1,w,c
  4366  0017EC                     u6000:
  4367  0017EC  6E49               	movwf	??_vfpfcnvrt^0,c
  4368  0017EE  5049               	movf	??_vfpfcnvrt^0,w,c
  4369  0017F0  6E07               	movwf	tolower@c^0,c
  4370  0017F2  6A08               	clrf	(tolower@c+1)^0,c
  4371  0017F4  EC57  F024         	call	_tolower	;wreg free
  4372  0017F8  5007               	movf	?_tolower^0,w,c
  4373  0017FA  0100               	movlb	0	; () banked
  4374  0017FC  6FAC               	movwf	vfpfcnvrt@ct& (0+255),b
  4375  0017FE                     
  4376                           ; BSR set to: 0
  4377                           ;/Applications/microchip/xc8/v2.31/pic/sources/c99/common/doprnt.c: 780:         if (ct[
      +                          0]) {
  4378  0017FE  51AC               	movf	vfpfcnvrt@ct& (0+255),w,b
  4379  001800  B4D8               	btfsc	status,2,c
  4380  001802  EF05  F00C         	goto	u6011
  4381  001806  EF07  F00C         	goto	u6010
  4382  00180A                     u6011:
  4383  00180A  EF59  F00C         	goto	l4609
  4384  00180E                     u6010:
  4385  00180E                     
  4386                           ; BSR set to: 0
  4387                           ;/Applications/microchip/xc8/v2.31/pic/sources/c99/common/doprnt.c: 781:             ct[
      +                          1] = (char)tolower((int)(*fmt)[1]);
  4388  00180E  C045  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  4389  001812  C046  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  4390  001816  CFDE F049          	movff	postinc2,??_vfpfcnvrt
  4391  00181A  CFDD F04A          	movff	postdec2,??_vfpfcnvrt+1
  4392  00181E  0E01               	movlw	1
  4393  001820  2649               	addwf	??_vfpfcnvrt^0,f,c
  4394  001822  0E00               	movlw	0
  4395  001824  224A               	addwfc	(??_vfpfcnvrt+1)^0,f,c
  4396  001826  C049  FFF6         	movff	??_vfpfcnvrt,tblptrl
  4397  00182A  C04A  FFF7         	movff	??_vfpfcnvrt+1,tblptrh
  4398  00182E  6AF8               	clrf	tblptru,c
  4399  001830  0E07               	movlw	(high __ramtop+-1)
  4400  001832  64F7               	cpfsgt	tblptrh,c
  4401  001834  D003               	bra	u6027
  4402  001836  0008               	tblrd		*
  4403  001838  50F5               	movf	tablat,w,c
  4404  00183A  D005               	bra	u6020
  4405  00183C                     u6027:
  4406  00183C  CFF6 FFE1          	movff	tblptrl,fsr1l
  4407  001840  CFF7 FFE2          	movff	tblptrh,fsr1h
  4408  001844  50E7               	movf	indf1,w,c
  4409  001846                     u6020:
  4410  001846  6E4B               	movwf	(??_vfpfcnvrt+2)^0,c
  4411  001848  504B               	movf	(??_vfpfcnvrt+2)^0,w,c
  4412  00184A  6E07               	movwf	tolower@c^0,c
  4413  00184C  6A08               	clrf	(tolower@c+1)^0,c
  4414  00184E  EC57  F024         	call	_tolower	;wreg free
  4415  001852  5007               	movf	?_tolower^0,w,c
  4416  001854  0100               	movlb	0	; () banked
  4417  001856  6FAD               	movwf	(vfpfcnvrt@ct+1)& (0+255),b
  4418  001858                     
  4419                           ; BSR set to: 0
  4420                           ;/Applications/microchip/xc8/v2.31/pic/sources/c99/common/doprnt.c: 782:             if 
      +                          (ct[1]) {
  4421  001858  51AD               	movf	(vfpfcnvrt@ct+1)& (0+255),w,b
  4422  00185A  B4D8               	btfsc	status,2,c
  4423  00185C  EF32  F00C         	goto	u6031
  4424  001860  EF34  F00C         	goto	u6030
  4425  001864                     u6031:
  4426  001864  EF59  F00C         	goto	l4609
  4427  001868                     u6030:
  4428  001868                     
  4429                           ; BSR set to: 0
  4430                           ;/Applications/microchip/xc8/v2.31/pic/sources/c99/common/doprnt.c: 783:                
      +                           ct[2] = (char)tolower((int)(*fmt)[2]);
  4431  001868  C045  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  4432  00186C  C046  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  4433  001870  CFDE F049          	movff	postinc2,??_vfpfcnvrt
  4434  001874  CFDD F04A          	movff	postdec2,??_vfpfcnvrt+1
  4435  001878  0E02               	movlw	2
  4436  00187A  2649               	addwf	??_vfpfcnvrt^0,f,c
  4437  00187C  0E00               	movlw	0
  4438  00187E  224A               	addwfc	(??_vfpfcnvrt+1)^0,f,c
  4439  001880  C049  FFF6         	movff	??_vfpfcnvrt,tblptrl
  4440  001884  C04A  FFF7         	movff	??_vfpfcnvrt+1,tblptrh
  4441  001888  6AF8               	clrf	tblptru,c
  4442  00188A  0E07               	movlw	(high __ramtop+-1)
  4443  00188C  64F7               	cpfsgt	tblptrh,c
  4444  00188E  D003               	bra	u6047
  4445  001890  0008               	tblrd		*
  4446  001892  50F5               	movf	tablat,w,c
  4447  001894  D005               	bra	u6040
  4448  001896                     u6047:
  4449  001896  CFF6 FFE1          	movff	tblptrl,fsr1l
  4450  00189A  CFF7 FFE2          	movff	tblptrh,fsr1h
  4451  00189E  50E7               	movf	indf1,w,c
  4452  0018A0                     u6040:
  4453  0018A0  6E4B               	movwf	(??_vfpfcnvrt+2)^0,c
  4454  0018A2  504B               	movf	(??_vfpfcnvrt+2)^0,w,c
  4455  0018A4  6E07               	movwf	tolower@c^0,c
  4456  0018A6  6A08               	clrf	(tolower@c+1)^0,c
  4457  0018A8  EC57  F024         	call	_tolower	;wreg free
  4458  0018AC  5007               	movf	?_tolower^0,w,c
  4459  0018AE  0100               	movlb	0	; () banked
  4460  0018B0  6FAE               	movwf	(vfpfcnvrt@ct+2)& (0+255),b
  4461  0018B2                     l4609:
  4462                           
  4463                           ; BSR set to: 0
  4464                           ;/Applications/microchip/xc8/v2.31/pic/sources/c99/common/doprnt.c: 814:         if (*fm
      +                          t[0] == 'c') {
  4465  0018B2  C045  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  4466  0018B6  C046  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  4467  0018BA  CFDE FFF6          	movff	postinc2,tblptrl
  4468  0018BE  CFDE FFF7          	movff	postinc2,tblptrh
  4469  0018C2  0E07               	movlw	(high __ramtop+-1)
  4470  0018C4  64F7               	cpfsgt	tblptrh,c
  4471  0018C6  D003               	bra	u6057
  4472  0018C8  0008               	tblrd		*
  4473  0018CA  50F5               	movf	tablat,w,c
  4474  0018CC  D005               	bra	u6050
  4475  0018CE                     u6057:
  4476  0018CE  CFF6 FFE1          	movff	tblptrl,fsr1l
  4477  0018D2  CFF7 FFE2          	movff	tblptrh,fsr1h
  4478  0018D6  50E7               	movf	indf1,w,c
  4479  0018D8                     u6050:
  4480  0018D8  0A63               	xorlw	99
  4481  0018DA  A4D8               	btfss	status,2,c
  4482  0018DC  EF72  F00C         	goto	u6061
  4483  0018E0  EF74  F00C         	goto	u6060
  4484  0018E4                     u6061:
  4485  0018E4  EF9C  F00C         	goto	l4617
  4486  0018E8                     u6060:
  4487  0018E8                     
  4488                           ;/Applications/microchip/xc8/v2.31/pic/sources/c99/common/doprnt.c: 815:             ++*
      +                          fmt;
  4489  0018E8  C045  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  4490  0018EC  C046  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  4491  0018F0  2ADE               	incf	postinc2,f,c
  4492  0018F2  0E00               	movlw	0
  4493  0018F4  22DD               	addwfc	postdec2,f,c
  4494                           
  4495                           ;/Applications/microchip/xc8/v2.31/pic/sources/c99/common/doprnt.c: 816:             c =
      +                           (unsigned char)(*(int *)__va_arg(*(int **)ap, (int)0));
  4496  0018F6  C047  FFD9         	movff	vfpfcnvrt@ap,fsr2l
  4497  0018FA  C048  FFDA         	movff	vfpfcnvrt@ap+1,fsr2h
  4498  0018FE  CFDF F049          	movff	indf2,??_vfpfcnvrt
  4499  001902  0E02               	movlw	2
  4500  001904  26DE               	addwf	postinc2,f,c
  4501  001906  CFDF F04A          	movff	indf2,??_vfpfcnvrt+1
  4502  00190A  0E00               	movlw	0
  4503  00190C  22DD               	addwfc	postdec2,f,c
  4504  00190E  C049  FFD9         	movff	??_vfpfcnvrt,fsr2l
  4505  001912  C04A  FFDA         	movff	??_vfpfcnvrt+1,fsr2h
  4506  001916  50DF               	movf	indf2,w,c
  4507  001918  0100               	movlb	0	; () banked
  4508  00191A  6FAF               	movwf	vfpfcnvrt@c& (0+255),b
  4509  00191C                     
  4510                           ; BSR set to: 0
  4511                           ;/Applications/microchip/xc8/v2.31/pic/sources/c99/common/doprnt.c: 817:             ret
      +                          urn ctoa(fp, c);
  4512  00191C  C043  F00D         	movff	vfpfcnvrt@fp,ctoa@fp
  4513  001920  C044  F00E         	movff	vfpfcnvrt@fp+1,ctoa@fp+1
  4514  001924  C0AF  F00F         	movff	vfpfcnvrt@c,ctoa@c
  4515  001928  EC41  F020         	call	_ctoa	;wreg free
  4516  00192C  C00D  F043         	movff	?_ctoa,?_vfpfcnvrt
  4517  001930  C00E  F044         	movff	?_ctoa+1,?_vfpfcnvrt+1
  4518  001934  EFB3  F00E         	goto	l1091
  4519  001938                     l4617:
  4520                           
  4521                           ;/Applications/microchip/xc8/v2.31/pic/sources/c99/common/doprnt.c: 847:         if ((*f
      +                          mt[0] == 'd') || (*fmt[0] == 'i')) {
  4522  001938  C045  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  4523  00193C  C046  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  4524  001940  CFDE FFF6          	movff	postinc2,tblptrl
  4525  001944  CFDE FFF7          	movff	postinc2,tblptrh
  4526  001948  0E07               	movlw	(high __ramtop+-1)
  4527  00194A  64F7               	cpfsgt	tblptrh,c
  4528  00194C  D003               	bra	u6077
  4529  00194E  0008               	tblrd		*
  4530  001950  50F5               	movf	tablat,w,c
  4531  001952  D005               	bra	u6070
  4532  001954                     u6077:
  4533  001954  CFF6 FFE1          	movff	tblptrl,fsr1l
  4534  001958  CFF7 FFE2          	movff	tblptrh,fsr1h
  4535  00195C  50E7               	movf	indf1,w,c
  4536  00195E                     u6070:
  4537  00195E  0A64               	xorlw	100
  4538  001960  B4D8               	btfsc	status,2,c
  4539  001962  EFB5  F00C         	goto	u6081
  4540  001966  EFB7  F00C         	goto	u6080
  4541  00196A                     u6081:
  4542  00196A  EFD2  F00C         	goto	l4621
  4543  00196E                     u6080:
  4544  00196E  C045  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  4545  001972  C046  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  4546  001976  CFDE FFF6          	movff	postinc2,tblptrl
  4547  00197A  CFDE FFF7          	movff	postinc2,tblptrh
  4548  00197E  0E07               	movlw	(high __ramtop+-1)
  4549  001980  64F7               	cpfsgt	tblptrh,c
  4550  001982  D003               	bra	u6097
  4551  001984  0008               	tblrd		*
  4552  001986  50F5               	movf	tablat,w,c
  4553  001988  D005               	bra	u6090
  4554  00198A                     u6097:
  4555  00198A  CFF6 FFE1          	movff	tblptrl,fsr1l
  4556  00198E  CFF7 FFE2          	movff	tblptrh,fsr1h
  4557  001992  50E7               	movf	indf1,w,c
  4558  001994                     u6090:
  4559  001994  0A69               	xorlw	105
  4560  001996  A4D8               	btfss	status,2,c
  4561  001998  EFD0  F00C         	goto	u6101
  4562  00199C  EFD2  F00C         	goto	u6100
  4563  0019A0                     u6101:
  4564  0019A0  EF13  F00D         	goto	l4627
  4565  0019A4                     u6100:
  4566  0019A4                     l4621:
  4567                           
  4568                           ;/Applications/microchip/xc8/v2.31/pic/sources/c99/common/doprnt.c: 849:             ++*
      +                          fmt;
  4569  0019A4  C045  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  4570  0019A8  C046  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  4571  0019AC  2ADE               	incf	postinc2,f,c
  4572  0019AE  0E00               	movlw	0
  4573  0019B0  22DD               	addwfc	postdec2,f,c
  4574                           
  4575                           ;/Applications/microchip/xc8/v2.31/pic/sources/c99/common/doprnt.c: 850:             ll 
      +                          = (long long)(*(int *)__va_arg(*(int **)ap, (int)0));
  4576  0019B2  C047  FFD9         	movff	vfpfcnvrt@ap,fsr2l
  4577  0019B6  C048  FFDA         	movff	vfpfcnvrt@ap+1,fsr2h
  4578  0019BA  CFDF F049          	movff	indf2,??_vfpfcnvrt
  4579  0019BE  0E02               	movlw	2
  4580  0019C0  26DE               	addwf	postinc2,f,c
  4581  0019C2  CFDF F04A          	movff	indf2,??_vfpfcnvrt+1
  4582  0019C6  0E00               	movlw	0
  4583  0019C8  22DD               	addwfc	postdec2,f,c
  4584  0019CA  C049  FFD9         	movff	??_vfpfcnvrt,fsr2l
  4585  0019CE  C04A  FFDA         	movff	??_vfpfcnvrt+1,fsr2h
  4586  0019D2  CFDE F098          	movff	postinc2,vfpfcnvrt@ll
  4587  0019D6  CFDD F099          	movff	postdec2,vfpfcnvrt@ll+1
  4588  0019DA  0100               	movlb	0	; () banked
  4589  0019DC  0E00               	movlw	0
  4590  0019DE  BF99               	btfsc	(vfpfcnvrt@ll+1)& (0+255),7,b
  4591  0019E0  0EFF               	movlw	-1
  4592  0019E2  6F9A               	movwf	(vfpfcnvrt@ll+2)& (0+255),b
  4593  0019E4  6F9B               	movwf	(vfpfcnvrt@ll+3)& (0+255),b
  4594  0019E6  6F9C               	movwf	(vfpfcnvrt@ll+4)& (0+255),b
  4595  0019E8  6F9D               	movwf	(vfpfcnvrt@ll+5)& (0+255),b
  4596  0019EA  6F9E               	movwf	(vfpfcnvrt@ll+6)& (0+255),b
  4597  0019EC  6F9F               	movwf	(vfpfcnvrt@ll+7)& (0+255),b
  4598  0019EE                     
  4599                           ; BSR set to: 0
  4600                           ;/Applications/microchip/xc8/v2.31/pic/sources/c99/common/doprnt.c: 852:             ret
      +                          urn dtoa(fp, ll);
  4601  0019EE  C043  F01F         	movff	vfpfcnvrt@fp,dtoa@fp
  4602  0019F2  C044  F020         	movff	vfpfcnvrt@fp+1,dtoa@fp+1
  4603  0019F6  C098  F021         	movff	vfpfcnvrt@ll,dtoa@d
  4604  0019FA  C099  F022         	movff	vfpfcnvrt@ll+1,dtoa@d+1
  4605  0019FE  C09A  F023         	movff	vfpfcnvrt@ll+2,dtoa@d+2
  4606  001A02  C09B  F024         	movff	vfpfcnvrt@ll+3,dtoa@d+3
  4607  001A06  C09C  F025         	movff	vfpfcnvrt@ll+4,dtoa@d+4
  4608  001A0A  C09D  F026         	movff	vfpfcnvrt@ll+5,dtoa@d+5
  4609  001A0E  C09E  F027         	movff	vfpfcnvrt@ll+6,dtoa@d+6
  4610  001A12  C09F  F028         	movff	vfpfcnvrt@ll+7,dtoa@d+7
  4611  001A16  EC8F  F016         	call	_dtoa	;wreg free
  4612  001A1A  C01F  F043         	movff	?_dtoa,?_vfpfcnvrt
  4613  001A1E  C020  F044         	movff	?_dtoa+1,?_vfpfcnvrt+1
  4614  001A22  EFB3  F00E         	goto	l1091
  4615  001A26                     l4627:
  4616                           
  4617                           ;/Applications/microchip/xc8/v2.31/pic/sources/c99/common/doprnt.c: 942:         if (ct[
      +                          0] == 'f') {
  4618  001A26  0E66               	movlw	102
  4619  001A28  0100               	movlb	0	; () banked
  4620  001A2A  19AC               	xorwf	vfpfcnvrt@ct& (0+255),w,b
  4621  001A2C  A4D8               	btfss	status,2,c
  4622  001A2E  EF1B  F00D         	goto	u6111
  4623  001A32  EF1D  F00D         	goto	u6110
  4624  001A36                     u6111:
  4625  001A36  EF67  F00D         	goto	l4639
  4626  001A3A                     u6110:
  4627  001A3A                     
  4628                           ; BSR set to: 0
  4629                           ;/Applications/microchip/xc8/v2.31/pic/sources/c99/common/doprnt.c: 944:             c =
      +                           (*fmt)[0];
  4630  001A3A  C045  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  4631  001A3E  C046  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  4632  001A42  CFDE FFF6          	movff	postinc2,tblptrl
  4633  001A46  CFDE FFF7          	movff	postinc2,tblptrh
  4634  001A4A  0E07               	movlw	(high __ramtop+-1)
  4635  001A4C  64F7               	cpfsgt	tblptrh,c
  4636  001A4E  D003               	bra	u6127
  4637  001A50  0008               	tblrd		*
  4638  001A52  50F5               	movf	tablat,w,c
  4639  001A54  D005               	bra	u6120
  4640  001A56                     u6127:
  4641  001A56  CFF6 FFE1          	movff	tblptrl,fsr1l
  4642  001A5A  CFF7 FFE2          	movff	tblptrh,fsr1h
  4643  001A5E  50E7               	movf	indf1,w,c
  4644  001A60                     u6120:
  4645  001A60  0100               	movlb	0	; () banked
  4646  001A62  6FAF               	movwf	vfpfcnvrt@c& (0+255),b
  4647  001A64                     
  4648                           ; BSR set to: 0
  4649                           ;/Applications/microchip/xc8/v2.31/pic/sources/c99/common/doprnt.c: 945:             ++*
      +                          fmt;
  4650  001A64  C045  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  4651  001A68  C046  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  4652  001A6C  2ADE               	incf	postinc2,f,c
  4653  001A6E  0E00               	movlw	0
  4654  001A70  22DD               	addwfc	postdec2,f,c
  4655  001A72                     
  4656                           ; BSR set to: 0
  4657                           ;/Applications/microchip/xc8/v2.31/pic/sources/c99/common/doprnt.c: 946:             f =
      +                           (long double)(*(double *)__va_arg(*(double **)ap, (double)0));
  4658  001A72  C047  FFD9         	movff	vfpfcnvrt@ap,fsr2l
  4659  001A76  C048  FFDA         	movff	vfpfcnvrt@ap+1,fsr2h
  4660  001A7A  CFDF F049          	movff	indf2,??_vfpfcnvrt
  4661  001A7E  0E04               	movlw	4
  4662  001A80  26DE               	addwf	postinc2,f,c
  4663  001A82  CFDF F04A          	movff	indf2,??_vfpfcnvrt+1
  4664  001A86  0E00               	movlw	0
  4665  001A88  22DD               	addwfc	postdec2,f,c
  4666  001A8A  C049  FFD9         	movff	??_vfpfcnvrt,fsr2l
  4667  001A8E  C04A  FFDA         	movff	??_vfpfcnvrt+1,fsr2h
  4668  001A92  CFDE F0A8          	movff	postinc2,vfpfcnvrt@f
  4669  001A96  CFDE F0A9          	movff	postinc2,vfpfcnvrt@f+1
  4670  001A9A  CFDE F0AA          	movff	postinc2,vfpfcnvrt@f+2
  4671  001A9E  CFDE F0AB          	movff	postinc2,vfpfcnvrt@f+3
  4672  001AA2                     l4635:
  4673                           
  4674                           ; BSR set to: 0
  4675                           ;/Applications/microchip/xc8/v2.31/pic/sources/c99/common/doprnt.c: 948:             ret
      +                          urn efgtoa(fp, f, c);
  4676  001AA2  C043  F034         	movff	vfpfcnvrt@fp,efgtoa@fp
  4677  001AA6  C044  F035         	movff	vfpfcnvrt@fp+1,efgtoa@fp+1
  4678  001AAA  C0A8  F036         	movff	vfpfcnvrt@f,efgtoa@f
  4679  001AAE  C0A9  F037         	movff	vfpfcnvrt@f+1,efgtoa@f+1
  4680  001AB2  C0AA  F038         	movff	vfpfcnvrt@f+2,efgtoa@f+2
  4681  001AB6  C0AB  F039         	movff	vfpfcnvrt@f+3,efgtoa@f+3
  4682  001ABA  C0AF  F03A         	movff	vfpfcnvrt@c,efgtoa@c
  4683  001ABE  EC4C  F004         	call	_efgtoa	;wreg free
  4684  001AC2  C034  F043         	movff	?_efgtoa,?_vfpfcnvrt
  4685  001AC6  C035  F044         	movff	?_efgtoa+1,?_vfpfcnvrt+1
  4686  001ACA  EFB3  F00E         	goto	l1091
  4687  001ACE                     l4639:
  4688                           
  4689                           ; BSR set to: 0
  4690                           ;/Applications/microchip/xc8/v2.31/pic/sources/c99/common/doprnt.c: 950:         if (!st
      +                          rncmp(ct, "lf", ((sizeof("lf")/sizeof("lf"[0]))-1))) {
  4691  001ACE  0EAC               	movlw	low vfpfcnvrt@ct
  4692  001AD0  6E01               	movwf	strncmp@_l^0,c
  4693  001AD2  0E00               	movlw	high vfpfcnvrt@ct
  4694  001AD4  6E02               	movwf	(strncmp@_l+1)^0,c
  4695  001AD6  0E94               	movlw	low STR_19
  4696  001AD8  6E03               	movwf	strncmp@_r^0,c
  4697  001ADA  0E08               	movlw	high STR_19
  4698  001ADC  6E04               	movwf	(strncmp@_r+1)^0,c
  4699  001ADE  0E00               	movlw	0
  4700  001AE0  6E06               	movwf	(strncmp@n+1)^0,c
  4701  001AE2  0E02               	movlw	2
  4702  001AE4  6E05               	movwf	strncmp@n^0,c
  4703  001AE6  ECAD  F020         	call	_strncmp	;wreg free
  4704  001AEA  5001               	movf	?_strncmp^0,w,c
  4705  001AEC  1002               	iorwf	(?_strncmp+1)^0,w,c
  4706  001AEE  A4D8               	btfss	status,2,c
  4707  001AF0  EF7C  F00D         	goto	u6131
  4708  001AF4  EF7E  F00D         	goto	u6130
  4709  001AF8                     u6131:
  4710  001AF8  EF0E  F00E         	goto	l4655
  4711  001AFC                     u6130:
  4712  001AFC                     
  4713                           ;/Applications/microchip/xc8/v2.31/pic/sources/c99/common/doprnt.c: 953:             if 
      +                          ((0 ? isupper((int)(*fmt)[0]) : ((unsigned)((int)(*fmt)[0])-'A') < 26)) {
  4714  001AFC  C045  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  4715  001B00  C046  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  4716  001B04  CFDE F049          	movff	postinc2,??_vfpfcnvrt
  4717  001B08  CFDD F04A          	movff	postdec2,??_vfpfcnvrt+1
  4718  001B0C  0E01               	movlw	1
  4719  001B0E  2649               	addwf	??_vfpfcnvrt^0,f,c
  4720  001B10  0E00               	movlw	0
  4721  001B12  224A               	addwfc	(??_vfpfcnvrt+1)^0,f,c
  4722  001B14  C049  FFF6         	movff	??_vfpfcnvrt,tblptrl
  4723  001B18  C04A  FFF7         	movff	??_vfpfcnvrt+1,tblptrh
  4724  001B1C  6AF8               	clrf	tblptru,c
  4725  001B1E  0E07               	movlw	(high __ramtop+-1)
  4726  001B20  64F7               	cpfsgt	tblptrh,c
  4727  001B22  D003               	bra	u6147
  4728  001B24  0008               	tblrd		*
  4729  001B26  50F5               	movf	tablat,w,c
  4730  001B28  D005               	bra	u6140
  4731  001B2A                     u6147:
  4732  001B2A  CFF6 FFE1          	movff	tblptrl,fsr1l
  4733  001B2E  CFF7 FFE2          	movff	tblptrh,fsr1h
  4734  001B32  50E7               	movf	indf1,w,c
  4735  001B34                     u6140:
  4736  001B34  0100               	movlb	0	; () banked
  4737  001B36  6FAF               	movwf	vfpfcnvrt@c& (0+255),b
  4738  001B38  0EBF               	movlw	191
  4739  001B3A  6E49               	movwf	??_vfpfcnvrt^0,c
  4740  001B3C  0EFF               	movlw	255
  4741  001B3E  6E4A               	movwf	(??_vfpfcnvrt+1)^0,c
  4742  001B40  C045  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  4743  001B44  C046  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  4744  001B48  CFDE FFF6          	movff	postinc2,tblptrl
  4745  001B4C  CFDE FFF7          	movff	postinc2,tblptrh
  4746  001B50  0E07               	movlw	(high __ramtop+-1)
  4747  001B52  64F7               	cpfsgt	tblptrh,c
  4748  001B54  D003               	bra	u6157
  4749  001B56  0008               	tblrd		*
  4750  001B58  50F5               	movf	tablat,w,c
  4751  001B5A  D005               	bra	u6150
  4752  001B5C                     u6157:
  4753  001B5C  CFF6 FFE1          	movff	tblptrl,fsr1l
  4754  001B60  CFF7 FFE2          	movff	tblptrh,fsr1h
  4755  001B64  50E7               	movf	indf1,w,c
  4756  001B66                     u6150:
  4757  001B66  6E4B               	movwf	(??_vfpfcnvrt+2)^0,c
  4758  001B68  6A4C               	clrf	(??_vfpfcnvrt+3)^0,c
  4759  001B6A  5049               	movf	??_vfpfcnvrt^0,w,c
  4760  001B6C  264B               	addwf	(??_vfpfcnvrt+2)^0,f,c
  4761  001B6E  504A               	movf	(??_vfpfcnvrt+1)^0,w,c
  4762  001B70  224C               	addwfc	(??_vfpfcnvrt+3)^0,f,c
  4763  001B72  504C               	movf	(??_vfpfcnvrt+3)^0,w,c
  4764  001B74  E10A               	bnz	u6160
  4765  001B76  0E1A               	movlw	26
  4766  001B78  5C4B               	subwf	(??_vfpfcnvrt+2)^0,w,c
  4767  001B7A  A0D8               	btfss	status,0,c
  4768  001B7C  EFC2  F00D         	goto	u6161
  4769  001B80  EFC5  F00D         	goto	u6160
  4770  001B84                     u6161:
  4771  001B84  0E01               	movlw	1
  4772  001B86  EFC6  F00D         	goto	u6170
  4773  001B8A                     u6160:
  4774  001B8A  0E00               	movlw	0
  4775  001B8C                     u6170:
  4776  001B8C  0100               	movlb	0	; () banked
  4777  001B8E  6FA6               	movwf	_vfpfcnvrt$1276& (0+255),b
  4778  001B90  6BA7               	clrf	(_vfpfcnvrt$1276+1)& (0+255),b
  4779  001B92                     
  4780                           ; BSR set to: 0
  4781  001B92  51A6               	movf	_vfpfcnvrt$1276& (0+255),w,b
  4782  001B94  11A7               	iorwf	(_vfpfcnvrt$1276+1)& (0+255),w,b
  4783  001B96  B4D8               	btfsc	status,2,c
  4784  001B98  EFD0  F00D         	goto	u6181
  4785  001B9C  EFD2  F00D         	goto	u6180
  4786  001BA0                     u6181:
  4787  001BA0  EFEC  F00D         	goto	l4649
  4788  001BA4                     u6180:
  4789  001BA4                     
  4790                           ; BSR set to: 0
  4791                           ;/Applications/microchip/xc8/v2.31/pic/sources/c99/common/doprnt.c: 954:                
      +                           f = (*(long double *)__va_arg(*(long double **)ap, (long double)0));
  4792  001BA4  C047  FFD9         	movff	vfpfcnvrt@ap,fsr2l
  4793  001BA8  C048  FFDA         	movff	vfpfcnvrt@ap+1,fsr2h
  4794  001BAC  CFDF F049          	movff	indf2,??_vfpfcnvrt
  4795  001BB0  0E04               	movlw	4
  4796  001BB2  26DE               	addwf	postinc2,f,c
  4797  001BB4  CFDF F04A          	movff	indf2,??_vfpfcnvrt+1
  4798  001BB8  0E00               	movlw	0
  4799  001BBA  22DD               	addwfc	postdec2,f,c
  4800  001BBC  C049  FFD9         	movff	??_vfpfcnvrt,fsr2l
  4801  001BC0  C04A  FFDA         	movff	??_vfpfcnvrt+1,fsr2h
  4802  001BC4  CFDE F0A8          	movff	postinc2,vfpfcnvrt@f
  4803  001BC8  CFDE F0A9          	movff	postinc2,vfpfcnvrt@f+1
  4804  001BCC  CFDE F0AA          	movff	postinc2,vfpfcnvrt@f+2
  4805  001BD0  CFDE F0AB          	movff	postinc2,vfpfcnvrt@f+3
  4806                           
  4807                           ;/Applications/microchip/xc8/v2.31/pic/sources/c99/common/doprnt.c: 955:             } e
      +                          lse {
  4808  001BD4  EF04  F00E         	goto	l1102
  4809  001BD8                     l4649:
  4810                           
  4811                           ; BSR set to: 0
  4812                           ;/Applications/microchip/xc8/v2.31/pic/sources/c99/common/doprnt.c: 956:                
      +                           f = (long double)(*(double *)__va_arg(*(double **)ap, (double)0));
  4813  001BD8  C047  FFD9         	movff	vfpfcnvrt@ap,fsr2l
  4814  001BDC  C048  FFDA         	movff	vfpfcnvrt@ap+1,fsr2h
  4815  001BE0  CFDF F049          	movff	indf2,??_vfpfcnvrt
  4816  001BE4  0E04               	movlw	4
  4817  001BE6  26DE               	addwf	postinc2,f,c
  4818  001BE8  CFDF F04A          	movff	indf2,??_vfpfcnvrt+1
  4819  001BEC  0E00               	movlw	0
  4820  001BEE  22DD               	addwfc	postdec2,f,c
  4821  001BF0  C049  FFD9         	movff	??_vfpfcnvrt,fsr2l
  4822  001BF4  C04A  FFDA         	movff	??_vfpfcnvrt+1,fsr2h
  4823  001BF8  CFDE F0A8          	movff	postinc2,vfpfcnvrt@f
  4824  001BFC  CFDE F0A9          	movff	postinc2,vfpfcnvrt@f+1
  4825  001C00  CFDE F0AA          	movff	postinc2,vfpfcnvrt@f+2
  4826  001C04  CFDE F0AB          	movff	postinc2,vfpfcnvrt@f+3
  4827  001C08                     l1102:
  4828                           
  4829                           ; BSR set to: 0
  4830                           ;/Applications/microchip/xc8/v2.31/pic/sources/c99/common/doprnt.c: 958:             *fm
      +                          t += ((sizeof("lf")/sizeof("lf"[0]))-1);
  4831  001C08  0E02               	movlw	2
  4832  001C0A  C045  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  4833  001C0E  C046  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  4834  001C12  26DE               	addwf	postinc2,f,c
  4835  001C14  0E00               	movlw	0
  4836  001C16  22DD               	addwfc	postdec2,f,c
  4837  001C18  EF51  F00D         	goto	l4635
  4838  001C1C                     l4655:
  4839                           
  4840                           ;/Applications/microchip/xc8/v2.31/pic/sources/c99/common/doprnt.c: 1099:         if (*f
      +                          mt[0] == 'n') {
  4841  001C1C  C045  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  4842  001C20  C046  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  4843  001C24  CFDE FFF6          	movff	postinc2,tblptrl
  4844  001C28  CFDE FFF7          	movff	postinc2,tblptrh
  4845  001C2C  0E07               	movlw	(high __ramtop+-1)
  4846  001C2E  64F7               	cpfsgt	tblptrh,c
  4847  001C30  D003               	bra	u6197
  4848  001C32  0008               	tblrd		*
  4849  001C34  50F5               	movf	tablat,w,c
  4850  001C36  D005               	bra	u6190
  4851  001C38                     u6197:
  4852  001C38  CFF6 FFE1          	movff	tblptrl,fsr1l
  4853  001C3C  CFF7 FFE2          	movff	tblptrh,fsr1h
  4854  001C40  50E7               	movf	indf1,w,c
  4855  001C42                     u6190:
  4856  001C42  0A6E               	xorlw	110
  4857  001C44  A4D8               	btfss	status,2,c
  4858  001C46  EF27  F00E         	goto	u6201
  4859  001C4A  EF29  F00E         	goto	u6200
  4860  001C4E                     u6201:
  4861  001C4E  EF52  F00E         	goto	l4665
  4862  001C52                     u6200:
  4863  001C52                     
  4864                           ;/Applications/microchip/xc8/v2.31/pic/sources/c99/common/doprnt.c: 1100:             ++
      +                          *fmt;
  4865  001C52  C045  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  4866  001C56  C046  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  4867  001C5A  2ADE               	incf	postinc2,f,c
  4868  001C5C  0E00               	movlw	0
  4869  001C5E  22DD               	addwfc	postdec2,f,c
  4870                           
  4871                           ;/Applications/microchip/xc8/v2.31/pic/sources/c99/common/doprnt.c: 1101:             vp
      +                           = (void *)(*(int * *)__va_arg(*(int * **)ap, (int *)0));
  4872  001C60  C047  FFD9         	movff	vfpfcnvrt@ap,fsr2l
  4873  001C64  C048  FFDA         	movff	vfpfcnvrt@ap+1,fsr2h
  4874  001C68  CFDF F049          	movff	indf2,??_vfpfcnvrt
  4875  001C6C  0E02               	movlw	2
  4876  001C6E  26DE               	addwf	postinc2,f,c
  4877  001C70  CFDF F04A          	movff	indf2,??_vfpfcnvrt+1
  4878  001C74  0E00               	movlw	0
  4879  001C76  22DD               	addwfc	postdec2,f,c
  4880  001C78  C049  FFD9         	movff	??_vfpfcnvrt,fsr2l
  4881  001C7C  C04A  FFDA         	movff	??_vfpfcnvrt+1,fsr2h
  4882  001C80  CFDE F0A0          	movff	postinc2,vfpfcnvrt@vp
  4883  001C84  CFDD F0A1          	movff	postdec2,vfpfcnvrt@vp+1
  4884  001C88                     
  4885                           ;/Applications/microchip/xc8/v2.31/pic/sources/c99/common/doprnt.c: 1102:             *(
      +                          int *)vp = nout;
  4886  001C88  C0A0  FFD9         	movff	vfpfcnvrt@vp,fsr2l
  4887  001C8C  C0A1  FFDA         	movff	vfpfcnvrt@vp+1,fsr2h
  4888  001C90  C0CC  FFDE         	movff	_nout,postinc2
  4889  001C94  C0CD  FFDD         	movff	_nout+1,postdec2
  4890  001C98                     l4661:
  4891                           
  4892                           ;/Applications/microchip/xc8/v2.31/pic/sources/c99/common/doprnt.c: 1103:             re
      +                          turn 0;
  4893  001C98  0E00               	movlw	0
  4894  001C9A  6E44               	movwf	(?_vfpfcnvrt+1)^0,c
  4895  001C9C  0E00               	movlw	0
  4896  001C9E  6E43               	movwf	?_vfpfcnvrt^0,c
  4897  001CA0  EFB3  F00E         	goto	l1091
  4898  001CA4                     l4665:
  4899                           
  4900                           ;/Applications/microchip/xc8/v2.31/pic/sources/c99/common/doprnt.c: 1372:         if ((*
      +                          fmt)[0] == '%') {
  4901  001CA4  C045  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  4902  001CA8  C046  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  4903  001CAC  CFDE FFF6          	movff	postinc2,tblptrl
  4904  001CB0  CFDE FFF7          	movff	postinc2,tblptrh
  4905  001CB4  0E07               	movlw	(high __ramtop+-1)
  4906  001CB6  64F7               	cpfsgt	tblptrh,c
  4907  001CB8  D003               	bra	u6217
  4908  001CBA  0008               	tblrd		*
  4909  001CBC  50F5               	movf	tablat,w,c
  4910  001CBE  D005               	bra	u6210
  4911  001CC0                     u6217:
  4912  001CC0  CFF6 FFE1          	movff	tblptrl,fsr1l
  4913  001CC4  CFF7 FFE2          	movff	tblptrh,fsr1h
  4914  001CC8  50E7               	movf	indf1,w,c
  4915  001CCA                     u6210:
  4916  001CCA  0A25               	xorlw	37
  4917  001CCC  A4D8               	btfss	status,2,c
  4918  001CCE  EF6B  F00E         	goto	u6221
  4919  001CD2  EF6D  F00E         	goto	u6220
  4920  001CD6                     u6221:
  4921  001CD6  EF84  F00E         	goto	l4675
  4922  001CDA                     u6220:
  4923  001CDA                     
  4924                           ;/Applications/microchip/xc8/v2.31/pic/sources/c99/common/doprnt.c: 1373:             ++
      +                          *fmt;
  4925  001CDA  C045  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  4926  001CDE  C046  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  4927  001CE2  2ADE               	incf	postinc2,f,c
  4928  001CE4  0E00               	movlw	0
  4929  001CE6  22DD               	addwfc	postdec2,f,c
  4930  001CE8                     
  4931                           ;/Applications/microchip/xc8/v2.31/pic/sources/c99/common/doprnt.c: 1374:             fp
      +                          utc((int)'%', fp);
  4932  001CE8  0E00               	movlw	0
  4933  001CEA  6E05               	movwf	(fputc@c+1)^0,c
  4934  001CEC  0E25               	movlw	37
  4935  001CEE  6E04               	movwf	fputc@c^0,c
  4936  001CF0  C043  F006         	movff	vfpfcnvrt@fp,fputc@fp
  4937  001CF4  C044  F007         	movff	vfpfcnvrt@fp+1,fputc@fp+1
  4938  001CF8  EC18  F021         	call	_fputc	;wreg free
  4939  001CFC                     l4671:
  4940                           
  4941                           ;/Applications/microchip/xc8/v2.31/pic/sources/c99/common/doprnt.c: 1375:             re
      +                          turn 1;
  4942  001CFC  0E00               	movlw	0
  4943  001CFE  6E44               	movwf	(?_vfpfcnvrt+1)^0,c
  4944  001D00  0E01               	movlw	1
  4945  001D02  6E43               	movwf	?_vfpfcnvrt^0,c
  4946  001D04  EFB3  F00E         	goto	l1091
  4947  001D08                     l4675:
  4948                           
  4949                           ;/Applications/microchip/xc8/v2.31/pic/sources/c99/common/doprnt.c: 1379:         ++*fmt
      +                          ;
  4950  001D08  C045  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  4951  001D0C  C046  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  4952  001D10  2ADE               	incf	postinc2,f,c
  4953  001D12  0E00               	movlw	0
  4954  001D14  22DD               	addwfc	postdec2,f,c
  4955  001D16  EF4C  F00E         	goto	l4661
  4956  001D1A                     l4681:
  4957                           
  4958                           ;/Applications/microchip/xc8/v2.31/pic/sources/c99/common/doprnt.c: 1384:     fputc((int
      +                          )(*fmt)[0], fp);
  4959  001D1A  C045  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  4960  001D1E  C046  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  4961  001D22  CFDE FFF6          	movff	postinc2,tblptrl
  4962  001D26  CFDE FFF7          	movff	postinc2,tblptrh
  4963  001D2A  0E07               	movlw	(high __ramtop+-1)
  4964  001D2C  64F7               	cpfsgt	tblptrh,c
  4965  001D2E  D003               	bra	u6237
  4966  001D30  0008               	tblrd		*
  4967  001D32  50F5               	movf	tablat,w,c
  4968  001D34  D005               	bra	u6230
  4969  001D36                     u6237:
  4970  001D36  CFF6 FFE1          	movff	tblptrl,fsr1l
  4971  001D3A  CFF7 FFE2          	movff	tblptrh,fsr1h
  4972  001D3E  50E7               	movf	indf1,w,c
  4973  001D40                     u6230:
  4974  001D40  6E49               	movwf	??_vfpfcnvrt^0,c
  4975  001D42  5049               	movf	??_vfpfcnvrt^0,w,c
  4976  001D44  6E04               	movwf	fputc@c^0,c
  4977  001D46  6A05               	clrf	(fputc@c+1)^0,c
  4978  001D48  C043  F006         	movff	vfpfcnvrt@fp,fputc@fp
  4979  001D4C  C044  F007         	movff	vfpfcnvrt@fp+1,fputc@fp+1
  4980  001D50  EC18  F021         	call	_fputc	;wreg free
  4981  001D54                     
  4982                           ;/Applications/microchip/xc8/v2.31/pic/sources/c99/common/doprnt.c: 1385:     ++*fmt;
  4983  001D54  C045  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  4984  001D58  C046  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  4985  001D5C  2ADE               	incf	postinc2,f,c
  4986  001D5E  0E00               	movlw	0
  4987  001D60  22DD               	addwfc	postdec2,f,c
  4988  001D62  EF7E  F00E         	goto	l4671
  4989  001D66                     l1091:
  4990  001D66  0012               	return		;funcret
  4991  001D68                     __end_of_vfpfcnvrt:
  4992                           	callstack 0
  4993                           
  4994 ;; *************** function _strncmp *****************
  4995 ;; Defined at:
  4996 ;;		line 3 in file "/Applications/microchip/xc8/v2.31/pic/sources/c99/common/strncmp.c"
  4997 ;; Parameters:    Size  Location     Type
  4998 ;;  _l              2    0[COMRAM] PTR const unsigned char 
  4999 ;;		 -> vfpfcnvrt@ct(3), 
  5000 ;;  _r              2    2[COMRAM] PTR const unsigned char 
  5001 ;;		 -> STR_21(3), 
  5002 ;;  n               2    4[COMRAM] unsigned int 
  5003 ;; Auto vars:     Size  Location     Type
  5004 ;;  r               2    9[COMRAM] PTR const unsigned char 
  5005 ;;		 -> STR_21(3), 
  5006 ;;  l               2    7[COMRAM] PTR const unsigned char 
  5007 ;;		 -> vfpfcnvrt@ct(3), 
  5008 ;; Return value:  Size  Location     Type
  5009 ;;                  2    0[COMRAM] int 
  5010 ;; Registers used:
  5011 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru
  5012 ;; Tracked objects:
  5013 ;;		On entry : 0/0
  5014 ;;		On exit  : 0/0
  5015 ;;		Unchanged: 0/0
  5016 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  5017 ;;      Params:         6       0       0       0       0       0       0       0       0
  5018 ;;      Locals:         4       0       0       0       0       0       0       0       0
  5019 ;;      Temps:          1       0       0       0       0       0       0       0       0
  5020 ;;      Totals:        11       0       0       0       0       0       0       0       0
  5021 ;;Total ram usage:       11 bytes
  5022 ;; Hardware stack levels used:    1
  5023 ;; This function calls:
  5024 ;;		Nothing
  5025 ;; This function is called by:
  5026 ;;		_vfpfcnvrt
  5027 ;; This function uses a non-reentrant model
  5028 ;;
  5029                           
  5030                           	psect	text20
  5031  00415A                     __ptext20:
  5032                           	callstack 0
  5033  00415A                     _strncmp:
  5034                           	callstack 26
  5035  00415A  C001  F008         	movff	strncmp@_l,strncmp@l
  5036  00415E  C002  F009         	movff	strncmp@_l+1,strncmp@l+1
  5037  004162  C003  F00A         	movff	strncmp@_r,strncmp@r
  5038  004166  C004  F00B         	movff	strncmp@_r+1,strncmp@r+1
  5039  00416A  0605               	decf	strncmp@n^0,f,c
  5040  00416C  A0D8               	btfss	status,0,c
  5041  00416E  0606               	decf	(strncmp@n+1)^0,f,c
  5042  004170  2805               	incf	strncmp@n^0,w,c
  5043  004172  E106               	bnz	u5781
  5044  004174  2806               	incf	(strncmp@n+1)^0,w,c
  5045  004176  A4D8               	btfss	status,2,c
  5046  004178  EFC0  F020         	goto	u5781
  5047  00417C  EFC2  F020         	goto	u5780
  5048  004180                     u5781:
  5049  004180  EFCF  F020         	goto	l4541
  5050  004184                     u5780:
  5051  004184  0E00               	movlw	0
  5052  004186  6E02               	movwf	(?_strncmp+1)^0,c
  5053  004188  0E00               	movlw	0
  5054  00418A  6E01               	movwf	?_strncmp^0,c
  5055  00418C  EF17  F021         	goto	l1235
  5056  004190                     l4539:
  5057  004190  4A08               	infsnz	strncmp@l^0,f,c
  5058  004192  2A09               	incf	(strncmp@l+1)^0,f,c
  5059  004194  4A0A               	infsnz	strncmp@r^0,f,c
  5060  004196  2A0B               	incf	(strncmp@r+1)^0,f,c
  5061  004198  0605               	decf	strncmp@n^0,f,c
  5062  00419A  A0D8               	btfss	status,0,c
  5063  00419C  0606               	decf	(strncmp@n+1)^0,f,c
  5064  00419E                     l4541:
  5065  00419E  C008  FFD9         	movff	strncmp@l,fsr2l
  5066  0041A2  C009  FFDA         	movff	strncmp@l+1,fsr2h
  5067  0041A6  50DF               	movf	indf2,w,c
  5068  0041A8  B4D8               	btfsc	status,2,c
  5069  0041AA  EFD9  F020         	goto	u5791
  5070  0041AE  EFDB  F020         	goto	u5790
  5071  0041B2                     u5791:
  5072  0041B2  EF06  F021         	goto	l4549
  5073  0041B6                     u5790:
  5074  0041B6  C00A  FFF6         	movff	strncmp@r,tblptrl
  5075  0041BA  C00B  FFF7         	movff	strncmp@r+1,tblptrh
  5076  0041BE                     	if	0	;tblptru may be non-zero
  5077  0041BE                     	endif
  5078  0041BE                     	if	0	;tblptru may be non-zero
  5079  0041BE                     	endif
  5080  0041BE  0008               	tblrd		*
  5081  0041C0  50F5               	movf	tablat,w,c
  5082  0041C2  0900               	iorlw	0
  5083  0041C4  B4D8               	btfsc	status,2,c
  5084  0041C6  EFE7  F020         	goto	u5801
  5085  0041CA  EFE9  F020         	goto	u5800
  5086  0041CE                     u5801:
  5087  0041CE  EF06  F021         	goto	l4549
  5088  0041D2                     u5800:
  5089  0041D2  5005               	movf	strncmp@n^0,w,c
  5090  0041D4  1006               	iorwf	(strncmp@n+1)^0,w,c
  5091  0041D6  B4D8               	btfsc	status,2,c
  5092  0041D8  EFF0  F020         	goto	u5811
  5093  0041DC  EFF2  F020         	goto	u5810
  5094  0041E0                     u5811:
  5095  0041E0  EF06  F021         	goto	l4549
  5096  0041E4                     u5810:
  5097  0041E4  C008  FFD9         	movff	strncmp@l,fsr2l
  5098  0041E8  C009  FFDA         	movff	strncmp@l+1,fsr2h
  5099  0041EC  50DF               	movf	indf2,w,c
  5100  0041EE  6E07               	movwf	??_strncmp^0,c
  5101  0041F0  C00A  FFF6         	movff	strncmp@r,tblptrl
  5102  0041F4  C00B  FFF7         	movff	strncmp@r+1,tblptrh
  5103  0041F8                     	if	0	;tblptru may be non-zero
  5104  0041F8                     	endif
  5105  0041F8                     	if	0	;tblptru may be non-zero
  5106  0041F8                     	endif
  5107  0041F8  0008               	tblrd		*
  5108  0041FA  50F5               	movf	tablat,w,c
  5109  0041FC  1807               	xorwf	??_strncmp^0,w,c
  5110  0041FE  B4D8               	btfsc	status,2,c
  5111  004200  EF04  F021         	goto	u5821
  5112  004204  EF06  F021         	goto	u5820
  5113  004208                     u5821:
  5114  004208  EFC8  F020         	goto	l4539
  5115  00420C                     u5820:
  5116  00420C                     l4549:
  5117  00420C  C008  FFD9         	movff	strncmp@l,fsr2l
  5118  004210  C009  FFDA         	movff	strncmp@l+1,fsr2h
  5119  004214  50DF               	movf	indf2,w,c
  5120  004216  6E07               	movwf	??_strncmp^0,c
  5121  004218  C00A  FFF6         	movff	strncmp@r,tblptrl
  5122  00421C  C00B  FFF7         	movff	strncmp@r+1,tblptrh
  5123  004220                     	if	0	;tblptru may be non-zero
  5124  004220                     	endif
  5125  004220                     	if	0	;tblptru may be non-zero
  5126  004220                     	endif
  5127  004220  0008               	tblrd		*
  5128  004222  50F5               	movf	tablat,w,c
  5129  004224  5C07               	subwf	??_strncmp^0,w,c
  5130  004226  6E01               	movwf	?_strncmp^0,c
  5131  004228  6A02               	clrf	(?_strncmp+1)^0,c
  5132  00422A  A0D8               	btfss	status,0,c
  5133  00422C  0602               	decf	(?_strncmp+1)^0,f,c
  5134  00422E                     l1235:
  5135  00422E  0012               	return		;funcret
  5136  004230                     __end_of_strncmp:
  5137                           	callstack 0
  5138                           
  5139 ;; *************** function _efgtoa *****************
  5140 ;; Defined at:
  5141 ;;		line 332 in file "/Applications/microchip/xc8/v2.31/pic/sources/c99/common/doprnt.c"
  5142 ;; Parameters:    Size  Location     Type
  5143 ;;  fp              2   51[COMRAM] PTR struct _IO_FILE
  5144 ;;		 -> NULL(0), sprintf@f(6), 
  5145 ;;  f               4   53[COMRAM] PTR struct _IO_FILE
  5146 ;;  c               1   57[COMRAM] unsigned char 
  5147 ;; Auto vars:     Size  Location     Type
  5148 ;;  u               4   52[BANK0 ] unsigned char 
  5149 ;;  g               4   44[BANK0 ] unsigned char 
  5150 ;;  l               4   38[BANK0 ] unsigned char 
  5151 ;;  h               4   34[BANK0 ] unsigned char 
  5152 ;;  ou              4   20[BANK0 ] unsigned char 
  5153 ;;  n               2   50[BANK0 ] int 
  5154 ;;  e               2   48[BANK0 ] int 
  5155 ;;  i               2   42[BANK0 ] int 
  5156 ;;  w               2   30[BANK0 ] int 
  5157 ;;  p               2   28[BANK0 ] int 
  5158 ;;  sign            2   26[BANK0 ] int 
  5159 ;;  d               2   24[BANK0 ] int 
  5160 ;;  m               2   18[BANK0 ] int 
  5161 ;;  ne              2   16[BANK0 ] int 
  5162 ;;  pp              2   14[BANK0 ] int 
  5163 ;;  t               2   12[BANK0 ] int 
  5164 ;;  mode            1   33[BANK0 ] unsigned char 
  5165 ;;  nmode           1   32[BANK0 ] unsigned char 
  5166 ;; Return value:  Size  Location     Type
  5167 ;;                  2   51[COMRAM] int 
  5168 ;; Registers used:
  5169 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  5170 ;; Tracked objects:
  5171 ;;		On entry : 0/0
  5172 ;;		On exit  : 0/0
  5173 ;;		Unchanged: 0/0
  5174 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  5175 ;;      Params:         7       0       0       0       0       0       0       0       0
  5176 ;;      Locals:         0      56       0       0       0       0       0       0       0
  5177 ;;      Temps:          5       0       0       0       0       0       0       0       0
  5178 ;;      Totals:        12      56       0       0       0       0       0       0       0
  5179 ;;Total ram usage:       68 bytes
  5180 ;; Hardware stack levels used:    1
  5181 ;; Hardware stack levels required when called:    4
  5182 ;; This function calls:
  5183 ;;		___awdiv
  5184 ;;		___awmod
  5185 ;;		___fladd
  5186 ;;		___fldiv
  5187 ;;		___fleq
  5188 ;;		___flge
  5189 ;;		___flmul
  5190 ;;		___flneg
  5191 ;;		___flsub
  5192 ;;		___fltol
  5193 ;;		___fpclassifyf
  5194 ;;		_floorf
  5195 ;;		_isupper
  5196 ;;		_pad
  5197 ;;		_strcpy
  5198 ;;		_tolower
  5199 ;; This function is called by:
  5200 ;;		_vfpfcnvrt
  5201 ;; This function uses a non-reentrant model
  5202 ;;
  5203                           
  5204                           	psect	text21
  5205  000898                     __ptext21:
  5206                           	callstack 0
  5207  000898                     _efgtoa:
  5208                           	callstack 22
  5209  000898                     
  5210                           ;/Applications/microchip/xc8/v2.31/pic/sources/c99/common/doprnt.c: 332: static int efgt
      +                          oa(FILE *fp, long double f, char c);/Applications/microchip/xc8/v2.31/pic/sources/c99/co
      +                          mmon/doprnt.c: 333: {;/Applications/microchip/xc8/v2.31/pic/sources/c99/common/doprnt.c:
      +                           334:     char mode, nmode;;/Applications/microchip/xc8/v2.31/pic/sources/c99/common/dop
      +                          rnt.c: 335:     int d, e, i, m, n, ne, p, pp, sign, t, w;;/Applications/microchip/xc8/v2
      +                          .31/pic/sources/c99/common/doprnt.c: 336:     long double g, h, l, ou, u;
  5211  000898  0E00               	movlw	0
  5212  00089A  0100               	movlb	0	; () banked
  5213  00089C  6F7B               	movwf	(efgtoa@sign+1)& (0+255),b
  5214  00089E  0E00               	movlw	0
  5215  0008A0  6F7A               	movwf	efgtoa@sign& (0+255),b
  5216  0008A2                     
  5217                           ; BSR set to: 0
  5218                           ;/Applications/microchip/xc8/v2.31/pic/sources/c99/common/doprnt.c: 340:     g = f;
  5219  0008A2  C036  F08C         	movff	efgtoa@f,efgtoa@g
  5220  0008A6  C037  F08D         	movff	efgtoa@f+1,efgtoa@g+1
  5221  0008AA  C038  F08E         	movff	efgtoa@f+2,efgtoa@g+2
  5222  0008AE  C039  F08F         	movff	efgtoa@f+3,efgtoa@g+3
  5223  0008B2                     
  5224                           ; BSR set to: 0
  5225                           ;/Applications/microchip/xc8/v2.31/pic/sources/c99/common/doprnt.c: 341:     if (g < 0.0
      +                          ) {
  5226  0008B2  BF8F               	btfsc	(efgtoa@g+3)& (0+255),7,b
  5227  0008B4  EF60  F004         	goto	u5120
  5228  0008B8  EF5E  F004         	goto	u5121
  5229  0008BC                     u5121:
  5230  0008BC  EF76  F004         	goto	l4193
  5231  0008C0                     u5120:
  5232  0008C0                     
  5233                           ; BSR set to: 0
  5234                           ;/Applications/microchip/xc8/v2.31/pic/sources/c99/common/doprnt.c: 342:         sign = 
      +                          1;
  5235  0008C0  0E00               	movlw	0
  5236  0008C2  6F7B               	movwf	(efgtoa@sign+1)& (0+255),b
  5237  0008C4  0E01               	movlw	1
  5238  0008C6  6F7A               	movwf	efgtoa@sign& (0+255),b
  5239  0008C8                     
  5240                           ; BSR set to: 0
  5241                           ;/Applications/microchip/xc8/v2.31/pic/sources/c99/common/doprnt.c: 343:         g = -g;
  5242  0008C8  C08C  F001         	movff	efgtoa@g,___flneg@f1
  5243  0008CC  C08D  F002         	movff	efgtoa@g+1,___flneg@f1+1
  5244  0008D0  C08E  F003         	movff	efgtoa@g+2,___flneg@f1+2
  5245  0008D4  C08F  F004         	movff	efgtoa@g+3,___flneg@f1+3
  5246  0008D8  ECEE  F025         	call	___flneg	;wreg free
  5247  0008DC  C001  F08C         	movff	?___flneg,efgtoa@g
  5248  0008E0  C002  F08D         	movff	?___flneg+1,efgtoa@g+1
  5249  0008E4  C003  F08E         	movff	?___flneg+2,efgtoa@g+2
  5250  0008E8  C004  F08F         	movff	?___flneg+3,efgtoa@g+3
  5251  0008EC                     l4193:
  5252                           
  5253                           ;/Applications/microchip/xc8/v2.31/pic/sources/c99/common/doprnt.c: 347:     n = 0;
  5254  0008EC  0E00               	movlw	0
  5255  0008EE  0100               	movlb	0	; () banked
  5256  0008F0  6F93               	movwf	(efgtoa@n+1)& (0+255),b
  5257  0008F2  0E00               	movlw	0
  5258  0008F4  6F92               	movwf	efgtoa@n& (0+255),b
  5259  0008F6                     
  5260                           ; BSR set to: 0
  5261                           ;/Applications/microchip/xc8/v2.31/pic/sources/c99/common/doprnt.c: 348:     w = width;
  5262  0008F6  C0CE  F07E         	movff	_width,efgtoa@w
  5263  0008FA  C0CF  F07F         	movff	_width+1,efgtoa@w+1
  5264  0008FE                     
  5265                           ; BSR set to: 0
  5266                           ;/Applications/microchip/xc8/v2.31/pic/sources/c99/common/doprnt.c: 349:     if (sign ||
      +                           (flags & (1 << 2))) {
  5267  0008FE  517A               	movf	efgtoa@sign& (0+255),w,b
  5268  000900  117B               	iorwf	(efgtoa@sign+1)& (0+255),w,b
  5269  000902  A4D8               	btfss	status,2,c
  5270  000904  EF86  F004         	goto	u5131
  5271  000908  EF88  F004         	goto	u5130
  5272  00090C                     u5131:
  5273  00090C  EF8F  F004         	goto	l4201
  5274  000910                     u5130:
  5275  000910                     
  5276                           ; BSR set to: 0
  5277  000910  A5D2               	btfss	_flags& (0+255),2,b
  5278  000912  EF8D  F004         	goto	u5141
  5279  000916  EF8F  F004         	goto	u5140
  5280  00091A                     u5141:
  5281  00091A  EFA9  F004         	goto	l4213
  5282  00091E                     u5140:
  5283  00091E                     l4201:
  5284                           
  5285                           ; BSR set to: 0
  5286                           ;/Applications/microchip/xc8/v2.31/pic/sources/c99/common/doprnt.c: 350:         dbuf[n]
      +                           = sign ? '-' : '+';
  5287  00091E  517A               	movf	efgtoa@sign& (0+255),w,b
  5288  000920  117B               	iorwf	(efgtoa@sign+1)& (0+255),w,b
  5289  000922  A4D8               	btfss	status,2,c
  5290  000924  EF96  F004         	goto	u5151
  5291  000928  EF98  F004         	goto	u5150
  5292  00092C                     u5151:
  5293  00092C  EF9E  F004         	goto	l4205
  5294  000930                     u5150:
  5295  000930                     
  5296                           ; BSR set to: 0
  5297  000930  0E00               	movlw	0
  5298  000932  6F61               	movwf	(_efgtoa$1244+1)& (0+255),b
  5299  000934  0E2B               	movlw	43
  5300  000936  6F60               	movwf	_efgtoa$1244& (0+255),b
  5301  000938  EFA2  F004         	goto	l4207
  5302  00093C                     l4205:
  5303                           
  5304                           ; BSR set to: 0
  5305  00093C  0E00               	movlw	0
  5306  00093E  6F61               	movwf	(_efgtoa$1244+1)& (0+255),b
  5307  000940  0E2D               	movlw	45
  5308  000942  6F60               	movwf	_efgtoa$1244& (0+255),b
  5309  000944                     l4207:
  5310                           
  5311                           ; BSR set to: 0
  5312  000944  C060  F110         	movff	_efgtoa$1244,_dbuf
  5313  000948                     
  5314                           ; BSR set to: 0
  5315                           ;/Applications/microchip/xc8/v2.31/pic/sources/c99/common/doprnt.c: 351:         ++n;
  5316  000948  4B92               	infsnz	efgtoa@n& (0+255),f,b
  5317  00094A  2B93               	incf	(efgtoa@n+1)& (0+255),f,b
  5318  00094C                     
  5319                           ; BSR set to: 0
  5320                           ;/Applications/microchip/xc8/v2.31/pic/sources/c99/common/doprnt.c: 352:         --w;
  5321  00094C  077E               	decf	efgtoa@w& (0+255),f,b
  5322  00094E  A0D8               	btfss	status,0,c
  5323  000950  077F               	decf	(efgtoa@w+1)& (0+255),f,b
  5324  000952                     l4213:
  5325                           
  5326                           ; BSR set to: 0
  5327                           ;/Applications/microchip/xc8/v2.31/pic/sources/c99/common/doprnt.c: 357:         if ((0 
      +                          ? isupper((int)c) : ((unsigned)((int)c)-'A') < 26)) {
  5328  000952  C08C  F001         	movff	efgtoa@g,___fpclassifyf@x
  5329  000956  C08D  F002         	movff	efgtoa@g+1,___fpclassifyf@x+1
  5330  00095A  C08E  F003         	movff	efgtoa@g+2,___fpclassifyf@x+2
  5331  00095E  C08F  F004         	movff	efgtoa@g+3,___fpclassifyf@x+3
  5332  000962  ECC2  F01F         	call	___fpclassifyf	;wreg free
  5333  000966  0401               	decf	?___fpclassifyf^0,w,c
  5334  000968  1002               	iorwf	(?___fpclassifyf+1)^0,w,c
  5335  00096A  A4D8               	btfss	status,2,c
  5336  00096C  EFBA  F004         	goto	u5161
  5337  000970  EFBC  F004         	goto	u5160
  5338  000974                     u5161:
  5339  000974  EF13  F005         	goto	l4231
  5340  000978                     u5160:
  5341  000978  0EBF               	movlw	191
  5342  00097A  6E3B               	movwf	??_efgtoa^0,c
  5343  00097C  0EFF               	movlw	255
  5344  00097E  6E3C               	movwf	(??_efgtoa+1)^0,c
  5345  000980  503A               	movf	efgtoa@c^0,w,c
  5346  000982  6E3D               	movwf	(??_efgtoa+2)^0,c
  5347  000984  6A3E               	clrf	(??_efgtoa+3)^0,c
  5348  000986  503B               	movf	??_efgtoa^0,w,c
  5349  000988  263D               	addwf	(??_efgtoa+2)^0,f,c
  5350  00098A  503C               	movf	(??_efgtoa+1)^0,w,c
  5351  00098C  223E               	addwfc	(??_efgtoa+3)^0,f,c
  5352  00098E  503E               	movf	(??_efgtoa+3)^0,w,c
  5353  000990  E10A               	bnz	u5170
  5354  000992  0E1A               	movlw	26
  5355  000994  5C3D               	subwf	(??_efgtoa+2)^0,w,c
  5356  000996  A0D8               	btfss	status,0,c
  5357  000998  EFD0  F004         	goto	u5171
  5358  00099C  EFD3  F004         	goto	u5170
  5359  0009A0                     u5171:
  5360  0009A0  0E01               	movlw	1
  5361  0009A2  EFD4  F004         	goto	u5180
  5362  0009A6                     u5170:
  5363  0009A6  0E00               	movlw	0
  5364  0009A8                     u5180:
  5365  0009A8  0100               	movlb	0	; () banked
  5366  0009AA  6F62               	movwf	_efgtoa$1245& (0+255),b
  5367  0009AC  6B63               	clrf	(_efgtoa$1245+1)& (0+255),b
  5368  0009AE                     
  5369                           ; BSR set to: 0
  5370  0009AE  5162               	movf	_efgtoa$1245& (0+255),w,b
  5371  0009B0  1163               	iorwf	(_efgtoa$1245+1)& (0+255),w,b
  5372  0009B2  B4D8               	btfsc	status,2,c
  5373  0009B4  EFDE  F004         	goto	u5191
  5374  0009B8  EFE0  F004         	goto	u5190
  5375  0009BC                     u5191:
  5376  0009BC  EFEE  F004         	goto	l4223
  5377  0009C0                     u5190:
  5378  0009C0                     
  5379                           ; BSR set to: 0
  5380                           ;/Applications/microchip/xc8/v2.31/pic/sources/c99/common/doprnt.c: 358:             str
      +                          cpy(&dbuf[n], "INF");
  5381  0009C0  0E10               	movlw	low _dbuf
  5382  0009C2  2592               	addwf	efgtoa@n& (0+255),w,b
  5383  0009C4  6E01               	movwf	strcpy@dest^0,c
  5384  0009C6  0E01               	movlw	high _dbuf
  5385  0009C8  2193               	addwfc	(efgtoa@n+1)& (0+255),w,b
  5386  0009CA  6E02               	movwf	(strcpy@dest+1)^0,c
  5387  0009CC  0E84               	movlw	low STR_11
  5388  0009CE  6E03               	movwf	strcpy@src^0,c
  5389  0009D0  0E08               	movlw	high STR_11
  5390  0009D2  6E04               	movwf	(strcpy@src+1)^0,c
  5391  0009D4  EC87  F024         	call	_strcpy	;wreg free
  5392                           
  5393                           ;/Applications/microchip/xc8/v2.31/pic/sources/c99/common/doprnt.c: 359:         } else 
      +                          {
  5394  0009D8  EFFA  F004         	goto	l4225
  5395  0009DC                     l4223:
  5396                           
  5397                           ; BSR set to: 0
  5398                           ;/Applications/microchip/xc8/v2.31/pic/sources/c99/common/doprnt.c: 360:             str
      +                          cpy(&dbuf[n], "inf");
  5399  0009DC  0E10               	movlw	low _dbuf
  5400  0009DE  2592               	addwf	efgtoa@n& (0+255),w,b
  5401  0009E0  6E01               	movwf	strcpy@dest^0,c
  5402  0009E2  0E01               	movlw	high _dbuf
  5403  0009E4  2193               	addwfc	(efgtoa@n+1)& (0+255),w,b
  5404  0009E6  6E02               	movwf	(strcpy@dest+1)^0,c
  5405  0009E8  0E8C               	movlw	low STR_12
  5406  0009EA  6E03               	movwf	strcpy@src^0,c
  5407  0009EC  0E08               	movlw	high STR_12
  5408  0009EE  6E04               	movwf	(strcpy@src+1)^0,c
  5409  0009F0  EC87  F024         	call	_strcpy	;wreg free
  5410  0009F4                     l4225:
  5411                           
  5412                           ;/Applications/microchip/xc8/v2.31/pic/sources/c99/common/doprnt.c: 362:         w -= ((
      +                          sizeof("inf")/sizeof("inf"[0]))-1);
  5413  0009F4  0100               	movlb	0	; () banked
  5414  0009F6  0EFD               	movlw	253
  5415  0009F8  277E               	addwf	efgtoa@w& (0+255),f,b
  5416  0009FA  0EFF               	movlw	255
  5417  0009FC  237F               	addwfc	(efgtoa@w+1)& (0+255),f,b
  5418  0009FE                     l4227:
  5419                           
  5420                           ;/Applications/microchip/xc8/v2.31/pic/sources/c99/common/doprnt.c: 363:         return 
      +                          pad(fp, &dbuf[0], w);
  5421  0009FE  C034  F014         	movff	efgtoa@fp,pad@fp
  5422  000A02  C035  F015         	movff	efgtoa@fp+1,pad@fp+1
  5423  000A06  0E10               	movlw	low _dbuf
  5424  000A08  6E16               	movwf	pad@buf^0,c
  5425  000A0A  0E01               	movlw	high _dbuf
  5426  000A0C  6E17               	movwf	(pad@buf+1)^0,c
  5427  000A0E  C07E  F018         	movff	efgtoa@w,pad@p
  5428  000A12  C07F  F019         	movff	efgtoa@w+1,pad@p+1
  5429  000A16  EC7D  F021         	call	_pad	;wreg free
  5430  000A1A  C014  F034         	movff	?_pad,?_efgtoa
  5431  000A1E  C015  F035         	movff	?_pad+1,?_efgtoa+1
  5432  000A22  EF77  F00A         	goto	l989
  5433  000A26                     l4231:
  5434                           
  5435                           ;/Applications/microchip/xc8/v2.31/pic/sources/c99/common/doprnt.c: 366:         if ((0 
      +                          ? isupper((int)c) : ((unsigned)((int)c)-'A') < 26)) {
  5436  000A26  C08C  F001         	movff	efgtoa@g,___fpclassifyf@x
  5437  000A2A  C08D  F002         	movff	efgtoa@g+1,___fpclassifyf@x+1
  5438  000A2E  C08E  F003         	movff	efgtoa@g+2,___fpclassifyf@x+2
  5439  000A32  C08F  F004         	movff	efgtoa@g+3,___fpclassifyf@x+3
  5440  000A36  ECC2  F01F         	call	___fpclassifyf	;wreg free
  5441  000A3A  5001               	movf	?___fpclassifyf^0,w,c
  5442  000A3C  1002               	iorwf	(?___fpclassifyf+1)^0,w,c
  5443  000A3E  A4D8               	btfss	status,2,c
  5444  000A40  EF24  F005         	goto	u5201
  5445  000A44  EF26  F005         	goto	u5200
  5446  000A48                     u5201:
  5447  000A48  EF66  F005         	goto	l4249
  5448  000A4C                     u5200:
  5449  000A4C  0EBF               	movlw	191
  5450  000A4E  6E3B               	movwf	??_efgtoa^0,c
  5451  000A50  0EFF               	movlw	255
  5452  000A52  6E3C               	movwf	(??_efgtoa+1)^0,c
  5453  000A54  503A               	movf	efgtoa@c^0,w,c
  5454  000A56  6E3D               	movwf	(??_efgtoa+2)^0,c
  5455  000A58  6A3E               	clrf	(??_efgtoa+3)^0,c
  5456  000A5A  503B               	movf	??_efgtoa^0,w,c
  5457  000A5C  263D               	addwf	(??_efgtoa+2)^0,f,c
  5458  000A5E  503C               	movf	(??_efgtoa+1)^0,w,c
  5459  000A60  223E               	addwfc	(??_efgtoa+3)^0,f,c
  5460  000A62  503E               	movf	(??_efgtoa+3)^0,w,c
  5461  000A64  E10A               	bnz	u5210
  5462  000A66  0E1A               	movlw	26
  5463  000A68  5C3D               	subwf	(??_efgtoa+2)^0,w,c
  5464  000A6A  A0D8               	btfss	status,0,c
  5465  000A6C  EF3A  F005         	goto	u5211
  5466  000A70  EF3D  F005         	goto	u5210
  5467  000A74                     u5211:
  5468  000A74  0E01               	movlw	1
  5469  000A76  EF3E  F005         	goto	u5220
  5470  000A7A                     u5210:
  5471  000A7A  0E00               	movlw	0
  5472  000A7C                     u5220:
  5473  000A7C  0100               	movlb	0	; () banked
  5474  000A7E  6F64               	movwf	_efgtoa$1249& (0+255),b
  5475  000A80  6B65               	clrf	(_efgtoa$1249+1)& (0+255),b
  5476  000A82                     
  5477                           ; BSR set to: 0
  5478  000A82  5164               	movf	_efgtoa$1249& (0+255),w,b
  5479  000A84  1165               	iorwf	(_efgtoa$1249+1)& (0+255),w,b
  5480  000A86  B4D8               	btfsc	status,2,c
  5481  000A88  EF48  F005         	goto	u5231
  5482  000A8C  EF4A  F005         	goto	u5230
  5483  000A90                     u5231:
  5484  000A90  EF58  F005         	goto	l4241
  5485  000A94                     u5230:
  5486  000A94                     
  5487                           ; BSR set to: 0
  5488                           ;/Applications/microchip/xc8/v2.31/pic/sources/c99/common/doprnt.c: 367:             str
      +                          cpy(&dbuf[n], "NAN");
  5489  000A94  0E10               	movlw	low _dbuf
  5490  000A96  2592               	addwf	efgtoa@n& (0+255),w,b
  5491  000A98  6E01               	movwf	strcpy@dest^0,c
  5492  000A9A  0E01               	movlw	high _dbuf
  5493  000A9C  2193               	addwfc	(efgtoa@n+1)& (0+255),w,b
  5494  000A9E  6E02               	movwf	(strcpy@dest+1)^0,c
  5495  000AA0  0E88               	movlw	low STR_15
  5496  000AA2  6E03               	movwf	strcpy@src^0,c
  5497  000AA4  0E08               	movlw	high STR_15
  5498  000AA6  6E04               	movwf	(strcpy@src+1)^0,c
  5499  000AA8  EC87  F024         	call	_strcpy	;wreg free
  5500                           
  5501                           ;/Applications/microchip/xc8/v2.31/pic/sources/c99/common/doprnt.c: 368:         } else 
      +                          {
  5502  000AAC  EFFA  F004         	goto	l4225
  5503  000AB0                     l4241:
  5504                           
  5505                           ; BSR set to: 0
  5506                           ;/Applications/microchip/xc8/v2.31/pic/sources/c99/common/doprnt.c: 369:             str
      +                          cpy(&dbuf[n], "nan");
  5507  000AB0  0E10               	movlw	low _dbuf
  5508  000AB2  2592               	addwf	efgtoa@n& (0+255),w,b
  5509  000AB4  6E01               	movwf	strcpy@dest^0,c
  5510  000AB6  0E01               	movlw	high _dbuf
  5511  000AB8  2193               	addwfc	(efgtoa@n+1)& (0+255),w,b
  5512  000ABA  6E02               	movwf	(strcpy@dest+1)^0,c
  5513  000ABC  0E90               	movlw	low STR_16
  5514  000ABE  6E03               	movwf	strcpy@src^0,c
  5515  000AC0  0E08               	movlw	high STR_16
  5516  000AC2  6E04               	movwf	(strcpy@src+1)^0,c
  5517  000AC4  EC87  F024         	call	_strcpy	;wreg free
  5518  000AC8  EFFA  F004         	goto	l4225
  5519  000ACC                     l4249:
  5520                           
  5521                           ;/Applications/microchip/xc8/v2.31/pic/sources/c99/common/doprnt.c: 376:     u = 1.0;
  5522  000ACC  0E00               	movlw	0
  5523  000ACE  0100               	movlb	0	; () banked
  5524  000AD0  6F94               	movwf	efgtoa@u& (0+255),b
  5525  000AD2  0E00               	movlw	0
  5526  000AD4  6F95               	movwf	(efgtoa@u+1)& (0+255),b
  5527  000AD6  0E80               	movlw	128
  5528  000AD8  6F96               	movwf	(efgtoa@u+2)& (0+255),b
  5529  000ADA  0E3F               	movlw	63
  5530  000ADC  6F97               	movwf	(efgtoa@u+3)& (0+255),b
  5531                           
  5532                           ;/Applications/microchip/xc8/v2.31/pic/sources/c99/common/doprnt.c: 377:     e = 0;
  5533  000ADE  0E00               	movlw	0
  5534  000AE0  6F91               	movwf	(efgtoa@e+1)& (0+255),b
  5535  000AE2  0E00               	movlw	0
  5536  000AE4  6F90               	movwf	efgtoa@e& (0+255),b
  5537  000AE6                     
  5538                           ; BSR set to: 0
  5539                           ;/Applications/microchip/xc8/v2.31/pic/sources/c99/common/doprnt.c: 378:     if (!(g == 
      +                          0.0)) {
  5540  000AE6  C08C  F001         	movff	efgtoa@g,___fleq@ff1
  5541  000AEA  C08D  F002         	movff	efgtoa@g+1,___fleq@ff1+1
  5542  000AEE  C08E  F003         	movff	efgtoa@g+2,___fleq@ff1+2
  5543  000AF2  C08F  F004         	movff	efgtoa@g+3,___fleq@ff1+3
  5544  000AF6  0E00               	movlw	0
  5545  000AF8  6E05               	movwf	___fleq@ff2^0,c
  5546  000AFA  0E00               	movlw	0
  5547  000AFC  6E06               	movwf	(___fleq@ff2+1)^0,c
  5548  000AFE  0E00               	movlw	0
  5549  000B00  6E07               	movwf	(___fleq@ff2+2)^0,c
  5550  000B02  0E00               	movlw	0
  5551  000B04  6E08               	movwf	(___fleq@ff2+3)^0,c
  5552  000B06  EC9A  F022         	call	___fleq	;wreg free
  5553  000B0A  B0D8               	btfsc	status,0,c
  5554  000B0C  EF8A  F005         	goto	u5241
  5555  000B10  EF8C  F005         	goto	u5240
  5556  000B14                     u5241:
  5557  000B14  EF0F  F006         	goto	l4267
  5558  000B18                     u5240:
  5559  000B18  EFAB  F005         	goto	l4259
  5560  000B1C                     l4255:
  5561                           
  5562                           ;/Applications/microchip/xc8/v2.31/pic/sources/c99/common/doprnt.c: 380:             u =
      +                           u*10.0;
  5563  000B1C  C094  F00F         	movff	efgtoa@u,___flmul@b
  5564  000B20  C095  F010         	movff	efgtoa@u+1,___flmul@b+1
  5565  000B24  C096  F011         	movff	efgtoa@u+2,___flmul@b+2
  5566  000B28  C097  F012         	movff	efgtoa@u+3,___flmul@b+3
  5567  000B2C  0E00               	movlw	0
  5568  000B2E  6E13               	movwf	___flmul@a^0,c
  5569  000B30  0E00               	movlw	0
  5570  000B32  6E14               	movwf	(___flmul@a+1)^0,c
  5571  000B34  0E20               	movlw	32
  5572  000B36  6E15               	movwf	(___flmul@a+2)^0,c
  5573  000B38  0E41               	movlw	65
  5574  000B3A  6E16               	movwf	(___flmul@a+3)^0,c
  5575  000B3C  EC14  F011         	call	___flmul	;wreg free
  5576  000B40  C00F  F094         	movff	?___flmul,efgtoa@u
  5577  000B44  C010  F095         	movff	?___flmul+1,efgtoa@u+1
  5578  000B48  C011  F096         	movff	?___flmul+2,efgtoa@u+2
  5579  000B4C  C012  F097         	movff	?___flmul+3,efgtoa@u+3
  5580  000B50                     
  5581                           ;/Applications/microchip/xc8/v2.31/pic/sources/c99/common/doprnt.c: 381:             ++e
      +                          ;
  5582  000B50  0100               	movlb	0	; () banked
  5583  000B52  4B90               	infsnz	efgtoa@e& (0+255),f,b
  5584  000B54  2B91               	incf	(efgtoa@e+1)& (0+255),f,b
  5585  000B56                     l4259:
  5586                           
  5587                           ;/Applications/microchip/xc8/v2.31/pic/sources/c99/common/doprnt.c: 379:         while (
      +                          !(g < (u*10.0))) {
  5588  000B56  C08C  F028         	movff	efgtoa@g,___flge@ff1
  5589  000B5A  C08D  F029         	movff	efgtoa@g+1,___flge@ff1+1
  5590  000B5E  C08E  F02A         	movff	efgtoa@g+2,___flge@ff1+2
  5591  000B62  C08F  F02B         	movff	efgtoa@g+3,___flge@ff1+3
  5592  000B66  0E00               	movlw	0
  5593  000B68  6E13               	movwf	___flmul@a^0,c
  5594  000B6A  0E00               	movlw	0
  5595  000B6C  6E14               	movwf	(___flmul@a+1)^0,c
  5596  000B6E  0E20               	movlw	32
  5597  000B70  6E15               	movwf	(___flmul@a+2)^0,c
  5598  000B72  0E41               	movlw	65
  5599  000B74  6E16               	movwf	(___flmul@a+3)^0,c
  5600  000B76  C094  F00F         	movff	efgtoa@u,___flmul@b
  5601  000B7A  C095  F010         	movff	efgtoa@u+1,___flmul@b+1
  5602  000B7E  C096  F011         	movff	efgtoa@u+2,___flmul@b+2
  5603  000B82  C097  F012         	movff	efgtoa@u+3,___flmul@b+3
  5604  000B86  EC14  F011         	call	___flmul	;wreg free
  5605  000B8A  C00F  F02C         	movff	?___flmul,___flge@ff2
  5606  000B8E  C010  F02D         	movff	?___flmul+1,___flge@ff2+1
  5607  000B92  C011  F02E         	movff	?___flmul+2,___flge@ff2+2
  5608  000B96  C012  F02F         	movff	?___flmul+3,___flge@ff2+3
  5609  000B9A  EC40  F01F         	call	___flge	;wreg free
  5610  000B9E  B0D8               	btfsc	status,0,c
  5611  000BA0  EFD4  F005         	goto	u5251
  5612  000BA4  EFD6  F005         	goto	u5250
  5613  000BA8                     u5251:
  5614  000BA8  EF8E  F005         	goto	l4255
  5615  000BAC                     u5250:
  5616  000BAC  EFF6  F005         	goto	l4265
  5617  000BB0                     l4261:
  5618                           
  5619                           ;/Applications/microchip/xc8/v2.31/pic/sources/c99/common/doprnt.c: 384:             u =
      +                           u/10.0;
  5620  000BB0  C094  F001         	movff	efgtoa@u,___fldiv@b
  5621  000BB4  C095  F002         	movff	efgtoa@u+1,___fldiv@b+1
  5622  000BB8  C096  F003         	movff	efgtoa@u+2,___fldiv@b+2
  5623  000BBC  C097  F004         	movff	efgtoa@u+3,___fldiv@b+3
  5624  000BC0  0E00               	movlw	0
  5625  000BC2  6E05               	movwf	___fldiv@a^0,c
  5626  000BC4  0E00               	movlw	0
  5627  000BC6  6E06               	movwf	(___fldiv@a+1)^0,c
  5628  000BC8  0E20               	movlw	32
  5629  000BCA  6E07               	movwf	(___fldiv@a+2)^0,c
  5630  000BCC  0E41               	movlw	65
  5631  000BCE  6E08               	movwf	(___fldiv@a+3)^0,c
  5632  000BD0  EC29  F013         	call	___fldiv	;wreg free
  5633  000BD4  C001  F094         	movff	?___fldiv,efgtoa@u
  5634  000BD8  C002  F095         	movff	?___fldiv+1,efgtoa@u+1
  5635  000BDC  C003  F096         	movff	?___fldiv+2,efgtoa@u+2
  5636  000BE0  C004  F097         	movff	?___fldiv+3,efgtoa@u+3
  5637  000BE4                     
  5638                           ;/Applications/microchip/xc8/v2.31/pic/sources/c99/common/doprnt.c: 385:             --e
      +                          ;
  5639  000BE4  0100               	movlb	0	; () banked
  5640  000BE6  0790               	decf	efgtoa@e& (0+255),f,b
  5641  000BE8  A0D8               	btfss	status,0,c
  5642  000BEA  0791               	decf	(efgtoa@e+1)& (0+255),f,b
  5643  000BEC                     l4265:
  5644                           
  5645                           ;/Applications/microchip/xc8/v2.31/pic/sources/c99/common/doprnt.c: 383:         while (
      +                          g < u) {
  5646  000BEC  C08C  F028         	movff	efgtoa@g,___flge@ff1
  5647  000BF0  C08D  F029         	movff	efgtoa@g+1,___flge@ff1+1
  5648  000BF4  C08E  F02A         	movff	efgtoa@g+2,___flge@ff1+2
  5649  000BF8  C08F  F02B         	movff	efgtoa@g+3,___flge@ff1+3
  5650  000BFC  C094  F02C         	movff	efgtoa@u,___flge@ff2
  5651  000C00  C095  F02D         	movff	efgtoa@u+1,___flge@ff2+1
  5652  000C04  C096  F02E         	movff	efgtoa@u+2,___flge@ff2+2
  5653  000C08  C097  F02F         	movff	efgtoa@u+3,___flge@ff2+3
  5654  000C0C  EC40  F01F         	call	___flge	;wreg free
  5655  000C10  A0D8               	btfss	status,0,c
  5656  000C12  EF0D  F006         	goto	u5261
  5657  000C16  EF0F  F006         	goto	u5260
  5658  000C1A                     u5261:
  5659  000C1A  EFD8  F005         	goto	l4261
  5660  000C1E                     u5260:
  5661  000C1E                     l4267:
  5662                           
  5663                           ;/Applications/microchip/xc8/v2.31/pic/sources/c99/common/doprnt.c: 390:     mode = (cha
      +                          r)tolower((int)c);
  5664  000C1E  C03A  F007         	movff	efgtoa@c,tolower@c
  5665  000C22  6A08               	clrf	(tolower@c+1)^0,c
  5666  000C24  EC57  F024         	call	_tolower	;wreg free
  5667  000C28  5007               	movf	?_tolower^0,w,c
  5668  000C2A  0100               	movlb	0	; () banked
  5669  000C2C  6F81               	movwf	efgtoa@mode& (0+255),b
  5670  000C2E                     
  5671                           ; BSR set to: 0
  5672                           ;/Applications/microchip/xc8/v2.31/pic/sources/c99/common/doprnt.c: 391:     nmode = mod
      +                          e;
  5673  000C2E  C081  F080         	movff	efgtoa@mode,efgtoa@nmode
  5674  000C32                     
  5675                           ; BSR set to: 0
  5676                           ;/Applications/microchip/xc8/v2.31/pic/sources/c99/common/doprnt.c: 392:     if (mode ==
      +                           'g') {
  5677  000C32  0E67               	movlw	103
  5678  000C34  1981               	xorwf	efgtoa@mode& (0+255),w,b
  5679  000C36  A4D8               	btfss	status,2,c
  5680  000C38  EF20  F006         	goto	u5271
  5681  000C3C  EF22  F006         	goto	u5270
  5682  000C40                     u5271:
  5683  000C40  EF48  F006         	goto	l4281
  5684  000C44                     u5270:
  5685  000C44                     
  5686                           ; BSR set to: 0
  5687                           ;/Applications/microchip/xc8/v2.31/pic/sources/c99/common/doprnt.c: 393:   if (prec == 0
      +                          ) {
  5688  000C44  51D0               	movf	_prec& (0+255),w,b
  5689  000C46  11D1               	iorwf	(_prec+1)& (0+255),w,b
  5690  000C48  A4D8               	btfss	status,2,c
  5691  000C4A  EF29  F006         	goto	u5281
  5692  000C4E  EF2B  F006         	goto	u5280
  5693  000C52                     u5281:
  5694  000C52  EF2F  F006         	goto	l4277
  5695  000C56                     u5280:
  5696  000C56                     
  5697                           ; BSR set to: 0
  5698                           ;/Applications/microchip/xc8/v2.31/pic/sources/c99/common/doprnt.c: 394:    prec = 1;
  5699  000C56  0E00               	movlw	0
  5700  000C58  6FD1               	movwf	(_prec+1)& (0+255),b
  5701  000C5A  0E01               	movlw	1
  5702  000C5C  6FD0               	movwf	_prec& (0+255),b
  5703  000C5E                     l4277:
  5704                           
  5705                           ; BSR set to: 0
  5706                           ;/Applications/microchip/xc8/v2.31/pic/sources/c99/common/doprnt.c: 396:         p = (0 
      +                          < prec) ? prec : 6;
  5707  000C5E  BFD1               	btfsc	(_prec+1)& (0+255),7,b
  5708  000C60  EF3C  F006         	goto	u5290
  5709  000C64  51D1               	movf	(_prec+1)& (0+255),w,b
  5710  000C66  E106               	bnz	u5291
  5711  000C68  05D0               	decf	_prec& (0+255),w,b
  5712  000C6A  B0D8               	btfsc	status,0,c
  5713  000C6C  EF3A  F006         	goto	u5291
  5714  000C70  EF3C  F006         	goto	u5290
  5715  000C74                     u5291:
  5716  000C74  EF42  F006         	goto	l1007
  5717  000C78                     u5290:
  5718  000C78                     l4279:
  5719                           
  5720                           ; BSR set to: 0
  5721  000C78  0E00               	movlw	0
  5722  000C7A  6F7D               	movwf	(efgtoa@p+1)& (0+255),b
  5723  000C7C  0E06               	movlw	6
  5724  000C7E  6F7C               	movwf	efgtoa@p& (0+255),b
  5725  000C80  EF51  F006         	goto	l4287
  5726  000C84                     l1007:
  5727                           
  5728                           ; BSR set to: 0
  5729  000C84  C0D0  F07C         	movff	_prec,efgtoa@p
  5730  000C88  C0D1  F07D         	movff	_prec+1,efgtoa@p+1
  5731  000C8C  EF51  F006         	goto	l4287
  5732  000C90                     l4281:
  5733                           
  5734                           ; BSR set to: 0
  5735                           ;/Applications/microchip/xc8/v2.31/pic/sources/c99/common/doprnt.c: 398:         p = (pr
      +                          ec < 0) ? 6 : prec;
  5736  000C90  BFD1               	btfsc	(_prec+1)& (0+255),7,b
  5737  000C92  EF4D  F006         	goto	u5301
  5738  000C96  EF4F  F006         	goto	u5300
  5739  000C9A                     u5301:
  5740  000C9A  EF3C  F006         	goto	l4279
  5741  000C9E                     u5300:
  5742  000C9E  EF42  F006         	goto	l1007
  5743  000CA2                     l4287:
  5744                           
  5745                           ; BSR set to: 0
  5746                           ;/Applications/microchip/xc8/v2.31/pic/sources/c99/common/doprnt.c: 402:     if (mode ==
      +                           'g') {
  5747  000CA2  0E67               	movlw	103
  5748  000CA4  1981               	xorwf	efgtoa@mode& (0+255),w,b
  5749  000CA6  A4D8               	btfss	status,2,c
  5750  000CA8  EF58  F006         	goto	u5311
  5751  000CAC  EF5A  F006         	goto	u5310
  5752  000CB0                     u5311:
  5753  000CB0  EF89  F006         	goto	l4297
  5754  000CB4                     u5310:
  5755  000CB4                     
  5756                           ; BSR set to: 0
  5757                           ;/Applications/microchip/xc8/v2.31/pic/sources/c99/common/doprnt.c: 403:         if (!(e
      +                           < -4) && !((p - 1) < e)) {
  5758  000CB4  AF91               	btfss	(efgtoa@e+1)& (0+255),7,b
  5759  000CB6  EF68  F006         	goto	u5320
  5760  000CBA  0EFC               	movlw	252
  5761  000CBC  5D90               	subwf	efgtoa@e& (0+255),w,b
  5762  000CBE  0EFF               	movlw	255
  5763  000CC0  5991               	subwfb	(efgtoa@e+1)& (0+255),w,b
  5764  000CC2  A0D8               	btfss	status,0,c
  5765  000CC4  EF66  F006         	goto	u5321
  5766  000CC8  EF68  F006         	goto	u5320
  5767  000CCC                     u5321:
  5768  000CCC  EF87  F006         	goto	l4295
  5769  000CD0                     u5320:
  5770  000CD0                     
  5771                           ; BSR set to: 0
  5772  000CD0  0EFF               	movlw	255
  5773  000CD2  6E3B               	movwf	??_efgtoa^0,c
  5774  000CD4  0EFF               	movlw	255
  5775  000CD6  6E3C               	movwf	(??_efgtoa+1)^0,c
  5776  000CD8  C07C  F03D         	movff	efgtoa@p,??_efgtoa+2
  5777  000CDC  C07D  F03E         	movff	efgtoa@p+1,??_efgtoa+3
  5778  000CE0  503B               	movf	??_efgtoa^0,w,c
  5779  000CE2  263D               	addwf	(??_efgtoa+2)^0,f,c
  5780  000CE4  503C               	movf	(??_efgtoa+1)^0,w,c
  5781  000CE6  223E               	addwfc	(??_efgtoa+3)^0,f,c
  5782  000CE8  5190               	movf	efgtoa@e& (0+255),w,b
  5783  000CEA  5C3D               	subwf	(??_efgtoa+2)^0,w,c
  5784  000CEC  503E               	movf	(??_efgtoa+3)^0,w,c
  5785  000CEE  0A80               	xorlw	128
  5786  000CF0  6E3F               	movwf	(??_efgtoa+4)^0,c
  5787  000CF2  5191               	movf	(efgtoa@e+1)& (0+255),w,b
  5788  000CF4  0A80               	xorlw	128
  5789  000CF6  583F               	subwfb	(??_efgtoa+4)^0,w,c
  5790  000CF8  A0D8               	btfss	status,0,c
  5791  000CFA  EF81  F006         	goto	u5331
  5792  000CFE  EF83  F006         	goto	u5330
  5793  000D02                     u5331:
  5794  000D02  EF87  F006         	goto	l4295
  5795  000D06                     u5330:
  5796  000D06                     
  5797                           ; BSR set to: 0
  5798                           ;/Applications/microchip/xc8/v2.31/pic/sources/c99/common/doprnt.c: 404:             nmo
      +                          de = 'f';
  5799  000D06  0E66               	movlw	102
  5800  000D08  6F80               	movwf	efgtoa@nmode& (0+255),b
  5801                           
  5802                           ;/Applications/microchip/xc8/v2.31/pic/sources/c99/common/doprnt.c: 405:         } else 
      +                          {
  5803  000D0A  EF89  F006         	goto	l4297
  5804  000D0E                     l4295:
  5805                           
  5806                           ; BSR set to: 0
  5807                           ;/Applications/microchip/xc8/v2.31/pic/sources/c99/common/doprnt.c: 406:             nmo
      +                          de = 'e';
  5808  000D0E  0E65               	movlw	101
  5809  000D10  6F80               	movwf	efgtoa@nmode& (0+255),b
  5810  000D12                     l4297:
  5811                           
  5812                           ; BSR set to: 0
  5813                           ;/Applications/microchip/xc8/v2.31/pic/sources/c99/common/doprnt.c: 411:     m = p;
  5814  000D12  C07C  F072         	movff	efgtoa@p,efgtoa@m
  5815  000D16  C07D  F073         	movff	efgtoa@p+1,efgtoa@m+1
  5816  000D1A                     
  5817                           ; BSR set to: 0
  5818                           ;/Applications/microchip/xc8/v2.31/pic/sources/c99/common/doprnt.c: 412:     if (!(mode 
      +                          == 'g') || ((nmode == 'f') && (e < 0))) {
  5819  000D1A  0E67               	movlw	103
  5820  000D1C  1981               	xorwf	efgtoa@mode& (0+255),w,b
  5821  000D1E  A4D8               	btfss	status,2,c
  5822  000D20  EF94  F006         	goto	u5341
  5823  000D24  EF96  F006         	goto	u5340
  5824  000D28                     u5341:
  5825  000D28  EFA6  F006         	goto	l4305
  5826  000D2C                     u5340:
  5827  000D2C                     
  5828                           ; BSR set to: 0
  5829  000D2C  0E66               	movlw	102
  5830  000D2E  1980               	xorwf	efgtoa@nmode& (0+255),w,b
  5831  000D30  A4D8               	btfss	status,2,c
  5832  000D32  EF9D  F006         	goto	u5351
  5833  000D36  EF9F  F006         	goto	u5350
  5834  000D3A                     u5351:
  5835  000D3A  EFA8  F006         	goto	l4307
  5836  000D3E                     u5350:
  5837  000D3E                     
  5838                           ; BSR set to: 0
  5839  000D3E  BF91               	btfsc	(efgtoa@e+1)& (0+255),7,b
  5840  000D40  EFA6  F006         	goto	u5360
  5841  000D44  EFA4  F006         	goto	u5361
  5842  000D48                     u5361:
  5843  000D48  EFA8  F006         	goto	l4307
  5844  000D4C                     u5360:
  5845  000D4C                     l4305:
  5846                           
  5847                           ; BSR set to: 0
  5848                           ;/Applications/microchip/xc8/v2.31/pic/sources/c99/common/doprnt.c: 413:         ++m;
  5849  000D4C  4B72               	infsnz	efgtoa@m& (0+255),f,b
  5850  000D4E  2B73               	incf	(efgtoa@m+1)& (0+255),f,b
  5851  000D50                     l4307:
  5852                           
  5853                           ; BSR set to: 0
  5854                           ;/Applications/microchip/xc8/v2.31/pic/sources/c99/common/doprnt.c: 417:     if (nmode =
      +                          = 'f') {
  5855  000D50  0E66               	movlw	102
  5856  000D52  1980               	xorwf	efgtoa@nmode& (0+255),w,b
  5857  000D54  A4D8               	btfss	status,2,c
  5858  000D56  EFAF  F006         	goto	u5371
  5859  000D5A  EFB1  F006         	goto	u5370
  5860  000D5E                     u5371:
  5861  000D5E  EFD1  F006         	goto	l4317
  5862  000D62                     u5370:
  5863  000D62                     
  5864                           ; BSR set to: 0
  5865                           ;/Applications/microchip/xc8/v2.31/pic/sources/c99/common/doprnt.c: 418:         if (e <
      +                           0) {
  5866  000D62  BF91               	btfsc	(efgtoa@e+1)& (0+255),7,b
  5867  000D64  EFB8  F006         	goto	u5380
  5868  000D68  EFB6  F006         	goto	u5381
  5869  000D6C                     u5381:
  5870  000D6C  EFC4  F006         	goto	l4313
  5871  000D70                     u5380:
  5872  000D70                     
  5873                           ; BSR set to: 0
  5874                           ;/Applications/microchip/xc8/v2.31/pic/sources/c99/common/doprnt.c: 419:             u =
      +                           1.0;
  5875  000D70  0E00               	movlw	0
  5876  000D72  6F94               	movwf	efgtoa@u& (0+255),b
  5877  000D74  0E00               	movlw	0
  5878  000D76  6F95               	movwf	(efgtoa@u+1)& (0+255),b
  5879  000D78  0E80               	movlw	128
  5880  000D7A  6F96               	movwf	(efgtoa@u+2)& (0+255),b
  5881  000D7C  0E3F               	movlw	63
  5882  000D7E  6F97               	movwf	(efgtoa@u+3)& (0+255),b
  5883                           
  5884                           ;/Applications/microchip/xc8/v2.31/pic/sources/c99/common/doprnt.c: 420:             e =
      +                           0;
  5885  000D80  0E00               	movlw	0
  5886  000D82  6F91               	movwf	(efgtoa@e+1)& (0+255),b
  5887  000D84  0E00               	movlw	0
  5888  000D86  6F90               	movwf	efgtoa@e& (0+255),b
  5889  000D88                     l4313:
  5890                           
  5891                           ; BSR set to: 0
  5892                           ;/Applications/microchip/xc8/v2.31/pic/sources/c99/common/doprnt.c: 422:         if (!(m
      +                          ode == 'g')) {
  5893  000D88  0E67               	movlw	103
  5894  000D8A  1981               	xorwf	efgtoa@mode& (0+255),w,b
  5895  000D8C  B4D8               	btfsc	status,2,c
  5896  000D8E  EFCB  F006         	goto	u5391
  5897  000D92  EFCD  F006         	goto	u5390
  5898  000D96                     u5391:
  5899  000D96  EFD1  F006         	goto	l4317
  5900  000D9A                     u5390:
  5901  000D9A                     
  5902                           ; BSR set to: 0
  5903                           ;/Applications/microchip/xc8/v2.31/pic/sources/c99/common/doprnt.c: 423:             m +
      +                          = e;
  5904  000D9A  5190               	movf	efgtoa@e& (0+255),w,b
  5905  000D9C  2772               	addwf	efgtoa@m& (0+255),f,b
  5906  000D9E  5191               	movf	(efgtoa@e+1)& (0+255),w,b
  5907  000DA0  2373               	addwfc	(efgtoa@m+1)& (0+255),f,b
  5908  000DA2                     l4317:
  5909                           
  5910                           ; BSR set to: 0
  5911                           ;/Applications/microchip/xc8/v2.31/pic/sources/c99/common/doprnt.c: 428:     i = 0;
  5912  000DA2  0E00               	movlw	0
  5913  000DA4  6F8B               	movwf	(efgtoa@i+1)& (0+255),b
  5914  000DA6  0E00               	movlw	0
  5915  000DA8  6F8A               	movwf	efgtoa@i& (0+255),b
  5916  000DAA                     
  5917                           ; BSR set to: 0
  5918                           ;/Applications/microchip/xc8/v2.31/pic/sources/c99/common/doprnt.c: 429:     h = g;
  5919  000DAA  C08C  F082         	movff	efgtoa@g,efgtoa@h
  5920  000DAE  C08D  F083         	movff	efgtoa@g+1,efgtoa@h+1
  5921  000DB2  C08E  F084         	movff	efgtoa@g+2,efgtoa@h+2
  5922  000DB6  C08F  F085         	movff	efgtoa@g+3,efgtoa@h+3
  5923  000DBA                     
  5924                           ; BSR set to: 0
  5925                           ;/Applications/microchip/xc8/v2.31/pic/sources/c99/common/doprnt.c: 430:     ou = u;
  5926  000DBA  C094  F074         	movff	efgtoa@u,efgtoa@ou
  5927  000DBE  C095  F075         	movff	efgtoa@u+1,efgtoa@ou+1
  5928  000DC2  C096  F076         	movff	efgtoa@u+2,efgtoa@ou+2
  5929  000DC6  C097  F077         	movff	efgtoa@u+3,efgtoa@ou+3
  5930                           
  5931                           ;/Applications/microchip/xc8/v2.31/pic/sources/c99/common/doprnt.c: 431:     while (i < 
      +                          m) {
  5932  000DCA  EF62  F007         	goto	l4331
  5933  000DCE                     l4323:
  5934                           
  5935                           ; BSR set to: 0
  5936                           ;/Applications/microchip/xc8/v2.31/pic/sources/c99/common/doprnt.c: 432:         l = flo
      +                          orf(h/u);
  5937  000DCE  C082  F001         	movff	efgtoa@h,___fldiv@b
  5938  000DD2  C083  F002         	movff	efgtoa@h+1,___fldiv@b+1
  5939  000DD6  C084  F003         	movff	efgtoa@h+2,___fldiv@b+2
  5940  000DDA  C085  F004         	movff	efgtoa@h+3,___fldiv@b+3
  5941  000DDE  C094  F005         	movff	efgtoa@u,___fldiv@a
  5942  000DE2  C095  F006         	movff	efgtoa@u+1,___fldiv@a+1
  5943  000DE6  C096  F007         	movff	efgtoa@u+2,___fldiv@a+2
  5944  000DEA  C097  F008         	movff	efgtoa@u+3,___fldiv@a+3
  5945  000DEE  EC29  F013         	call	___fldiv	;wreg free
  5946  000DF2  C001  F01A         	movff	?___fldiv,floorf@x
  5947  000DF6  C002  F01B         	movff	?___fldiv+1,floorf@x+1
  5948  000DFA  C003  F01C         	movff	?___fldiv+2,floorf@x+2
  5949  000DFE  C004  F01D         	movff	?___fldiv+3,floorf@x+3
  5950  000E02  EC3C  F019         	call	_floorf	;wreg free
  5951  000E06  C01A  F086         	movff	?_floorf,efgtoa@l
  5952  000E0A  C01B  F087         	movff	?_floorf+1,efgtoa@l+1
  5953  000E0E  C01C  F088         	movff	?_floorf+2,efgtoa@l+2
  5954  000E12  C01D  F089         	movff	?_floorf+3,efgtoa@l+3
  5955                           
  5956                           ;/Applications/microchip/xc8/v2.31/pic/sources/c99/common/doprnt.c: 433:         d = (in
      +                          t)l;
  5957  000E16  C086  F001         	movff	efgtoa@l,___fltol@f1
  5958  000E1A  C087  F002         	movff	efgtoa@l+1,___fltol@f1+1
  5959  000E1E  C088  F003         	movff	efgtoa@l+2,___fltol@f1+2
  5960  000E22  C089  F004         	movff	efgtoa@l+3,___fltol@f1+3
  5961  000E26  EC3B  F01E         	call	___fltol	;wreg free
  5962  000E2A  C001  F078         	movff	?___fltol,efgtoa@d
  5963  000E2E  C002  F079         	movff	?___fltol+1,efgtoa@d+1
  5964  000E32                     
  5965                           ;/Applications/microchip/xc8/v2.31/pic/sources/c99/common/doprnt.c: 434:         h -= l*
      +                          u;
  5966  000E32  C082  F028         	movff	efgtoa@h,___flsub@b
  5967  000E36  C083  F029         	movff	efgtoa@h+1,___flsub@b+1
  5968  000E3A  C084  F02A         	movff	efgtoa@h+2,___flsub@b+2
  5969  000E3E  C085  F02B         	movff	efgtoa@h+3,___flsub@b+3
  5970  000E42  C094  F013         	movff	efgtoa@u,___flmul@a
  5971  000E46  C095  F014         	movff	efgtoa@u+1,___flmul@a+1
  5972  000E4A  C096  F015         	movff	efgtoa@u+2,___flmul@a+2
  5973  000E4E  C097  F016         	movff	efgtoa@u+3,___flmul@a+3
  5974  000E52  C086  F00F         	movff	efgtoa@l,___flmul@b
  5975  000E56  C087  F010         	movff	efgtoa@l+1,___flmul@b+1
  5976  000E5A  C088  F011         	movff	efgtoa@l+2,___flmul@b+2
  5977  000E5E  C089  F012         	movff	efgtoa@l+3,___flmul@b+3
  5978  000E62  EC14  F011         	call	___flmul	;wreg free
  5979  000E66  C00F  F02C         	movff	?___flmul,___flsub@a
  5980  000E6A  C010  F02D         	movff	?___flmul+1,___flsub@a+1
  5981  000E6E  C011  F02E         	movff	?___flmul+2,___flsub@a+2
  5982  000E72  C012  F02F         	movff	?___flmul+3,___flsub@a+3
  5983  000E76  EC29  F025         	call	___flsub	;wreg free
  5984  000E7A  C028  F082         	movff	?___flsub,efgtoa@h
  5985  000E7E  C029  F083         	movff	?___flsub+1,efgtoa@h+1
  5986  000E82  C02A  F084         	movff	?___flsub+2,efgtoa@h+2
  5987  000E86  C02B  F085         	movff	?___flsub+3,efgtoa@h+3
  5988  000E8A                     
  5989                           ;/Applications/microchip/xc8/v2.31/pic/sources/c99/common/doprnt.c: 435:         u = u/1
      +                          0.0;
  5990  000E8A  C094  F001         	movff	efgtoa@u,___fldiv@b
  5991  000E8E  C095  F002         	movff	efgtoa@u+1,___fldiv@b+1
  5992  000E92  C096  F003         	movff	efgtoa@u+2,___fldiv@b+2
  5993  000E96  C097  F004         	movff	efgtoa@u+3,___fldiv@b+3
  5994  000E9A  0E00               	movlw	0
  5995  000E9C  6E05               	movwf	___fldiv@a^0,c
  5996  000E9E  0E00               	movlw	0
  5997  000EA0  6E06               	movwf	(___fldiv@a+1)^0,c
  5998  000EA2  0E20               	movlw	32
  5999  000EA4  6E07               	movwf	(___fldiv@a+2)^0,c
  6000  000EA6  0E41               	movlw	65
  6001  000EA8  6E08               	movwf	(___fldiv@a+3)^0,c
  6002  000EAA  EC29  F013         	call	___fldiv	;wreg free
  6003  000EAE  C001  F094         	movff	?___fldiv,efgtoa@u
  6004  000EB2  C002  F095         	movff	?___fldiv+1,efgtoa@u+1
  6005  000EB6  C003  F096         	movff	?___fldiv+2,efgtoa@u+2
  6006  000EBA  C004  F097         	movff	?___fldiv+3,efgtoa@u+3
  6007  000EBE                     
  6008                           ;/Applications/microchip/xc8/v2.31/pic/sources/c99/common/doprnt.c: 436:         ++i;
  6009  000EBE  0100               	movlb	0	; () banked
  6010  000EC0  4B8A               	infsnz	efgtoa@i& (0+255),f,b
  6011  000EC2  2B8B               	incf	(efgtoa@i+1)& (0+255),f,b
  6012  000EC4                     l4331:
  6013                           
  6014                           ; BSR set to: 0
  6015                           ;/Applications/microchip/xc8/v2.31/pic/sources/c99/common/doprnt.c: 431:     while (i < 
      +                          m) {
  6016  000EC4  5172               	movf	efgtoa@m& (0+255),w,b
  6017  000EC6  5D8A               	subwf	efgtoa@i& (0+255),w,b
  6018  000EC8  518B               	movf	(efgtoa@i+1)& (0+255),w,b
  6019  000ECA  0A80               	xorlw	128
  6020  000ECC  6E3B               	movwf	??_efgtoa^0,c
  6021  000ECE  5173               	movf	(efgtoa@m+1)& (0+255),w,b
  6022  000ED0  0A80               	xorlw	128
  6023  000ED2  583B               	subwfb	??_efgtoa^0,w,c
  6024  000ED4  A0D8               	btfss	status,0,c
  6025  000ED6  EF6F  F007         	goto	u5401
  6026  000EDA  EF71  F007         	goto	u5400
  6027  000EDE                     u5401:
  6028  000EDE  EFE7  F006         	goto	l4323
  6029  000EE2                     u5400:
  6030  000EE2                     
  6031                           ; BSR set to: 0
  6032                           ;/Applications/microchip/xc8/v2.31/pic/sources/c99/common/doprnt.c: 440:     l = u*5.0;
  6033  000EE2  C094  F00F         	movff	efgtoa@u,___flmul@b
  6034  000EE6  C095  F010         	movff	efgtoa@u+1,___flmul@b+1
  6035  000EEA  C096  F011         	movff	efgtoa@u+2,___flmul@b+2
  6036  000EEE  C097  F012         	movff	efgtoa@u+3,___flmul@b+3
  6037  000EF2  0E00               	movlw	0
  6038  000EF4  6E13               	movwf	___flmul@a^0,c
  6039  000EF6  0E00               	movlw	0
  6040  000EF8  6E14               	movwf	(___flmul@a+1)^0,c
  6041  000EFA  0EA0               	movlw	160
  6042  000EFC  6E15               	movwf	(___flmul@a+2)^0,c
  6043  000EFE  0E40               	movlw	64
  6044  000F00  6E16               	movwf	(___flmul@a+3)^0,c
  6045  000F02  EC14  F011         	call	___flmul	;wreg free
  6046  000F06  C00F  F086         	movff	?___flmul,efgtoa@l
  6047  000F0A  C010  F087         	movff	?___flmul+1,efgtoa@l+1
  6048  000F0E  C011  F088         	movff	?___flmul+2,efgtoa@l+2
  6049  000F12  C012  F089         	movff	?___flmul+3,efgtoa@l+3
  6050  000F16                     
  6051                           ;/Applications/microchip/xc8/v2.31/pic/sources/c99/common/doprnt.c: 441:     if (h < l) 
      +                          {
  6052  000F16  C082  F028         	movff	efgtoa@h,___flge@ff1
  6053  000F1A  C083  F029         	movff	efgtoa@h+1,___flge@ff1+1
  6054  000F1E  C084  F02A         	movff	efgtoa@h+2,___flge@ff1+2
  6055  000F22  C085  F02B         	movff	efgtoa@h+3,___flge@ff1+3
  6056  000F26  C086  F02C         	movff	efgtoa@l,___flge@ff2
  6057  000F2A  C087  F02D         	movff	efgtoa@l+1,___flge@ff2+1
  6058  000F2E  C088  F02E         	movff	efgtoa@l+2,___flge@ff2+2
  6059  000F32  C089  F02F         	movff	efgtoa@l+3,___flge@ff2+3
  6060  000F36  EC40  F01F         	call	___flge	;wreg free
  6061  000F3A  B0D8               	btfsc	status,0,c
  6062  000F3C  EFA2  F007         	goto	u5411
  6063  000F40  EFA4  F007         	goto	u5410
  6064  000F44                     u5411:
  6065  000F44  EFAF  F007         	goto	l4339
  6066  000F48                     u5410:
  6067  000F48                     
  6068                           ;/Applications/microchip/xc8/v2.31/pic/sources/c99/common/doprnt.c: 442:         l = 0.0
      +                          ;
  6069  000F48  0E00               	movlw	0
  6070  000F4A  0100               	movlb	0	; () banked
  6071  000F4C  6F86               	movwf	efgtoa@l& (0+255),b
  6072  000F4E  0E00               	movlw	0
  6073  000F50  6F87               	movwf	(efgtoa@l+1)& (0+255),b
  6074  000F52  0E00               	movlw	0
  6075  000F54  6F88               	movwf	(efgtoa@l+2)& (0+255),b
  6076  000F56  0E00               	movlw	0
  6077  000F58  6F89               	movwf	(efgtoa@l+3)& (0+255),b
  6078                           
  6079                           ;/Applications/microchip/xc8/v2.31/pic/sources/c99/common/doprnt.c: 443:     } else {
  6080  000F5A  EFD8  F007         	goto	l4345
  6081  000F5E                     l4339:
  6082                           
  6083                           ;/Applications/microchip/xc8/v2.31/pic/sources/c99/common/doprnt.c: 445:         if ((h 
      +                          == l) && !(d % 2)) {
  6084  000F5E  C082  F001         	movff	efgtoa@h,___fleq@ff1
  6085  000F62  C083  F002         	movff	efgtoa@h+1,___fleq@ff1+1
  6086  000F66  C084  F003         	movff	efgtoa@h+2,___fleq@ff1+2
  6087  000F6A  C085  F004         	movff	efgtoa@h+3,___fleq@ff1+3
  6088  000F6E  C086  F005         	movff	efgtoa@l,___fleq@ff2
  6089  000F72  C087  F006         	movff	efgtoa@l+1,___fleq@ff2+1
  6090  000F76  C088  F007         	movff	efgtoa@l+2,___fleq@ff2+2
  6091  000F7A  C089  F008         	movff	efgtoa@l+3,___fleq@ff2+3
  6092  000F7E  EC9A  F022         	call	___fleq	;wreg free
  6093  000F82  A0D8               	btfss	status,0,c
  6094  000F84  EFC6  F007         	goto	u5421
  6095  000F88  EFC8  F007         	goto	u5420
  6096  000F8C                     u5421:
  6097  000F8C  EFD8  F007         	goto	l4345
  6098  000F90                     u5420:
  6099  000F90  0100               	movlb	0	; () banked
  6100  000F92  B178               	btfsc	efgtoa@d& (0+255),0,b
  6101  000F94  EFCE  F007         	goto	u5431
  6102  000F98  EFD0  F007         	goto	u5430
  6103  000F9C                     u5431:
  6104  000F9C  EFD8  F007         	goto	l4345
  6105  000FA0                     u5430:
  6106  000FA0                     
  6107                           ; BSR set to: 0
  6108                           ;/Applications/microchip/xc8/v2.31/pic/sources/c99/common/doprnt.c: 446:             l =
      +                           0.0;
  6109  000FA0  0E00               	movlw	0
  6110  000FA2  6F86               	movwf	efgtoa@l& (0+255),b
  6111  000FA4  0E00               	movlw	0
  6112  000FA6  6F87               	movwf	(efgtoa@l+1)& (0+255),b
  6113  000FA8  0E00               	movlw	0
  6114  000FAA  6F88               	movwf	(efgtoa@l+2)& (0+255),b
  6115  000FAC  0E00               	movlw	0
  6116  000FAE  6F89               	movwf	(efgtoa@l+3)& (0+255),b
  6117  000FB0                     l4345:
  6118                           
  6119                           ;/Applications/microchip/xc8/v2.31/pic/sources/c99/common/doprnt.c: 451:     h = g + l;
  6120  000FB0  C08C  F001         	movff	efgtoa@g,___fladd@b
  6121  000FB4  C08D  F002         	movff	efgtoa@g+1,___fladd@b+1
  6122  000FB8  C08E  F003         	movff	efgtoa@g+2,___fladd@b+2
  6123  000FBC  C08F  F004         	movff	efgtoa@g+3,___fladd@b+3
  6124  000FC0  C086  F005         	movff	efgtoa@l,___fladd@a
  6125  000FC4  C087  F006         	movff	efgtoa@l+1,___fladd@a+1
  6126  000FC8  C088  F007         	movff	efgtoa@l+2,___fladd@a+2
  6127  000FCC  C089  F008         	movff	efgtoa@l+3,___fladd@a+3
  6128  000FD0  ECB4  F00E         	call	___fladd	;wreg free
  6129  000FD4  C001  F082         	movff	?___fladd,efgtoa@h
  6130  000FD8  C002  F083         	movff	?___fladd+1,efgtoa@h+1
  6131  000FDC  C003  F084         	movff	?___fladd+2,efgtoa@h+2
  6132  000FE0  C004  F085         	movff	?___fladd+3,efgtoa@h+3
  6133  000FE4                     
  6134                           ;/Applications/microchip/xc8/v2.31/pic/sources/c99/common/doprnt.c: 453:  if (h >= (ou*1
      +                          0.0)) {
  6135  000FE4  C082  F028         	movff	efgtoa@h,___flge@ff1
  6136  000FE8  C083  F029         	movff	efgtoa@h+1,___flge@ff1+1
  6137  000FEC  C084  F02A         	movff	efgtoa@h+2,___flge@ff1+2
  6138  000FF0  C085  F02B         	movff	efgtoa@h+3,___flge@ff1+3
  6139  000FF4  0E00               	movlw	0
  6140  000FF6  6E13               	movwf	___flmul@a^0,c
  6141  000FF8  0E00               	movlw	0
  6142  000FFA  6E14               	movwf	(___flmul@a+1)^0,c
  6143  000FFC  0E20               	movlw	32
  6144  000FFE  6E15               	movwf	(___flmul@a+2)^0,c
  6145  001000  0E41               	movlw	65
  6146  001002  6E16               	movwf	(___flmul@a+3)^0,c
  6147  001004  C074  F00F         	movff	efgtoa@ou,___flmul@b
  6148  001008  C075  F010         	movff	efgtoa@ou+1,___flmul@b+1
  6149  00100C  C076  F011         	movff	efgtoa@ou+2,___flmul@b+2
  6150  001010  C077  F012         	movff	efgtoa@ou+3,___flmul@b+3
  6151  001014  EC14  F011         	call	___flmul	;wreg free
  6152  001018  C00F  F02C         	movff	?___flmul,___flge@ff2
  6153  00101C  C010  F02D         	movff	?___flmul+1,___flge@ff2+1
  6154  001020  C011  F02E         	movff	?___flmul+2,___flge@ff2+2
  6155  001024  C012  F02F         	movff	?___flmul+3,___flge@ff2+3
  6156  001028  EC40  F01F         	call	___flge	;wreg free
  6157  00102C  A0D8               	btfss	status,0,c
  6158  00102E  EF1B  F008         	goto	u5441
  6159  001032  EF1D  F008         	goto	u5440
  6160  001036                     u5441:
  6161  001036  EF46  F008         	goto	l4357
  6162  00103A                     u5440:
  6163  00103A                     
  6164                           ;/Applications/microchip/xc8/v2.31/pic/sources/c99/common/doprnt.c: 454:   e++;
  6165  00103A  0100               	movlb	0	; () banked
  6166  00103C  4B90               	infsnz	efgtoa@e& (0+255),f,b
  6167  00103E  2B91               	incf	(efgtoa@e+1)& (0+255),f,b
  6168  001040                     
  6169                           ; BSR set to: 0
  6170                           ;/Applications/microchip/xc8/v2.31/pic/sources/c99/common/doprnt.c: 455:   ou *= 10.0;
  6171  001040  C074  F00F         	movff	efgtoa@ou,___flmul@b
  6172  001044  C075  F010         	movff	efgtoa@ou+1,___flmul@b+1
  6173  001048  C076  F011         	movff	efgtoa@ou+2,___flmul@b+2
  6174  00104C  C077  F012         	movff	efgtoa@ou+3,___flmul@b+3
  6175  001050  0E00               	movlw	0
  6176  001052  6E13               	movwf	___flmul@a^0,c
  6177  001054  0E00               	movlw	0
  6178  001056  6E14               	movwf	(___flmul@a+1)^0,c
  6179  001058  0E20               	movlw	32
  6180  00105A  6E15               	movwf	(___flmul@a+2)^0,c
  6181  00105C  0E41               	movlw	65
  6182  00105E  6E16               	movwf	(___flmul@a+3)^0,c
  6183  001060  EC14  F011         	call	___flmul	;wreg free
  6184  001064  C00F  F074         	movff	?___flmul,efgtoa@ou
  6185  001068  C010  F075         	movff	?___flmul+1,efgtoa@ou+1
  6186  00106C  C011  F076         	movff	?___flmul+2,efgtoa@ou+2
  6187  001070  C012  F077         	movff	?___flmul+3,efgtoa@ou+3
  6188  001074                     
  6189                           ;/Applications/microchip/xc8/v2.31/pic/sources/c99/common/doprnt.c: 456:   if (nmode == 
      +                          'f') {
  6190  001074  0E66               	movlw	102
  6191  001076  0100               	movlb	0	; () banked
  6192  001078  1980               	xorwf	efgtoa@nmode& (0+255),w,b
  6193  00107A  A4D8               	btfss	status,2,c
  6194  00107C  EF42  F008         	goto	u5451
  6195  001080  EF44  F008         	goto	u5450
  6196  001084                     u5451:
  6197  001084  EF46  F008         	goto	l4357
  6198  001088                     u5450:
  6199  001088                     
  6200                           ; BSR set to: 0
  6201                           ;/Applications/microchip/xc8/v2.31/pic/sources/c99/common/doprnt.c: 458:    m++;
  6202  001088  4B72               	infsnz	efgtoa@m& (0+255),f,b
  6203  00108A  2B73               	incf	(efgtoa@m+1)& (0+255),f,b
  6204  00108C                     l4357:
  6205                           
  6206                           ;/Applications/microchip/xc8/v2.31/pic/sources/c99/common/doprnt.c: 463:     u = ou;
  6207  00108C  C074  F094         	movff	efgtoa@ou,efgtoa@u
  6208  001090  C075  F095         	movff	efgtoa@ou+1,efgtoa@u+1
  6209  001094  C076  F096         	movff	efgtoa@ou+2,efgtoa@u+2
  6210  001098  C077  F097         	movff	efgtoa@ou+3,efgtoa@u+3
  6211  00109C                     
  6212                           ;/Applications/microchip/xc8/v2.31/pic/sources/c99/common/doprnt.c: 464:     ne = (nmode
      +                           == 'e') ? 0 : e;
  6213  00109C  0E65               	movlw	101
  6214  00109E  0100               	movlb	0	; () banked
  6215  0010A0  1980               	xorwf	efgtoa@nmode& (0+255),w,b
  6216  0010A2  B4D8               	btfsc	status,2,c
  6217  0010A4  EF56  F008         	goto	u5461
  6218  0010A8  EF58  F008         	goto	u5460
  6219  0010AC                     u5461:
  6220  0010AC  EF5E  F008         	goto	l4363
  6221  0010B0                     u5460:
  6222  0010B0                     
  6223                           ; BSR set to: 0
  6224  0010B0  C090  F070         	movff	efgtoa@e,efgtoa@ne
  6225  0010B4  C091  F071         	movff	efgtoa@e+1,efgtoa@ne+1
  6226  0010B8  EF62  F008         	goto	l1035
  6227  0010BC                     l4363:
  6228                           
  6229                           ; BSR set to: 0
  6230  0010BC  0E00               	movlw	0
  6231  0010BE  6F71               	movwf	(efgtoa@ne+1)& (0+255),b
  6232  0010C0  0E00               	movlw	0
  6233  0010C2  6F70               	movwf	efgtoa@ne& (0+255),b
  6234  0010C4                     l1035:
  6235                           
  6236                           ; BSR set to: 0
  6237                           ;/Applications/microchip/xc8/v2.31/pic/sources/c99/common/doprnt.c: 465:     pp = 0;
  6238  0010C4  0E00               	movlw	0
  6239  0010C6  6F6F               	movwf	(efgtoa@pp+1)& (0+255),b
  6240  0010C8  0E00               	movlw	0
  6241  0010CA  6F6E               	movwf	efgtoa@pp& (0+255),b
  6242                           
  6243                           ;/Applications/microchip/xc8/v2.31/pic/sources/c99/common/doprnt.c: 466:     t = 0;
  6244  0010CC  0E00               	movlw	0
  6245  0010CE  6F6D               	movwf	(efgtoa@t+1)& (0+255),b
  6246  0010D0  0E00               	movlw	0
  6247  0010D2  6F6C               	movwf	efgtoa@t& (0+255),b
  6248                           
  6249                           ;/Applications/microchip/xc8/v2.31/pic/sources/c99/common/doprnt.c: 467:     i = 0;
  6250  0010D4  0E00               	movlw	0
  6251  0010D6  6F8B               	movwf	(efgtoa@i+1)& (0+255),b
  6252  0010D8  0E00               	movlw	0
  6253  0010DA  6F8A               	movwf	efgtoa@i& (0+255),b
  6254                           
  6255                           ;/Applications/microchip/xc8/v2.31/pic/sources/c99/common/doprnt.c: 468:     while ((i <
      +                           m) && (n < (80 - 5))) {
  6256  0010DC  EF5D  F009         	goto	l4413
  6257  0010E0                     l4365:
  6258                           
  6259                           ; BSR set to: 0
  6260                           ;/Applications/microchip/xc8/v2.31/pic/sources/c99/common/doprnt.c: 469:         l = flo
      +                          orf(h/u);
  6261  0010E0  C082  F001         	movff	efgtoa@h,___fldiv@b
  6262  0010E4  C083  F002         	movff	efgtoa@h+1,___fldiv@b+1
  6263  0010E8  C084  F003         	movff	efgtoa@h+2,___fldiv@b+2
  6264  0010EC  C085  F004         	movff	efgtoa@h+3,___fldiv@b+3
  6265  0010F0  C094  F005         	movff	efgtoa@u,___fldiv@a
  6266  0010F4  C095  F006         	movff	efgtoa@u+1,___fldiv@a+1
  6267  0010F8  C096  F007         	movff	efgtoa@u+2,___fldiv@a+2
  6268  0010FC  C097  F008         	movff	efgtoa@u+3,___fldiv@a+3
  6269  001100  EC29  F013         	call	___fldiv	;wreg free
  6270  001104  C001  F01A         	movff	?___fldiv,floorf@x
  6271  001108  C002  F01B         	movff	?___fldiv+1,floorf@x+1
  6272  00110C  C003  F01C         	movff	?___fldiv+2,floorf@x+2
  6273  001110  C004  F01D         	movff	?___fldiv+3,floorf@x+3
  6274  001114  EC3C  F019         	call	_floorf	;wreg free
  6275  001118  C01A  F086         	movff	?_floorf,efgtoa@l
  6276  00111C  C01B  F087         	movff	?_floorf+1,efgtoa@l+1
  6277  001120  C01C  F088         	movff	?_floorf+2,efgtoa@l+2
  6278  001124  C01D  F089         	movff	?_floorf+3,efgtoa@l+3
  6279                           
  6280                           ;/Applications/microchip/xc8/v2.31/pic/sources/c99/common/doprnt.c: 470:         d = (in
      +                          t)l;
  6281  001128  C086  F001         	movff	efgtoa@l,___fltol@f1
  6282  00112C  C087  F002         	movff	efgtoa@l+1,___fltol@f1+1
  6283  001130  C088  F003         	movff	efgtoa@l+2,___fltol@f1+2
  6284  001134  C089  F004         	movff	efgtoa@l+3,___fltol@f1+3
  6285  001138  EC3B  F01E         	call	___fltol	;wreg free
  6286  00113C  C001  F078         	movff	?___fltol,efgtoa@d
  6287  001140  C002  F079         	movff	?___fltol+1,efgtoa@d+1
  6288  001144                     
  6289                           ;/Applications/microchip/xc8/v2.31/pic/sources/c99/common/doprnt.c: 471:         if (!(f
      +                          lags & (1 << 4)) && !d && (mode == 'g') && (ne < 0)) {
  6290  001144  0100               	movlb	0	; () banked
  6291  001146  B9D2               	btfsc	_flags& (0+255),4,b
  6292  001148  EFA8  F008         	goto	u5471
  6293  00114C  EFAA  F008         	goto	u5470
  6294  001150                     u5471:
  6295  001150  EFC7  F008         	goto	l4377
  6296  001154                     u5470:
  6297  001154                     
  6298                           ; BSR set to: 0
  6299  001154  5178               	movf	efgtoa@d& (0+255),w,b
  6300  001156  1179               	iorwf	(efgtoa@d+1)& (0+255),w,b
  6301  001158  A4D8               	btfss	status,2,c
  6302  00115A  EFB1  F008         	goto	u5481
  6303  00115E  EFB3  F008         	goto	u5480
  6304  001162                     u5481:
  6305  001162  EFC7  F008         	goto	l4377
  6306  001166                     u5480:
  6307  001166                     
  6308                           ; BSR set to: 0
  6309  001166  0E67               	movlw	103
  6310  001168  1981               	xorwf	efgtoa@mode& (0+255),w,b
  6311  00116A  A4D8               	btfss	status,2,c
  6312  00116C  EFBA  F008         	goto	u5491
  6313  001170  EFBC  F008         	goto	u5490
  6314  001174                     u5491:
  6315  001174  EFC7  F008         	goto	l4377
  6316  001178                     u5490:
  6317  001178                     
  6318                           ; BSR set to: 0
  6319  001178  BF71               	btfsc	(efgtoa@ne+1)& (0+255),7,b
  6320  00117A  EFC3  F008         	goto	u5500
  6321  00117E  EFC1  F008         	goto	u5501
  6322  001182                     u5501:
  6323  001182  EFC7  F008         	goto	l4377
  6324  001186                     u5500:
  6325  001186                     
  6326                           ; BSR set to: 0
  6327                           ;/Applications/microchip/xc8/v2.31/pic/sources/c99/common/doprnt.c: 472:             ++t
      +                          ;
  6328  001186  4B6C               	infsnz	efgtoa@t& (0+255),f,b
  6329  001188  2B6D               	incf	(efgtoa@t+1)& (0+255),f,b
  6330                           
  6331                           ;/Applications/microchip/xc8/v2.31/pic/sources/c99/common/doprnt.c: 473:         } else 
      +                          {
  6332  00118A  EF11  F009         	goto	l4405
  6333  00118E                     l4377:
  6334                           
  6335                           ; BSR set to: 0
  6336                           ;/Applications/microchip/xc8/v2.31/pic/sources/c99/common/doprnt.c: 474:             if 
      +                          (!pp && (ne < 0)) {
  6337  00118E  516E               	movf	efgtoa@pp& (0+255),w,b
  6338  001190  116F               	iorwf	(efgtoa@pp+1)& (0+255),w,b
  6339  001192  A4D8               	btfss	status,2,c
  6340  001194  EFCE  F008         	goto	u5511
  6341  001198  EFD0  F008         	goto	u5510
  6342  00119C                     u5511:
  6343  00119C  EFFA  F008         	goto	l4397
  6344  0011A0                     u5510:
  6345  0011A0                     
  6346                           ; BSR set to: 0
  6347  0011A0  BF71               	btfsc	(efgtoa@ne+1)& (0+255),7,b
  6348  0011A2  EFD7  F008         	goto	u5520
  6349  0011A6  EFD5  F008         	goto	u5521
  6350  0011AA                     u5521:
  6351  0011AA  EFFA  F008         	goto	l4397
  6352  0011AE                     u5520:
  6353  0011AE                     
  6354                           ; BSR set to: 0
  6355                           ;/Applications/microchip/xc8/v2.31/pic/sources/c99/common/doprnt.c: 475:                
      +                           dbuf[n++] = '.';
  6356  0011AE  0E10               	movlw	low _dbuf
  6357  0011B0  2592               	addwf	efgtoa@n& (0+255),w,b
  6358  0011B2  6ED9               	movwf	fsr2l,c
  6359  0011B4  0E01               	movlw	high _dbuf
  6360  0011B6  2193               	addwfc	(efgtoa@n+1)& (0+255),w,b
  6361  0011B8  6EDA               	movwf	fsr2h,c
  6362  0011BA  0E2E               	movlw	46
  6363  0011BC  6EDF               	movwf	indf2,c
  6364  0011BE                     
  6365                           ; BSR set to: 0
  6366  0011BE  4B92               	infsnz	efgtoa@n& (0+255),f,b
  6367  0011C0  2B93               	incf	(efgtoa@n+1)& (0+255),f,b
  6368  0011C2                     
  6369                           ; BSR set to: 0
  6370                           ;/Applications/microchip/xc8/v2.31/pic/sources/c99/common/doprnt.c: 476:                
      +                           --w;
  6371  0011C2  077E               	decf	efgtoa@w& (0+255),f,b
  6372  0011C4  A0D8               	btfss	status,0,c
  6373  0011C6  077F               	decf	(efgtoa@w+1)& (0+255),f,b
  6374  0011C8                     
  6375                           ; BSR set to: 0
  6376                           ;/Applications/microchip/xc8/v2.31/pic/sources/c99/common/doprnt.c: 477:                
      +                           pp = 1;
  6377  0011C8  0E00               	movlw	0
  6378  0011CA  6F6F               	movwf	(efgtoa@pp+1)& (0+255),b
  6379  0011CC  0E01               	movlw	1
  6380  0011CE  6F6E               	movwf	efgtoa@pp& (0+255),b
  6381  0011D0  EFFA  F008         	goto	l4397
  6382  0011D4                     l4389:
  6383                           
  6384                           ; BSR set to: 0
  6385                           ;/Applications/microchip/xc8/v2.31/pic/sources/c99/common/doprnt.c: 480:                
      +                           dbuf[n++] = '0';
  6386  0011D4  0E10               	movlw	low _dbuf
  6387  0011D6  2592               	addwf	efgtoa@n& (0+255),w,b
  6388  0011D8  6ED9               	movwf	fsr2l,c
  6389  0011DA  0E01               	movlw	high _dbuf
  6390  0011DC  2193               	addwfc	(efgtoa@n+1)& (0+255),w,b
  6391  0011DE  6EDA               	movwf	fsr2h,c
  6392  0011E0  0E30               	movlw	48
  6393  0011E2  6EDF               	movwf	indf2,c
  6394  0011E4                     
  6395                           ; BSR set to: 0
  6396  0011E4  4B92               	infsnz	efgtoa@n& (0+255),f,b
  6397  0011E6  2B93               	incf	(efgtoa@n+1)& (0+255),f,b
  6398  0011E8                     
  6399                           ; BSR set to: 0
  6400                           ;/Applications/microchip/xc8/v2.31/pic/sources/c99/common/doprnt.c: 481:                
      +                           --w;
  6401  0011E8  077E               	decf	efgtoa@w& (0+255),f,b
  6402  0011EA  A0D8               	btfss	status,0,c
  6403  0011EC  077F               	decf	(efgtoa@w+1)& (0+255),f,b
  6404  0011EE                     
  6405                           ; BSR set to: 0
  6406                           ;/Applications/microchip/xc8/v2.31/pic/sources/c99/common/doprnt.c: 482:                
      +                           --t;
  6407  0011EE  076C               	decf	efgtoa@t& (0+255),f,b
  6408  0011F0  A0D8               	btfss	status,0,c
  6409  0011F2  076D               	decf	(efgtoa@t+1)& (0+255),f,b
  6410  0011F4                     l4397:
  6411                           
  6412                           ; BSR set to: 0
  6413                           ;/Applications/microchip/xc8/v2.31/pic/sources/c99/common/doprnt.c: 479:             whi
      +                          le (t) {
  6414  0011F4  516C               	movf	efgtoa@t& (0+255),w,b
  6415  0011F6  116D               	iorwf	(efgtoa@t+1)& (0+255),w,b
  6416  0011F8  A4D8               	btfss	status,2,c
  6417  0011FA  EF01  F009         	goto	u5531
  6418  0011FE  EF03  F009         	goto	u5530
  6419  001202                     u5531:
  6420  001202  EFEA  F008         	goto	l4389
  6421  001206                     u5530:
  6422  001206                     
  6423                           ; BSR set to: 0
  6424                           ;/Applications/microchip/xc8/v2.31/pic/sources/c99/common/doprnt.c: 484:             dbu
      +                          f[n++] = (char)((int)'0' + d);
  6425  001206  0E10               	movlw	low _dbuf
  6426  001208  2592               	addwf	efgtoa@n& (0+255),w,b
  6427  00120A  6ED9               	movwf	fsr2l,c
  6428  00120C  0E01               	movlw	high _dbuf
  6429  00120E  2193               	addwfc	(efgtoa@n+1)& (0+255),w,b
  6430  001210  6EDA               	movwf	fsr2h,c
  6431  001212  5178               	movf	efgtoa@d& (0+255),w,b
  6432  001214  0F30               	addlw	48
  6433  001216  6EDF               	movwf	indf2,c
  6434  001218                     
  6435                           ; BSR set to: 0
  6436  001218  4B92               	infsnz	efgtoa@n& (0+255),f,b
  6437  00121A  2B93               	incf	(efgtoa@n+1)& (0+255),f,b
  6438  00121C                     
  6439                           ; BSR set to: 0
  6440                           ;/Applications/microchip/xc8/v2.31/pic/sources/c99/common/doprnt.c: 485:             --w
      +                          ;
  6441  00121C  077E               	decf	efgtoa@w& (0+255),f,b
  6442  00121E  A0D8               	btfss	status,0,c
  6443  001220  077F               	decf	(efgtoa@w+1)& (0+255),f,b
  6444  001222                     l4405:
  6445                           
  6446                           ; BSR set to: 0
  6447                           ;/Applications/microchip/xc8/v2.31/pic/sources/c99/common/doprnt.c: 487:         h -= l*
      +                          u;
  6448  001222  C082  F028         	movff	efgtoa@h,___flsub@b
  6449  001226  C083  F029         	movff	efgtoa@h+1,___flsub@b+1
  6450  00122A  C084  F02A         	movff	efgtoa@h+2,___flsub@b+2
  6451  00122E  C085  F02B         	movff	efgtoa@h+3,___flsub@b+3
  6452  001232  C094  F013         	movff	efgtoa@u,___flmul@a
  6453  001236  C095  F014         	movff	efgtoa@u+1,___flmul@a+1
  6454  00123A  C096  F015         	movff	efgtoa@u+2,___flmul@a+2
  6455  00123E  C097  F016         	movff	efgtoa@u+3,___flmul@a+3
  6456  001242  C086  F00F         	movff	efgtoa@l,___flmul@b
  6457  001246  C087  F010         	movff	efgtoa@l+1,___flmul@b+1
  6458  00124A  C088  F011         	movff	efgtoa@l+2,___flmul@b+2
  6459  00124E  C089  F012         	movff	efgtoa@l+3,___flmul@b+3
  6460  001252  EC14  F011         	call	___flmul	;wreg free
  6461  001256  C00F  F02C         	movff	?___flmul,___flsub@a
  6462  00125A  C010  F02D         	movff	?___flmul+1,___flsub@a+1
  6463  00125E  C011  F02E         	movff	?___flmul+2,___flsub@a+2
  6464  001262  C012  F02F         	movff	?___flmul+3,___flsub@a+3
  6465  001266  EC29  F025         	call	___flsub	;wreg free
  6466  00126A  C028  F082         	movff	?___flsub,efgtoa@h
  6467  00126E  C029  F083         	movff	?___flsub+1,efgtoa@h+1
  6468  001272  C02A  F084         	movff	?___flsub+2,efgtoa@h+2
  6469  001276  C02B  F085         	movff	?___flsub+3,efgtoa@h+3
  6470  00127A                     
  6471                           ;/Applications/microchip/xc8/v2.31/pic/sources/c99/common/doprnt.c: 488:         u = u/1
      +                          0.0;
  6472  00127A  C094  F001         	movff	efgtoa@u,___fldiv@b
  6473  00127E  C095  F002         	movff	efgtoa@u+1,___fldiv@b+1
  6474  001282  C096  F003         	movff	efgtoa@u+2,___fldiv@b+2
  6475  001286  C097  F004         	movff	efgtoa@u+3,___fldiv@b+3
  6476  00128A  0E00               	movlw	0
  6477  00128C  6E05               	movwf	___fldiv@a^0,c
  6478  00128E  0E00               	movlw	0
  6479  001290  6E06               	movwf	(___fldiv@a+1)^0,c
  6480  001292  0E20               	movlw	32
  6481  001294  6E07               	movwf	(___fldiv@a+2)^0,c
  6482  001296  0E41               	movlw	65
  6483  001298  6E08               	movwf	(___fldiv@a+3)^0,c
  6484  00129A  EC29  F013         	call	___fldiv	;wreg free
  6485  00129E  C001  F094         	movff	?___fldiv,efgtoa@u
  6486  0012A2  C002  F095         	movff	?___fldiv+1,efgtoa@u+1
  6487  0012A6  C003  F096         	movff	?___fldiv+2,efgtoa@u+2
  6488  0012AA  C004  F097         	movff	?___fldiv+3,efgtoa@u+3
  6489  0012AE                     
  6490                           ;/Applications/microchip/xc8/v2.31/pic/sources/c99/common/doprnt.c: 489:         --ne;
  6491  0012AE  0100               	movlb	0	; () banked
  6492  0012B0  0770               	decf	efgtoa@ne& (0+255),f,b
  6493  0012B2  A0D8               	btfss	status,0,c
  6494  0012B4  0771               	decf	(efgtoa@ne+1)& (0+255),f,b
  6495  0012B6                     
  6496                           ; BSR set to: 0
  6497                           ;/Applications/microchip/xc8/v2.31/pic/sources/c99/common/doprnt.c: 490:         ++i;
  6498  0012B6  4B8A               	infsnz	efgtoa@i& (0+255),f,b
  6499  0012B8  2B8B               	incf	(efgtoa@i+1)& (0+255),f,b
  6500  0012BA                     l4413:
  6501                           
  6502                           ; BSR set to: 0
  6503                           ;/Applications/microchip/xc8/v2.31/pic/sources/c99/common/doprnt.c: 468:     while ((i <
      +                           m) && (n < (80 - 5))) {
  6504  0012BA  5172               	movf	efgtoa@m& (0+255),w,b
  6505  0012BC  5D8A               	subwf	efgtoa@i& (0+255),w,b
  6506  0012BE  518B               	movf	(efgtoa@i+1)& (0+255),w,b
  6507  0012C0  0A80               	xorlw	128
  6508  0012C2  6E3B               	movwf	??_efgtoa^0,c
  6509  0012C4  5173               	movf	(efgtoa@m+1)& (0+255),w,b
  6510  0012C6  0A80               	xorlw	128
  6511  0012C8  583B               	subwfb	??_efgtoa^0,w,c
  6512  0012CA  B0D8               	btfsc	status,0,c
  6513  0012CC  EF6A  F009         	goto	u5541
  6514  0012D0  EF6C  F009         	goto	u5540
  6515  0012D4                     u5541:
  6516  0012D4  EF7A  F009         	goto	l4417
  6517  0012D8                     u5540:
  6518  0012D8                     
  6519                           ; BSR set to: 0
  6520  0012D8  BF93               	btfsc	(efgtoa@n+1)& (0+255),7,b
  6521  0012DA  EF78  F009         	goto	u5551
  6522  0012DE  5193               	movf	(efgtoa@n+1)& (0+255),w,b
  6523  0012E0  E109               	bnz	u5550
  6524  0012E2  0E4B               	movlw	75
  6525  0012E4  5D92               	subwf	efgtoa@n& (0+255),w,b
  6526  0012E6  A0D8               	btfss	status,0,c
  6527  0012E8  EF78  F009         	goto	u5551
  6528  0012EC  EF7A  F009         	goto	u5550
  6529  0012F0                     u5551:
  6530  0012F0  EF70  F008         	goto	l4365
  6531  0012F4                     u5550:
  6532  0012F4                     l4417:
  6533                           
  6534                           ; BSR set to: 0
  6535                           ;/Applications/microchip/xc8/v2.31/pic/sources/c99/common/doprnt.c: 492:     if (!pp && 
      +                          (flags & (1 << 4))) {
  6536  0012F4  516E               	movf	efgtoa@pp& (0+255),w,b
  6537  0012F6  116F               	iorwf	(efgtoa@pp+1)& (0+255),w,b
  6538  0012F8  A4D8               	btfss	status,2,c
  6539  0012FA  EF81  F009         	goto	u5561
  6540  0012FE  EF83  F009         	goto	u5560
  6541  001302                     u5561:
  6542  001302  EF94  F009         	goto	l4425
  6543  001306                     u5560:
  6544  001306                     
  6545                           ; BSR set to: 0
  6546  001306  A9D2               	btfss	_flags& (0+255),4,b
  6547  001308  EF88  F009         	goto	u5571
  6548  00130C  EF8A  F009         	goto	u5570
  6549  001310                     u5571:
  6550  001310  EF94  F009         	goto	l4425
  6551  001314                     u5570:
  6552  001314                     
  6553                           ; BSR set to: 0
  6554                           ;/Applications/microchip/xc8/v2.31/pic/sources/c99/common/doprnt.c: 493:         dbuf[n+
      +                          +] = '.';
  6555  001314  0E10               	movlw	low _dbuf
  6556  001316  2592               	addwf	efgtoa@n& (0+255),w,b
  6557  001318  6ED9               	movwf	fsr2l,c
  6558  00131A  0E01               	movlw	high _dbuf
  6559  00131C  2193               	addwfc	(efgtoa@n+1)& (0+255),w,b
  6560  00131E  6EDA               	movwf	fsr2h,c
  6561  001320  0E2E               	movlw	46
  6562  001322  6EDF               	movwf	indf2,c
  6563  001324                     
  6564                           ; BSR set to: 0
  6565  001324  4B92               	infsnz	efgtoa@n& (0+255),f,b
  6566  001326  2B93               	incf	(efgtoa@n+1)& (0+255),f,b
  6567  001328                     l4425:
  6568                           
  6569                           ; BSR set to: 0
  6570                           ;/Applications/microchip/xc8/v2.31/pic/sources/c99/common/doprnt.c: 495:     dbuf[n] = '
      +                          \0';
  6571  001328  0E10               	movlw	low _dbuf
  6572  00132A  2592               	addwf	efgtoa@n& (0+255),w,b
  6573  00132C  6ED9               	movwf	fsr2l,c
  6574  00132E  0E01               	movlw	high _dbuf
  6575  001330  2193               	addwfc	(efgtoa@n+1)& (0+255),w,b
  6576  001332  6EDA               	movwf	fsr2h,c
  6577  001334  0E00               	movlw	0
  6578  001336  6EDF               	movwf	indf2,c
  6579  001338                     
  6580                           ; BSR set to: 0
  6581                           ;/Applications/microchip/xc8/v2.31/pic/sources/c99/common/doprnt.c: 498:     if (nmode =
      +                          = 'e') {
  6582  001338  0E65               	movlw	101
  6583  00133A  1980               	xorwf	efgtoa@nmode& (0+255),w,b
  6584  00133C  A4D8               	btfss	status,2,c
  6585  00133E  EFA3  F009         	goto	u5581
  6586  001342  EFA5  F009         	goto	u5580
  6587  001346                     u5581:
  6588  001346  EFFF  F004         	goto	l4227
  6589  00134A                     u5580:
  6590  00134A                     
  6591                           ; BSR set to: 0
  6592                           ;/Applications/microchip/xc8/v2.31/pic/sources/c99/common/doprnt.c: 499:         i = siz
      +                          eof(dbuf) - 1;
  6593  00134A  0E00               	movlw	0
  6594  00134C  6F8B               	movwf	(efgtoa@i+1)& (0+255),b
  6595  00134E  0E4F               	movlw	79
  6596  001350  6F8A               	movwf	efgtoa@i& (0+255),b
  6597  001352                     
  6598                           ; BSR set to: 0
  6599                           ;/Applications/microchip/xc8/v2.31/pic/sources/c99/common/doprnt.c: 500:         dbuf[i]
      +                           = '\0';
  6600  001352  0E10               	movlw	low _dbuf
  6601  001354  258A               	addwf	efgtoa@i& (0+255),w,b
  6602  001356  6ED9               	movwf	fsr2l,c
  6603  001358  0E01               	movlw	high _dbuf
  6604  00135A  218B               	addwfc	(efgtoa@i+1)& (0+255),w,b
  6605  00135C  6EDA               	movwf	fsr2h,c
  6606  00135E  0E00               	movlw	0
  6607  001360  6EDF               	movwf	indf2,c
  6608  001362                     
  6609                           ; BSR set to: 0
  6610                           ;/Applications/microchip/xc8/v2.31/pic/sources/c99/common/doprnt.c: 501:         sign = 
      +                          0;
  6611  001362  0E00               	movlw	0
  6612  001364  6F7B               	movwf	(efgtoa@sign+1)& (0+255),b
  6613  001366  0E00               	movlw	0
  6614  001368  6F7A               	movwf	efgtoa@sign& (0+255),b
  6615  00136A                     
  6616                           ; BSR set to: 0
  6617                           ;/Applications/microchip/xc8/v2.31/pic/sources/c99/common/doprnt.c: 502:         if (e <
      +                           0) {
  6618  00136A  BF91               	btfsc	(efgtoa@e+1)& (0+255),7,b
  6619  00136C  EFBC  F009         	goto	u5590
  6620  001370  EFBA  F009         	goto	u5591
  6621  001374                     u5591:
  6622  001374  EFC4  F009         	goto	l4441
  6623  001378                     u5590:
  6624  001378                     
  6625                           ; BSR set to: 0
  6626                           ;/Applications/microchip/xc8/v2.31/pic/sources/c99/common/doprnt.c: 503:             sig
      +                          n = 1;
  6627  001378  0E00               	movlw	0
  6628  00137A  6F7B               	movwf	(efgtoa@sign+1)& (0+255),b
  6629  00137C  0E01               	movlw	1
  6630  00137E  6F7A               	movwf	efgtoa@sign& (0+255),b
  6631  001380                     
  6632                           ; BSR set to: 0
  6633                           ;/Applications/microchip/xc8/v2.31/pic/sources/c99/common/doprnt.c: 504:             e =
      +                           -e;
  6634  001380  6D90               	negf	efgtoa@e& (0+255),b
  6635  001382  1F91               	comf	(efgtoa@e+1)& (0+255),f,b
  6636  001384  B0D8               	btfsc	status,0,c
  6637  001386  2B91               	incf	(efgtoa@e+1)& (0+255),f,b
  6638  001388                     l4441:
  6639                           
  6640                           ; BSR set to: 0
  6641                           ;/Applications/microchip/xc8/v2.31/pic/sources/c99/common/doprnt.c: 506:         p = 2;
  6642  001388  0E00               	movlw	0
  6643  00138A  6F7D               	movwf	(efgtoa@p+1)& (0+255),b
  6644  00138C  0E02               	movlw	2
  6645  00138E  6F7C               	movwf	efgtoa@p& (0+255),b
  6646                           
  6647                           ;/Applications/microchip/xc8/v2.31/pic/sources/c99/common/doprnt.c: 507:         while (
      +                          e || (0 < p)) {
  6648  001390  EFF5  F009         	goto	l4453
  6649  001394                     l4443:
  6650                           
  6651                           ; BSR set to: 0
  6652                           ;/Applications/microchip/xc8/v2.31/pic/sources/c99/common/doprnt.c: 508:             --i
      +                          ;
  6653  001394  078A               	decf	efgtoa@i& (0+255),f,b
  6654  001396  A0D8               	btfss	status,0,c
  6655  001398  078B               	decf	(efgtoa@i+1)& (0+255),f,b
  6656  00139A                     
  6657                           ; BSR set to: 0
  6658                           ;/Applications/microchip/xc8/v2.31/pic/sources/c99/common/doprnt.c: 509:             dbu
      +                          f[i] = '0' + (e % 10);
  6659  00139A  0E10               	movlw	low _dbuf
  6660  00139C  258A               	addwf	efgtoa@i& (0+255),w,b
  6661  00139E  6ED9               	movwf	fsr2l,c
  6662  0013A0  0E01               	movlw	high _dbuf
  6663  0013A2  218B               	addwfc	(efgtoa@i+1)& (0+255),w,b
  6664  0013A4  6EDA               	movwf	fsr2h,c
  6665  0013A6  C090  F001         	movff	efgtoa@e,___awmod@dividend
  6666  0013AA  C091  F002         	movff	efgtoa@e+1,___awmod@dividend+1
  6667  0013AE  0E00               	movlw	0
  6668  0013B0  6E04               	movwf	(___awmod@divisor+1)^0,c
  6669  0013B2  0E0A               	movlw	10
  6670  0013B4  6E03               	movwf	___awmod@divisor^0,c
  6671  0013B6  EC42  F022         	call	___awmod	;wreg free
  6672  0013BA  5001               	movf	?___awmod^0,w,c
  6673  0013BC  0F30               	addlw	48
  6674  0013BE  6EDF               	movwf	indf2,c
  6675  0013C0                     
  6676                           ;/Applications/microchip/xc8/v2.31/pic/sources/c99/common/doprnt.c: 510:             e =
      +                           e / 10;
  6677  0013C0  C090  F006         	movff	efgtoa@e,___awdiv@dividend
  6678  0013C4  C091  F007         	movff	efgtoa@e+1,___awdiv@dividend+1
  6679  0013C8  0E00               	movlw	0
  6680  0013CA  6E09               	movwf	(___awdiv@divisor+1)^0,c
  6681  0013CC  0E0A               	movlw	10
  6682  0013CE  6E08               	movwf	___awdiv@divisor^0,c
  6683  0013D0  ECE0  F021         	call	___awdiv	;wreg free
  6684  0013D4  C006  F090         	movff	?___awdiv,efgtoa@e
  6685  0013D8  C007  F091         	movff	?___awdiv+1,efgtoa@e+1
  6686  0013DC                     
  6687                           ;/Applications/microchip/xc8/v2.31/pic/sources/c99/common/doprnt.c: 511:             --p
      +                          ;
  6688  0013DC  0100               	movlb	0	; () banked
  6689  0013DE  077C               	decf	efgtoa@p& (0+255),f,b
  6690  0013E0  A0D8               	btfss	status,0,c
  6691  0013E2  077D               	decf	(efgtoa@p+1)& (0+255),f,b
  6692  0013E4                     
  6693                           ; BSR set to: 0
  6694                           ;/Applications/microchip/xc8/v2.31/pic/sources/c99/common/doprnt.c: 512:             --w
      +                          ;
  6695  0013E4  077E               	decf	efgtoa@w& (0+255),f,b
  6696  0013E6  A0D8               	btfss	status,0,c
  6697  0013E8  077F               	decf	(efgtoa@w+1)& (0+255),f,b
  6698  0013EA                     l4453:
  6699                           
  6700                           ; BSR set to: 0
  6701                           ;/Applications/microchip/xc8/v2.31/pic/sources/c99/common/doprnt.c: 507:         while (
      +                          e || (0 < p)) {
  6702  0013EA  5190               	movf	efgtoa@e& (0+255),w,b
  6703  0013EC  1191               	iorwf	(efgtoa@e+1)& (0+255),w,b
  6704  0013EE  A4D8               	btfss	status,2,c
  6705  0013F0  EFFC  F009         	goto	u5601
  6706  0013F4  EFFE  F009         	goto	u5600
  6707  0013F8                     u5601:
  6708  0013F8  EFCA  F009         	goto	l4443
  6709  0013FC                     u5600:
  6710  0013FC                     
  6711                           ; BSR set to: 0
  6712  0013FC  BF7D               	btfsc	(efgtoa@p+1)& (0+255),7,b
  6713  0013FE  EF0B  F00A         	goto	u5610
  6714  001402  517D               	movf	(efgtoa@p+1)& (0+255),w,b
  6715  001404  E106               	bnz	u5611
  6716  001406  057C               	decf	efgtoa@p& (0+255),w,b
  6717  001408  B0D8               	btfsc	status,0,c
  6718  00140A  EF09  F00A         	goto	u5611
  6719  00140E  EF0B  F00A         	goto	u5610
  6720  001412                     u5611:
  6721  001412  EFCA  F009         	goto	l4443
  6722  001416                     u5610:
  6723  001416                     
  6724                           ; BSR set to: 0
  6725                           ;/Applications/microchip/xc8/v2.31/pic/sources/c99/common/doprnt.c: 514:         --i;
  6726  001416  078A               	decf	efgtoa@i& (0+255),f,b
  6727  001418  A0D8               	btfss	status,0,c
  6728  00141A  078B               	decf	(efgtoa@i+1)& (0+255),f,b
  6729  00141C                     
  6730                           ; BSR set to: 0
  6731                           ;/Applications/microchip/xc8/v2.31/pic/sources/c99/common/doprnt.c: 515:         dbuf[i]
      +                           = sign ? '-' : '+';
  6732  00141C  517A               	movf	efgtoa@sign& (0+255),w,b
  6733  00141E  117B               	iorwf	(efgtoa@sign+1)& (0+255),w,b
  6734  001420  A4D8               	btfss	status,2,c
  6735  001422  EF15  F00A         	goto	u5621
  6736  001426  EF17  F00A         	goto	u5620
  6737  00142A                     u5621:
  6738  00142A  EF1D  F00A         	goto	l4463
  6739  00142E                     u5620:
  6740  00142E                     
  6741                           ; BSR set to: 0
  6742  00142E  0E00               	movlw	0
  6743  001430  6F67               	movwf	(_efgtoa$1253+1)& (0+255),b
  6744  001432  0E2B               	movlw	43
  6745  001434  6F66               	movwf	_efgtoa$1253& (0+255),b
  6746  001436  EF21  F00A         	goto	l4465
  6747  00143A                     l4463:
  6748                           
  6749                           ; BSR set to: 0
  6750  00143A  0E00               	movlw	0
  6751  00143C  6F67               	movwf	(_efgtoa$1253+1)& (0+255),b
  6752  00143E  0E2D               	movlw	45
  6753  001440  6F66               	movwf	_efgtoa$1253& (0+255),b
  6754  001442                     l4465:
  6755                           
  6756                           ; BSR set to: 0
  6757  001442  0E10               	movlw	low _dbuf
  6758  001444  258A               	addwf	efgtoa@i& (0+255),w,b
  6759  001446  6ED9               	movwf	fsr2l,c
  6760  001448  0E01               	movlw	high _dbuf
  6761  00144A  218B               	addwfc	(efgtoa@i+1)& (0+255),w,b
  6762  00144C  6EDA               	movwf	fsr2h,c
  6763  00144E  C066  FFDF         	movff	_efgtoa$1253,indf2
  6764  001452                     
  6765                           ; BSR set to: 0
  6766                           ;/Applications/microchip/xc8/v2.31/pic/sources/c99/common/doprnt.c: 516:         --w;
  6767  001452  077E               	decf	efgtoa@w& (0+255),f,b
  6768  001454  A0D8               	btfss	status,0,c
  6769  001456  077F               	decf	(efgtoa@w+1)& (0+255),f,b
  6770  001458                     
  6771                           ; BSR set to: 0
  6772                           ;/Applications/microchip/xc8/v2.31/pic/sources/c99/common/doprnt.c: 518:         dbuf[i]
      +                           = (0 ? isupper((int)c) : ((unsigned)((int)c)-'A') < 26) ? 'E' : 'e';
  6773  001458  078A               	decf	efgtoa@i& (0+255),f,b
  6774  00145A  A0D8               	btfss	status,0,c
  6775  00145C  078B               	decf	(efgtoa@i+1)& (0+255),f,b
  6776  00145E                     
  6777                           ; BSR set to: 0
  6778  00145E  0EBF               	movlw	191
  6779  001460  6E3B               	movwf	??_efgtoa^0,c
  6780  001462  0EFF               	movlw	255
  6781  001464  6E3C               	movwf	(??_efgtoa+1)^0,c
  6782  001466  503A               	movf	efgtoa@c^0,w,c
  6783  001468  6E3D               	movwf	(??_efgtoa+2)^0,c
  6784  00146A  6A3E               	clrf	(??_efgtoa+3)^0,c
  6785  00146C  503B               	movf	??_efgtoa^0,w,c
  6786  00146E  263D               	addwf	(??_efgtoa+2)^0,f,c
  6787  001470  503C               	movf	(??_efgtoa+1)^0,w,c
  6788  001472  223E               	addwfc	(??_efgtoa+3)^0,f,c
  6789  001474  503E               	movf	(??_efgtoa+3)^0,w,c
  6790  001476  E10A               	bnz	u5630
  6791  001478  0E1A               	movlw	26
  6792  00147A  5C3D               	subwf	(??_efgtoa+2)^0,w,c
  6793  00147C  A0D8               	btfss	status,0,c
  6794  00147E  EF43  F00A         	goto	u5631
  6795  001482  EF46  F00A         	goto	u5630
  6796  001486                     u5631:
  6797  001486  0E01               	movlw	1
  6798  001488  EF47  F00A         	goto	u5640
  6799  00148C                     u5630:
  6800  00148C  0E00               	movlw	0
  6801  00148E                     u5640:
  6802  00148E  6F6A               	movwf	_efgtoa$1255& (0+255),b
  6803  001490  6B6B               	clrf	(_efgtoa$1255+1)& (0+255),b
  6804  001492                     
  6805                           ; BSR set to: 0
  6806  001492  516A               	movf	_efgtoa$1255& (0+255),w,b
  6807  001494  116B               	iorwf	(_efgtoa$1255+1)& (0+255),w,b
  6808  001496  A4D8               	btfss	status,2,c
  6809  001498  EF50  F00A         	goto	u5651
  6810  00149C  EF52  F00A         	goto	u5650
  6811  0014A0                     u5651:
  6812  0014A0  EF58  F00A         	goto	l4479
  6813  0014A4                     u5650:
  6814  0014A4                     
  6815                           ; BSR set to: 0
  6816  0014A4  0E00               	movlw	0
  6817  0014A6  6F69               	movwf	(_efgtoa$1254+1)& (0+255),b
  6818  0014A8  0E65               	movlw	101
  6819  0014AA  6F68               	movwf	_efgtoa$1254& (0+255),b
  6820  0014AC  EF5C  F00A         	goto	l4481
  6821  0014B0                     l4479:
  6822                           
  6823                           ; BSR set to: 0
  6824  0014B0  0E00               	movlw	0
  6825  0014B2  6F69               	movwf	(_efgtoa$1254+1)& (0+255),b
  6826  0014B4  0E45               	movlw	69
  6827  0014B6  6F68               	movwf	_efgtoa$1254& (0+255),b
  6828  0014B8                     l4481:
  6829                           
  6830                           ; BSR set to: 0
  6831  0014B8  0E10               	movlw	low _dbuf
  6832  0014BA  258A               	addwf	efgtoa@i& (0+255),w,b
  6833  0014BC  6ED9               	movwf	fsr2l,c
  6834  0014BE  0E01               	movlw	high _dbuf
  6835  0014C0  218B               	addwfc	(efgtoa@i+1)& (0+255),w,b
  6836  0014C2  6EDA               	movwf	fsr2h,c
  6837  0014C4  C068  FFDF         	movff	_efgtoa$1254,indf2
  6838  0014C8                     
  6839                           ; BSR set to: 0
  6840                           ;/Applications/microchip/xc8/v2.31/pic/sources/c99/common/doprnt.c: 519:         --w;
  6841  0014C8  077E               	decf	efgtoa@w& (0+255),f,b
  6842  0014CA  A0D8               	btfss	status,0,c
  6843  0014CC  077F               	decf	(efgtoa@w+1)& (0+255),f,b
  6844  0014CE                     
  6845                           ; BSR set to: 0
  6846                           ;/Applications/microchip/xc8/v2.31/pic/sources/c99/common/doprnt.c: 520:         strcpy(
      +                          &dbuf[n], &dbuf[i]);
  6847  0014CE  0E10               	movlw	low _dbuf
  6848  0014D0  2592               	addwf	efgtoa@n& (0+255),w,b
  6849  0014D2  6E01               	movwf	strcpy@dest^0,c
  6850  0014D4  0E01               	movlw	high _dbuf
  6851  0014D6  2193               	addwfc	(efgtoa@n+1)& (0+255),w,b
  6852  0014D8  6E02               	movwf	(strcpy@dest+1)^0,c
  6853  0014DA  0E10               	movlw	low _dbuf
  6854  0014DC  258A               	addwf	efgtoa@i& (0+255),w,b
  6855  0014DE  6E03               	movwf	strcpy@src^0,c
  6856  0014E0  0E01               	movlw	high _dbuf
  6857  0014E2  218B               	addwfc	(efgtoa@i+1)& (0+255),w,b
  6858  0014E4  6E04               	movwf	(strcpy@src+1)^0,c
  6859  0014E6  EC87  F024         	call	_strcpy	;wreg free
  6860  0014EA  EFFF  F004         	goto	l4227
  6861  0014EE                     l989:
  6862  0014EE  0012               	return		;funcret
  6863  0014F0                     __end_of_efgtoa:
  6864                           	callstack 0
  6865                           
  6866 ;; *************** function _tolower *****************
  6867 ;; Defined at:
  6868 ;;		line 4 in file "/Applications/microchip/xc8/v2.31/pic/sources/c99/common/tolower.c"
  6869 ;; Parameters:    Size  Location     Type
  6870 ;;  c               2    6[COMRAM] int 
  6871 ;; Auto vars:     Size  Location     Type
  6872 ;;		None
  6873 ;; Return value:  Size  Location     Type
  6874 ;;                  2    6[COMRAM] int 
  6875 ;; Registers used:
  6876 ;;		wreg, status,2, status,0
  6877 ;; Tracked objects:
  6878 ;;		On entry : 0/0
  6879 ;;		On exit  : 0/0
  6880 ;;		Unchanged: 0/0
  6881 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  6882 ;;      Params:         2       0       0       0       0       0       0       0       0
  6883 ;;      Locals:         2       0       0       0       0       0       0       0       0
  6884 ;;      Temps:          4       0       0       0       0       0       0       0       0
  6885 ;;      Totals:         8       0       0       0       0       0       0       0       0
  6886 ;;Total ram usage:        8 bytes
  6887 ;; Hardware stack levels used:    1
  6888 ;; Hardware stack levels required when called:    1
  6889 ;; This function calls:
  6890 ;;		_isupper
  6891 ;; This function is called by:
  6892 ;;		_efgtoa
  6893 ;;		_vfpfcnvrt
  6894 ;; This function uses a non-reentrant model
  6895 ;;
  6896                           
  6897                           	psect	text22
  6898  0048AE                     __ptext22:
  6899                           	callstack 0
  6900  0048AE                     _tolower:
  6901                           	callstack 25
  6902  0048AE  0EBF               	movlw	191
  6903  0048B0  6E09               	movwf	??_tolower^0,c
  6904  0048B2  0EFF               	movlw	255
  6905  0048B4  6E0A               	movwf	(??_tolower+1)^0,c
  6906  0048B6  C007  F00B         	movff	tolower@c,??_tolower+2
  6907  0048BA  C008  F00C         	movff	tolower@c+1,??_tolower+3
  6908  0048BE  5009               	movf	??_tolower^0,w,c
  6909  0048C0  260B               	addwf	(??_tolower+2)^0,f,c
  6910  0048C2  500A               	movf	(??_tolower+1)^0,w,c
  6911  0048C4  220C               	addwfc	(??_tolower+3)^0,f,c
  6912  0048C6  500C               	movf	(??_tolower+3)^0,w,c
  6913  0048C8  E10A               	bnz	u4750
  6914  0048CA  0E1A               	movlw	26
  6915  0048CC  5C0B               	subwf	(??_tolower+2)^0,w,c
  6916  0048CE  A0D8               	btfss	status,0,c
  6917  0048D0  EF6C  F024         	goto	u4751
  6918  0048D4  EF6F  F024         	goto	u4750
  6919  0048D8                     u4751:
  6920  0048D8  0E01               	movlw	1
  6921  0048DA  EF70  F024         	goto	u4760
  6922  0048DE                     u4750:
  6923  0048DE  0E00               	movlw	0
  6924  0048E0                     u4760:
  6925  0048E0  6E0D               	movwf	_tolower$1413^0,c
  6926  0048E2  6A0E               	clrf	(_tolower$1413+1)^0,c
  6927  0048E4  500D               	movf	_tolower$1413^0,w,c
  6928  0048E6  100E               	iorwf	(_tolower$1413+1)^0,w,c
  6929  0048E8  B4D8               	btfsc	status,2,c
  6930  0048EA  EF79  F024         	goto	u4771
  6931  0048EE  EF7B  F024         	goto	u4770
  6932  0048F2                     u4771:
  6933  0048F2  EF82  F024         	goto	l1245
  6934  0048F6                     u4770:
  6935  0048F6  0E20               	movlw	32
  6936  0048F8  1007               	iorwf	tolower@c^0,w,c
  6937  0048FA  6E07               	movwf	?_tolower^0,c
  6938  0048FC  5008               	movf	(tolower@c+1)^0,w,c
  6939  0048FE  6E08               	movwf	(?_tolower+1)^0,c
  6940  004900  EF86  F024         	goto	l1250
  6941  004904                     l1245:
  6942  004904  C007  F007         	movff	tolower@c,?_tolower
  6943  004908  C008  F008         	movff	tolower@c+1,?_tolower+1
  6944  00490C                     l1250:
  6945  00490C  0012               	return		;funcret
  6946  00490E                     __end_of_tolower:
  6947                           	callstack 0
  6948                           
  6949 ;; *************** function _isupper *****************
  6950 ;; Defined at:
  6951 ;;		line 5 in file "/Applications/microchip/xc8/v2.31/pic/sources/c99/common/isupper.c"
  6952 ;; Parameters:    Size  Location     Type
  6953 ;;  c               2    0[COMRAM] int 
  6954 ;; Auto vars:     Size  Location     Type
  6955 ;;		None
  6956 ;; Return value:  Size  Location     Type
  6957 ;;                  2    0[COMRAM] int 
  6958 ;; Registers used:
  6959 ;;		wreg, status,2, status,0
  6960 ;; Tracked objects:
  6961 ;;		On entry : 0/0
  6962 ;;		On exit  : 0/0
  6963 ;;		Unchanged: 0/0
  6964 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  6965 ;;      Params:         2       0       0       0       0       0       0       0       0
  6966 ;;      Locals:         0       0       0       0       0       0       0       0       0
  6967 ;;      Temps:          4       0       0       0       0       0       0       0       0
  6968 ;;      Totals:         6       0       0       0       0       0       0       0       0
  6969 ;;Total ram usage:        6 bytes
  6970 ;; Hardware stack levels used:    1
  6971 ;; This function calls:
  6972 ;;		Nothing
  6973 ;; This function is called by:
  6974 ;;		_efgtoa
  6975 ;;		_vfpfcnvrt
  6976 ;;		_tolower
  6977 ;; This function uses a non-reentrant model
  6978 ;;
  6979                           
  6980                           	psect	text23
  6981  004BA4                     __ptext23:
  6982                           	callstack 0
  6983  004BA4                     _isupper:
  6984                           	callstack 25
  6985  004BA4  0EBF               	movlw	191
  6986  004BA6  6E03               	movwf	??_isupper^0,c
  6987  004BA8  0EFF               	movlw	255
  6988  004BAA  6E04               	movwf	(??_isupper+1)^0,c
  6989  004BAC  C001  F005         	movff	isupper@c,??_isupper+2
  6990  004BB0  C002  F006         	movff	isupper@c+1,??_isupper+3
  6991  004BB4  5003               	movf	??_isupper^0,w,c
  6992  004BB6  2605               	addwf	(??_isupper+2)^0,f,c
  6993  004BB8  5004               	movf	(??_isupper+1)^0,w,c
  6994  004BBA  2206               	addwfc	(??_isupper+3)^0,f,c
  6995  004BBC  5006               	movf	(??_isupper+3)^0,w,c
  6996  004BBE  E10A               	bnz	u3760
  6997  004BC0  0E1A               	movlw	26
  6998  004BC2  5C05               	subwf	(??_isupper+2)^0,w,c
  6999  004BC4  A0D8               	btfss	status,0,c
  7000  004BC6  EFE7  F025         	goto	u3761
  7001  004BCA  EFEA  F025         	goto	u3760
  7002  004BCE                     u3761:
  7003  004BCE  0E01               	movlw	1
  7004  004BD0  EFEB  F025         	goto	u3770
  7005  004BD4                     u3760:
  7006  004BD4  0E00               	movlw	0
  7007  004BD6                     u3770:
  7008  004BD6  6E01               	movwf	?_isupper^0,c
  7009  004BD8  6A02               	clrf	(?_isupper+1)^0,c
  7010  004BDA  0012               	return		;funcret
  7011  004BDC                     __end_of_isupper:
  7012                           	callstack 0
  7013                           
  7014 ;; *************** function _strcpy *****************
  7015 ;; Defined at:
  7016 ;;		line 3 in file "/Applications/microchip/xc8/v2.31/pic/sources/c99/common/strcpy.c"
  7017 ;; Parameters:    Size  Location     Type
  7018 ;;  dest            2    0[COMRAM] PTR unsigned char 
  7019 ;;		 -> dbuf(80), 
  7020 ;;  src             2    2[COMRAM] PTR const unsigned char 
  7021 ;;		 -> STR_16(4), STR_15(4), STR_12(4), STR_11(4), 
  7022 ;;		 -> dbuf(80), 
  7023 ;; Auto vars:     Size  Location     Type
  7024 ;;  d               2    8[COMRAM] PTR unsigned char 
  7025 ;;		 -> dbuf(80), 
  7026 ;;  s               2    6[COMRAM] PTR const unsigned char 
  7027 ;;		 -> STR_16(4), STR_15(4), STR_12(4), STR_11(4), 
  7028 ;;		 -> dbuf(80), 
  7029 ;; Return value:  Size  Location     Type
  7030 ;;                  2    0[COMRAM] PTR unsigned char 
  7031 ;; Registers used:
  7032 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru
  7033 ;; Tracked objects:
  7034 ;;		On entry : 0/0
  7035 ;;		On exit  : 0/0
  7036 ;;		Unchanged: 0/0
  7037 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  7038 ;;      Params:         4       0       0       0       0       0       0       0       0
  7039 ;;      Locals:         4       0       0       0       0       0       0       0       0
  7040 ;;      Temps:          2       0       0       0       0       0       0       0       0
  7041 ;;      Totals:        10       0       0       0       0       0       0       0       0
  7042 ;;Total ram usage:       10 bytes
  7043 ;; Hardware stack levels used:    1
  7044 ;; This function calls:
  7045 ;;		Nothing
  7046 ;; This function is called by:
  7047 ;;		_efgtoa
  7048 ;; This function uses a non-reentrant model
  7049 ;;
  7050                           
  7051                           	psect	text24
  7052  00490E                     __ptext24:
  7053                           	callstack 0
  7054  00490E                     _strcpy:
  7055                           	callstack 25
  7056  00490E  C003  F007         	movff	strcpy@src,strcpy@s
  7057  004912  C004  F008         	movff	strcpy@src+1,strcpy@s+1
  7058  004916  C001  F009         	movff	strcpy@dest,strcpy@d
  7059  00491A  C002  F00A         	movff	strcpy@dest+1,strcpy@d+1
  7060  00491E                     l4037:
  7061  00491E  5007               	movf	strcpy@s^0,w,c
  7062  004920  6E05               	movwf	??_strcpy^0,c
  7063  004922  5008               	movf	(strcpy@s+1)^0,w,c
  7064  004924  6E06               	movwf	(??_strcpy+1)^0,c
  7065  004926  4A07               	infsnz	strcpy@s^0,f,c
  7066  004928  2A08               	incf	(strcpy@s+1)^0,f,c
  7067  00492A  C005  FFF6         	movff	??_strcpy,tblptrl
  7068  00492E  C006  FFF7         	movff	??_strcpy+1,tblptrh
  7069  004932  6AF8               	clrf	tblptru,c
  7070  004934  C009  FFD9         	movff	strcpy@d,fsr2l
  7071  004938  C00A  FFDA         	movff	strcpy@d+1,fsr2h
  7072  00493C  4A09               	infsnz	strcpy@d^0,f,c
  7073  00493E  2A0A               	incf	(strcpy@d+1)^0,f,c
  7074  004940  0E07               	movlw	(high __ramtop+-1)
  7075  004942  64F7               	cpfsgt	tblptrh,c
  7076  004944  D003               	bra	u4737
  7077  004946  0008               	tblrd		*
  7078  004948  50F5               	movf	tablat,w,c
  7079  00494A  D005               	bra	u4730
  7080  00494C                     u4737:
  7081  00494C  CFF6 FFE1          	movff	tblptrl,fsr1l
  7082  004950  CFF7 FFE2          	movff	tblptrh,fsr1h
  7083  004954  50E7               	movf	indf1,w,c
  7084  004956                     u4730:
  7085  004956  6EDF               	movwf	indf2,c
  7086  004958  50DF               	movf	indf2,w,c
  7087  00495A  A4D8               	btfss	status,2,c
  7088  00495C  EFB2  F024         	goto	u4741
  7089  004960  EFB4  F024         	goto	u4740
  7090  004964                     u4741:
  7091  004964  EF8F  F024         	goto	l4037
  7092  004968                     u4740:
  7093  004968  0012               	return		;funcret
  7094  00496A                     __end_of_strcpy:
  7095                           	callstack 0
  7096                           
  7097 ;; *************** function _floorf *****************
  7098 ;; Defined at:
  7099 ;;		line 3 in file "/Applications/microchip/xc8/v2.31/pic/sources/c99/common/floorf.c"
  7100 ;; Parameters:    Size  Location     Type
  7101 ;;  x               4   25[COMRAM] float 
  7102 ;; Auto vars:     Size  Location     Type
  7103 ;;  u               4   41[COMRAM] struct .
  7104 ;;  m               4   35[COMRAM] unsigned long 
  7105 ;;  e               2   39[COMRAM] int 
  7106 ;; Return value:  Size  Location     Type
  7107 ;;                  4   25[COMRAM] float 
  7108 ;; Registers used:
  7109 ;;		wreg, status,2, status,0
  7110 ;; Tracked objects:
  7111 ;;		On entry : 0/0
  7112 ;;		On exit  : 0/0
  7113 ;;		Unchanged: 0/0
  7114 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  7115 ;;      Params:         4       0       0       0       0       0       0       0       0
  7116 ;;      Locals:        10       0       0       0       0       0       0       0       0
  7117 ;;      Temps:          6       0       0       0       0       0       0       0       0
  7118 ;;      Totals:        20       0       0       0       0       0       0       0       0
  7119 ;;Total ram usage:       20 bytes
  7120 ;; Hardware stack levels used:    1
  7121 ;; This function calls:
  7122 ;;		Nothing
  7123 ;; This function is called by:
  7124 ;;		_efgtoa
  7125 ;; This function uses a non-reentrant model
  7126 ;;
  7127                           
  7128                           	psect	text25
  7129  003278                     __ptext25:
  7130                           	callstack 0
  7131  003278                     _floorf:
  7132                           	callstack 25
  7133  003278  C100  F02A         	movff	floorf@F527,floorf@u
  7134  00327C  C101  F02B         	movff	floorf@F527+1,floorf@u+1
  7135  003280  C102  F02C         	movff	floorf@F527+2,floorf@u+2
  7136  003284  C103  F02D         	movff	floorf@F527+3,floorf@u+3
  7137  003288  C01A  F02A         	movff	floorf@x,floorf@u
  7138  00328C  C01B  F02B         	movff	floorf@x+1,floorf@u+1
  7139  003290  C01C  F02C         	movff	floorf@x+2,floorf@u+2
  7140  003294  C01D  F02D         	movff	floorf@x+3,floorf@u+3
  7141  003298  0E81               	movlw	129
  7142  00329A  6E1E               	movwf	??_floorf^0,c
  7143  00329C  0EFF               	movlw	255
  7144  00329E  6E1F               	movwf	(??_floorf+1)^0,c
  7145  0032A0  C02A  F020         	movff	floorf@u,??_floorf+2
  7146  0032A4  C02B  F021         	movff	floorf@u+1,??_floorf+3
  7147  0032A8  C02C  F022         	movff	floorf@u+2,??_floorf+4
  7148  0032AC  C02D  F023         	movff	floorf@u+3,??_floorf+5
  7149  0032B0  0E18               	movlw	24
  7150  0032B2  EF60  F019         	goto	u4780
  7151  0032B6                     u4785:
  7152  0032B6  90D8               	bcf	status,0,c
  7153  0032B8  3223               	rrcf	(??_floorf+5)^0,f,c
  7154  0032BA  3222               	rrcf	(??_floorf+4)^0,f,c
  7155  0032BC  3221               	rrcf	(??_floorf+3)^0,f,c
  7156  0032BE  3220               	rrcf	(??_floorf+2)^0,f,c
  7157  0032C0                     u4780:
  7158  0032C0  2EE8               	decfsz	wreg,f,c
  7159  0032C2  EF5B  F019         	goto	u4785
  7160  0032C6  5020               	movf	(??_floorf+2)^0,w,c
  7161  0032C8  241E               	addwf	??_floorf^0,w,c
  7162  0032CA  6E28               	movwf	floorf@e^0,c
  7163  0032CC  0E00               	movlw	0
  7164  0032CE  201F               	addwfc	(??_floorf+1)^0,w,c
  7165  0032D0  6E29               	movwf	(floorf@e+1)^0,c
  7166  0032D2  BE29               	btfsc	(floorf@e+1)^0,7,c
  7167  0032D4  EF75  F019         	goto	u4791
  7168  0032D8  5029               	movf	(floorf@e+1)^0,w,c
  7169  0032DA  E109               	bnz	u4790
  7170  0032DC  0E17               	movlw	23
  7171  0032DE  5C28               	subwf	floorf@e^0,w,c
  7172  0032E0  A0D8               	btfss	status,0,c
  7173  0032E2  EF75  F019         	goto	u4791
  7174  0032E6  EF77  F019         	goto	u4790
  7175  0032EA                     u4791:
  7176  0032EA  EF81  F019         	goto	l4055
  7177  0032EE                     u4790:
  7178  0032EE                     l4053:
  7179  0032EE  C01A  F01A         	movff	floorf@x,?_floorf
  7180  0032F2  C01B  F01B         	movff	floorf@x+1,?_floorf+1
  7181  0032F6  C01C  F01C         	movff	floorf@x+2,?_floorf+2
  7182  0032FA  C01D  F01D         	movff	floorf@x+3,?_floorf+3
  7183  0032FE  EF44  F01A         	goto	l1165
  7184  003302                     l4055:
  7185  003302  BE29               	btfsc	(floorf@e+1)^0,7,c
  7186  003304  EF86  F019         	goto	u4801
  7187  003308  EF88  F019         	goto	u4800
  7188  00330C                     u4801:
  7189  00330C  EFF8  F019         	goto	l4065
  7190  003310                     u4800:
  7191  003310  C028  F01E         	movff	floorf@e,??_floorf
  7192  003314  0EFF               	movlw	255
  7193  003316  6E1F               	movwf	(??_floorf+1)^0,c
  7194  003318  0EFF               	movlw	255
  7195  00331A  6E20               	movwf	(??_floorf+2)^0,c
  7196  00331C  0E7F               	movlw	127
  7197  00331E  6E21               	movwf	(??_floorf+3)^0,c
  7198  003320  0E00               	movlw	0
  7199  003322  6E22               	movwf	(??_floorf+4)^0,c
  7200  003324                     u4815:
  7201  003324  661E               	tstfsz	??_floorf^0,c
  7202  003326  EF97  F019         	goto	u4816
  7203  00332A  EF9F  F019         	goto	u4817
  7204  00332E                     u4816:
  7205  00332E  3422               	rlcf	(??_floorf+4)^0,w,c
  7206  003330  3222               	rrcf	(??_floorf+4)^0,f,c
  7207  003332  3221               	rrcf	(??_floorf+3)^0,f,c
  7208  003334  3220               	rrcf	(??_floorf+2)^0,f,c
  7209  003336  321F               	rrcf	(??_floorf+1)^0,f,c
  7210  003338  2E1E               	decfsz	??_floorf^0,f,c
  7211  00333A  EF92  F019         	goto	u4815
  7212  00333E                     u4817:
  7213  00333E  C01F  F024         	movff	??_floorf+1,floorf@m
  7214  003342  C020  F025         	movff	??_floorf+2,floorf@m+1
  7215  003346  C021  F026         	movff	??_floorf+3,floorf@m+2
  7216  00334A  C022  F027         	movff	??_floorf+4,floorf@m+3
  7217  00334E  5024               	movf	floorf@m^0,w,c
  7218  003350  142A               	andwf	floorf@u^0,w,c
  7219  003352  6E1E               	movwf	??_floorf^0,c
  7220  003354  5025               	movf	(floorf@m+1)^0,w,c
  7221  003356  142B               	andwf	(floorf@u+1)^0,w,c
  7222  003358  6E1F               	movwf	(??_floorf+1)^0,c
  7223  00335A  5026               	movf	(floorf@m+2)^0,w,c
  7224  00335C  142C               	andwf	(floorf@u+2)^0,w,c
  7225  00335E  6E20               	movwf	(??_floorf+2)^0,c
  7226  003360  5027               	movf	(floorf@m+3)^0,w,c
  7227  003362  142D               	andwf	(floorf@u+3)^0,w,c
  7228  003364  6E21               	movwf	(??_floorf+3)^0,c
  7229  003366  501E               	movf	??_floorf^0,w,c
  7230  003368  101F               	iorwf	(??_floorf+1)^0,w,c
  7231  00336A  1020               	iorwf	(??_floorf+2)^0,w,c
  7232  00336C  1021               	iorwf	(??_floorf+3)^0,w,c
  7233  00336E  A4D8               	btfss	status,2,c
  7234  003370  EFBC  F019         	goto	u4821
  7235  003374  EFBE  F019         	goto	u4820
  7236  003378                     u4821:
  7237  003378  EFC0  F019         	goto	l4061
  7238  00337C                     u4820:
  7239  00337C  EF77  F019         	goto	l4053
  7240  003380                     l4061:
  7241  003380  C02A  F01E         	movff	floorf@u,??_floorf
  7242  003384  C02B  F01F         	movff	floorf@u+1,??_floorf+1
  7243  003388  C02C  F020         	movff	floorf@u+2,??_floorf+2
  7244  00338C  C02D  F021         	movff	floorf@u+3,??_floorf+3
  7245  003390  0E20               	movlw	32
  7246  003392  EFD0  F019         	goto	u4830
  7247  003396                     u4835:
  7248  003396  90D8               	bcf	status,0,c
  7249  003398  3221               	rrcf	(??_floorf+3)^0,f,c
  7250  00339A  3220               	rrcf	(??_floorf+2)^0,f,c
  7251  00339C  321F               	rrcf	(??_floorf+1)^0,f,c
  7252  00339E  321E               	rrcf	??_floorf^0,f,c
  7253  0033A0                     u4830:
  7254  0033A0  2EE8               	decfsz	wreg,f,c
  7255  0033A2  EFCB  F019         	goto	u4835
  7256  0033A6  501E               	movf	??_floorf^0,w,c
  7257  0033A8  101F               	iorwf	(??_floorf+1)^0,w,c
  7258  0033AA  1020               	iorwf	(??_floorf+2)^0,w,c
  7259  0033AC  1021               	iorwf	(??_floorf+3)^0,w,c
  7260  0033AE  B4D8               	btfsc	status,2,c
  7261  0033B0  EFDC  F019         	goto	u4841
  7262  0033B4  EFDE  F019         	goto	u4840
  7263  0033B8                     u4841:
  7264  0033B8  EFE6  F019         	goto	l1168
  7265  0033BC                     u4840:
  7266  0033BC  5024               	movf	floorf@m^0,w,c
  7267  0033BE  262A               	addwf	floorf@u^0,f,c
  7268  0033C0  5025               	movf	(floorf@m+1)^0,w,c
  7269  0033C2  222B               	addwfc	(floorf@u+1)^0,f,c
  7270  0033C4  5026               	movf	(floorf@m+2)^0,w,c
  7271  0033C6  222C               	addwfc	(floorf@u+2)^0,f,c
  7272  0033C8  5027               	movf	(floorf@m+3)^0,w,c
  7273  0033CA  222D               	addwfc	(floorf@u+3)^0,f,c
  7274  0033CC                     l1168:
  7275  0033CC  1C24               	comf	floorf@m^0,w,c
  7276  0033CE  6E1E               	movwf	??_floorf^0,c
  7277  0033D0  1C25               	comf	(floorf@m+1)^0,w,c
  7278  0033D2  6E1F               	movwf	(??_floorf+1)^0,c
  7279  0033D4  1C26               	comf	(floorf@m+2)^0,w,c
  7280  0033D6  6E20               	movwf	(??_floorf+2)^0,c
  7281  0033D8  1C27               	comf	(floorf@m+3)^0,w,c
  7282  0033DA  6E21               	movwf	(??_floorf+3)^0,c
  7283  0033DC  501E               	movf	??_floorf^0,w,c
  7284  0033DE  162A               	andwf	floorf@u^0,f,c
  7285  0033E0  501F               	movf	(??_floorf+1)^0,w,c
  7286  0033E2  162B               	andwf	(floorf@u+1)^0,f,c
  7287  0033E4  5020               	movf	(??_floorf+2)^0,w,c
  7288  0033E6  162C               	andwf	(floorf@u+2)^0,f,c
  7289  0033E8  5021               	movf	(??_floorf+3)^0,w,c
  7290  0033EA  162D               	andwf	(floorf@u+3)^0,f,c
  7291  0033EC  EF3C  F01A         	goto	l4073
  7292  0033F0                     l4065:
  7293  0033F0  C02A  F01E         	movff	floorf@u,??_floorf
  7294  0033F4  C02B  F01F         	movff	floorf@u+1,??_floorf+1
  7295  0033F8  C02C  F020         	movff	floorf@u+2,??_floorf+2
  7296  0033FC  C02D  F021         	movff	floorf@u+3,??_floorf+3
  7297  003400  0E20               	movlw	32
  7298  003402  EF08  F01A         	goto	u4850
  7299  003406                     u4855:
  7300  003406  90D8               	bcf	status,0,c
  7301  003408  3221               	rrcf	(??_floorf+3)^0,f,c
  7302  00340A  3220               	rrcf	(??_floorf+2)^0,f,c
  7303  00340C  321F               	rrcf	(??_floorf+1)^0,f,c
  7304  00340E  321E               	rrcf	??_floorf^0,f,c
  7305  003410                     u4850:
  7306  003410  2EE8               	decfsz	wreg,f,c
  7307  003412  EF03  F01A         	goto	u4855
  7308  003416  501E               	movf	??_floorf^0,w,c
  7309  003418  101F               	iorwf	(??_floorf+1)^0,w,c
  7310  00341A  1020               	iorwf	(??_floorf+2)^0,w,c
  7311  00341C  1021               	iorwf	(??_floorf+3)^0,w,c
  7312  00341E  A4D8               	btfss	status,2,c
  7313  003420  EF14  F01A         	goto	u4861
  7314  003424  EF16  F01A         	goto	u4860
  7315  003428                     u4861:
  7316  003428  EF20  F01A         	goto	l4069
  7317  00342C                     u4860:
  7318  00342C  0E00               	movlw	0
  7319  00342E  6E2A               	movwf	floorf@u^0,c
  7320  003430  0E00               	movlw	0
  7321  003432  6E2B               	movwf	(floorf@u+1)^0,c
  7322  003434  0E00               	movlw	0
  7323  003436  6E2C               	movwf	(floorf@u+2)^0,c
  7324  003438  0E00               	movlw	0
  7325  00343A  6E2D               	movwf	(floorf@u+3)^0,c
  7326  00343C  EF3C  F01A         	goto	l4073
  7327  003440                     l4069:
  7328  003440  90D8               	bcf	status,0,c
  7329  003442  342A               	rlcf	floorf@u^0,w,c
  7330  003444  6E1E               	movwf	??_floorf^0,c
  7331  003446  342B               	rlcf	(floorf@u+1)^0,w,c
  7332  003448  6E1F               	movwf	(??_floorf+1)^0,c
  7333  00344A  342C               	rlcf	(floorf@u+2)^0,w,c
  7334  00344C  6E20               	movwf	(??_floorf+2)^0,c
  7335  00344E  342D               	rlcf	(floorf@u+3)^0,w,c
  7336  003450  6E21               	movwf	(??_floorf+3)^0,c
  7337  003452  501E               	movf	??_floorf^0,w,c
  7338  003454  101F               	iorwf	(??_floorf+1)^0,w,c
  7339  003456  1020               	iorwf	(??_floorf+2)^0,w,c
  7340  003458  1021               	iorwf	(??_floorf+3)^0,w,c
  7341  00345A  B4D8               	btfsc	status,2,c
  7342  00345C  EF32  F01A         	goto	u4871
  7343  003460  EF34  F01A         	goto	u4870
  7344  003464                     u4871:
  7345  003464  EF3C  F01A         	goto	l4073
  7346  003468                     u4870:
  7347  003468  0E00               	movlw	0
  7348  00346A  6E2A               	movwf	floorf@u^0,c
  7349  00346C  0E00               	movlw	0
  7350  00346E  6E2B               	movwf	(floorf@u+1)^0,c
  7351  003470  0E80               	movlw	128
  7352  003472  6E2C               	movwf	(floorf@u+2)^0,c
  7353  003474  0EBF               	movlw	191
  7354  003476  6E2D               	movwf	(floorf@u+3)^0,c
  7355  003478                     l4073:
  7356  003478  C02A  F01A         	movff	floorf@u,?_floorf
  7357  00347C  C02B  F01B         	movff	floorf@u+1,?_floorf+1
  7358  003480  C02C  F01C         	movff	floorf@u+2,?_floorf+2
  7359  003484  C02D  F01D         	movff	floorf@u+3,?_floorf+3
  7360  003488                     l1165:
  7361  003488  0012               	return		;funcret
  7362  00348A                     __end_of_floorf:
  7363                           	callstack 0
  7364                           
  7365 ;; *************** function ___fpclassifyf *****************
  7366 ;; Defined at:
  7367 ;;		line 4 in file "/Applications/microchip/xc8/v2.31/pic/sources/c99/common/__fpclassifyf.c"
  7368 ;; Parameters:    Size  Location     Type
  7369 ;;  x               4    0[COMRAM] float 
  7370 ;; Auto vars:     Size  Location     Type
  7371 ;;  u               4   10[COMRAM] struct .
  7372 ;;  e               2    8[COMRAM] int 
  7373 ;; Return value:  Size  Location     Type
  7374 ;;                  2    0[COMRAM] int 
  7375 ;; Registers used:
  7376 ;;		wreg, status,2, status,0
  7377 ;; Tracked objects:
  7378 ;;		On entry : 0/0
  7379 ;;		On exit  : 0/0
  7380 ;;		Unchanged: 0/0
  7381 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  7382 ;;      Params:         4       0       0       0       0       0       0       0       0
  7383 ;;      Locals:         6       0       0       0       0       0       0       0       0
  7384 ;;      Temps:          4       0       0       0       0       0       0       0       0
  7385 ;;      Totals:        14       0       0       0       0       0       0       0       0
  7386 ;;Total ram usage:       14 bytes
  7387 ;; Hardware stack levels used:    1
  7388 ;; This function calls:
  7389 ;;		Nothing
  7390 ;; This function is called by:
  7391 ;;		_efgtoa
  7392 ;; This function uses a non-reentrant model
  7393 ;;
  7394                           
  7395                           	psect	text26
  7396  003F84                     __ptext26:
  7397                           	callstack 0
  7398  003F84                     ___fpclassifyf:
  7399                           	callstack 25
  7400  003F84  C104  F00B         	movff	___fpclassifyf@F465,___fpclassifyf@u
  7401  003F88  C105  F00C         	movff	___fpclassifyf@F465+1,___fpclassifyf@u+1
  7402  003F8C  C106  F00D         	movff	___fpclassifyf@F465+2,___fpclassifyf@u+2
  7403  003F90  C107  F00E         	movff	___fpclassifyf@F465+3,___fpclassifyf@u+3
  7404  003F94  C001  F00B         	movff	___fpclassifyf@x,___fpclassifyf@u
  7405  003F98  C002  F00C         	movff	___fpclassifyf@x+1,___fpclassifyf@u+1
  7406  003F9C  C003  F00D         	movff	___fpclassifyf@x+2,___fpclassifyf@u+2
  7407  003FA0  C004  F00E         	movff	___fpclassifyf@x+3,___fpclassifyf@u+3
  7408  003FA4  C00B  F005         	movff	___fpclassifyf@u,??___fpclassifyf
  7409  003FA8  C00C  F006         	movff	___fpclassifyf@u+1,??___fpclassifyf+1
  7410  003FAC  C00D  F007         	movff	___fpclassifyf@u+2,??___fpclassifyf+2
  7411  003FB0  C00E  F008         	movff	___fpclassifyf@u+3,??___fpclassifyf+3
  7412  003FB4  0E18               	movlw	24
  7413  003FB6  EFE2  F01F         	goto	u4660
  7414  003FBA                     u4665:
  7415  003FBA  90D8               	bcf	status,0,c
  7416  003FBC  3208               	rrcf	(??___fpclassifyf+3)^0,f,c
  7417  003FBE  3207               	rrcf	(??___fpclassifyf+2)^0,f,c
  7418  003FC0  3206               	rrcf	(??___fpclassifyf+1)^0,f,c
  7419  003FC2  3205               	rrcf	??___fpclassifyf^0,f,c
  7420  003FC4                     u4660:
  7421  003FC4  2EE8               	decfsz	wreg,f,c
  7422  003FC6  EFDD  F01F         	goto	u4665
  7423  003FCA  5005               	movf	??___fpclassifyf^0,w,c
  7424  003FCC  6E09               	movwf	___fpclassifyf@e^0,c
  7425  003FCE  6A0A               	clrf	(___fpclassifyf@e+1)^0,c
  7426  003FD0  5009               	movf	___fpclassifyf@e^0,w,c
  7427  003FD2  100A               	iorwf	(___fpclassifyf@e+1)^0,w,c
  7428  003FD4  A4D8               	btfss	status,2,c
  7429  003FD6  EFEF  F01F         	goto	u4671
  7430  003FDA  EFF1  F01F         	goto	u4670
  7431  003FDE                     u4671:
  7432  003FDE  EF11  F020         	goto	l4025
  7433  003FE2                     u4670:
  7434  003FE2  90D8               	bcf	status,0,c
  7435  003FE4  340B               	rlcf	___fpclassifyf@u^0,w,c
  7436  003FE6  6E05               	movwf	??___fpclassifyf^0,c
  7437  003FE8  340C               	rlcf	(___fpclassifyf@u+1)^0,w,c
  7438  003FEA  6E06               	movwf	(??___fpclassifyf+1)^0,c
  7439  003FEC  340D               	rlcf	(___fpclassifyf@u+2)^0,w,c
  7440  003FEE  6E07               	movwf	(??___fpclassifyf+2)^0,c
  7441  003FF0  340E               	rlcf	(___fpclassifyf@u+3)^0,w,c
  7442  003FF2  6E08               	movwf	(??___fpclassifyf+3)^0,c
  7443  003FF4  5005               	movf	??___fpclassifyf^0,w,c
  7444  003FF6  1006               	iorwf	(??___fpclassifyf+1)^0,w,c
  7445  003FF8  1007               	iorwf	(??___fpclassifyf+2)^0,w,c
  7446  003FFA  1008               	iorwf	(??___fpclassifyf+3)^0,w,c
  7447  003FFC  A4D8               	btfss	status,2,c
  7448  003FFE  EF03  F020         	goto	u4681
  7449  004002  EF05  F020         	goto	u4680
  7450  004006                     u4681:
  7451  004006  EF0B  F020         	goto	l4021
  7452  00400A                     u4680:
  7453  00400A  0E00               	movlw	0
  7454  00400C  6E02               	movwf	(?___fpclassifyf+1)^0,c
  7455  00400E  0E02               	movlw	2
  7456  004010  6E01               	movwf	?___fpclassifyf^0,c
  7457  004012  EF40  F020         	goto	l1120
  7458  004016                     l4021:
  7459  004016  0E00               	movlw	0
  7460  004018  6E02               	movwf	(?___fpclassifyf+1)^0,c
  7461  00401A  0E03               	movlw	3
  7462  00401C  6E01               	movwf	?___fpclassifyf^0,c
  7463  00401E  EF40  F020         	goto	l1120
  7464  004022                     l4025:
  7465  004022  2809               	incf	___fpclassifyf@e^0,w,c
  7466  004024  100A               	iorwf	(___fpclassifyf@e+1)^0,w,c
  7467  004026  A4D8               	btfss	status,2,c
  7468  004028  EF18  F020         	goto	u4691
  7469  00402C  EF1A  F020         	goto	u4690
  7470  004030                     u4691:
  7471  004030  EF3C  F020         	goto	l4031
  7472  004034                     u4690:
  7473  004034  C00B  F005         	movff	___fpclassifyf@u,??___fpclassifyf
  7474  004038  C00C  F006         	movff	___fpclassifyf@u+1,??___fpclassifyf+1
  7475  00403C  C00D  F007         	movff	___fpclassifyf@u+2,??___fpclassifyf+2
  7476  004040  C00E  F008         	movff	___fpclassifyf@u+3,??___fpclassifyf+3
  7477  004044  0E09               	movlw	9
  7478  004046                     u4705:
  7479  004046  90D8               	bcf	status,0,c
  7480  004048  3605               	rlcf	??___fpclassifyf^0,f,c
  7481  00404A  3606               	rlcf	(??___fpclassifyf+1)^0,f,c
  7482  00404C  3607               	rlcf	(??___fpclassifyf+2)^0,f,c
  7483  00404E  3608               	rlcf	(??___fpclassifyf+3)^0,f,c
  7484  004050  2EE8               	decfsz	wreg,f,c
  7485  004052  EF23  F020         	goto	u4705
  7486  004056  5005               	movf	??___fpclassifyf^0,w,c
  7487  004058  1006               	iorwf	(??___fpclassifyf+1)^0,w,c
  7488  00405A  1007               	iorwf	(??___fpclassifyf+2)^0,w,c
  7489  00405C  1008               	iorwf	(??___fpclassifyf+3)^0,w,c
  7490  00405E  B4D8               	btfsc	status,2,c
  7491  004060  EF34  F020         	goto	u4711
  7492  004064  EF37  F020         	goto	u4710
  7493  004068                     u4711:
  7494  004068  0E01               	movlw	1
  7495  00406A  EF38  F020         	goto	u4720
  7496  00406E                     u4710:
  7497  00406E  0E00               	movlw	0
  7498  004070                     u4720:
  7499  004070  6E01               	movwf	?___fpclassifyf^0,c
  7500  004072  6A02               	clrf	(?___fpclassifyf+1)^0,c
  7501  004074  EF40  F020         	goto	l1120
  7502  004078                     l4031:
  7503  004078  0E00               	movlw	0
  7504  00407A  6E02               	movwf	(?___fpclassifyf+1)^0,c
  7505  00407C  0E04               	movlw	4
  7506  00407E  6E01               	movwf	?___fpclassifyf^0,c
  7507  004080                     l1120:
  7508  004080  0012               	return		;funcret
  7509  004082                     __end_of___fpclassifyf:
  7510                           	callstack 0
  7511                           
  7512 ;; *************** function ___fltol *****************
  7513 ;; Defined at:
  7514 ;;		line 43 in file "/Applications/microchip/xc8/v2.31/pic/sources/c99/common/fltol.c"
  7515 ;; Parameters:    Size  Location     Type
  7516 ;;  f1              4    0[COMRAM] int 
  7517 ;; Auto vars:     Size  Location     Type
  7518 ;;  exp1            1    9[COMRAM] unsigned char 
  7519 ;;  sign1           1    8[COMRAM] unsigned char 
  7520 ;; Return value:  Size  Location     Type
  7521 ;;                  4    0[COMRAM] long 
  7522 ;; Registers used:
  7523 ;;		wreg, status,2, status,0
  7524 ;; Tracked objects:
  7525 ;;		On entry : 0/0
  7526 ;;		On exit  : 0/0
  7527 ;;		Unchanged: 0/0
  7528 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  7529 ;;      Params:         4       0       0       0       0       0       0       0       0
  7530 ;;      Locals:         2       0       0       0       0       0       0       0       0
  7531 ;;      Temps:          4       0       0       0       0       0       0       0       0
  7532 ;;      Totals:        10       0       0       0       0       0       0       0       0
  7533 ;;Total ram usage:       10 bytes
  7534 ;; Hardware stack levels used:    1
  7535 ;; This function calls:
  7536 ;;		Nothing
  7537 ;; This function is called by:
  7538 ;;		_efgtoa
  7539 ;; This function uses a non-reentrant model
  7540 ;;
  7541                           
  7542                           	psect	text27
  7543  003C76                     __ptext27:
  7544                           	callstack 0
  7545  003C76                     ___fltol:
  7546                           	callstack 25
  7547  003C76  3403               	rlcf	(___fltol@f1+2)^0,w,c
  7548  003C78  3404               	rlcf	(___fltol@f1+3)^0,w,c
  7549  003C7A  6E0A               	movwf	___fltol@exp1^0,c
  7550  003C7C  500A               	movf	___fltol@exp1^0,w,c
  7551  003C7E  A4D8               	btfss	status,2,c
  7552  003C80  EF44  F01E         	goto	u4541
  7553  003C84  EF46  F01E         	goto	u4540
  7554  003C88                     u4541:
  7555  003C88  EF50  F01E         	goto	l3949
  7556  003C8C                     u4540:
  7557  003C8C                     l3945:
  7558  003C8C  0E00               	movlw	0
  7559  003C8E  6E01               	movwf	?___fltol^0,c
  7560  003C90  0E00               	movlw	0
  7561  003C92  6E02               	movwf	(?___fltol+1)^0,c
  7562  003C94  0E00               	movlw	0
  7563  003C96  6E03               	movwf	(?___fltol+2)^0,c
  7564  003C98  0E00               	movlw	0
  7565  003C9A  6E04               	movwf	(?___fltol+3)^0,c
  7566  003C9C  EFBD  F01E         	goto	l500
  7567  003CA0                     l3949:
  7568  003CA0  C001  F005         	movff	___fltol@f1,??___fltol
  7569  003CA4  C002  F006         	movff	___fltol@f1+1,??___fltol+1
  7570  003CA8  C003  F007         	movff	___fltol@f1+2,??___fltol+2
  7571  003CAC  C004  F008         	movff	___fltol@f1+3,??___fltol+3
  7572  003CB0  0E20               	movlw	32
  7573  003CB2  EF60  F01E         	goto	u4550
  7574  003CB6                     u4555:
  7575  003CB6  90D8               	bcf	status,0,c
  7576  003CB8  3208               	rrcf	(??___fltol+3)^0,f,c
  7577  003CBA  3207               	rrcf	(??___fltol+2)^0,f,c
  7578  003CBC  3206               	rrcf	(??___fltol+1)^0,f,c
  7579  003CBE  3205               	rrcf	??___fltol^0,f,c
  7580  003CC0                     u4550:
  7581  003CC0  2EE8               	decfsz	wreg,f,c
  7582  003CC2  EF5B  F01E         	goto	u4555
  7583  003CC6  5005               	movf	??___fltol^0,w,c
  7584  003CC8  6E09               	movwf	___fltol@sign1^0,c
  7585  003CCA  8E03               	bsf	(___fltol@f1+2)^0,7,c
  7586  003CCC  0EFF               	movlw	255
  7587  003CCE  1601               	andwf	___fltol@f1^0,f,c
  7588  003CD0  0EFF               	movlw	255
  7589  003CD2  1602               	andwf	(___fltol@f1+1)^0,f,c
  7590  003CD4  0EFF               	movlw	255
  7591  003CD6  1603               	andwf	(___fltol@f1+2)^0,f,c
  7592  003CD8  0E00               	movlw	0
  7593  003CDA  1604               	andwf	(___fltol@f1+3)^0,f,c
  7594  003CDC  0E96               	movlw	150
  7595  003CDE  5E0A               	subwf	___fltol@exp1^0,f,c
  7596  003CE0  BE0A               	btfsc	___fltol@exp1^0,7,c
  7597  003CE2  EF77  F01E         	goto	u4560
  7598  003CE6  EF75  F01E         	goto	u4561
  7599  003CEA                     u4561:
  7600  003CEA  EF8D  F01E         	goto	l3969
  7601  003CEE                     u4560:
  7602  003CEE  500A               	movf	___fltol@exp1^0,w,c
  7603  003CF0  0A80               	xorlw	128
  7604  003CF2  0F97               	addlw	151
  7605  003CF4  B0D8               	btfsc	status,0,c
  7606  003CF6  EF7F  F01E         	goto	u4571
  7607  003CFA  EF81  F01E         	goto	u4570
  7608  003CFE                     u4571:
  7609  003CFE  EF83  F01E         	goto	l3965
  7610  003D02                     u4570:
  7611  003D02  EF46  F01E         	goto	l3945
  7612  003D06                     l3965:
  7613  003D06  90D8               	bcf	status,0,c
  7614  003D08  3204               	rrcf	(___fltol@f1+3)^0,f,c
  7615  003D0A  3203               	rrcf	(___fltol@f1+2)^0,f,c
  7616  003D0C  3202               	rrcf	(___fltol@f1+1)^0,f,c
  7617  003D0E  3201               	rrcf	___fltol@f1^0,f,c
  7618  003D10  3E0A               	incfsz	___fltol@exp1^0,f,c
  7619  003D12  EF83  F01E         	goto	l3965
  7620  003D16  EFA5  F01E         	goto	l3979
  7621  003D1A                     l3969:
  7622  003D1A  0E1F               	movlw	31
  7623  003D1C  640A               	cpfsgt	___fltol@exp1^0,c
  7624  003D1E  EF93  F01E         	goto	u4581
  7625  003D22  EF95  F01E         	goto	u4580
  7626  003D26                     u4581:
  7627  003D26  EF9D  F01E         	goto	l3977
  7628  003D2A                     u4580:
  7629  003D2A  EF46  F01E         	goto	l3945
  7630  003D2E                     l3975:
  7631  003D2E  90D8               	bcf	status,0,c
  7632  003D30  3601               	rlcf	___fltol@f1^0,f,c
  7633  003D32  3602               	rlcf	(___fltol@f1+1)^0,f,c
  7634  003D34  3603               	rlcf	(___fltol@f1+2)^0,f,c
  7635  003D36  3604               	rlcf	(___fltol@f1+3)^0,f,c
  7636  003D38  060A               	decf	___fltol@exp1^0,f,c
  7637  003D3A                     l3977:
  7638  003D3A  500A               	movf	___fltol@exp1^0,w,c
  7639  003D3C  A4D8               	btfss	status,2,c
  7640  003D3E  EFA3  F01E         	goto	u4591
  7641  003D42  EFA5  F01E         	goto	u4590
  7642  003D46                     u4591:
  7643  003D46  EF97  F01E         	goto	l3975
  7644  003D4A                     u4590:
  7645  003D4A                     l3979:
  7646  003D4A  5009               	movf	___fltol@sign1^0,w,c
  7647  003D4C  B4D8               	btfsc	status,2,c
  7648  003D4E  EFAB  F01E         	goto	u4601
  7649  003D52  EFAD  F01E         	goto	u4600
  7650  003D56                     u4601:
  7651  003D56  EFB5  F01E         	goto	l3983
  7652  003D5A                     u4600:
  7653  003D5A  1E04               	comf	(___fltol@f1+3)^0,f,c
  7654  003D5C  1E03               	comf	(___fltol@f1+2)^0,f,c
  7655  003D5E  1E02               	comf	(___fltol@f1+1)^0,f,c
  7656  003D60  6C01               	negf	___fltol@f1^0,c
  7657  003D62  0E00               	movlw	0
  7658  003D64  2202               	addwfc	(___fltol@f1+1)^0,f,c
  7659  003D66  2203               	addwfc	(___fltol@f1+2)^0,f,c
  7660  003D68  2204               	addwfc	(___fltol@f1+3)^0,f,c
  7661  003D6A                     l3983:
  7662  003D6A  C001  F001         	movff	___fltol@f1,?___fltol
  7663  003D6E  C002  F002         	movff	___fltol@f1+1,?___fltol+1
  7664  003D72  C003  F003         	movff	___fltol@f1+2,?___fltol+2
  7665  003D76  C004  F004         	movff	___fltol@f1+3,?___fltol+3
  7666  003D7A                     l500:
  7667  003D7A  0012               	return		;funcret
  7668  003D7C                     __end_of___fltol:
  7669                           	callstack 0
  7670                           
  7671 ;; *************** function ___flsub *****************
  7672 ;; Defined at:
  7673 ;;		line 245 in file "/Applications/microchip/xc8/v2.31/pic/sources/c99/common/sprcadd.c"
  7674 ;; Parameters:    Size  Location     Type
  7675 ;;  b               4   39[COMRAM] long 
  7676 ;;  a               4   43[COMRAM] long 
  7677 ;; Auto vars:     Size  Location     Type
  7678 ;;		None
  7679 ;; Return value:  Size  Location     Type
  7680 ;;                  4   39[COMRAM] long 
  7681 ;; Registers used:
  7682 ;;		wreg, status,2, status,0, cstack
  7683 ;; Tracked objects:
  7684 ;;		On entry : 0/0
  7685 ;;		On exit  : 0/0
  7686 ;;		Unchanged: 0/0
  7687 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  7688 ;;      Params:         8       0       0       0       0       0       0       0       0
  7689 ;;      Locals:         0       0       0       0       0       0       0       0       0
  7690 ;;      Temps:          0       0       0       0       0       0       0       0       0
  7691 ;;      Totals:         8       0       0       0       0       0       0       0       0
  7692 ;;Total ram usage:        8 bytes
  7693 ;; Hardware stack levels used:    1
  7694 ;; Hardware stack levels required when called:    1
  7695 ;; This function calls:
  7696 ;;		___fladd
  7697 ;; This function is called by:
  7698 ;;		_SensorLM35
  7699 ;;		_efgtoa
  7700 ;; This function uses a non-reentrant model
  7701 ;;
  7702                           
  7703                           	psect	text28
  7704  004A52                     __ptext28:
  7705                           	callstack 0
  7706  004A52                     ___flsub:
  7707                           	callstack 24
  7708  004A52  0E00               	movlw	0
  7709  004A54  1A2C               	xorwf	___flsub@a^0,f,c
  7710  004A56  0E00               	movlw	0
  7711  004A58  1A2D               	xorwf	(___flsub@a+1)^0,f,c
  7712  004A5A  0E00               	movlw	0
  7713  004A5C  1A2E               	xorwf	(___flsub@a+2)^0,f,c
  7714  004A5E  0E80               	movlw	128
  7715  004A60  1A2F               	xorwf	(___flsub@a+3)^0,f,c
  7716  004A62  C028  F001         	movff	___flsub@b,___fladd@b
  7717  004A66  C029  F002         	movff	___flsub@b+1,___fladd@b+1
  7718  004A6A  C02A  F003         	movff	___flsub@b+2,___fladd@b+2
  7719  004A6E  C02B  F004         	movff	___flsub@b+3,___fladd@b+3
  7720  004A72  C02C  F005         	movff	___flsub@a,___fladd@a
  7721  004A76  C02D  F006         	movff	___flsub@a+1,___fladd@a+1
  7722  004A7A  C02E  F007         	movff	___flsub@a+2,___fladd@a+2
  7723  004A7E  C02F  F008         	movff	___flsub@a+3,___fladd@a+3
  7724  004A82  ECB4  F00E         	call	___fladd	;wreg free
  7725  004A86  C001  F028         	movff	?___fladd,?___flsub
  7726  004A8A  C002  F029         	movff	?___fladd+1,?___flsub+1
  7727  004A8E  C003  F02A         	movff	?___fladd+2,?___flsub+2
  7728  004A92  C004  F02B         	movff	?___fladd+3,?___flsub+3
  7729  004A96  0012               	return		;funcret
  7730  004A98                     __end_of___flsub:
  7731                           	callstack 0
  7732                           
  7733 ;; *************** function ___fladd *****************
  7734 ;; Defined at:
  7735 ;;		line 10 in file "/Applications/microchip/xc8/v2.31/pic/sources/c99/common/sprcadd.c"
  7736 ;; Parameters:    Size  Location     Type
  7737 ;;  b               4    0[COMRAM] long 
  7738 ;;  a               4    4[COMRAM] long 
  7739 ;; Auto vars:     Size  Location     Type
  7740 ;;  grs             1   15[COMRAM] unsigned char 
  7741 ;;  bexp            1   14[COMRAM] unsigned char 
  7742 ;;  aexp            1   13[COMRAM] unsigned char 
  7743 ;;  signs           1   12[COMRAM] unsigned char 
  7744 ;; Return value:  Size  Location     Type
  7745 ;;                  4    0[COMRAM] unsigned char 
  7746 ;; Registers used:
  7747 ;;		wreg, status,2, status,0
  7748 ;; Tracked objects:
  7749 ;;		On entry : 0/0
  7750 ;;		On exit  : 0/0
  7751 ;;		Unchanged: 0/0
  7752 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  7753 ;;      Params:         8       0       0       0       0       0       0       0       0
  7754 ;;      Locals:         4       0       0       0       0       0       0       0       0
  7755 ;;      Temps:          4       0       0       0       0       0       0       0       0
  7756 ;;      Totals:        16       0       0       0       0       0       0       0       0
  7757 ;;Total ram usage:       16 bytes
  7758 ;; Hardware stack levels used:    1
  7759 ;; This function calls:
  7760 ;;		Nothing
  7761 ;; This function is called by:
  7762 ;;		___flsub
  7763 ;;		_efgtoa
  7764 ;; This function uses a non-reentrant model
  7765 ;;
  7766                           
  7767                           	psect	text29
  7768  001D68                     __ptext29:
  7769                           	callstack 0
  7770  001D68                     ___fladd:
  7771                           	callstack 24
  7772  001D68  5004               	movf	(___fladd@b+3)^0,w,c
  7773  001D6A  0B80               	andlw	128
  7774  001D6C  6E0D               	movwf	___fladd@signs^0,c
  7775  001D6E  5004               	movf	(___fladd@b+3)^0,w,c
  7776  001D70  2404               	addwf	(___fladd@b+3)^0,w,c
  7777  001D72  6E0F               	movwf	___fladd@bexp^0,c
  7778  001D74  AE03               	btfss	(___fladd@b+2)^0,7,c
  7779  001D76  EFBF  F00E         	goto	u3351
  7780  001D7A  EFC1  F00E         	goto	u3350
  7781  001D7E                     u3351:
  7782  001D7E  EFC2  F00E         	goto	l3239
  7783  001D82                     u3350:
  7784  001D82  800F               	bsf	___fladd@bexp^0,0,c
  7785  001D84                     l3239:
  7786  001D84  500F               	movf	___fladd@bexp^0,w,c
  7787  001D86  B4D8               	btfsc	status,2,c
  7788  001D88  EFC8  F00E         	goto	u3361
  7789  001D8C  EFCA  F00E         	goto	u3360
  7790  001D90                     u3361:
  7791  001D90  EFDF  F00E         	goto	l3249
  7792  001D94                     u3360:
  7793  001D94  280F               	incf	___fladd@bexp^0,w,c
  7794  001D96  A4D8               	btfss	status,2,c
  7795  001D98  EFD0  F00E         	goto	u3371
  7796  001D9C  EFD2  F00E         	goto	u3370
  7797  001DA0                     u3371:
  7798  001DA0  EFDA  F00E         	goto	l3245
  7799  001DA4                     u3370:
  7800  001DA4  0E00               	movlw	0
  7801  001DA6  6E01               	movwf	___fladd@b^0,c
  7802  001DA8  0E00               	movlw	0
  7803  001DAA  6E02               	movwf	(___fladd@b+1)^0,c
  7804  001DAC  0E00               	movlw	0
  7805  001DAE  6E03               	movwf	(___fladd@b+2)^0,c
  7806  001DB0  0E00               	movlw	0
  7807  001DB2  6E04               	movwf	(___fladd@b+3)^0,c
  7808  001DB4                     l3245:
  7809  001DB4  8E03               	bsf	(___fladd@b+2)^0,7,c
  7810  001DB6  0E00               	movlw	0
  7811  001DB8  6E04               	movwf	(___fladd@b+3)^0,c
  7812  001DBA  EFE7  F00E         	goto	l3251
  7813  001DBE                     l3249:
  7814  001DBE  0E00               	movlw	0
  7815  001DC0  6E01               	movwf	___fladd@b^0,c
  7816  001DC2  0E00               	movlw	0
  7817  001DC4  6E02               	movwf	(___fladd@b+1)^0,c
  7818  001DC6  0E00               	movlw	0
  7819  001DC8  6E03               	movwf	(___fladd@b+2)^0,c
  7820  001DCA  0E00               	movlw	0
  7821  001DCC  6E04               	movwf	(___fladd@b+3)^0,c
  7822  001DCE                     l3251:
  7823  001DCE  5008               	movf	(___fladd@a+3)^0,w,c
  7824  001DD0  0B80               	andlw	128
  7825  001DD2  6E0E               	movwf	___fladd@aexp^0,c
  7826  001DD4  500D               	movf	___fladd@signs^0,w,c
  7827  001DD6  180E               	xorwf	___fladd@aexp^0,w,c
  7828  001DD8  B4D8               	btfsc	status,2,c
  7829  001DDA  EFF1  F00E         	goto	u3381
  7830  001DDE  EFF3  F00E         	goto	u3380
  7831  001DE2                     u3381:
  7832  001DE2  EFF4  F00E         	goto	l3257
  7833  001DE6                     u3380:
  7834  001DE6  8C0D               	bsf	___fladd@signs^0,6,c
  7835  001DE8                     l3257:
  7836  001DE8  5008               	movf	(___fladd@a+3)^0,w,c
  7837  001DEA  2408               	addwf	(___fladd@a+3)^0,w,c
  7838  001DEC  6E0E               	movwf	___fladd@aexp^0,c
  7839  001DEE  AE07               	btfss	(___fladd@a+2)^0,7,c
  7840  001DF0  EFFC  F00E         	goto	u3391
  7841  001DF4  EFFE  F00E         	goto	u3390
  7842  001DF8                     u3391:
  7843  001DF8  EFFF  F00E         	goto	l3263
  7844  001DFC                     u3390:
  7845  001DFC  800E               	bsf	___fladd@aexp^0,0,c
  7846  001DFE                     l3263:
  7847  001DFE  500E               	movf	___fladd@aexp^0,w,c
  7848  001E00  B4D8               	btfsc	status,2,c
  7849  001E02  EF05  F00F         	goto	u3401
  7850  001E06  EF07  F00F         	goto	u3400
  7851  001E0A                     u3401:
  7852  001E0A  EF1C  F00F         	goto	l3273
  7853  001E0E                     u3400:
  7854  001E0E  280E               	incf	___fladd@aexp^0,w,c
  7855  001E10  A4D8               	btfss	status,2,c
  7856  001E12  EF0D  F00F         	goto	u3411
  7857  001E16  EF0F  F00F         	goto	u3410
  7858  001E1A                     u3411:
  7859  001E1A  EF17  F00F         	goto	l3269
  7860  001E1E                     u3410:
  7861  001E1E  0E00               	movlw	0
  7862  001E20  6E05               	movwf	___fladd@a^0,c
  7863  001E22  0E00               	movlw	0
  7864  001E24  6E06               	movwf	(___fladd@a+1)^0,c
  7865  001E26  0E00               	movlw	0
  7866  001E28  6E07               	movwf	(___fladd@a+2)^0,c
  7867  001E2A  0E00               	movlw	0
  7868  001E2C  6E08               	movwf	(___fladd@a+3)^0,c
  7869  001E2E                     l3269:
  7870  001E2E  8E07               	bsf	(___fladd@a+2)^0,7,c
  7871  001E30  0E00               	movlw	0
  7872  001E32  6E08               	movwf	(___fladd@a+3)^0,c
  7873  001E34  EF24  F00F         	goto	l3275
  7874  001E38                     l3273:
  7875  001E38  0E00               	movlw	0
  7876  001E3A  6E05               	movwf	___fladd@a^0,c
  7877  001E3C  0E00               	movlw	0
  7878  001E3E  6E06               	movwf	(___fladd@a+1)^0,c
  7879  001E40  0E00               	movlw	0
  7880  001E42  6E07               	movwf	(___fladd@a+2)^0,c
  7881  001E44  0E00               	movlw	0
  7882  001E46  6E08               	movwf	(___fladd@a+3)^0,c
  7883  001E48                     l3275:
  7884  001E48  500F               	movf	___fladd@bexp^0,w,c
  7885  001E4A  5C0E               	subwf	___fladd@aexp^0,w,c
  7886  001E4C  B0D8               	btfsc	status,0,c
  7887  001E4E  EF2B  F00F         	goto	u3421
  7888  001E52  EF2D  F00F         	goto	u3420
  7889  001E56                     u3421:
  7890  001E56  EF54  F00F         	goto	l3311
  7891  001E5A                     u3420:
  7892  001E5A  AC0D               	btfss	___fladd@signs^0,6,c
  7893  001E5C  EF32  F00F         	goto	u3431
  7894  001E60  EF34  F00F         	goto	u3430
  7895  001E64                     u3431:
  7896  001E64  EF36  F00F         	goto	l3281
  7897  001E68                     u3430:
  7898  001E68  0E80               	movlw	128
  7899  001E6A  1A0D               	xorwf	___fladd@signs^0,f,c
  7900  001E6C                     l3281:
  7901  001E6C  C00F  F010         	movff	___fladd@bexp,___fladd@grs
  7902  001E70  C00E  F00F         	movff	___fladd@aexp,___fladd@bexp
  7903  001E74  C010  F00E         	movff	___fladd@grs,___fladd@aexp
  7904  001E78  C001  F010         	movff	___fladd@b,___fladd@grs
  7905  001E7C  C005  F001         	movff	___fladd@a,___fladd@b
  7906  001E80  C010  F005         	movff	___fladd@grs,___fladd@a
  7907  001E84  C002  F010         	movff	___fladd@b+1,___fladd@grs
  7908  001E88  C006  F002         	movff	___fladd@a+1,___fladd@b+1
  7909  001E8C  C010  F006         	movff	___fladd@grs,___fladd@a+1
  7910  001E90  C003  F010         	movff	___fladd@b+2,___fladd@grs
  7911  001E94  C007  F003         	movff	___fladd@a+2,___fladd@b+2
  7912  001E98  C010  F007         	movff	___fladd@grs,___fladd@a+2
  7913  001E9C  C004  F010         	movff	___fladd@b+3,___fladd@grs
  7914  001EA0  C008  F004         	movff	___fladd@a+3,___fladd@b+3
  7915  001EA4  C010  F008         	movff	___fladd@grs,___fladd@a+3
  7916  001EA8                     l3311:
  7917  001EA8  0E00               	movlw	0
  7918  001EAA  6E10               	movwf	___fladd@grs^0,c
  7919  001EAC  500F               	movf	___fladd@bexp^0,w,c
  7920  001EAE  C00E  F009         	movff	___fladd@aexp,??___fladd
  7921  001EB2  6A0A               	clrf	(??___fladd+1)^0,c
  7922  001EB4  5E09               	subwf	??___fladd^0,f,c
  7923  001EB6  0E00               	movlw	0
  7924  001EB8  5A0A               	subwfb	(??___fladd+1)^0,f,c
  7925  001EBA  BE0A               	btfsc	(??___fladd+1)^0,7,c
  7926  001EBC  EF69  F00F         	goto	u3441
  7927  001EC0  500A               	movf	(??___fladd+1)^0,w,c
  7928  001EC2  E109               	bnz	u3440
  7929  001EC4  0E1A               	movlw	26
  7930  001EC6  5C09               	subwf	??___fladd^0,w,c
  7931  001EC8  A0D8               	btfss	status,0,c
  7932  001ECA  EF69  F00F         	goto	u3441
  7933  001ECE  EF6B  F00F         	goto	u3440
  7934  001ED2                     u3441:
  7935  001ED2  EFA2  F00F         	goto	l732
  7936  001ED6                     u3440:
  7937  001ED6  5001               	movf	___fladd@b^0,w,c
  7938  001ED8  1002               	iorwf	(___fladd@b+1)^0,w,c
  7939  001EDA  1003               	iorwf	(___fladd@b+2)^0,w,c
  7940  001EDC  1004               	iorwf	(___fladd@b+3)^0,w,c
  7941  001EDE  A4D8               	btfss	status,2,c
  7942  001EE0  EF74  F00F         	goto	u3451
  7943  001EE4  EF77  F00F         	goto	u3450
  7944  001EE8                     u3451:
  7945  001EE8  0E01               	movlw	1
  7946  001EEA  EF78  F00F         	goto	u3460
  7947  001EEE                     u3450:
  7948  001EEE  0E00               	movlw	0
  7949  001EF0                     u3460:
  7950  001EF0  6E10               	movwf	___fladd@grs^0,c
  7951  001EF2  0E00               	movlw	0
  7952  001EF4  6E01               	movwf	___fladd@b^0,c
  7953  001EF6  0E00               	movlw	0
  7954  001EF8  6E02               	movwf	(___fladd@b+1)^0,c
  7955  001EFA  0E00               	movlw	0
  7956  001EFC  6E03               	movwf	(___fladd@b+2)^0,c
  7957  001EFE  0E00               	movlw	0
  7958  001F00  6E04               	movwf	(___fladd@b+3)^0,c
  7959  001F02  C00E  F00F         	movff	___fladd@aexp,___fladd@bexp
  7960  001F06  EFAB  F00F         	goto	l731
  7961  001F0A                     l733:
  7962  001F0A  A010               	btfss	___fladd@grs^0,0,c
  7963  001F0C  EF8A  F00F         	goto	u3471
  7964  001F10  EF8C  F00F         	goto	u3470
  7965  001F14                     u3471:
  7966  001F14  EF92  F00F         	goto	l3323
  7967  001F18                     u3470:
  7968  001F18  90D8               	bcf	status,0,c
  7969  001F1A  3010               	rrcf	___fladd@grs^0,w,c
  7970  001F1C  0901               	iorlw	1
  7971  001F1E  6E10               	movwf	___fladd@grs^0,c
  7972  001F20  EF94  F00F         	goto	l3325
  7973  001F24                     l3323:
  7974  001F24  90D8               	bcf	status,0,c
  7975  001F26  3210               	rrcf	___fladd@grs^0,f,c
  7976  001F28                     l3325:
  7977  001F28  A001               	btfss	___fladd@b^0,0,c
  7978  001F2A  EF99  F00F         	goto	u3481
  7979  001F2E  EF9B  F00F         	goto	u3480
  7980  001F32                     u3481:
  7981  001F32  EF9C  F00F         	goto	l3329
  7982  001F36                     u3480:
  7983  001F36  8E10               	bsf	___fladd@grs^0,7,c
  7984  001F38                     l3329:
  7985  001F38  3404               	rlcf	(___fladd@b+3)^0,w,c
  7986  001F3A  3204               	rrcf	(___fladd@b+3)^0,f,c
  7987  001F3C  3203               	rrcf	(___fladd@b+2)^0,f,c
  7988  001F3E  3202               	rrcf	(___fladd@b+1)^0,f,c
  7989  001F40  3201               	rrcf	___fladd@b^0,f,c
  7990  001F42  2A0F               	incf	___fladd@bexp^0,f,c
  7991  001F44                     l732:
  7992  001F44  500E               	movf	___fladd@aexp^0,w,c
  7993  001F46  5C0F               	subwf	___fladd@bexp^0,w,c
  7994  001F48  A0D8               	btfss	status,0,c
  7995  001F4A  EFA9  F00F         	goto	u3491
  7996  001F4E  EFAB  F00F         	goto	u3490
  7997  001F52                     u3491:
  7998  001F52  EF85  F00F         	goto	l733
  7999  001F56                     u3490:
  8000  001F56                     l731:
  8001  001F56  BC0D               	btfsc	___fladd@signs^0,6,c
  8002  001F58  EFB0  F00F         	goto	u3501
  8003  001F5C  EFB2  F00F         	goto	u3500
  8004  001F60                     u3501:
  8005  001F60  EFF2  F00F         	goto	l3357
  8006  001F64                     u3500:
  8007  001F64  500F               	movf	___fladd@bexp^0,w,c
  8008  001F66  A4D8               	btfss	status,2,c
  8009  001F68  EFB8  F00F         	goto	u3511
  8010  001F6C  EFBA  F00F         	goto	u3510
  8011  001F70                     u3511:
  8012  001F70  EFC4  F00F         	goto	l3339
  8013  001F74                     u3510:
  8014  001F74  0E00               	movlw	0
  8015  001F76  6E01               	movwf	?___fladd^0,c
  8016  001F78  0E00               	movlw	0
  8017  001F7A  6E02               	movwf	(?___fladd+1)^0,c
  8018  001F7C  0E00               	movlw	0
  8019  001F7E  6E03               	movwf	(?___fladd+2)^0,c
  8020  001F80  0E00               	movlw	0
  8021  001F82  6E04               	movwf	(?___fladd+3)^0,c
  8022  001F84  EF13  F011         	goto	l740
  8023  001F88                     l3339:
  8024  001F88  5005               	movf	___fladd@a^0,w,c
  8025  001F8A  2601               	addwf	___fladd@b^0,f,c
  8026  001F8C  5006               	movf	(___fladd@a+1)^0,w,c
  8027  001F8E  2202               	addwfc	(___fladd@b+1)^0,f,c
  8028  001F90  5007               	movf	(___fladd@a+2)^0,w,c
  8029  001F92  2203               	addwfc	(___fladd@b+2)^0,f,c
  8030  001F94  5008               	movf	(___fladd@a+3)^0,w,c
  8031  001F96  2204               	addwfc	(___fladd@b+3)^0,f,c
  8032  001F98  A004               	btfss	(___fladd@b+3)^0,0,c
  8033  001F9A  EFD1  F00F         	goto	u3521
  8034  001F9E  EFD3  F00F         	goto	u3520
  8035  001FA2                     u3521:
  8036  001FA2  EF7F  F010         	goto	l3393
  8037  001FA6                     u3520:
  8038  001FA6  A010               	btfss	___fladd@grs^0,0,c
  8039  001FA8  EFD8  F00F         	goto	u3531
  8040  001FAC  EFDA  F00F         	goto	u3530
  8041  001FB0                     u3531:
  8042  001FB0  EFE0  F00F         	goto	l3347
  8043  001FB4                     u3530:
  8044  001FB4  90D8               	bcf	status,0,c
  8045  001FB6  3010               	rrcf	___fladd@grs^0,w,c
  8046  001FB8  0901               	iorlw	1
  8047  001FBA  6E10               	movwf	___fladd@grs^0,c
  8048  001FBC  EFE2  F00F         	goto	l3349
  8049  001FC0                     l3347:
  8050  001FC0  90D8               	bcf	status,0,c
  8051  001FC2  3210               	rrcf	___fladd@grs^0,f,c
  8052  001FC4                     l3349:
  8053  001FC4  A001               	btfss	___fladd@b^0,0,c
  8054  001FC6  EFE7  F00F         	goto	u3541
  8055  001FCA  EFE9  F00F         	goto	u3540
  8056  001FCE                     u3541:
  8057  001FCE  EFEA  F00F         	goto	l3353
  8058  001FD2                     u3540:
  8059  001FD2  8E10               	bsf	___fladd@grs^0,7,c
  8060  001FD4                     l3353:
  8061  001FD4  3404               	rlcf	(___fladd@b+3)^0,w,c
  8062  001FD6  3204               	rrcf	(___fladd@b+3)^0,f,c
  8063  001FD8  3203               	rrcf	(___fladd@b+2)^0,f,c
  8064  001FDA  3202               	rrcf	(___fladd@b+1)^0,f,c
  8065  001FDC  3201               	rrcf	___fladd@b^0,f,c
  8066  001FDE  2A0F               	incf	___fladd@bexp^0,f,c
  8067  001FE0  EF7F  F010         	goto	l3393
  8068  001FE4                     l3357:
  8069  001FE4  5005               	movf	___fladd@a^0,w,c
  8070  001FE6  5C01               	subwf	___fladd@b^0,w,c
  8071  001FE8  5006               	movf	(___fladd@a+1)^0,w,c
  8072  001FEA  5802               	subwfb	(___fladd@b+1)^0,w,c
  8073  001FEC  5007               	movf	(___fladd@a+2)^0,w,c
  8074  001FEE  5803               	subwfb	(___fladd@b+2)^0,w,c
  8075  001FF0  5004               	movf	(___fladd@b+3)^0,w,c
  8076  001FF2  0A80               	xorlw	128
  8077  001FF4  6E09               	movwf	??___fladd^0,c
  8078  001FF6  5008               	movf	(___fladd@a+3)^0,w,c
  8079  001FF8  0A80               	xorlw	128
  8080  001FFA  5809               	subwfb	??___fladd^0,w,c
  8081  001FFC  B0D8               	btfsc	status,0,c
  8082  001FFE  EF03  F010         	goto	u3551
  8083  002002  EF05  F010         	goto	u3550
  8084  002006                     u3551:
  8085  002006  EF30  F010         	goto	l3367
  8086  00200A                     u3550:
  8087  00200A  5001               	movf	___fladd@b^0,w,c
  8088  00200C  5C05               	subwf	___fladd@a^0,w,c
  8089  00200E  6E09               	movwf	??___fladd^0,c
  8090  002010  5002               	movf	(___fladd@b+1)^0,w,c
  8091  002012  5806               	subwfb	(___fladd@a+1)^0,w,c
  8092  002014  6E0A               	movwf	(??___fladd+1)^0,c
  8093  002016  5003               	movf	(___fladd@b+2)^0,w,c
  8094  002018  5807               	subwfb	(___fladd@a+2)^0,w,c
  8095  00201A  6E0B               	movwf	(??___fladd+2)^0,c
  8096  00201C  5004               	movf	(___fladd@b+3)^0,w,c
  8097  00201E  5808               	subwfb	(___fladd@a+3)^0,w,c
  8098  002020  6E0C               	movwf	(??___fladd+3)^0,c
  8099  002022  0EFF               	movlw	255
  8100  002024  2409               	addwf	??___fladd^0,w,c
  8101  002026  6E01               	movwf	___fladd@b^0,c
  8102  002028  0EFF               	movlw	255
  8103  00202A  200A               	addwfc	(??___fladd+1)^0,w,c
  8104  00202C  6E02               	movwf	(___fladd@b+1)^0,c
  8105  00202E  0EFF               	movlw	255
  8106  002030  200B               	addwfc	(??___fladd+2)^0,w,c
  8107  002032  6E03               	movwf	(___fladd@b+2)^0,c
  8108  002034  0EFF               	movlw	255
  8109  002036  200C               	addwfc	(??___fladd+3)^0,w,c
  8110  002038  6E04               	movwf	(___fladd@b+3)^0,c
  8111  00203A  0E80               	movlw	128
  8112  00203C  1A0D               	xorwf	___fladd@signs^0,f,c
  8113  00203E  6C10               	negf	___fladd@grs^0,c
  8114  002040  5010               	movf	___fladd@grs^0,w,c
  8115  002042  A4D8               	btfss	status,2,c
  8116  002044  EF26  F010         	goto	u3561
  8117  002048  EF28  F010         	goto	u3560
  8118  00204C                     u3561:
  8119  00204C  EF38  F010         	goto	l748
  8120  002050                     u3560:
  8121  002050  0E01               	movlw	1
  8122  002052  2601               	addwf	___fladd@b^0,f,c
  8123  002054  0E00               	movlw	0
  8124  002056  2202               	addwfc	(___fladd@b+1)^0,f,c
  8125  002058  2203               	addwfc	(___fladd@b+2)^0,f,c
  8126  00205A  2204               	addwfc	(___fladd@b+3)^0,f,c
  8127  00205C  EF38  F010         	goto	l748
  8128  002060                     l3367:
  8129  002060  5005               	movf	___fladd@a^0,w,c
  8130  002062  5E01               	subwf	___fladd@b^0,f,c
  8131  002064  5006               	movf	(___fladd@a+1)^0,w,c
  8132  002066  5A02               	subwfb	(___fladd@b+1)^0,f,c
  8133  002068  5007               	movf	(___fladd@a+2)^0,w,c
  8134  00206A  5A03               	subwfb	(___fladd@b+2)^0,f,c
  8135  00206C  5008               	movf	(___fladd@a+3)^0,w,c
  8136  00206E  5A04               	subwfb	(___fladd@b+3)^0,f,c
  8137  002070                     l748:
  8138  002070  5001               	movf	___fladd@b^0,w,c
  8139  002072  1002               	iorwf	(___fladd@b+1)^0,w,c
  8140  002074  1003               	iorwf	(___fladd@b+2)^0,w,c
  8141  002076  1004               	iorwf	(___fladd@b+3)^0,w,c
  8142  002078  A4D8               	btfss	status,2,c
  8143  00207A  EF41  F010         	goto	u3571
  8144  00207E  EF43  F010         	goto	u3570
  8145  002082                     u3571:
  8146  002082  EF78  F010         	goto	l3391
  8147  002086                     u3570:
  8148  002086  5010               	movf	___fladd@grs^0,w,c
  8149  002088  A4D8               	btfss	status,2,c
  8150  00208A  EF49  F010         	goto	u3581
  8151  00208E  EF4B  F010         	goto	u3580
  8152  002092                     u3581:
  8153  002092  EF78  F010         	goto	l3391
  8154  002096                     u3580:
  8155  002096  0E00               	movlw	0
  8156  002098  6E01               	movwf	?___fladd^0,c
  8157  00209A  0E00               	movlw	0
  8158  00209C  6E02               	movwf	(?___fladd+1)^0,c
  8159  00209E  0E00               	movlw	0
  8160  0020A0  6E03               	movwf	(?___fladd+2)^0,c
  8161  0020A2  0E00               	movlw	0
  8162  0020A4  6E04               	movwf	(?___fladd+3)^0,c
  8163  0020A6  EF13  F011         	goto	l740
  8164  0020AA                     l3375:
  8165  0020AA  90D8               	bcf	status,0,c
  8166  0020AC  3601               	rlcf	___fladd@b^0,f,c
  8167  0020AE  3602               	rlcf	(___fladd@b+1)^0,f,c
  8168  0020B0  3603               	rlcf	(___fladd@b+2)^0,f,c
  8169  0020B2  3604               	rlcf	(___fladd@b+3)^0,f,c
  8170  0020B4  AE10               	btfss	___fladd@grs^0,7,c
  8171  0020B6  EF5F  F010         	goto	u3591
  8172  0020BA  EF61  F010         	goto	u3590
  8173  0020BE                     u3591:
  8174  0020BE  EF62  F010         	goto	l3381
  8175  0020C2                     u3590:
  8176  0020C2  8001               	bsf	___fladd@b^0,0,c
  8177  0020C4                     l3381:
  8178  0020C4  A010               	btfss	___fladd@grs^0,0,c
  8179  0020C6  EF67  F010         	goto	u3601
  8180  0020CA  EF69  F010         	goto	u3600
  8181  0020CE                     u3601:
  8182  0020CE  EF6D  F010         	goto	l3385
  8183  0020D2                     u3600:
  8184  0020D2  80D8               	bsf	status,0,c
  8185  0020D4  3610               	rlcf	___fladd@grs^0,f,c
  8186  0020D6  EF6F  F010         	goto	l3387
  8187  0020DA                     l3385:
  8188  0020DA  90D8               	bcf	status,0,c
  8189  0020DC  3610               	rlcf	___fladd@grs^0,f,c
  8190  0020DE                     l3387:
  8191  0020DE  500F               	movf	___fladd@bexp^0,w,c
  8192  0020E0  B4D8               	btfsc	status,2,c
  8193  0020E2  EF75  F010         	goto	u3611
  8194  0020E6  EF77  F010         	goto	u3610
  8195  0020EA                     u3611:
  8196  0020EA  EF78  F010         	goto	l3391
  8197  0020EE                     u3610:
  8198  0020EE  060F               	decf	___fladd@bexp^0,f,c
  8199  0020F0                     l3391:
  8200  0020F0  AE03               	btfss	(___fladd@b+2)^0,7,c
  8201  0020F2  EF7D  F010         	goto	u3621
  8202  0020F6  EF7F  F010         	goto	u3620
  8203  0020FA                     u3621:
  8204  0020FA  EF55  F010         	goto	l3375
  8205  0020FE                     u3620:
  8206  0020FE                     l3393:
  8207  0020FE  0E00               	movlw	0
  8208  002100  6E0E               	movwf	___fladd@aexp^0,c
  8209  002102  AE10               	btfss	___fladd@grs^0,7,c
  8210  002104  EF86  F010         	goto	u3631
  8211  002108  EF88  F010         	goto	u3630
  8212  00210C                     u3631:
  8213  00210C  EFA0  F010         	goto	l757
  8214  002110                     u3630:
  8215  002110  C010  F009         	movff	___fladd@grs,??___fladd
  8216  002114  0E7F               	movlw	127
  8217  002116  1609               	andwf	??___fladd^0,f,c
  8218  002118  B4D8               	btfsc	status,2,c
  8219  00211A  EF91  F010         	goto	u3641
  8220  00211E  EF93  F010         	goto	u3640
  8221  002122                     u3641:
  8222  002122  EF97  F010         	goto	l758
  8223  002126                     u3640:
  8224  002126                     l3399:
  8225  002126  0E01               	movlw	1
  8226  002128  6E0E               	movwf	___fladd@aexp^0,c
  8227  00212A  EFA0  F010         	goto	l757
  8228  00212E                     l758:
  8229  00212E  A001               	btfss	___fladd@b^0,0,c
  8230  002130  EF9C  F010         	goto	u3651
  8231  002134  EF9E  F010         	goto	u3650
  8232  002138                     u3651:
  8233  002138  EFA0  F010         	goto	l757
  8234  00213C                     u3650:
  8235  00213C  EF93  F010         	goto	l3399
  8236  002140                     l757:
  8237  002140  500E               	movf	___fladd@aexp^0,w,c
  8238  002142  B4D8               	btfsc	status,2,c
  8239  002144  EFA6  F010         	goto	u3661
  8240  002148  EFA8  F010         	goto	u3660
  8241  00214C                     u3661:
  8242  00214C  EFD3  F010         	goto	l3411
  8243  002150                     u3660:
  8244  002150  0E01               	movlw	1
  8245  002152  2601               	addwf	___fladd@b^0,f,c
  8246  002154  0E00               	movlw	0
  8247  002156  2202               	addwfc	(___fladd@b+1)^0,f,c
  8248  002158  2203               	addwfc	(___fladd@b+2)^0,f,c
  8249  00215A  2204               	addwfc	(___fladd@b+3)^0,f,c
  8250  00215C  A004               	btfss	(___fladd@b+3)^0,0,c
  8251  00215E  EFB3  F010         	goto	u3671
  8252  002162  EFB5  F010         	goto	u3670
  8253  002166                     u3671:
  8254  002166  EFD3  F010         	goto	l3411
  8255  00216A                     u3670:
  8256  00216A  C001  F009         	movff	___fladd@b,??___fladd
  8257  00216E  C002  F00A         	movff	___fladd@b+1,??___fladd+1
  8258  002172  C003  F00B         	movff	___fladd@b+2,??___fladd+2
  8259  002176  C004  F00C         	movff	___fladd@b+3,??___fladd+3
  8260  00217A  340C               	rlcf	(??___fladd+3)^0,w,c
  8261  00217C  320C               	rrcf	(??___fladd+3)^0,f,c
  8262  00217E  320B               	rrcf	(??___fladd+2)^0,f,c
  8263  002180  320A               	rrcf	(??___fladd+1)^0,f,c
  8264  002182  3209               	rrcf	??___fladd^0,f,c
  8265  002184  C009  F001         	movff	??___fladd,___fladd@b
  8266  002188  C00A  F002         	movff	??___fladd+1,___fladd@b+1
  8267  00218C  C00B  F003         	movff	??___fladd+2,___fladd@b+2
  8268  002190  C00C  F004         	movff	??___fladd+3,___fladd@b+3
  8269  002194  280F               	incf	___fladd@bexp^0,w,c
  8270  002196  B4D8               	btfsc	status,2,c
  8271  002198  EFD0  F010         	goto	u3681
  8272  00219C  EFD2  F010         	goto	u3680
  8273  0021A0                     u3681:
  8274  0021A0  EFD3  F010         	goto	l3411
  8275  0021A4                     u3680:
  8276  0021A4  2A0F               	incf	___fladd@bexp^0,f,c
  8277  0021A6                     l3411:
  8278  0021A6  280F               	incf	___fladd@bexp^0,w,c
  8279  0021A8  B4D8               	btfsc	status,2,c
  8280  0021AA  EFD9  F010         	goto	u3691
  8281  0021AE  EFDB  F010         	goto	u3690
  8282  0021B2                     u3691:
  8283  0021B2  EFE3  F010         	goto	l3415
  8284  0021B6                     u3690:
  8285  0021B6  500F               	movf	___fladd@bexp^0,w,c
  8286  0021B8  A4D8               	btfss	status,2,c
  8287  0021BA  EFE1  F010         	goto	u3701
  8288  0021BE  EFE3  F010         	goto	u3700
  8289  0021C2                     u3701:
  8290  0021C2  EFF5  F010         	goto	l3419
  8291  0021C6                     u3700:
  8292  0021C6                     l3415:
  8293  0021C6  0E00               	movlw	0
  8294  0021C8  6E01               	movwf	___fladd@b^0,c
  8295  0021CA  0E00               	movlw	0
  8296  0021CC  6E02               	movwf	(___fladd@b+1)^0,c
  8297  0021CE  0E00               	movlw	0
  8298  0021D0  6E03               	movwf	(___fladd@b+2)^0,c
  8299  0021D2  0E00               	movlw	0
  8300  0021D4  6E04               	movwf	(___fladd@b+3)^0,c
  8301  0021D6  500F               	movf	___fladd@bexp^0,w,c
  8302  0021D8  A4D8               	btfss	status,2,c
  8303  0021DA  EFF1  F010         	goto	u3711
  8304  0021DE  EFF3  F010         	goto	u3710
  8305  0021E2                     u3711:
  8306  0021E2  EFF5  F010         	goto	l3419
  8307  0021E6                     u3710:
  8308  0021E6  0E00               	movlw	0
  8309  0021E8  6E0D               	movwf	___fladd@signs^0,c
  8310  0021EA                     l3419:
  8311  0021EA  A00F               	btfss	___fladd@bexp^0,0,c
  8312  0021EC  EFFA  F010         	goto	u3721
  8313  0021F0  EFFC  F010         	goto	u3720
  8314  0021F4                     u3721:
  8315  0021F4  EFFF  F010         	goto	l3423
  8316  0021F8                     u3720:
  8317  0021F8  8E03               	bsf	(___fladd@b+2)^0,7,c
  8318  0021FA  EF00  F011         	goto	l3425
  8319  0021FE                     l3423:
  8320  0021FE  9E03               	bcf	(___fladd@b+2)^0,7,c
  8321  002200                     l3425:
  8322  002200  90D8               	bcf	status,0,c
  8323  002202  300F               	rrcf	___fladd@bexp^0,w,c
  8324  002204  6E04               	movwf	(___fladd@b+3)^0,c
  8325  002206  AE0D               	btfss	___fladd@signs^0,7,c
  8326  002208  EF08  F011         	goto	u3731
  8327  00220C  EF0A  F011         	goto	u3730
  8328  002210                     u3731:
  8329  002210  EF0B  F011         	goto	l3431
  8330  002214                     u3730:
  8331  002214  8E04               	bsf	(___fladd@b+3)^0,7,c
  8332  002216                     l3431:
  8333  002216  C001  F001         	movff	___fladd@b,?___fladd
  8334  00221A  C002  F002         	movff	___fladd@b+1,?___fladd+1
  8335  00221E  C003  F003         	movff	___fladd@b+2,?___fladd+2
  8336  002222  C004  F004         	movff	___fladd@b+3,?___fladd+3
  8337  002226                     l740:
  8338  002226  0012               	return		;funcret
  8339  002228                     __end_of___fladd:
  8340                           	callstack 0
  8341                           
  8342 ;; *************** function ___flneg *****************
  8343 ;; Defined at:
  8344 ;;		line 15 in file "/Applications/microchip/xc8/v2.31/pic/sources/c99/common/flneg.c"
  8345 ;; Parameters:    Size  Location     Type
  8346 ;;  f1              4    0[COMRAM] unsigned char 
  8347 ;; Auto vars:     Size  Location     Type
  8348 ;;		None
  8349 ;; Return value:  Size  Location     Type
  8350 ;;                  4    0[COMRAM] unsigned char 
  8351 ;; Registers used:
  8352 ;;		wreg, status,2, status,0
  8353 ;; Tracked objects:
  8354 ;;		On entry : 0/0
  8355 ;;		On exit  : 0/0
  8356 ;;		Unchanged: 0/0
  8357 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  8358 ;;      Params:         4       0       0       0       0       0       0       0       0
  8359 ;;      Locals:         0       0       0       0       0       0       0       0       0
  8360 ;;      Temps:          0       0       0       0       0       0       0       0       0
  8361 ;;      Totals:         4       0       0       0       0       0       0       0       0
  8362 ;;Total ram usage:        4 bytes
  8363 ;; Hardware stack levels used:    1
  8364 ;; This function calls:
  8365 ;;		Nothing
  8366 ;; This function is called by:
  8367 ;;		_efgtoa
  8368 ;; This function uses a non-reentrant model
  8369 ;;
  8370                           
  8371                           	psect	text30
  8372  004BDC                     __ptext30:
  8373                           	callstack 0
  8374  004BDC                     ___flneg:
  8375                           	callstack 25
  8376  004BDC  5001               	movf	___flneg@f1^0,w,c
  8377  004BDE  1002               	iorwf	(___flneg@f1+1)^0,w,c
  8378  004BE0  1003               	iorwf	(___flneg@f1+2)^0,w,c
  8379  004BE2  1004               	iorwf	(___flneg@f1+3)^0,w,c
  8380  004BE4  B4D8               	btfsc	status,2,c
  8381  004BE6  EFF7  F025         	goto	u4531
  8382  004BEA  EFF9  F025         	goto	u4530
  8383  004BEE                     u4531:
  8384  004BEE  EF01  F026         	goto	l3939
  8385  004BF2                     u4530:
  8386  004BF2  0E00               	movlw	0
  8387  004BF4  1A01               	xorwf	___flneg@f1^0,f,c
  8388  004BF6  0E00               	movlw	0
  8389  004BF8  1A02               	xorwf	(___flneg@f1+1)^0,f,c
  8390  004BFA  0E00               	movlw	0
  8391  004BFC  1A03               	xorwf	(___flneg@f1+2)^0,f,c
  8392  004BFE  0E80               	movlw	128
  8393  004C00  1A04               	xorwf	(___flneg@f1+3)^0,f,c
  8394  004C02                     l3939:
  8395  004C02  C001  F001         	movff	___flneg@f1,?___flneg
  8396  004C06  C002  F002         	movff	___flneg@f1+1,?___flneg+1
  8397  004C0A  C003  F003         	movff	___flneg@f1+2,?___flneg+2
  8398  004C0E  C004  F004         	movff	___flneg@f1+3,?___flneg+3
  8399  004C12  0012               	return		;funcret
  8400  004C14                     __end_of___flneg:
  8401                           	callstack 0
  8402                           
  8403 ;; *************** function ___flmul *****************
  8404 ;; Defined at:
  8405 ;;		line 8 in file "/Applications/microchip/xc8/v2.31/pic/sources/c99/common/sprcmul.c"
  8406 ;; Parameters:    Size  Location     Type
  8407 ;;  b               4   14[COMRAM] unsigned char 
  8408 ;;  a               4   18[COMRAM] unsigned char 
  8409 ;; Auto vars:     Size  Location     Type
  8410 ;;  prod            4   33[COMRAM] struct .
  8411 ;;  grs             4   27[COMRAM] unsigned long 
  8412 ;;  temp            2   37[COMRAM] struct .
  8413 ;;  bexp            1   32[COMRAM] unsigned char 
  8414 ;;  aexp            1   31[COMRAM] unsigned char 
  8415 ;;  sign            1   26[COMRAM] unsigned char 
  8416 ;; Return value:  Size  Location     Type
  8417 ;;                  4   14[COMRAM] unsigned char 
  8418 ;; Registers used:
  8419 ;;		wreg, status,2, status,0, prodl, prodh
  8420 ;; Tracked objects:
  8421 ;;		On entry : 0/0
  8422 ;;		On exit  : 0/0
  8423 ;;		Unchanged: 0/0
  8424 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  8425 ;;      Params:         8       0       0       0       0       0       0       0       0
  8426 ;;      Locals:        13       0       0       0       0       0       0       0       0
  8427 ;;      Temps:          4       0       0       0       0       0       0       0       0
  8428 ;;      Totals:        25       0       0       0       0       0       0       0       0
  8429 ;;Total ram usage:       25 bytes
  8430 ;; Hardware stack levels used:    1
  8431 ;; This function calls:
  8432 ;;		Nothing
  8433 ;; This function is called by:
  8434 ;;		_SensorLM35
  8435 ;;		_efgtoa
  8436 ;; This function uses a non-reentrant model
  8437 ;;
  8438                           
  8439                           	psect	text31
  8440  002228                     __ptext31:
  8441                           	callstack 0
  8442  002228                     ___flmul:
  8443                           	callstack 25
  8444  002228  5012               	movf	(___flmul@b+3)^0,w,c
  8445  00222A  0B80               	andlw	128
  8446  00222C  6E1B               	movwf	___flmul@sign^0,c
  8447  00222E  5012               	movf	(___flmul@b+3)^0,w,c
  8448  002230  2412               	addwf	(___flmul@b+3)^0,w,c
  8449  002232  6E21               	movwf	___flmul@bexp^0,c
  8450  002234  AE11               	btfss	(___flmul@b+2)^0,7,c
  8451  002236  EF1F  F011         	goto	u4141
  8452  00223A  EF21  F011         	goto	u4140
  8453  00223E                     u4141:
  8454  00223E  EF22  F011         	goto	l3687
  8455  002242                     u4140:
  8456  002242  8021               	bsf	___flmul@bexp^0,0,c
  8457  002244                     l3687:
  8458  002244  5021               	movf	___flmul@bexp^0,w,c
  8459  002246  B4D8               	btfsc	status,2,c
  8460  002248  EF28  F011         	goto	u4151
  8461  00224C  EF2A  F011         	goto	u4150
  8462  002250                     u4151:
  8463  002250  EF3D  F011         	goto	l3695
  8464  002254                     u4150:
  8465  002254  2821               	incf	___flmul@bexp^0,w,c
  8466  002256  A4D8               	btfss	status,2,c
  8467  002258  EF30  F011         	goto	u4161
  8468  00225C  EF32  F011         	goto	u4160
  8469  002260                     u4161:
  8470  002260  EF3A  F011         	goto	l3693
  8471  002264                     u4160:
  8472  002264  0E00               	movlw	0
  8473  002266  6E0F               	movwf	___flmul@b^0,c
  8474  002268  0E00               	movlw	0
  8475  00226A  6E10               	movwf	(___flmul@b+1)^0,c
  8476  00226C  0E00               	movlw	0
  8477  00226E  6E11               	movwf	(___flmul@b+2)^0,c
  8478  002270  0E00               	movlw	0
  8479  002272  6E12               	movwf	(___flmul@b+3)^0,c
  8480  002274                     l3693:
  8481  002274  8E11               	bsf	(___flmul@b+2)^0,7,c
  8482  002276  EF45  F011         	goto	l3697
  8483  00227A                     l3695:
  8484  00227A  0E00               	movlw	0
  8485  00227C  6E0F               	movwf	___flmul@b^0,c
  8486  00227E  0E00               	movlw	0
  8487  002280  6E10               	movwf	(___flmul@b+1)^0,c
  8488  002282  0E00               	movlw	0
  8489  002284  6E11               	movwf	(___flmul@b+2)^0,c
  8490  002286  0E00               	movlw	0
  8491  002288  6E12               	movwf	(___flmul@b+3)^0,c
  8492  00228A                     l3697:
  8493  00228A  5016               	movf	(___flmul@a+3)^0,w,c
  8494  00228C  0B80               	andlw	128
  8495  00228E  1A1B               	xorwf	___flmul@sign^0,f,c
  8496  002290  5016               	movf	(___flmul@a+3)^0,w,c
  8497  002292  2416               	addwf	(___flmul@a+3)^0,w,c
  8498  002294  6E20               	movwf	___flmul@aexp^0,c
  8499  002296  AE15               	btfss	(___flmul@a+2)^0,7,c
  8500  002298  EF50  F011         	goto	u4171
  8501  00229C  EF52  F011         	goto	u4170
  8502  0022A0                     u4171:
  8503  0022A0  EF53  F011         	goto	l3705
  8504  0022A4                     u4170:
  8505  0022A4  8020               	bsf	___flmul@aexp^0,0,c
  8506  0022A6                     l3705:
  8507  0022A6  5020               	movf	___flmul@aexp^0,w,c
  8508  0022A8  B4D8               	btfsc	status,2,c
  8509  0022AA  EF59  F011         	goto	u4181
  8510  0022AE  EF5B  F011         	goto	u4180
  8511  0022B2                     u4181:
  8512  0022B2  EF6E  F011         	goto	l3713
  8513  0022B6                     u4180:
  8514  0022B6  2820               	incf	___flmul@aexp^0,w,c
  8515  0022B8  A4D8               	btfss	status,2,c
  8516  0022BA  EF61  F011         	goto	u4191
  8517  0022BE  EF63  F011         	goto	u4190
  8518  0022C2                     u4191:
  8519  0022C2  EF6B  F011         	goto	l3711
  8520  0022C6                     u4190:
  8521  0022C6  0E00               	movlw	0
  8522  0022C8  6E13               	movwf	___flmul@a^0,c
  8523  0022CA  0E00               	movlw	0
  8524  0022CC  6E14               	movwf	(___flmul@a+1)^0,c
  8525  0022CE  0E00               	movlw	0
  8526  0022D0  6E15               	movwf	(___flmul@a+2)^0,c
  8527  0022D2  0E00               	movlw	0
  8528  0022D4  6E16               	movwf	(___flmul@a+3)^0,c
  8529  0022D6                     l3711:
  8530  0022D6  8E15               	bsf	(___flmul@a+2)^0,7,c
  8531  0022D8  EF76  F011         	goto	l817
  8532  0022DC                     l3713:
  8533  0022DC  0E00               	movlw	0
  8534  0022DE  6E13               	movwf	___flmul@a^0,c
  8535  0022E0  0E00               	movlw	0
  8536  0022E2  6E14               	movwf	(___flmul@a+1)^0,c
  8537  0022E4  0E00               	movlw	0
  8538  0022E6  6E15               	movwf	(___flmul@a+2)^0,c
  8539  0022E8  0E00               	movlw	0
  8540  0022EA  6E16               	movwf	(___flmul@a+3)^0,c
  8541  0022EC                     l817:
  8542  0022EC  5020               	movf	___flmul@aexp^0,w,c
  8543  0022EE  B4D8               	btfsc	status,2,c
  8544  0022F0  EF7C  F011         	goto	u4201
  8545  0022F4  EF7E  F011         	goto	u4200
  8546  0022F8                     u4201:
  8547  0022F8  EF86  F011         	goto	l3717
  8548  0022FC                     u4200:
  8549  0022FC  5021               	movf	___flmul@bexp^0,w,c
  8550  0022FE  A4D8               	btfss	status,2,c
  8551  002300  EF84  F011         	goto	u4211
  8552  002304  EF86  F011         	goto	u4210
  8553  002308                     u4211:
  8554  002308  EF90  F011         	goto	l3721
  8555  00230C                     u4210:
  8556  00230C                     l3717:
  8557  00230C  0E00               	movlw	0
  8558  00230E  6E0F               	movwf	?___flmul^0,c
  8559  002310  0E00               	movlw	0
  8560  002312  6E10               	movwf	(?___flmul+1)^0,c
  8561  002314  0E00               	movlw	0
  8562  002316  6E11               	movwf	(?___flmul+2)^0,c
  8563  002318  0E00               	movlw	0
  8564  00231A  6E12               	movwf	(?___flmul+3)^0,c
  8565  00231C  EF28  F013         	goto	l821
  8566  002320                     l3721:
  8567  002320  5015               	movf	(___flmul@a+2)^0,w,c
  8568  002322  020F               	mulwf	___flmul@b^0,c
  8569  002324  CFF3 F026          	movff	prodl,___flmul@temp
  8570  002328  CFF4 F027          	movff	prodh,___flmul@temp+1
  8571  00232C  5026               	movf	___flmul@temp^0,w,c
  8572  00232E  6E1C               	movwf	___flmul@grs^0,c
  8573  002330  6A1D               	clrf	(___flmul@grs+1)^0,c
  8574  002332  6A1E               	clrf	(___flmul@grs+2)^0,c
  8575  002334  6A1F               	clrf	(___flmul@grs+3)^0,c
  8576  002336  5027               	movf	(___flmul@temp+1)^0,w,c
  8577  002338  6E22               	movwf	___flmul@prod^0,c
  8578  00233A  6A23               	clrf	(___flmul@prod+1)^0,c
  8579  00233C  6A24               	clrf	(___flmul@prod+2)^0,c
  8580  00233E  6A25               	clrf	(___flmul@prod+3)^0,c
  8581  002340  5014               	movf	(___flmul@a+1)^0,w,c
  8582  002342  0210               	mulwf	(___flmul@b+1)^0,c
  8583  002344  CFF3 F026          	movff	prodl,___flmul@temp
  8584  002348  CFF4 F027          	movff	prodh,___flmul@temp+1
  8585  00234C  5026               	movf	___flmul@temp^0,w,c
  8586  00234E  261C               	addwf	___flmul@grs^0,f,c
  8587  002350  0E00               	movlw	0
  8588  002352  221D               	addwfc	(___flmul@grs+1)^0,f,c
  8589  002354  221E               	addwfc	(___flmul@grs+2)^0,f,c
  8590  002356  221F               	addwfc	(___flmul@grs+3)^0,f,c
  8591  002358  5027               	movf	(___flmul@temp+1)^0,w,c
  8592  00235A  2622               	addwf	___flmul@prod^0,f,c
  8593  00235C  0E00               	movlw	0
  8594  00235E  2223               	addwfc	(___flmul@prod+1)^0,f,c
  8595  002360  2224               	addwfc	(___flmul@prod+2)^0,f,c
  8596  002362  2225               	addwfc	(___flmul@prod+3)^0,f,c
  8597  002364  5013               	movf	___flmul@a^0,w,c
  8598  002366  0211               	mulwf	(___flmul@b+2)^0,c
  8599  002368  CFF3 F026          	movff	prodl,___flmul@temp
  8600  00236C  CFF4 F027          	movff	prodh,___flmul@temp+1
  8601  002370  5026               	movf	___flmul@temp^0,w,c
  8602  002372  261C               	addwf	___flmul@grs^0,f,c
  8603  002374  0E00               	movlw	0
  8604  002376  221D               	addwfc	(___flmul@grs+1)^0,f,c
  8605  002378  221E               	addwfc	(___flmul@grs+2)^0,f,c
  8606  00237A  221F               	addwfc	(___flmul@grs+3)^0,f,c
  8607  00237C  5027               	movf	(___flmul@temp+1)^0,w,c
  8608  00237E  2622               	addwf	___flmul@prod^0,f,c
  8609  002380  0E00               	movlw	0
  8610  002382  2223               	addwfc	(___flmul@prod+1)^0,f,c
  8611  002384  2224               	addwfc	(___flmul@prod+2)^0,f,c
  8612  002386  2225               	addwfc	(___flmul@prod+3)^0,f,c
  8613  002388  C01E  F01F         	movff	___flmul@grs+2,___flmul@grs+3
  8614  00238C  C01D  F01E         	movff	___flmul@grs+1,___flmul@grs+2
  8615  002390  C01C  F01D         	movff	___flmul@grs,___flmul@grs+1
  8616  002394  6A1C               	clrf	___flmul@grs^0,c
  8617  002396  5013               	movf	___flmul@a^0,w,c
  8618  002398  0210               	mulwf	(___flmul@b+1)^0,c
  8619  00239A  CFF3 F026          	movff	prodl,___flmul@temp
  8620  00239E  CFF4 F027          	movff	prodh,___flmul@temp+1
  8621  0023A2  5026               	movf	___flmul@temp^0,w,c
  8622  0023A4  261C               	addwf	___flmul@grs^0,f,c
  8623  0023A6  5027               	movf	(___flmul@temp+1)^0,w,c
  8624  0023A8  221D               	addwfc	(___flmul@grs+1)^0,f,c
  8625  0023AA  0E00               	movlw	0
  8626  0023AC  221E               	addwfc	(___flmul@grs+2)^0,f,c
  8627  0023AE  0E00               	movlw	0
  8628  0023B0  221F               	addwfc	(___flmul@grs+3)^0,f,c
  8629  0023B2  5014               	movf	(___flmul@a+1)^0,w,c
  8630  0023B4  020F               	mulwf	___flmul@b^0,c
  8631  0023B6  CFF3 F026          	movff	prodl,___flmul@temp
  8632  0023BA  CFF4 F027          	movff	prodh,___flmul@temp+1
  8633  0023BE  5026               	movf	___flmul@temp^0,w,c
  8634  0023C0  261C               	addwf	___flmul@grs^0,f,c
  8635  0023C2  5027               	movf	(___flmul@temp+1)^0,w,c
  8636  0023C4  221D               	addwfc	(___flmul@grs+1)^0,f,c
  8637  0023C6  0E00               	movlw	0
  8638  0023C8  221E               	addwfc	(___flmul@grs+2)^0,f,c
  8639  0023CA  0E00               	movlw	0
  8640  0023CC  221F               	addwfc	(___flmul@grs+3)^0,f,c
  8641  0023CE  C01E  F01F         	movff	___flmul@grs+2,___flmul@grs+3
  8642  0023D2  C01D  F01E         	movff	___flmul@grs+1,___flmul@grs+2
  8643  0023D6  C01C  F01D         	movff	___flmul@grs,___flmul@grs+1
  8644  0023DA  6A1C               	clrf	___flmul@grs^0,c
  8645  0023DC  5013               	movf	___flmul@a^0,w,c
  8646  0023DE  020F               	mulwf	___flmul@b^0,c
  8647  0023E0  CFF3 F026          	movff	prodl,___flmul@temp
  8648  0023E4  CFF4 F027          	movff	prodh,___flmul@temp+1
  8649  0023E8  5026               	movf	___flmul@temp^0,w,c
  8650  0023EA  261C               	addwf	___flmul@grs^0,f,c
  8651  0023EC  5027               	movf	(___flmul@temp+1)^0,w,c
  8652  0023EE  221D               	addwfc	(___flmul@grs+1)^0,f,c
  8653  0023F0  0E00               	movlw	0
  8654  0023F2  221E               	addwfc	(___flmul@grs+2)^0,f,c
  8655  0023F4  0E00               	movlw	0
  8656  0023F6  221F               	addwfc	(___flmul@grs+3)^0,f,c
  8657  0023F8  5015               	movf	(___flmul@a+2)^0,w,c
  8658  0023FA  0210               	mulwf	(___flmul@b+1)^0,c
  8659  0023FC  CFF3 F026          	movff	prodl,___flmul@temp
  8660  002400  CFF4 F027          	movff	prodh,___flmul@temp+1
  8661  002404  5026               	movf	___flmul@temp^0,w,c
  8662  002406  2622               	addwf	___flmul@prod^0,f,c
  8663  002408  5027               	movf	(___flmul@temp+1)^0,w,c
  8664  00240A  2223               	addwfc	(___flmul@prod+1)^0,f,c
  8665  00240C  0E00               	movlw	0
  8666  00240E  2224               	addwfc	(___flmul@prod+2)^0,f,c
  8667  002410  0E00               	movlw	0
  8668  002412  2225               	addwfc	(___flmul@prod+3)^0,f,c
  8669  002414  5014               	movf	(___flmul@a+1)^0,w,c
  8670  002416  0211               	mulwf	(___flmul@b+2)^0,c
  8671  002418  CFF3 F026          	movff	prodl,___flmul@temp
  8672  00241C  CFF4 F027          	movff	prodh,___flmul@temp+1
  8673  002420  5026               	movf	___flmul@temp^0,w,c
  8674  002422  2622               	addwf	___flmul@prod^0,f,c
  8675  002424  5027               	movf	(___flmul@temp+1)^0,w,c
  8676  002426  2223               	addwfc	(___flmul@prod+1)^0,f,c
  8677  002428  0E00               	movlw	0
  8678  00242A  2224               	addwfc	(___flmul@prod+2)^0,f,c
  8679  00242C  0E00               	movlw	0
  8680  00242E  2225               	addwfc	(___flmul@prod+3)^0,f,c
  8681  002430  5015               	movf	(___flmul@a+2)^0,w,c
  8682  002432  0211               	mulwf	(___flmul@b+2)^0,c
  8683  002434  CFF3 F026          	movff	prodl,___flmul@temp
  8684  002438  CFF4 F027          	movff	prodh,___flmul@temp+1
  8685  00243C  5026               	movf	___flmul@temp^0,w,c
  8686  00243E  6E17               	movwf	??___flmul^0,c
  8687  002440  5027               	movf	(___flmul@temp+1)^0,w,c
  8688  002442  6E18               	movwf	(??___flmul+1)^0,c
  8689  002444  6A19               	clrf	(??___flmul+2)^0,c
  8690  002446  6A1A               	clrf	(??___flmul+3)^0,c
  8691  002448  C019  F01A         	movff	??___flmul+2,??___flmul+3
  8692  00244C  C018  F019         	movff	??___flmul+1,??___flmul+2
  8693  002450  C017  F018         	movff	??___flmul,??___flmul+1
  8694  002454  6A17               	clrf	??___flmul^0,c
  8695  002456  5017               	movf	??___flmul^0,w,c
  8696  002458  2622               	addwf	___flmul@prod^0,f,c
  8697  00245A  5018               	movf	(??___flmul+1)^0,w,c
  8698  00245C  2223               	addwfc	(___flmul@prod+1)^0,f,c
  8699  00245E  5019               	movf	(??___flmul+2)^0,w,c
  8700  002460  2224               	addwfc	(___flmul@prod+2)^0,f,c
  8701  002462  501A               	movf	(??___flmul+3)^0,w,c
  8702  002464  2225               	addwfc	(___flmul@prod+3)^0,f,c
  8703  002466  C01C  F017         	movff	___flmul@grs,??___flmul
  8704  00246A  C01D  F018         	movff	___flmul@grs+1,??___flmul+1
  8705  00246E  C01E  F019         	movff	___flmul@grs+2,??___flmul+2
  8706  002472  C01F  F01A         	movff	___flmul@grs+3,??___flmul+3
  8707  002476  0E19               	movlw	25
  8708  002478  EF43  F012         	goto	u4220
  8709  00247C                     u4225:
  8710  00247C  90D8               	bcf	status,0,c
  8711  00247E  321A               	rrcf	(??___flmul+3)^0,f,c
  8712  002480  3219               	rrcf	(??___flmul+2)^0,f,c
  8713  002482  3218               	rrcf	(??___flmul+1)^0,f,c
  8714  002484  3217               	rrcf	??___flmul^0,f,c
  8715  002486                     u4220:
  8716  002486  2EE8               	decfsz	wreg,f,c
  8717  002488  EF3E  F012         	goto	u4225
  8718  00248C  5017               	movf	??___flmul^0,w,c
  8719  00248E  2622               	addwf	___flmul@prod^0,f,c
  8720  002490  5018               	movf	(??___flmul+1)^0,w,c
  8721  002492  2223               	addwfc	(___flmul@prod+1)^0,f,c
  8722  002494  5019               	movf	(??___flmul+2)^0,w,c
  8723  002496  2224               	addwfc	(___flmul@prod+2)^0,f,c
  8724  002498  501A               	movf	(??___flmul+3)^0,w,c
  8725  00249A  2225               	addwfc	(___flmul@prod+3)^0,f,c
  8726  00249C  C01E  F01F         	movff	___flmul@grs+2,___flmul@grs+3
  8727  0024A0  C01D  F01E         	movff	___flmul@grs+1,___flmul@grs+2
  8728  0024A4  C01C  F01D         	movff	___flmul@grs,___flmul@grs+1
  8729  0024A8  6A1C               	clrf	___flmul@grs^0,c
  8730  0024AA  5020               	movf	___flmul@aexp^0,w,c
  8731  0024AC  C021  F017         	movff	___flmul@bexp,??___flmul
  8732  0024B0  6A18               	clrf	(??___flmul+1)^0,c
  8733  0024B2  2617               	addwf	??___flmul^0,f,c
  8734  0024B4  0E00               	movlw	0
  8735  0024B6  2218               	addwfc	(??___flmul+1)^0,f,c
  8736  0024B8  0E82               	movlw	130
  8737  0024BA  2417               	addwf	??___flmul^0,w,c
  8738  0024BC  6E26               	movwf	___flmul@temp^0,c
  8739  0024BE  0EFF               	movlw	255
  8740  0024C0  2018               	addwfc	(??___flmul+1)^0,w,c
  8741  0024C2  6E27               	movwf	(___flmul@temp+1)^0,c
  8742  0024C4  EF79  F012         	goto	l3769
  8743  0024C8                     l3763:
  8744  0024C8  90D8               	bcf	status,0,c
  8745  0024CA  3622               	rlcf	___flmul@prod^0,f,c
  8746  0024CC  3623               	rlcf	(___flmul@prod+1)^0,f,c
  8747  0024CE  3624               	rlcf	(___flmul@prod+2)^0,f,c
  8748  0024D0  3625               	rlcf	(___flmul@prod+3)^0,f,c
  8749  0024D2  AE1F               	btfss	(___flmul@grs+3)^0,7,c
  8750  0024D4  EF6E  F012         	goto	u4231
  8751  0024D8  EF70  F012         	goto	u4230
  8752  0024DC                     u4231:
  8753  0024DC  EF71  F012         	goto	l824
  8754  0024E0                     u4230:
  8755  0024E0  8022               	bsf	___flmul@prod^0,0,c
  8756  0024E2                     l824:
  8757  0024E2  90D8               	bcf	status,0,c
  8758  0024E4  361C               	rlcf	___flmul@grs^0,f,c
  8759  0024E6  361D               	rlcf	(___flmul@grs+1)^0,f,c
  8760  0024E8  361E               	rlcf	(___flmul@grs+2)^0,f,c
  8761  0024EA  361F               	rlcf	(___flmul@grs+3)^0,f,c
  8762  0024EC  0626               	decf	___flmul@temp^0,f,c
  8763  0024EE  A0D8               	btfss	status,0,c
  8764  0024F0  0627               	decf	(___flmul@temp+1)^0,f,c
  8765  0024F2                     l3769:
  8766  0024F2  AE24               	btfss	(___flmul@prod+2)^0,7,c
  8767  0024F4  EF7E  F012         	goto	u4241
  8768  0024F8  EF80  F012         	goto	u4240
  8769  0024FC                     u4241:
  8770  0024FC  EF64  F012         	goto	l3763
  8771  002500                     u4240:
  8772  002500  0E00               	movlw	0
  8773  002502  6E20               	movwf	___flmul@aexp^0,c
  8774  002504  AE1F               	btfss	(___flmul@grs+3)^0,7,c
  8775  002506  EF87  F012         	goto	u4251
  8776  00250A  EF89  F012         	goto	u4250
  8777  00250E                     u4251:
  8778  00250E  EFAD  F012         	goto	l826
  8779  002512                     u4250:
  8780  002512  0EFF               	movlw	255
  8781  002514  141C               	andwf	___flmul@grs^0,w,c
  8782  002516  6E17               	movwf	??___flmul^0,c
  8783  002518  0EFF               	movlw	255
  8784  00251A  141D               	andwf	(___flmul@grs+1)^0,w,c
  8785  00251C  6E18               	movwf	(??___flmul+1)^0,c
  8786  00251E  0EFF               	movlw	255
  8787  002520  141E               	andwf	(___flmul@grs+2)^0,w,c
  8788  002522  6E19               	movwf	(??___flmul+2)^0,c
  8789  002524  0E7F               	movlw	127
  8790  002526  141F               	andwf	(___flmul@grs+3)^0,w,c
  8791  002528  6E1A               	movwf	(??___flmul+3)^0,c
  8792  00252A  5017               	movf	??___flmul^0,w,c
  8793  00252C  1018               	iorwf	(??___flmul+1)^0,w,c
  8794  00252E  1019               	iorwf	(??___flmul+2)^0,w,c
  8795  002530  101A               	iorwf	(??___flmul+3)^0,w,c
  8796  002532  B4D8               	btfsc	status,2,c
  8797  002534  EF9E  F012         	goto	u4261
  8798  002538  EFA0  F012         	goto	u4260
  8799  00253C                     u4261:
  8800  00253C  EFA4  F012         	goto	l827
  8801  002540                     u4260:
  8802  002540                     l3777:
  8803  002540  0E01               	movlw	1
  8804  002542  6E20               	movwf	___flmul@aexp^0,c
  8805  002544  EFAD  F012         	goto	l826
  8806  002548                     l827:
  8807  002548  A022               	btfss	___flmul@prod^0,0,c
  8808  00254A  EFA9  F012         	goto	u4271
  8809  00254E  EFAB  F012         	goto	u4270
  8810  002552                     u4271:
  8811  002552  EFAD  F012         	goto	l826
  8812  002556                     u4270:
  8813  002556  EFA0  F012         	goto	l3777
  8814  00255A                     l826:
  8815  00255A  5020               	movf	___flmul@aexp^0,w,c
  8816  00255C  B4D8               	btfsc	status,2,c
  8817  00255E  EFB3  F012         	goto	u4281
  8818  002562  EFB5  F012         	goto	u4280
  8819  002566                     u4281:
  8820  002566  EFD9  F012         	goto	l3789
  8821  00256A                     u4280:
  8822  00256A  0E01               	movlw	1
  8823  00256C  2622               	addwf	___flmul@prod^0,f,c
  8824  00256E  0E00               	movlw	0
  8825  002570  2223               	addwfc	(___flmul@prod+1)^0,f,c
  8826  002572  2224               	addwfc	(___flmul@prod+2)^0,f,c
  8827  002574  2225               	addwfc	(___flmul@prod+3)^0,f,c
  8828  002576  A025               	btfss	(___flmul@prod+3)^0,0,c
  8829  002578  EFC0  F012         	goto	u4291
  8830  00257C  EFC2  F012         	goto	u4290
  8831  002580                     u4291:
  8832  002580  EFD9  F012         	goto	l3789
  8833  002584                     u4290:
  8834  002584  C022  F017         	movff	___flmul@prod,??___flmul
  8835  002588  C023  F018         	movff	___flmul@prod+1,??___flmul+1
  8836  00258C  C024  F019         	movff	___flmul@prod+2,??___flmul+2
  8837  002590  C025  F01A         	movff	___flmul@prod+3,??___flmul+3
  8838  002594  341A               	rlcf	(??___flmul+3)^0,w,c
  8839  002596  321A               	rrcf	(??___flmul+3)^0,f,c
  8840  002598  3219               	rrcf	(??___flmul+2)^0,f,c
  8841  00259A  3218               	rrcf	(??___flmul+1)^0,f,c
  8842  00259C  3217               	rrcf	??___flmul^0,f,c
  8843  00259E  C017  F022         	movff	??___flmul,___flmul@prod
  8844  0025A2  C018  F023         	movff	??___flmul+1,___flmul@prod+1
  8845  0025A6  C019  F024         	movff	??___flmul+2,___flmul@prod+2
  8846  0025AA  C01A  F025         	movff	??___flmul+3,___flmul@prod+3
  8847  0025AE  4A26               	infsnz	___flmul@temp^0,f,c
  8848  0025B0  2A27               	incf	(___flmul@temp+1)^0,f,c
  8849  0025B2                     l3789:
  8850  0025B2  BE27               	btfsc	(___flmul@temp+1)^0,7,c
  8851  0025B4  EFE4  F012         	goto	u4301
  8852  0025B8  5027               	movf	(___flmul@temp+1)^0,w,c
  8853  0025BA  E108               	bnz	u4300
  8854  0025BC  2826               	incf	___flmul@temp^0,w,c
  8855  0025BE  A0D8               	btfss	status,0,c
  8856  0025C0  EFE4  F012         	goto	u4301
  8857  0025C4  EFE6  F012         	goto	u4300
  8858  0025C8                     u4301:
  8859  0025C8  EFF0  F012         	goto	l3793
  8860  0025CC                     u4300:
  8861  0025CC  0E00               	movlw	0
  8862  0025CE  6E22               	movwf	___flmul@prod^0,c
  8863  0025D0  0E00               	movlw	0
  8864  0025D2  6E23               	movwf	(___flmul@prod+1)^0,c
  8865  0025D4  0E80               	movlw	128
  8866  0025D6  6E24               	movwf	(___flmul@prod+2)^0,c
  8867  0025D8  0E7F               	movlw	127
  8868  0025DA  6E25               	movwf	(___flmul@prod+3)^0,c
  8869  0025DC  EF1E  F013         	goto	l3805
  8870  0025E0                     l3793:
  8871  0025E0  BE27               	btfsc	(___flmul@temp+1)^0,7,c
  8872  0025E2  EFFD  F012         	goto	u4310
  8873  0025E6  5027               	movf	(___flmul@temp+1)^0,w,c
  8874  0025E8  E106               	bnz	u4311
  8875  0025EA  0426               	decf	___flmul@temp^0,w,c
  8876  0025EC  B0D8               	btfsc	status,0,c
  8877  0025EE  EFFB  F012         	goto	u4311
  8878  0025F2  EFFD  F012         	goto	u4310
  8879  0025F6                     u4311:
  8880  0025F6  EF09  F013         	goto	l834
  8881  0025FA                     u4310:
  8882  0025FA  0E00               	movlw	0
  8883  0025FC  6E22               	movwf	___flmul@prod^0,c
  8884  0025FE  0E00               	movlw	0
  8885  002600  6E23               	movwf	(___flmul@prod+1)^0,c
  8886  002602  0E00               	movlw	0
  8887  002604  6E24               	movwf	(___flmul@prod+2)^0,c
  8888  002606  0E00               	movlw	0
  8889  002608  6E25               	movwf	(___flmul@prod+3)^0,c
  8890  00260A  0E00               	movlw	0
  8891  00260C  6E1B               	movwf	___flmul@sign^0,c
  8892  00260E  EF1E  F013         	goto	l3805
  8893  002612                     l834:
  8894  002612  C026  F021         	movff	___flmul@temp,___flmul@bexp
  8895  002616  0EFF               	movlw	255
  8896  002618  1622               	andwf	___flmul@prod^0,f,c
  8897  00261A  0EFF               	movlw	255
  8898  00261C  1623               	andwf	(___flmul@prod+1)^0,f,c
  8899  00261E  0E7F               	movlw	127
  8900  002620  1624               	andwf	(___flmul@prod+2)^0,f,c
  8901  002622  0E00               	movlw	0
  8902  002624  1625               	andwf	(___flmul@prod+3)^0,f,c
  8903  002626  A021               	btfss	___flmul@bexp^0,0,c
  8904  002628  EF18  F013         	goto	u4321
  8905  00262C  EF1A  F013         	goto	u4320
  8906  002630                     u4321:
  8907  002630  EF1B  F013         	goto	l3803
  8908  002634                     u4320:
  8909  002634  8E24               	bsf	(___flmul@prod+2)^0,7,c
  8910  002636                     l3803:
  8911  002636  90D8               	bcf	status,0,c
  8912  002638  3021               	rrcf	___flmul@bexp^0,w,c
  8913  00263A  6E25               	movwf	(___flmul@prod+3)^0,c
  8914  00263C                     l3805:
  8915  00263C  501B               	movf	___flmul@sign^0,w,c
  8916  00263E  1225               	iorwf	(___flmul@prod+3)^0,f,c
  8917  002640  C022  F00F         	movff	___flmul@prod,?___flmul
  8918  002644  C023  F010         	movff	___flmul@prod+1,?___flmul+1
  8919  002648  C024  F011         	movff	___flmul@prod+2,?___flmul+2
  8920  00264C  C025  F012         	movff	___flmul@prod+3,?___flmul+3
  8921  002650                     l821:
  8922  002650  0012               	return		;funcret
  8923  002652                     __end_of___flmul:
  8924                           	callstack 0
  8925                           
  8926 ;; *************** function ___flge *****************
  8927 ;; Defined at:
  8928 ;;		line 4 in file "/Applications/microchip/xc8/v2.31/pic/sources/c99/common/flge.c"
  8929 ;; Parameters:    Size  Location     Type
  8930 ;;  ff1             4   39[COMRAM] unsigned char 
  8931 ;;  ff2             4   43[COMRAM] unsigned char 
  8932 ;; Auto vars:     Size  Location     Type
  8933 ;;		None
  8934 ;; Return value:  Size  Location     Type
  8935 ;;		None               void
  8936 ;; Registers used:
  8937 ;;		wreg, status,2, status,0
  8938 ;; Tracked objects:
  8939 ;;		On entry : 0/0
  8940 ;;		On exit  : 0/0
  8941 ;;		Unchanged: 0/0
  8942 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  8943 ;;      Params:         8       0       0       0       0       0       0       0       0
  8944 ;;      Locals:         0       0       0       0       0       0       0       0       0
  8945 ;;      Temps:          4       0       0       0       0       0       0       0       0
  8946 ;;      Totals:        12       0       0       0       0       0       0       0       0
  8947 ;;Total ram usage:       12 bytes
  8948 ;; Hardware stack levels used:    1
  8949 ;; This function calls:
  8950 ;;		Nothing
  8951 ;; This function is called by:
  8952 ;;		_SensorLM35
  8953 ;;		_efgtoa
  8954 ;; This function uses a non-reentrant model
  8955 ;;
  8956                           
  8957                           	psect	text32
  8958  003E80                     __ptext32:
  8959                           	callstack 0
  8960  003E80                     ___flge:
  8961                           	callstack 25
  8962  003E80  0E00               	movlw	0
  8963  003E82  1428               	andwf	___flge@ff1^0,w,c
  8964  003E84  6E30               	movwf	??___flge^0,c
  8965  003E86  0E00               	movlw	0
  8966  003E88  1429               	andwf	(___flge@ff1+1)^0,w,c
  8967  003E8A  6E31               	movwf	(??___flge+1)^0,c
  8968  003E8C  0E80               	movlw	128
  8969  003E8E  142A               	andwf	(___flge@ff1+2)^0,w,c
  8970  003E90  6E32               	movwf	(??___flge+2)^0,c
  8971  003E92  0E7F               	movlw	127
  8972  003E94  142B               	andwf	(___flge@ff1+3)^0,w,c
  8973  003E96  6E33               	movwf	(??___flge+3)^0,c
  8974  003E98  5030               	movf	??___flge^0,w,c
  8975  003E9A  1031               	iorwf	(??___flge+1)^0,w,c
  8976  003E9C  1032               	iorwf	(??___flge+2)^0,w,c
  8977  003E9E  1033               	iorwf	(??___flge+3)^0,w,c
  8978  003EA0  A4D8               	btfss	status,2,c
  8979  003EA2  EF55  F01F         	goto	u4481
  8980  003EA6  EF57  F01F         	goto	u4480
  8981  003EAA                     u4481:
  8982  003EAA  EF5F  F01F         	goto	l3917
  8983  003EAE                     u4480:
  8984  003EAE  0E00               	movlw	0
  8985  003EB0  6E28               	movwf	___flge@ff1^0,c
  8986  003EB2  0E00               	movlw	0
  8987  003EB4  6E29               	movwf	(___flge@ff1+1)^0,c
  8988  003EB6  0E00               	movlw	0
  8989  003EB8  6E2A               	movwf	(___flge@ff1+2)^0,c
  8990  003EBA  0E00               	movlw	0
  8991  003EBC  6E2B               	movwf	(___flge@ff1+3)^0,c
  8992  003EBE                     l3917:
  8993  003EBE  0E00               	movlw	0
  8994  003EC0  142C               	andwf	___flge@ff2^0,w,c
  8995  003EC2  6E30               	movwf	??___flge^0,c
  8996  003EC4  0E00               	movlw	0
  8997  003EC6  142D               	andwf	(___flge@ff2+1)^0,w,c
  8998  003EC8  6E31               	movwf	(??___flge+1)^0,c
  8999  003ECA  0E80               	movlw	128
  9000  003ECC  142E               	andwf	(___flge@ff2+2)^0,w,c
  9001  003ECE  6E32               	movwf	(??___flge+2)^0,c
  9002  003ED0  0E7F               	movlw	127
  9003  003ED2  142F               	andwf	(___flge@ff2+3)^0,w,c
  9004  003ED4  6E33               	movwf	(??___flge+3)^0,c
  9005  003ED6  5030               	movf	??___flge^0,w,c
  9006  003ED8  1031               	iorwf	(??___flge+1)^0,w,c
  9007  003EDA  1032               	iorwf	(??___flge+2)^0,w,c
  9008  003EDC  1033               	iorwf	(??___flge+3)^0,w,c
  9009  003EDE  A4D8               	btfss	status,2,c
  9010  003EE0  EF74  F01F         	goto	u4491
  9011  003EE4  EF76  F01F         	goto	u4490
  9012  003EE8                     u4491:
  9013  003EE8  EF7E  F01F         	goto	l3921
  9014  003EEC                     u4490:
  9015  003EEC  0E00               	movlw	0
  9016  003EEE  6E2C               	movwf	___flge@ff2^0,c
  9017  003EF0  0E00               	movlw	0
  9018  003EF2  6E2D               	movwf	(___flge@ff2+1)^0,c
  9019  003EF4  0E00               	movlw	0
  9020  003EF6  6E2E               	movwf	(___flge@ff2+2)^0,c
  9021  003EF8  0E00               	movlw	0
  9022  003EFA  6E2F               	movwf	(___flge@ff2+3)^0,c
  9023  003EFC                     l3921:
  9024  003EFC  AE2B               	btfss	(___flge@ff1+3)^0,7,c
  9025  003EFE  EF83  F01F         	goto	u4501
  9026  003F02  EF85  F01F         	goto	u4500
  9027  003F06                     u4501:
  9028  003F06  EF8E  F01F         	goto	l3925
  9029  003F0A                     u4500:
  9030  003F0A  6C28               	negf	___flge@ff1^0,c
  9031  003F0C  1E29               	comf	(___flge@ff1+1)^0,f,c
  9032  003F0E  B0D8               	btfsc	status,0,c
  9033  003F10  2A29               	incf	(___flge@ff1+1)^0,f,c
  9034  003F12  1E2A               	comf	(___flge@ff1+2)^0,f,c
  9035  003F14  B0D8               	btfsc	status,0,c
  9036  003F16  2A2A               	incf	(___flge@ff1+2)^0,f,c
  9037  003F18  0E80               	movlw	128
  9038  003F1A  562B               	subfwb	(___flge@ff1+3)^0,f,c
  9039  003F1C                     l3925:
  9040  003F1C  AE2F               	btfss	(___flge@ff2+3)^0,7,c
  9041  003F1E  EF93  F01F         	goto	u4511
  9042  003F22  EF95  F01F         	goto	u4510
  9043  003F26                     u4511:
  9044  003F26  EF9E  F01F         	goto	l468
  9045  003F2A                     u4510:
  9046  003F2A  6C2C               	negf	___flge@ff2^0,c
  9047  003F2C  1E2D               	comf	(___flge@ff2+1)^0,f,c
  9048  003F2E  B0D8               	btfsc	status,0,c
  9049  003F30  2A2D               	incf	(___flge@ff2+1)^0,f,c
  9050  003F32  1E2E               	comf	(___flge@ff2+2)^0,f,c
  9051  003F34  B0D8               	btfsc	status,0,c
  9052  003F36  2A2E               	incf	(___flge@ff2+2)^0,f,c
  9053  003F38  0E80               	movlw	128
  9054  003F3A  562F               	subfwb	(___flge@ff2+3)^0,f,c
  9055  003F3C                     l468:
  9056  003F3C  0E00               	movlw	0
  9057  003F3E  1A28               	xorwf	___flge@ff1^0,f,c
  9058  003F40  0E00               	movlw	0
  9059  003F42  1A29               	xorwf	(___flge@ff1+1)^0,f,c
  9060  003F44  0E00               	movlw	0
  9061  003F46  1A2A               	xorwf	(___flge@ff1+2)^0,f,c
  9062  003F48  0E80               	movlw	128
  9063  003F4A  1A2B               	xorwf	(___flge@ff1+3)^0,f,c
  9064  003F4C  0E00               	movlw	0
  9065  003F4E  1A2C               	xorwf	___flge@ff2^0,f,c
  9066  003F50  0E00               	movlw	0
  9067  003F52  1A2D               	xorwf	(___flge@ff2+1)^0,f,c
  9068  003F54  0E00               	movlw	0
  9069  003F56  1A2E               	xorwf	(___flge@ff2+2)^0,f,c
  9070  003F58  0E80               	movlw	128
  9071  003F5A  1A2F               	xorwf	(___flge@ff2+3)^0,f,c
  9072  003F5C  502C               	movf	___flge@ff2^0,w,c
  9073  003F5E  5C28               	subwf	___flge@ff1^0,w,c
  9074  003F60  502D               	movf	(___flge@ff2+1)^0,w,c
  9075  003F62  5829               	subwfb	(___flge@ff1+1)^0,w,c
  9076  003F64  502E               	movf	(___flge@ff2+2)^0,w,c
  9077  003F66  582A               	subwfb	(___flge@ff1+2)^0,w,c
  9078  003F68  502F               	movf	(___flge@ff2+3)^0,w,c
  9079  003F6A  582B               	subwfb	(___flge@ff1+3)^0,w,c
  9080  003F6C  B0D8               	btfsc	status,0,c
  9081  003F6E  EFBB  F01F         	goto	u4521
  9082  003F72  EFBD  F01F         	goto	u4520
  9083  003F76                     u4521:
  9084  003F76  EFC0  F01F         	goto	l3931
  9085  003F7A                     u4520:
  9086  003F7A  90D8               	bcf	status,0,c
  9087  003F7C  EFC1  F01F         	goto	l473
  9088  003F80                     l3931:
  9089  003F80  80D8               	bsf	status,0,c
  9090  003F82                     l473:
  9091  003F82  0012               	return		;funcret
  9092  003F84                     __end_of___flge:
  9093                           	callstack 0
  9094                           
  9095 ;; *************** function ___fleq *****************
  9096 ;; Defined at:
  9097 ;;		line 4 in file "/Applications/microchip/xc8/v2.31/pic/sources/c99/common/fleq.c"
  9098 ;; Parameters:    Size  Location     Type
  9099 ;;  ff1             4    0[COMRAM] unsigned char 
  9100 ;;  ff2             4    4[COMRAM] unsigned char 
  9101 ;; Auto vars:     Size  Location     Type
  9102 ;;		None
  9103 ;; Return value:  Size  Location     Type
  9104 ;;		None               void
  9105 ;; Registers used:
  9106 ;;		wreg, status,2, status,0
  9107 ;; Tracked objects:
  9108 ;;		On entry : 0/0
  9109 ;;		On exit  : 0/0
  9110 ;;		Unchanged: 0/0
  9111 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  9112 ;;      Params:         8       0       0       0       0       0       0       0       0
  9113 ;;      Locals:         0       0       0       0       0       0       0       0       0
  9114 ;;      Temps:          4       0       0       0       0       0       0       0       0
  9115 ;;      Totals:        12       0       0       0       0       0       0       0       0
  9116 ;;Total ram usage:       12 bytes
  9117 ;; Hardware stack levels used:    1
  9118 ;; This function calls:
  9119 ;;		Nothing
  9120 ;; This function is called by:
  9121 ;;		_efgtoa
  9122 ;; This function uses a non-reentrant model
  9123 ;;
  9124                           
  9125                           	psect	text33
  9126  004534                     __ptext33:
  9127                           	callstack 0
  9128  004534                     ___fleq:
  9129                           	callstack 25
  9130  004534  0E00               	movlw	0
  9131  004536  1401               	andwf	___fleq@ff1^0,w,c
  9132  004538  6E09               	movwf	??___fleq^0,c
  9133  00453A  0E00               	movlw	0
  9134  00453C  1402               	andwf	(___fleq@ff1+1)^0,w,c
  9135  00453E  6E0A               	movwf	(??___fleq+1)^0,c
  9136  004540  0E80               	movlw	128
  9137  004542  1403               	andwf	(___fleq@ff1+2)^0,w,c
  9138  004544  6E0B               	movwf	(??___fleq+2)^0,c
  9139  004546  0E7F               	movlw	127
  9140  004548  1404               	andwf	(___fleq@ff1+3)^0,w,c
  9141  00454A  6E0C               	movwf	(??___fleq+3)^0,c
  9142  00454C  5009               	movf	??___fleq^0,w,c
  9143  00454E  100A               	iorwf	(??___fleq+1)^0,w,c
  9144  004550  100B               	iorwf	(??___fleq+2)^0,w,c
  9145  004552  100C               	iorwf	(??___fleq+3)^0,w,c
  9146  004554  A4D8               	btfss	status,2,c
  9147  004556  EFAF  F022         	goto	u4451
  9148  00455A  EFB1  F022         	goto	u4450
  9149  00455E                     u4451:
  9150  00455E  EFB9  F022         	goto	l3901
  9151  004562                     u4450:
  9152  004562  0E00               	movlw	0
  9153  004564  6E01               	movwf	___fleq@ff1^0,c
  9154  004566  0E00               	movlw	0
  9155  004568  6E02               	movwf	(___fleq@ff1+1)^0,c
  9156  00456A  0E00               	movlw	0
  9157  00456C  6E03               	movwf	(___fleq@ff1+2)^0,c
  9158  00456E  0E00               	movlw	0
  9159  004570  6E04               	movwf	(___fleq@ff1+3)^0,c
  9160  004572                     l3901:
  9161  004572  0E00               	movlw	0
  9162  004574  1405               	andwf	___fleq@ff2^0,w,c
  9163  004576  6E09               	movwf	??___fleq^0,c
  9164  004578  0E00               	movlw	0
  9165  00457A  1406               	andwf	(___fleq@ff2+1)^0,w,c
  9166  00457C  6E0A               	movwf	(??___fleq+1)^0,c
  9167  00457E  0E80               	movlw	128
  9168  004580  1407               	andwf	(___fleq@ff2+2)^0,w,c
  9169  004582  6E0B               	movwf	(??___fleq+2)^0,c
  9170  004584  0E7F               	movlw	127
  9171  004586  1408               	andwf	(___fleq@ff2+3)^0,w,c
  9172  004588  6E0C               	movwf	(??___fleq+3)^0,c
  9173  00458A  5009               	movf	??___fleq^0,w,c
  9174  00458C  100A               	iorwf	(??___fleq+1)^0,w,c
  9175  00458E  100B               	iorwf	(??___fleq+2)^0,w,c
  9176  004590  100C               	iorwf	(??___fleq+3)^0,w,c
  9177  004592  A4D8               	btfss	status,2,c
  9178  004594  EFCE  F022         	goto	u4461
  9179  004598  EFD0  F022         	goto	u4460
  9180  00459C                     u4461:
  9181  00459C  EFD8  F022         	goto	l3905
  9182  0045A0                     u4460:
  9183  0045A0  0E00               	movlw	0
  9184  0045A2  6E05               	movwf	___fleq@ff2^0,c
  9185  0045A4  0E00               	movlw	0
  9186  0045A6  6E06               	movwf	(___fleq@ff2+1)^0,c
  9187  0045A8  0E00               	movlw	0
  9188  0045AA  6E07               	movwf	(___fleq@ff2+2)^0,c
  9189  0045AC  0E00               	movlw	0
  9190  0045AE  6E08               	movwf	(___fleq@ff2+3)^0,c
  9191  0045B0                     l3905:
  9192  0045B0  5005               	movf	___fleq@ff2^0,w,c
  9193  0045B2  1801               	xorwf	___fleq@ff1^0,w,c
  9194  0045B4  E10F               	bnz	u4470
  9195  0045B6  5006               	movf	(___fleq@ff2+1)^0,w,c
  9196  0045B8  1802               	xorwf	(___fleq@ff1+1)^0,w,c
  9197  0045BA  E10C               	bnz	u4470
  9198  0045BC  5007               	movf	(___fleq@ff2+2)^0,w,c
  9199  0045BE  1803               	xorwf	(___fleq@ff1+2)^0,w,c
  9200  0045C0  E109               	bnz	u4470
  9201  0045C2  5008               	movf	(___fleq@ff2+3)^0,w,c
  9202  0045C4  1804               	xorwf	(___fleq@ff1+3)^0,w,c
  9203  0045C6  B4D8               	btfsc	status,2,c
  9204  0045C8  EFE8  F022         	goto	u4471
  9205  0045CC  EFEA  F022         	goto	u4470
  9206  0045D0                     u4471:
  9207  0045D0  EFED  F022         	goto	l3909
  9208  0045D4                     u4470:
  9209  0045D4  90D8               	bcf	status,0,c
  9210  0045D6  EFEE  F022         	goto	l462
  9211  0045DA                     l3909:
  9212  0045DA  80D8               	bsf	status,0,c
  9213  0045DC                     l462:
  9214  0045DC  0012               	return		;funcret
  9215  0045DE                     __end_of___fleq:
  9216                           	callstack 0
  9217                           
  9218 ;; *************** function ___fldiv *****************
  9219 ;; Defined at:
  9220 ;;		line 11 in file "/Applications/microchip/xc8/v2.31/pic/sources/c99/common/sprcdiv.c"
  9221 ;; Parameters:    Size  Location     Type
  9222 ;;  b               4    0[COMRAM] unsigned char 
  9223 ;;  a               4    4[COMRAM] unsigned char 
  9224 ;; Auto vars:     Size  Location     Type
  9225 ;;  grs             4   19[COMRAM] unsigned long 
  9226 ;;  rem             4   12[COMRAM] unsigned long 
  9227 ;;  new_exp         2   17[COMRAM] short 
  9228 ;;  aexp            1   24[COMRAM] unsigned char 
  9229 ;;  bexp            1   23[COMRAM] unsigned char 
  9230 ;;  sign            1   16[COMRAM] unsigned char 
  9231 ;; Return value:  Size  Location     Type
  9232 ;;                  4    0[COMRAM] unsigned char 
  9233 ;; Registers used:
  9234 ;;		wreg, status,2, status,0
  9235 ;; Tracked objects:
  9236 ;;		On entry : 0/0
  9237 ;;		On exit  : 0/0
  9238 ;;		Unchanged: 0/0
  9239 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  9240 ;;      Params:         8       0       0       0       0       0       0       0       0
  9241 ;;      Locals:        13       0       0       0       0       0       0       0       0
  9242 ;;      Temps:          4       0       0       0       0       0       0       0       0
  9243 ;;      Totals:        25       0       0       0       0       0       0       0       0
  9244 ;;Total ram usage:       25 bytes
  9245 ;; Hardware stack levels used:    1
  9246 ;; This function calls:
  9247 ;;		Nothing
  9248 ;; This function is called by:
  9249 ;;		_efgtoa
  9250 ;; This function uses a non-reentrant model
  9251 ;;
  9252                           
  9253                           	psect	text34
  9254  002652                     __ptext34:
  9255                           	callstack 0
  9256  002652                     ___fldiv:
  9257                           	callstack 25
  9258  002652  5004               	movf	(___fldiv@b+3)^0,w,c
  9259  002654  0B80               	andlw	128
  9260  002656  6E11               	movwf	___fldiv@sign^0,c
  9261  002658  5004               	movf	(___fldiv@b+3)^0,w,c
  9262  00265A  2404               	addwf	(___fldiv@b+3)^0,w,c
  9263  00265C  6E18               	movwf	___fldiv@bexp^0,c
  9264  00265E  AE03               	btfss	(___fldiv@b+2)^0,7,c
  9265  002660  EF34  F013         	goto	u3911
  9266  002664  EF36  F013         	goto	u3910
  9267  002668                     u3911:
  9268  002668  EF37  F013         	goto	l3549
  9269  00266C                     u3910:
  9270  00266C  8018               	bsf	___fldiv@bexp^0,0,c
  9271  00266E                     l3549:
  9272  00266E  5018               	movf	___fldiv@bexp^0,w,c
  9273  002670  B4D8               	btfsc	status,2,c
  9274  002672  EF3D  F013         	goto	u3921
  9275  002676  EF3F  F013         	goto	u3920
  9276  00267A                     u3921:
  9277  00267A  EF54  F013         	goto	l3559
  9278  00267E                     u3920:
  9279  00267E  2818               	incf	___fldiv@bexp^0,w,c
  9280  002680  A4D8               	btfss	status,2,c
  9281  002682  EF45  F013         	goto	u3931
  9282  002686  EF47  F013         	goto	u3930
  9283  00268A                     u3931:
  9284  00268A  EF4F  F013         	goto	l3555
  9285  00268E                     u3930:
  9286  00268E  0E00               	movlw	0
  9287  002690  6E01               	movwf	___fldiv@b^0,c
  9288  002692  0E00               	movlw	0
  9289  002694  6E02               	movwf	(___fldiv@b+1)^0,c
  9290  002696  0E00               	movlw	0
  9291  002698  6E03               	movwf	(___fldiv@b+2)^0,c
  9292  00269A  0E00               	movlw	0
  9293  00269C  6E04               	movwf	(___fldiv@b+3)^0,c
  9294  00269E                     l3555:
  9295  00269E  8E03               	bsf	(___fldiv@b+2)^0,7,c
  9296  0026A0  0E00               	movlw	0
  9297  0026A2  6E04               	movwf	(___fldiv@b+3)^0,c
  9298  0026A4  EF5C  F013         	goto	l3561
  9299  0026A8                     l3559:
  9300  0026A8  0E00               	movlw	0
  9301  0026AA  6E01               	movwf	___fldiv@b^0,c
  9302  0026AC  0E00               	movlw	0
  9303  0026AE  6E02               	movwf	(___fldiv@b+1)^0,c
  9304  0026B0  0E00               	movlw	0
  9305  0026B2  6E03               	movwf	(___fldiv@b+2)^0,c
  9306  0026B4  0E00               	movlw	0
  9307  0026B6  6E04               	movwf	(___fldiv@b+3)^0,c
  9308  0026B8                     l3561:
  9309  0026B8  5008               	movf	(___fldiv@a+3)^0,w,c
  9310  0026BA  0B80               	andlw	128
  9311  0026BC  1A11               	xorwf	___fldiv@sign^0,f,c
  9312  0026BE  5008               	movf	(___fldiv@a+3)^0,w,c
  9313  0026C0  2408               	addwf	(___fldiv@a+3)^0,w,c
  9314  0026C2  6E19               	movwf	___fldiv@aexp^0,c
  9315  0026C4  AE07               	btfss	(___fldiv@a+2)^0,7,c
  9316  0026C6  EF67  F013         	goto	u3941
  9317  0026CA  EF69  F013         	goto	u3940
  9318  0026CE                     u3941:
  9319  0026CE  EF6A  F013         	goto	l3569
  9320  0026D2                     u3940:
  9321  0026D2  8019               	bsf	___fldiv@aexp^0,0,c
  9322  0026D4                     l3569:
  9323  0026D4  5019               	movf	___fldiv@aexp^0,w,c
  9324  0026D6  B4D8               	btfsc	status,2,c
  9325  0026D8  EF70  F013         	goto	u3951
  9326  0026DC  EF72  F013         	goto	u3950
  9327  0026E0                     u3951:
  9328  0026E0  EF87  F013         	goto	l3579
  9329  0026E4                     u3950:
  9330  0026E4  2819               	incf	___fldiv@aexp^0,w,c
  9331  0026E6  A4D8               	btfss	status,2,c
  9332  0026E8  EF78  F013         	goto	u3961
  9333  0026EC  EF7A  F013         	goto	u3960
  9334  0026F0                     u3961:
  9335  0026F0  EF82  F013         	goto	l3575
  9336  0026F4                     u3960:
  9337  0026F4  0E00               	movlw	0
  9338  0026F6  6E05               	movwf	___fldiv@a^0,c
  9339  0026F8  0E00               	movlw	0
  9340  0026FA  6E06               	movwf	(___fldiv@a+1)^0,c
  9341  0026FC  0E00               	movlw	0
  9342  0026FE  6E07               	movwf	(___fldiv@a+2)^0,c
  9343  002700  0E00               	movlw	0
  9344  002702  6E08               	movwf	(___fldiv@a+3)^0,c
  9345  002704                     l3575:
  9346  002704  8E07               	bsf	(___fldiv@a+2)^0,7,c
  9347  002706  0E00               	movlw	0
  9348  002708  6E08               	movwf	(___fldiv@a+3)^0,c
  9349  00270A  EF8F  F013         	goto	l3581
  9350  00270E                     l3579:
  9351  00270E  0E00               	movlw	0
  9352  002710  6E05               	movwf	___fldiv@a^0,c
  9353  002712  0E00               	movlw	0
  9354  002714  6E06               	movwf	(___fldiv@a+1)^0,c
  9355  002716  0E00               	movlw	0
  9356  002718  6E07               	movwf	(___fldiv@a+2)^0,c
  9357  00271A  0E00               	movlw	0
  9358  00271C  6E08               	movwf	(___fldiv@a+3)^0,c
  9359  00271E                     l3581:
  9360  00271E  5005               	movf	___fldiv@a^0,w,c
  9361  002720  1006               	iorwf	(___fldiv@a+1)^0,w,c
  9362  002722  1007               	iorwf	(___fldiv@a+2)^0,w,c
  9363  002724  1008               	iorwf	(___fldiv@a+3)^0,w,c
  9364  002726  A4D8               	btfss	status,2,c
  9365  002728  EF98  F013         	goto	u3971
  9366  00272C  EF9A  F013         	goto	u3970
  9367  002730                     u3971:
  9368  002730  EFB2  F013         	goto	l3593
  9369  002734                     u3970:
  9370  002734  0E00               	movlw	0
  9371  002736  6E01               	movwf	___fldiv@b^0,c
  9372  002738  0E00               	movlw	0
  9373  00273A  6E02               	movwf	(___fldiv@b+1)^0,c
  9374  00273C  0E00               	movlw	0
  9375  00273E  6E03               	movwf	(___fldiv@b+2)^0,c
  9376  002740  0E00               	movlw	0
  9377  002742  6E04               	movwf	(___fldiv@b+3)^0,c
  9378  002744  0E80               	movlw	128
  9379  002746  1203               	iorwf	(___fldiv@b+2)^0,f,c
  9380  002748  0E7F               	movlw	127
  9381  00274A  1204               	iorwf	(___fldiv@b+3)^0,f,c
  9382  00274C                     l3587:
  9383  00274C  5011               	movf	___fldiv@sign^0,w,c
  9384  00274E  1204               	iorwf	(___fldiv@b+3)^0,f,c
  9385  002750  C001  F001         	movff	___fldiv@b,?___fldiv
  9386  002754  C002  F002         	movff	___fldiv@b+1,?___fldiv+1
  9387  002758  C003  F003         	movff	___fldiv@b+2,?___fldiv+2
  9388  00275C  C004  F004         	movff	___fldiv@b+3,?___fldiv+3
  9389  002760  EFF5  F014         	goto	l785
  9390  002764                     l3593:
  9391  002764  5018               	movf	___fldiv@bexp^0,w,c
  9392  002766  A4D8               	btfss	status,2,c
  9393  002768  EFB8  F013         	goto	u3981
  9394  00276C  EFBA  F013         	goto	u3980
  9395  002770                     u3981:
  9396  002770  EFC4  F013         	goto	l3601
  9397  002774                     u3980:
  9398  002774  0E00               	movlw	0
  9399  002776  6E01               	movwf	?___fldiv^0,c
  9400  002778  0E00               	movlw	0
  9401  00277A  6E02               	movwf	(?___fldiv+1)^0,c
  9402  00277C  0E00               	movlw	0
  9403  00277E  6E03               	movwf	(?___fldiv+2)^0,c
  9404  002780  0E00               	movlw	0
  9405  002782  6E04               	movwf	(?___fldiv+3)^0,c
  9406  002784  EFF5  F014         	goto	l785
  9407  002788                     l3601:
  9408  002788  5019               	movf	___fldiv@aexp^0,w,c
  9409  00278A  C018  F009         	movff	___fldiv@bexp,??___fldiv
  9410  00278E  6A0A               	clrf	(??___fldiv+1)^0,c
  9411  002790  5E09               	subwf	??___fldiv^0,f,c
  9412  002792  0E00               	movlw	0
  9413  002794  5A0A               	subwfb	(??___fldiv+1)^0,f,c
  9414  002796  0E7F               	movlw	127
  9415  002798  2409               	addwf	??___fldiv^0,w,c
  9416  00279A  6E12               	movwf	___fldiv@new_exp^0,c
  9417  00279C  0E00               	movlw	0
  9418  00279E  200A               	addwfc	(??___fldiv+1)^0,w,c
  9419  0027A0  6E13               	movwf	(___fldiv@new_exp+1)^0,c
  9420  0027A2  C001  F00D         	movff	___fldiv@b,___fldiv@rem
  9421  0027A6  C002  F00E         	movff	___fldiv@b+1,___fldiv@rem+1
  9422  0027AA  C003  F00F         	movff	___fldiv@b+2,___fldiv@rem+2
  9423  0027AE  C004  F010         	movff	___fldiv@b+3,___fldiv@rem+3
  9424  0027B2  0E00               	movlw	0
  9425  0027B4  6E01               	movwf	___fldiv@b^0,c
  9426  0027B6  0E00               	movlw	0
  9427  0027B8  6E02               	movwf	(___fldiv@b+1)^0,c
  9428  0027BA  0E00               	movlw	0
  9429  0027BC  6E03               	movwf	(___fldiv@b+2)^0,c
  9430  0027BE  0E00               	movlw	0
  9431  0027C0  6E04               	movwf	(___fldiv@b+3)^0,c
  9432  0027C2  0E00               	movlw	0
  9433  0027C4  6E14               	movwf	___fldiv@grs^0,c
  9434  0027C6  0E00               	movlw	0
  9435  0027C8  6E15               	movwf	(___fldiv@grs+1)^0,c
  9436  0027CA  0E00               	movlw	0
  9437  0027CC  6E16               	movwf	(___fldiv@grs+2)^0,c
  9438  0027CE  0E00               	movlw	0
  9439  0027D0  6E17               	movwf	(___fldiv@grs+3)^0,c
  9440  0027D2  0E00               	movlw	0
  9441  0027D4  6E19               	movwf	___fldiv@aexp^0,c
  9442  0027D6  EF25  F014         	goto	l787
  9443  0027DA                     l3611:
  9444  0027DA  5019               	movf	___fldiv@aexp^0,w,c
  9445  0027DC  B4D8               	btfsc	status,2,c
  9446  0027DE  EFF3  F013         	goto	u3991
  9447  0027E2  EFF5  F013         	goto	u3990
  9448  0027E6                     u3991:
  9449  0027E6  EF0C  F014         	goto	l3619
  9450  0027EA                     u3990:
  9451  0027EA  90D8               	bcf	status,0,c
  9452  0027EC  360D               	rlcf	___fldiv@rem^0,f,c
  9453  0027EE  360E               	rlcf	(___fldiv@rem+1)^0,f,c
  9454  0027F0  360F               	rlcf	(___fldiv@rem+2)^0,f,c
  9455  0027F2  3610               	rlcf	(___fldiv@rem+3)^0,f,c
  9456  0027F4  90D8               	bcf	status,0,c
  9457  0027F6  3601               	rlcf	___fldiv@b^0,f,c
  9458  0027F8  3602               	rlcf	(___fldiv@b+1)^0,f,c
  9459  0027FA  3603               	rlcf	(___fldiv@b+2)^0,f,c
  9460  0027FC  3604               	rlcf	(___fldiv@b+3)^0,f,c
  9461  0027FE  AE17               	btfss	(___fldiv@grs+3)^0,7,c
  9462  002800  EF04  F014         	goto	u4001
  9463  002804  EF06  F014         	goto	u4000
  9464  002808                     u4001:
  9465  002808  EF07  F014         	goto	l790
  9466  00280C                     u4000:
  9467  00280C  8001               	bsf	___fldiv@b^0,0,c
  9468  00280E                     l790:
  9469  00280E  90D8               	bcf	status,0,c
  9470  002810  3614               	rlcf	___fldiv@grs^0,f,c
  9471  002812  3615               	rlcf	(___fldiv@grs+1)^0,f,c
  9472  002814  3616               	rlcf	(___fldiv@grs+2)^0,f,c
  9473  002816  3617               	rlcf	(___fldiv@grs+3)^0,f,c
  9474  002818                     l3619:
  9475  002818  5005               	movf	___fldiv@a^0,w,c
  9476  00281A  5C0D               	subwf	___fldiv@rem^0,w,c
  9477  00281C  5006               	movf	(___fldiv@a+1)^0,w,c
  9478  00281E  580E               	subwfb	(___fldiv@rem+1)^0,w,c
  9479  002820  5007               	movf	(___fldiv@a+2)^0,w,c
  9480  002822  580F               	subwfb	(___fldiv@rem+2)^0,w,c
  9481  002824  5008               	movf	(___fldiv@a+3)^0,w,c
  9482  002826  5810               	subwfb	(___fldiv@rem+3)^0,w,c
  9483  002828  A0D8               	btfss	status,0,c
  9484  00282A  EF19  F014         	goto	u4011
  9485  00282E  EF1B  F014         	goto	u4010
  9486  002832                     u4011:
  9487  002832  EF24  F014         	goto	l3625
  9488  002836                     u4010:
  9489  002836  8C17               	bsf	(___fldiv@grs+3)^0,6,c
  9490  002838  5005               	movf	___fldiv@a^0,w,c
  9491  00283A  5E0D               	subwf	___fldiv@rem^0,f,c
  9492  00283C  5006               	movf	(___fldiv@a+1)^0,w,c
  9493  00283E  5A0E               	subwfb	(___fldiv@rem+1)^0,f,c
  9494  002840  5007               	movf	(___fldiv@a+2)^0,w,c
  9495  002842  5A0F               	subwfb	(___fldiv@rem+2)^0,f,c
  9496  002844  5008               	movf	(___fldiv@a+3)^0,w,c
  9497  002846  5A10               	subwfb	(___fldiv@rem+3)^0,f,c
  9498  002848                     l3625:
  9499  002848  2A19               	incf	___fldiv@aexp^0,f,c
  9500  00284A                     l787:
  9501  00284A  0E19               	movlw	25
  9502  00284C  6419               	cpfsgt	___fldiv@aexp^0,c
  9503  00284E  EF2B  F014         	goto	u4021
  9504  002852  EF2D  F014         	goto	u4020
  9505  002856                     u4021:
  9506  002856  EFED  F013         	goto	l3611
  9507  00285A                     u4020:
  9508  00285A  500D               	movf	___fldiv@rem^0,w,c
  9509  00285C  100E               	iorwf	(___fldiv@rem+1)^0,w,c
  9510  00285E  100F               	iorwf	(___fldiv@rem+2)^0,w,c
  9511  002860  1010               	iorwf	(___fldiv@rem+3)^0,w,c
  9512  002862  B4D8               	btfsc	status,2,c
  9513  002864  EF36  F014         	goto	u4031
  9514  002868  EF38  F014         	goto	u4030
  9515  00286C                     u4031:
  9516  00286C  EF50  F014         	goto	l3637
  9517  002870                     u4030:
  9518  002870  8014               	bsf	___fldiv@grs^0,0,c
  9519  002872  EF50  F014         	goto	l3637
  9520  002876                     l3631:
  9521  002876  90D8               	bcf	status,0,c
  9522  002878  3601               	rlcf	___fldiv@b^0,f,c
  9523  00287A  3602               	rlcf	(___fldiv@b+1)^0,f,c
  9524  00287C  3603               	rlcf	(___fldiv@b+2)^0,f,c
  9525  00287E  3604               	rlcf	(___fldiv@b+3)^0,f,c
  9526  002880  AE17               	btfss	(___fldiv@grs+3)^0,7,c
  9527  002882  EF45  F014         	goto	u4041
  9528  002886  EF47  F014         	goto	u4040
  9529  00288A                     u4041:
  9530  00288A  EF48  F014         	goto	l796
  9531  00288E                     u4040:
  9532  00288E  8001               	bsf	___fldiv@b^0,0,c
  9533  002890                     l796:
  9534  002890  90D8               	bcf	status,0,c
  9535  002892  3614               	rlcf	___fldiv@grs^0,f,c
  9536  002894  3615               	rlcf	(___fldiv@grs+1)^0,f,c
  9537  002896  3616               	rlcf	(___fldiv@grs+2)^0,f,c
  9538  002898  3617               	rlcf	(___fldiv@grs+3)^0,f,c
  9539  00289A  0612               	decf	___fldiv@new_exp^0,f,c
  9540  00289C  A0D8               	btfss	status,0,c
  9541  00289E  0613               	decf	(___fldiv@new_exp+1)^0,f,c
  9542  0028A0                     l3637:
  9543  0028A0  AE03               	btfss	(___fldiv@b+2)^0,7,c
  9544  0028A2  EF55  F014         	goto	u4051
  9545  0028A6  EF57  F014         	goto	u4050
  9546  0028AA                     u4051:
  9547  0028AA  EF3B  F014         	goto	l3631
  9548  0028AE                     u4050:
  9549  0028AE  0E00               	movlw	0
  9550  0028B0  6E19               	movwf	___fldiv@aexp^0,c
  9551  0028B2  AE17               	btfss	(___fldiv@grs+3)^0,7,c
  9552  0028B4  EF5E  F014         	goto	u4061
  9553  0028B8  EF60  F014         	goto	u4060
  9554  0028BC                     u4061:
  9555  0028BC  EF84  F014         	goto	l798
  9556  0028C0                     u4060:
  9557  0028C0  0EFF               	movlw	255
  9558  0028C2  1414               	andwf	___fldiv@grs^0,w,c
  9559  0028C4  6E09               	movwf	??___fldiv^0,c
  9560  0028C6  0EFF               	movlw	255
  9561  0028C8  1415               	andwf	(___fldiv@grs+1)^0,w,c
  9562  0028CA  6E0A               	movwf	(??___fldiv+1)^0,c
  9563  0028CC  0EFF               	movlw	255
  9564  0028CE  1416               	andwf	(___fldiv@grs+2)^0,w,c
  9565  0028D0  6E0B               	movwf	(??___fldiv+2)^0,c
  9566  0028D2  0E7F               	movlw	127
  9567  0028D4  1417               	andwf	(___fldiv@grs+3)^0,w,c
  9568  0028D6  6E0C               	movwf	(??___fldiv+3)^0,c
  9569  0028D8  5009               	movf	??___fldiv^0,w,c
  9570  0028DA  100A               	iorwf	(??___fldiv+1)^0,w,c
  9571  0028DC  100B               	iorwf	(??___fldiv+2)^0,w,c
  9572  0028DE  100C               	iorwf	(??___fldiv+3)^0,w,c
  9573  0028E0  B4D8               	btfsc	status,2,c
  9574  0028E2  EF75  F014         	goto	u4071
  9575  0028E6  EF77  F014         	goto	u4070
  9576  0028EA                     u4071:
  9577  0028EA  EF7B  F014         	goto	l799
  9578  0028EE                     u4070:
  9579  0028EE                     l3645:
  9580  0028EE  0E01               	movlw	1
  9581  0028F0  6E19               	movwf	___fldiv@aexp^0,c
  9582  0028F2  EF84  F014         	goto	l798
  9583  0028F6                     l799:
  9584  0028F6  A001               	btfss	___fldiv@b^0,0,c
  9585  0028F8  EF80  F014         	goto	u4081
  9586  0028FC  EF82  F014         	goto	u4080
  9587  002900                     u4081:
  9588  002900  EF84  F014         	goto	l798
  9589  002904                     u4080:
  9590  002904  EF77  F014         	goto	l3645
  9591  002908                     l798:
  9592  002908  5019               	movf	___fldiv@aexp^0,w,c
  9593  00290A  B4D8               	btfsc	status,2,c
  9594  00290C  EF8A  F014         	goto	u4091
  9595  002910  EF8C  F014         	goto	u4090
  9596  002914                     u4091:
  9597  002914  EFB0  F014         	goto	l3657
  9598  002918                     u4090:
  9599  002918  0E01               	movlw	1
  9600  00291A  2601               	addwf	___fldiv@b^0,f,c
  9601  00291C  0E00               	movlw	0
  9602  00291E  2202               	addwfc	(___fldiv@b+1)^0,f,c
  9603  002920  2203               	addwfc	(___fldiv@b+2)^0,f,c
  9604  002922  2204               	addwfc	(___fldiv@b+3)^0,f,c
  9605  002924  A004               	btfss	(___fldiv@b+3)^0,0,c
  9606  002926  EF97  F014         	goto	u4101
  9607  00292A  EF99  F014         	goto	u4100
  9608  00292E                     u4101:
  9609  00292E  EFB0  F014         	goto	l3657
  9610  002932                     u4100:
  9611  002932  C001  F009         	movff	___fldiv@b,??___fldiv
  9612  002936  C002  F00A         	movff	___fldiv@b+1,??___fldiv+1
  9613  00293A  C003  F00B         	movff	___fldiv@b+2,??___fldiv+2
  9614  00293E  C004  F00C         	movff	___fldiv@b+3,??___fldiv+3
  9615  002942  340C               	rlcf	(??___fldiv+3)^0,w,c
  9616  002944  320C               	rrcf	(??___fldiv+3)^0,f,c
  9617  002946  320B               	rrcf	(??___fldiv+2)^0,f,c
  9618  002948  320A               	rrcf	(??___fldiv+1)^0,f,c
  9619  00294A  3209               	rrcf	??___fldiv^0,f,c
  9620  00294C  C009  F001         	movff	??___fldiv,___fldiv@b
  9621  002950  C00A  F002         	movff	??___fldiv+1,___fldiv@b+1
  9622  002954  C00B  F003         	movff	??___fldiv+2,___fldiv@b+2
  9623  002958  C00C  F004         	movff	??___fldiv+3,___fldiv@b+3
  9624  00295C  4A12               	infsnz	___fldiv@new_exp^0,f,c
  9625  00295E  2A13               	incf	(___fldiv@new_exp+1)^0,f,c
  9626  002960                     l3657:
  9627  002960  BE13               	btfsc	(___fldiv@new_exp+1)^0,7,c
  9628  002962  EFBB  F014         	goto	u4111
  9629  002966  5013               	movf	(___fldiv@new_exp+1)^0,w,c
  9630  002968  E108               	bnz	u4110
  9631  00296A  2812               	incf	___fldiv@new_exp^0,w,c
  9632  00296C  A0D8               	btfss	status,0,c
  9633  00296E  EFBB  F014         	goto	u4111
  9634  002972  EFBD  F014         	goto	u4110
  9635  002976                     u4111:
  9636  002976  EFC8  F014         	goto	l3661
  9637  00297A                     u4110:
  9638  00297A  0E00               	movlw	0
  9639  00297C  6E13               	movwf	(___fldiv@new_exp+1)^0,c
  9640  00297E  6812               	setf	___fldiv@new_exp^0,c
  9641  002980  0E00               	movlw	0
  9642  002982  6E01               	movwf	___fldiv@b^0,c
  9643  002984  0E00               	movlw	0
  9644  002986  6E02               	movwf	(___fldiv@b+1)^0,c
  9645  002988  0E00               	movlw	0
  9646  00298A  6E03               	movwf	(___fldiv@b+2)^0,c
  9647  00298C  0E00               	movlw	0
  9648  00298E  6E04               	movwf	(___fldiv@b+3)^0,c
  9649  002990                     l3661:
  9650  002990  BE13               	btfsc	(___fldiv@new_exp+1)^0,7,c
  9651  002992  EFD5  F014         	goto	u4120
  9652  002996  5013               	movf	(___fldiv@new_exp+1)^0,w,c
  9653  002998  E106               	bnz	u4121
  9654  00299A  0412               	decf	___fldiv@new_exp^0,w,c
  9655  00299C  B0D8               	btfsc	status,0,c
  9656  00299E  EFD3  F014         	goto	u4121
  9657  0029A2  EFD5  F014         	goto	u4120
  9658  0029A6                     u4121:
  9659  0029A6  EFE3  F014         	goto	l3665
  9660  0029AA                     u4120:
  9661  0029AA  0E00               	movlw	0
  9662  0029AC  6E13               	movwf	(___fldiv@new_exp+1)^0,c
  9663  0029AE  0E00               	movlw	0
  9664  0029B0  6E12               	movwf	___fldiv@new_exp^0,c
  9665  0029B2  0E00               	movlw	0
  9666  0029B4  6E01               	movwf	___fldiv@b^0,c
  9667  0029B6  0E00               	movlw	0
  9668  0029B8  6E02               	movwf	(___fldiv@b+1)^0,c
  9669  0029BA  0E00               	movlw	0
  9670  0029BC  6E03               	movwf	(___fldiv@b+2)^0,c
  9671  0029BE  0E00               	movlw	0
  9672  0029C0  6E04               	movwf	(___fldiv@b+3)^0,c
  9673  0029C2  0E00               	movlw	0
  9674  0029C4  6E11               	movwf	___fldiv@sign^0,c
  9675  0029C6                     l3665:
  9676  0029C6  C012  F018         	movff	___fldiv@new_exp,___fldiv@bexp
  9677  0029CA  A018               	btfss	___fldiv@bexp^0,0,c
  9678  0029CC  EFEA  F014         	goto	u4131
  9679  0029D0  EFEC  F014         	goto	u4130
  9680  0029D4                     u4131:
  9681  0029D4  EFEF  F014         	goto	l3671
  9682  0029D8                     u4130:
  9683  0029D8  8E03               	bsf	(___fldiv@b+2)^0,7,c
  9684  0029DA  EFF0  F014         	goto	l3673
  9685  0029DE                     l3671:
  9686  0029DE  9E03               	bcf	(___fldiv@b+2)^0,7,c
  9687  0029E0                     l3673:
  9688  0029E0  90D8               	bcf	status,0,c
  9689  0029E2  3018               	rrcf	___fldiv@bexp^0,w,c
  9690  0029E4  6E04               	movwf	(___fldiv@b+3)^0,c
  9691  0029E6  EFA6  F013         	goto	l3587
  9692  0029EA                     l785:
  9693  0029EA  0012               	return		;funcret
  9694  0029EC                     __end_of___fldiv:
  9695                           	callstack 0
  9696                           
  9697 ;; *************** function ___awmod *****************
  9698 ;; Defined at:
  9699 ;;		line 7 in file "/Applications/microchip/xc8/v2.31/pic/sources/c99/common/awmod.c"
  9700 ;; Parameters:    Size  Location     Type
  9701 ;;  dividend        2    0[COMRAM] int 
  9702 ;;  divisor         2    2[COMRAM] int 
  9703 ;; Auto vars:     Size  Location     Type
  9704 ;;  sign            1    5[COMRAM] unsigned char 
  9705 ;;  counter         1    4[COMRAM] unsigned char 
  9706 ;; Return value:  Size  Location     Type
  9707 ;;                  2    0[COMRAM] int 
  9708 ;; Registers used:
  9709 ;;		wreg, status,2, status,0
  9710 ;; Tracked objects:
  9711 ;;		On entry : 0/0
  9712 ;;		On exit  : 0/0
  9713 ;;		Unchanged: 0/0
  9714 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  9715 ;;      Params:         4       0       0       0       0       0       0       0       0
  9716 ;;      Locals:         2       0       0       0       0       0       0       0       0
  9717 ;;      Temps:          0       0       0       0       0       0       0       0       0
  9718 ;;      Totals:         6       0       0       0       0       0       0       0       0
  9719 ;;Total ram usage:        6 bytes
  9720 ;; Hardware stack levels used:    1
  9721 ;; This function calls:
  9722 ;;		Nothing
  9723 ;; This function is called by:
  9724 ;;		_Mostrar_Reloj
  9725 ;;		_Alarma
  9726 ;;		_efgtoa
  9727 ;; This function uses a non-reentrant model
  9728 ;;
  9729                           
  9730                           	psect	text35
  9731  004484                     __ptext35:
  9732                           	callstack 0
  9733  004484                     ___awmod:
  9734                           	callstack 25
  9735  004484  0E00               	movlw	0
  9736  004486  6E06               	movwf	___awmod@sign^0,c
  9737  004488  BE02               	btfsc	(___awmod@dividend+1)^0,7,c
  9738  00448A  EF4B  F022         	goto	u4390
  9739  00448E  EF49  F022         	goto	u4391
  9740  004492                     u4391:
  9741  004492  EF51  F022         	goto	l3869
  9742  004496                     u4390:
  9743  004496  6C01               	negf	___awmod@dividend^0,c
  9744  004498  1E02               	comf	(___awmod@dividend+1)^0,f,c
  9745  00449A  B0D8               	btfsc	status,0,c
  9746  00449C  2A02               	incf	(___awmod@dividend+1)^0,f,c
  9747  00449E  0E01               	movlw	1
  9748  0044A0  6E06               	movwf	___awmod@sign^0,c
  9749  0044A2                     l3869:
  9750  0044A2  BE04               	btfsc	(___awmod@divisor+1)^0,7,c
  9751  0044A4  EF58  F022         	goto	u4400
  9752  0044A8  EF56  F022         	goto	u4401
  9753  0044AC                     u4401:
  9754  0044AC  EF5C  F022         	goto	l3873
  9755  0044B0                     u4400:
  9756  0044B0  6C03               	negf	___awmod@divisor^0,c
  9757  0044B2  1E04               	comf	(___awmod@divisor+1)^0,f,c
  9758  0044B4  B0D8               	btfsc	status,0,c
  9759  0044B6  2A04               	incf	(___awmod@divisor+1)^0,f,c
  9760  0044B8                     l3873:
  9761  0044B8  5003               	movf	___awmod@divisor^0,w,c
  9762  0044BA  1004               	iorwf	(___awmod@divisor+1)^0,w,c
  9763  0044BC  B4D8               	btfsc	status,2,c
  9764  0044BE  EF63  F022         	goto	u4411
  9765  0044C2  EF65  F022         	goto	u4410
  9766  0044C6                     u4411:
  9767  0044C6  EF89  F022         	goto	l3889
  9768  0044CA                     u4410:
  9769  0044CA  0E01               	movlw	1
  9770  0044CC  6E05               	movwf	___awmod@counter^0,c
  9771  0044CE  EF6D  F022         	goto	l3879
  9772  0044D2                     l3877:
  9773  0044D2  90D8               	bcf	status,0,c
  9774  0044D4  3603               	rlcf	___awmod@divisor^0,f,c
  9775  0044D6  3604               	rlcf	(___awmod@divisor+1)^0,f,c
  9776  0044D8  2A05               	incf	___awmod@counter^0,f,c
  9777  0044DA                     l3879:
  9778  0044DA  AE04               	btfss	(___awmod@divisor+1)^0,7,c
  9779  0044DC  EF72  F022         	goto	u4421
  9780  0044E0  EF74  F022         	goto	u4420
  9781  0044E4                     u4421:
  9782  0044E4  EF69  F022         	goto	l3877
  9783  0044E8                     u4420:
  9784  0044E8                     l3881:
  9785  0044E8  5003               	movf	___awmod@divisor^0,w,c
  9786  0044EA  5C01               	subwf	___awmod@dividend^0,w,c
  9787  0044EC  5004               	movf	(___awmod@divisor+1)^0,w,c
  9788  0044EE  5802               	subwfb	(___awmod@dividend+1)^0,w,c
  9789  0044F0  A0D8               	btfss	status,0,c
  9790  0044F2  EF7D  F022         	goto	u4431
  9791  0044F6  EF7F  F022         	goto	u4430
  9792  0044FA                     u4431:
  9793  0044FA  EF83  F022         	goto	l3885
  9794  0044FE                     u4430:
  9795  0044FE  5003               	movf	___awmod@divisor^0,w,c
  9796  004500  5E01               	subwf	___awmod@dividend^0,f,c
  9797  004502  5004               	movf	(___awmod@divisor+1)^0,w,c
  9798  004504  5A02               	subwfb	(___awmod@dividend+1)^0,f,c
  9799  004506                     l3885:
  9800  004506  90D8               	bcf	status,0,c
  9801  004508  3204               	rrcf	(___awmod@divisor+1)^0,f,c
  9802  00450A  3203               	rrcf	___awmod@divisor^0,f,c
  9803  00450C  2E05               	decfsz	___awmod@counter^0,f,c
  9804  00450E  EF74  F022         	goto	l3881
  9805  004512                     l3889:
  9806  004512  5006               	movf	___awmod@sign^0,w,c
  9807  004514  B4D8               	btfsc	status,2,c
  9808  004516  EF8F  F022         	goto	u4441
  9809  00451A  EF91  F022         	goto	u4440
  9810  00451E                     u4441:
  9811  00451E  EF95  F022         	goto	l3893
  9812  004522                     u4440:
  9813  004522  6C01               	negf	___awmod@dividend^0,c
  9814  004524  1E02               	comf	(___awmod@dividend+1)^0,f,c
  9815  004526  B0D8               	btfsc	status,0,c
  9816  004528  2A02               	incf	(___awmod@dividend+1)^0,f,c
  9817  00452A                     l3893:
  9818  00452A  C001  F001         	movff	___awmod@dividend,?___awmod
  9819  00452E  C002  F002         	movff	___awmod@dividend+1,?___awmod+1
  9820  004532  0012               	return		;funcret
  9821  004534                     __end_of___awmod:
  9822                           	callstack 0
  9823                           
  9824 ;; *************** function ___awdiv *****************
  9825 ;; Defined at:
  9826 ;;		line 7 in file "/Applications/microchip/xc8/v2.31/pic/sources/c99/common/awdiv.c"
  9827 ;; Parameters:    Size  Location     Type
  9828 ;;  dividend        2    5[COMRAM] int 
  9829 ;;  divisor         2    7[COMRAM] int 
  9830 ;; Auto vars:     Size  Location     Type
  9831 ;;  quotient        2   11[COMRAM] int 
  9832 ;;  sign            1   10[COMRAM] unsigned char 
  9833 ;;  counter         1    9[COMRAM] unsigned char 
  9834 ;; Return value:  Size  Location     Type
  9835 ;;                  2    5[COMRAM] int 
  9836 ;; Registers used:
  9837 ;;		wreg, status,2, status,0
  9838 ;; Tracked objects:
  9839 ;;		On entry : 0/0
  9840 ;;		On exit  : 0/0
  9841 ;;		Unchanged: 0/0
  9842 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  9843 ;;      Params:         4       0       0       0       0       0       0       0       0
  9844 ;;      Locals:         4       0       0       0       0       0       0       0       0
  9845 ;;      Temps:          0       0       0       0       0       0       0       0       0
  9846 ;;      Totals:         8       0       0       0       0       0       0       0       0
  9847 ;;Total ram usage:        8 bytes
  9848 ;; Hardware stack levels used:    1
  9849 ;; This function calls:
  9850 ;;		Nothing
  9851 ;; This function is called by:
  9852 ;;		_SensorLM35
  9853 ;;		_Mostrar_Reloj
  9854 ;;		_Alarma
  9855 ;;		_efgtoa
  9856 ;; This function uses a non-reentrant model
  9857 ;;
  9858                           
  9859                           	psect	text36
  9860  0043C0                     __ptext36:
  9861                           	callstack 0
  9862  0043C0                     ___awdiv:
  9863                           	callstack 25
  9864  0043C0  0E00               	movlw	0
  9865  0043C2  6E0B               	movwf	___awdiv@sign^0,c
  9866  0043C4  BE09               	btfsc	(___awdiv@divisor+1)^0,7,c
  9867  0043C6  EFE9  F021         	goto	u4330
  9868  0043CA  EFE7  F021         	goto	u4331
  9869  0043CE                     u4331:
  9870  0043CE  EFEF  F021         	goto	l3825
  9871  0043D2                     u4330:
  9872  0043D2  6C08               	negf	___awdiv@divisor^0,c
  9873  0043D4  1E09               	comf	(___awdiv@divisor+1)^0,f,c
  9874  0043D6  B0D8               	btfsc	status,0,c
  9875  0043D8  2A09               	incf	(___awdiv@divisor+1)^0,f,c
  9876  0043DA  0E01               	movlw	1
  9877  0043DC  6E0B               	movwf	___awdiv@sign^0,c
  9878  0043DE                     l3825:
  9879  0043DE  BE07               	btfsc	(___awdiv@dividend+1)^0,7,c
  9880  0043E0  EFF6  F021         	goto	u4340
  9881  0043E4  EFF4  F021         	goto	u4341
  9882  0043E8                     u4341:
  9883  0043E8  EFFC  F021         	goto	l3831
  9884  0043EC                     u4340:
  9885  0043EC  6C06               	negf	___awdiv@dividend^0,c
  9886  0043EE  1E07               	comf	(___awdiv@dividend+1)^0,f,c
  9887  0043F0  B0D8               	btfsc	status,0,c
  9888  0043F2  2A07               	incf	(___awdiv@dividend+1)^0,f,c
  9889  0043F4  0E01               	movlw	1
  9890  0043F6  1A0B               	xorwf	___awdiv@sign^0,f,c
  9891  0043F8                     l3831:
  9892  0043F8  0E00               	movlw	0
  9893  0043FA  6E0D               	movwf	(___awdiv@quotient+1)^0,c
  9894  0043FC  0E00               	movlw	0
  9895  0043FE  6E0C               	movwf	___awdiv@quotient^0,c
  9896  004400  5008               	movf	___awdiv@divisor^0,w,c
  9897  004402  1009               	iorwf	(___awdiv@divisor+1)^0,w,c
  9898  004404  B4D8               	btfsc	status,2,c
  9899  004406  EF07  F022         	goto	u4351
  9900  00440A  EF09  F022         	goto	u4350
  9901  00440E                     u4351:
  9902  00440E  EF31  F022         	goto	l3853
  9903  004412                     u4350:
  9904  004412  0E01               	movlw	1
  9905  004414  6E0A               	movwf	___awdiv@counter^0,c
  9906  004416  EF11  F022         	goto	l3839
  9907  00441A                     l3837:
  9908  00441A  90D8               	bcf	status,0,c
  9909  00441C  3608               	rlcf	___awdiv@divisor^0,f,c
  9910  00441E  3609               	rlcf	(___awdiv@divisor+1)^0,f,c
  9911  004420  2A0A               	incf	___awdiv@counter^0,f,c
  9912  004422                     l3839:
  9913  004422  AE09               	btfss	(___awdiv@divisor+1)^0,7,c
  9914  004424  EF16  F022         	goto	u4361
  9915  004428  EF18  F022         	goto	u4360
  9916  00442C                     u4361:
  9917  00442C  EF0D  F022         	goto	l3837
  9918  004430                     u4360:
  9919  004430                     l3841:
  9920  004430  90D8               	bcf	status,0,c
  9921  004432  360C               	rlcf	___awdiv@quotient^0,f,c
  9922  004434  360D               	rlcf	(___awdiv@quotient+1)^0,f,c
  9923  004436  5008               	movf	___awdiv@divisor^0,w,c
  9924  004438  5C06               	subwf	___awdiv@dividend^0,w,c
  9925  00443A  5009               	movf	(___awdiv@divisor+1)^0,w,c
  9926  00443C  5807               	subwfb	(___awdiv@dividend+1)^0,w,c
  9927  00443E  A0D8               	btfss	status,0,c
  9928  004440  EF24  F022         	goto	u4371
  9929  004444  EF26  F022         	goto	u4370
  9930  004448                     u4371:
  9931  004448  EF2B  F022         	goto	l3849
  9932  00444C                     u4370:
  9933  00444C  5008               	movf	___awdiv@divisor^0,w,c
  9934  00444E  5E06               	subwf	___awdiv@dividend^0,f,c
  9935  004450  5009               	movf	(___awdiv@divisor+1)^0,w,c
  9936  004452  5A07               	subwfb	(___awdiv@dividend+1)^0,f,c
  9937  004454  800C               	bsf	___awdiv@quotient^0,0,c
  9938  004456                     l3849:
  9939  004456  90D8               	bcf	status,0,c
  9940  004458  3209               	rrcf	(___awdiv@divisor+1)^0,f,c
  9941  00445A  3208               	rrcf	___awdiv@divisor^0,f,c
  9942  00445C  2E0A               	decfsz	___awdiv@counter^0,f,c
  9943  00445E  EF18  F022         	goto	l3841
  9944  004462                     l3853:
  9945  004462  500B               	movf	___awdiv@sign^0,w,c
  9946  004464  B4D8               	btfsc	status,2,c
  9947  004466  EF37  F022         	goto	u4381
  9948  00446A  EF39  F022         	goto	u4380
  9949  00446E                     u4381:
  9950  00446E  EF3D  F022         	goto	l3857
  9951  004472                     u4380:
  9952  004472  6C0C               	negf	___awdiv@quotient^0,c
  9953  004474  1E0D               	comf	(___awdiv@quotient+1)^0,f,c
  9954  004476  B0D8               	btfsc	status,0,c
  9955  004478  2A0D               	incf	(___awdiv@quotient+1)^0,f,c
  9956  00447A                     l3857:
  9957  00447A  C00C  F006         	movff	___awdiv@quotient,?___awdiv
  9958  00447E  C00D  F007         	movff	___awdiv@quotient+1,?___awdiv+1
  9959  004482  0012               	return		;funcret
  9960  004484                     __end_of___awdiv:
  9961                           	callstack 0
  9962                           
  9963 ;; *************** function _dtoa *****************
  9964 ;; Defined at:
  9965 ;;		line 287 in file "/Applications/microchip/xc8/v2.31/pic/sources/c99/common/doprnt.c"
  9966 ;; Parameters:    Size  Location     Type
  9967 ;;  fp              2   30[COMRAM] PTR struct _IO_FILE
  9968 ;;		 -> NULL(0), sprintf@f(6), 
  9969 ;;  d               8   32[COMRAM] long long 
  9970 ;; Auto vars:     Size  Location     Type
  9971 ;;  n               8   56[COMRAM] long long 
  9972 ;;  i               2   64[COMRAM] int 
  9973 ;;  s               2   54[COMRAM] int 
  9974 ;;  w               2   52[COMRAM] int 
  9975 ;;  p               2   50[COMRAM] int 
  9976 ;; Return value:  Size  Location     Type
  9977 ;;                  2   30[COMRAM] int 
  9978 ;; Registers used:
  9979 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
  9980 ;; Tracked objects:
  9981 ;;		On entry : 0/0
  9982 ;;		On exit  : 0/0
  9983 ;;		Unchanged: 0/0
  9984 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  9985 ;;      Params:        10       0       0       0       0       0       0       0       0
  9986 ;;      Locals:        18       0       0       0       0       0       0       0       0
  9987 ;;      Temps:          8       0       0       0       0       0       0       0       0
  9988 ;;      Totals:        36       0       0       0       0       0       0       0       0
  9989 ;;Total ram usage:       36 bytes
  9990 ;; Hardware stack levels used:    1
  9991 ;; Hardware stack levels required when called:    4
  9992 ;; This function calls:
  9993 ;;		___aodiv
  9994 ;;		___aomod
  9995 ;;		_abs
  9996 ;;		_pad
  9997 ;; This function is called by:
  9998 ;;		_vfpfcnvrt
  9999 ;; This function uses a non-reentrant model
 10000 ;;
 10001                           
 10002                           	psect	text37
 10003  002D1E                     __ptext37:
 10004                           	callstack 0
 10005  002D1E                     _dtoa:
 10006                           	callstack 22
 10007  002D1E                     
 10008                           ;/Applications/microchip/xc8/v2.31/pic/sources/c99/common/doprnt.c: 287: static int dtoa
      +                          (FILE *fp, long long d);/Applications/microchip/xc8/v2.31/pic/sources/c99/common/doprnt.
      +                          c: 288: {;/Applications/microchip/xc8/v2.31/pic/sources/c99/common/doprnt.c: 289:     in
      +                          t i, p, s, w;;/Applications/microchip/xc8/v2.31/pic/sources/c99/common/doprnt.c: 290:   
      +                            long long n;;/Applications/microchip/xc8/v2.31/pic/sources/c99/common/doprnt.c: 293:  
      +                             n = d;
 10009  002D1E  C021  F039         	movff	dtoa@d,dtoa@n
 10010  002D22  C022  F03A         	movff	dtoa@d+1,dtoa@n+1
 10011  002D26  C023  F03B         	movff	dtoa@d+2,dtoa@n+2
 10012  002D2A  C024  F03C         	movff	dtoa@d+3,dtoa@n+3
 10013  002D2E  C025  F03D         	movff	dtoa@d+4,dtoa@n+4
 10014  002D32  C026  F03E         	movff	dtoa@d+5,dtoa@n+5
 10015  002D36  C027  F03F         	movff	dtoa@d+6,dtoa@n+6
 10016  002D3A  C028  F040         	movff	dtoa@d+7,dtoa@n+7
 10017  002D3E                     
 10018                           ;/Applications/microchip/xc8/v2.31/pic/sources/c99/common/doprnt.c: 294:     s = n < 0 ?
      +                           1 : 0;
 10019  002D3E  BE40               	btfsc	(dtoa@n+7)^0,7,c
 10020  002D40  EFA4  F016         	goto	u4971
 10021  002D44  EFA7  F016         	goto	u4970
 10022  002D48                     u4971:
 10023  002D48  0E01               	movlw	1
 10024  002D4A  EFA8  F016         	goto	u4980
 10025  002D4E                     u4970:
 10026  002D4E  0E00               	movlw	0
 10027  002D50                     u4980:
 10028  002D50  6E37               	movwf	dtoa@s^0,c
 10029  002D52  6A38               	clrf	(dtoa@s+1)^0,c
 10030                           
 10031                           ;/Applications/microchip/xc8/v2.31/pic/sources/c99/common/doprnt.c: 295:     if (s) {
 10032  002D54  5037               	movf	dtoa@s^0,w,c
 10033  002D56  1038               	iorwf	(dtoa@s+1)^0,w,c
 10034  002D58  B4D8               	btfsc	status,2,c
 10035  002D5A  EFB1  F016         	goto	u4991
 10036  002D5E  EFB3  F016         	goto	u4990
 10037  002D62                     u4991:
 10038  002D62  EFC3  F016         	goto	l4127
 10039  002D66                     u4990:
 10040  002D66                     
 10041                           ;/Applications/microchip/xc8/v2.31/pic/sources/c99/common/doprnt.c: 296:         n = -n;
 10042  002D66  1E40               	comf	(dtoa@n+7)^0,f,c
 10043  002D68  1E3F               	comf	(dtoa@n+6)^0,f,c
 10044  002D6A  1E3E               	comf	(dtoa@n+5)^0,f,c
 10045  002D6C  1E3D               	comf	(dtoa@n+4)^0,f,c
 10046  002D6E  1E3C               	comf	(dtoa@n+3)^0,f,c
 10047  002D70  1E3B               	comf	(dtoa@n+2)^0,f,c
 10048  002D72  1E3A               	comf	(dtoa@n+1)^0,f,c
 10049  002D74  6C39               	negf	dtoa@n^0,c
 10050  002D76  0E00               	movlw	0
 10051  002D78  223A               	addwfc	(dtoa@n+1)^0,f,c
 10052  002D7A  223B               	addwfc	(dtoa@n+2)^0,f,c
 10053  002D7C  223C               	addwfc	(dtoa@n+3)^0,f,c
 10054  002D7E  223D               	addwfc	(dtoa@n+4)^0,f,c
 10055  002D80  223E               	addwfc	(dtoa@n+5)^0,f,c
 10056  002D82  223F               	addwfc	(dtoa@n+6)^0,f,c
 10057  002D84  2240               	addwfc	(dtoa@n+7)^0,f,c
 10058  002D86                     l4127:
 10059                           
 10060                           ;/Applications/microchip/xc8/v2.31/pic/sources/c99/common/doprnt.c: 300:     if (!(prec 
      +                          < 0)) {
 10061  002D86  0100               	movlb	0	; () banked
 10062  002D88  BFD1               	btfsc	(_prec+1)& (0+255),7,b
 10063  002D8A  EFC9  F016         	goto	u5001
 10064  002D8E  EFCB  F016         	goto	u5000
 10065  002D92                     u5001:
 10066  002D92  EFCC  F016         	goto	l4131
 10067  002D96                     u5000:
 10068  002D96                     
 10069                           ; BSR set to: 0
 10070                           ;/Applications/microchip/xc8/v2.31/pic/sources/c99/common/doprnt.c: 301:         flags &
      +                          = ~(1 << 1);
 10071  002D96  93D2               	bcf	_flags& (0+255),1,b
 10072  002D98                     l4131:
 10073                           
 10074                           ; BSR set to: 0
 10075                           ;/Applications/microchip/xc8/v2.31/pic/sources/c99/common/doprnt.c: 303:     p = (0 < pr
      +                          ec) ? prec : 1;
 10076  002D98  BFD1               	btfsc	(_prec+1)& (0+255),7,b
 10077  002D9A  EFD9  F016         	goto	u5010
 10078  002D9E  51D1               	movf	(_prec+1)& (0+255),w,b
 10079  002DA0  E106               	bnz	u5011
 10080  002DA2  05D0               	decf	_prec& (0+255),w,b
 10081  002DA4  B0D8               	btfsc	status,0,c
 10082  002DA6  EFD7  F016         	goto	u5011
 10083  002DAA  EFD9  F016         	goto	u5010
 10084  002DAE                     u5011:
 10085  002DAE  EFDF  F016         	goto	l951
 10086  002DB2                     u5010:
 10087  002DB2                     
 10088                           ; BSR set to: 0
 10089  002DB2  0E00               	movlw	0
 10090  002DB4  6E34               	movwf	(dtoa@p+1)^0,c
 10091  002DB6  0E01               	movlw	1
 10092  002DB8  6E33               	movwf	dtoa@p^0,c
 10093  002DBA  EFE3  F016         	goto	l953
 10094  002DBE                     l951:
 10095                           
 10096                           ; BSR set to: 0
 10097  002DBE  C0D0  F033         	movff	_prec,dtoa@p
 10098  002DC2  C0D1  F034         	movff	_prec+1,dtoa@p+1
 10099  002DC6                     l953:
 10100                           
 10101                           ; BSR set to: 0
 10102                           ;/Applications/microchip/xc8/v2.31/pic/sources/c99/common/doprnt.c: 304:     w = width;
 10103  002DC6  C0CE  F035         	movff	_width,dtoa@w
 10104  002DCA  C0CF  F036         	movff	_width+1,dtoa@w+1
 10105  002DCE                     
 10106                           ; BSR set to: 0
 10107                           ;/Applications/microchip/xc8/v2.31/pic/sources/c99/common/doprnt.c: 305:     if (s || (f
      +                          lags & (1 << 2))) {
 10108  002DCE  5037               	movf	dtoa@s^0,w,c
 10109  002DD0  1038               	iorwf	(dtoa@s+1)^0,w,c
 10110  002DD2  A4D8               	btfss	status,2,c
 10111  002DD4  EFEE  F016         	goto	u5021
 10112  002DD8  EFF0  F016         	goto	u5020
 10113  002DDC                     u5021:
 10114  002DDC  EFF7  F016         	goto	l4139
 10115  002DE0                     u5020:
 10116  002DE0                     
 10117                           ; BSR set to: 0
 10118  002DE0  A5D2               	btfss	_flags& (0+255),2,b
 10119  002DE2  EFF5  F016         	goto	u5031
 10120  002DE6  EFF7  F016         	goto	u5030
 10121  002DEA                     u5031:
 10122  002DEA  EFFA  F016         	goto	l4141
 10123  002DEE                     u5030:
 10124  002DEE                     l4139:
 10125                           
 10126                           ; BSR set to: 0
 10127                           ;/Applications/microchip/xc8/v2.31/pic/sources/c99/common/doprnt.c: 306:         --w;
 10128  002DEE  0635               	decf	dtoa@w^0,f,c
 10129  002DF0  A0D8               	btfss	status,0,c
 10130  002DF2  0636               	decf	(dtoa@w+1)^0,f,c
 10131  002DF4                     l4141:
 10132                           
 10133                           ; BSR set to: 0
 10134                           ;/Applications/microchip/xc8/v2.31/pic/sources/c99/common/doprnt.c: 310:     i = sizeof(
      +                          dbuf) - 1;
 10135  002DF4  0E00               	movlw	0
 10136  002DF6  6E42               	movwf	(dtoa@i+1)^0,c
 10137  002DF8  0E4F               	movlw	79
 10138  002DFA  6E41               	movwf	dtoa@i^0,c
 10139  002DFC                     
 10140                           ; BSR set to: 0
 10141                           ;/Applications/microchip/xc8/v2.31/pic/sources/c99/common/doprnt.c: 311:     dbuf[i] = '
      +                          \0';
 10142  002DFC  0E00               	movlw	0
 10143  002DFE  0101               	movlb	1	; () banked
 10144  002E00  6F5F               	movwf	(_dbuf+79)& (0+255),b
 10145                           
 10146                           ;/Applications/microchip/xc8/v2.31/pic/sources/c99/common/doprnt.c: 312:     while (!(i 
      +                          < 1) && (n || (0 < p) || ((0 < w) && (flags & (1 << 1))))) {
 10147  002E02  EF7F  F017         	goto	l4155
 10148  002E06                     l4145:
 10149                           
 10150                           ;/Applications/microchip/xc8/v2.31/pic/sources/c99/common/doprnt.c: 313:         --i;
 10151  002E06  0641               	decf	dtoa@i^0,f,c
 10152  002E08  A0D8               	btfss	status,0,c
 10153  002E0A  0642               	decf	(dtoa@i+1)^0,f,c
 10154  002E0C                     
 10155                           ;/Applications/microchip/xc8/v2.31/pic/sources/c99/common/doprnt.c: 314:         dbuf[i]
      +                           = (char)((int)'0' + abs(n % 10));
 10156  002E0C  0E10               	movlw	low _dbuf
 10157  002E0E  2441               	addwf	dtoa@i^0,w,c
 10158  002E10  6ED9               	movwf	fsr2l,c
 10159  002E12  0E01               	movlw	high _dbuf
 10160  002E14  2042               	addwfc	(dtoa@i+1)^0,w,c
 10161  002E16  6EDA               	movwf	fsr2h,c
 10162  002E18  C039  F001         	movff	dtoa@n,___aomod@dividend
 10163  002E1C  C03A  F002         	movff	dtoa@n+1,___aomod@dividend+1
 10164  002E20  C03B  F003         	movff	dtoa@n+2,___aomod@dividend+2
 10165  002E24  C03C  F004         	movff	dtoa@n+3,___aomod@dividend+3
 10166  002E28  C03D  F005         	movff	dtoa@n+4,___aomod@dividend+4
 10167  002E2C  C03E  F006         	movff	dtoa@n+5,___aomod@dividend+5
 10168  002E30  C03F  F007         	movff	dtoa@n+6,___aomod@dividend+6
 10169  002E34  C040  F008         	movff	dtoa@n+7,___aomod@dividend+7
 10170  002E38  0E0A               	movlw	10
 10171  002E3A  6E09               	movwf	___aomod@divisor^0,c
 10172  002E3C  0E00               	movlw	0
 10173  002E3E  6E0A               	movwf	(___aomod@divisor+1)^0,c
 10174  002E40  0E00               	movlw	0
 10175  002E42  6E0B               	movwf	(___aomod@divisor+2)^0,c
 10176  002E44  0E00               	movlw	0
 10177  002E46  6E0C               	movwf	(___aomod@divisor+3)^0,c
 10178  002E48  0E00               	movlw	0
 10179  002E4A  6E0D               	movwf	(___aomod@divisor+4)^0,c
 10180  002E4C  0E00               	movlw	0
 10181  002E4E  6E0E               	movwf	(___aomod@divisor+5)^0,c
 10182  002E50  0E00               	movlw	0
 10183  002E52  6E0F               	movwf	(___aomod@divisor+6)^0,c
 10184  002E54  0E00               	movlw	0
 10185  002E56  6E10               	movwf	(___aomod@divisor+7)^0,c
 10186  002E58  ECDF  F01C         	call	___aomod	;wreg free
 10187  002E5C  C001  F029         	movff	?___aomod,??_dtoa
 10188  002E60  C002  F02A         	movff	?___aomod+1,??_dtoa+1
 10189  002E64  C003  F02B         	movff	?___aomod+2,??_dtoa+2
 10190  002E68  C004  F02C         	movff	?___aomod+3,??_dtoa+3
 10191  002E6C  C005  F02D         	movff	?___aomod+4,??_dtoa+4
 10192  002E70  C006  F02E         	movff	?___aomod+5,??_dtoa+5
 10193  002E74  C007  F02F         	movff	?___aomod+6,??_dtoa+6
 10194  002E78  C008  F030         	movff	?___aomod+7,??_dtoa+7
 10195  002E7C  C029  F013         	movff	??_dtoa,abs@a
 10196  002E80  C02B  F014         	movff	??_dtoa+2,abs@a+1
 10197  002E84  ECB2  F025         	call	_abs	;wreg free
 10198  002E88  5013               	movf	?_abs^0,w,c
 10199  002E8A  0F30               	addlw	48
 10200  002E8C  6EDF               	movwf	indf2,c
 10201  002E8E                     
 10202                           ;/Applications/microchip/xc8/v2.31/pic/sources/c99/common/doprnt.c: 315:         --p;
 10203  002E8E  0633               	decf	dtoa@p^0,f,c
 10204  002E90  A0D8               	btfss	status,0,c
 10205  002E92  0634               	decf	(dtoa@p+1)^0,f,c
 10206  002E94                     
 10207                           ;/Applications/microchip/xc8/v2.31/pic/sources/c99/common/doprnt.c: 316:         --w;
 10208  002E94  0635               	decf	dtoa@w^0,f,c
 10209  002E96  A0D8               	btfss	status,0,c
 10210  002E98  0636               	decf	(dtoa@w+1)^0,f,c
 10211  002E9A                     
 10212                           ;/Applications/microchip/xc8/v2.31/pic/sources/c99/common/doprnt.c: 317:         n = n /
      +                           10;
 10213  002E9A  C039  F001         	movff	dtoa@n,___aodiv@dividend
 10214  002E9E  C03A  F002         	movff	dtoa@n+1,___aodiv@dividend+1
 10215  002EA2  C03B  F003         	movff	dtoa@n+2,___aodiv@dividend+2
 10216  002EA6  C03C  F004         	movff	dtoa@n+3,___aodiv@dividend+3
 10217  002EAA  C03D  F005         	movff	dtoa@n+4,___aodiv@dividend+4
 10218  002EAE  C03E  F006         	movff	dtoa@n+5,___aodiv@dividend+5
 10219  002EB2  C03F  F007         	movff	dtoa@n+6,___aodiv@dividend+6
 10220  002EB6  C040  F008         	movff	dtoa@n+7,___aodiv@dividend+7
 10221  002EBA  0E0A               	movlw	10
 10222  002EBC  6E09               	movwf	___aodiv@divisor^0,c
 10223  002EBE  0E00               	movlw	0
 10224  002EC0  6E0A               	movwf	(___aodiv@divisor+1)^0,c
 10225  002EC2  0E00               	movlw	0
 10226  002EC4  6E0B               	movwf	(___aodiv@divisor+2)^0,c
 10227  002EC6  0E00               	movlw	0
 10228  002EC8  6E0C               	movwf	(___aodiv@divisor+3)^0,c
 10229  002ECA  0E00               	movlw	0
 10230  002ECC  6E0D               	movwf	(___aodiv@divisor+4)^0,c
 10231  002ECE  0E00               	movlw	0
 10232  002ED0  6E0E               	movwf	(___aodiv@divisor+5)^0,c
 10233  002ED2  0E00               	movlw	0
 10234  002ED4  6E0F               	movwf	(___aodiv@divisor+6)^0,c
 10235  002ED6  0E00               	movlw	0
 10236  002ED8  6E10               	movwf	(___aodiv@divisor+7)^0,c
 10237  002EDA  EC1B  F01C         	call	___aodiv	;wreg free
 10238  002EDE  C001  F039         	movff	?___aodiv,dtoa@n
 10239  002EE2  C002  F03A         	movff	?___aodiv+1,dtoa@n+1
 10240  002EE6  C003  F03B         	movff	?___aodiv+2,dtoa@n+2
 10241  002EEA  C004  F03C         	movff	?___aodiv+3,dtoa@n+3
 10242  002EEE  C005  F03D         	movff	?___aodiv+4,dtoa@n+4
 10243  002EF2  C006  F03E         	movff	?___aodiv+5,dtoa@n+5
 10244  002EF6  C007  F03F         	movff	?___aodiv+6,dtoa@n+6
 10245  002EFA  C008  F040         	movff	?___aodiv+7,dtoa@n+7
 10246  002EFE                     l4155:
 10247                           
 10248                           ;/Applications/microchip/xc8/v2.31/pic/sources/c99/common/doprnt.c: 312:     while (!(i 
      +                          < 1) && (n || (0 < p) || ((0 < w) && (flags & (1 << 1))))) {
 10249  002EFE  BE42               	btfsc	(dtoa@i+1)^0,7,c
 10250  002F00  EF8A  F017         	goto	u5041
 10251  002F04  5042               	movf	(dtoa@i+1)^0,w,c
 10252  002F06  E108               	bnz	u5040
 10253  002F08  0441               	decf	dtoa@i^0,w,c
 10254  002F0A  A0D8               	btfss	status,0,c
 10255  002F0C  EF8A  F017         	goto	u5041
 10256  002F10  EF8C  F017         	goto	u5040
 10257  002F14                     u5041:
 10258  002F14  EFBD  F017         	goto	l4165
 10259  002F18                     u5040:
 10260  002F18  5039               	movf	dtoa@n^0,w,c
 10261  002F1A  103A               	iorwf	(dtoa@n+1)^0,w,c
 10262  002F1C  103B               	iorwf	(dtoa@n+2)^0,w,c
 10263  002F1E  103C               	iorwf	(dtoa@n+3)^0,w,c
 10264  002F20  103D               	iorwf	(dtoa@n+4)^0,w,c
 10265  002F22  103E               	iorwf	(dtoa@n+5)^0,w,c
 10266  002F24  103F               	iorwf	(dtoa@n+6)^0,w,c
 10267  002F26  1040               	iorwf	(dtoa@n+7)^0,w,c
 10268  002F28  A4D8               	btfss	status,2,c
 10269  002F2A  EF99  F017         	goto	u5051
 10270  002F2E  EF9B  F017         	goto	u5050
 10271  002F32                     u5051:
 10272  002F32  EF03  F017         	goto	l4145
 10273  002F36                     u5050:
 10274  002F36  BE34               	btfsc	(dtoa@p+1)^0,7,c
 10275  002F38  EFA8  F017         	goto	u5060
 10276  002F3C  5034               	movf	(dtoa@p+1)^0,w,c
 10277  002F3E  E106               	bnz	u5061
 10278  002F40  0433               	decf	dtoa@p^0,w,c
 10279  002F42  B0D8               	btfsc	status,0,c
 10280  002F44  EFA6  F017         	goto	u5061
 10281  002F48  EFA8  F017         	goto	u5060
 10282  002F4C                     u5061:
 10283  002F4C  EF03  F017         	goto	l4145
 10284  002F50                     u5060:
 10285  002F50  BE36               	btfsc	(dtoa@w+1)^0,7,c
 10286  002F52  EFB3  F017         	goto	u5071
 10287  002F56  5036               	movf	(dtoa@w+1)^0,w,c
 10288  002F58  E108               	bnz	u5070
 10289  002F5A  0435               	decf	dtoa@w^0,w,c
 10290  002F5C  A0D8               	btfss	status,0,c
 10291  002F5E  EFB3  F017         	goto	u5071
 10292  002F62  EFB5  F017         	goto	u5070
 10293  002F66                     u5071:
 10294  002F66  EFBD  F017         	goto	l4165
 10295  002F6A                     u5070:
 10296  002F6A  0100               	movlb	0	; () banked
 10297  002F6C  B3D2               	btfsc	_flags& (0+255),1,b
 10298  002F6E  EFBB  F017         	goto	u5081
 10299  002F72  EFBD  F017         	goto	u5080
 10300  002F76                     u5081:
 10301  002F76  EF03  F017         	goto	l4145
 10302  002F7A                     u5080:
 10303  002F7A                     l4165:
 10304                           
 10305                           ;/Applications/microchip/xc8/v2.31/pic/sources/c99/common/doprnt.c: 321:     if (s || (f
      +                          lags & (1 << 2))) {
 10306  002F7A  5037               	movf	dtoa@s^0,w,c
 10307  002F7C  1038               	iorwf	(dtoa@s+1)^0,w,c
 10308  002F7E  A4D8               	btfss	status,2,c
 10309  002F80  EFC4  F017         	goto	u5091
 10310  002F84  EFC6  F017         	goto	u5090
 10311  002F88                     u5091:
 10312  002F88  EFCE  F017         	goto	l4169
 10313  002F8C                     u5090:
 10314  002F8C  0100               	movlb	0	; () banked
 10315  002F8E  A5D2               	btfss	_flags& (0+255),2,b
 10316  002F90  EFCC  F017         	goto	u5101
 10317  002F94  EFCE  F017         	goto	u5100
 10318  002F98                     u5101:
 10319  002F98  EFEC  F017         	goto	l4179
 10320  002F9C                     u5100:
 10321  002F9C                     l4169:
 10322                           
 10323                           ;/Applications/microchip/xc8/v2.31/pic/sources/c99/common/doprnt.c: 322:         --i;
 10324  002F9C  0641               	decf	dtoa@i^0,f,c
 10325  002F9E  A0D8               	btfss	status,0,c
 10326  002FA0  0642               	decf	(dtoa@i+1)^0,f,c
 10327  002FA2                     
 10328                           ;/Applications/microchip/xc8/v2.31/pic/sources/c99/common/doprnt.c: 323:         dbuf[i]
      +                           = s ? '-' : '+';
 10329  002FA2  5037               	movf	dtoa@s^0,w,c
 10330  002FA4  1038               	iorwf	(dtoa@s+1)^0,w,c
 10331  002FA6  A4D8               	btfss	status,2,c
 10332  002FA8  EFD8  F017         	goto	u5111
 10333  002FAC  EFDA  F017         	goto	u5110
 10334  002FB0                     u5111:
 10335  002FB0  EFE0  F017         	goto	l4175
 10336  002FB4                     u5110:
 10337  002FB4  0E00               	movlw	0
 10338  002FB6  6E32               	movwf	(_dtoa$1220+1)^0,c
 10339  002FB8  0E2B               	movlw	43
 10340  002FBA  6E31               	movwf	_dtoa$1220^0,c
 10341  002FBC  EFE4  F017         	goto	l4177
 10342  002FC0                     l4175:
 10343  002FC0  0E00               	movlw	0
 10344  002FC2  6E32               	movwf	(_dtoa$1220+1)^0,c
 10345  002FC4  0E2D               	movlw	45
 10346  002FC6  6E31               	movwf	_dtoa$1220^0,c
 10347  002FC8                     l4177:
 10348  002FC8  0E10               	movlw	low _dbuf
 10349  002FCA  2441               	addwf	dtoa@i^0,w,c
 10350  002FCC  6ED9               	movwf	fsr2l,c
 10351  002FCE  0E01               	movlw	high _dbuf
 10352  002FD0  2042               	addwfc	(dtoa@i+1)^0,w,c
 10353  002FD2  6EDA               	movwf	fsr2h,c
 10354  002FD4  C031  FFDF         	movff	_dtoa$1220,indf2
 10355  002FD8                     l4179:
 10356                           
 10357                           ;/Applications/microchip/xc8/v2.31/pic/sources/c99/common/doprnt.c: 327:     return pad(
      +                          fp, &dbuf[i], w);
 10358  002FD8  C01F  F014         	movff	dtoa@fp,pad@fp
 10359  002FDC  C020  F015         	movff	dtoa@fp+1,pad@fp+1
 10360  002FE0  0E10               	movlw	low _dbuf
 10361  002FE2  2441               	addwf	dtoa@i^0,w,c
 10362  002FE4  6E16               	movwf	pad@buf^0,c
 10363  002FE6  0E01               	movlw	high _dbuf
 10364  002FE8  2042               	addwfc	(dtoa@i+1)^0,w,c
 10365  002FEA  6E17               	movwf	(pad@buf+1)^0,c
 10366  002FEC  C035  F018         	movff	dtoa@w,pad@p
 10367  002FF0  C036  F019         	movff	dtoa@w+1,pad@p+1
 10368  002FF4  EC7D  F021         	call	_pad	;wreg free
 10369  002FF8  C014  F01F         	movff	?_pad,?_dtoa
 10370  002FFC  C015  F020         	movff	?_pad+1,?_dtoa+1
 10371  003000  0012               	return		;funcret
 10372  003002                     __end_of_dtoa:
 10373                           	callstack 0
 10374                           
 10375 ;; *************** function _pad *****************
 10376 ;; Defined at:
 10377 ;;		line 72 in file "/Applications/microchip/xc8/v2.31/pic/sources/c99/common/doprnt.c"
 10378 ;; Parameters:    Size  Location     Type
 10379 ;;  fp              2   19[COMRAM] PTR struct _IO_FILE
 10380 ;;		 -> NULL(0), sprintf@f(6), 
 10381 ;;  buf             2   21[COMRAM] PTR unsigned char 
 10382 ;;		 -> dbuf(80), 
 10383 ;;  p               2   23[COMRAM] int 
 10384 ;; Auto vars:     Size  Location     Type
 10385 ;;  w               2   28[COMRAM] int 
 10386 ;;  i               2   26[COMRAM] int 
 10387 ;; Return value:  Size  Location     Type
 10388 ;;                  2   19[COMRAM] int 
 10389 ;; Registers used:
 10390 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
 10391 ;; Tracked objects:
 10392 ;;		On entry : 0/0
 10393 ;;		On exit  : 0/0
 10394 ;;		Unchanged: 0/0
 10395 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 10396 ;;      Params:         6       0       0       0       0       0       0       0       0
 10397 ;;      Locals:         4       0       0       0       0       0       0       0       0
 10398 ;;      Temps:          1       0       0       0       0       0       0       0       0
 10399 ;;      Totals:        11       0       0       0       0       0       0       0       0
 10400 ;;Total ram usage:       11 bytes
 10401 ;; Hardware stack levels used:    1
 10402 ;; Hardware stack levels required when called:    3
 10403 ;; This function calls:
 10404 ;;		_fputc
 10405 ;;		_fputs
 10406 ;;		_strlen
 10407 ;; This function is called by:
 10408 ;;		_dtoa
 10409 ;;		_efgtoa
 10410 ;; This function uses a non-reentrant model
 10411 ;;
 10412                           
 10413                           	psect	text38
 10414  0042FA                     __ptext38:
 10415                           	callstack 0
 10416  0042FA                     _pad:
 10417                           	callstack 22
 10418  0042FA                     
 10419                           ;/Applications/microchip/xc8/v2.31/pic/sources/c99/common/doprnt.c: 72: static int pad(F
      +                          ILE *fp, char *buf, int p);/Applications/microchip/xc8/v2.31/pic/sources/c99/common/dopr
      +                          nt.c: 73: {;/Applications/microchip/xc8/v2.31/pic/sources/c99/common/doprnt.c: 74:     i
      +                          nt i, w;;/Applications/microchip/xc8/v2.31/pic/sources/c99/common/doprnt.c: 77:     if (
      +                          flags & (1 << 0)) {
 10420  0042FA  0100               	movlb	0	; () banked
 10421  0042FC  A1D2               	btfss	_flags& (0+255),0,b
 10422  0042FE  EF83  F021         	goto	u4611
 10423  004302  EF85  F021         	goto	u4610
 10424  004306                     u4611:
 10425  004306  EF8F  F021         	goto	l3991
 10426  00430A                     u4610:
 10427  00430A                     
 10428                           ; BSR set to: 0
 10429                           ;/Applications/microchip/xc8/v2.31/pic/sources/c99/common/doprnt.c: 78:         fputs((c
      +                          onst char *)buf, fp);
 10430  00430A  C016  F00D         	movff	pad@buf,fputs@s
 10431  00430E  C017  F00E         	movff	pad@buf+1,fputs@s+1
 10432  004312  C014  F00F         	movff	pad@fp,fputs@fp
 10433  004316  C015  F010         	movff	pad@fp+1,fputs@fp+1
 10434  00431A  EC6F  F025         	call	_fputs	;wreg free
 10435  00431E                     l3991:
 10436                           
 10437                           ;/Applications/microchip/xc8/v2.31/pic/sources/c99/common/doprnt.c: 82:     w = (p < 0) 
      +                          ? 0 : p;
 10438  00431E  BE19               	btfsc	(pad@p+1)^0,7,c
 10439  004320  EF94  F021         	goto	u4621
 10440  004324  EF96  F021         	goto	u4620
 10441  004328                     u4621:
 10442  004328  EF9C  F021         	goto	l3995
 10443  00432C                     u4620:
 10444  00432C  C018  F01D         	movff	pad@p,pad@w
 10445  004330  C019  F01E         	movff	pad@p+1,pad@w+1
 10446  004334  EFA0  F021         	goto	l924
 10447  004338                     l3995:
 10448  004338  0E00               	movlw	0
 10449  00433A  6E1E               	movwf	(pad@w+1)^0,c
 10450  00433C  0E00               	movlw	0
 10451  00433E  6E1D               	movwf	pad@w^0,c
 10452  004340                     l924:
 10453                           
 10454                           ;/Applications/microchip/xc8/v2.31/pic/sources/c99/common/doprnt.c: 83:     i = 0;
 10455  004340  0E00               	movlw	0
 10456  004342  6E1C               	movwf	(pad@i+1)^0,c
 10457  004344  0E00               	movlw	0
 10458  004346  6E1B               	movwf	pad@i^0,c
 10459                           
 10460                           ;/Applications/microchip/xc8/v2.31/pic/sources/c99/common/doprnt.c: 84:     while (i < w
      +                          ) {
 10461  004348  EFB2  F021         	goto	l4001
 10462  00434C                     l3997:
 10463                           
 10464                           ;/Applications/microchip/xc8/v2.31/pic/sources/c99/common/doprnt.c: 85:         fputc(' 
      +                          ', fp);
 10465  00434C  0E00               	movlw	0
 10466  00434E  6E05               	movwf	(fputc@c+1)^0,c
 10467  004350  0E20               	movlw	32
 10468  004352  6E04               	movwf	fputc@c^0,c
 10469  004354  C014  F006         	movff	pad@fp,fputc@fp
 10470  004358  C015  F007         	movff	pad@fp+1,fputc@fp+1
 10471  00435C  EC18  F021         	call	_fputc	;wreg free
 10472  004360                     
 10473                           ;/Applications/microchip/xc8/v2.31/pic/sources/c99/common/doprnt.c: 86:         ++i;
 10474  004360  4A1B               	infsnz	pad@i^0,f,c
 10475  004362  2A1C               	incf	(pad@i+1)^0,f,c
 10476  004364                     l4001:
 10477                           
 10478                           ;/Applications/microchip/xc8/v2.31/pic/sources/c99/common/doprnt.c: 84:     while (i < w
      +                          ) {
 10479  004364  501D               	movf	pad@w^0,w,c
 10480  004366  5C1B               	subwf	pad@i^0,w,c
 10481  004368  501C               	movf	(pad@i+1)^0,w,c
 10482  00436A  0A80               	xorlw	128
 10483  00436C  6E1A               	movwf	??_pad^0,c
 10484  00436E  501E               	movf	(pad@w+1)^0,w,c
 10485  004370  0A80               	xorlw	128
 10486  004372  581A               	subwfb	??_pad^0,w,c
 10487  004374  A0D8               	btfss	status,0,c
 10488  004376  EFBF  F021         	goto	u4631
 10489  00437A  EFC1  F021         	goto	u4630
 10490  00437E                     u4631:
 10491  00437E  EFA6  F021         	goto	l3997
 10492  004382                     u4630:
 10493  004382                     
 10494                           ;/Applications/microchip/xc8/v2.31/pic/sources/c99/common/doprnt.c: 90:     if (!(flags 
      +                          & (1 << 0))) {
 10495  004382  0100               	movlb	0	; () banked
 10496  004384  B1D2               	btfsc	_flags& (0+255),0,b
 10497  004386  EFC7  F021         	goto	u4641
 10498  00438A  EFC9  F021         	goto	u4640
 10499  00438E                     u4641:
 10500  00438E  EFD3  F021         	goto	l4005
 10501  004392                     u4640:
 10502  004392                     
 10503                           ; BSR set to: 0
 10504                           ;/Applications/microchip/xc8/v2.31/pic/sources/c99/common/doprnt.c: 91:         fputs((c
      +                          onst char *)buf, fp);
 10505  004392  C016  F00D         	movff	pad@buf,fputs@s
 10506  004396  C017  F00E         	movff	pad@buf+1,fputs@s+1
 10507  00439A  C014  F00F         	movff	pad@fp,fputs@fp
 10508  00439E  C015  F010         	movff	pad@fp+1,fputs@fp+1
 10509  0043A2  EC6F  F025         	call	_fputs	;wreg free
 10510  0043A6                     l4005:
 10511                           
 10512                           ;/Applications/microchip/xc8/v2.31/pic/sources/c99/common/doprnt.c: 94:     return (int)
      +                          (strlen(buf) + (size_t)w);
 10513  0043A6  C016  F001         	movff	pad@buf,strlen@s
 10514  0043AA  C017  F002         	movff	pad@buf+1,strlen@s+1
 10515  0043AE  EC26  F026         	call	_strlen	;wreg free
 10516  0043B2  501D               	movf	pad@w^0,w,c
 10517  0043B4  2401               	addwf	?_strlen^0,w,c
 10518  0043B6  6E14               	movwf	?_pad^0,c
 10519  0043B8  501E               	movf	(pad@w+1)^0,w,c
 10520  0043BA  2002               	addwfc	(?_strlen+1)^0,w,c
 10521  0043BC  6E15               	movwf	(?_pad+1)^0,c
 10522  0043BE  0012               	return		;funcret
 10523  0043C0                     __end_of_pad:
 10524                           	callstack 0
 10525                           
 10526 ;; *************** function _strlen *****************
 10527 ;; Defined at:
 10528 ;;		line 5 in file "/Applications/microchip/xc8/v2.31/pic/sources/c99/common/strlen.c"
 10529 ;; Parameters:    Size  Location     Type
 10530 ;;  s               2    0[COMRAM] PTR const unsigned char 
 10531 ;;		 -> dbuf(80), 
 10532 ;; Auto vars:     Size  Location     Type
 10533 ;;  a               2    2[COMRAM] PTR const unsigned char 
 10534 ;;		 -> dbuf(80), 
 10535 ;; Return value:  Size  Location     Type
 10536 ;;                  2    0[COMRAM] unsigned int 
 10537 ;; Registers used:
 10538 ;;		wreg, fsr2l, fsr2h, status,2, status,0
 10539 ;; Tracked objects:
 10540 ;;		On entry : 0/0
 10541 ;;		On exit  : 0/0
 10542 ;;		Unchanged: 0/0
 10543 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 10544 ;;      Params:         2       0       0       0       0       0       0       0       0
 10545 ;;      Locals:         2       0       0       0       0       0       0       0       0
 10546 ;;      Temps:          0       0       0       0       0       0       0       0       0
 10547 ;;      Totals:         4       0       0       0       0       0       0       0       0
 10548 ;;Total ram usage:        4 bytes
 10549 ;; Hardware stack levels used:    1
 10550 ;; This function calls:
 10551 ;;		Nothing
 10552 ;; This function is called by:
 10553 ;;		_pad
 10554 ;; This function uses a non-reentrant model
 10555 ;;
 10556                           
 10557                           	psect	text39
 10558  004C4C                     __ptext39:
 10559                           	callstack 0
 10560  004C4C                     _strlen:
 10561                           	callstack 24
 10562  004C4C  C001  F003         	movff	strlen@s,strlen@a
 10563  004C50  C002  F004         	movff	strlen@s+1,strlen@a+1
 10564  004C54  EF2E  F026         	goto	l3447
 10565  004C58                     l3445:
 10566  004C58  4A01               	infsnz	strlen@s^0,f,c
 10567  004C5A  2A02               	incf	(strlen@s+1)^0,f,c
 10568  004C5C                     l3447:
 10569  004C5C  C001  FFD9         	movff	strlen@s,fsr2l
 10570  004C60  C002  FFDA         	movff	strlen@s+1,fsr2h
 10571  004C64  50DF               	movf	indf2,w,c
 10572  004C66  A4D8               	btfss	status,2,c
 10573  004C68  EF38  F026         	goto	u3751
 10574  004C6C  EF3A  F026         	goto	u3750
 10575  004C70                     u3751:
 10576  004C70  EF2C  F026         	goto	l3445
 10577  004C74                     u3750:
 10578  004C74  5003               	movf	strlen@a^0,w,c
 10579  004C76  5C01               	subwf	strlen@s^0,w,c
 10580  004C78  6E01               	movwf	?_strlen^0,c
 10581  004C7A  5004               	movf	(strlen@a+1)^0,w,c
 10582  004C7C  5802               	subwfb	(strlen@s+1)^0,w,c
 10583  004C7E  6E02               	movwf	(?_strlen+1)^0,c
 10584  004C80  0012               	return		;funcret
 10585  004C82                     __end_of_strlen:
 10586                           	callstack 0
 10587                           
 10588 ;; *************** function _fputs *****************
 10589 ;; Defined at:
 10590 ;;		line 8 in file "/Applications/microchip/xc8/v2.31/pic/sources/c99/common/nf_fputs.c"
 10591 ;; Parameters:    Size  Location     Type
 10592 ;;  s               2   12[COMRAM] PTR const unsigned char 
 10593 ;;		 -> dbuf(80), 
 10594 ;;  fp              2   14[COMRAM] PTR struct _IO_FILE
 10595 ;;		 -> NULL(0), sprintf@f(6), 
 10596 ;; Auto vars:     Size  Location     Type
 10597 ;;  i               2   17[COMRAM] int 
 10598 ;;  c               1   16[COMRAM] unsigned char 
 10599 ;; Return value:  Size  Location     Type
 10600 ;;                  2   12[COMRAM] int 
 10601 ;; Registers used:
 10602 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
 10603 ;; Tracked objects:
 10604 ;;		On entry : 0/0
 10605 ;;		On exit  : 0/0
 10606 ;;		Unchanged: 0/0
 10607 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 10608 ;;      Params:         4       0       0       0       0       0       0       0       0
 10609 ;;      Locals:         3       0       0       0       0       0       0       0       0
 10610 ;;      Temps:          0       0       0       0       0       0       0       0       0
 10611 ;;      Totals:         7       0       0       0       0       0       0       0       0
 10612 ;;Total ram usage:        7 bytes
 10613 ;; Hardware stack levels used:    1
 10614 ;; Hardware stack levels required when called:    2
 10615 ;; This function calls:
 10616 ;;		_fputc
 10617 ;; This function is called by:
 10618 ;;		_pad
 10619 ;; This function uses a non-reentrant model
 10620 ;;
 10621                           
 10622                           	psect	text40
 10623  004ADE                     __ptext40:
 10624                           	callstack 0
 10625  004ADE                     _fputs:
 10626                           	callstack 22
 10627  004ADE  0E00               	movlw	0
 10628  004AE0  6E13               	movwf	(fputs@i+1)^0,c
 10629  004AE2  0E00               	movlw	0
 10630  004AE4  6E12               	movwf	fputs@i^0,c
 10631  004AE6  EF80  F025         	goto	l3441
 10632  004AEA                     l3437:
 10633  004AEA  C011  F004         	movff	fputs@c,fputc@c
 10634  004AEE  6A05               	clrf	(fputc@c+1)^0,c
 10635  004AF0  C00F  F006         	movff	fputs@fp,fputc@fp
 10636  004AF4  C010  F007         	movff	fputs@fp+1,fputc@fp+1
 10637  004AF8  EC18  F021         	call	_fputc	;wreg free
 10638  004AFC  4A12               	infsnz	fputs@i^0,f,c
 10639  004AFE  2A13               	incf	(fputs@i+1)^0,f,c
 10640  004B00                     l3441:
 10641  004B00  5012               	movf	fputs@i^0,w,c
 10642  004B02  240D               	addwf	fputs@s^0,w,c
 10643  004B04  6ED9               	movwf	fsr2l,c
 10644  004B06  5013               	movf	(fputs@i+1)^0,w,c
 10645  004B08  200E               	addwfc	(fputs@s+1)^0,w,c
 10646  004B0A  6EDA               	movwf	fsr2h,c
 10647  004B0C  50DF               	movf	indf2,w,c
 10648  004B0E  6E11               	movwf	fputs@c^0,c
 10649  004B10  5011               	movf	fputs@c^0,w,c
 10650  004B12  A4D8               	btfss	status,2,c
 10651  004B14  EF8E  F025         	goto	u3741
 10652  004B18  EF90  F025         	goto	u3740
 10653  004B1C                     u3741:
 10654  004B1C  EF75  F025         	goto	l3437
 10655  004B20                     u3740:
 10656  004B20  0012               	return		;funcret
 10657  004B22                     __end_of_fputs:
 10658                           	callstack 0
 10659                           
 10660 ;; *************** function _abs *****************
 10661 ;; Defined at:
 10662 ;;		line 1 in file "/Applications/microchip/xc8/v2.31/pic/sources/c99/common/abs.c"
 10663 ;; Parameters:    Size  Location     Type
 10664 ;;  a               2   18[COMRAM] int 
 10665 ;; Auto vars:     Size  Location     Type
 10666 ;;		None
 10667 ;; Return value:  Size  Location     Type
 10668 ;;                  2   18[COMRAM] int 
 10669 ;; Registers used:
 10670 ;;		wreg, status,2, status,0
 10671 ;; Tracked objects:
 10672 ;;		On entry : 0/0
 10673 ;;		On exit  : 0/0
 10674 ;;		Unchanged: 0/0
 10675 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 10676 ;;      Params:         2       0       0       0       0       0       0       0       0
 10677 ;;      Locals:         0       0       0       0       0       0       0       0       0
 10678 ;;      Temps:          2       0       0       0       0       0       0       0       0
 10679 ;;      Totals:         4       0       0       0       0       0       0       0       0
 10680 ;;Total ram usage:        4 bytes
 10681 ;; Hardware stack levels used:    1
 10682 ;; This function calls:
 10683 ;;		Nothing
 10684 ;; This function is called by:
 10685 ;;		_dtoa
 10686 ;; This function uses a non-reentrant model
 10687 ;;
 10688                           
 10689                           	psect	text41
 10690  004B64                     __ptext41:
 10691                           	callstack 0
 10692  004B64                     _abs:
 10693                           	callstack 25
 10694  004B64  BE14               	btfsc	(abs@a+1)^0,7,c
 10695  004B66  EFBF  F025         	goto	u4650
 10696  004B6A  5014               	movf	(abs@a+1)^0,w,c
 10697  004B6C  E106               	bnz	u4651
 10698  004B6E  0413               	decf	abs@a^0,w,c
 10699  004B70  B0D8               	btfsc	status,0,c
 10700  004B72  EFBD  F025         	goto	u4651
 10701  004B76  EFBF  F025         	goto	u4650
 10702  004B7A                     u4651:
 10703  004B7A  EFCD  F025         	goto	l1125
 10704  004B7E                     u4650:
 10705  004B7E  C013  F015         	movff	abs@a,??_abs
 10706  004B82  C014  F016         	movff	abs@a+1,??_abs+1
 10707  004B86  1E15               	comf	??_abs^0,f,c
 10708  004B88  1E16               	comf	(??_abs+1)^0,f,c
 10709  004B8A  4A15               	infsnz	??_abs^0,f,c
 10710  004B8C  2A16               	incf	(??_abs+1)^0,f,c
 10711  004B8E  C015  F013         	movff	??_abs,?_abs
 10712  004B92  C016  F014         	movff	??_abs+1,?_abs+1
 10713  004B96  EFD1  F025         	goto	l1128
 10714  004B9A                     l1125:
 10715  004B9A  C013  F013         	movff	abs@a,?_abs
 10716  004B9E  C014  F014         	movff	abs@a+1,?_abs+1
 10717  004BA2                     l1128:
 10718  004BA2  0012               	return		;funcret
 10719  004BA4                     __end_of_abs:
 10720                           	callstack 0
 10721                           
 10722 ;; *************** function ___aomod *****************
 10723 ;; Defined at:
 10724 ;;		line 9 in file "/Applications/microchip/xc8/v2.31/pic/sources/c99/common/aomod.c"
 10725 ;; Parameters:    Size  Location     Type
 10726 ;;  dividend        8    0[COMRAM] long long 
 10727 ;;  divisor         8    8[COMRAM] long long 
 10728 ;; Auto vars:     Size  Location     Type
 10729 ;;  sign            1   17[COMRAM] unsigned char 
 10730 ;;  counter         1   16[COMRAM] unsigned char 
 10731 ;; Return value:  Size  Location     Type
 10732 ;;                  8    0[COMRAM] long long 
 10733 ;; Registers used:
 10734 ;;		wreg, status,2, status,0
 10735 ;; Tracked objects:
 10736 ;;		On entry : 0/0
 10737 ;;		On exit  : 0/0
 10738 ;;		Unchanged: 0/0
 10739 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 10740 ;;      Params:        16       0       0       0       0       0       0       0       0
 10741 ;;      Locals:         2       0       0       0       0       0       0       0       0
 10742 ;;      Temps:          0       0       0       0       0       0       0       0       0
 10743 ;;      Totals:        18       0       0       0       0       0       0       0       0
 10744 ;;Total ram usage:       18 bytes
 10745 ;; Hardware stack levels used:    1
 10746 ;; This function calls:
 10747 ;;		Nothing
 10748 ;; This function is called by:
 10749 ;;		_dtoa
 10750 ;; This function uses a non-reentrant model
 10751 ;;
 10752                           
 10753                           	psect	text42
 10754  0039BE                     __ptext42:
 10755                           	callstack 0
 10756  0039BE                     ___aomod:
 10757                           	callstack 25
 10758  0039BE  0E00               	movlw	0
 10759  0039C0  6E12               	movwf	___aomod@sign^0,c
 10760  0039C2  BE08               	btfsc	(___aomod@dividend+7)^0,7,c
 10761  0039C4  EFE8  F01C         	goto	u3850
 10762  0039C8  EFE6  F01C         	goto	u3851
 10763  0039CC                     u3851:
 10764  0039CC  EFFA  F01C         	goto	l3515
 10765  0039D0                     u3850:
 10766  0039D0  1E08               	comf	(___aomod@dividend+7)^0,f,c
 10767  0039D2  1E07               	comf	(___aomod@dividend+6)^0,f,c
 10768  0039D4  1E06               	comf	(___aomod@dividend+5)^0,f,c
 10769  0039D6  1E05               	comf	(___aomod@dividend+4)^0,f,c
 10770  0039D8  1E04               	comf	(___aomod@dividend+3)^0,f,c
 10771  0039DA  1E03               	comf	(___aomod@dividend+2)^0,f,c
 10772  0039DC  1E02               	comf	(___aomod@dividend+1)^0,f,c
 10773  0039DE  6C01               	negf	___aomod@dividend^0,c
 10774  0039E0  0E00               	movlw	0
 10775  0039E2  2202               	addwfc	(___aomod@dividend+1)^0,f,c
 10776  0039E4  2203               	addwfc	(___aomod@dividend+2)^0,f,c
 10777  0039E6  2204               	addwfc	(___aomod@dividend+3)^0,f,c
 10778  0039E8  2205               	addwfc	(___aomod@dividend+4)^0,f,c
 10779  0039EA  2206               	addwfc	(___aomod@dividend+5)^0,f,c
 10780  0039EC  2207               	addwfc	(___aomod@dividend+6)^0,f,c
 10781  0039EE  2208               	addwfc	(___aomod@dividend+7)^0,f,c
 10782  0039F0  0E01               	movlw	1
 10783  0039F2  6E12               	movwf	___aomod@sign^0,c
 10784  0039F4                     l3515:
 10785  0039F4  BE10               	btfsc	(___aomod@divisor+7)^0,7,c
 10786  0039F6  EF01  F01D         	goto	u3860
 10787  0039FA  EFFF  F01C         	goto	u3861
 10788  0039FE                     u3861:
 10789  0039FE  EF11  F01D         	goto	l3519
 10790  003A02                     u3860:
 10791  003A02  1E10               	comf	(___aomod@divisor+7)^0,f,c
 10792  003A04  1E0F               	comf	(___aomod@divisor+6)^0,f,c
 10793  003A06  1E0E               	comf	(___aomod@divisor+5)^0,f,c
 10794  003A08  1E0D               	comf	(___aomod@divisor+4)^0,f,c
 10795  003A0A  1E0C               	comf	(___aomod@divisor+3)^0,f,c
 10796  003A0C  1E0B               	comf	(___aomod@divisor+2)^0,f,c
 10797  003A0E  1E0A               	comf	(___aomod@divisor+1)^0,f,c
 10798  003A10  6C09               	negf	___aomod@divisor^0,c
 10799  003A12  0E00               	movlw	0
 10800  003A14  220A               	addwfc	(___aomod@divisor+1)^0,f,c
 10801  003A16  220B               	addwfc	(___aomod@divisor+2)^0,f,c
 10802  003A18  220C               	addwfc	(___aomod@divisor+3)^0,f,c
 10803  003A1A  220D               	addwfc	(___aomod@divisor+4)^0,f,c
 10804  003A1C  220E               	addwfc	(___aomod@divisor+5)^0,f,c
 10805  003A1E  220F               	addwfc	(___aomod@divisor+6)^0,f,c
 10806  003A20  2210               	addwfc	(___aomod@divisor+7)^0,f,c
 10807  003A22                     l3519:
 10808  003A22  5009               	movf	___aomod@divisor^0,w,c
 10809  003A24  100A               	iorwf	(___aomod@divisor+1)^0,w,c
 10810  003A26  100B               	iorwf	(___aomod@divisor+2)^0,w,c
 10811  003A28  100C               	iorwf	(___aomod@divisor+3)^0,w,c
 10812  003A2A  100D               	iorwf	(___aomod@divisor+4)^0,w,c
 10813  003A2C  100E               	iorwf	(___aomod@divisor+5)^0,w,c
 10814  003A2E  100F               	iorwf	(___aomod@divisor+6)^0,w,c
 10815  003A30  1010               	iorwf	(___aomod@divisor+7)^0,w,c
 10816  003A32  B4D8               	btfsc	status,2,c
 10817  003A34  EF1E  F01D         	goto	u3871
 10818  003A38  EF20  F01D         	goto	u3870
 10819  003A3C                     u3871:
 10820  003A3C  EF68  F01D         	goto	l3535
 10821  003A40                     u3870:
 10822  003A40  0E01               	movlw	1
 10823  003A42  6E11               	movwf	___aomod@counter^0,c
 10824  003A44  EF2E  F01D         	goto	l3525
 10825  003A48                     l3523:
 10826  003A48  90D8               	bcf	status,0,c
 10827  003A4A  3609               	rlcf	___aomod@divisor^0,f,c
 10828  003A4C  360A               	rlcf	(___aomod@divisor+1)^0,f,c
 10829  003A4E  360B               	rlcf	(___aomod@divisor+2)^0,f,c
 10830  003A50  360C               	rlcf	(___aomod@divisor+3)^0,f,c
 10831  003A52  360D               	rlcf	(___aomod@divisor+4)^0,f,c
 10832  003A54  360E               	rlcf	(___aomod@divisor+5)^0,f,c
 10833  003A56  360F               	rlcf	(___aomod@divisor+6)^0,f,c
 10834  003A58  3610               	rlcf	(___aomod@divisor+7)^0,f,c
 10835  003A5A  2A11               	incf	___aomod@counter^0,f,c
 10836  003A5C                     l3525:
 10837  003A5C  AE10               	btfss	(___aomod@divisor+7)^0,7,c
 10838  003A5E  EF33  F01D         	goto	u3881
 10839  003A62  EF35  F01D         	goto	u3880
 10840  003A66                     u3881:
 10841  003A66  EF24  F01D         	goto	l3523
 10842  003A6A                     u3880:
 10843  003A6A                     l3527:
 10844  003A6A  5009               	movf	___aomod@divisor^0,w,c
 10845  003A6C  5C01               	subwf	___aomod@dividend^0,w,c
 10846  003A6E  500A               	movf	(___aomod@divisor+1)^0,w,c
 10847  003A70  5802               	subwfb	(___aomod@dividend+1)^0,w,c
 10848  003A72  500B               	movf	(___aomod@divisor+2)^0,w,c
 10849  003A74  5803               	subwfb	(___aomod@dividend+2)^0,w,c
 10850  003A76  500C               	movf	(___aomod@divisor+3)^0,w,c
 10851  003A78  5804               	subwfb	(___aomod@dividend+3)^0,w,c
 10852  003A7A  500D               	movf	(___aomod@divisor+4)^0,w,c
 10853  003A7C  5805               	subwfb	(___aomod@dividend+4)^0,w,c
 10854  003A7E  500E               	movf	(___aomod@divisor+5)^0,w,c
 10855  003A80  5806               	subwfb	(___aomod@dividend+5)^0,w,c
 10856  003A82  500F               	movf	(___aomod@divisor+6)^0,w,c
 10857  003A84  5807               	subwfb	(___aomod@dividend+6)^0,w,c
 10858  003A86  5010               	movf	(___aomod@divisor+7)^0,w,c
 10859  003A88  5808               	subwfb	(___aomod@dividend+7)^0,w,c
 10860  003A8A  A0D8               	btfss	status,0,c
 10861  003A8C  EF4A  F01D         	goto	u3891
 10862  003A90  EF4C  F01D         	goto	u3890
 10863  003A94                     u3891:
 10864  003A94  EF5C  F01D         	goto	l3531
 10865  003A98                     u3890:
 10866  003A98  5009               	movf	___aomod@divisor^0,w,c
 10867  003A9A  5E01               	subwf	___aomod@dividend^0,f,c
 10868  003A9C  500A               	movf	(___aomod@divisor+1)^0,w,c
 10869  003A9E  5A02               	subwfb	(___aomod@dividend+1)^0,f,c
 10870  003AA0  500B               	movf	(___aomod@divisor+2)^0,w,c
 10871  003AA2  5A03               	subwfb	(___aomod@dividend+2)^0,f,c
 10872  003AA4  500C               	movf	(___aomod@divisor+3)^0,w,c
 10873  003AA6  5A04               	subwfb	(___aomod@dividend+3)^0,f,c
 10874  003AA8  500D               	movf	(___aomod@divisor+4)^0,w,c
 10875  003AAA  5A05               	subwfb	(___aomod@dividend+4)^0,f,c
 10876  003AAC  500E               	movf	(___aomod@divisor+5)^0,w,c
 10877  003AAE  5A06               	subwfb	(___aomod@dividend+5)^0,f,c
 10878  003AB0  500F               	movf	(___aomod@divisor+6)^0,w,c
 10879  003AB2  5A07               	subwfb	(___aomod@dividend+6)^0,f,c
 10880  003AB4  5010               	movf	(___aomod@divisor+7)^0,w,c
 10881  003AB6  5A08               	subwfb	(___aomod@dividend+7)^0,f,c
 10882  003AB8                     l3531:
 10883  003AB8  90D8               	bcf	status,0,c
 10884  003ABA  3210               	rrcf	(___aomod@divisor+7)^0,f,c
 10885  003ABC  320F               	rrcf	(___aomod@divisor+6)^0,f,c
 10886  003ABE  320E               	rrcf	(___aomod@divisor+5)^0,f,c
 10887  003AC0  320D               	rrcf	(___aomod@divisor+4)^0,f,c
 10888  003AC2  320C               	rrcf	(___aomod@divisor+3)^0,f,c
 10889  003AC4  320B               	rrcf	(___aomod@divisor+2)^0,f,c
 10890  003AC6  320A               	rrcf	(___aomod@divisor+1)^0,f,c
 10891  003AC8  3209               	rrcf	___aomod@divisor^0,f,c
 10892  003ACA  2E11               	decfsz	___aomod@counter^0,f,c
 10893  003ACC  EF35  F01D         	goto	l3527
 10894  003AD0                     l3535:
 10895  003AD0  5012               	movf	___aomod@sign^0,w,c
 10896  003AD2  B4D8               	btfsc	status,2,c
 10897  003AD4  EF6E  F01D         	goto	u3901
 10898  003AD8  EF70  F01D         	goto	u3900
 10899  003ADC                     u3901:
 10900  003ADC  EF80  F01D         	goto	l3539
 10901  003AE0                     u3900:
 10902  003AE0  1E08               	comf	(___aomod@dividend+7)^0,f,c
 10903  003AE2  1E07               	comf	(___aomod@dividend+6)^0,f,c
 10904  003AE4  1E06               	comf	(___aomod@dividend+5)^0,f,c
 10905  003AE6  1E05               	comf	(___aomod@dividend+4)^0,f,c
 10906  003AE8  1E04               	comf	(___aomod@dividend+3)^0,f,c
 10907  003AEA  1E03               	comf	(___aomod@dividend+2)^0,f,c
 10908  003AEC  1E02               	comf	(___aomod@dividend+1)^0,f,c
 10909  003AEE  6C01               	negf	___aomod@dividend^0,c
 10910  003AF0  0E00               	movlw	0
 10911  003AF2  2202               	addwfc	(___aomod@dividend+1)^0,f,c
 10912  003AF4  2203               	addwfc	(___aomod@dividend+2)^0,f,c
 10913  003AF6  2204               	addwfc	(___aomod@dividend+3)^0,f,c
 10914  003AF8  2205               	addwfc	(___aomod@dividend+4)^0,f,c
 10915  003AFA  2206               	addwfc	(___aomod@dividend+5)^0,f,c
 10916  003AFC  2207               	addwfc	(___aomod@dividend+6)^0,f,c
 10917  003AFE  2208               	addwfc	(___aomod@dividend+7)^0,f,c
 10918  003B00                     l3539:
 10919  003B00  C001  F001         	movff	___aomod@dividend,?___aomod
 10920  003B04  C002  F002         	movff	___aomod@dividend+1,?___aomod+1
 10921  003B08  C003  F003         	movff	___aomod@dividend+2,?___aomod+2
 10922  003B0C  C004  F004         	movff	___aomod@dividend+3,?___aomod+3
 10923  003B10  C005  F005         	movff	___aomod@dividend+4,?___aomod+4
 10924  003B14  C006  F006         	movff	___aomod@dividend+5,?___aomod+5
 10925  003B18  C007  F007         	movff	___aomod@dividend+6,?___aomod+6
 10926  003B1C  C008  F008         	movff	___aomod@dividend+7,?___aomod+7
 10927  003B20  0012               	return		;funcret
 10928  003B22                     __end_of___aomod:
 10929                           	callstack 0
 10930                           
 10931 ;; *************** function ___aodiv *****************
 10932 ;; Defined at:
 10933 ;;		line 9 in file "/Applications/microchip/xc8/v2.31/pic/sources/c99/common/aodiv.c"
 10934 ;; Parameters:    Size  Location     Type
 10935 ;;  dividend        8    0[COMRAM] long long 
 10936 ;;  divisor         8    8[COMRAM] long long 
 10937 ;; Auto vars:     Size  Location     Type
 10938 ;;  quotient        8   18[COMRAM] long long 
 10939 ;;  sign            1   17[COMRAM] unsigned char 
 10940 ;;  counter         1   16[COMRAM] unsigned char 
 10941 ;; Return value:  Size  Location     Type
 10942 ;;                  8    0[COMRAM] long long 
 10943 ;; Registers used:
 10944 ;;		wreg, fsr2l, fsr2h, status,2, status,0
 10945 ;; Tracked objects:
 10946 ;;		On entry : 0/0
 10947 ;;		On exit  : 0/0
 10948 ;;		Unchanged: 0/0
 10949 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 10950 ;;      Params:        16       0       0       0       0       0       0       0       0
 10951 ;;      Locals:        10       0       0       0       0       0       0       0       0
 10952 ;;      Temps:          0       0       0       0       0       0       0       0       0
 10953 ;;      Totals:        26       0       0       0       0       0       0       0       0
 10954 ;;Total ram usage:       26 bytes
 10955 ;; Hardware stack levels used:    1
 10956 ;; This function calls:
 10957 ;;		Nothing
 10958 ;; This function is called by:
 10959 ;;		_dtoa
 10960 ;; This function uses a non-reentrant model
 10961 ;;
 10962                           
 10963                           	psect	text43
 10964  003836                     __ptext43:
 10965                           	callstack 0
 10966  003836                     ___aodiv:
 10967                           	callstack 25
 10968  003836  0E00               	movlw	0
 10969  003838  6E12               	movwf	___aodiv@sign^0,c
 10970  00383A  BE10               	btfsc	(___aodiv@divisor+7)^0,7,c
 10971  00383C  EF24  F01C         	goto	u3780
 10972  003840  EF22  F01C         	goto	u3781
 10973  003844                     u3781:
 10974  003844  EF36  F01C         	goto	l3471
 10975  003848                     u3780:
 10976  003848  1E10               	comf	(___aodiv@divisor+7)^0,f,c
 10977  00384A  1E0F               	comf	(___aodiv@divisor+6)^0,f,c
 10978  00384C  1E0E               	comf	(___aodiv@divisor+5)^0,f,c
 10979  00384E  1E0D               	comf	(___aodiv@divisor+4)^0,f,c
 10980  003850  1E0C               	comf	(___aodiv@divisor+3)^0,f,c
 10981  003852  1E0B               	comf	(___aodiv@divisor+2)^0,f,c
 10982  003854  1E0A               	comf	(___aodiv@divisor+1)^0,f,c
 10983  003856  6C09               	negf	___aodiv@divisor^0,c
 10984  003858  0E00               	movlw	0
 10985  00385A  220A               	addwfc	(___aodiv@divisor+1)^0,f,c
 10986  00385C  220B               	addwfc	(___aodiv@divisor+2)^0,f,c
 10987  00385E  220C               	addwfc	(___aodiv@divisor+3)^0,f,c
 10988  003860  220D               	addwfc	(___aodiv@divisor+4)^0,f,c
 10989  003862  220E               	addwfc	(___aodiv@divisor+5)^0,f,c
 10990  003864  220F               	addwfc	(___aodiv@divisor+6)^0,f,c
 10991  003866  2210               	addwfc	(___aodiv@divisor+7)^0,f,c
 10992  003868  0E01               	movlw	1
 10993  00386A  6E12               	movwf	___aodiv@sign^0,c
 10994  00386C                     l3471:
 10995  00386C  BE08               	btfsc	(___aodiv@dividend+7)^0,7,c
 10996  00386E  EF3D  F01C         	goto	u3790
 10997  003872  EF3B  F01C         	goto	u3791
 10998  003876                     u3791:
 10999  003876  EF4F  F01C         	goto	l3477
 11000  00387A                     u3790:
 11001  00387A  1E08               	comf	(___aodiv@dividend+7)^0,f,c
 11002  00387C  1E07               	comf	(___aodiv@dividend+6)^0,f,c
 11003  00387E  1E06               	comf	(___aodiv@dividend+5)^0,f,c
 11004  003880  1E05               	comf	(___aodiv@dividend+4)^0,f,c
 11005  003882  1E04               	comf	(___aodiv@dividend+3)^0,f,c
 11006  003884  1E03               	comf	(___aodiv@dividend+2)^0,f,c
 11007  003886  1E02               	comf	(___aodiv@dividend+1)^0,f,c
 11008  003888  6C01               	negf	___aodiv@dividend^0,c
 11009  00388A  0E00               	movlw	0
 11010  00388C  2202               	addwfc	(___aodiv@dividend+1)^0,f,c
 11011  00388E  2203               	addwfc	(___aodiv@dividend+2)^0,f,c
 11012  003890  2204               	addwfc	(___aodiv@dividend+3)^0,f,c
 11013  003892  2205               	addwfc	(___aodiv@dividend+4)^0,f,c
 11014  003894  2206               	addwfc	(___aodiv@dividend+5)^0,f,c
 11015  003896  2207               	addwfc	(___aodiv@dividend+6)^0,f,c
 11016  003898  2208               	addwfc	(___aodiv@dividend+7)^0,f,c
 11017  00389A  0E01               	movlw	1
 11018  00389C  1A12               	xorwf	___aodiv@sign^0,f,c
 11019  00389E                     l3477:
 11020  00389E  EE20  F013         	lfsr	2,___aodiv@quotient
 11021  0038A2  0E07               	movlw	7
 11022  0038A4                     u3801:
 11023  0038A4  6ADE               	clrf	postinc2,c
 11024  0038A6  06E8               	decf	wreg,f,c
 11025  0038A8  E2FD               	bc	u3801
 11026  0038AA  5009               	movf	___aodiv@divisor^0,w,c
 11027  0038AC  100A               	iorwf	(___aodiv@divisor+1)^0,w,c
 11028  0038AE  100B               	iorwf	(___aodiv@divisor+2)^0,w,c
 11029  0038B0  100C               	iorwf	(___aodiv@divisor+3)^0,w,c
 11030  0038B2  100D               	iorwf	(___aodiv@divisor+4)^0,w,c
 11031  0038B4  100E               	iorwf	(___aodiv@divisor+5)^0,w,c
 11032  0038B6  100F               	iorwf	(___aodiv@divisor+6)^0,w,c
 11033  0038B8  1010               	iorwf	(___aodiv@divisor+7)^0,w,c
 11034  0038BA  B4D8               	btfsc	status,2,c
 11035  0038BC  EF62  F01C         	goto	u3811
 11036  0038C0  EF64  F01C         	goto	u3810
 11037  0038C4                     u3811:
 11038  0038C4  EFB6  F01C         	goto	l3499
 11039  0038C8                     u3810:
 11040  0038C8  0E01               	movlw	1
 11041  0038CA  6E11               	movwf	___aodiv@counter^0,c
 11042  0038CC  EF72  F01C         	goto	l3485
 11043  0038D0                     l3483:
 11044  0038D0  90D8               	bcf	status,0,c
 11045  0038D2  3609               	rlcf	___aodiv@divisor^0,f,c
 11046  0038D4  360A               	rlcf	(___aodiv@divisor+1)^0,f,c
 11047  0038D6  360B               	rlcf	(___aodiv@divisor+2)^0,f,c
 11048  0038D8  360C               	rlcf	(___aodiv@divisor+3)^0,f,c
 11049  0038DA  360D               	rlcf	(___aodiv@divisor+4)^0,f,c
 11050  0038DC  360E               	rlcf	(___aodiv@divisor+5)^0,f,c
 11051  0038DE  360F               	rlcf	(___aodiv@divisor+6)^0,f,c
 11052  0038E0  3610               	rlcf	(___aodiv@divisor+7)^0,f,c
 11053  0038E2  2A11               	incf	___aodiv@counter^0,f,c
 11054  0038E4                     l3485:
 11055  0038E4  AE10               	btfss	(___aodiv@divisor+7)^0,7,c
 11056  0038E6  EF77  F01C         	goto	u3821
 11057  0038EA  EF79  F01C         	goto	u3820
 11058  0038EE                     u3821:
 11059  0038EE  EF68  F01C         	goto	l3483
 11060  0038F2                     u3820:
 11061  0038F2                     l3487:
 11062  0038F2  90D8               	bcf	status,0,c
 11063  0038F4  3613               	rlcf	___aodiv@quotient^0,f,c
 11064  0038F6  3614               	rlcf	(___aodiv@quotient+1)^0,f,c
 11065  0038F8  3615               	rlcf	(___aodiv@quotient+2)^0,f,c
 11066  0038FA  3616               	rlcf	(___aodiv@quotient+3)^0,f,c
 11067  0038FC  3617               	rlcf	(___aodiv@quotient+4)^0,f,c
 11068  0038FE  3618               	rlcf	(___aodiv@quotient+5)^0,f,c
 11069  003900  3619               	rlcf	(___aodiv@quotient+6)^0,f,c
 11070  003902  361A               	rlcf	(___aodiv@quotient+7)^0,f,c
 11071  003904  5009               	movf	___aodiv@divisor^0,w,c
 11072  003906  5C01               	subwf	___aodiv@dividend^0,w,c
 11073  003908  500A               	movf	(___aodiv@divisor+1)^0,w,c
 11074  00390A  5802               	subwfb	(___aodiv@dividend+1)^0,w,c
 11075  00390C  500B               	movf	(___aodiv@divisor+2)^0,w,c
 11076  00390E  5803               	subwfb	(___aodiv@dividend+2)^0,w,c
 11077  003910  500C               	movf	(___aodiv@divisor+3)^0,w,c
 11078  003912  5804               	subwfb	(___aodiv@dividend+3)^0,w,c
 11079  003914  500D               	movf	(___aodiv@divisor+4)^0,w,c
 11080  003916  5805               	subwfb	(___aodiv@dividend+4)^0,w,c
 11081  003918  500E               	movf	(___aodiv@divisor+5)^0,w,c
 11082  00391A  5806               	subwfb	(___aodiv@dividend+5)^0,w,c
 11083  00391C  500F               	movf	(___aodiv@divisor+6)^0,w,c
 11084  00391E  5807               	subwfb	(___aodiv@dividend+6)^0,w,c
 11085  003920  5010               	movf	(___aodiv@divisor+7)^0,w,c
 11086  003922  5808               	subwfb	(___aodiv@dividend+7)^0,w,c
 11087  003924  A0D8               	btfss	status,0,c
 11088  003926  EF97  F01C         	goto	u3831
 11089  00392A  EF99  F01C         	goto	u3830
 11090  00392E                     u3831:
 11091  00392E  EFAA  F01C         	goto	l3495
 11092  003932                     u3830:
 11093  003932  5009               	movf	___aodiv@divisor^0,w,c
 11094  003934  5E01               	subwf	___aodiv@dividend^0,f,c
 11095  003936  500A               	movf	(___aodiv@divisor+1)^0,w,c
 11096  003938  5A02               	subwfb	(___aodiv@dividend+1)^0,f,c
 11097  00393A  500B               	movf	(___aodiv@divisor+2)^0,w,c
 11098  00393C  5A03               	subwfb	(___aodiv@dividend+2)^0,f,c
 11099  00393E  500C               	movf	(___aodiv@divisor+3)^0,w,c
 11100  003940  5A04               	subwfb	(___aodiv@dividend+3)^0,f,c
 11101  003942  500D               	movf	(___aodiv@divisor+4)^0,w,c
 11102  003944  5A05               	subwfb	(___aodiv@dividend+4)^0,f,c
 11103  003946  500E               	movf	(___aodiv@divisor+5)^0,w,c
 11104  003948  5A06               	subwfb	(___aodiv@dividend+5)^0,f,c
 11105  00394A  500F               	movf	(___aodiv@divisor+6)^0,w,c
 11106  00394C  5A07               	subwfb	(___aodiv@dividend+6)^0,f,c
 11107  00394E  5010               	movf	(___aodiv@divisor+7)^0,w,c
 11108  003950  5A08               	subwfb	(___aodiv@dividend+7)^0,f,c
 11109  003952  8013               	bsf	___aodiv@quotient^0,0,c
 11110  003954                     l3495:
 11111  003954  90D8               	bcf	status,0,c
 11112  003956  3210               	rrcf	(___aodiv@divisor+7)^0,f,c
 11113  003958  320F               	rrcf	(___aodiv@divisor+6)^0,f,c
 11114  00395A  320E               	rrcf	(___aodiv@divisor+5)^0,f,c
 11115  00395C  320D               	rrcf	(___aodiv@divisor+4)^0,f,c
 11116  00395E  320C               	rrcf	(___aodiv@divisor+3)^0,f,c
 11117  003960  320B               	rrcf	(___aodiv@divisor+2)^0,f,c
 11118  003962  320A               	rrcf	(___aodiv@divisor+1)^0,f,c
 11119  003964  3209               	rrcf	___aodiv@divisor^0,f,c
 11120  003966  2E11               	decfsz	___aodiv@counter^0,f,c
 11121  003968  EF79  F01C         	goto	l3487
 11122  00396C                     l3499:
 11123  00396C  5012               	movf	___aodiv@sign^0,w,c
 11124  00396E  B4D8               	btfsc	status,2,c
 11125  003970  EFBC  F01C         	goto	u3841
 11126  003974  EFBE  F01C         	goto	u3840
 11127  003978                     u3841:
 11128  003978  EFCE  F01C         	goto	l3503
 11129  00397C                     u3840:
 11130  00397C  1E1A               	comf	(___aodiv@quotient+7)^0,f,c
 11131  00397E  1E19               	comf	(___aodiv@quotient+6)^0,f,c
 11132  003980  1E18               	comf	(___aodiv@quotient+5)^0,f,c
 11133  003982  1E17               	comf	(___aodiv@quotient+4)^0,f,c
 11134  003984  1E16               	comf	(___aodiv@quotient+3)^0,f,c
 11135  003986  1E15               	comf	(___aodiv@quotient+2)^0,f,c
 11136  003988  1E14               	comf	(___aodiv@quotient+1)^0,f,c
 11137  00398A  6C13               	negf	___aodiv@quotient^0,c
 11138  00398C  0E00               	movlw	0
 11139  00398E  2214               	addwfc	(___aodiv@quotient+1)^0,f,c
 11140  003990  2215               	addwfc	(___aodiv@quotient+2)^0,f,c
 11141  003992  2216               	addwfc	(___aodiv@quotient+3)^0,f,c
 11142  003994  2217               	addwfc	(___aodiv@quotient+4)^0,f,c
 11143  003996  2218               	addwfc	(___aodiv@quotient+5)^0,f,c
 11144  003998  2219               	addwfc	(___aodiv@quotient+6)^0,f,c
 11145  00399A  221A               	addwfc	(___aodiv@quotient+7)^0,f,c
 11146  00399C                     l3503:
 11147  00399C  C013  F001         	movff	___aodiv@quotient,?___aodiv
 11148  0039A0  C014  F002         	movff	___aodiv@quotient+1,?___aodiv+1
 11149  0039A4  C015  F003         	movff	___aodiv@quotient+2,?___aodiv+2
 11150  0039A8  C016  F004         	movff	___aodiv@quotient+3,?___aodiv+3
 11151  0039AC  C017  F005         	movff	___aodiv@quotient+4,?___aodiv+4
 11152  0039B0  C018  F006         	movff	___aodiv@quotient+5,?___aodiv+5
 11153  0039B4  C019  F007         	movff	___aodiv@quotient+6,?___aodiv+6
 11154  0039B8  C01A  F008         	movff	___aodiv@quotient+7,?___aodiv+7
 11155  0039BC  0012               	return		;funcret
 11156  0039BE                     __end_of___aodiv:
 11157                           	callstack 0
 11158                           
 11159 ;; *************** function _ctoa *****************
 11160 ;; Defined at:
 11161 ;;		line 259 in file "/Applications/microchip/xc8/v2.31/pic/sources/c99/common/doprnt.c"
 11162 ;; Parameters:    Size  Location     Type
 11163 ;;  fp              2   12[COMRAM] PTR struct _IO_FILE
 11164 ;;		 -> NULL(0), sprintf@f(6), 
 11165 ;;  c               1   14[COMRAM] unsigned char 
 11166 ;; Auto vars:     Size  Location     Type
 11167 ;;  w               2   18[COMRAM] int 
 11168 ;;  l               2   16[COMRAM] int 
 11169 ;; Return value:  Size  Location     Type
 11170 ;;                  2   12[COMRAM] int 
 11171 ;; Registers used:
 11172 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
 11173 ;; Tracked objects:
 11174 ;;		On entry : 0/0
 11175 ;;		On exit  : 0/0
 11176 ;;		Unchanged: 0/0
 11177 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 11178 ;;      Params:         3       0       0       0       0       0       0       0       0
 11179 ;;      Locals:         4       0       0       0       0       0       0       0       0
 11180 ;;      Temps:          1       0       0       0       0       0       0       0       0
 11181 ;;      Totals:         8       0       0       0       0       0       0       0       0
 11182 ;;Total ram usage:        8 bytes
 11183 ;; Hardware stack levels used:    1
 11184 ;; Hardware stack levels required when called:    2
 11185 ;; This function calls:
 11186 ;;		_fputc
 11187 ;; This function is called by:
 11188 ;;		_vfpfcnvrt
 11189 ;; This function uses a non-reentrant model
 11190 ;;
 11191                           
 11192                           	psect	text44
 11193  004082                     __ptext44:
 11194                           	callstack 0
 11195  004082                     _ctoa:
 11196                           	callstack 24
 11197  004082                     
 11198                           ;/Applications/microchip/xc8/v2.31/pic/sources/c99/common/doprnt.c: 259: static int ctoa
      +                          (FILE *fp, char c);/Applications/microchip/xc8/v2.31/pic/sources/c99/common/doprnt.c: 26
      +                          0: {;/Applications/microchip/xc8/v2.31/pic/sources/c99/common/doprnt.c: 261:     int l, 
      +                          w;;/Applications/microchip/xc8/v2.31/pic/sources/c99/common/doprnt.c: 264:     w = width
      +                           ? width - 1 : width;
 11199  004082  0100               	movlb	0	; () banked
 11200  004084  51CE               	movf	_width& (0+255),w,b
 11201  004086  11CF               	iorwf	(_width+1)& (0+255),w,b
 11202  004088  A4D8               	btfss	status,2,c
 11203  00408A  EF49  F020         	goto	u4921
 11204  00408E  EF4B  F020         	goto	u4920
 11205  004092                     u4921:
 11206  004092  EF51  F020         	goto	l4097
 11207  004096                     u4920:
 11208  004096                     
 11209                           ; BSR set to: 0
 11210  004096  C0CE  F013         	movff	_width,ctoa@w
 11211  00409A  C0CF  F014         	movff	_width+1,ctoa@w+1
 11212  00409E  EF57  F020         	goto	l4099
 11213  0040A2                     l4097:
 11214                           
 11215                           ; BSR set to: 0
 11216  0040A2  0EFF               	movlw	255
 11217  0040A4  25CE               	addwf	_width& (0+255),w,b
 11218  0040A6  6E13               	movwf	ctoa@w^0,c
 11219  0040A8  0EFF               	movlw	255
 11220  0040AA  21CF               	addwfc	(_width+1)& (0+255),w,b
 11221  0040AC  6E14               	movwf	(ctoa@w+1)^0,c
 11222  0040AE                     l4099:
 11223                           
 11224                           ; BSR set to: 0
 11225                           ;/Applications/microchip/xc8/v2.31/pic/sources/c99/common/doprnt.c: 267:     if (flags &
      +                           (1 << 0)) {
 11226  0040AE  A1D2               	btfss	_flags& (0+255),0,b
 11227  0040B0  EF5C  F020         	goto	u4931
 11228  0040B4  EF5E  F020         	goto	u4930
 11229  0040B8                     u4931:
 11230  0040B8  EF67  F020         	goto	l4103
 11231  0040BC                     u4930:
 11232  0040BC                     
 11233                           ; BSR set to: 0
 11234                           ;/Applications/microchip/xc8/v2.31/pic/sources/c99/common/doprnt.c: 268:         fputc(c
      +                          , fp);
 11235  0040BC  C00F  F004         	movff	ctoa@c,fputc@c
 11236  0040C0  6A05               	clrf	(fputc@c+1)^0,c
 11237  0040C2  C00D  F006         	movff	ctoa@fp,fputc@fp
 11238  0040C6  C00E  F007         	movff	ctoa@fp+1,fputc@fp+1
 11239  0040CA  EC18  F021         	call	_fputc	;wreg free
 11240  0040CE                     l4103:
 11241                           
 11242                           ;/Applications/microchip/xc8/v2.31/pic/sources/c99/common/doprnt.c: 271:     w = (w < 0)
      +                           ? 0 : w;
 11243  0040CE  BE14               	btfsc	(ctoa@w+1)^0,7,c
 11244  0040D0  EF6C  F020         	goto	u4941
 11245  0040D4  EF6E  F020         	goto	u4940
 11246  0040D8                     u4941:
 11247  0040D8  EF70  F020         	goto	l4107
 11248  0040DC                     u4940:
 11249  0040DC  EF74  F020         	goto	l940
 11250  0040E0                     l4107:
 11251  0040E0  0E00               	movlw	0
 11252  0040E2  6E14               	movwf	(ctoa@w+1)^0,c
 11253  0040E4  0E00               	movlw	0
 11254  0040E6  6E13               	movwf	ctoa@w^0,c
 11255  0040E8                     l940:
 11256                           
 11257                           ;/Applications/microchip/xc8/v2.31/pic/sources/c99/common/doprnt.c: 272:     l = 0;
 11258  0040E8  0E00               	movlw	0
 11259  0040EA  6E12               	movwf	(ctoa@l+1)^0,c
 11260  0040EC  0E00               	movlw	0
 11261  0040EE  6E11               	movwf	ctoa@l^0,c
 11262                           
 11263                           ;/Applications/microchip/xc8/v2.31/pic/sources/c99/common/doprnt.c: 273:     while (l < 
      +                          w) {
 11264  0040F0  EF86  F020         	goto	l4113
 11265  0040F4                     l4109:
 11266                           
 11267                           ;/Applications/microchip/xc8/v2.31/pic/sources/c99/common/doprnt.c: 274:         fputc('
      +                           ', fp);
 11268  0040F4  0E00               	movlw	0
 11269  0040F6  6E05               	movwf	(fputc@c+1)^0,c
 11270  0040F8  0E20               	movlw	32
 11271  0040FA  6E04               	movwf	fputc@c^0,c
 11272  0040FC  C00D  F006         	movff	ctoa@fp,fputc@fp
 11273  004100  C00E  F007         	movff	ctoa@fp+1,fputc@fp+1
 11274  004104  EC18  F021         	call	_fputc	;wreg free
 11275  004108                     
 11276                           ;/Applications/microchip/xc8/v2.31/pic/sources/c99/common/doprnt.c: 275:         ++l;
 11277  004108  4A11               	infsnz	ctoa@l^0,f,c
 11278  00410A  2A12               	incf	(ctoa@l+1)^0,f,c
 11279  00410C                     l4113:
 11280                           
 11281                           ;/Applications/microchip/xc8/v2.31/pic/sources/c99/common/doprnt.c: 273:     while (l < 
      +                          w) {
 11282  00410C  5013               	movf	ctoa@w^0,w,c
 11283  00410E  5C11               	subwf	ctoa@l^0,w,c
 11284  004110  5012               	movf	(ctoa@l+1)^0,w,c
 11285  004112  0A80               	xorlw	128
 11286  004114  6E10               	movwf	??_ctoa^0,c
 11287  004116  5014               	movf	(ctoa@w+1)^0,w,c
 11288  004118  0A80               	xorlw	128
 11289  00411A  5810               	subwfb	??_ctoa^0,w,c
 11290  00411C  A0D8               	btfss	status,0,c
 11291  00411E  EF93  F020         	goto	u4951
 11292  004122  EF95  F020         	goto	u4950
 11293  004126                     u4951:
 11294  004126  EF7A  F020         	goto	l4109
 11295  00412A                     u4950:
 11296  00412A                     
 11297                           ;/Applications/microchip/xc8/v2.31/pic/sources/c99/common/doprnt.c: 278:     if (!(flags
      +                           & (1 << 0))) {
 11298  00412A  0100               	movlb	0	; () banked
 11299  00412C  B1D2               	btfsc	_flags& (0+255),0,b
 11300  00412E  EF9B  F020         	goto	u4961
 11301  004132  EF9D  F020         	goto	u4960
 11302  004136                     u4961:
 11303  004136  EFA6  F020         	goto	l4117
 11304  00413A                     u4960:
 11305  00413A                     
 11306                           ; BSR set to: 0
 11307                           ;/Applications/microchip/xc8/v2.31/pic/sources/c99/common/doprnt.c: 279:         fputc(c
      +                          , fp);
 11308  00413A  C00F  F004         	movff	ctoa@c,fputc@c
 11309  00413E  6A05               	clrf	(fputc@c+1)^0,c
 11310  004140  C00D  F006         	movff	ctoa@fp,fputc@fp
 11311  004144  C00E  F007         	movff	ctoa@fp+1,fputc@fp+1
 11312  004148  EC18  F021         	call	_fputc	;wreg free
 11313  00414C                     l4117:
 11314                           
 11315                           ;/Applications/microchip/xc8/v2.31/pic/sources/c99/common/doprnt.c: 282:     return l+1;
 11316  00414C  0E01               	movlw	1
 11317  00414E  2411               	addwf	ctoa@l^0,w,c
 11318  004150  6E0D               	movwf	?_ctoa^0,c
 11319  004152  0E00               	movlw	0
 11320  004154  2012               	addwfc	(ctoa@l+1)^0,w,c
 11321  004156  6E0E               	movwf	(?_ctoa+1)^0,c
 11322  004158  0012               	return		;funcret
 11323  00415A                     __end_of_ctoa:
 11324                           	callstack 0
 11325                           
 11326 ;; *************** function _fputc *****************
 11327 ;; Defined at:
 11328 ;;		line 8 in file "/Applications/microchip/xc8/v2.31/pic/sources/c99/common/nf_fputc.c"
 11329 ;; Parameters:    Size  Location     Type
 11330 ;;  c               2    3[COMRAM] int 
 11331 ;;  fp              2    5[COMRAM] PTR struct _IO_FILE
 11332 ;;		 -> NULL(0), sprintf@f(6), 
 11333 ;; Auto vars:     Size  Location     Type
 11334 ;;		None
 11335 ;; Return value:  Size  Location     Type
 11336 ;;                  2    3[COMRAM] int 
 11337 ;; Registers used:
 11338 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
 11339 ;; Tracked objects:
 11340 ;;		On entry : 0/0
 11341 ;;		On exit  : 0/0
 11342 ;;		Unchanged: 0/0
 11343 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 11344 ;;      Params:         4       0       0       0       0       0       0       0       0
 11345 ;;      Locals:         0       0       0       0       0       0       0       0       0
 11346 ;;      Temps:          5       0       0       0       0       0       0       0       0
 11347 ;;      Totals:         9       0       0       0       0       0       0       0       0
 11348 ;;Total ram usage:        9 bytes
 11349 ;; Hardware stack levels used:    1
 11350 ;; Hardware stack levels required when called:    1
 11351 ;; This function calls:
 11352 ;;		_putch
 11353 ;; This function is called by:
 11354 ;;		_pad
 11355 ;;		_ctoa
 11356 ;;		_vfpfcnvrt
 11357 ;;		_fputs
 11358 ;; This function uses a non-reentrant model
 11359 ;;
 11360                           
 11361                           	psect	text45
 11362  004230                     __ptext45:
 11363                           	callstack 0
 11364  004230                     _fputc:
 11365                           	callstack 25
 11366  004230  5006               	movf	fputc@fp^0,w,c
 11367  004232  1007               	iorwf	(fputc@fp+1)^0,w,c
 11368  004234  B4D8               	btfsc	status,2,c
 11369  004236  EF1F  F021         	goto	u3311
 11370  00423A  EF21  F021         	goto	u3310
 11371  00423E                     u3311:
 11372  00423E  EF2A  F021         	goto	l3223
 11373  004242                     u3310:
 11374  004242  5006               	movf	fputc@fp^0,w,c
 11375  004244  1007               	iorwf	(fputc@fp+1)^0,w,c
 11376  004246  A4D8               	btfss	status,2,c
 11377  004248  EF28  F021         	goto	u3321
 11378  00424C  EF2A  F021         	goto	u3320
 11379  004250                     u3321:
 11380  004250  EF2F  F021         	goto	l3225
 11381  004254                     u3320:
 11382  004254                     l3223:
 11383  004254  5004               	movf	fputc@c^0,w,c
 11384  004256  EC4C  F025         	call	_putch
 11385  00425A  EF7C  F021         	goto	l1204
 11386  00425E                     l3225:
 11387  00425E  EE20 F004          	lfsr	2,4
 11388  004262  5006               	movf	fputc@fp^0,w,c
 11389  004264  26D9               	addwf	fsr2l,f,c
 11390  004266  5007               	movf	(fputc@fp+1)^0,w,c
 11391  004268  22DA               	addwfc	fsr2h,f,c
 11392  00426A  50DE               	movf	postinc2,w,c
 11393  00426C  10DE               	iorwf	postinc2,w,c
 11394  00426E  B4D8               	btfsc	status,2,c
 11395  004270  EF3C  F021         	goto	u3331
 11396  004274  EF3E  F021         	goto	u3330
 11397  004278                     u3331:
 11398  004278  EF59  F021         	goto	l3229
 11399  00427C                     u3330:
 11400  00427C  EE20 F004          	lfsr	2,4
 11401  004280  5006               	movf	fputc@fp^0,w,c
 11402  004282  26D9               	addwf	fsr2l,f,c
 11403  004284  5007               	movf	(fputc@fp+1)^0,w,c
 11404  004286  22DA               	addwfc	fsr2h,f,c
 11405  004288  EE10 F002          	lfsr	1,2
 11406  00428C  5006               	movf	fputc@fp^0,w,c
 11407  00428E  26E1               	addwf	fsr1l,f,c
 11408  004290  5007               	movf	(fputc@fp+1)^0,w,c
 11409  004292  22E2               	addwfc	fsr1h,f,c
 11410  004294  50DE               	movf	postinc2,w,c
 11411  004296  5CE6               	subwf	postinc1,w,c
 11412  004298  50E6               	movf	postinc1,w,c
 11413  00429A  0A80               	xorlw	128
 11414  00429C  6E0C               	movwf	(??_fputc+4)^0,c
 11415  00429E  50DE               	movf	postinc2,w,c
 11416  0042A0  0A80               	xorlw	128
 11417  0042A2  580C               	subwfb	(??_fputc+4)^0,w,c
 11418  0042A4  B0D8               	btfsc	status,0,c
 11419  0042A6  EF57  F021         	goto	u3341
 11420  0042AA  EF59  F021         	goto	u3340
 11421  0042AE                     u3341:
 11422  0042AE  EF7C  F021         	goto	l1204
 11423  0042B2                     u3340:
 11424  0042B2                     l3229:
 11425  0042B2  EE20 F002          	lfsr	2,2
 11426  0042B6  5006               	movf	fputc@fp^0,w,c
 11427  0042B8  26D9               	addwf	fsr2l,f,c
 11428  0042BA  5007               	movf	(fputc@fp+1)^0,w,c
 11429  0042BC  22DA               	addwfc	fsr2h,f,c
 11430  0042BE  CFDE F008          	movff	postinc2,??_fputc
 11431  0042C2  CFDD F009          	movff	postdec2,??_fputc+1
 11432  0042C6  C006  FFD9         	movff	fputc@fp,fsr2l
 11433  0042CA  C007  FFDA         	movff	fputc@fp+1,fsr2h
 11434  0042CE  CFDE F00A          	movff	postinc2,??_fputc+2
 11435  0042D2  CFDD F00B          	movff	postdec2,??_fputc+3
 11436  0042D6  5008               	movf	??_fputc^0,w,c
 11437  0042D8  240A               	addwf	(??_fputc+2)^0,w,c
 11438  0042DA  6ED9               	movwf	fsr2l,c
 11439  0042DC  5009               	movf	(??_fputc+1)^0,w,c
 11440  0042DE  200B               	addwfc	(??_fputc+3)^0,w,c
 11441  0042E0  6EDA               	movwf	fsr2h,c
 11442  0042E2  C004  FFDF         	movff	fputc@c,indf2
 11443  0042E6  EE20 F002          	lfsr	2,2
 11444  0042EA  5006               	movf	fputc@fp^0,w,c
 11445  0042EC  26D9               	addwf	fsr2l,f,c
 11446  0042EE  5007               	movf	(fputc@fp+1)^0,w,c
 11447  0042F0  22DA               	addwfc	fsr2h,f,c
 11448  0042F2  2ADE               	incf	postinc2,f,c
 11449  0042F4  0E00               	movlw	0
 11450  0042F6  22DD               	addwfc	postdec2,f,c
 11451  0042F8                     l1204:
 11452  0042F8  0012               	return		;funcret
 11453  0042FA                     __end_of_fputc:
 11454                           	callstack 0
 11455                           
 11456 ;; *************** function _putch *****************
 11457 ;; Defined at:
 11458 ;;		line 262 in file "SensorNegPosAprox.c"
 11459 ;; Parameters:    Size  Location     Type
 11460 ;;  data            1    wreg     unsigned char 
 11461 ;; Auto vars:     Size  Location     Type
 11462 ;;  data            1    1[COMRAM] unsigned char 
 11463 ;;  Activa          1    2[COMRAM] unsigned char 
 11464 ;; Return value:  Size  Location     Type
 11465 ;;                  1    wreg      void 
 11466 ;; Registers used:
 11467 ;;		wreg, status,2, status,0
 11468 ;; Tracked objects:
 11469 ;;		On entry : 0/0
 11470 ;;		On exit  : 0/0
 11471 ;;		Unchanged: 0/0
 11472 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 11473 ;;      Params:         0       0       0       0       0       0       0       0       0
 11474 ;;      Locals:         2       0       0       0       0       0       0       0       0
 11475 ;;      Temps:          1       0       0       0       0       0       0       0       0
 11476 ;;      Totals:         3       0       0       0       0       0       0       0       0
 11477 ;;Total ram usage:        3 bytes
 11478 ;; Hardware stack levels used:    1
 11479 ;; This function calls:
 11480 ;;		Nothing
 11481 ;; This function is called by:
 11482 ;;		_fputc
 11483 ;; This function uses a non-reentrant model
 11484 ;;
 11485                           
 11486                           	psect	text46
 11487  004A98                     __ptext46:
 11488                           	callstack 0
 11489  004A98                     _putch:
 11490                           	callstack 25
 11491                           
 11492                           ;incstack = 0
 11493                           ;putch@data stored from wreg
 11494  004A98  6E02               	movwf	putch@data^0,c
 11495  004A9A                     
 11496                           ;SensorNegPosAprox.c: 262: void putch(char data);SensorNegPosAprox.c: 263: {;SensorNegPo
      +                          sAprox.c: 264:     char Activa;;SensorNegPosAprox.c: 265:     Activa = data & 0xF0;
 11497  004A9A  5002               	movf	putch@data^0,w,c
 11498  004A9C  0BF0               	andlw	240
 11499  004A9E  6E03               	movwf	putch@Activa^0,c
 11500                           
 11501                           ;SensorNegPosAprox.c: 266:     LATD = Activa | 0x05;
 11502  004AA0  5003               	movf	putch@Activa^0,w,c
 11503  004AA2  0905               	iorlw	5
 11504  004AA4  6E8C               	movwf	140,c	;volatile
 11505  004AA6                     
 11506                           ;SensorNegPosAprox.c: 268:     _delay((unsigned long)((10)*(8000000/4000000.0)));
 11507  004AA6  0E06               	movlw	6
 11508  004AA8                     u6857:
 11509  004AA8  2EE8               	decfsz	wreg,f,c
 11510  004AAA  D7FE               	bra	u6857
 11511  004AAC  D000               	nop2	
 11512  004AAE                     
 11513                           ;SensorNegPosAprox.c: 269:     LATD = Activa | 0x01;
 11514  004AAE  5003               	movf	putch@Activa^0,w,c
 11515  004AB0  0901               	iorlw	1
 11516  004AB2  6E8C               	movwf	140,c	;volatile
 11517                           
 11518                           ;SensorNegPosAprox.c: 271:     _delay((unsigned long)((1)*(8000000/4000.0)));
 11519  004AB4  0E03               	movlw	3
 11520  004AB6  6E01               	movwf	??_putch^0,c
 11521  004AB8  0E98               	movlw	152
 11522  004ABA                     u6867:
 11523  004ABA  2EE8               	decfsz	wreg,f,c
 11524  004ABC  D7FE               	bra	u6867
 11525  004ABE  2E01               	decfsz	??_putch^0,f,c
 11526  004AC0  D7FC               	bra	u6867
 11527  004AC2                     
 11528                           ;SensorNegPosAprox.c: 272:     Activa = (unsigned char)(data << 4);
 11529  004AC2  3802               	swapf	putch@data^0,w,c
 11530  004AC4  0BF0               	andlw	240
 11531  004AC6  6E03               	movwf	putch@Activa^0,c
 11532  004AC8                     
 11533                           ;SensorNegPosAprox.c: 273:     LATD = Activa | 0x05;
 11534  004AC8  5003               	movf	putch@Activa^0,w,c
 11535  004ACA  0905               	iorlw	5
 11536  004ACC  6E8C               	movwf	140,c	;volatile
 11537                           
 11538                           ;SensorNegPosAprox.c: 274:     _delay((unsigned long)((10)*(8000000/4000000.0)));
 11539  004ACE  0E06               	movlw	6
 11540  004AD0                     u6877:
 11541  004AD0  2EE8               	decfsz	wreg,f,c
 11542  004AD2  D7FE               	bra	u6877
 11543  004AD4  D000               	nop2	
 11544  004AD6                     
 11545                           ;SensorNegPosAprox.c: 275:     LATD = Activa | 0x01;
 11546  004AD6  5003               	movf	putch@Activa^0,w,c
 11547  004AD8  0901               	iorlw	1
 11548  004ADA  6E8C               	movwf	140,c	;volatile
 11549  004ADC  0012               	return		;funcret
 11550  004ADE                     __end_of_putch:
 11551                           	callstack 0
 11552                           
 11553 ;; *************** function _atoi *****************
 11554 ;; Defined at:
 11555 ;;		line 4 in file "/Applications/microchip/xc8/v2.31/pic/sources/c99/common/atoi.c"
 11556 ;; Parameters:    Size  Location     Type
 11557 ;;  s               2    7[COMRAM] PTR const unsigned char 
 11558 ;;		 -> STR_10(19), STR_9(19), STR_8(14), STR_7(19), 
 11559 ;;		 -> STR_6(19), STR_5(17), STR_4(17), STR_3(15), 
 11560 ;;		 -> STR_2(15), STR_1(15), Valores(16), 
 11561 ;; Auto vars:     Size  Location     Type
 11562 ;;  n               2   20[COMRAM] int 
 11563 ;;  neg             2   13[COMRAM] int 
 11564 ;; Return value:  Size  Location     Type
 11565 ;;                  2    7[COMRAM] int 
 11566 ;; Registers used:
 11567 ;;		wreg, fsr1l, fsr1h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 11568 ;; Tracked objects:
 11569 ;;		On entry : 0/0
 11570 ;;		On exit  : 0/0
 11571 ;;		Unchanged: 0/0
 11572 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 11573 ;;      Params:         2       0       0       0       0       0       0       0       0
 11574 ;;      Locals:         9       0       0       0       0       0       0       0       0
 11575 ;;      Temps:          4       0       0       0       0       0       0       0       0
 11576 ;;      Totals:        15       0       0       0       0       0       0       0       0
 11577 ;;Total ram usage:       15 bytes
 11578 ;; Hardware stack levels used:    1
 11579 ;; Hardware stack levels required when called:    1
 11580 ;; This function calls:
 11581 ;;		___wmul
 11582 ;;		_isdigit
 11583 ;;		_isspace
 11584 ;; This function is called by:
 11585 ;;		_vfpfcnvrt
 11586 ;; This function uses a non-reentrant model
 11587 ;;
 11588                           
 11589                           	psect	text47
 11590  00348A                     __ptext47:
 11591                           	callstack 0
 11592  00348A                     _atoi:
 11593                           	callstack 25
 11594  00348A  0E00               	movlw	0
 11595  00348C  6E16               	movwf	(atoi@n+1)^0,c
 11596  00348E  0E00               	movlw	0
 11597  003490  6E15               	movwf	atoi@n^0,c
 11598  003492  0E00               	movlw	0
 11599  003494  6E0F               	movwf	(atoi@neg+1)^0,c
 11600  003496  0E00               	movlw	0
 11601  003498  6E0E               	movwf	atoi@neg^0,c
 11602  00349A  EF51  F01A         	goto	l4495
 11603  00349E                     l4493:
 11604  00349E  4A08               	infsnz	atoi@s^0,f,c
 11605  0034A0  2A09               	incf	(atoi@s+1)^0,f,c
 11606  0034A2                     l4495:
 11607  0034A2  0E01               	movlw	1
 11608  0034A4  6E14               	movwf	_atoi$1314^0,c
 11609  0034A6  C008  FFF6         	movff	atoi@s,tblptrl
 11610  0034AA  C009  FFF7         	movff	atoi@s+1,tblptrh
 11611  0034AE  6AF8               	clrf	tblptru,c
 11612  0034B0  0E07               	movlw	(high __ramtop+-1)
 11613  0034B2  64F7               	cpfsgt	tblptrh,c
 11614  0034B4  D003               	bra	u5667
 11615  0034B6  0008               	tblrd		*
 11616  0034B8  50F5               	movf	tablat,w,c
 11617  0034BA  D005               	bra	u5660
 11618  0034BC                     u5667:
 11619  0034BC  CFF6 FFE1          	movff	tblptrl,fsr1l
 11620  0034C0  CFF7 FFE2          	movff	tblptrh,fsr1h
 11621  0034C4  50E7               	movf	indf1,w,c
 11622  0034C6                     u5660:
 11623  0034C6  0A20               	xorlw	32
 11624  0034C8  B4D8               	btfsc	status,2,c
 11625  0034CA  EF69  F01A         	goto	u5671
 11626  0034CE  EF6B  F01A         	goto	u5670
 11627  0034D2                     u5671:
 11628  0034D2  EF92  F01A         	goto	l4503
 11629  0034D6                     u5670:
 11630  0034D6  0EF7               	movlw	247
 11631  0034D8  6E0A               	movwf	??_atoi^0,c
 11632  0034DA  0EFF               	movlw	255
 11633  0034DC  6E0B               	movwf	(??_atoi+1)^0,c
 11634  0034DE  C008  FFF6         	movff	atoi@s,tblptrl
 11635  0034E2  C009  FFF7         	movff	atoi@s+1,tblptrh
 11636  0034E6  6AF8               	clrf	tblptru,c
 11637  0034E8  0E07               	movlw	(high __ramtop+-1)
 11638  0034EA  64F7               	cpfsgt	tblptrh,c
 11639  0034EC  D003               	bra	u5687
 11640  0034EE  0008               	tblrd		*
 11641  0034F0  50F5               	movf	tablat,w,c
 11642  0034F2  D005               	bra	u5680
 11643  0034F4                     u5687:
 11644  0034F4  CFF6 FFE1          	movff	tblptrl,fsr1l
 11645  0034F8  CFF7 FFE2          	movff	tblptrh,fsr1h
 11646  0034FC  50E7               	movf	indf1,w,c
 11647  0034FE                     u5680:
 11648  0034FE  6E0C               	movwf	(??_atoi+2)^0,c
 11649  003500  6A0D               	clrf	(??_atoi+3)^0,c
 11650  003502  500A               	movf	??_atoi^0,w,c
 11651  003504  260C               	addwf	(??_atoi+2)^0,f,c
 11652  003506  500B               	movf	(??_atoi+1)^0,w,c
 11653  003508  220D               	addwfc	(??_atoi+3)^0,f,c
 11654  00350A  500D               	movf	(??_atoi+3)^0,w,c
 11655  00350C  E109               	bnz	u5690
 11656  00350E  0E05               	movlw	5
 11657  003510  5C0C               	subwf	(??_atoi+2)^0,w,c
 11658  003512  A0D8               	btfss	status,0,c
 11659  003514  EF8E  F01A         	goto	u5691
 11660  003518  EF90  F01A         	goto	u5690
 11661  00351C                     u5691:
 11662  00351C  EF92  F01A         	goto	l4503
 11663  003520                     u5690:
 11664  003520  0E00               	movlw	0
 11665  003522  6E14               	movwf	_atoi$1314^0,c
 11666  003524                     l4503:
 11667  003524  C014  F010         	movff	_atoi$1314,_atoi$1313
 11668  003528  6A11               	clrf	(_atoi$1313+1)^0,c
 11669  00352A  5010               	movf	_atoi$1313^0,w,c
 11670  00352C  1011               	iorwf	(_atoi$1313+1)^0,w,c
 11671  00352E  A4D8               	btfss	status,2,c
 11672  003530  EF9C  F01A         	goto	u5701
 11673  003534  EF9E  F01A         	goto	u5700
 11674  003538                     u5701:
 11675  003538  EF4F  F01A         	goto	l4493
 11676  00353C                     u5700:
 11677  00353C  EFA8  F01A         	goto	l4513
 11678  003540                     l4509:
 11679  003540  0E00               	movlw	0
 11680  003542  6E0F               	movwf	(atoi@neg+1)^0,c
 11681  003544  0E01               	movlw	1
 11682  003546  6E0E               	movwf	atoi@neg^0,c
 11683  003548                     l4511:
 11684  003548  4A08               	infsnz	atoi@s^0,f,c
 11685  00354A  2A09               	incf	(atoi@s+1)^0,f,c
 11686  00354C  EFF3  F01A         	goto	l4519
 11687  003550                     l4513:
 11688  003550  C008  FFF6         	movff	atoi@s,tblptrl
 11689  003554  C009  FFF7         	movff	atoi@s+1,tblptrh
 11690  003558  6AF8               	clrf	tblptru,c
 11691  00355A  0E07               	movlw	(high __ramtop+-1)
 11692  00355C  64F7               	cpfsgt	tblptrh,c
 11693  00355E  D003               	bra	u5717
 11694  003560  0008               	tblrd		*
 11695  003562  50F5               	movf	tablat,w,c
 11696  003564  D005               	bra	u5710
 11697  003566                     u5717:
 11698  003566  CFF6 FFE1          	movff	tblptrl,fsr1l
 11699  00356A  CFF7 FFE2          	movff	tblptrh,fsr1h
 11700  00356E  50E7               	movf	indf1,w,c
 11701  003570                     u5710:
 11702  003570  6E0A               	movwf	??_atoi^0,c
 11703  003572  6A0B               	clrf	(??_atoi+1)^0,c
 11704                           
 11705                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
 11706                           ; Switch size 1, requested type "simple"
 11707                           ; Number of cases is 1, Range of values is 0 to 0
 11708                           ; switch strategies available:
 11709                           ; Name         Instructions Cycles
 11710                           ; simple_byte            4     3 (average)
 11711                           ;	Chosen strategy is simple_byte
 11712  003574  500B               	movf	(??_atoi+1)^0,w,c
 11713  003576  0A00               	xorlw	0	; case 0
 11714  003578  B4D8               	btfsc	status,2,c
 11715  00357A  EFC1  F01A         	goto	l5163
 11716  00357E  EFF3  F01A         	goto	l4519
 11717  003582                     l5163:
 11718                           
 11719                           ; Switch size 1, requested type "simple"
 11720                           ; Number of cases is 2, Range of values is 43 to 45
 11721                           ; switch strategies available:
 11722                           ; Name         Instructions Cycles
 11723                           ; simple_byte            7     4 (average)
 11724                           ;	Chosen strategy is simple_byte
 11725  003582  500A               	movf	??_atoi^0,w,c
 11726  003584  0A2B               	xorlw	43	; case 43
 11727  003586  B4D8               	btfsc	status,2,c
 11728  003588  EFA4  F01A         	goto	l4511
 11729  00358C  0A06               	xorlw	6	; case 45
 11730  00358E  B4D8               	btfsc	status,2,c
 11731  003590  EFA0  F01A         	goto	l4509
 11732  003594  EFF3  F01A         	goto	l4519
 11733  003598                     l4515:
 11734  003598  C015  F001         	movff	atoi@n,___wmul@multiplier
 11735  00359C  C016  F002         	movff	atoi@n+1,___wmul@multiplier+1
 11736  0035A0  0E00               	movlw	0
 11737  0035A2  6E04               	movwf	(___wmul@multiplicand+1)^0,c
 11738  0035A4  0E0A               	movlw	10
 11739  0035A6  6E03               	movwf	___wmul@multiplicand^0,c
 11740  0035A8  EC67  F026         	call	___wmul	;wreg free
 11741  0035AC  C008  FFF6         	movff	atoi@s,tblptrl
 11742  0035B0  C009  FFF7         	movff	atoi@s+1,tblptrh
 11743  0035B4  6AF8               	clrf	tblptru,c
 11744  0035B6  0E07               	movlw	(high __ramtop+-1)
 11745  0035B8  64F7               	cpfsgt	tblptrh,c
 11746  0035BA  D003               	bra	u5727
 11747  0035BC  0008               	tblrd		*
 11748  0035BE  50F5               	movf	tablat,w,c
 11749  0035C0  D005               	bra	u5720
 11750  0035C2                     u5727:
 11751  0035C2  CFF6 FFE1          	movff	tblptrl,fsr1l
 11752  0035C6  CFF7 FFE2          	movff	tblptrh,fsr1h
 11753  0035CA  50E7               	movf	indf1,w,c
 11754  0035CC                     u5720:
 11755  0035CC  6E0A               	movwf	??_atoi^0,c
 11756  0035CE  500A               	movf	??_atoi^0,w,c
 11757  0035D0  5E01               	subwf	?___wmul^0,f,c
 11758  0035D2  0E00               	movlw	0
 11759  0035D4  5A02               	subwfb	(?___wmul+1)^0,f,c
 11760  0035D6  0E30               	movlw	48
 11761  0035D8  2401               	addwf	?___wmul^0,w,c
 11762  0035DA  6E15               	movwf	atoi@n^0,c
 11763  0035DC  0E00               	movlw	0
 11764  0035DE  2002               	addwfc	(?___wmul+1)^0,w,c
 11765  0035E0  6E16               	movwf	(atoi@n+1)^0,c
 11766  0035E2  EFA4  F01A         	goto	l4511
 11767  0035E6                     l4519:
 11768  0035E6  0ED0               	movlw	208
 11769  0035E8  6E0A               	movwf	??_atoi^0,c
 11770  0035EA  0EFF               	movlw	255
 11771  0035EC  6E0B               	movwf	(??_atoi+1)^0,c
 11772  0035EE  C008  FFF6         	movff	atoi@s,tblptrl
 11773  0035F2  C009  FFF7         	movff	atoi@s+1,tblptrh
 11774  0035F6  6AF8               	clrf	tblptru,c
 11775  0035F8  0E07               	movlw	(high __ramtop+-1)
 11776  0035FA  64F7               	cpfsgt	tblptrh,c
 11777  0035FC  D003               	bra	u5737
 11778  0035FE  0008               	tblrd		*
 11779  003600  50F5               	movf	tablat,w,c
 11780  003602  D005               	bra	u5730
 11781  003604                     u5737:
 11782  003604  CFF6 FFE1          	movff	tblptrl,fsr1l
 11783  003608  CFF7 FFE2          	movff	tblptrh,fsr1h
 11784  00360C  50E7               	movf	indf1,w,c
 11785  00360E                     u5730:
 11786  00360E  6E0C               	movwf	(??_atoi+2)^0,c
 11787  003610  6A0D               	clrf	(??_atoi+3)^0,c
 11788  003612  500A               	movf	??_atoi^0,w,c
 11789  003614  260C               	addwf	(??_atoi+2)^0,f,c
 11790  003616  500B               	movf	(??_atoi+1)^0,w,c
 11791  003618  220D               	addwfc	(??_atoi+3)^0,f,c
 11792  00361A  500D               	movf	(??_atoi+3)^0,w,c
 11793  00361C  E10A               	bnz	u5740
 11794  00361E  0E0A               	movlw	10
 11795  003620  5C0C               	subwf	(??_atoi+2)^0,w,c
 11796  003622  A0D8               	btfss	status,0,c
 11797  003624  EF16  F01B         	goto	u5741
 11798  003628  EF19  F01B         	goto	u5740
 11799  00362C                     u5741:
 11800  00362C  0E01               	movlw	1
 11801  00362E  EF1A  F01B         	goto	u5750
 11802  003632                     u5740:
 11803  003632  0E00               	movlw	0
 11804  003634                     u5750:
 11805  003634  6E12               	movwf	_atoi$1315^0,c
 11806  003636  6A13               	clrf	(_atoi$1315+1)^0,c
 11807  003638  5012               	movf	_atoi$1315^0,w,c
 11808  00363A  1013               	iorwf	(_atoi$1315+1)^0,w,c
 11809  00363C  A4D8               	btfss	status,2,c
 11810  00363E  EF23  F01B         	goto	u5761
 11811  003642  EF25  F01B         	goto	u5760
 11812  003646                     u5761:
 11813  003646  EFCC  F01A         	goto	l4515
 11814  00364A                     u5760:
 11815  00364A  500E               	movf	atoi@neg^0,w,c
 11816  00364C  100F               	iorwf	(atoi@neg+1)^0,w,c
 11817  00364E  A4D8               	btfss	status,2,c
 11818  003650  EF2C  F01B         	goto	u5771
 11819  003654  EF2E  F01B         	goto	u5770
 11820  003658                     u5771:
 11821  003658  EF3C  F01B         	goto	l1156
 11822  00365C                     u5770:
 11823  00365C  C015  F00A         	movff	atoi@n,??_atoi
 11824  003660  C016  F00B         	movff	atoi@n+1,??_atoi+1
 11825  003664  1E0A               	comf	??_atoi^0,f,c
 11826  003666  1E0B               	comf	(??_atoi+1)^0,f,c
 11827  003668  4A0A               	infsnz	??_atoi^0,f,c
 11828  00366A  2A0B               	incf	(??_atoi+1)^0,f,c
 11829  00366C  C00A  F008         	movff	??_atoi,?_atoi
 11830  003670  C00B  F009         	movff	??_atoi+1,?_atoi+1
 11831  003674  EF40  F01B         	goto	l1159
 11832  003678                     l1156:
 11833  003678  C015  F008         	movff	atoi@n,?_atoi
 11834  00367C  C016  F009         	movff	atoi@n+1,?_atoi+1
 11835  003680                     l1159:
 11836  003680  0012               	return		;funcret
 11837  003682                     __end_of_atoi:
 11838                           	callstack 0
 11839                           
 11840 ;; *************** function _isspace *****************
 11841 ;; Defined at:
 11842 ;;		line 5 in file "/Applications/microchip/xc8/v2.31/pic/sources/c99/common/isspace.c"
 11843 ;; Parameters:    Size  Location     Type
 11844 ;;  c               2    0[COMRAM] int 
 11845 ;; Auto vars:     Size  Location     Type
 11846 ;;		None
 11847 ;; Return value:  Size  Location     Type
 11848 ;;                  2    0[COMRAM] int 
 11849 ;; Registers used:
 11850 ;;		wreg, status,2, status,0
 11851 ;; Tracked objects:
 11852 ;;		On entry : 0/0
 11853 ;;		On exit  : 0/0
 11854 ;;		Unchanged: 0/0
 11855 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 11856 ;;      Params:         2       0       0       0       0       0       0       0       0
 11857 ;;      Locals:         1       0       0       0       0       0       0       0       0
 11858 ;;      Temps:          4       0       0       0       0       0       0       0       0
 11859 ;;      Totals:         7       0       0       0       0       0       0       0       0
 11860 ;;Total ram usage:        7 bytes
 11861 ;; Hardware stack levels used:    1
 11862 ;; This function calls:
 11863 ;;		Nothing
 11864 ;; This function is called by:
 11865 ;;		_atoi
 11866 ;; This function uses a non-reentrant model
 11867 ;;
 11868                           
 11869                           	psect	text48
 11870  00496A                     __ptext48:
 11871                           	callstack 0
 11872  00496A                     _isspace:
 11873                           	callstack 25
 11874  00496A  0E01               	movlw	1
 11875  00496C  6E07               	movwf	_isspace$1344^0,c
 11876  00496E  0E20               	movlw	32
 11877  004970  1801               	xorwf	isspace@c^0,w,c
 11878  004972  1002               	iorwf	(isspace@c+1)^0,w,c
 11879  004974  B4D8               	btfsc	status,2,c
 11880  004976  EFBF  F024         	goto	u4901
 11881  00497A  EFC1  F024         	goto	u4900
 11882  00497E                     u4901:
 11883  00497E  EFDA  F024         	goto	l4089
 11884  004982                     u4900:
 11885  004982  0EF7               	movlw	247
 11886  004984  6E03               	movwf	??_isspace^0,c
 11887  004986  0EFF               	movlw	255
 11888  004988  6E04               	movwf	(??_isspace+1)^0,c
 11889  00498A  C001  F005         	movff	isspace@c,??_isspace+2
 11890  00498E  C002  F006         	movff	isspace@c+1,??_isspace+3
 11891  004992  5003               	movf	??_isspace^0,w,c
 11892  004994  2605               	addwf	(??_isspace+2)^0,f,c
 11893  004996  5004               	movf	(??_isspace+1)^0,w,c
 11894  004998  2206               	addwfc	(??_isspace+3)^0,f,c
 11895  00499A  5006               	movf	(??_isspace+3)^0,w,c
 11896  00499C  E109               	bnz	u4910
 11897  00499E  0E05               	movlw	5
 11898  0049A0  5C05               	subwf	(??_isspace+2)^0,w,c
 11899  0049A2  A0D8               	btfss	status,0,c
 11900  0049A4  EFD6  F024         	goto	u4911
 11901  0049A8  EFD8  F024         	goto	u4910
 11902  0049AC                     u4911:
 11903  0049AC  EFDA  F024         	goto	l4089
 11904  0049B0                     u4910:
 11905  0049B0  0E00               	movlw	0
 11906  0049B2  6E07               	movwf	_isspace$1344^0,c
 11907  0049B4                     l4089:
 11908  0049B4  C007  F001         	movff	_isspace$1344,?_isspace
 11909  0049B8  6A02               	clrf	(?_isspace+1)^0,c
 11910  0049BA  0012               	return		;funcret
 11911  0049BC                     __end_of_isspace:
 11912                           	callstack 0
 11913                           
 11914 ;; *************** function _isdigit *****************
 11915 ;; Defined at:
 11916 ;;		line 5 in file "/Applications/microchip/xc8/v2.31/pic/sources/c99/common/isdigit.c"
 11917 ;; Parameters:    Size  Location     Type
 11918 ;;  c               2    0[COMRAM] int 
 11919 ;; Auto vars:     Size  Location     Type
 11920 ;;		None
 11921 ;; Return value:  Size  Location     Type
 11922 ;;                  2    0[COMRAM] int 
 11923 ;; Registers used:
 11924 ;;		wreg, status,2, status,0
 11925 ;; Tracked objects:
 11926 ;;		On entry : 0/0
 11927 ;;		On exit  : 0/0
 11928 ;;		Unchanged: 0/0
 11929 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 11930 ;;      Params:         2       0       0       0       0       0       0       0       0
 11931 ;;      Locals:         0       0       0       0       0       0       0       0       0
 11932 ;;      Temps:          4       0       0       0       0       0       0       0       0
 11933 ;;      Totals:         6       0       0       0       0       0       0       0       0
 11934 ;;Total ram usage:        6 bytes
 11935 ;; Hardware stack levels used:    1
 11936 ;; This function calls:
 11937 ;;		Nothing
 11938 ;; This function is called by:
 11939 ;;		_vfpfcnvrt
 11940 ;;		_atoi
 11941 ;; This function uses a non-reentrant model
 11942 ;;
 11943                           
 11944                           	psect	text49
 11945  004C14                     __ptext49:
 11946                           	callstack 0
 11947  004C14                     _isdigit:
 11948                           	callstack 26
 11949  004C14  0ED0               	movlw	208
 11950  004C16  6E03               	movwf	??_isdigit^0,c
 11951  004C18  0EFF               	movlw	255
 11952  004C1A  6E04               	movwf	(??_isdigit+1)^0,c
 11953  004C1C  C001  F005         	movff	isdigit@c,??_isdigit+2
 11954  004C20  C002  F006         	movff	isdigit@c+1,??_isdigit+3
 11955  004C24  5003               	movf	??_isdigit^0,w,c
 11956  004C26  2605               	addwf	(??_isdigit+2)^0,f,c
 11957  004C28  5004               	movf	(??_isdigit+1)^0,w,c
 11958  004C2A  2206               	addwfc	(??_isdigit+3)^0,f,c
 11959  004C2C  5006               	movf	(??_isdigit+3)^0,w,c
 11960  004C2E  E10A               	bnz	u4880
 11961  004C30  0E0A               	movlw	10
 11962  004C32  5C05               	subwf	(??_isdigit+2)^0,w,c
 11963  004C34  A0D8               	btfss	status,0,c
 11964  004C36  EF1F  F026         	goto	u4881
 11965  004C3A  EF22  F026         	goto	u4880
 11966  004C3E                     u4881:
 11967  004C3E  0E01               	movlw	1
 11968  004C40  EF23  F026         	goto	u4890
 11969  004C44                     u4880:
 11970  004C44  0E00               	movlw	0
 11971  004C46                     u4890:
 11972  004C46  6E01               	movwf	?_isdigit^0,c
 11973  004C48  6A02               	clrf	(?_isdigit+1)^0,c
 11974  004C4A  0012               	return		;funcret
 11975  004C4C                     __end_of_isdigit:
 11976                           	callstack 0
 11977                           
 11978 ;; *************** function ___wmul *****************
 11979 ;; Defined at:
 11980 ;;		line 15 in file "/Applications/microchip/xc8/v2.31/pic/sources/c99/common/Umul16.c"
 11981 ;; Parameters:    Size  Location     Type
 11982 ;;  multiplier      2    0[COMRAM] unsigned int 
 11983 ;;  multiplicand    2    2[COMRAM] unsigned int 
 11984 ;; Auto vars:     Size  Location     Type
 11985 ;;  product         2    4[COMRAM] unsigned int 
 11986 ;; Return value:  Size  Location     Type
 11987 ;;                  2    0[COMRAM] unsigned int 
 11988 ;; Registers used:
 11989 ;;		wreg, status,2, status,0, prodl, prodh
 11990 ;; Tracked objects:
 11991 ;;		On entry : 0/0
 11992 ;;		On exit  : 0/0
 11993 ;;		Unchanged: 0/0
 11994 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 11995 ;;      Params:         4       0       0       0       0       0       0       0       0
 11996 ;;      Locals:         2       0       0       0       0       0       0       0       0
 11997 ;;      Temps:          0       0       0       0       0       0       0       0       0
 11998 ;;      Totals:         6       0       0       0       0       0       0       0       0
 11999 ;;Total ram usage:        6 bytes
 12000 ;; Hardware stack levels used:    1
 12001 ;; This function calls:
 12002 ;;		Nothing
 12003 ;; This function is called by:
 12004 ;;		_atoi
 12005 ;; This function uses a non-reentrant model
 12006 ;;
 12007                           
 12008                           	psect	text50
 12009  004CCE                     __ptext50:
 12010                           	callstack 0
 12011  004CCE                     ___wmul:
 12012                           	callstack 25
 12013  004CCE  5001               	movf	___wmul@multiplier^0,w,c
 12014  004CD0  0203               	mulwf	___wmul@multiplicand^0,c
 12015  004CD2  CFF3 F005          	movff	prodl,___wmul@product
 12016  004CD6  CFF4 F006          	movff	prodh,___wmul@product+1
 12017  004CDA  5001               	movf	___wmul@multiplier^0,w,c
 12018  004CDC  0204               	mulwf	(___wmul@multiplicand+1)^0,c
 12019  004CDE  50F3               	movf	243,w,c
 12020  004CE0  2606               	addwf	(___wmul@product+1)^0,f,c
 12021  004CE2  5002               	movf	(___wmul@multiplier+1)^0,w,c
 12022  004CE4  0203               	mulwf	___wmul@multiplicand^0,c
 12023  004CE6  50F3               	movf	243,w,c
 12024  004CE8  2606               	addwf	(___wmul@product+1)^0,f,c
 12025  004CEA  C005  F001         	movff	___wmul@product,?___wmul
 12026  004CEE  C006  F002         	movff	___wmul@product+1,?___wmul+1
 12027  004CF2  0012               	return		;funcret
 12028  004CF4                     __end_of___wmul:
 12029                           	callstack 0
 12030                           
 12031                           	psect	rparam
 12032  0000                     
 12033                           	psect	idloc
 12034                           
 12035                           ;Config register IDLOC0 @ 0x200000
 12036                           ;	unspecified, using default values
 12037  200000                     	org	2097152
 12038  200000  FF                 	db	255
 12039                           
 12040                           ;Config register IDLOC1 @ 0x200001
 12041                           ;	unspecified, using default values
 12042  200001                     	org	2097153
 12043  200001  FF                 	db	255
 12044                           
 12045                           ;Config register IDLOC2 @ 0x200002
 12046                           ;	unspecified, using default values
 12047  200002                     	org	2097154
 12048  200002  FF                 	db	255
 12049                           
 12050                           ;Config register IDLOC3 @ 0x200003
 12051                           ;	unspecified, using default values
 12052  200003                     	org	2097155
 12053  200003  FF                 	db	255
 12054                           
 12055                           ;Config register IDLOC4 @ 0x200004
 12056                           ;	unspecified, using default values
 12057  200004                     	org	2097156
 12058  200004  FF                 	db	255
 12059                           
 12060                           ;Config register IDLOC5 @ 0x200005
 12061                           ;	unspecified, using default values
 12062  200005                     	org	2097157
 12063  200005  FF                 	db	255
 12064                           
 12065                           ;Config register IDLOC6 @ 0x200006
 12066                           ;	unspecified, using default values
 12067  200006                     	org	2097158
 12068  200006  FF                 	db	255
 12069                           
 12070                           ;Config register IDLOC7 @ 0x200007
 12071                           ;	unspecified, using default values
 12072  200007                     	org	2097159
 12073  200007  FF                 	db	255
 12074                           
 12075                           	psect	config
 12076                           
 12077                           ;Config register CONFIG1L @ 0x300000
 12078                           ;	PLL Selection
 12079                           ;	PLLSEL = 0x0, unprogrammed default
 12080                           ;	PLL Enable Configuration bit
 12081                           ;	CFGPLLEN = OFF, PLL Disabled (firmware controlled)
 12082                           ;	CPU System Clock Postscaler
 12083                           ;	CPUDIV = 0x0, unprogrammed default
 12084                           ;	Low Speed USB mode with 48 MHz system clock
 12085                           ;	LS48MHZ = 0x0, unprogrammed default
 12086  300000                     	org	3145728
 12087  300000  00                 	db	0
 12088                           
 12089                           ;Config register CONFIG1H @ 0x300001
 12090                           ;	Oscillator Selection
 12091                           ;	FOSC = INTOSCIO, Internal oscillator
 12092                           ;	Primary Oscillator Shutdown
 12093                           ;	PCLKEN = 0x1, unprogrammed default
 12094                           ;	Fail-Safe Clock Monitor
 12095                           ;	FCMEN = OFF, Fail-Safe Clock Monitor disabled
 12096                           ;	Internal/External Oscillator Switchover
 12097                           ;	IESO = OFF, Oscillator Switchover mode disabled
 12098  300001                     	org	3145729
 12099  300001  28                 	db	40
 12100                           
 12101                           ;Config register CONFIG2L @ 0x300002
 12102                           ;	Power-up Timer Enable
 12103                           ;	nPWRTEN = OFF, Power up timer disabled
 12104                           ;	Brown-out Reset Enable
 12105                           ;	BOREN = 0x3, unprogrammed default
 12106                           ;	Brown-out Reset Voltage
 12107                           ;	BORV = 0x3, unprogrammed default
 12108                           ;	Low-Power Brown-out Reset
 12109                           ;	nLPBOR = OFF, Low-Power Brown-out Reset disabled
 12110  300002                     	org	3145730
 12111  300002  5F                 	db	95
 12112                           
 12113                           ;Config register CONFIG2H @ 0x300003
 12114                           ;	Watchdog Timer Enable bits
 12115                           ;	WDTEN = OFF, WDT disabled in hardware (SWDTEN ignored)
 12116                           ;	Watchdog Timer Postscaler
 12117                           ;	WDTPS = 0xF, unprogrammed default
 12118  300003                     	org	3145731
 12119  300003  3C                 	db	60
 12120                           
 12121                           ; Padding undefined space
 12122  300004                     	org	3145732
 12123  300004  FF                 	db	255
 12124                           
 12125                           ;Config register CONFIG3H @ 0x300005
 12126                           ;	CCP2 MUX bit
 12127                           ;	CCP2MX = 0x1, unprogrammed default
 12128                           ;	PORTB A/D Enable bit
 12129                           ;	PBADEN = 0x1, unprogrammed default
 12130                           ;	Timer3 Clock Input MUX bit
 12131                           ;	T3CMX = 0x1, unprogrammed default
 12132                           ;	SDO Output MUX bit
 12133                           ;	SDOMX = 0x1, unprogrammed default
 12134                           ;	Master Clear Reset Pin Enable
 12135                           ;	MCLRE = ON, MCLR pin enabled; RE3 input disabled
 12136  300005                     	org	3145733
 12137  300005  D3                 	db	211
 12138                           
 12139                           ;Config register CONFIG4L @ 0x300006
 12140                           ;	Stack Full/Underflow Reset
 12141                           ;	STVREN = 0x1, unprogrammed default
 12142                           ;	Single-Supply ICSP Enable bit
 12143                           ;	LVP = OFF, Single-Supply ICSP disabled
 12144                           ;	Dedicated In-Circuit Debug/Programming Port Enable
 12145                           ;	ICPRT = OFF, ICPORT disabled
 12146                           ;	Extended Instruction Set Enable bit
 12147                           ;	XINST = OFF, Instruction set extension and Indexed Addressing mode disabled
 12148                           ;	Background Debugger Enable bit
 12149                           ;	DEBUG = 0x1, unprogrammed default
 12150  300006                     	org	3145734
 12151  300006  81                 	db	129
 12152                           
 12153                           ; Padding undefined space
 12154  300007                     	org	3145735
 12155  300007  FF                 	db	255
 12156                           
 12157                           ;Config register CONFIG5L @ 0x300008
 12158                           ;	Block 0 Code Protect
 12159                           ;	CP0 = OFF, Block 0 is not code-protected
 12160                           ;	Block 1 Code Protect
 12161                           ;	CP1 = OFF, Block 1 is not code-protected
 12162                           ;	Block 2 Code Protect
 12163                           ;	CP2 = OFF, Block 2 is not code-protected
 12164                           ;	Block 3 Code Protect
 12165                           ;	CP3 = OFF, Block 3 is not code-protected
 12166  300008                     	org	3145736
 12167  300008  0F                 	db	15
 12168                           
 12169                           ;Config register CONFIG5H @ 0x300009
 12170                           ;	Boot Block Code Protect
 12171                           ;	CPB = OFF, Boot block is not code-protected
 12172                           ;	Data EEPROM Code Protect
 12173                           ;	CPD = OFF, Data EEPROM is not code-protected
 12174  300009                     	org	3145737
 12175  300009  C0                 	db	192
 12176                           
 12177                           ;Config register CONFIG6L @ 0x30000A
 12178                           ;	Block 0 Write Protect
 12179                           ;	WRT0 = OFF, Block 0 (0800-1FFFh) is not write-protected
 12180                           ;	Block 1 Write Protect
 12181                           ;	WRT1 = OFF, Block 1 (2000-3FFFh) is not write-protected
 12182                           ;	Block 2 Write Protect
 12183                           ;	WRT2 = OFF, Block 2 (04000-5FFFh) is not write-protected
 12184                           ;	Block 3 Write Protect
 12185                           ;	WRT3 = OFF, Block 3 (06000-7FFFh) is not write-protected
 12186  30000A                     	org	3145738
 12187  30000A  0F                 	db	15
 12188                           
 12189                           ;Config register CONFIG6H @ 0x30000B
 12190                           ;	Configuration Registers Write Protect
 12191                           ;	WRTC = OFF, Configuration registers (300000-3000FFh) are not write-protected
 12192                           ;	Boot Block Write Protect
 12193                           ;	WRTB = OFF, Boot block (0000-7FFh) is not write-protected
 12194                           ;	Data EEPROM Write Protect
 12195                           ;	WRTD = OFF, Data EEPROM is not write-protected
 12196  30000B                     	org	3145739
 12197  30000B  E0                 	db	224
 12198                           
 12199                           ;Config register CONFIG7L @ 0x30000C
 12200                           ;	Block 0 Table Read Protect
 12201                           ;	EBTR0 = OFF, Block 0 is not protected from table reads executed in other blocks
 12202                           ;	Block 1 Table Read Protect
 12203                           ;	EBTR1 = OFF, Block 1 is not protected from table reads executed in other blocks
 12204                           ;	Block 2 Table Read Protect
 12205                           ;	EBTR2 = OFF, Block 2 is not protected from table reads executed in other blocks
 12206                           ;	Block 3 Table Read Protect
 12207                           ;	EBTR3 = OFF, Block 3 is not protected from table reads executed in other blocks
 12208  30000C                     	org	3145740
 12209  30000C  0F                 	db	15
 12210                           
 12211                           ;Config register CONFIG7H @ 0x30000D
 12212                           ;	Boot Block Table Read Protect
 12213                           ;	EBTRB = OFF, Boot block is not protected from table reads executed in other blocks
 12214  30000D                     	org	3145741
 12215  30000D  40                 	db	64
 12216                           tosu	equ	0xFFF
 12217                           tosh	equ	0xFFE
 12218                           tosl	equ	0xFFD
 12219                           stkptr	equ	0xFFC
 12220                           pclatu	equ	0xFFB
 12221                           pclath	equ	0xFFA
 12222                           pcl	equ	0xFF9
 12223                           tblptru	equ	0xFF8
 12224                           tblptrh	equ	0xFF7
 12225                           tblptrl	equ	0xFF6
 12226                           tablat	equ	0xFF5
 12227                           prodh	equ	0xFF4
 12228                           prodl	equ	0xFF3
 12229                           indf0	equ	0xFEF
 12230                           postinc0	equ	0xFEE
 12231                           postdec0	equ	0xFED
 12232                           preinc0	equ	0xFEC
 12233                           plusw0	equ	0xFEB
 12234                           fsr0h	equ	0xFEA
 12235                           fsr0l	equ	0xFE9
 12236                           wreg	equ	0xFE8
 12237                           indf1	equ	0xFE7
 12238                           postinc1	equ	0xFE6
 12239                           postdec1	equ	0xFE5
 12240                           preinc1	equ	0xFE4
 12241                           plusw1	equ	0xFE3
 12242                           fsr1h	equ	0xFE2
 12243                           fsr1l	equ	0xFE1
 12244                           bsr	equ	0xFE0
 12245                           indf2	equ	0xFDF
 12246                           postinc2	equ	0xFDE
 12247                           postdec2	equ	0xFDD
 12248                           preinc2	equ	0xFDC
 12249                           plusw2	equ	0xFDB
 12250                           fsr2h	equ	0xFDA
 12251                           fsr2l	equ	0xFD9
 12252                           status	equ	0xFD8

Data Sizes:
    Strings     150
    Constant    0
    Data        0
    BSS         174
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM           95     94      94
    BANK0           160     96     158
    BANK1           256      0     112
    BANK2           256      0       0
    BANK3           256      0       0
    BANK4           256      0       0
    BANK5           256      0       0
    BANK6           256      0       0
    BANK7           256      0       0

Pointer List with Targets:

    strncmp@_r	PTR const unsigned char  size(2) Largest target is 3
		 -> STR_21(CODE[3]), 

    strncmp@r	PTR const unsigned char  size(2) Largest target is 3
		 -> STR_21(CODE[3]), 

    strncmp@_l	PTR const unsigned char  size(2) Largest target is 3
		 -> vfpfcnvrt@ct(BANK0[3]), 

    strncmp@l	PTR const unsigned char  size(2) Largest target is 3
		 -> vfpfcnvrt@ct(BANK0[3]), 

    strlen@s	PTR const unsigned char  size(2) Largest target is 80
		 -> dbuf(BANK1[80]), 

    strlen@a	PTR const unsigned char  size(2) Largest target is 80
		 -> dbuf(BANK1[80]), 

    strcpy@dest	PTR unsigned char  size(2) Largest target is 80
		 -> dbuf(BANK1[80]), 

    strcpy@d	PTR unsigned char  size(2) Largest target is 80
		 -> dbuf(BANK1[80]), 

    strcpy@src	PTR const unsigned char  size(2) Largest target is 80
		 -> STR_16(CODE[4]), STR_15(CODE[4]), STR_12(CODE[4]), STR_11(CODE[4]), 
		 -> dbuf(BANK1[80]), 

    strcpy@s	PTR const unsigned char  size(2) Largest target is 80
		 -> STR_16(CODE[4]), STR_15(CODE[4]), STR_12(CODE[4]), STR_11(CODE[4]), 
		 -> dbuf(BANK1[80]), 

    printf@fmt	PTR const unsigned char  size(2) Largest target is 19
		 -> STR_10(CODE[19]), STR_9(CODE[19]), STR_8(CODE[14]), STR_7(CODE[19]), 
		 -> STR_6(CODE[19]), STR_5(CODE[17]), STR_4(CODE[17]), Valores(BANK1[16]), 

    printf@ap	PTR void [1] size(2) Largest target is 2
		 -> ?_printf(BANK0[2]), ?_sprintf(BANK0[2]), 

    fputs@s	PTR const unsigned char  size(2) Largest target is 80
		 -> dbuf(BANK1[80]), 

    fputs@fp	PTR struct _IO_FILE size(2) Largest target is 7
		 -> NULL(NULL[0]), sprintf@f(COMRAM[6]), 

    fputc@fp.buffer	PTR unsigned char  size(2) Largest target is 16
		 -> Valores(BANK1[16]), 

    fputc@fp	PTR struct _IO_FILE size(2) Largest target is 7
		 -> NULL(NULL[0]), sprintf@f(COMRAM[6]), 

    atoi@s	PTR const unsigned char  size(2) Largest target is 19
		 -> STR_10(CODE[19]), STR_9(CODE[19]), STR_8(CODE[14]), STR_7(CODE[19]), 
		 -> STR_6(CODE[19]), STR_5(CODE[17]), STR_4(CODE[17]), STR_3(CODE[15]), 
		 -> STR_2(CODE[15]), STR_1(CODE[15]), Valores(BANK1[16]), 

    vfprintf@ap	PTR PTR void  size(2) Largest target is 2
		 -> printf@ap(COMRAM[2]), sprintf@ap(COMRAM[2]), 

    vfprintf@fp	PTR struct _IO_FILE size(2) Largest target is 7
		 -> NULL(NULL[0]), sprintf@f(COMRAM[6]), 

    vfprintf@fmt	PTR const unsigned char  size(2) Largest target is 19
		 -> STR_10(CODE[19]), STR_9(CODE[19]), STR_8(CODE[14]), STR_7(CODE[19]), 
		 -> STR_6(CODE[19]), STR_5(CODE[17]), STR_4(CODE[17]), STR_3(CODE[15]), 
		 -> STR_2(CODE[15]), STR_1(CODE[15]), Valores(BANK1[16]), 

    vfprintf@cfmt	PTR unsigned char  size(2) Largest target is 19
		 -> STR_10(CODE[19]), STR_9(CODE[19]), STR_8(CODE[14]), STR_7(CODE[19]), 
		 -> STR_6(CODE[19]), STR_5(CODE[17]), STR_4(CODE[17]), STR_3(CODE[15]), 
		 -> STR_2(CODE[15]), STR_1(CODE[15]), Valores(BANK1[16]), 

    vfpfcnvrt@vp	PTR void  size(2) Largest target is 2
		 -> ?_printf(BANK0[2]), ?_sprintf(BANK0[2]), 

    vfpfcnvrt@fp	PTR struct _IO_FILE size(2) Largest target is 7
		 -> NULL(NULL[0]), sprintf@f(COMRAM[6]), 

    vfpfcnvrt@ap	PTR PTR void  size(2) Largest target is 2
		 -> printf@ap(COMRAM[2]), sprintf@ap(COMRAM[2]), 

    vfpfcnvrt@fmt	PTR PTR unsigned char  size(2) Largest target is 2
		 -> vfprintf@cfmt(COMRAM[2]), 

    efgtoa@fp	PTR struct _IO_FILE size(2) Largest target is 7
		 -> NULL(NULL[0]), sprintf@f(COMRAM[6]), 

    sp__strcpy	PTR unsigned char  size(2) Largest target is 80
		 -> dbuf(BANK1[80]), 

    dtoa@fp	PTR struct _IO_FILE size(2) Largest target is 7
		 -> NULL(NULL[0]), sprintf@f(COMRAM[6]), 

    ctoa@fp	PTR struct _IO_FILE size(2) Largest target is 7
		 -> NULL(NULL[0]), sprintf@f(COMRAM[6]), 

    pad@fp	PTR struct _IO_FILE size(2) Largest target is 7
		 -> NULL(NULL[0]), sprintf@f(COMRAM[6]), 

    pad@buf	PTR unsigned char  size(2) Largest target is 80
		 -> dbuf(BANK1[80]), 

    sprintf@fmt	PTR const unsigned char  size(2) Largest target is 15
		 -> STR_3(CODE[15]), STR_2(CODE[15]), STR_1(CODE[15]), 

    sprintf@s	PTR unsigned char  size(2) Largest target is 16
		 -> Valores(BANK1[16]), 

    sprintf@ap	PTR void [1] size(2) Largest target is 2
		 -> ?_printf(BANK0[2]), ?_sprintf(BANK0[2]), 

    S1099_IO_FILE$buffer	PTR unsigned char  size(2) Largest target is 16
		 -> Valores(BANK1[16]), 

    f.buffer	PTR unsigned char  size(2) Largest target is 16
		 -> Valores(BANK1[16]), 


Critical Paths under _main in COMRAM

    _SensorLM35->_sprintf
    _sprintf->_vfprintf
    _LCD_COMANDOS->_Get_DATA
    _Get_DATA->_Set_DATA
    _InicializaLCD->_putcm
    _Alarma->_Cronometro
    _Mostrar_Reloj->_printf
    _printf->_vfprintf
    _vfprintf->_vfpfcnvrt
    _vfpfcnvrt->_dtoa
    _efgtoa->___flge
    _tolower->_isupper
    _floorf->___fldiv
    ___flsub->___flmul
    ___flmul->___xxtofl
    ___flge->___flmul
    ___awdiv->_Read_ADC
    ___awdiv->_Read_ADC1
    _dtoa->_pad
    _pad->_fputs
    _fputs->_fputc
    _abs->___aomod
    _ctoa->_fputc
    _fputc->_putch
    _atoi->_isspace

Critical Paths under _main in BANK0

    _main->_SensorLM35
    _SensorLM35->_printf
    _Alarma->_printf
    _Mostrar_Reloj->_printf
    _vfprintf->_vfpfcnvrt
    _vfpfcnvrt->_efgtoa

Critical Paths under _main in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _main in BANK6

    None.

Critical Paths under _main in BANK7

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 0     0      0  185986
                             _Alarma
                         _Alarma_LED
                      _Configuracion
                      _InicializaLCD
                       _LCD_COMANDOS
                         _SensorLM35
                _Timer0Configuration
 ---------------------------------------------------------------------------------
 (1) _Timer0Configuration                                  0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _SensorLM35                                           2     2      0   94694
                                             94 BANK0      2     2      0
                           _Read_ADC
                          _Read_ADC1
                            ___awdiv
                             ___flge
                            ___flmul
                            ___flsub
                           ___xxtofl
                             _printf
                              _putcm
                            _sprintf
 ---------------------------------------------------------------------------------
 (2) _sprintf                                             20    10     10   42484
                                             84 COMRAM    10    10      0
                                             80 BANK0     10     0     10
                           _vfprintf
 ---------------------------------------------------------------------------------
 (2) ___xxtofl                                            14    10      4     474
                                              0 COMRAM    14    10      4
 ---------------------------------------------------------------------------------
 (2) _Read_ADC1                                            5     3      2      22
                                              0 COMRAM     5     3      2
 ---------------------------------------------------------------------------------
 (2) _Read_ADC                                             5     3      2      22
                                              0 COMRAM     5     3      2
 ---------------------------------------------------------------------------------
 (1) _LCD_COMANDOS                                         1     1      0     132
                                              3 COMRAM     1     1      0
                           _Get_DATA
 ---------------------------------------------------------------------------------
 (2) _Get_DATA                                             2     2      0      88
                                              1 COMRAM     2     2      0
                           _Set_DATA
 ---------------------------------------------------------------------------------
 (3) _Set_DATA                                             1     1      0       0
                                              0 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (1) _InicializaLCD                                        1     1      0     134
                                              3 COMRAM     1     1      0
                              _putcm
 ---------------------------------------------------------------------------------
 (1) _Configuracion                                        0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _Alarma_LED                                           3     3      0      24
                                              0 COMRAM     3     3      0
 ---------------------------------------------------------------------------------
 (1) _Alarma                                               2     2      0   91002
                                             90 COMRAM     2     2      0
                         _Cronometro
                            ___awdiv
                            ___awmod
                             _printf
                              _putcm
 ---------------------------------------------------------------------------------
 (2) _Cronometro                                           2     2      0   45501
                                             88 COMRAM     2     2      0
                      _Mostrar_Reloj
 ---------------------------------------------------------------------------------
 (3) _Mostrar_Reloj                                        0     0      0   45501
                            ___awdiv
                            ___awmod
                             _printf
                              _putcm
 ---------------------------------------------------------------------------------
 (2) _putcm                                                3     3      0     134
                                              0 COMRAM     3     3      0
 ---------------------------------------------------------------------------------
 (2) _printf                                              18     4     14   42643
                                             84 COMRAM     4     4      0
                                             80 BANK0     14     0     14
                           _vfprintf
 ---------------------------------------------------------------------------------
 (3) _vfprintf                                             8     2      6   41815
                                             76 COMRAM     8     2      6
                          _vfpfcnvrt
 ---------------------------------------------------------------------------------
 (4) _vfpfcnvrt                                           49    43      6   41197
                                             66 COMRAM    10     4      6
                                             56 BANK0     24    24      0
                               _atoi
                               _ctoa
                               _dtoa
                             _efgtoa
                              _fputc
                            _isdigit
                            _isupper
                            _strncmp
                            _tolower
 ---------------------------------------------------------------------------------
 (5) _strncmp                                             11     5      6     453
                                              0 COMRAM    11     5      6
 ---------------------------------------------------------------------------------
 (5) _efgtoa                                              68    61      7   26384
                                             51 COMRAM    12     5      7
                                              0 BANK0     56    56      0
                            ___awdiv
                            ___awmod
                            ___fladd
                            ___fldiv
                             ___fleq
                             ___flge
                            ___flmul
                            ___flneg
                            ___flsub
                            ___fltol
                      ___fpclassifyf
                             _floorf
                            _isupper
                                _pad
                             _strcpy
                            _tolower
 ---------------------------------------------------------------------------------
 (5) _tolower                                              8     6      2     944
                                              6 COMRAM     8     6      2
                            _isupper
 ---------------------------------------------------------------------------------
 (6) _isupper                                              6     4      2     465
                                              0 COMRAM     6     4      2
 ---------------------------------------------------------------------------------
 (6) _strcpy                                              10     6      4     856
                                              0 COMRAM    10     6      4
 ---------------------------------------------------------------------------------
 (6) _floorf                                              20    16      4     490
                                             25 COMRAM    20    16      4
                            ___fldiv (ARG)
 ---------------------------------------------------------------------------------
 (6) ___fpclassifyf                                       14    10      4     287
                                              0 COMRAM    14    10      4
 ---------------------------------------------------------------------------------
 (6) ___fltol                                             10     6      4     381
                                              0 COMRAM    10     6      4
 ---------------------------------------------------------------------------------
 (6) ___flsub                                              8     0      8    3041
                                             39 COMRAM     8     0      8
                            ___fladd
                            ___flmul (ARG)
 ---------------------------------------------------------------------------------
 (7) ___fladd                                             16     8      8    2414
                                              0 COMRAM    16     8      8
 ---------------------------------------------------------------------------------
 (6) ___flneg                                              4     0      4     121
                                              0 COMRAM     4     0      4
 ---------------------------------------------------------------------------------
 (6) ___flmul                                             25    17      8    2960
                                             14 COMRAM    25    17      8
                           ___xxtofl (ARG)
 ---------------------------------------------------------------------------------
 (6) ___flge                                              12     4      8    1398
                                             39 COMRAM    12     4      8
                            ___flmul (ARG)
 ---------------------------------------------------------------------------------
 (6) ___fleq                                              12     4      8     646
                                              0 COMRAM    12     4      8
 ---------------------------------------------------------------------------------
 (6) ___fldiv                                             25    17      8    2007
                                              0 COMRAM    25    17      8
 ---------------------------------------------------------------------------------
 (6) ___awmod                                              6     2      4    1208
                                              0 COMRAM     6     2      4
 ---------------------------------------------------------------------------------
 (6) ___awdiv                                              8     4      4    1516
                                              5 COMRAM     8     4      4
                           _Read_ADC (ARG)
                          _Read_ADC1 (ARG)
 ---------------------------------------------------------------------------------
 (5) _dtoa                                                36    26     10    6222
                                             30 COMRAM    36    26     10
                            ___aodiv
                            ___aomod
                                _abs
                                _pad
 ---------------------------------------------------------------------------------
 (6) _pad                                                 11     5      6    4573
                                             19 COMRAM    11     5      6
                              _fputc
                              _fputs
                             _strlen
 ---------------------------------------------------------------------------------
 (7) _strlen                                               4     2      2     166
                                              0 COMRAM     4     2      2
 ---------------------------------------------------------------------------------
 (7) _fputs                                                7     3      4    1825
                                             12 COMRAM     7     3      4
                              _fputc
 ---------------------------------------------------------------------------------
 (6) _abs                                                  4     2      2     142
                                             18 COMRAM     4     2      2
                            ___aomod (ARG)
 ---------------------------------------------------------------------------------
 (6) ___aomod                                             18     2     16     448
                                              0 COMRAM    18     2     16
 ---------------------------------------------------------------------------------
 (6) ___aodiv                                             26    10     16     452
                                              0 COMRAM    26    10     16
 ---------------------------------------------------------------------------------
 (5) _ctoa                                                 8     5      3    1779
                                             12 COMRAM     8     5      3
                              _fputc
 ---------------------------------------------------------------------------------
 (5) _fputc                                                9     5      4    1424
                                              3 COMRAM     9     5      4
                              _putch
 ---------------------------------------------------------------------------------
 (6) _putch                                                3     3      0     134
                                              0 COMRAM     3     3      0
 ---------------------------------------------------------------------------------
 (5) _atoi                                                15    13      2    1488
                                              7 COMRAM    15    13      2
                             ___wmul
                            _isdigit
                            _isspace
 ---------------------------------------------------------------------------------
 (6) _isspace                                              7     5      2     207
                                              0 COMRAM     7     5      2
 ---------------------------------------------------------------------------------
 (5) _isdigit                                              6     4      2     313
                                              0 COMRAM     6     4      2
 ---------------------------------------------------------------------------------
 (6) ___wmul                                               6     2      4     495
                                              0 COMRAM     6     2      4
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 7
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _Alarma
     _Cronometro
       _Mostrar_Reloj
         ___awdiv
           _Read_ADC (ARG)
           _Read_ADC1 (ARG)
         ___awmod
         _printf
           _vfprintf
             _vfpfcnvrt
               _atoi
                 ___wmul
                 _isdigit
                 _isspace
               _ctoa
                 _fputc
                   _putch
               _dtoa
                 ___aodiv
                 ___aomod
                 _abs
                   ___aomod (ARG)
                 _pad
                   _fputc
                     _putch
                   _fputs
                     _fputc
                       _putch
                   _strlen
               _efgtoa
                 ___awdiv
                   _Read_ADC (ARG)
                   _Read_ADC1 (ARG)
                 ___awmod
                 ___fladd
                 ___fldiv
                 ___fleq
                 ___flge
                   ___flmul (ARG)
                     ___xxtofl (ARG)
                 ___flmul
                   ___xxtofl (ARG)
                 ___flneg
                 ___flsub
                   ___fladd
                   ___flmul (ARG)
                     ___xxtofl (ARG)
                 ___fltol
                 ___fpclassifyf
                 _floorf
                   ___fldiv (ARG)
                 _isupper
                 _pad
                   _fputc
                     _putch
                   _fputs
                     _fputc
                       _putch
                   _strlen
                 _strcpy
                 _tolower
                   _isupper
               _fputc
                 _putch
               _isdigit
               _isupper
               _strncmp
               _tolower
                 _isupper
         _putcm
     ___awdiv
       _Read_ADC (ARG)
       _Read_ADC1 (ARG)
     ___awmod
     _printf
       _vfprintf
         _vfpfcnvrt
           _atoi
             ___wmul
             _isdigit
             _isspace
           _ctoa
             _fputc
               _putch
           _dtoa
             ___aodiv
             ___aomod
             _abs
               ___aomod (ARG)
             _pad
               _fputc
                 _putch
               _fputs
                 _fputc
                   _putch
               _strlen
           _efgtoa
             ___awdiv
               _Read_ADC (ARG)
               _Read_ADC1 (ARG)
             ___awmod
             ___fladd
             ___fldiv
             ___fleq
             ___flge
               ___flmul (ARG)
                 ___xxtofl (ARG)
             ___flmul
               ___xxtofl (ARG)
             ___flneg
             ___flsub
               ___fladd
               ___flmul (ARG)
                 ___xxtofl (ARG)
             ___fltol
             ___fpclassifyf
             _floorf
               ___fldiv (ARG)
             _isupper
             _pad
               _fputc
                 _putch
               _fputs
                 _fputc
                   _putch
               _strlen
             _strcpy
             _tolower
               _isupper
           _fputc
             _putch
           _isdigit
           _isupper
           _strncmp
           _tolower
             _isupper
     _putcm
   _Alarma_LED
   _Configuracion
   _InicializaLCD
     _putcm
   _LCD_COMANDOS
     _Get_DATA
       _Set_DATA
   _SensorLM35
     _Read_ADC
     _Read_ADC1
     ___awdiv
       _Read_ADC (ARG)
       _Read_ADC1 (ARG)
     ___flge
       ___flmul (ARG)
         ___xxtofl (ARG)
     ___flmul
       ___xxtofl (ARG)
     ___flsub
       ___fladd
       ___flmul (ARG)
         ___xxtofl (ARG)
     ___xxtofl
     _printf
       _vfprintf
         _vfpfcnvrt
           _atoi
             ___wmul
             _isdigit
             _isspace
           _ctoa
             _fputc
               _putch
           _dtoa
             ___aodiv
             ___aomod
             _abs
               ___aomod (ARG)
             _pad
               _fputc
                 _putch
               _fputs
                 _fputc
                   _putch
               _strlen
           _efgtoa
             ___awdiv
               _Read_ADC (ARG)
               _Read_ADC1 (ARG)
             ___awmod
             ___fladd
             ___fldiv
             ___fleq
             ___flge
               ___flmul (ARG)
                 ___xxtofl (ARG)
             ___flmul
               ___xxtofl (ARG)
             ___flneg
             ___flsub
               ___fladd
               ___flmul (ARG)
                 ___xxtofl (ARG)
             ___fltol
             ___fpclassifyf
             _floorf
               ___fldiv (ARG)
             _isupper
             _pad
               _fputc
                 _putch
               _fputs
                 _fputc
                   _putch
               _strlen
             _strcpy
             _tolower
               _isupper
           _fputc
             _putch
           _isdigit
           _isupper
           _strncmp
           _tolower
             _isupper
     _putcm
     _sprintf
       _vfprintf
         _vfpfcnvrt
           _atoi
             ___wmul
             _isdigit
             _isspace
           _ctoa
             _fputc
               _putch
           _dtoa
             ___aodiv
             ___aomod
             _abs
               ___aomod (ARG)
             _pad
               _fputc
                 _putch
               _fputs
                 _fputc
                   _putch
               _strlen
           _efgtoa
             ___awdiv
               _Read_ADC (ARG)
               _Read_ADC1 (ARG)
             ___awmod
             ___fladd
             ___fldiv
             ___fleq
             ___flge
               ___flmul (ARG)
                 ___xxtofl (ARG)
             ___flmul
               ___xxtofl (ARG)
             ___flneg
             ___flsub
               ___fladd
               ___flmul (ARG)
                 ___xxtofl (ARG)
             ___fltol
             ___fpclassifyf
             _floorf
               ___fldiv (ARG)
             _isupper
             _pad
               _fputc
                 _putch
               _fputs
                 _fputc
                   _putch
               _strlen
             _strcpy
             _tolower
               _isupper
           _fputc
             _putch
           _isdigit
           _isupper
           _strncmp
           _tolower
             _isupper
   _Timer0Configuration

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             7FF      0       0      21        0.0%
EEDATA             100      0       0       0        0.0%
BITBANK7           100      0       0      19        0.0%
BANK7              100      0       0      20        0.0%
BITBANK6           100      0       0      17        0.0%
BANK6              100      0       0      18        0.0%
BITBANK5           100      0       0      15        0.0%
BANK5              100      0       0      16        0.0%
BITBANK4           100      0       0      13        0.0%
BANK4              100      0       0      14        0.0%
BITBANK3           100      0       0      11        0.0%
BANK3              100      0       0      12        0.0%
BITBANK2           100      0       0       9        0.0%
BANK2              100      0       0      10        0.0%
BITBANK1           100      0       0       7        0.0%
BANK1              100      0      70       8       43.8%
BITBANK0            A0      0       0       4        0.0%
BANK0               A0     60      9E       5       98.8%
BITCOMRAM           5F      0       0       0        0.0%
COMRAM              5F     5E      5E       1       98.9%
BITSFR_1             0      0       0     200        0.0%
SFR_1                0      0       0     200        0.0%
BITSFR               0      0       0     200        0.0%
SFR                  0      0       0     200        0.0%
STACK                0      0       0       2        0.0%
NULL                 0      0       0       0        0.0%
ABS                  0      0     16C       6        0.0%
DATA                 0      0     16C       3        0.0%
CODE                 0      0       0       0        0.0%


Microchip Technology PIC18 Macro Assembler V2.31 build 20201012212115 
Symbol Table                                                                                   Fri Apr 30 12:26:11 2021

                ___fldiv@aexp 0019                  ___fldiv@bexp 0018                  ___fldiv@sign 0011  
                          _DH 00DE                            _DM 00DA                            _DS 00D6  
                          _UH 00DC                            _UM 00D8                            _US 00D4  
                ___awdiv@sign 000B           ___wmul@multiplicand 0003                ??_LCD_COMANDOS 0004  
                         l114 47C0                           l203 4CF2                           l123 482A  
                         l132 4D5A                           l141 4ADC                           l117 47E0  
               _InicializaLCD 4676                           l126 484A                           l135 48AC  
                         l151 2C5C                           l144 4B62                           l129 4CA6  
                         l330 3B20                           l170 4674                           l138 4D46  
                         l147 46FC                           l500 3D7A                           l164 3C74  
                         l156 2D1C                           l317 39BC                           l173 3032  
                         l159 4D2E                           _ADC 00FC                           l176 307C  
                         l184 3276                           l192 3E7E                           l434 4482  
                         l189 3E16                           l462 45DC                           l447 4532  
                         l473 3F82                           l731 1F56                           l468 3F3C  
                         l740 2226                           l732 1F44                           l821 2650  
                         l477 4C12                           l733 1F0A                           l824 24E2  
                         l817 22EC                           l834 2612                           l826 255A  
                         l827 2548                           l940 40E8                           l924 4340  
                         l748 2070                           l757 2140                           l773 4A96  
                         l861 3834                           l790 280E                           l758 212E  
                         l943 412A                           l927 4382                           l951 2DBE  
                         l872 37CC                           l945 4158                           l929 43BE  
                         l953 2DC6                           l785 29EA                           l865 3770  
                         l881 4A0A                           l858 36D8                           l971 3000  
                         l787 284A                           l796 2890                           l798 2908  
                         l799 28F6                           l989 14EE                           _abs 4B64  
                         _pad 42FA                  ___awmod@sign 0006                           wreg 000FE8  
                ___flmul@aexp 0020                  ___flmul@bexp 0021                  ___flmul@sign 001B  
                ___flmul@temp 0026                  ___flmul@prod 0022                  ___fltol@exp1 000A  
                        l1102 1C08                          l1110 4772                          l1007 0C84  
                        l1120 4080                          l1035 10C4                          ?_abs 0013  
                        l1204 42F8                          l1212 4B20                          l1125 4B9A  
                        l1109 476A                          l1231 4C80                          l1128 4BA2  
                        l1225 4968                          l1250 490C                          l1235 422E  
                        l1091 1D66                          l1219 4CCC                          l1156 3678  
                        l1165 3488                          l1245 4904                          l1175 4C4A  
                        l1183 49BA                          l1159 3680                          l1168 33CC  
                        l4001 4364                          l3211 4AAE                          l4011 4B7E  
                        l4003 4392                          l3213 4AC2                          l3221 4242  
                        l4101 40BC                          l4005 43A6                          l3301 1E94  
                        l4021 4016                          l4013 3F84                          l1189 4BDA  
                        l3215 4AC8                          l3207 4A9A                          l3223 4254  
                        l4111 4108                          l4103 40CE                          l3303 1E98  
                        l3311 1EA8                          l4031 4078                          l4015 3FA4  
                        l3217 4AD6                          l3209 4AA6                          l3225 425E  
                        l4113 410C                          l4009 4B64                          l4121 2D1E  
                        l3321 1F18                          l3313 1EAC                          l3305 1E9C  
                        l3241 1D94                          l3233 1D68                          l4017 3FE2  
                        l4025 4022                          l4201 091E                          l5001 3050  
                        l3227 427C                          l3219 4230                          l4115 413A  
                        l4107 40E0                          l4131 2D98                          l4123 2D3E  
                        l3403 2150                          l3411 21A6                          l3331 1F42  
                        l3323 1F24                          l3315 1ED6                          l3307 1EA0  
                        l3251 1DCE                          l3243 1DA4                          l3235 1D74  
                        l4027 4034                          l4019 400A                          l4051 3298  
                        l4035 490E                          l4043 48E4                          l4211 094C  
                        l4203 0930                          l5011 30C2                          l5003 305E  
                        l3229 42B2                          l4117 414C                          l4109 40F4  
                        l3501 397C                          l4141 2DF4                          l4133 2DB2  
                        l4125 2D66                          l3421 21F8                          l3413 21B6  
                        l3405 215C                          l3341 1F98                          l3333 1F64  
                        l3325 1F28                          l3317 1EF2                          l3309 1EA4  
                        l3261 1DFC                          l3253 1DD4                          l3245 1DB4  
                        l3237 1D82                          l4061 3380                          l4053 32EE  
                        l4037 491E                          l4045 48F6                          l4301 0D2C  
                        l4221 09C0                          l4205 093C                          l4213 0952  
                        l5021 3118                          l5013 30D8                          l5005 3074  
                        l3503 399C                          l3511 39D0                          l4151 2E94  
                        l4143 2DFC                          l4135 2DCE                          l4127 2D86  
                        l3431 2216                          l3423 21FE                          l3415 21C6  
                        l3407 216A                          l3351 1FD2                          l3343 1FA6  
                        l3335 1F74                          l3327 1F36                          l3319 1F02  
                        l3271 1E30                          l3263 1DFE                          l3255 1DE6  
                        l3247 1DB6                          l3239 1D84                          l4071 3468  
                        l4063 33BC                          l4055 3302                          l4039 48AE  
                        l4311 0D70                          l4303 0D3E                          l4223 09DC  
                        l4215 0978                          l4231 0A26                          l4207 0944  
                        l5023 3150                          l5031 3198                          l5015 30E6  
                        l5007 3076                          _ADC1 00FA                          l4081 496A  
                        l3521 3A40                          l3513 39F0                          l3441 4B00  
                        l4161 2F50                          l4153 2E9A                          l4145 2E06  
                        l4137 2DE0                          l4129 2D96                          l3601 2788  
                        l3425 2200                          l3417 21E6                          l3409 21A4  
                        l3361 203E                          l3353 1FD4                          l3345 1FB4  
                        l3329 1F38                          l3281 1E6C                          l3265 1E0E  
                        l3273 1E38                          l3257 1DE8                          l3249 1DBE  
                        l4073 3478                          l4057 3310                          l4065 33F0  
                        l4049 3278                          l4401 1218                          l4321 0DBA  
                        l4313 0D88                          l4305 0D4C                          l4241 0AB0  
                        l4233 0A4C                          l4225 09F4                          l4209 0948  
                        l5041 3214                          l5033 31B6                          l5025 3166  
                        l5017 3102                          l5009 308A                          l4083 496E  
                        l3531 3AB8                          l3523 3A48                          l3515 39F4  
                        l3507 39BE                          l3435 4ADE                          l3443 4C4C  
                        l4171 2FA2                          l4163 2F6A                          l4147 2E0C  
                        l4155 2EFE                          l4139 2DEE                          l3611 27DA  
                        l3603 27A2                          l3427 2206                          l3419 21EA  
                        l3371 2096                          l3363 2040                          l3355 1FDE  
                        l3347 1FC0                          l3339 1F88                          l3291 1E80  
                        l3283 1E70                          l3275 1E48                          l3267 1E1E  
                        l3259 1DEE                          l4067 342C                          l4411 12B6  
                        l4403 121C                          l4323 0DCE                          l4331 0EC4  
                        l4315 0D9A                          l4307 0D50                          l4251 0AE6  
                        l4227 09FE                          l4219 09AE                          l5035 31BC  
                        l5027 3174                          l5019 310A                          l5043 3252  
                        l5051 3D7C                          l4077 4C14                          l4085 4982  
                        l4501 3520                          l4093 4082                          l3533 3ACA  
                        l3525 3A5C                          l3517 3A02                          l3509 39C2  
                        l3437 4AEA                          l3445 4C58                          l4173 2FB4  
                        l4157 2F18                          l4165 2F7A                          l4149 2E8E  
                        l3621 2836                          l3613 27EA                          l3605 27B2  
                        l3701 2296                          l3429 2214                          l3381 20C4  
                        l3365 2050                          l3349 1FC4                          l3357 1FE4  
                        l3293 1E84                          l3285 1E74                          l3277 1E5A  
                        l3269 1E2E                          l4069 3440                          l3453 4BA4  
                        l4421 1314                          l4405 1222                          l4413 12BA  
                        l4341 0F90                          l4333 0EE2                          l4325 0E32  
                        l4309 0D62                          l4317 0DA2                          l4261 0BB0  
                        l4237 0A82                          l5045 3260                          l5037 31FE  
                        l5029 3190                          l5061 3DF6                          l5053 3D96  
                        l4087 49B0                          l4511 3548                          l4503 3524  
                        l4095 4096                          l3471 386C                          l3463 3836  
                        l3527 3A6A                          l3535 3AD0                          l3519 3A22  
                        l3439 4AFC                          l3447 4C5C                          l4175 2FC0  
                        l4167 2F8C                          l4159 2F36                          l3631 2876  
                        l3623 2838                          l3615 27FE                          l3607 27C2  
                        l3551 267E                          l3543 2652                          l3711 22D6  
                        l3703 22A4                          l3383 20D2                          l3375 20AA  
                        l3391 20F0                          l3359 200A                          l3367 2060  
                        l3295 1E88                          l3287 1E78                          l3279 1E68  
                        l4431 1352                          l4423 1324                          l4415 12D8  
                        l4407 127A                          l4351 1040                          l4343 0FA0  
                        l4335 0F16                          l4327 0E8A                          l4319 0DAA  
                        l4271 0C32                          l4263 0BE4                          l4255 0B1C  
                        l4239 0A94                          l4191 08C8                          l4183 0898  
                        l5047 3272                          l5039 320E                          l5071 3E4C  
                        l5063 3E0E                          l5055 3DAE                          l3457 4CCE  
                        l4089 49B4                          l4513 3550                          l4097 40A2  
                        l3481 38C8                          l3473 387A                          l3465 383A  
                        l3537 3AE0                          l3529 3A98                          l3449 4C74  
                        l4177 2FC8                          l4169 2F9C                          l3641 28B2  
                        l3633 2880                          l3625 2848                          l3617 280C  
                        l3609 27D2                          l3561 26B8                          l3553 268E  
                        l3545 265E                          l3801 2634                          l3721 2320  
                        l3713 22DC                          l3705 22A6                          l3385 20DA  
                        l3377 20B4                          l3369 2086                          l3393 20FE  
                        l3297 1E8C                          l3289 1E7C                          l4441 1388  
                        l4433 1362                          l4425 1328                          l4417 12F4  
                        l4409 12AE                          l4361 10B0                          l4353 1074  
                        l4345 0FB0                          l4337 0F48                          l4329 0EBE  
                        l4273 0C44                          l4281 0C90                          l4265 0BEC  
                        l4257 0B50                          l4249 0ACC                          l4193 08EC  
                        l4185 08A2                          l4601 17FE                          l5049 3274  
                        l5065 3E18                          l5073 3E4E                          l5057 3DC6  
                        l5161 47AA                          l5081 4A14                          l3459 4CEA  
                        l4523 3638                          l4515 3598                          l5163 3582  
                        l4507 352A                          l4099 40AE                          l3491 3932  
                        l3483 38D0                          l3475 389A                          l3467 3848  
                        l3539 3B00                          l4179 2FD8                          l3651 2924  
                        l3643 28C0                          l3635 288E                          l3627 285A  
                        l3619 2818                          l3571 26E4                          l3563 26BE  
                        l3555 269E                          l3547 266C                          l3803 2636  
                        l3731 2370                          l3723 232C                          l3715 22FC  
                        l3707 22B6                          l3395 2102                          l3387 20DE  
                        l3379 20C2                          l3299 1E90                          l3811 4A52  
                        l4451 13E4                          l4443 1394                          l4435 136A  
                        l4427 1338                          l4419 1306                          l4371 1166  
                        l4363 10BC                          l4355 1088                          l4347 0FE4  
                        l4339 0F5E                          l4291 0CD0                          l4275 0C56  
                        l4259 0B56                          l4267 0C1E                          l4195 08F6  
                        l4187 08B2                          l4611 18E8                          l4603 180E  
                        l5067 3E30                          l5059 3DDE                          l5075 3E62  
                        l5091 4A36                          l5083 4A18                          l4525 364A  
                        l4509 3540                          l3493 3952                          l3485 38E4  
                        l3477 389E                          l3469 3868                          l3821 43D2  
                        l3661 2990                          l3653 2932                          l3645 28EE  
                        l3629 2870                          l3637 28A0                          l3581 271E  
                        l3573 26F4                          l3565 26C4                          l3557 26A0  
                        l3549 266E                          l3901 4572                          l3805 263C  
                        l3741 23B2                          l3733 237C                          l3725 2336  
                        l3717 230C                          l3709 22C6                          l3397 2110  
                        l3389 20EE                          l3813 4A62                          l4461 142E  
                        l4445 139A                          l4453 13EA                          l4437 1378  
                        l4429 134A                          l4381 11AE                          l4373 1178  
                        l4365 10E0                          l4349 103A                          l4357 108C  
                        l4293 0D06                          l4277 0C5E                          l4269 0C2E  
                        l4197 08FE                          l4189 08C0                          l4541 419E  
                        l4533 415A                          l4621 19A4                          l4613 191C  
                        l4605 1858                          l4701 4B38                          l5077 3E66  
                        l5069 3E34                          l5093 4A3E                          l5085 4A1E  
                        ?_pad 0014                          l4527 365C                          l4519 35E6  
                        l3495 3954                          l3487 38F2                          l3479 38AA  
                        l3831 43F8                          l3823 43DA                          l3671 29DE  
                        l3663 29AA                          l3655 295C                          l3639 28AE  
                        l3583 2734                          l3575 2704                          l3567 26D2  
                        l3559 26A8                          l3903 45A0                          l3807 2640  
                        l3751 2414                          l3743 23BE                          l3735 2388  
                        l3727 234C                          l3399 2126                          l4471 145E  
                        l4463 143A                          l4455 13FC                          l4447 13C0  
                        l4439 1380                          l4391 11E4                          l4383 11BE  
                        l4375 1186                          l4367 1144                          l4359 109C  
                        l4295 0D0E                          l4287 0CA2                          l4279 0C78  
                        l4199 0910                          l4543 41B6                          l4535 4184  
                        l4631 1A64                          l4623 19EE                          l4607 1868  
                        l4711 4CB0                          l4703 4B3C                          l5159 4814  
                        l5095 4A42                          l5087 4A24                          l5079 4A0C  
                        l3497 3966                          l3489 3904                          l3841 4430  
                        l3833 4400                          l3825 43DE                          l3817 43C0  
                        l3673 29E0                          l3665 29C6                          l3649 2918  
                        l3657 2960                          l3585 2744                          l3593 2764  
                        l3577 2706                          l3569 26D4                          l3905 45B0  
                        l3921 3EFC                          l3913 3E80                          l3761 24AA  
                        l3753 2420                          l3745 23CE                          l3737 2396  
                        l3729 2358                          l3681 2228                          l4481 14B8  
                        l4465 1442                          l4457 1416                          l4449 13DC  
                        l4393 11E8                          l4385 11C2                          l4369 1154  
                        l4377 118E                          l4289 0CB4                          l4297 0D12  
                        l4545 41D2                          l4641 1AFC                          l4633 1A72  
                        l4617 1938                          l4609 18B2                          l4561 154A  
                        l4553 14F0                          l4705 4B56                          l5097 4A46  
                        l5089 4A2E                          l4491 348A                          l3499 396C  
                        l3851 445C                          l3843 4436                          l3835 4412  
                        l3827 43EC                          l3819 43C4                          l3667 29CA  
                        l3659 297A                          l3595 2774                          l3587 274C  
                        l3579 270E                          l3907 45D4                          l3931 3F80  
                        l3923 3F0A                          l3915 3EAE                          l3771 2500  
                        l3763 24C8                          l3755 243C                          l3747 23E8  
                        l3739 23A2                          l3691 2264                          l3683 2234  
                        l4483 14C8                          l4475 1492                          l4467 1452  
                        l4459 141C                          l4395 11EE                          l4387 11C8  
                        l4379 11A0                          l4299 0D1A                          l4547 41E4  
                        l4539 4190                          l4635 1AA2                          l4627 1A26  
                        l4619 196E                          l4571 15F4                          l4563 1580  
                        l4555 1526                          l4707 4B5E                          l4731 3C30  
                        l4723 3B22                          l4811 460C                          l4803 45DE  
                        l4715 4D48                          l4493 349E                          l3845 444C  
                        l3837 441A                          l3853 4462                          l3829 43F4  
                        l3861 4484                          l3669 29D8                          l3597 2774  
                        l3589 2750                          l3909 45DA                          l3925 3F1C  
                        l3917 3EBE                          l3781 256A                          l3773 2504  
                        l3765 24D2                          l3757 2466                          l3749 23F8  
                        l3693 2274                          l3685 2242                          l4485 14CE  
                        l4477 14A4                          l4469 1458                          l4389 11D4  
                        l4397 11F4                          l4549 420C                          l4661 1C98  
                        l4645 1B92                          l4629 1A3A                          l4581 16A4  
                        l4573 1602                          l4565 15B6                          l4557 1534  
                        l4709 4CA8                          l4733 3C36                          l4725 3BCA  
                        l4821 4654                          l4813 4610                          l4805 45E2  
                        l4901 469E                          l4717 4D4A                          l4741 4796  
                        l4495 34A2                          l3855 4472                          l3847 4454  
                        l3839 4422                          l3871 44B0                          l3863 4488  
                        l3927 3F2A                          l3919 3EEC                          l3791 25CC  
                        l3783 2576                          l3775 2512                          l3767 24E0  
                        l3759 249C                          l3695 227A                          l3687 2244  
                        l3935 4BDC                          l3951 3CCA                          l3943 3C76  
                        l4479 14B0                          l4399 1206                          l4671 1CFC  
                        l4647 1BA4                          l4655 1C1C                          l4639 1ACE  
                        l4591 174C                          l4583 16AE                          l4567 15C6  
                        l4559 1546                          l4727 3BE8                          l4815 462C  
                        l4823 465C                          l4807 45E8                          l4911 46E8  
                        l4903 46AC                          l4719 4D58                          l4743 47B8  
                        l4735 4776                          l4831 36A2                          l4497 34A6  
                        l3857 447A                          l3849 4456                          l3881 44E8  
                        l3873 44B8                          l3865 4496                          l3929 3F7A  
                        l3793 25E0                          l3785 2584                          l3777 2540  
                        l3769 24F2                          l3697 228A                          l3689 2254  
                        l3937 4BF2                          l3953 3CCC                          l3945 3C8C  
                        l4657 1C52                          l4665 1CA4                          l4649 1BD8  
                        l4593 175A                          l4585 16BC                          l4577 165C  
                        l4569 15D4                          l4681 1D1A                          l4729 3BEE  
                        l4825 465E                          l4817 4634                          l4809 4604  
                        l4905 46C0                          l4745 47BC                          l4737 478E  
                        l4841 371A                          l4833 36E8                          l4921 2ADA  
                        l4913 29EC                          l4499 34D6                          l3891 4522  
                        l3883 44FE                          l3875 44CA                          l3867 449E  
                        l3795 25FA                          l3787 25AE                          l3699 2290  
                        l3939 4C02                          l3955 3CDC                          l4683 1D54  
                        l4667 1CDA                          l4675 1D08                          l4659 1C88  
                        l4587 16F2                          l4579 166E                          l4691 4706  
                        l4819 4638                          l4907 46C6                          l4747 47BE  
                        l4771 4838                          l4763 4800                          l4851 37A2  
                        l4843 3726                          l4835 36FE                          l4827 3684  
                        l4931 2B8E                          l4923 2B0E                          l4915 2A30  
                        l3893 452A                          l3885 4506                          l3877 44D2  
                        l3869 44A2                          l3797 2616                          l3789 25B2  
                        l3981 3D5A                          l3965 3D06                          l3957 3CE0  
                        l3949 3CA0                          l4669 1CE8                          l4597 17B4  
                        l4589 172C                          l4693 4714                          l4909 46DA  
                        l4781 4858                          l4749 47CE                          l4765 4822  
                        l4757 47E4                          l4861 37E0                          l4853 37AE  
                        l4845 3758                          l4829 3694                          l4933 2B9C  
                        l4925 2B40                          l4917 2A42                          l3991 431E  
                        l3887 450C                          l3879 44DA                          l3799 2626  
                        l3983 3D6A                          l3975 3D2E                          l3967 3D10  
                        l3959 3CEE                          l4599 17C6                          l4695 473A  
                        l4783 486E                          l4767 4826                          l4759 47F8  
                        l4863 3804                          l4855 37BC                          l4847 375A  
                        l4839 3712                          l4791 49BC                          l4927 2B46  
                        l4935 2BBA                          l4919 2A8E                          l3993 432C  
                        l3889 4512                          l3897 4534                          l3977 3D3A  
                        l3969 3D1A                          l4689 46FE                          l4697 4B24  
                        l4881 4C92                          l4873 4C82                          l4785 488A  
                        l4769 4828                          l4865 3814                          l4857 37DA  
                        l4849 3766                          l4793 49CC                          l4961 2CA2  
                        l4937 2BEC                          l4929 2B74                          l3995 4338  
                        l3987 42FA                          l3899 4562                          l3979 3D4A  
                        l4699 4B30                          l4883 4C94                          l4875 4C84  
                        l4787 48A8                          l4779 484E                          l4891 4D34  
                        l4867 3822                          l4859 37DC                          l4795 49D4  
                        l4963 2CBC                          l4939 2BF2                          l4947 2C24  
                        l4971 4D16                          l3997 434C                          l3989 430A  
                        l4885 4C96                          l4877 4C8C                          l4869 3824  
                        l4797 49DC                          l4965 2CEE                          l4957 2C8E  
                        l4949 2C2A                          l4981 4D28                          l4973 4D1E  
                        l3999 4360                          l4991 3012                          l4887 4C98  
                        l4879 4C90                          l4895 4676                          l4799 49F8  
                        l4967 2CF4                          l4959 2C94                          l4983 4D2A  
                        l4975 4D22                          l4993 3028                          l4897 4684  
                        l4889 4D32                          l4969 2D02                          l4985 4D2C  
                        l4977 4D24                          l4995 302A                          l4987 3002  
                        l4899 468A                          l4979 4D26                          l4997 3034  
                        l4989 3010                          l4999 304A                          STR_1 0867  
                        STR_2 0849                          STR_3 0858                          STR_4 0838  
                        STR_5 0827                          STR_6 0801                          STR_7 0814  
                        STR_8 0876                          STR_9 0801                          _LATB 000F8A  
                        u4000 280C                          _LATD 000F8C                          u4001 2808  
                        u4010 2836                          u4011 2832                          u4100 2932  
                        u4020 285A                          u4101 292E                          u4021 2856  
                        u3310 4242                          u4110 297A                          u4030 2870  
                        u3311 423E                          u4111 2976                          u4031 286C  
                        u3320 4254                          u5000 2D96                          u4120 29AA  
                        u4040 288E                          u4200 22FC                          u3400 1E0E  
                        u3321 4250                          u5001 2D92                          u4121 29A6  
                        u4041 288A                          u4201 22F8                          u3401 1E0A  
                        u3330 427C                          u5010 2DB2                          u4130 29D8  
                        u4050 28AE                          u4210 230C                          u3410 1E1E  
                        u3331 4278                          u5011 2DAE                          u4131 29D4  
                        u4051 28AA                          u4211 2308                          u3411 1E1A  
                        u3340 42B2                          u5100 2F9C                          u5020 2DE0  
                        u4060 28C0                          u4300 25CC                          u4220 2486  
                        u4140 2242                          u3500 1F64                          u3420 1E5A  
                        u3341 42AE                          u5101 2F98                          u5021 2DDC  
                        u4061 28BC                          u4301 25C8                          u4141 223E  
                        u3501 1F60                          u3421 1E56                          u5110 2FB4  
                        u5030 2DEE                          u4070 28EE                          u4310 25FA  
                        u4230 24E0                          u4150 2254                          u3510 1F74  
                        u3430 1E68                          u3350 1D82                          u5111 2FB0  
                        u5031 2DEA                          u4071 28EA                          u4311 25F6  
                        u4231 24DC                          u4151 2250                          u3511 1F70  
                        u3431 1E64                          u3351 1D7E                          u5040 2F18  
                        u4400 44B0                          u4080 2904                          u4320 2634  
                        u4240 2500                          u4160 2264                          u3600 20D2  
                        u3520 1FA6                          u3440 1ED6                          u3360 1D94  
                        u5200 0A4C                          u5120 08C0                          u6000 17EC  
                        u5041 2F14                          u4401 44AC                          u4081 2900  
                        u4321 2630                          u4241 24FC                          u4225 247C  
                        u4161 2260                          u3601 20CE                          u3521 1FA2  
                        u3441 1ED2                          u3361 1D90                          u5201 0A48  
                        u5121 08BC                          _HORA 00E4                          u5050 2F36  
                        u4330 43D2                          u4410 44CA                          u4090 2918  
                        u4250 2512                          u4170 22A4                          u3610 20EE  
                        u3530 1FB4                          u3450 1EEE                          u3370 1DA4  
                        u5210 0A7A                          u5130 0910                          u6010 180E  
                        u5051 2F32                          u4331 43CE                          u4411 44C6  
                        u4091 2914                          u4251 250E                          u4171 22A0  
                        u3611 20EA                          u3531 1FB0                          u3451 1EE8  
                        u3371 1DA0                          u5211 0A74                          u5131 090C  
                        u6011 180A                          u5060 2F50                          u4340 43EC  
                        u4420 44E8                          u4500 3F0A                          u4260 2540  
                        u4180 22B6                          u3700 21C6                          u3620 20FE  
                        u3540 1FD2                          u3460 1EF0                          u3380 1DE6  
                        u5300 0C9E                          u5220 0A7C                          u5140 091E  
                        u6100 19A4                          u6020 1846                          u5061 2F4C  
                        u4341 43E8                          u4421 44E4                          u4501 3F06  
                        u4261 253C                          u4181 22B2                          u3701 21C2  
                        u3621 20FA                          u3541 1FCE                          u3381 1DE2  
                        u5301 0C9A                          u5141 091A                          u6101 19A0  
                        u5070 2F6A                          u4350 4412                          u4430 44FE  
                        u4510 3F2A                          u4270 2556                          u4190 22C6  
                        u3710 21E6                          u3630 2110                          u3550 200A  
                        u3470 1F18                          u3390 1DFC                          u5310 0CB4  
                        u5230 0A94                          u5150 0930                          u6110 1A3A  
                        u6030 1868                          u5071 2F66                          u4351 440E  
                        u4431 44FA                          u4511 3F26                          u4271 2552  
                        u4191 22C2                          u3711 21E2                          u3631 210C  
                        u3551 2006                          u3471 1F14                          u3391 1DF8  
                        u5311 0CB0                          u5231 0A90                          u5151 092C  
                        u6111 1A36                          u6031 1864                          u6007 17E2  
                        u5080 2F7A                          u4360 4430                          u4440 4522  
                        u4520 3F7A                          u4280 256A                          u3720 21F8  
                        u3640 2126                          u3560 2050                          u3480 1F36  
                        u4600 3D5A                          u5400 0EE2                          u5320 0CD0  
                        u5240 0B18                          u5160 0978                          u6200 1C52  
                        u6120 1A60                          u6040 18A0                          u3801 38A4  
                        u5081 2F76                          u4361 442C                          u4441 451E  
                        u4521 3F76                          u4281 2566                          u3721 21F4  
                        u3641 2122                          u3561 204C                          u3481 1F32  
                        u4601 3D56                          u5401 0EDE                          u5321 0CCC  
                        u5241 0B14                          u5161 0974                          u6201 1C4E  
                        u3810 38C8                          u4610 430A                          u5090 2F8C  
                        u4370 444C                          u4450 4562                          u4290 2584  
                        u4530 4BF2                          u3730 2214                          u3650 213C  
                        u3570 2086                          u3490 1F56                          u5410 0F48  
                        u5330 0D06                          u5250 0BAC                          u5170 09A6  
                        u6210 1CCA                          u6130 1AFC                          u6050 18D8  
                        u3811 38C4                          u4611 4306                          u5091 2F88  
                        u4371 4448                          u4451 455E                          u4291 2580  
                        u4531 4BEE                          u3731 2210                          u3651 2138  
                        u3571 2082                          u3491 1F52                          u5411 0F44  
                        u5331 0D02                          u5251 0BA8                          u5171 09A0  
                        u6131 1AF8                          u6027 183C                          u3820 38F2  
                        u3900 3AE0                          u3740 4B20                          u4620 432C  
                        u4380 4472                          u4460 45A0                          u3660 2150  
                        u3580 2096                          u4540 3C8C                          u5500 1186  
                        u5420 0F90                          u5340 0D2C                          u5260 0C1E  
                        u5180 09A8                          u6220 1CDA                          u6140 1B34  
                        u6060 18E8                          u6300 4604                          u3821 38EE  
                        u3901 3ADC                          u3741 4B1C                          u4621 4328  
                        u4381 446E                          u4461 459C                          u3661 214C  
                        u3581 2092                          u4541 3C88                          u5501 1182  
                        u5421 0F8C                          u5341 0D28                          u5261 0C1A  
                        u6221 1CD6                          u6061 18E4                          u6301 4600  
                        u3830 3932                          u3750 4C74                          u4630 4382  
                        u4390 4496                          u3910 266C                          u4470 45D4  
                        u3670 216A                          u3590 20C2                          u4550 3CC0  
                        u4710 406E                          u5510 11A0                          u5430 0FA0  
                        u5350 0D3E                          u5270 0C44                          u5190 09C0  
                        u6230 1D40                          u6150 1B66                          u6070 195E  
                        u6310 462C                          u3831 392E                          u3751 4C70  
                        u4631 437E                          u4391 4492                          u3911 2668  
                        u4471 45D0                          u3671 2166                          u3591 20BE  
                        u4711 4068                          u5511 119C                          u5431 0F9C  
                        u5351 0D3A                          u5271 0C40                          u5191 09BC  
                        u6127 1A56                          u6047 1896                          u6311 4628  
                        u3840 397C                          u4640 4392                          u3920 267E  
                        u4480 3EAE                          u3680 21A4                          u4560 3CEE  
                        u4720 4070                          u4800 3310                          u3760 4BD4  
                        u5600 13FC                          u5520 11AE                          u5440 103A  
                        u5360 0D4C                          u5280 0C56                          u6160 1B8A  
                        u6080 196E                          u6240 475A                          u6320 4654  
                        u6400 37DA                          u3841 3978                          u4641 438E  
                        u3921 267A                          u4481 3EAA                          u3681 21A0  
                        u4561 3CEA                          u4705 4046                          u4801 330C  
                        u3761 4BCE                          u5601 13F8                          u5521 11AA  
                        u5441 1036                          u5361 0D48                          u5281 0C52  
                        u6217 1CC0                          u6161 1B84                          u6081 196A  
                        u6057 18CE                          u6321 4650                          u6401 37D6  
                        u3850 39D0                          u4650 4B7E                          u3930 268E  
                        u4490 3EEC                          u3690 21B6                          u4570 3D02  
                        u4730 4956                          u3770 4BD6                          u5610 1416  
                        u5530 1206                          u5450 1088                          u5370 0D62  
                        u5290 0C78                          u6170 1B8C                          u6090 1994  
                        u6250 476A                          u6410 3814                          u6330 3694  
                        u3851 39CC                          u4651 4B7A                          u3931 268A  
                        u4491 3EE8                          u3691 21B2                          u4571 3CFE  
                        u4555 3CB6                          u5611 1412                          u5531 1202  
                        u5451 1084                          u5371 0D5E                          u5291 0C74  
                        u6147 1B2A                          u6251 4766                          u6411 3810  
                        u6331 3690                          u4900 4982                          u5700 353C  
                        u3780 3848                          u3860 3A02                          u3940 26D2  
                        u4580 3D2A                          u4660 3FC4                          u4820 337C  
                        u4740 4968                          u5620 142E                          u5540 12D8  
                        u5460 10B0                          u5380 0D70                          u6180 1BA4  
                        u6260 3BE8                          u6500 3118                          u6420 3822  
                        u6340 36A2                          u4901 497E                          u5701 3538  
                        u3781 3844                          u3861 39FE                          u3941 26CE  
                        u4581 3D26                          u4821 3378                          u4741 4964  
                        u5621 142A                          u5541 12D4                          u5461 10AC  
                        u5381 0D6C                          u6237 1D36                          u6181 1BA0  
                        u6157 1B5C                          u6077 1954                          u6261 3BE4  
                        u6501 3114                          u6421 381E                          u6341 369E  
                        u4910 49B0                          u5710 3570                          u3790 387A  
                        u3870 3A40                          u3950 26E4                          u4590 3D4A  
                        u4670 3FE2                          u4830 33A0                          u4750 48DE  
                        u5630 148C                          u5550 12F4                          u5470 1154  
                        u5390 0D9A                          u6190 1C42                          u6510 3190  
                        u6270 47CE                          u6350 36FE                          u6430 2B40  
                        u4911 49AC                          u3791 3876                          u3871 3A3C  
                        u3951 26E0                          u4591 3D46                          u4671 3FDE  
                        u4815 3324                          u4751 48D8                          u5631 1486  
                        u5551 12F0                          u5471 1150                          u5391 0D96  
                        u6247 4750                          u6511 318C                          u6271 47CA  
                        u6351 36FA                          u6431 2B3C                          u5720 35CC  
                        u4920 4096                          u3880 3A6A                          u3960 26F4  
                        u4680 400A                          u4840 33BC                          u4816 332E  
                        u4760 48E0                          u5640 148E                          u5560 1306  
                        u5480 1166                          u5800 41D2                          u6520 31B6  
                        u6600 3E5E                          u6280 4838                          u6360 3754  
                        u6440 2BEC                          u4921 4092                          u3881 3A66  
                        u3961 26F0                          u4681 4006                          u4665 3FBA  
                        u4841 33B8                          u4817 333E                          u4737 494C  
                        u5561 1302                          u5481 1162                          u5801 41CE  
                        u6097 198A                          u6521 31B2                          u6601 3E5A  
                        u6281 4834                          u6361 3750                          u6441 2BE8  
                        u5730 360E                          u4930 40BC                          u3890 3A98  
                        u3970 2734                          u4690 4034                          u4850 3410  
                        u4770 48F6                          u5650 14A4                          u5570 1314  
                        u5490 1178                          u5810 41E4                          u6530 3260  
                        u6370 379E                          u6450 2C8E                          u4931 40B8  
                        u3891 3A94                          u3971 2730                          u4691 4030  
                        u4835 3396                          u4771 48F2                          u5651 14A0  
                        u5571 1310                          u5491 1174                          u5811 41E0  
                        u6531 325C                          u6371 379A                          u6451 2C8A  
                        u5740 3632                          u5660 34C6                          u4940 40DC  
                        u3980 2774                          u4860 342C                          u4780 32C0  
                        u5580 134A                          u5820 420C                          u5900 1656  
                        u6540 3D96                          u6380 37BC                          u6460 2CEE  
                        u5741 362C                          u5717 3566                          u4941 40D8  
                        u3981 2770                          u4861 3428                          u5581 1346  
                        u5821 4208                          u6197 1C38                          u6541 3D92  
                        u6381 37B8                          u6461 2CEA                          u5750 3634  
                        u5670 34D6                          u4950 412A                          u3990 27EA  
                        u4870 3468                          u4790 32EE                          u5590 1378  
                        u5910 166E                          u5830 1516                          u6470 3010  
                        u6550 3DAE                          u6390 37CC                          u5727 35C2  
                        u5671 34D2                          u4951 4126                          u3991 27E6  
                        u4871 3464                          u4855 3406                          u4791 32EA  
                        u5591 1374                          u5911 166A                          u6471 300C  
                        u6551 3DAA                          u6295 4856                          u6391 37C8  
                        u4880 4C44                          u5760 364A                          u5680 34FE  
                        u4960 413A                          u5920 1694                          u5840 1526  
                        u6480 308A                          u6560 3DC6                          u6296 4858  
                        u4881 4C3E                          u5761 3646                          u5737 3604  
                        u4961 4136                          u4785 32B6                          u5841 1522  
                        u6481 3086                          u6561 3DC2                          u6617 2B80  
                        u4890 4C46                          u5770 365C                          u5690 3520  
                        u4970 2D4E                          u5930 16A4                          u5850 1570  
                        u6490 3102                          u6570 3DDE                          u5771 3658  
                        u5691 351C                          u5667 34BC                          u4971 2D48  
                        u5931 16A0                          u6491 30FE                          u6571 3DDA  
                        u6707 46CC                          u6627 2BA8                          u4980 2D50  
                        u5780 4184                          u5940 16E2                          u5860 1580  
                        u6580 3DF6                          u5781 4180                          u5861 157C  
                        u5837 150C                          u6581 3DF2                          u6717 46E0  
                        u6637 2CAE                          u4990 2D66                          u5790 41B6  
                        u5950 16F2                          u5870 15C6                          u6590 3E0E  
                        u5687 34F4                          u4991 2D62                          u5791 41B2  
                        u5951 16EE                          u5927 168A                          u5871 15C2  
                        u6807 315A                          u6591 3E0A                          u6727 46F4  
                        u6647 2D0E                          u5960 1788                          u5880 1630  
                        u5857 1566                          u6817 4668                          u6737 3E22  
                        u6657 4D50                          u5970 17AC                          u5890 1654  
                        u5971 17A6                          u5947 16D8                          u5891 164E  
                        u6827 4B32                          u6747 3E3E                          u6667 467C  
                        u5980 17AE                          u6837 4B42                          u6757 3E70  
                        u6677 4690                          u5990 17C6                          u5991 17C2  
                        u5967 177E                          u5887 1626                          u6847 4B58  
                        u6767 301C                          u6687 46A4                          u6857 4AA8  
                        u6777 303E                          u6697 46B8                          u6867 4ABA  
                        u6787 3068                          u6877 4AD0                          u6797 30CC  
                  _Alarma_LED 3D7C                          abs@a 0013                          _dbuf 0110  
                        _atoi 348A                          _ctoa 4082                          _main 4A0C  
                        _dtoa 2D1E                          _prec 00D0                          _nout 00CC  
                        pad@i 001B                          pad@p 0018                          fsr1h 000FE2  
                        fsr2h 000FDA                          indf1 000FE7                          indf2 000FDF  
                        fsr1l 000FE1                          pad@w 001D                          fsr2l 000FD9  
               ___fpclassifyf 3F84                          prodh 000FF4                          prodl 000FF3  
                        start 0000               ___fldiv@new_exp 0012         ??_Timer0Configuration 0001  
                _tolower$1413 000D                  ___param_bank 000000                         ??_abs 0015  
                       ??_pad 001A                ?_InicializaLCD 0001                 ___fltol@sign1 0009  
             __end_of___aodiv 39BE                         ?_atoi 0008                         ?_ctoa 000D  
             __end_of___fladd 2228                         ?_main 0001                         ?_dtoa 001F  
             __end_of___aomod 3B22               __end_of___fldiv 29EC               __end_of___awdiv 4484  
             __end_of___flneg 4C14                         STR_10 0814                         STR_11 0884  
                       STR_12 088C                         STR_21 0894                         STR_15 0888  
                       STR_16 0890                         STR_19 0894               __end_of___awmod 4534  
             __end_of___flmul 2652               __end_of___flsub 4A98               __end_of___fltol 3D7C  
             ___awdiv@divisor 0008               ___awdiv@counter 000A                  vfpfcnvrt@fmt 0045  
                       _TMR0L 000FD6                         _PORTB 000F81                         _TRISA 000F92  
                       _TRISB 000F93                         _TRISD 000F95                         _R_CAD 010C  
                       _flags 00D2                         _horas 00F4                         _fputc 4230  
                       _fputs 4ADE               __end_of_isdigit 4C4C                         atoi@n 0015  
                       pad@fp 0014                         atoi@s 0008                         _width 00CE  
                       ctoa@c 000F                         _putch 4A98                         ctoa@l 0011  
                       _putcm 4B22                         ctoa@w 0013                         dtoa@d 0021  
                       dtoa@i 0041                         dtoa@n 0039                         dtoa@p 0033  
                       dtoa@s 0037                         dtoa@w 0035               __end_of_isspace 49BC  
             __end_of_isupper 4BDC                         tablat 000FF5                         status 000FD8  
             __end_of_sprintf 4A0C                ?___fpclassifyf 0001               __end_of_tolower 490E  
             __end_of_strncmp 4230              __end_of_Get_DATA 48AE                    _Cronometro 45DE  
             __initialization 4CF4                  __end_of_atoi 3682                  __end_of_ctoa 415A  
                __end_of_main 4A52                  __end_of_dtoa 3002              __end_of_Read_ADC 47E2  
            __end_of_Set_DATA 4D5C                        ??_atoi 000A                        ??_ctoa 0010  
                      ??_main 005F                        ??_dtoa 0029                 __activetblptr 000002  
                      _ADCON0 000FC2                        _ADCON2 000FC0                        ?_fputc 0004  
                      ?_fputs 000D                        _ADRESH 000FC4                        _ADRESL 000FC3  
            ___awdiv@dividend 0006                        ?_putch 0001                        _ANSELB 000F5C  
                      ?_putcm 0001                   ?_Alarma_LED 0001            __size_of_Read_ADC1 006A  
                      _MINUTO 00E2                        _OSCCON 000FD3          __end_of_LCD_COMANDOS 4D48  
                      _R_LM35 00C8              __end_of___xxtofl 3836                        _Alarma 3002  
                  _SensorLM35 29EC                  vfprintf@cfmt 0053         __end_of_Mostrar_Reloj 3C76  
                      ___flge 3E80                        ___fleq 4534                     ??___aodiv 0011  
                   ??___fladd 0009                     ??___aomod 0011                        ___wmul 4CCE  
                      _cambio 00F8                     ??___fldiv 0009                     ??___awdiv 000A  
                   ??___flneg 0005                     ??___awmod 0005                     ??___flmul 0017  
                   ??___flsub 0030                     ??___fltol 0005                        _efgtoa 0898  
             ??_InicializaLCD 0004                        _floorf 3278                        clear_0 4CFA  
                      clear_1 4D06              ___awdiv@quotient 000C               ___awmod@divisor 0003  
             ___awmod@counter 0005                        _printf 4CA8                        pad@buf 0016  
                      ctoa@fp 000D                        dtoa@fp 001F                        _strcpy 490E  
                      _strlen 4C4C                        fputc@c 0004                        fputs@c 0011  
                      fputs@i 0012                        fputs@s 000D                     ??_isdigit 0003  
             ___fpclassifyf@e 0009               ___fpclassifyf@u 000B               ___fpclassifyf@x 0001  
                __mediumconst 0000                     ??_isspace 0003                        tblptrh 000FF7  
                   ??_isupper 0003                        tblptrl 000FF6                        tblptru 000FF8  
            __end_of_vfprintf 4774                     ??_sprintf 0055                     ??_tolower 0009  
                   ??_strncmp 0007               _Decenas_Minutos 00EA                    ___flge@ff1 0028  
                  ___flge@ff2 002C               ??___fpclassifyf 0005                  ___xxtofl@arg 000B  
                ___xxtofl@exp 000A                  ___xxtofl@val 0001                    ___fleq@ff1 0001  
                  ___fleq@ff2 0005                    __accesstop 0060       __end_of__initialization 4D0C  
                  ___flneg@f1 0001                   ?_Cronometro 0001                 ___rparam_used 000001  
                  ___fltol@f1 0001                __pcstackCOMRAM 0001                 __end_of_fputc 42FA  
               __end_of_fputs 4B22                 __end_of_putch 4ADE                 __end_of_putcm 4B64  
           __end_of_Read_ADC1 484C           __size_of_Alarma_LED 0104                     ?_Get_DATA 0001  
               Read_ADC@canal 0005                       ??_fputc 0008                       ??_fputs 0011  
                     ??_putch 0001                       ??_putcm 0001                 _Decenas_Horas 00EE  
                  __pbssBANK0 00C0                    __pbssBANK1 0100         __end_of_Configuracion 4CA8  
                   ?_Read_ADC 0001                     ?_Set_DATA 0001                       ?_Alarma 0001  
                 ?_SensorLM35 0001                       ?___flge 0028                       ?___fleq 0001  
                     ?___wmul 0001                       ?_efgtoa 0034                       ?_floorf 001A  
                     ?_printf 00B0                       ?_strcpy 0001                       ?_strlen 0001  
                   ?___xxtofl 0001           __size_of_Cronometro 0098                    ??_Get_DATA 0002  
                     _SEGUNDO 00E0            __size_of_vfpfcnvrt 0878         __size_of_LCD_COMANDOS 0018  
                  ??_Read_ADC 0003   __end_of_Timer0Configuration 4D30                    ??_Set_DATA 0001  
             __size_of_Alarma 0276                       __Hparam 0000                       __Lparam 0000  
                     _Valores 0160               __size_of___flge 0104               __size_of___fleq 00AA  
                     ___aodiv 3836                       ___fladd 1D68                       ___aomod 39BE  
                     ___fldiv 2652                       ___awdiv 43C0                       ___flneg 4BDC  
                     ___awmod 4484                       ___flmul 2228                       ___flsub 4A52  
                     ___fltol 3C76               __size_of___wmul 0026                     ?_vfprintf 004D  
                __psmallconst 0800               __size_of_efgtoa 0C58               __size_of_floorf 0212  
                     __pcinit 4CF4                       __ramtop 0800                       __ptext0 4A0C  
                     __ptext1 4D16                       __ptext2 29EC                       __ptext3 49BC  
                     __ptext4 3682                       __ptext5 47E2                       __ptext6 4774  
                     __ptext7 4D30                       __ptext8 484C                       __ptext9 4D48  
             __size_of_printf 0026                  _LCD_COMANDOS 4D30                     _T0CONbits 000FD5  
             __size_of_strcpy 005C               __size_of_strlen 0036                  __size_of_abs 0040  
                __size_of_pad 00C6                       _isdigit 4C14                    ??___xxtofl 0005  
            ___awmod@dividend 0001                       _isspace 496A                       _minutos 00F6  
                     _isupper 4BA4                       efgtoa@c 003A                       efgtoa@d 0078  
                     efgtoa@e 0090                       efgtoa@f 0036                       efgtoa@g 008C  
                     efgtoa@h 0082                       efgtoa@i 008A                       efgtoa@l 0086  
                     efgtoa@m 0072                       efgtoa@n 0092                       efgtoa@p 007C  
                     efgtoa@t 006C                       efgtoa@u 0094                       efgtoa@w 007E  
                     atoi@neg 000E           __size_of_SensorLM35 0332                       _sprintf 49BC  
                     _tolower 48AE                       _strncmp 415A          end_of_initialization 4D0C  
                     floorf@e 0028                       floorf@m 0024                       floorf@u 002A  
                     floorf@x 001A                  ??_Alarma_LED 0001                       fputc@fp 0006  
               __Lmediumconst 0000                       fputs@fp 000F              _Unidades_Minutos 00EC  
           __end_of_vfpfcnvrt 1D68                    efgtoa@mode 0081                    efgtoa@sign 007A  
                     postdec2 000FDD                       postinc0 000FEE                       postinc1 000FE6  
                     postinc2 000FDE                    ??_vfprintf 0053                       strcpy@d 0009  
                     strlen@a 0003                       strcpy@s 0007                       strlen@s 0001  
                   _PORTAbits 000F80                     _PORTCbits 000F82            __end_of_Alarma_LED 3E80  
            _Decenas_Segundos 00E6                   ___fladd@grs 0010                 ___xxtofl@sign 0009  
                   _TRISCbits 000F94                   ___fldiv@grs 0014                   ___fldiv@rem 000D  
                 ___flmul@grs 001C                  ??_Cronometro 0059                __end_of_Alarma 3278  
              __end_of___flge 3F84                __end_of___fleq 45DE                   vfpfcnvrt@ap 0047  
                 vfpfcnvrt@ct 00AC                   vfpfcnvrt@fp 0043                   vfpfcnvrt@ll 0098  
              __end_of___wmul 4CF4                   vfpfcnvrt@vp 00A0                __end_of_efgtoa 14F0  
                 putch@Activa 0003         __end_of_InicializaLCD 46FE                __end_of_floorf 348A  
                  floorf@F527 0100                __end_of_printf 4CCE                __end_of_strcpy 496A  
              __end_of_strlen 4C82                   putcm@Activa 0003           start_initialization 4CF4  
                   _Read_ADC1 47E2            __end_of_Cronometro 4676                Read_ADC1@canal 0005  
                 __end_of_abs 4BA4                   __end_of_pad 43C0             __size_of_Get_DATA 0062  
      __size_of_Mostrar_Reloj 0154                  Get_DATA@data 0003         __end_of___fpclassifyf 4082  
                    ??_Alarma 005B             __size_of_Read_ADC 006E             __size_of_Set_DATA 0014  
                ??_SensorLM35 00BE                   vfprintf@fmt 004F                      ??___flge 0030  
                    ??___fleq 0009                      ??___wmul 0005                      ??_efgtoa 003B  
                    ??_floorf 001E                _Unidades_Horas 00F0                      ??_printf 0055  
                    ??_strcpy 0005                      ??_strlen 0003                     ___fladd@a 0005  
                   ___fladd@b 0001                     ___fldiv@a 0005                     ___fldiv@b 0001  
                   ___flmul@a 0013                     ___flmul@b 000F                    ?_Read_ADC1 0001  
                   ___flsub@a 002C                     ___flsub@b 0028                 __pcstackBANK0 0060  
            ___aodiv@dividend 0001             __size_of___xxtofl 01B4            __end_of_SensorLM35 2D1E  
                   _atoi$1313 0010                     _atoi$1314 0014                     _atoi$1315 0012  
                 _efgtoa$1244 0060                   _efgtoa$1253 0066                   _efgtoa$1245 0062  
                 _efgtoa$1254 0068                   _efgtoa$1255 006A                   _efgtoa$1249 0064  
                   _dtoa$1220 0031                      ?___aodiv 0001                      ?___fladd 0001  
               _Mostrar_Reloj 3B22                      ?___aomod 0001                      ?___fldiv 0001  
                    ?___awdiv 0006              ___aodiv@quotient 0013                      ?___flneg 0001  
                    ?___awmod 0001                      ?___flmul 000F                      ?___flsub 0028  
                    ?___fltol 0001        __size_of_Configuracion 0026             __size_of_vfprintf 0076  
                 __smallconst 0800                      ?_isdigit 0001                      ?_isspace 0001  
                    ?_isupper 0001                      ?_sprintf 00B0                      ?_tolower 0007  
              __size_of_fputc 00CA                __size_of_fputs 0044                      ?_strncmp 0001  
              __size_of_putch 0046                __size_of_putcm 0042                ___wmul@product 0005  
                    _LATCbits 000F8B                      _LATDbits 000F8C  __size_of_Timer0Configuration 001A  
              ?_Mostrar_Reloj 0001                     _vfpfcnvrt 14F0                    _ADCON0bits 000FC2  
                  _ADCON1bits 000FC1             ___wmul@multiplier 0001                   Alarma_LED@A 0003  
                 ??_Read_ADC1 0003                      _Get_DATA 484C                  _isspace$1344 0007  
                  vfpfcnvrt@c 00AF                    vfpfcnvrt@f 00A8                      _Read_ADC 4774  
               _Configuracion 4C82                      _Set_DATA 4D48                      __Hrparam 0000  
                  vfprintf@ap 0051                      __Lrparam 0000                    vfprintf@fp 004D  
            __size_of___aodiv 0188              __size_of___fladd 04C0              __size_of___aomod 0164  
            __size_of___fldiv 039A              __size_of___awdiv 00C4              __size_of___flneg 0038  
            __size_of___awmod 00B0              __size_of___flmul 042A              __size_of___flsub 0046  
            __size_of___fltol 0106                    ?_vfpfcnvrt 0043                      _VoltajeA 00C4  
                    _VoltajeB 0108               ___aodiv@divisor 0009               ___aodiv@counter 0011  
                  _ANSELAbits 000F5B                    _ANSELCbits 000F5D            ___fpclassifyf@F465 0104  
                  sprintf@fmt 00B2                      ___xxtofl 3682              __size_of_isdigit 0038  
            __size_of_isspace 0052                      __ptext10 4676                      __ptext11 4C82  
                    __ptext20 415A                      __ptext12 3D7C                      __ptext21 0898  
                    __ptext13 3002                      __ptext30 4BDC                      __ptext22 48AE  
                    __ptext14 45DE                      __ptext31 2228                      __ptext23 4BA4  
                    __ptext15 3B22                      __ptext40 4ADE                      __ptext32 3E80  
                    __ptext24 490E                      __ptext16 4B22                      __ptext41 4B64  
                    __ptext33 4534                      __ptext25 3278                      __ptext17 4CA8  
                    __ptext50 4CCE                      __ptext42 39BE                      __ptext34 2652  
                    __ptext26 3F84                      __ptext18 46FE                      __ptext43 3836  
                    __ptext35 4484                      __ptext27 3C76                      __ptext19 14F0  
                    __ptext44 4082                      __ptext36 43C0                      __ptext28 4A52  
                    __ptext45 4230                      __ptext37 2D1E                      __ptext29 1D68  
                    __ptext46 4A98                      __ptext38 42FA                      __ptext47 348A  
                    __ptext39 4C4C                      __ptext48 496A                      __ptext49 4C14  
            __size_of_isupper 0038              __size_of_sprintf 0050              __size_of_tolower 0060  
              ?_Configuracion 0001                    strcpy@dest 0001              __size_of_strncmp 00D6  
               __size_of_atoi 01F8                 __size_of_ctoa 00D8                 __size_of_main 0046  
               __size_of_dtoa 02E4               ??_Mostrar_Reloj 0059                      _segundos 00F2  
                    efgtoa@fp 0034                      efgtoa@ne 0070                      efgtoa@pp 006E  
                    efgtoa@ou 0074                      _vfprintf 46FE                     printf@fmt 00B0  
            ___aomod@dividend 0001                     putch@data 0002                _vfpfcnvrt$1270 00A4  
              _vfpfcnvrt$1276 00A6                _vfpfcnvrt$1269 00A2                    _INTCONbits 000FF2  
                   putcm@data 0002                      isdigit@c 0001                     sprintf@ap 0057  
                    isspace@c 0001        __size_of_InicializaLCD 0088                     strcpy@src 0003  
           _Unidades_Segundos 00E8                      isupper@c 0001                     strncmp@_l 0001  
                   strncmp@_r 0003                   efgtoa@nmode 0080                      printf@ap 0057  
             ___aomod@divisor 0009                   ??_vfpfcnvrt 0049               ___aomod@counter 0011  
               ?_LCD_COMANDOS 0001                   _temperatura 00C0                      sprintf@f 0059  
                    tolower@c 0007                      sprintf@s 00B0        __size_of___fpclassifyf 00FE  
                    strncmp@l 0008                      strncmp@n 0005                      strncmp@r 000A  
         _Timer0Configuration 4D16           LCD_COMANDOS@comando 0004               ??_Configuracion 0001  
               ___fladd@signs 000D                  ___aodiv@sign 0012                  ___fladd@aexp 000E  
                ___fladd@bexp 000F                  ___aomod@sign 0012          ?_Timer0Configuration 0001  
