

Microchip MPLAB XC8 Assembler V2.31 build 20201012212115 
                                                                                               Wed Apr 21 15:28:43 2021

Microchip MPLAB XC8 C Compiler v2.31 (Free license) build 20201012212115 Og1 
     1                           	processor	18F45K50
     2                           	fnconf	rparam,??,?,0
     3                           	pagewidth 120
     4                           	opt	flic
     5                           	psect	smallconst,global,reloc=2,class=SMALLCONST,delta=1,noexec
     6                           	psect	cinit,global,reloc=2,class=CODE,delta=1
     7                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1,lowdata,noexec
     8                           	psect	bssBANK1,global,class=BANK1,space=1,delta=1,lowdata,noexec
     9                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1,lowdata,noexec
    10                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
    11                           	psect	text0,global,reloc=2,class=CODE,delta=1
    12                           	psect	text1,global,reloc=2,class=CODE,delta=1
    13                           	psect	text2,global,reloc=2,class=CODE,delta=1
    14                           	psect	text3,global,reloc=2,class=CODE,delta=1,group=3
    15                           	psect	text4,global,reloc=2,class=CODE,delta=1,group=2
    16                           	psect	text5,global,reloc=2,class=CODE,delta=1
    17                           	psect	text6,global,reloc=2,class=CODE,delta=1
    18                           	psect	text7,global,reloc=2,class=CODE,delta=1
    19                           	psect	text8,global,reloc=2,class=CODE,delta=1
    20                           	psect	text9,global,reloc=2,class=CODE,delta=1
    21                           	psect	text10,global,reloc=2,class=CODE,delta=1
    22                           	psect	text11,global,reloc=2,class=CODE,delta=1
    23                           	psect	text12,global,reloc=2,class=CODE,delta=1
    24                           	psect	text13,global,reloc=2,class=CODE,delta=1
    25                           	psect	text14,global,reloc=2,class=CODE,delta=1
    26                           	psect	text15,global,reloc=2,class=CODE,delta=1
    27                           	psect	text16,global,reloc=2,class=CODE,delta=1,group=3
    28                           	psect	text17,global,reloc=2,class=CODE,delta=1,group=1
    29                           	psect	text18,global,reloc=2,class=CODE,delta=1,group=1
    30                           	psect	text19,global,reloc=2,class=CODE,delta=1,group=3
    31                           	psect	text20,global,reloc=2,class=CODE,delta=1,group=1
    32                           	psect	text21,global,reloc=2,class=CODE,delta=1,group=3
    33                           	psect	text22,global,reloc=2,class=CODE,delta=1,group=3
    34                           	psect	text23,global,reloc=2,class=CODE,delta=1,group=3
    35                           	psect	text24,global,reloc=2,class=CODE,delta=1,group=3
    36                           	psect	text25,global,reloc=2,class=CODE,delta=1,group=3
    37                           	psect	text26,global,reloc=2,class=CODE,delta=1,group=2
    38                           	psect	text27,global,reloc=2,class=CODE,delta=1,group=2
    39                           	psect	text28,global,reloc=2,class=CODE,delta=1,group=2
    40                           	psect	text29,global,reloc=2,class=CODE,delta=1,group=2
    41                           	psect	text30,global,reloc=2,class=CODE,delta=1,group=2
    42                           	psect	text31,global,reloc=2,class=CODE,delta=1,group=2
    43                           	psect	text32,global,reloc=2,class=CODE,delta=1,group=2
    44                           	psect	text33,global,reloc=2,class=CODE,delta=1,group=2
    45                           	psect	text34,global,reloc=2,class=CODE,delta=1,group=2
    46                           	psect	text35,global,reloc=2,class=CODE,delta=1,group=2
    47                           	psect	text36,global,reloc=2,class=CODE,delta=1,group=1
    48                           	psect	text37,global,reloc=2,class=CODE,delta=1,group=1
    49                           	psect	text38,global,reloc=2,class=CODE,delta=1,group=3
    50                           	psect	text39,global,reloc=2,class=CODE,delta=1,group=3
    51                           	psect	text40,global,reloc=2,class=CODE,delta=1,group=3
    52                           	psect	text41,global,reloc=2,class=CODE,delta=1,group=2
    53                           	psect	text42,global,reloc=2,class=CODE,delta=1,group=2
    54                           	psect	text43,global,reloc=2,class=CODE,delta=1,group=1
    55                           	psect	text44,global,reloc=2,class=CODE,delta=1,group=3
    56                           	psect	text45,global,reloc=2,class=CODE,delta=1
    57                           	psect	text46,global,reloc=2,class=CODE,delta=1,group=3
    58                           	psect	text47,global,reloc=2,class=CODE,delta=1,group=3
    59                           	psect	text48,global,reloc=2,class=CODE,delta=1,group=3
    60                           	psect	text49,global,reloc=2,class=CODE,delta=1,group=2
    61                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1,noexec
    62                           	psect	rparam,global,class=COMRAM,space=1,delta=1,noexec
    63                           	psect	idloc,global,abs,ovrld,class=IDLOC,space=5,delta=1,noexec
    64                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=1,noexec
    65  0000                     
    66                           ; Version 2.20
    67                           ; Generated 05/05/2020 GMT
    68                           ; 
    69                           ; Copyright Â© 2020, Microchip Technology Inc. and its subsidiaries ("Microchip")
    70                           ; All rights reserved.
    71                           ; 
    72                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    73                           ; 
    74                           ; Redistribution and use in source and binary forms, with or without modification, are
    75                           ; permitted provided that the following conditions are met:
    76                           ; 
    77                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    78                           ;        conditions and the following disclaimer.
    79                           ; 
    80                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    81                           ;        of conditions and the following disclaimer in the documentation and/or other
    82                           ;        materials provided with the distribution.
    83                           ; 
    84                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    85                           ;        software without specific prior written permission.
    86                           ; 
    87                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    88                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    89                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    90                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    91                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    92                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    93                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    94                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    95                           ; 
    96                           ; 
    97                           ; Code-generator required, PIC18F45K50 Definitions
    98                           ; 
    99                           ; SFR Addresses
   100  0000                     _ANSELB	set	3932
   101  0000                     _ANSELCbits	set	3933
   102  0000                     _ANSELAbits	set	3931
   103  0000                     _PORTB	set	3969
   104  0000                     _PORTCbits	set	3970
   105  0000                     _PORTAbits	set	3968
   106  0000                     _INTCONbits	set	4082
   107  0000                     _TMR0L	set	4054
   108  0000                     _T0CONbits	set	4053
   109  0000                     _LATD	set	3980
   110  0000                     _LATDbits	set	3980
   111  0000                     _LATB	set	3978
   112  0000                     _TRISB	set	3987
   113  0000                     _LATCbits	set	3979
   114  0000                     _TRISCbits	set	3988
   115  0000                     _OSCCON	set	4051
   116  0000                     _TRISD	set	3989
   117  0000                     _TRISA	set	3986
   118  0000                     _ADRESH	set	4036
   119  0000                     _ADRESL	set	4035
   120  0000                     _ADCON2	set	4032
   121  0000                     _ADCON0	set	4034
   122  0000                     _ADCON0bits	set	4034
   123  0000                     _ADCON1bits	set	4033
   124                           
   125                           	psect	smallconst
   126  000800                     __psmallconst:
   127                           	callstack 0
   128  000800  00                 	db	0
   129  000801                     STR_2:
   130  000801  52                 	db	82	;'R'
   131  000802  45                 	db	69	;'E'
   132  000803  4C                 	db	76	;'L'
   133  000804  4F                 	db	79	;'O'
   134  000805  4A                 	db	74	;'J'
   135  000806  3A                 	db	58	;':'
   136  000807  20                 	db	32
   137  000808  20                 	db	32
   138  000809  25                 	db	37
   139  00080A  64                 	db	100	;'d'
   140  00080B  25                 	db	37
   141  00080C  64                 	db	100	;'d'
   142  00080D  3A                 	db	58	;':'
   143  00080E  25                 	db	37
   144  00080F  64                 	db	100	;'d'
   145  000810  25                 	db	37
   146  000811  64                 	db	100	;'d'
   147  000812  3A                 	db	58	;':'
   148  000813  25                 	db	37
   149  000814  64                 	db	100	;'d'
   150  000815  25                 	db	37
   151  000816  64                 	db	100	;'d'
   152  000817  00                 	db	0
   153  000818                     STR_4:
   154  000818  41                 	db	65	;'A'
   155  000819  6C                 	db	108	;'l'
   156  00081A  61                 	db	97	;'a'
   157  00081B  72                 	db	114	;'r'
   158  00081C  6D                 	db	109	;'m'
   159  00081D  61                 	db	97	;'a'
   160  00081E  3A                 	db	58	;':'
   161  00081F  20                 	db	32
   162  000820  25                 	db	37
   163  000821  64                 	db	100	;'d'
   164  000822  25                 	db	37
   165  000823  64                 	db	100	;'d'
   166  000824  3A                 	db	58	;':'
   167  000825  25                 	db	37
   168  000826  64                 	db	100	;'d'
   169  000827  25                 	db	37
   170  000828  64                 	db	100	;'d'
   171  000829  3A                 	db	58	;':'
   172  00082A  25                 	db	37
   173  00082B  64                 	db	100	;'d'
   174  00082C  25                 	db	37
   175  00082D  64                 	db	100	;'d'
   176  00082E  00                 	db	0
   177  00082F                     STR_3:
   178  00082F  20                 	db	32
   179  000830  21                 	db	33
   180  000831  21                 	db	33
   181  000832  4D                 	db	77	;'M'
   182  000833  6F                 	db	111	;'o'
   183  000834  64                 	db	100	;'d'
   184  000835  6F                 	db	111	;'o'
   185  000836  20                 	db	32
   186  000837  41                 	db	65	;'A'
   187  000838  6C                 	db	108	;'l'
   188  000839  61                 	db	97	;'a'
   189  00083A  72                 	db	114	;'r'
   190  00083B  6D                 	db	109	;'m'
   191  00083C  61                 	db	97	;'a'
   192  00083D  21                 	db	33
   193  00083E  21                 	db	33
   194  00083F  20                 	db	32
   195  000840  00                 	db	0
   196  000841                     STR_1:
   197  000841  54                 	db	84	;'T'
   198  000842  65                 	db	101	;'e'
   199  000843  6D                 	db	109	;'m'
   200  000844  70                 	db	112	;'p'
   201  000845  2E                 	db	46
   202  000846  20                 	db	32
   203  000847  3D                 	db	61	;'='
   204  000848  20                 	db	32
   205  000849  25                 	db	37
   206  00084A  33                 	db	51	;'3'
   207  00084B  2E                 	db	46
   208  00084C  32                 	db	50	;'2'
   209  00084D  66                 	db	102	;'f'
   210  00084E  20                 	db	32
   211  00084F  25                 	db	37
   212  000850  63                 	db	99	;'c'
   213  000851  43                 	db	67	;'C'
   214  000852  00                 	db	0
   215  000853                     STR_5:
   216  000853  49                 	db	73	;'I'
   217  000854  4E                 	db	78	;'N'
   218  000855  46                 	db	70	;'F'
   219  000856  00                 	db	0
   220  000857                     STR_9:
   221  000857  4E                 	db	78	;'N'
   222  000858  41                 	db	65	;'A'
   223  000859  4E                 	db	78	;'N'
   224  00085A  00                 	db	0
   225  00085B                     STR_6:
   226  00085B  69                 	db	105	;'i'
   227  00085C  6E                 	db	110	;'n'
   228  00085D  66                 	db	102	;'f'
   229  00085E  00                 	db	0
   230  00085F                     STR_10:
   231  00085F  6E                 	db	110	;'n'
   232  000860  61                 	db	97	;'a'
   233  000861  6E                 	db	110	;'n'
   234  000862  00                 	db	0
   235  000863                     STR_13:
   236  000863  6C                 	db	108	;'l'
   237  000864  66                 	db	102	;'f'
   238  000865  00                 	db	0
   239  000866  00                 	db	0	; dummy byte at the end
   240  0000                     
   241                           ; #config settings
   242                           
   243                           	psect	cinit
   244  004948                     __pcinit:
   245                           	callstack 0
   246  004948                     start_initialization:
   247                           	callstack 0
   248  004948                     __initialization:
   249                           	callstack 0
   250                           
   251                           ; Clear objects allocated to BANK1 (100 bytes)
   252  004948  EE01  F000         	lfsr	0,__pbssBANK1
   253  00494C  0E64               	movlw	100
   254  00494E                     clear_0:
   255  00494E  6AEE               	clrf	postinc0,c
   256  004950  06E8               	decf	wreg,f,c
   257  004952  E1FD               	bnz	clear_0
   258                           
   259                           ; Clear objects allocated to BANK0 (64 bytes)
   260  004954  EE00  F0C0         	lfsr	0,__pbssBANK0
   261  004958  0E40               	movlw	64
   262  00495A                     clear_1:
   263  00495A  6AEE               	clrf	postinc0,c
   264  00495C  06E8               	decf	wreg,f,c
   265  00495E  E1FD               	bnz	clear_1
   266  004960                     end_of_initialization:
   267                           	callstack 0
   268  004960                     __end_of__initialization:
   269                           	callstack 0
   270  004960  0E00               	movlw	low (__Lmediumconst shr (0+16))
   271  004962  6EF8               	movwf	tblptru,c
   272  004964  0100               	movlb	0
   273  004966  EF30  F023         	goto	_main	;jump to C main() function
   274                           
   275                           	psect	bssBANK0
   276  0000C0                     __pbssBANK0:
   277                           	callstack 0
   278  0000C0                     floorf@F527:
   279                           	callstack 0
   280  0000C0                     	ds	4
   281  0000C4                     ___fpclassifyf@F465:
   282                           	callstack 0
   283  0000C4                     	ds	4
   284  0000C8                     _temperatura:
   285                           	callstack 0
   286  0000C8                     	ds	4
   287  0000CC                     _R_LM35:
   288                           	callstack 0
   289  0000CC                     	ds	4
   290  0000D0                     _nout:
   291                           	callstack 0
   292  0000D0                     	ds	2
   293  0000D2                     _width:
   294                           	callstack 0
   295  0000D2                     	ds	2
   296  0000D4                     _prec:
   297                           	callstack 0
   298  0000D4                     	ds	2
   299  0000D6                     _flags:
   300                           	callstack 0
   301  0000D6                     	ds	2
   302  0000D8                     _US:
   303                           	callstack 0
   304  0000D8                     	ds	2
   305  0000DA                     _DS:
   306                           	callstack 0
   307  0000DA                     	ds	2
   308  0000DC                     _UM:
   309                           	callstack 0
   310  0000DC                     	ds	2
   311  0000DE                     _DM:
   312                           	callstack 0
   313  0000DE                     	ds	2
   314  0000E0                     _UH:
   315                           	callstack 0
   316  0000E0                     	ds	2
   317  0000E2                     _DH:
   318                           	callstack 0
   319  0000E2                     	ds	2
   320  0000E4                     _SEGUNDO:
   321                           	callstack 0
   322  0000E4                     	ds	2
   323  0000E6                     _MINUTO:
   324                           	callstack 0
   325  0000E6                     	ds	2
   326  0000E8                     _HORA:
   327                           	callstack 0
   328  0000E8                     	ds	2
   329  0000EA                     _Decenas_Segundos:
   330                           	callstack 0
   331  0000EA                     	ds	2
   332  0000EC                     _Unidades_Segundos:
   333                           	callstack 0
   334  0000EC                     	ds	2
   335  0000EE                     _Decenas_Minutos:
   336                           	callstack 0
   337  0000EE                     	ds	2
   338  0000F0                     _Unidades_Minutos:
   339                           	callstack 0
   340  0000F0                     	ds	2
   341  0000F2                     _Decenas_Horas:
   342                           	callstack 0
   343  0000F2                     	ds	2
   344  0000F4                     _Unidades_Horas:
   345                           	callstack 0
   346  0000F4                     	ds	2
   347  0000F6                     _segundos:
   348                           	callstack 0
   349  0000F6                     	ds	2
   350  0000F8                     _horas:
   351                           	callstack 0
   352  0000F8                     	ds	2
   353  0000FA                     _minutos:
   354                           	callstack 0
   355  0000FA                     	ds	2
   356  0000FC                     _cambio:
   357                           	callstack 0
   358  0000FC                     	ds	2
   359  0000FE                     _ADC:
   360                           	callstack 0
   361  0000FE                     	ds	2
   362                           
   363                           	psect	bssBANK1
   364  000100                     __pbssBANK1:
   365                           	callstack 0
   366  000100                     _R_CAD:
   367                           	callstack 0
   368  000100                     	ds	4
   369  000104                     _dbuf:
   370                           	callstack 0
   371  000104                     	ds	80
   372  000154                     _Valores:
   373                           	callstack 0
   374  000154                     	ds	16
   375                           
   376                           	psect	cstackBANK0
   377  000060                     __pcstackBANK0:
   378                           	callstack 0
   379  000060                     _efgtoa$1232:
   380                           	callstack 0
   381                           
   382                           ; 2 bytes @ 0x0
   383  000060                     	ds	2
   384  000062                     _efgtoa$1233:
   385                           	callstack 0
   386                           
   387                           ; 2 bytes @ 0x2
   388  000062                     	ds	2
   389  000064                     _efgtoa$1237:
   390                           	callstack 0
   391                           
   392                           ; 2 bytes @ 0x4
   393  000064                     	ds	2
   394  000066                     _efgtoa$1241:
   395                           	callstack 0
   396                           
   397                           ; 2 bytes @ 0x6
   398  000066                     	ds	2
   399  000068                     _efgtoa$1242:
   400                           	callstack 0
   401                           
   402                           ; 2 bytes @ 0x8
   403  000068                     	ds	2
   404  00006A                     _efgtoa$1243:
   405                           	callstack 0
   406                           
   407                           ; 2 bytes @ 0xA
   408  00006A                     	ds	2
   409  00006C                     efgtoa@t:
   410                           	callstack 0
   411                           
   412                           ; 2 bytes @ 0xC
   413  00006C                     	ds	2
   414  00006E                     efgtoa@pp:
   415                           	callstack 0
   416                           
   417                           ; 2 bytes @ 0xE
   418  00006E                     	ds	2
   419  000070                     efgtoa@ne:
   420                           	callstack 0
   421                           
   422                           ; 2 bytes @ 0x10
   423  000070                     	ds	2
   424  000072                     efgtoa@m:
   425                           	callstack 0
   426                           
   427                           ; 2 bytes @ 0x12
   428  000072                     	ds	2
   429  000074                     efgtoa@ou:
   430                           	callstack 0
   431                           
   432                           ; 4 bytes @ 0x14
   433  000074                     	ds	4
   434  000078                     efgtoa@d:
   435                           	callstack 0
   436                           
   437                           ; 2 bytes @ 0x18
   438  000078                     	ds	2
   439  00007A                     efgtoa@sign:
   440                           	callstack 0
   441                           
   442                           ; 2 bytes @ 0x1A
   443  00007A                     	ds	2
   444  00007C                     efgtoa@p:
   445                           	callstack 0
   446                           
   447                           ; 2 bytes @ 0x1C
   448  00007C                     	ds	2
   449  00007E                     efgtoa@w:
   450                           	callstack 0
   451                           
   452                           ; 2 bytes @ 0x1E
   453  00007E                     	ds	2
   454  000080                     efgtoa@nmode:
   455                           	callstack 0
   456                           
   457                           ; 1 bytes @ 0x20
   458  000080                     	ds	1
   459  000081                     efgtoa@mode:
   460                           	callstack 0
   461                           
   462                           ; 1 bytes @ 0x21
   463  000081                     	ds	1
   464  000082                     efgtoa@h:
   465                           	callstack 0
   466                           
   467                           ; 4 bytes @ 0x22
   468  000082                     	ds	4
   469  000086                     efgtoa@l:
   470                           	callstack 0
   471                           
   472                           ; 4 bytes @ 0x26
   473  000086                     	ds	4
   474  00008A                     efgtoa@i:
   475                           	callstack 0
   476                           
   477                           ; 2 bytes @ 0x2A
   478  00008A                     	ds	2
   479  00008C                     efgtoa@g:
   480                           	callstack 0
   481                           
   482                           ; 4 bytes @ 0x2C
   483  00008C                     	ds	4
   484  000090                     efgtoa@e:
   485                           	callstack 0
   486                           
   487                           ; 2 bytes @ 0x30
   488  000090                     	ds	2
   489  000092                     efgtoa@n:
   490                           	callstack 0
   491                           
   492                           ; 2 bytes @ 0x32
   493  000092                     	ds	2
   494  000094                     efgtoa@u:
   495                           	callstack 0
   496                           
   497                           ; 4 bytes @ 0x34
   498  000094                     	ds	4
   499  000098                     vfpfcnvrt@ll:
   500                           	callstack 0
   501                           
   502                           ; 8 bytes @ 0x38
   503  000098                     	ds	8
   504  0000A0                     vfpfcnvrt@vp:
   505                           	callstack 0
   506                           
   507                           ; 2 bytes @ 0x40
   508  0000A0                     	ds	2
   509  0000A2                     _vfpfcnvrt$1257:
   510                           	callstack 0
   511                           
   512                           ; 2 bytes @ 0x42
   513  0000A2                     	ds	2
   514  0000A4                     _vfpfcnvrt$1258:
   515                           	callstack 0
   516                           
   517                           ; 2 bytes @ 0x44
   518  0000A4                     	ds	2
   519  0000A6                     _vfpfcnvrt$1264:
   520                           	callstack 0
   521                           
   522                           ; 2 bytes @ 0x46
   523  0000A6                     	ds	2
   524  0000A8                     vfpfcnvrt@f:
   525                           	callstack 0
   526                           
   527                           ; 4 bytes @ 0x48
   528  0000A8                     	ds	4
   529  0000AC                     vfpfcnvrt@ct:
   530                           	callstack 0
   531                           
   532                           ; 3 bytes @ 0x4C
   533  0000AC                     	ds	3
   534  0000AF                     vfpfcnvrt@c:
   535                           	callstack 0
   536                           
   537                           ; 1 bytes @ 0x4F
   538  0000AF                     	ds	1
   539  0000B0                     ?_sprintf:
   540                           	callstack 0
   541  0000B0                     ?_printf:
   542                           	callstack 0
   543  0000B0                     sprintf@s:
   544                           	callstack 0
   545  0000B0                     printf@fmt:
   546                           	callstack 0
   547                           
   548                           ; 2 bytes @ 0x50
   549  0000B0                     	ds	2
   550  0000B2                     sprintf@fmt:
   551                           	callstack 0
   552                           
   553                           ; 2 bytes @ 0x52
   554  0000B2                     	ds	12
   555  0000BE                     ??_SensorLM35:
   556                           
   557                           ; 1 bytes @ 0x5E
   558  0000BE                     	ds	2
   559                           
   560                           	psect	cstackCOMRAM
   561  000001                     __pcstackCOMRAM:
   562                           	callstack 0
   563  000001                     ??_Set_DATA:
   564  000001                     ??_putch:
   565  000001                     ??_putcm:
   566  000001                     ??_Alarma_LED:
   567  000001                     ?_strlen:
   568                           	callstack 0
   569  000001                     ?___fpclassifyf:
   570                           	callstack 0
   571  000001                     ?_isupper:
   572                           	callstack 0
   573  000001                     ?_isdigit:
   574                           	callstack 0
   575  000001                     ?_strncmp:
   576                           	callstack 0
   577  000001                     ?_isspace:
   578                           	callstack 0
   579  000001                     ?_Read_ADC:
   580                           	callstack 0
   581  000001                     ?___wmul:
   582                           	callstack 0
   583  000001                     ?___awmod:
   584                           	callstack 0
   585  000001                     ?___fladd:
   586                           	callstack 0
   587  000001                     ?___fldiv:
   588                           	callstack 0
   589  000001                     ?___flneg:
   590                           	callstack 0
   591  000001                     ?___fltol:
   592                           	callstack 0
   593  000001                     ?___xxtofl:
   594                           	callstack 0
   595  000001                     ?___aodiv:
   596                           	callstack 0
   597  000001                     ?___aomod:
   598                           	callstack 0
   599  000001                     ___wmul@multiplier:
   600                           	callstack 0
   601  000001                     ___awmod@dividend:
   602                           	callstack 0
   603  000001                     isdigit@c:
   604                           	callstack 0
   605  000001                     isspace@c:
   606                           	callstack 0
   607  000001                     isupper@c:
   608                           	callstack 0
   609  000001                     strcpy@dest:
   610                           	callstack 0
   611  000001                     strlen@s:
   612                           	callstack 0
   613  000001                     strncmp@_l:
   614                           	callstack 0
   615  000001                     ___fleq@ff1:
   616                           	callstack 0
   617  000001                     ___flneg@f1:
   618                           	callstack 0
   619  000001                     ___fltol@f1:
   620                           	callstack 0
   621  000001                     ___fladd@b:
   622                           	callstack 0
   623  000001                     ___fldiv@b:
   624                           	callstack 0
   625  000001                     ___xxtofl@val:
   626                           	callstack 0
   627  000001                     ___fpclassifyf@x:
   628                           	callstack 0
   629  000001                     ___aodiv@dividend:
   630                           	callstack 0
   631  000001                     ___aomod@dividend:
   632                           	callstack 0
   633                           
   634                           ; 8 bytes @ 0x0
   635  000001                     	ds	1
   636  000002                     ??_Get_DATA:
   637  000002                     putch@data:
   638                           	callstack 0
   639  000002                     putcm@data:
   640                           	callstack 0
   641                           
   642                           ; 1 bytes @ 0x1
   643  000002                     	ds	1
   644  000003                     ??_isupper:
   645  000003                     ??_isdigit:
   646  000003                     ??_isspace:
   647  000003                     ??_Read_ADC:
   648  000003                     Get_DATA@data:
   649                           	callstack 0
   650  000003                     putch@Activa:
   651                           	callstack 0
   652  000003                     putcm@Activa:
   653                           	callstack 0
   654  000003                     Alarma_LED@A:
   655                           	callstack 0
   656  000003                     ___wmul@multiplicand:
   657                           	callstack 0
   658  000003                     ___awmod@divisor:
   659                           	callstack 0
   660  000003                     strcpy@src:
   661                           	callstack 0
   662  000003                     strlen@a:
   663                           	callstack 0
   664  000003                     strncmp@_r:
   665                           	callstack 0
   666                           
   667                           ; 2 bytes @ 0x2
   668  000003                     	ds	1
   669  000004                     ??_InicializaLCD:
   670  000004                     LCD_COMANDOS@comando:
   671                           	callstack 0
   672  000004                     fputc@c:
   673                           	callstack 0
   674                           
   675                           ; 2 bytes @ 0x3
   676  000004                     	ds	1
   677  000005                     ??___fpclassifyf:
   678  000005                     ??_strcpy:
   679  000005                     ??___fltol:
   680  000005                     ??___xxtofl:
   681  000005                     Read_ADC@canal:
   682                           	callstack 0
   683  000005                     ___awmod@counter:
   684                           	callstack 0
   685  000005                     ___wmul@product:
   686                           	callstack 0
   687  000005                     strncmp@n:
   688                           	callstack 0
   689  000005                     ___fleq@ff2:
   690                           	callstack 0
   691  000005                     ___fladd@a:
   692                           	callstack 0
   693  000005                     ___fldiv@a:
   694                           	callstack 0
   695                           
   696                           ; 4 bytes @ 0x4
   697  000005                     	ds	1
   698  000006                     ?___awdiv:
   699                           	callstack 0
   700  000006                     ___awmod@sign:
   701                           	callstack 0
   702  000006                     ___awdiv@dividend:
   703                           	callstack 0
   704  000006                     fputc@fp:
   705                           	callstack 0
   706                           
   707                           ; 2 bytes @ 0x5
   708  000006                     	ds	1
   709  000007                     ??_strncmp:
   710  000007                     ?_tolower:
   711                           	callstack 0
   712  000007                     _isspace$1332:
   713                           	callstack 0
   714  000007                     strcpy@s:
   715                           	callstack 0
   716  000007                     tolower@c:
   717                           	callstack 0
   718                           
   719                           ; 2 bytes @ 0x6
   720  000007                     	ds	1
   721  000008                     ??_fputc:
   722  000008                     ?_atoi:
   723                           	callstack 0
   724  000008                     ___awdiv@divisor:
   725                           	callstack 0
   726  000008                     atoi@s:
   727                           	callstack 0
   728  000008                     strncmp@l:
   729                           	callstack 0
   730                           
   731                           ; 2 bytes @ 0x7
   732  000008                     	ds	1
   733  000009                     ??___fladd:
   734  000009                     ??___fldiv:
   735  000009                     ??_tolower:
   736  000009                     ??___fleq:
   737  000009                     ___fltol@sign1:
   738                           	callstack 0
   739  000009                     ___xxtofl@sign:
   740                           	callstack 0
   741  000009                     ___fpclassifyf@e:
   742                           	callstack 0
   743  000009                     strcpy@d:
   744                           	callstack 0
   745  000009                     ___aodiv@divisor:
   746                           	callstack 0
   747  000009                     ___aomod@divisor:
   748                           	callstack 0
   749                           
   750                           ; 8 bytes @ 0x8
   751  000009                     	ds	1
   752  00000A                     ??_atoi:
   753  00000A                     ___awdiv@counter:
   754                           	callstack 0
   755  00000A                     ___fltol@exp1:
   756                           	callstack 0
   757  00000A                     ___xxtofl@exp:
   758                           	callstack 0
   759  00000A                     strncmp@r:
   760                           	callstack 0
   761                           
   762                           ; 2 bytes @ 0x9
   763  00000A                     	ds	1
   764  00000B                     ___awdiv@sign:
   765                           	callstack 0
   766  00000B                     ___xxtofl@arg:
   767                           	callstack 0
   768  00000B                     ___fpclassifyf@u:
   769                           	callstack 0
   770                           
   771                           ; 4 bytes @ 0xA
   772  00000B                     	ds	1
   773  00000C                     ___awdiv@quotient:
   774                           	callstack 0
   775                           
   776                           ; 2 bytes @ 0xB
   777  00000C                     	ds	1
   778  00000D                     ?_ctoa:
   779                           	callstack 0
   780  00000D                     ___fladd@signs:
   781                           	callstack 0
   782  00000D                     ctoa@fp:
   783                           	callstack 0
   784  00000D                     fputs@s:
   785                           	callstack 0
   786  00000D                     _tolower$1401:
   787                           	callstack 0
   788  00000D                     ___fldiv@rem:
   789                           	callstack 0
   790                           
   791                           ; 4 bytes @ 0xC
   792  00000D                     	ds	1
   793  00000E                     ___fladd@aexp:
   794                           	callstack 0
   795  00000E                     atoi@neg:
   796                           	callstack 0
   797                           
   798                           ; 2 bytes @ 0xD
   799  00000E                     	ds	1
   800  00000F                     ?___flmul:
   801                           	callstack 0
   802  00000F                     ___fladd@bexp:
   803                           	callstack 0
   804  00000F                     ctoa@c:
   805                           	callstack 0
   806  00000F                     fputs@fp:
   807                           	callstack 0
   808  00000F                     ___flmul@b:
   809                           	callstack 0
   810                           
   811                           ; 4 bytes @ 0xE
   812  00000F                     	ds	1
   813  000010                     ??_ctoa:
   814  000010                     ___fladd@grs:
   815                           	callstack 0
   816  000010                     _atoi$1301:
   817                           	callstack 0
   818                           
   819                           ; 2 bytes @ 0xF
   820  000010                     	ds	1
   821  000011                     ___aodiv@counter:
   822                           	callstack 0
   823  000011                     ___aomod@counter:
   824                           	callstack 0
   825  000011                     ___fldiv@sign:
   826                           	callstack 0
   827  000011                     fputs@c:
   828                           	callstack 0
   829  000011                     ctoa@l:
   830                           	callstack 0
   831                           
   832                           ; 2 bytes @ 0x10
   833  000011                     	ds	1
   834  000012                     ___aodiv@sign:
   835                           	callstack 0
   836  000012                     ___aomod@sign:
   837                           	callstack 0
   838  000012                     ___fldiv@new_exp:
   839                           	callstack 0
   840  000012                     _atoi$1303:
   841                           	callstack 0
   842  000012                     fputs@i:
   843                           	callstack 0
   844                           
   845                           ; 2 bytes @ 0x11
   846  000012                     	ds	1
   847  000013                     ?_abs:
   848                           	callstack 0
   849  000013                     ctoa@w:
   850                           	callstack 0
   851  000013                     abs@a:
   852                           	callstack 0
   853  000013                     ___flmul@a:
   854                           	callstack 0
   855  000013                     ___aodiv@quotient:
   856                           	callstack 0
   857                           
   858                           ; 8 bytes @ 0x12
   859  000013                     	ds	1
   860  000014                     ?_pad:
   861                           	callstack 0
   862  000014                     _atoi$1302:
   863                           	callstack 0
   864  000014                     pad@fp:
   865                           	callstack 0
   866  000014                     ___fldiv@grs:
   867                           	callstack 0
   868                           
   869                           ; 4 bytes @ 0x13
   870  000014                     	ds	1
   871  000015                     ??_abs:
   872  000015                     atoi@n:
   873                           	callstack 0
   874                           
   875                           ; 2 bytes @ 0x14
   876  000015                     	ds	1
   877  000016                     pad@buf:
   878                           	callstack 0
   879                           
   880                           ; 2 bytes @ 0x15
   881  000016                     	ds	1
   882  000017                     ??___flmul:
   883                           
   884                           ; 1 bytes @ 0x16
   885  000017                     	ds	1
   886  000018                     ___fldiv@bexp:
   887                           	callstack 0
   888  000018                     pad@p:
   889                           	callstack 0
   890                           
   891                           ; 2 bytes @ 0x17
   892  000018                     	ds	1
   893  000019                     ___fldiv@aexp:
   894                           	callstack 0
   895                           
   896                           ; 1 bytes @ 0x18
   897  000019                     	ds	1
   898  00001A                     ??_pad:
   899  00001A                     ?_floorf:
   900                           	callstack 0
   901  00001A                     floorf@x:
   902                           	callstack 0
   903                           
   904                           ; 4 bytes @ 0x19
   905  00001A                     	ds	1
   906  00001B                     ___flmul@sign:
   907                           	callstack 0
   908  00001B                     pad@i:
   909                           	callstack 0
   910                           
   911                           ; 2 bytes @ 0x1A
   912  00001B                     	ds	1
   913  00001C                     ___flmul@grs:
   914                           	callstack 0
   915                           
   916                           ; 4 bytes @ 0x1B
   917  00001C                     	ds	1
   918  00001D                     pad@w:
   919                           	callstack 0
   920                           
   921                           ; 2 bytes @ 0x1C
   922  00001D                     	ds	1
   923  00001E                     ??_floorf:
   924                           
   925                           ; 1 bytes @ 0x1D
   926  00001E                     	ds	1
   927  00001F                     ?_dtoa:
   928                           	callstack 0
   929  00001F                     dtoa@fp:
   930                           	callstack 0
   931                           
   932                           ; 2 bytes @ 0x1E
   933  00001F                     	ds	1
   934  000020                     ___flmul@aexp:
   935                           	callstack 0
   936                           
   937                           ; 1 bytes @ 0x1F
   938  000020                     	ds	1
   939  000021                     ___flmul@bexp:
   940                           	callstack 0
   941  000021                     dtoa@d:
   942                           	callstack 0
   943                           
   944                           ; 8 bytes @ 0x20
   945  000021                     	ds	1
   946  000022                     ___flmul@prod:
   947                           	callstack 0
   948                           
   949                           ; 4 bytes @ 0x21
   950  000022                     	ds	2
   951  000024                     floorf@m:
   952                           	callstack 0
   953                           
   954                           ; 4 bytes @ 0x23
   955  000024                     	ds	2
   956  000026                     ___flmul@temp:
   957                           	callstack 0
   958                           
   959                           ; 2 bytes @ 0x25
   960  000026                     	ds	2
   961  000028                     ?___flsub:
   962                           	callstack 0
   963  000028                     floorf@e:
   964                           	callstack 0
   965  000028                     ___flge@ff1:
   966                           	callstack 0
   967  000028                     ___flsub@b:
   968                           	callstack 0
   969                           
   970                           ; 4 bytes @ 0x27
   971  000028                     	ds	1
   972  000029                     ??_dtoa:
   973                           
   974                           ; 1 bytes @ 0x28
   975  000029                     	ds	1
   976  00002A                     floorf@u:
   977                           	callstack 0
   978                           
   979                           ; 4 bytes @ 0x29
   980  00002A                     	ds	2
   981  00002C                     ___flge@ff2:
   982                           	callstack 0
   983  00002C                     ___flsub@a:
   984                           	callstack 0
   985                           
   986                           ; 4 bytes @ 0x2B
   987  00002C                     	ds	4
   988  000030                     ??___flge:
   989                           
   990                           ; 1 bytes @ 0x2F
   991  000030                     	ds	1
   992  000031                     _dtoa$1208:
   993                           	callstack 0
   994                           
   995                           ; 2 bytes @ 0x30
   996  000031                     	ds	2
   997  000033                     dtoa@p:
   998                           	callstack 0
   999                           
  1000                           ; 2 bytes @ 0x32
  1001  000033                     	ds	1
  1002  000034                     ?_efgtoa:
  1003                           	callstack 0
  1004  000034                     efgtoa@fp:
  1005                           	callstack 0
  1006                           
  1007                           ; 2 bytes @ 0x33
  1008  000034                     	ds	1
  1009  000035                     dtoa@w:
  1010                           	callstack 0
  1011                           
  1012                           ; 2 bytes @ 0x34
  1013  000035                     	ds	1
  1014  000036                     efgtoa@f:
  1015                           	callstack 0
  1016                           
  1017                           ; 4 bytes @ 0x35
  1018  000036                     	ds	1
  1019  000037                     dtoa@s:
  1020                           	callstack 0
  1021                           
  1022                           ; 2 bytes @ 0x36
  1023  000037                     	ds	2
  1024  000039                     dtoa@n:
  1025                           	callstack 0
  1026                           
  1027                           ; 8 bytes @ 0x38
  1028  000039                     	ds	1
  1029  00003A                     efgtoa@c:
  1030                           	callstack 0
  1031                           
  1032                           ; 1 bytes @ 0x39
  1033  00003A                     	ds	1
  1034  00003B                     ??_efgtoa:
  1035                           
  1036                           ; 1 bytes @ 0x3A
  1037  00003B                     	ds	6
  1038  000041                     dtoa@i:
  1039                           	callstack 0
  1040                           
  1041                           ; 2 bytes @ 0x40
  1042  000041                     	ds	2
  1043  000043                     ?_vfpfcnvrt:
  1044                           	callstack 0
  1045  000043                     vfpfcnvrt@fp:
  1046                           	callstack 0
  1047                           
  1048                           ; 2 bytes @ 0x42
  1049  000043                     	ds	2
  1050  000045                     vfpfcnvrt@fmt:
  1051                           	callstack 0
  1052                           
  1053                           ; 2 bytes @ 0x44
  1054  000045                     	ds	2
  1055  000047                     vfpfcnvrt@ap:
  1056                           	callstack 0
  1057                           
  1058                           ; 2 bytes @ 0x46
  1059  000047                     	ds	2
  1060  000049                     ??_vfpfcnvrt:
  1061                           
  1062                           ; 1 bytes @ 0x48
  1063  000049                     	ds	4
  1064  00004D                     ?_vfprintf:
  1065                           	callstack 0
  1066  00004D                     vfprintf@fp:
  1067                           	callstack 0
  1068                           
  1069                           ; 2 bytes @ 0x4C
  1070  00004D                     	ds	2
  1071  00004F                     vfprintf@fmt:
  1072                           	callstack 0
  1073                           
  1074                           ; 2 bytes @ 0x4E
  1075  00004F                     	ds	2
  1076  000051                     vfprintf@ap:
  1077                           	callstack 0
  1078                           
  1079                           ; 2 bytes @ 0x50
  1080  000051                     	ds	2
  1081  000053                     vfprintf@cfmt:
  1082                           	callstack 0
  1083                           
  1084                           ; 2 bytes @ 0x52
  1085  000053                     	ds	2
  1086  000055                     
  1087                           ; 1 bytes @ 0x54
  1088  000055                     	ds	2
  1089  000057                     sprintf@ap:
  1090                           	callstack 0
  1091  000057                     printf@ap:
  1092                           	callstack 0
  1093                           
  1094                           ; 2 bytes @ 0x56
  1095  000057                     	ds	2
  1096  000059                     ??_Cronometro:
  1097  000059                     sprintf@f:
  1098                           	callstack 0
  1099                           
  1100                           ; 6 bytes @ 0x58
  1101  000059                     	ds	2
  1102  00005B                     ??_Alarma:
  1103                           
  1104                           ; 1 bytes @ 0x5A
  1105  00005B                     	ds	4
  1106  00005F                     
  1107                           ; 1 bytes @ 0x5E
  1108 ;;
  1109 ;;Main: autosize = 0, tempsize = 0, incstack = 0, save=0
  1110 ;;
  1111 ;; *************** function _main *****************
  1112 ;; Defined at:
  1113 ;;		line 458 in file "Funcional01.c"
  1114 ;; Parameters:    Size  Location     Type
  1115 ;;		None
  1116 ;; Auto vars:     Size  Location     Type
  1117 ;;		None
  1118 ;; Return value:  Size  Location     Type
  1119 ;;                  1    wreg      void 
  1120 ;; Registers used:
  1121 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  1122 ;; Tracked objects:
  1123 ;;		On entry : 0/0
  1124 ;;		On exit  : 0/0
  1125 ;;		Unchanged: 0/0
  1126 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  1127 ;;      Params:         0       0       0       0       0       0       0       0       0
  1128 ;;      Locals:         0       0       0       0       0       0       0       0       0
  1129 ;;      Temps:          0       0       0       0       0       0       0       0       0
  1130 ;;      Totals:         0       0       0       0       0       0       0       0       0
  1131 ;;Total ram usage:        0 bytes
  1132 ;; Hardware stack levels required when called:   11
  1133 ;; This function calls:
  1134 ;;		_Alarma
  1135 ;;		_Alarma_LED
  1136 ;;		_Configuracion
  1137 ;;		_InicializaLCD
  1138 ;;		_LCD_COMANDOS
  1139 ;;		_SensorLM35
  1140 ;;		_Timer0Configuration
  1141 ;; This function is called by:
  1142 ;;		Startup code after reset
  1143 ;; This function uses a non-reentrant model
  1144 ;;
  1145                           
  1146                           	psect	text0
  1147  004660                     __ptext0:
  1148                           	callstack 0
  1149  004660                     _main:
  1150                           	callstack 20
  1151  004660                     
  1152                           ;Funcional01.c: 460:  Configuracion();
  1153  004660  EC6B  F024         	call	_Configuracion	;wreg free
  1154                           
  1155                           ;Funcional01.c: 462:     Timer0Configuration();
  1156  004664  ECB5  F024         	call	_Timer0Configuration	;wreg free
  1157  004668                     
  1158                           ;Funcional01.c: 464:     InicializaLCD();
  1159  004668  EC9A  F021         	call	_InicializaLCD	;wreg free
  1160  00466C                     
  1161                           ;Funcional01.c: 465:     LCD_COMANDOS(1);
  1162  00466C  0E01               	movlw	1
  1163  00466E  ECC2  F024         	call	_LCD_COMANDOS
  1164  004672                     
  1165                           ;Funcional01.c: 466:     LCD_COMANDOS(12);
  1166  004672  0E0C               	movlw	12
  1167  004674  ECC2  F024         	call	_LCD_COMANDOS
  1168  004678                     
  1169                           ;Funcional01.c: 469:     horas = 12;
  1170  004678  0E00               	movlw	0
  1171  00467A  0100               	movlb	0	; () banked
  1172  00467C  6FF9               	movwf	(_horas+1)& (0+255),b
  1173  00467E  0E0C               	movlw	12
  1174  004680  6FF8               	movwf	_horas& (0+255),b
  1175  004682                     
  1176                           ; BSR set to: 0
  1177                           ;Funcional01.c: 470:  minutos = 59;
  1178  004682  0E00               	movlw	0
  1179  004684  6FFB               	movwf	(_minutos+1)& (0+255),b
  1180  004686  0E3B               	movlw	59
  1181  004688  6FFA               	movwf	_minutos& (0+255),b
  1182  00468A                     
  1183                           ; BSR set to: 0
  1184                           ;Funcional01.c: 471:  segundos = 50;
  1185  00468A  0E00               	movlw	0
  1186  00468C  6FF7               	movwf	(_segundos+1)& (0+255),b
  1187  00468E  0E32               	movlw	50
  1188  004690  6FF6               	movwf	_segundos& (0+255),b
  1189  004692                     l4896:
  1190                           
  1191                           ;Funcional01.c: 474:  {;Funcional01.c: 475:         SensorLM35();
  1192  004692  EC23  F01E         	call	_SensorLM35	;wreg free
  1193  004696                     
  1194                           ;Funcional01.c: 480:         Alarma();
  1195  004696  EC59  F017         	call	_Alarma	;wreg free
  1196  00469A                     
  1197                           ;Funcional01.c: 482:         Alarma_LED();
  1198  00469A  EC29  F01C         	call	_Alarma_LED	;wreg free
  1199  00469E  EF49  F023         	goto	l4896
  1200  0046A2  EF00  F000         	goto	start
  1201  0046A6                     __end_of_main:
  1202                           	callstack 0
  1203                           
  1204 ;; *************** function _Timer0Configuration *****************
  1205 ;; Defined at:
  1206 ;;		line 290 in file "Funcional01.c"
  1207 ;; Parameters:    Size  Location     Type
  1208 ;;		None
  1209 ;; Auto vars:     Size  Location     Type
  1210 ;;		None
  1211 ;; Return value:  Size  Location     Type
  1212 ;;                  1    wreg      void 
  1213 ;; Registers used:
  1214 ;;		wreg, status,2
  1215 ;; Tracked objects:
  1216 ;;		On entry : 0/0
  1217 ;;		On exit  : 0/0
  1218 ;;		Unchanged: 0/0
  1219 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  1220 ;;      Params:         0       0       0       0       0       0       0       0       0
  1221 ;;      Locals:         0       0       0       0       0       0       0       0       0
  1222 ;;      Temps:          0       0       0       0       0       0       0       0       0
  1223 ;;      Totals:         0       0       0       0       0       0       0       0       0
  1224 ;;Total ram usage:        0 bytes
  1225 ;; Hardware stack levels used:    1
  1226 ;; This function calls:
  1227 ;;		Nothing
  1228 ;; This function is called by:
  1229 ;;		_main
  1230 ;; This function uses a non-reentrant model
  1231 ;;
  1232                           
  1233                           	psect	text1
  1234  00496A                     __ptext1:
  1235                           	callstack 0
  1236  00496A                     _Timer0Configuration:
  1237                           	callstack 30
  1238  00496A                     
  1239                           ;Funcional01.c: 292:     T0CONbits.T08BIT = 1;
  1240  00496A  8CD5               	bsf	213,6,c	;volatile
  1241                           
  1242                           ;Funcional01.c: 293:     T0CONbits.T0CS = 1;
  1243  00496C  8AD5               	bsf	213,5,c	;volatile
  1244                           
  1245                           ;Funcional01.c: 294:     T0CONbits.T0SE = 0;
  1246  00496E  98D5               	bcf	213,4,c	;volatile
  1247                           
  1248                           ;Funcional01.c: 295:     T0CONbits.PSA = 1;
  1249  004970  86D5               	bsf	213,3,c	;volatile
  1250  004972                     
  1251                           ;Funcional01.c: 296:     T0CONbits.T0PS = 0b000;
  1252  004972  0EF8               	movlw	-8
  1253  004974  16D5               	andwf	213,f,c	;volatile
  1254  004976                     
  1255                           ;Funcional01.c: 298:     TMR0L = 0xFF;
  1256  004976  68D6               	setf	214,c	;volatile
  1257  004978                     
  1258                           ;Funcional01.c: 299:     T0CONbits.TMR0ON = 1;
  1259  004978  8ED5               	bsf	213,7,c	;volatile
  1260  00497A                     
  1261                           ;Funcional01.c: 302:     INTCONbits.GIE = 1;
  1262  00497A  8EF2               	bsf	242,7,c	;volatile
  1263  00497C                     
  1264                           ;Funcional01.c: 303:     INTCONbits.PEIE = 1;
  1265  00497C  8CF2               	bsf	242,6,c	;volatile
  1266  00497E                     
  1267                           ;Funcional01.c: 304:     INTCONbits.TMR0IE = 1;
  1268  00497E  8AF2               	bsf	242,5,c	;volatile
  1269  004980                     
  1270                           ;Funcional01.c: 305:     INTCONbits.TMR0IF =0;
  1271  004980  94F2               	bcf	242,2,c	;volatile
  1272  004982  0012               	return		;funcret
  1273  004984                     __end_of_Timer0Configuration:
  1274                           	callstack 0
  1275                           
  1276 ;; *************** function _SensorLM35 *****************
  1277 ;; Defined at:
  1278 ;;		line 270 in file "Funcional01.c"
  1279 ;; Parameters:    Size  Location     Type
  1280 ;;		None
  1281 ;; Auto vars:     Size  Location     Type
  1282 ;;		None
  1283 ;; Return value:  Size  Location     Type
  1284 ;;                  1    wreg      void 
  1285 ;; Registers used:
  1286 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  1287 ;; Tracked objects:
  1288 ;;		On entry : 0/0
  1289 ;;		On exit  : 0/0
  1290 ;;		Unchanged: 0/0
  1291 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  1292 ;;      Params:         0       0       0       0       0       0       0       0       0
  1293 ;;      Locals:         0       0       0       0       0       0       0       0       0
  1294 ;;      Temps:          0       2       0       0       0       0       0       0       0
  1295 ;;      Totals:         0       2       0       0       0       0       0       0       0
  1296 ;;Total ram usage:        2 bytes
  1297 ;; Hardware stack levels used:    1
  1298 ;; Hardware stack levels required when called:    8
  1299 ;; This function calls:
  1300 ;;		_Read_ADC
  1301 ;;		___awdiv
  1302 ;;		___flmul
  1303 ;;		___xxtofl
  1304 ;;		_printf
  1305 ;;		_putcm
  1306 ;;		_sprintf
  1307 ;; This function is called by:
  1308 ;;		_main
  1309 ;; This function uses a non-reentrant model
  1310 ;;
  1311                           
  1312                           	psect	text2
  1313  003C46                     __ptext2:
  1314                           	callstack 0
  1315  003C46                     _SensorLM35:
  1316                           	callstack 22
  1317  003C46                     
  1318                           ;Funcional01.c: 274:     ADC = Read_ADC(0)/64;
  1319  003C46  0E00               	movlw	0
  1320  003C48  EC19  F022         	call	_Read_ADC
  1321  003C4C  C001  F006         	movff	?_Read_ADC,___awdiv@dividend
  1322  003C50  C002  F007         	movff	?_Read_ADC+1,___awdiv@dividend+1
  1323  003C54  0E00               	movlw	0
  1324  003C56  6E09               	movwf	(___awdiv@divisor+1)^0,c
  1325  003C58  0E40               	movlw	64
  1326  003C5A  6E08               	movwf	___awdiv@divisor^0,c
  1327  003C5C  EC31  F020         	call	___awdiv	;wreg free
  1328  003C60  C006  F0FE         	movff	?___awdiv,_ADC
  1329  003C64  C007  F0FF         	movff	?___awdiv+1,_ADC+1
  1330  003C68                     
  1331                           ;Funcional01.c: 275:     R_LM35 = 500.10 / 1024;
  1332  003C68  0ECD               	movlw	205
  1333  003C6A  0100               	movlb	0	; () banked
  1334  003C6C  6FCC               	movwf	_R_LM35& (0+255),b
  1335  003C6E  0E0C               	movlw	12
  1336  003C70  6FCD               	movwf	(_R_LM35+1)& (0+255),b
  1337  003C72  0EFA               	movlw	250
  1338  003C74  6FCE               	movwf	(_R_LM35+2)& (0+255),b
  1339  003C76  0E3E               	movlw	62
  1340  003C78  6FCF               	movwf	(_R_LM35+3)& (0+255),b
  1341  003C7A                     
  1342                           ; BSR set to: 0
  1343                           ;Funcional01.c: 279:     temperatura = ADC*R_LM35;
  1344  003C7A  C0FE  F001         	movff	_ADC,___xxtofl@val
  1345  003C7E  C0FF  F002         	movff	_ADC+1,___xxtofl@val+1
  1346  003C82  0E00               	movlw	0
  1347  003C84  BE02               	btfsc	(___xxtofl@val+1)^0,7,c
  1348  003C86  0EFF               	movlw	-1
  1349  003C88  6E03               	movwf	(___xxtofl@val+2)^0,c
  1350  003C8A  6E04               	movwf	(___xxtofl@val+3)^0,c
  1351  003C8C  0E01               	movlw	1
  1352  003C8E  EC56  F019         	call	___xxtofl
  1353  003C92  C001  F00F         	movff	?___xxtofl,___flmul@b
  1354  003C96  C002  F010         	movff	?___xxtofl+1,___flmul@b+1
  1355  003C9A  C003  F011         	movff	?___xxtofl+2,___flmul@b+2
  1356  003C9E  C004  F012         	movff	?___xxtofl+3,___flmul@b+3
  1357  003CA2  C0CC  F013         	movff	_R_LM35,___flmul@a
  1358  003CA6  C0CD  F014         	movff	_R_LM35+1,___flmul@a+1
  1359  003CAA  C0CE  F015         	movff	_R_LM35+2,___flmul@a+2
  1360  003CAE  C0CF  F016         	movff	_R_LM35+3,___flmul@a+3
  1361  003CB2  ECFC  F010         	call	___flmul	;wreg free
  1362  003CB6  C00F  F0C8         	movff	?___flmul,_temperatura
  1363  003CBA  C010  F0C9         	movff	?___flmul+1,_temperatura+1
  1364  003CBE  C011  F0CA         	movff	?___flmul+2,_temperatura+2
  1365  003CC2  C012  F0CB         	movff	?___flmul+3,_temperatura+3
  1366  003CC6                     
  1367                           ;Funcional01.c: 280:     putcm(0x80);
  1368  003CC6  0E80               	movlw	128
  1369  003CC8  ECBB  F023         	call	_putcm
  1370  003CCC                     
  1371                           ;Funcional01.c: 281:     sprintf(Valores, "Temp. = %3.2f %cC",temperatura, 0xDF);
  1372  003CCC  0E54               	movlw	low _Valores
  1373  003CCE  0100               	movlb	0	; () banked
  1374  003CD0  6FB0               	movwf	sprintf@s& (0+255),b
  1375  003CD2  0E01               	movlw	high _Valores
  1376  003CD4  6FB1               	movwf	(sprintf@s+1)& (0+255),b
  1377  003CD6  0E41               	movlw	low STR_1
  1378  003CD8  6FB2               	movwf	sprintf@fmt& (0+255),b
  1379  003CDA  0E08               	movlw	high STR_1
  1380  003CDC  6FB3               	movwf	(sprintf@fmt+1)& (0+255),b
  1381  003CDE  C0C8  F0B4         	movff	_temperatura,?_sprintf+4
  1382  003CE2  C0C9  F0B5         	movff	_temperatura+1,?_sprintf+5
  1383  003CE6  C0CA  F0B6         	movff	_temperatura+2,?_sprintf+6
  1384  003CEA  C0CB  F0B7         	movff	_temperatura+3,?_sprintf+7
  1385  003CEE  0E00               	movlw	0
  1386  003CF0  6FB9               	movwf	(?_sprintf+9)& (0+255),b
  1387  003CF2  0EDF               	movlw	223
  1388  003CF4  6FB8               	movwf	(?_sprintf+8)& (0+255),b
  1389  003CF6  EC08  F023         	call	_sprintf	;wreg free
  1390  003CFA                     
  1391                           ;Funcional01.c: 282:     _delay((unsigned long)((1000)*(8000000/4000.0)));
  1392  003CFA  0E0B               	movlw	11
  1393  003CFC  0100               	movlb	0	; () banked
  1394  003CFE  6FBF               	movwf	(??_SensorLM35+1)& (0+255),b
  1395  003D00  0E26               	movlw	38
  1396  003D02  6FBE               	movwf	??_SensorLM35& (0+255),b
  1397  003D04  0E5D               	movlw	93
  1398  003D06                     u6477:
  1399  003D06  2EE8               	decfsz	wreg,f,c
  1400  003D08  D7FE               	bra	u6477
  1401  003D0A  2FBE               	decfsz	??_SensorLM35& (0+255),f,b
  1402  003D0C  D7FC               	bra	u6477
  1403  003D0E  2FBF               	decfsz	(??_SensorLM35+1)& (0+255),f,b
  1404  003D10  D7FA               	bra	u6477
  1405  003D12  D000               	nop2	
  1406  003D14                     
  1407                           ;Funcional01.c: 283:     printf(Valores);
  1408  003D14  0E54               	movlw	low _Valores
  1409  003D16  0100               	movlb	0	; () banked
  1410  003D18  6FB0               	movwf	printf@fmt& (0+255),b
  1411  003D1A  0E01               	movlw	high _Valores
  1412  003D1C  6FB1               	movwf	(printf@fmt+1)& (0+255),b
  1413  003D1E  EC7E  F024         	call	_printf	;wreg free
  1414  003D22  0012               	return		;funcret
  1415  003D24                     __end_of_SensorLM35:
  1416                           	callstack 0
  1417                           
  1418 ;; *************** function _sprintf *****************
  1419 ;; Defined at:
  1420 ;;		line 9 in file "C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\nf_sprintf.c"
  1421 ;; Parameters:    Size  Location     Type
  1422 ;;  s               2   80[BANK0 ] PTR unsigned char 
  1423 ;;		 -> Valores(16), 
  1424 ;;  fmt             2   82[BANK0 ] PTR const unsigned char 
  1425 ;;		 -> STR_1(18), 
  1426 ;; Auto vars:     Size  Location     Type
  1427 ;;  f               6   88[COMRAM] struct _IO_FILE
  1428 ;;  ap              2   86[COMRAM] PTR void [1]
  1429 ;;		 -> ?_printf(2), ?_sprintf(2), 
  1430 ;;  ret             2    0        int 
  1431 ;; Return value:  Size  Location     Type
  1432 ;;                  2   80[BANK0 ] int 
  1433 ;; Registers used:
  1434 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  1435 ;; Tracked objects:
  1436 ;;		On entry : 0/0
  1437 ;;		On exit  : 0/0
  1438 ;;		Unchanged: 0/0
  1439 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  1440 ;;      Params:         0      10       0       0       0       0       0       0       0
  1441 ;;      Locals:        10       0       0       0       0       0       0       0       0
  1442 ;;      Temps:          0       0       0       0       0       0       0       0       0
  1443 ;;      Totals:        10      10       0       0       0       0       0       0       0
  1444 ;;Total ram usage:       20 bytes
  1445 ;; Hardware stack levels used:    1
  1446 ;; Hardware stack levels required when called:    7
  1447 ;; This function calls:
  1448 ;;		_vfprintf
  1449 ;; This function is called by:
  1450 ;;		_SensorLM35
  1451 ;; This function uses a non-reentrant model
  1452 ;;
  1453                           
  1454                           	psect	text3
  1455  004610                     __ptext3:
  1456                           	callstack 0
  1457  004610                     _sprintf:
  1458                           	callstack 22
  1459  004610  0EB4               	movlw	low (?_sprintf+4)
  1460  004612  6E57               	movwf	sprintf@ap^0,c
  1461  004614  0E00               	movlw	high (?_sprintf+4)
  1462  004616  6E58               	movwf	(sprintf@ap+1)^0,c
  1463  004618  C0B0  F059         	movff	sprintf@s,sprintf@f
  1464  00461C  C0B1  F05A         	movff	sprintf@s+1,sprintf@f+1
  1465  004620  0E00               	movlw	0
  1466  004622  6E5C               	movwf	(sprintf@f+3)^0,c
  1467  004624  0E00               	movlw	0
  1468  004626  6E5B               	movwf	(sprintf@f+2)^0,c
  1469  004628  0E00               	movlw	0
  1470  00462A  6E5E               	movwf	(sprintf@f+5)^0,c
  1471  00462C  0E00               	movlw	0
  1472  00462E  6E5D               	movwf	(sprintf@f+4)^0,c
  1473  004630  0E59               	movlw	low sprintf@f
  1474  004632  6E4D               	movwf	vfprintf@fp^0,c
  1475  004634  0E00               	movlw	high sprintf@f
  1476  004636  6E4E               	movwf	(vfprintf@fp+1)^0,c
  1477  004638  C0B2  F04F         	movff	sprintf@fmt,vfprintf@fmt
  1478  00463C  C0B3  F050         	movff	sprintf@fmt+1,vfprintf@fmt+1
  1479  004640  0E57               	movlw	low sprintf@ap
  1480  004642  6E51               	movwf	vfprintf@ap^0,c
  1481  004644  0E00               	movlw	high sprintf@ap
  1482  004646  6E52               	movwf	(vfprintf@ap+1)^0,c
  1483  004648  ECDE  F021         	call	_vfprintf	;wreg free
  1484  00464C  505B               	movf	(sprintf@f+2)^0,w,c
  1485  00464E  0100               	movlb	0	; () banked
  1486  004650  25B0               	addwf	sprintf@s& (0+255),w,b
  1487  004652  6ED9               	movwf	fsr2l,c
  1488  004654  505C               	movf	(sprintf@f+3)^0,w,c
  1489  004656  21B1               	addwfc	(sprintf@s+1)& (0+255),w,b
  1490  004658  6EDA               	movwf	fsr2h,c
  1491  00465A  0E00               	movlw	0
  1492  00465C  6EDF               	movwf	indf2,c
  1493  00465E                     
  1494                           ; BSR set to: 0
  1495  00465E  0012               	return		;funcret
  1496  004660                     __end_of_sprintf:
  1497                           	callstack 0
  1498                           
  1499 ;; *************** function ___xxtofl *****************
  1500 ;; Defined at:
  1501 ;;		line 10 in file "C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\xxtofl.c"
  1502 ;; Parameters:    Size  Location     Type
  1503 ;;  sign            1    wreg     unsigned char 
  1504 ;;  val             4    0[COMRAM] long 
  1505 ;; Auto vars:     Size  Location     Type
  1506 ;;  sign            1    8[COMRAM] unsigned char 
  1507 ;;  arg             4   10[COMRAM] unsigned long 
  1508 ;;  exp             1    9[COMRAM] unsigned char 
  1509 ;; Return value:  Size  Location     Type
  1510 ;;                  4    0[COMRAM] unsigned char 
  1511 ;; Registers used:
  1512 ;;		wreg, status,2, status,0
  1513 ;; Tracked objects:
  1514 ;;		On entry : 0/0
  1515 ;;		On exit  : 0/0
  1516 ;;		Unchanged: 0/0
  1517 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  1518 ;;      Params:         4       0       0       0       0       0       0       0       0
  1519 ;;      Locals:         6       0       0       0       0       0       0       0       0
  1520 ;;      Temps:          4       0       0       0       0       0       0       0       0
  1521 ;;      Totals:        14       0       0       0       0       0       0       0       0
  1522 ;;Total ram usage:       14 bytes
  1523 ;; Hardware stack levels used:    1
  1524 ;; This function calls:
  1525 ;;		Nothing
  1526 ;; This function is called by:
  1527 ;;		_SensorLM35
  1528 ;; This function uses a non-reentrant model
  1529 ;;
  1530                           
  1531                           	psect	text4
  1532  0032AC                     __ptext4:
  1533                           	callstack 0
  1534  0032AC                     ___xxtofl:
  1535                           	callstack 29
  1536                           
  1537                           ; BSR set to: 0
  1538                           ;incstack = 0
  1539                           ;___xxtofl@sign stored from wreg
  1540  0032AC  6E09               	movwf	___xxtofl@sign^0,c
  1541  0032AE  5009               	movf	___xxtofl@sign^0,w,c
  1542  0032B0  B4D8               	btfsc	status,2,c
  1543  0032B2  EF5D  F019         	goto	u6241
  1544  0032B6  EF5F  F019         	goto	u6240
  1545  0032BA                     u6241:
  1546  0032BA  EF81  F019         	goto	l833
  1547  0032BE                     u6240:
  1548  0032BE  BE04               	btfsc	(___xxtofl@val+3)^0,7,c
  1549  0032C0  EF66  F019         	goto	u6250
  1550  0032C4  EF64  F019         	goto	u6251
  1551  0032C8                     u6251:
  1552  0032C8  EF81  F019         	goto	l833
  1553  0032CC                     u6250:
  1554  0032CC  C001  F005         	movff	___xxtofl@val,??___xxtofl
  1555  0032D0  C002  F006         	movff	___xxtofl@val+1,??___xxtofl+1
  1556  0032D4  C003  F007         	movff	___xxtofl@val+2,??___xxtofl+2
  1557  0032D8  C004  F008         	movff	___xxtofl@val+3,??___xxtofl+3
  1558  0032DC  1E05               	comf	??___xxtofl^0,f,c
  1559  0032DE  1E06               	comf	(??___xxtofl+1)^0,f,c
  1560  0032E0  1E07               	comf	(??___xxtofl+2)^0,f,c
  1561  0032E2  1E08               	comf	(??___xxtofl+3)^0,f,c
  1562  0032E4  2A05               	incf	??___xxtofl^0,f,c
  1563  0032E6  0E00               	movlw	0
  1564  0032E8  2206               	addwfc	(??___xxtofl+1)^0,f,c
  1565  0032EA  2207               	addwfc	(??___xxtofl+2)^0,f,c
  1566  0032EC  2208               	addwfc	(??___xxtofl+3)^0,f,c
  1567  0032EE  C005  F00B         	movff	??___xxtofl,___xxtofl@arg
  1568  0032F2  C006  F00C         	movff	??___xxtofl+1,___xxtofl@arg+1
  1569  0032F6  C007  F00D         	movff	??___xxtofl+2,___xxtofl@arg+2
  1570  0032FA  C008  F00E         	movff	??___xxtofl+3,___xxtofl@arg+3
  1571  0032FE  EF89  F019         	goto	l4686
  1572  003302                     l833:
  1573  003302  C001  F00B         	movff	___xxtofl@val,___xxtofl@arg
  1574  003306  C002  F00C         	movff	___xxtofl@val+1,___xxtofl@arg+1
  1575  00330A  C003  F00D         	movff	___xxtofl@val+2,___xxtofl@arg+2
  1576  00330E  C004  F00E         	movff	___xxtofl@val+3,___xxtofl@arg+3
  1577  003312                     l4686:
  1578  003312  5001               	movf	___xxtofl@val^0,w,c
  1579  003314  1002               	iorwf	(___xxtofl@val+1)^0,w,c
  1580  003316  1003               	iorwf	(___xxtofl@val+2)^0,w,c
  1581  003318  1004               	iorwf	(___xxtofl@val+3)^0,w,c
  1582  00331A  A4D8               	btfss	status,2,c
  1583  00331C  EF92  F019         	goto	u6261
  1584  003320  EF94  F019         	goto	u6260
  1585  003324                     u6261:
  1586  003324  EF9E  F019         	goto	l4692
  1587  003328                     u6260:
  1588  003328  0E00               	movlw	0
  1589  00332A  6E01               	movwf	?___xxtofl^0,c
  1590  00332C  0E00               	movlw	0
  1591  00332E  6E02               	movwf	(?___xxtofl+1)^0,c
  1592  003330  0E00               	movlw	0
  1593  003332  6E03               	movwf	(?___xxtofl+2)^0,c
  1594  003334  0E00               	movlw	0
  1595  003336  6E04               	movwf	(?___xxtofl+3)^0,c
  1596  003338  EF2F  F01A         	goto	l836
  1597  00333C                     l4692:
  1598  00333C  0E96               	movlw	150
  1599  00333E  6E0A               	movwf	___xxtofl@exp^0,c
  1600  003340  EFA8  F019         	goto	l4696
  1601  003344                     l4694:
  1602  003344  2A0A               	incf	___xxtofl@exp^0,f,c
  1603  003346  90D8               	bcf	status,0,c
  1604  003348  320E               	rrcf	(___xxtofl@arg+3)^0,f,c
  1605  00334A  320D               	rrcf	(___xxtofl@arg+2)^0,f,c
  1606  00334C  320C               	rrcf	(___xxtofl@arg+1)^0,f,c
  1607  00334E  320B               	rrcf	___xxtofl@arg^0,f,c
  1608  003350                     l4696:
  1609  003350  0E00               	movlw	0
  1610  003352  140B               	andwf	___xxtofl@arg^0,w,c
  1611  003354  6E05               	movwf	??___xxtofl^0,c
  1612  003356  0E00               	movlw	0
  1613  003358  140C               	andwf	(___xxtofl@arg+1)^0,w,c
  1614  00335A  6E06               	movwf	(??___xxtofl+1)^0,c
  1615  00335C  0E00               	movlw	0
  1616  00335E  140D               	andwf	(___xxtofl@arg+2)^0,w,c
  1617  003360  6E07               	movwf	(??___xxtofl+2)^0,c
  1618  003362  0EFE               	movlw	254
  1619  003364  140E               	andwf	(___xxtofl@arg+3)^0,w,c
  1620  003366  6E08               	movwf	(??___xxtofl+3)^0,c
  1621  003368  5005               	movf	??___xxtofl^0,w,c
  1622  00336A  1006               	iorwf	(??___xxtofl+1)^0,w,c
  1623  00336C  1007               	iorwf	(??___xxtofl+2)^0,w,c
  1624  00336E  1008               	iorwf	(??___xxtofl+3)^0,w,c
  1625  003370  A4D8               	btfss	status,2,c
  1626  003372  EFBD  F019         	goto	u6271
  1627  003376  EFBF  F019         	goto	u6270
  1628  00337A                     u6271:
  1629  00337A  EFA2  F019         	goto	l4694
  1630  00337E                     u6270:
  1631  00337E  EFCD  F019         	goto	l840
  1632  003382                     l4698:
  1633  003382  2A0A               	incf	___xxtofl@exp^0,f,c
  1634  003384  0E01               	movlw	1
  1635  003386  260B               	addwf	___xxtofl@arg^0,f,c
  1636  003388  0E00               	movlw	0
  1637  00338A  220C               	addwfc	(___xxtofl@arg+1)^0,f,c
  1638  00338C  220D               	addwfc	(___xxtofl@arg+2)^0,f,c
  1639  00338E  220E               	addwfc	(___xxtofl@arg+3)^0,f,c
  1640  003390  90D8               	bcf	status,0,c
  1641  003392  320E               	rrcf	(___xxtofl@arg+3)^0,f,c
  1642  003394  320D               	rrcf	(___xxtofl@arg+2)^0,f,c
  1643  003396  320C               	rrcf	(___xxtofl@arg+1)^0,f,c
  1644  003398  320B               	rrcf	___xxtofl@arg^0,f,c
  1645  00339A                     l840:
  1646  00339A  0E00               	movlw	0
  1647  00339C  140B               	andwf	___xxtofl@arg^0,w,c
  1648  00339E  6E05               	movwf	??___xxtofl^0,c
  1649  0033A0  0E00               	movlw	0
  1650  0033A2  140C               	andwf	(___xxtofl@arg+1)^0,w,c
  1651  0033A4  6E06               	movwf	(??___xxtofl+1)^0,c
  1652  0033A6  0E00               	movlw	0
  1653  0033A8  140D               	andwf	(___xxtofl@arg+2)^0,w,c
  1654  0033AA  6E07               	movwf	(??___xxtofl+2)^0,c
  1655  0033AC  0EFF               	movlw	255
  1656  0033AE  140E               	andwf	(___xxtofl@arg+3)^0,w,c
  1657  0033B0  6E08               	movwf	(??___xxtofl+3)^0,c
  1658  0033B2  5005               	movf	??___xxtofl^0,w,c
  1659  0033B4  1006               	iorwf	(??___xxtofl+1)^0,w,c
  1660  0033B6  1007               	iorwf	(??___xxtofl+2)^0,w,c
  1661  0033B8  1008               	iorwf	(??___xxtofl+3)^0,w,c
  1662  0033BA  A4D8               	btfss	status,2,c
  1663  0033BC  EFE2  F019         	goto	u6281
  1664  0033C0  EFE4  F019         	goto	u6280
  1665  0033C4                     u6281:
  1666  0033C4  EFC1  F019         	goto	l4698
  1667  0033C8                     u6280:
  1668  0033C8  EFEC  F019         	goto	l4706
  1669  0033CC                     l4704:
  1670  0033CC  060A               	decf	___xxtofl@exp^0,f,c
  1671  0033CE  90D8               	bcf	status,0,c
  1672  0033D0  360B               	rlcf	___xxtofl@arg^0,f,c
  1673  0033D2  360C               	rlcf	(___xxtofl@arg+1)^0,f,c
  1674  0033D4  360D               	rlcf	(___xxtofl@arg+2)^0,f,c
  1675  0033D6  360E               	rlcf	(___xxtofl@arg+3)^0,f,c
  1676  0033D8                     l4706:
  1677  0033D8  BE0D               	btfsc	(___xxtofl@arg+2)^0,7,c
  1678  0033DA  EFF1  F019         	goto	u6291
  1679  0033DE  EFF3  F019         	goto	u6290
  1680  0033E2                     u6291:
  1681  0033E2  EFFB  F019         	goto	l847
  1682  0033E6                     u6290:
  1683  0033E6  0E02               	movlw	2
  1684  0033E8  600A               	cpfslt	___xxtofl@exp^0,c
  1685  0033EA  EFF9  F019         	goto	u6301
  1686  0033EE  EFFB  F019         	goto	u6300
  1687  0033F2                     u6301:
  1688  0033F2  EFE6  F019         	goto	l4704
  1689  0033F6                     u6300:
  1690  0033F6                     l847:
  1691  0033F6  B00A               	btfsc	___xxtofl@exp^0,0,c
  1692  0033F8  EF00  F01A         	goto	u6311
  1693  0033FC  EF02  F01A         	goto	u6310
  1694  003400                     u6311:
  1695  003400  EF03  F01A         	goto	l4712
  1696  003404                     u6310:
  1697  003404  9E0D               	bcf	(___xxtofl@arg+2)^0,7,c
  1698  003406                     l4712:
  1699  003406  90D8               	bcf	status,0,c
  1700  003408  320A               	rrcf	___xxtofl@exp^0,f,c
  1701  00340A  C00A  F005         	movff	___xxtofl@exp,??___xxtofl
  1702  00340E  6A06               	clrf	(??___xxtofl+1)^0,c
  1703  003410  6A07               	clrf	(??___xxtofl+2)^0,c
  1704  003412  6A08               	clrf	(??___xxtofl+3)^0,c
  1705  003414  C005  F008         	movff	??___xxtofl,??___xxtofl+3
  1706  003418  6A07               	clrf	(??___xxtofl+2)^0,c
  1707  00341A  6A06               	clrf	(??___xxtofl+1)^0,c
  1708  00341C  6A05               	clrf	??___xxtofl^0,c
  1709  00341E  5005               	movf	??___xxtofl^0,w,c
  1710  003420  120B               	iorwf	___xxtofl@arg^0,f,c
  1711  003422  5006               	movf	(??___xxtofl+1)^0,w,c
  1712  003424  120C               	iorwf	(___xxtofl@arg+1)^0,f,c
  1713  003426  5007               	movf	(??___xxtofl+2)^0,w,c
  1714  003428  120D               	iorwf	(___xxtofl@arg+2)^0,f,c
  1715  00342A  5008               	movf	(??___xxtofl+3)^0,w,c
  1716  00342C  120E               	iorwf	(___xxtofl@arg+3)^0,f,c
  1717  00342E  5009               	movf	___xxtofl@sign^0,w,c
  1718  003430  B4D8               	btfsc	status,2,c
  1719  003432  EF1D  F01A         	goto	u6321
  1720  003436  EF1F  F01A         	goto	u6320
  1721  00343A                     u6321:
  1722  00343A  EF27  F01A         	goto	l4722
  1723  00343E                     u6320:
  1724  00343E  BE04               	btfsc	(___xxtofl@val+3)^0,7,c
  1725  003440  EF26  F01A         	goto	u6330
  1726  003444  EF24  F01A         	goto	u6331
  1727  003448                     u6331:
  1728  003448  EF27  F01A         	goto	l4722
  1729  00344C                     u6330:
  1730  00344C  8E0E               	bsf	(___xxtofl@arg+3)^0,7,c
  1731  00344E                     l4722:
  1732  00344E  C00B  F001         	movff	___xxtofl@arg,?___xxtofl
  1733  003452  C00C  F002         	movff	___xxtofl@arg+1,?___xxtofl+1
  1734  003456  C00D  F003         	movff	___xxtofl@arg+2,?___xxtofl+2
  1735  00345A  C00E  F004         	movff	___xxtofl@arg+3,?___xxtofl+3
  1736  00345E                     l836:
  1737  00345E  0012               	return		;funcret
  1738  003460                     __end_of___xxtofl:
  1739                           	callstack 0
  1740                           
  1741 ;; *************** function _Read_ADC *****************
  1742 ;; Defined at:
  1743 ;;		line 98 in file "Funcional01.c"
  1744 ;; Parameters:    Size  Location     Type
  1745 ;;  canal           1    wreg     unsigned char 
  1746 ;; Auto vars:     Size  Location     Type
  1747 ;;  canal           1    4[COMRAM] unsigned char 
  1748 ;; Return value:  Size  Location     Type
  1749 ;;                  2    0[COMRAM] short 
  1750 ;; Registers used:
  1751 ;;		wreg, status,2, status,0
  1752 ;; Tracked objects:
  1753 ;;		On entry : 0/0
  1754 ;;		On exit  : 0/0
  1755 ;;		Unchanged: 0/0
  1756 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  1757 ;;      Params:         2       0       0       0       0       0       0       0       0
  1758 ;;      Locals:         1       0       0       0       0       0       0       0       0
  1759 ;;      Temps:          2       0       0       0       0       0       0       0       0
  1760 ;;      Totals:         5       0       0       0       0       0       0       0       0
  1761 ;;Total ram usage:        5 bytes
  1762 ;; Hardware stack levels used:    1
  1763 ;; This function calls:
  1764 ;;		Nothing
  1765 ;; This function is called by:
  1766 ;;		_SensorLM35
  1767 ;; This function uses a non-reentrant model
  1768 ;;
  1769                           
  1770                           	psect	text5
  1771  004432                     __ptext5:
  1772                           	callstack 0
  1773  004432                     _Read_ADC:
  1774                           	callstack 29
  1775                           
  1776                           ;incstack = 0
  1777                           ;Read_ADC@canal stored from wreg
  1778  004432  6E05               	movwf	Read_ADC@canal^0,c
  1779  004434                     
  1780                           ;Funcional01.c: 98: short Read_ADC(char canal);Funcional01.c: 99: {;Funcional01.c: 101: 
      +                              ADCON1bits.PVCFG = 0b00;
  1781  004434  0EF3               	movlw	-13
  1782  004436  16C1               	andwf	193,f,c	;volatile
  1783                           
  1784                           ;Funcional01.c: 102:     ADCON1bits.NVCFG = 0b00;
  1785  004438  0EFC               	movlw	-4
  1786  00443A  16C1               	andwf	193,f,c	;volatile
  1787                           
  1788                           ;Funcional01.c: 104:  ADCON0bits.CHS = 0b00000;
  1789  00443C  0E83               	movlw	-125
  1790  00443E  16C2               	andwf	194,f,c	;volatile
  1791                           
  1792                           ;Funcional01.c: 105:  ADCON0bits.CHS = 0b00010;
  1793  004440  50C2               	movf	194,w,c	;volatile
  1794  004442  0B83               	andlw	-125
  1795  004444  0908               	iorlw	8
  1796  004446  6EC2               	movwf	194,c	;volatile
  1797                           
  1798                           ;Funcional01.c: 107:  switch(canal)
  1799  004448  EF2A  F022         	goto	l4612
  1800  00444C                     l4608:
  1801                           
  1802                           ;Funcional01.c: 110:             ADCON0 = 0b00000010;
  1803  00444C  0E02               	movlw	2
  1804  00444E  6EC2               	movwf	194,c	;volatile
  1805                           
  1806                           ;Funcional01.c: 115:             break;
  1807  004450  EF3B  F022         	goto	l4614
  1808  004454                     l4612:
  1809  004454  5005               	movf	Read_ADC@canal^0,w,c
  1810  004456  6E03               	movwf	??_Read_ADC^0,c
  1811  004458  6A04               	clrf	(??_Read_ADC+1)^0,c
  1812                           
  1813                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  1814                           ; Switch size 1, requested type "simple"
  1815                           ; Number of cases is 1, Range of values is 0 to 0
  1816                           ; switch strategies available:
  1817                           ; Name         Instructions Cycles
  1818                           ; simple_byte            4     3 (average)
  1819                           ;	Chosen strategy is simple_byte
  1820  00445A  5004               	movf	(??_Read_ADC+1)^0,w,c
  1821  00445C  0A00               	xorlw	0	; case 0
  1822  00445E  B4D8               	btfsc	status,2,c
  1823  004460  EF34  F022         	goto	l4942
  1824  004464  EF3B  F022         	goto	l4614
  1825  004468                     l4942:
  1826                           
  1827                           ; Switch size 1, requested type "simple"
  1828                           ; Number of cases is 1, Range of values is 0 to 0
  1829                           ; switch strategies available:
  1830                           ; Name         Instructions Cycles
  1831                           ; simple_byte            4     3 (average)
  1832                           ;	Chosen strategy is simple_byte
  1833  004468  5003               	movf	??_Read_ADC^0,w,c
  1834  00446A  0A00               	xorlw	0	; case 0
  1835  00446C  B4D8               	btfsc	status,2,c
  1836  00446E  EF26  F022         	goto	l4608
  1837  004472  EF3B  F022         	goto	l4614
  1838  004476                     l4614:
  1839                           
  1840                           ;Funcional01.c: 121:  ADCON2 = 0b00100001;
  1841  004476  0E21               	movlw	33
  1842  004478  6EC0               	movwf	192,c	;volatile
  1843  00447A                     
  1844                           ;Funcional01.c: 135:  ADCON0bits.ADON = 1;
  1845  00447A  80C2               	bsf	194,0,c	;volatile
  1846  00447C                     
  1847                           ;Funcional01.c: 137:     ADCON0bits.GO = 1;
  1848  00447C  82C2               	bsf	194,1,c	;volatile
  1849  00447E                     l108:
  1850  00447E  B2C2               	btfsc	194,1,c	;volatile
  1851  004480  EF44  F022         	goto	u6191
  1852  004484  EF46  F022         	goto	u6190
  1853  004488                     u6191:
  1854  004488  EF3F  F022         	goto	l108
  1855  00448C                     u6190:
  1856  00448C                     
  1857                           ;Funcional01.c: 140:     return ADRESL + ADRESH*256;
  1858  00448C  50C4               	movf	196,w,c	;volatile
  1859  00448E  6E04               	movwf	(??_Read_ADC+1)^0,c
  1860  004490  6A03               	clrf	??_Read_ADC^0,c
  1861  004492  50C3               	movf	195,w,c	;volatile
  1862  004494  2403               	addwf	??_Read_ADC^0,w,c
  1863  004496  6E01               	movwf	?_Read_ADC^0,c
  1864  004498  0E00               	movlw	0
  1865  00449A  2004               	addwfc	(??_Read_ADC+1)^0,w,c
  1866  00449C  6E02               	movwf	(?_Read_ADC+1)^0,c
  1867  00449E  0012               	return		;funcret
  1868  0044A0                     __end_of_Read_ADC:
  1869                           	callstack 0
  1870                           
  1871 ;; *************** function _LCD_COMANDOS *****************
  1872 ;; Defined at:
  1873 ;;		line 207 in file "Funcional01.c"
  1874 ;; Parameters:    Size  Location     Type
  1875 ;;  comando         1    wreg     unsigned char 
  1876 ;; Auto vars:     Size  Location     Type
  1877 ;;  comando         1    3[COMRAM] unsigned char 
  1878 ;; Return value:  Size  Location     Type
  1879 ;;                  1    wreg      void 
  1880 ;; Registers used:
  1881 ;;		wreg, status,2, status,0, cstack
  1882 ;; Tracked objects:
  1883 ;;		On entry : 0/0
  1884 ;;		On exit  : 0/0
  1885 ;;		Unchanged: 0/0
  1886 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  1887 ;;      Params:         0       0       0       0       0       0       0       0       0
  1888 ;;      Locals:         1       0       0       0       0       0       0       0       0
  1889 ;;      Temps:          0       0       0       0       0       0       0       0       0
  1890 ;;      Totals:         1       0       0       0       0       0       0       0       0
  1891 ;;Total ram usage:        1 bytes
  1892 ;; Hardware stack levels used:    1
  1893 ;; Hardware stack levels required when called:    2
  1894 ;; This function calls:
  1895 ;;		_Get_DATA
  1896 ;; This function is called by:
  1897 ;;		_main
  1898 ;; This function uses a non-reentrant model
  1899 ;;
  1900                           
  1901                           	psect	text6
  1902  004984                     __ptext6:
  1903                           	callstack 0
  1904  004984                     _LCD_COMANDOS:
  1905                           	callstack 28
  1906                           
  1907                           ;incstack = 0
  1908                           ;LCD_COMANDOS@comando stored from wreg
  1909  004984  6E04               	movwf	LCD_COMANDOS@comando^0,c
  1910  004986                     
  1911                           ;Funcional01.c: 207: void LCD_COMANDOS(char comando);Funcional01.c: 208: {;Funcional01.c
      +                          : 209:     LATDbits.LD0 = 0;
  1912  004986  908C               	bcf	140,0,c	;volatile
  1913  004988                     
  1914                           ;Funcional01.c: 210:     Get_DATA((comando >> 4)&0b00001111);
  1915  004988  3804               	swapf	LCD_COMANDOS@comando^0,w,c
  1916  00498A  0B0F               	andlw	15
  1917  00498C  0B0F               	andlw	15
  1918  00498E  EC50  F022         	call	_Get_DATA
  1919                           
  1920                           ;Funcional01.c: 211:     Get_DATA((comando)&0b00001111);
  1921  004992  5004               	movf	LCD_COMANDOS@comando^0,w,c
  1922  004994  0B0F               	andlw	15
  1923  004996  EC50  F022         	call	_Get_DATA
  1924  00499A  0012               	return		;funcret
  1925  00499C                     __end_of_LCD_COMANDOS:
  1926                           	callstack 0
  1927                           
  1928 ;; *************** function _Get_DATA *****************
  1929 ;; Defined at:
  1930 ;;		line 195 in file "Funcional01.c"
  1931 ;; Parameters:    Size  Location     Type
  1932 ;;  data            1    wreg     unsigned char 
  1933 ;; Auto vars:     Size  Location     Type
  1934 ;;  data            1    2[COMRAM] unsigned char 
  1935 ;; Return value:  Size  Location     Type
  1936 ;;                  1    wreg      void 
  1937 ;; Registers used:
  1938 ;;		wreg, status,2, status,0, cstack
  1939 ;; Tracked objects:
  1940 ;;		On entry : 0/0
  1941 ;;		On exit  : 0/0
  1942 ;;		Unchanged: 0/0
  1943 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  1944 ;;      Params:         0       0       0       0       0       0       0       0       0
  1945 ;;      Locals:         1       0       0       0       0       0       0       0       0
  1946 ;;      Temps:          1       0       0       0       0       0       0       0       0
  1947 ;;      Totals:         2       0       0       0       0       0       0       0       0
  1948 ;;Total ram usage:        2 bytes
  1949 ;; Hardware stack levels used:    1
  1950 ;; Hardware stack levels required when called:    1
  1951 ;; This function calls:
  1952 ;;		_Set_DATA
  1953 ;; This function is called by:
  1954 ;;		_LCD_COMANDOS
  1955 ;; This function uses a non-reentrant model
  1956 ;;
  1957                           
  1958                           	psect	text7
  1959  0044A0                     __ptext7:
  1960                           	callstack 0
  1961  0044A0                     _Get_DATA:
  1962                           	callstack 28
  1963                           
  1964                           ;incstack = 0
  1965                           ;Get_DATA@data stored from wreg
  1966  0044A0  6E03               	movwf	Get_DATA@data^0,c
  1967  0044A2                     
  1968                           ;Funcional01.c: 195: void Get_DATA(char data);Funcional01.c: 196: {;Funcional01.c: 197: 
      +                              LATDbits.LD4 = data;
  1969  0044A2  B003               	btfsc	Get_DATA@data^0,0,c
  1970  0044A4  D002               	bra	u6205
  1971  0044A6  988C               	bcf	140,4,c	;volatile
  1972  0044A8  D001               	bra	u6206
  1973  0044AA                     u6205:
  1974  0044AA  888C               	bsf	140,4,c	;volatile
  1975  0044AC                     u6206:
  1976  0044AC                     
  1977                           ;Funcional01.c: 198:     LATDbits.LD5 = data >> 1;
  1978  0044AC  C003  F002         	movff	Get_DATA@data,??_Get_DATA
  1979  0044B0  90D8               	bcf	status,0,c
  1980  0044B2  3202               	rrcf	??_Get_DATA^0,f,c
  1981  0044B4  3A02               	swapf	??_Get_DATA^0,f,c
  1982  0044B6  4602               	rlncf	??_Get_DATA^0,f,c
  1983  0044B8  508C               	movf	140,w,c	;volatile
  1984  0044BA  1802               	xorwf	??_Get_DATA^0,w,c
  1985  0044BC  0BDF               	andlw	-33
  1986  0044BE  1802               	xorwf	??_Get_DATA^0,w,c
  1987  0044C0  6E8C               	movwf	140,c	;volatile
  1988  0044C2                     
  1989                           ;Funcional01.c: 199:     LATDbits.LD6 = data >> 2;
  1990  0044C2  C003  F002         	movff	Get_DATA@data,??_Get_DATA
  1991  0044C6  90D8               	bcf	status,0,c
  1992  0044C8  3202               	rrcf	??_Get_DATA^0,f,c
  1993  0044CA  90D8               	bcf	status,0,c
  1994  0044CC  3202               	rrcf	??_Get_DATA^0,f,c
  1995  0044CE  3A02               	swapf	??_Get_DATA^0,f,c
  1996  0044D0  4602               	rlncf	??_Get_DATA^0,f,c
  1997  0044D2  4602               	rlncf	??_Get_DATA^0,f,c
  1998  0044D4  508C               	movf	140,w,c	;volatile
  1999  0044D6  1802               	xorwf	??_Get_DATA^0,w,c
  2000  0044D8  0BBF               	andlw	-65
  2001  0044DA  1802               	xorwf	??_Get_DATA^0,w,c
  2002  0044DC  6E8C               	movwf	140,c	;volatile
  2003  0044DE                     
  2004                           ;Funcional01.c: 200:     LATDbits.LD7 = data >> 3;
  2005  0044DE  C003  F002         	movff	Get_DATA@data,??_Get_DATA
  2006  0044E2  90D8               	bcf	status,0,c
  2007  0044E4  3202               	rrcf	??_Get_DATA^0,f,c
  2008  0044E6  90D8               	bcf	status,0,c
  2009  0044E8  3202               	rrcf	??_Get_DATA^0,f,c
  2010  0044EA  90D8               	bcf	status,0,c
  2011  0044EC  3202               	rrcf	??_Get_DATA^0,f,c
  2012  0044EE  3202               	rrcf	??_Get_DATA^0,f,c
  2013  0044F0  3202               	rrcf	??_Get_DATA^0,f,c
  2014  0044F2  508C               	movf	140,w,c	;volatile
  2015  0044F4  1802               	xorwf	??_Get_DATA^0,w,c
  2016  0044F6  0B7F               	andlw	-129
  2017  0044F8  1802               	xorwf	??_Get_DATA^0,w,c
  2018  0044FA  6E8C               	movwf	140,c	;volatile
  2019  0044FC                     
  2020                           ;Funcional01.c: 202:     Set_DATA();
  2021  0044FC  ECCE  F024         	call	_Set_DATA	;wreg free
  2022  004500  0012               	return		;funcret
  2023  004502                     __end_of_Get_DATA:
  2024                           	callstack 0
  2025                           
  2026 ;; *************** function _Set_DATA *****************
  2027 ;; Defined at:
  2028 ;;		line 185 in file "Funcional01.c"
  2029 ;; Parameters:    Size  Location     Type
  2030 ;;		None
  2031 ;; Auto vars:     Size  Location     Type
  2032 ;;		None
  2033 ;; Return value:  Size  Location     Type
  2034 ;;                  1    wreg      void 
  2035 ;; Registers used:
  2036 ;;		wreg
  2037 ;; Tracked objects:
  2038 ;;		On entry : 0/0
  2039 ;;		On exit  : 0/0
  2040 ;;		Unchanged: 0/0
  2041 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  2042 ;;      Params:         0       0       0       0       0       0       0       0       0
  2043 ;;      Locals:         0       0       0       0       0       0       0       0       0
  2044 ;;      Temps:          1       0       0       0       0       0       0       0       0
  2045 ;;      Totals:         1       0       0       0       0       0       0       0       0
  2046 ;;Total ram usage:        1 bytes
  2047 ;; Hardware stack levels used:    1
  2048 ;; This function calls:
  2049 ;;		Nothing
  2050 ;; This function is called by:
  2051 ;;		_Get_DATA
  2052 ;; This function uses a non-reentrant model
  2053 ;;
  2054                           
  2055                           	psect	text8
  2056  00499C                     __ptext8:
  2057                           	callstack 0
  2058  00499C                     _Set_DATA:
  2059                           	callstack 28
  2060  00499C                     
  2061                           ;Funcional01.c: 187:     LATDbits.LD2 = 1;
  2062  00499C  848C               	bsf	140,2,c	;volatile
  2063  00499E                     
  2064                           ;Funcional01.c: 188:     _delay((unsigned long)((1)*(8000000/4000.0)));
  2065  00499E  0E03               	movlw	3
  2066  0049A0  6E01               	movwf	??_Set_DATA^0,c
  2067  0049A2  0E98               	movlw	152
  2068  0049A4                     u6487:
  2069  0049A4  2EE8               	decfsz	wreg,f,c
  2070  0049A6  D7FE               	bra	u6487
  2071  0049A8  2E01               	decfsz	??_Set_DATA^0,f,c
  2072  0049AA  D7FC               	bra	u6487
  2073  0049AC                     
  2074                           ;Funcional01.c: 189:     LATDbits.LD2 = 0;
  2075  0049AC  948C               	bcf	140,2,c	;volatile
  2076  0049AE  0012               	return		;funcret
  2077  0049B0                     __end_of_Set_DATA:
  2078                           	callstack 0
  2079                           
  2080 ;; *************** function _InicializaLCD *****************
  2081 ;; Defined at:
  2082 ;;		line 246 in file "Funcional01.c"
  2083 ;; Parameters:    Size  Location     Type
  2084 ;;		None
  2085 ;; Auto vars:     Size  Location     Type
  2086 ;;		None
  2087 ;; Return value:  Size  Location     Type
  2088 ;;                  1    wreg      void 
  2089 ;; Registers used:
  2090 ;;		wreg, status,2, status,0, cstack
  2091 ;; Tracked objects:
  2092 ;;		On entry : 0/0
  2093 ;;		On exit  : 0/0
  2094 ;;		Unchanged: 0/0
  2095 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  2096 ;;      Params:         0       0       0       0       0       0       0       0       0
  2097 ;;      Locals:         0       0       0       0       0       0       0       0       0
  2098 ;;      Temps:          1       0       0       0       0       0       0       0       0
  2099 ;;      Totals:         1       0       0       0       0       0       0       0       0
  2100 ;;Total ram usage:        1 bytes
  2101 ;; Hardware stack levels used:    1
  2102 ;; Hardware stack levels required when called:    1
  2103 ;; This function calls:
  2104 ;;		_putcm
  2105 ;; This function is called by:
  2106 ;;		_main
  2107 ;; This function uses a non-reentrant model
  2108 ;;
  2109                           
  2110                           	psect	text9
  2111  004334                     __ptext9:
  2112                           	callstack 0
  2113  004334                     _InicializaLCD:
  2114                           	callstack 29
  2115  004334                     
  2116                           ;Funcional01.c: 248:     _delay((unsigned long)((50)*(8000000/4000.0)));
  2117  004334  0E82               	movlw	130
  2118  004336  6E04               	movwf	??_InicializaLCD^0,c
  2119  004338  0EDE               	movlw	222
  2120  00433A                     u6497:
  2121  00433A  2EE8               	decfsz	wreg,f,c
  2122  00433C  D7FE               	bra	u6497
  2123  00433E  2E04               	decfsz	??_InicializaLCD^0,f,c
  2124  004340  D7FC               	bra	u6497
  2125  004342                     
  2126                           ;Funcional01.c: 249:     putcm(0x02);
  2127  004342  0E02               	movlw	2
  2128  004344  ECBB  F023         	call	_putcm
  2129  004348                     
  2130                           ;Funcional01.c: 250:     _delay((unsigned long)((1)*(8000000/4000.0)));
  2131  004348  0E03               	movlw	3
  2132  00434A  6E04               	movwf	??_InicializaLCD^0,c
  2133  00434C  0E98               	movlw	152
  2134  00434E                     u6507:
  2135  00434E  2EE8               	decfsz	wreg,f,c
  2136  004350  D7FE               	bra	u6507
  2137  004352  2E04               	decfsz	??_InicializaLCD^0,f,c
  2138  004354  D7FC               	bra	u6507
  2139                           
  2140                           ;Funcional01.c: 252:     putcm(0x28);
  2141  004356  0E28               	movlw	40
  2142  004358  ECBB  F023         	call	_putcm
  2143  00435C                     
  2144                           ;Funcional01.c: 253:     _delay((unsigned long)((1)*(8000000/4000.0)));
  2145  00435C  0E03               	movlw	3
  2146  00435E  6E04               	movwf	??_InicializaLCD^0,c
  2147  004360  0E98               	movlw	152
  2148  004362                     u6517:
  2149  004362  2EE8               	decfsz	wreg,f,c
  2150  004364  D7FE               	bra	u6517
  2151  004366  2E04               	decfsz	??_InicializaLCD^0,f,c
  2152  004368  D7FC               	bra	u6517
  2153  00436A                     
  2154                           ;Funcional01.c: 255:     putcm(0x2C);
  2155  00436A  0E2C               	movlw	44
  2156  00436C  ECBB  F023         	call	_putcm
  2157                           
  2158                           ;Funcional01.c: 256:     _delay((unsigned long)((1)*(8000000/4000.0)));
  2159  004370  0E03               	movlw	3
  2160  004372  6E04               	movwf	??_InicializaLCD^0,c
  2161  004374  0E98               	movlw	152
  2162  004376                     u6527:
  2163  004376  2EE8               	decfsz	wreg,f,c
  2164  004378  D7FE               	bra	u6527
  2165  00437A  2E04               	decfsz	??_InicializaLCD^0,f,c
  2166  00437C  D7FC               	bra	u6527
  2167  00437E                     
  2168                           ;Funcional01.c: 258:     putcm(0x0C);
  2169  00437E  0E0C               	movlw	12
  2170  004380  ECBB  F023         	call	_putcm
  2171  004384                     
  2172                           ;Funcional01.c: 259:     _delay((unsigned long)((1)*(8000000/4000.0)));
  2173  004384  0E03               	movlw	3
  2174  004386  6E04               	movwf	??_InicializaLCD^0,c
  2175  004388  0E98               	movlw	152
  2176  00438A                     u6537:
  2177  00438A  2EE8               	decfsz	wreg,f,c
  2178  00438C  D7FE               	bra	u6537
  2179  00438E  2E04               	decfsz	??_InicializaLCD^0,f,c
  2180  004390  D7FC               	bra	u6537
  2181                           
  2182                           ;Funcional01.c: 261:     putcm(0x06);
  2183  004392  0E06               	movlw	6
  2184  004394  ECBB  F023         	call	_putcm
  2185  004398                     
  2186                           ;Funcional01.c: 262:     _delay((unsigned long)((1)*(8000000/4000.0)));
  2187  004398  0E03               	movlw	3
  2188  00439A  6E04               	movwf	??_InicializaLCD^0,c
  2189  00439C  0E98               	movlw	152
  2190  00439E                     u6547:
  2191  00439E  2EE8               	decfsz	wreg,f,c
  2192  0043A0  D7FE               	bra	u6547
  2193  0043A2  2E04               	decfsz	??_InicializaLCD^0,f,c
  2194  0043A4  D7FC               	bra	u6547
  2195  0043A6                     
  2196                           ;Funcional01.c: 264:     putcm(0x80);
  2197  0043A6  0E80               	movlw	128
  2198  0043A8  ECBB  F023         	call	_putcm
  2199                           
  2200                           ;Funcional01.c: 265:     _delay((unsigned long)((1)*(8000000/4000.0)));
  2201  0043AC  0E03               	movlw	3
  2202  0043AE  6E04               	movwf	??_InicializaLCD^0,c
  2203  0043B0  0E98               	movlw	152
  2204  0043B2                     u6557:
  2205  0043B2  2EE8               	decfsz	wreg,f,c
  2206  0043B4  D7FE               	bra	u6557
  2207  0043B6  2E04               	decfsz	??_InicializaLCD^0,f,c
  2208  0043B8  D7FC               	bra	u6557
  2209  0043BA  0012               	return		;funcret
  2210  0043BC                     __end_of_InicializaLCD:
  2211                           	callstack 0
  2212                           
  2213 ;; *************** function _Configuracion *****************
  2214 ;; Defined at:
  2215 ;;		line 148 in file "Funcional01.c"
  2216 ;; Parameters:    Size  Location     Type
  2217 ;;		None
  2218 ;; Auto vars:     Size  Location     Type
  2219 ;;		None
  2220 ;; Return value:  Size  Location     Type
  2221 ;;                  1    wreg      void 
  2222 ;; Registers used:
  2223 ;;		wreg, status,2
  2224 ;; Tracked objects:
  2225 ;;		On entry : 0/0
  2226 ;;		On exit  : 0/0
  2227 ;;		Unchanged: 0/0
  2228 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  2229 ;;      Params:         0       0       0       0       0       0       0       0       0
  2230 ;;      Locals:         0       0       0       0       0       0       0       0       0
  2231 ;;      Temps:          0       0       0       0       0       0       0       0       0
  2232 ;;      Totals:         0       0       0       0       0       0       0       0       0
  2233 ;;Total ram usage:        0 bytes
  2234 ;; Hardware stack levels used:    1
  2235 ;; This function calls:
  2236 ;;		Nothing
  2237 ;; This function is called by:
  2238 ;;		_main
  2239 ;; This function uses a non-reentrant model
  2240 ;;
  2241                           
  2242                           	psect	text10
  2243  0048D6                     __ptext10:
  2244                           	callstack 0
  2245  0048D6                     _Configuracion:
  2246                           	callstack 30
  2247  0048D6                     
  2248                           ;Funcional01.c: 157:     TRISA = 0b11111111;
  2249  0048D6  6892               	setf	146,c	;volatile
  2250  0048D8                     
  2251                           ;Funcional01.c: 158:  TRISD = 0b00000000;
  2252  0048D8  0E00               	movlw	0
  2253  0048DA  6E95               	movwf	149,c	;volatile
  2254                           
  2255                           ;Funcional01.c: 162:     OSCCON = 0b01101100;
  2256  0048DC  0E6C               	movlw	108
  2257  0048DE  6ED3               	movwf	211,c	;volatile
  2258  0048E0                     
  2259                           ;Funcional01.c: 170:     ANSELAbits.ANSA3 = 0;
  2260  0048E0  010F               	movlb	15	; () banked
  2261  0048E2  975B               	bcf	91,3,b	;volatile
  2262  0048E4                     
  2263                           ; BSR set to: 15
  2264                           ;Funcional01.c: 171:     ANSELAbits.ANSA1 = 0;
  2265  0048E4  935B               	bcf	91,1,b	;volatile
  2266  0048E6                     
  2267                           ; BSR set to: 15
  2268                           ;Funcional01.c: 172:     ANSELAbits.ANSA5 = 0;
  2269  0048E6  9B5B               	bcf	91,5,b	;volatile
  2270  0048E8                     
  2271                           ; BSR set to: 15
  2272                           ;Funcional01.c: 173:     TRISCbits.RC6 = 0;
  2273  0048E8  9C94               	bcf	148,6,c	;volatile
  2274  0048EA                     
  2275                           ; BSR set to: 15
  2276                           ;Funcional01.c: 174:     ANSELCbits.ANSC6 = 0;
  2277  0048EA  9D5D               	bcf	93,6,b	;volatile
  2278  0048EC                     
  2279                           ; BSR set to: 15
  2280                           ;Funcional01.c: 175:     LATCbits.LATC6=0;
  2281  0048EC  9C8B               	bcf	139,6,c	;volatile
  2282                           
  2283                           ;Funcional01.c: 178:     TRISB = 0;
  2284  0048EE  0E00               	movlw	0
  2285  0048F0  6E93               	movwf	147,c	;volatile
  2286                           
  2287                           ;Funcional01.c: 179:     ANSELB = 0;
  2288  0048F2  0E00               	movlw	0
  2289  0048F4  6F5C               	movwf	92,b	;volatile
  2290                           
  2291                           ;Funcional01.c: 180:     LATB = 0;
  2292  0048F6  0E00               	movlw	0
  2293  0048F8  6E8A               	movwf	138,c	;volatile
  2294  0048FA                     
  2295                           ; BSR set to: 15
  2296  0048FA  0012               	return		;funcret
  2297  0048FC                     __end_of_Configuracion:
  2298                           	callstack 0
  2299                           
  2300 ;; *************** function _Alarma_LED *****************
  2301 ;; Defined at:
  2302 ;;		line 433 in file "Funcional01.c"
  2303 ;; Parameters:    Size  Location     Type
  2304 ;;		None
  2305 ;; Auto vars:     Size  Location     Type
  2306 ;;  A               1    2[COMRAM] unsigned char 
  2307 ;; Return value:  Size  Location     Type
  2308 ;;                  1    wreg      void 
  2309 ;; Registers used:
  2310 ;;		wreg, status,2, status,0
  2311 ;; Tracked objects:
  2312 ;;		On entry : 0/0
  2313 ;;		On exit  : 0/0
  2314 ;;		Unchanged: 0/0
  2315 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  2316 ;;      Params:         0       0       0       0       0       0       0       0       0
  2317 ;;      Locals:         1       0       0       0       0       0       0       0       0
  2318 ;;      Temps:          2       0       0       0       0       0       0       0       0
  2319 ;;      Totals:         3       0       0       0       0       0       0       0       0
  2320 ;;Total ram usage:        3 bytes
  2321 ;; Hardware stack levels used:    1
  2322 ;; This function calls:
  2323 ;;		Nothing
  2324 ;; This function is called by:
  2325 ;;		_main
  2326 ;; This function uses a non-reentrant model
  2327 ;;
  2328                           
  2329                           	psect	text11
  2330  003852                     __ptext11:
  2331                           	callstack 0
  2332  003852                     _Alarma_LED:
  2333                           	callstack 30
  2334  003852                     
  2335                           ;Funcional01.c: 438:     if(DH == Decenas_Horas && UH == Unidades_Horas && DM == Decenas
      +                          _Minutos && UM == Unidades_Minutos && DS == Decenas_Segundos && US == Unidades_Segundos)
  2336  003852  0100               	movlb	0	; () banked
  2337  003854  51F2               	movf	_Decenas_Horas& (0+255),w,b
  2338  003856  19E2               	xorwf	_DH& (0+255),w,b
  2339  003858  E107               	bnz	u6401
  2340  00385A  51F3               	movf	(_Decenas_Horas+1)& (0+255),w,b
  2341  00385C  19E3               	xorwf	(_DH+1)& (0+255),w,b
  2342  00385E  A4D8               	btfss	status,2,c
  2343  003860  EF34  F01C         	goto	u6401
  2344  003864  EF36  F01C         	goto	u6400
  2345  003868                     u6401:
  2346  003868  EF9C  F01C         	goto	l4878
  2347  00386C                     u6400:
  2348  00386C                     
  2349                           ; BSR set to: 0
  2350  00386C  51F4               	movf	_Unidades_Horas& (0+255),w,b
  2351  00386E  19E0               	xorwf	_UH& (0+255),w,b
  2352  003870  E107               	bnz	u6411
  2353  003872  51F5               	movf	(_Unidades_Horas+1)& (0+255),w,b
  2354  003874  19E1               	xorwf	(_UH+1)& (0+255),w,b
  2355  003876  A4D8               	btfss	status,2,c
  2356  003878  EF40  F01C         	goto	u6411
  2357  00387C  EF42  F01C         	goto	u6410
  2358  003880                     u6411:
  2359  003880  EF9C  F01C         	goto	l4878
  2360  003884                     u6410:
  2361  003884                     
  2362                           ; BSR set to: 0
  2363  003884  51EE               	movf	_Decenas_Minutos& (0+255),w,b
  2364  003886  19DE               	xorwf	_DM& (0+255),w,b
  2365  003888  E107               	bnz	u6421
  2366  00388A  51EF               	movf	(_Decenas_Minutos+1)& (0+255),w,b
  2367  00388C  19DF               	xorwf	(_DM+1)& (0+255),w,b
  2368  00388E  A4D8               	btfss	status,2,c
  2369  003890  EF4C  F01C         	goto	u6421
  2370  003894  EF4E  F01C         	goto	u6420
  2371  003898                     u6421:
  2372  003898  EF9C  F01C         	goto	l4878
  2373  00389C                     u6420:
  2374  00389C                     
  2375                           ; BSR set to: 0
  2376  00389C  51F0               	movf	_Unidades_Minutos& (0+255),w,b
  2377  00389E  19DC               	xorwf	_UM& (0+255),w,b
  2378  0038A0  E107               	bnz	u6431
  2379  0038A2  51F1               	movf	(_Unidades_Minutos+1)& (0+255),w,b
  2380  0038A4  19DD               	xorwf	(_UM+1)& (0+255),w,b
  2381  0038A6  A4D8               	btfss	status,2,c
  2382  0038A8  EF58  F01C         	goto	u6431
  2383  0038AC  EF5A  F01C         	goto	u6430
  2384  0038B0                     u6431:
  2385  0038B0  EF9C  F01C         	goto	l4878
  2386  0038B4                     u6430:
  2387  0038B4                     
  2388                           ; BSR set to: 0
  2389  0038B4  51EA               	movf	_Decenas_Segundos& (0+255),w,b
  2390  0038B6  19DA               	xorwf	_DS& (0+255),w,b
  2391  0038B8  E107               	bnz	u6441
  2392  0038BA  51EB               	movf	(_Decenas_Segundos+1)& (0+255),w,b
  2393  0038BC  19DB               	xorwf	(_DS+1)& (0+255),w,b
  2394  0038BE  A4D8               	btfss	status,2,c
  2395  0038C0  EF64  F01C         	goto	u6441
  2396  0038C4  EF66  F01C         	goto	u6440
  2397  0038C8                     u6441:
  2398  0038C8  EF9C  F01C         	goto	l4878
  2399  0038CC                     u6440:
  2400  0038CC                     
  2401                           ; BSR set to: 0
  2402  0038CC  51EC               	movf	_Unidades_Segundos& (0+255),w,b
  2403  0038CE  19D8               	xorwf	_US& (0+255),w,b
  2404  0038D0  E107               	bnz	u6451
  2405  0038D2  51ED               	movf	(_Unidades_Segundos+1)& (0+255),w,b
  2406  0038D4  19D9               	xorwf	(_US+1)& (0+255),w,b
  2407  0038D6  A4D8               	btfss	status,2,c
  2408  0038D8  EF70  F01C         	goto	u6451
  2409  0038DC  EF72  F01C         	goto	u6450
  2410  0038E0                     u6451:
  2411  0038E0  EF9C  F01C         	goto	l4878
  2412  0038E4                     u6450:
  2413  0038E4                     
  2414                           ; BSR set to: 0
  2415                           ;Funcional01.c: 439:     {;Funcional01.c: 440:         char A = 10;
  2416  0038E4  0E0A               	movlw	10
  2417  0038E6  6E03               	movwf	Alarma_LED@A^0,c
  2418                           
  2419                           ;Funcional01.c: 441:         while(A)
  2420  0038E8  EF92  F01C         	goto	l4876
  2421  0038EC                     l164:
  2422                           
  2423                           ;Funcional01.c: 442:         {;Funcional01.c: 443:             PORTB = 0xFF;
  2424  0038EC  6881               	setf	129,c	;volatile
  2425  0038EE                     
  2426                           ;Funcional01.c: 444:             _delay((unsigned long)((100)*(8000000/4000.0)));
  2427  0038EE  0E02               	movlw	2
  2428  0038F0  6E02               	movwf	(??_Alarma_LED+1)^0,c
  2429  0038F2  0E04               	movlw	4
  2430  0038F4  6E01               	movwf	??_Alarma_LED^0,c
  2431  0038F6  0EBA               	movlw	186
  2432  0038F8                     u6567:
  2433  0038F8  2EE8               	decfsz	wreg,f,c
  2434  0038FA  D7FE               	bra	u6567
  2435  0038FC  2E01               	decfsz	??_Alarma_LED^0,f,c
  2436  0038FE  D7FC               	bra	u6567
  2437  003900  2E02               	decfsz	(??_Alarma_LED+1)^0,f,c
  2438  003902  D7FA               	bra	u6567
  2439  003904  D000               	nop2	
  2440  003906                     
  2441                           ;Funcional01.c: 445:             PORTB = 0x00;
  2442  003906  0E00               	movlw	0
  2443  003908  6E81               	movwf	129,c	;volatile
  2444  00390A                     
  2445                           ;Funcional01.c: 446:             _delay((unsigned long)((100)*(8000000/4000.0)));
  2446  00390A  0E02               	movlw	2
  2447  00390C  6E02               	movwf	(??_Alarma_LED+1)^0,c
  2448  00390E  0E04               	movlw	4
  2449  003910  6E01               	movwf	??_Alarma_LED^0,c
  2450  003912  0EBA               	movlw	186
  2451  003914                     u6577:
  2452  003914  2EE8               	decfsz	wreg,f,c
  2453  003916  D7FE               	bra	u6577
  2454  003918  2E01               	decfsz	??_Alarma_LED^0,f,c
  2455  00391A  D7FC               	bra	u6577
  2456  00391C  2E02               	decfsz	(??_Alarma_LED+1)^0,f,c
  2457  00391E  D7FA               	bra	u6577
  2458  003920  D000               	nop2	
  2459  003922                     
  2460                           ;Funcional01.c: 447:             A -= 1;
  2461  003922  0603               	decf	Alarma_LED@A^0,f,c
  2462  003924                     l4876:
  2463                           
  2464                           ;Funcional01.c: 441:         while(A)
  2465  003924  5003               	movf	Alarma_LED@A^0,w,c
  2466  003926  A4D8               	btfss	status,2,c
  2467  003928  EF98  F01C         	goto	u6461
  2468  00392C  EF9A  F01C         	goto	u6460
  2469  003930                     u6461:
  2470  003930  EF76  F01C         	goto	l164
  2471  003934                     u6460:
  2472  003934  EFAA  F01C         	goto	l167
  2473  003938                     l4878:
  2474                           
  2475                           ; BSR set to: 0
  2476                           ;Funcional01.c: 451:     {;Funcional01.c: 452:         PORTB = 0x00;
  2477  003938  0E00               	movlw	0
  2478  00393A  6E81               	movwf	129,c	;volatile
  2479  00393C                     
  2480                           ; BSR set to: 0
  2481                           ;Funcional01.c: 453:         _delay((unsigned long)((100)*(8000000/4000.0)));
  2482  00393C  0E02               	movlw	2
  2483  00393E  6E02               	movwf	(??_Alarma_LED+1)^0,c
  2484  003940  0E04               	movlw	4
  2485  003942  6E01               	movwf	??_Alarma_LED^0,c
  2486  003944  0EBA               	movlw	186
  2487  003946                     u6587:
  2488  003946  2EE8               	decfsz	wreg,f,c
  2489  003948  D7FE               	bra	u6587
  2490  00394A  2E01               	decfsz	??_Alarma_LED^0,f,c
  2491  00394C  D7FC               	bra	u6587
  2492  00394E  2E02               	decfsz	(??_Alarma_LED+1)^0,f,c
  2493  003950  D7FA               	bra	u6587
  2494  003952  D000               	nop2	
  2495  003954                     l167:
  2496  003954  0012               	return		;funcret
  2497  003956                     __end_of_Alarma_LED:
  2498                           	callstack 0
  2499                           
  2500 ;; *************** function _Alarma *****************
  2501 ;; Defined at:
  2502 ;;		line 362 in file "Funcional01.c"
  2503 ;; Parameters:    Size  Location     Type
  2504 ;;		None
  2505 ;; Auto vars:     Size  Location     Type
  2506 ;;		None
  2507 ;; Return value:  Size  Location     Type
  2508 ;;                  1    wreg      void 
  2509 ;; Registers used:
  2510 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  2511 ;; Tracked objects:
  2512 ;;		On entry : 0/0
  2513 ;;		On exit  : 0/0
  2514 ;;		Unchanged: 0/0
  2515 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  2516 ;;      Params:         0       0       0       0       0       0       0       0       0
  2517 ;;      Locals:         0       0       0       0       0       0       0       0       0
  2518 ;;      Temps:          2       0       0       0       0       0       0       0       0
  2519 ;;      Totals:         2       0       0       0       0       0       0       0       0
  2520 ;;Total ram usage:        2 bytes
  2521 ;; Hardware stack levels used:    1
  2522 ;; Hardware stack levels required when called:   10
  2523 ;; This function calls:
  2524 ;;		_Cronometro
  2525 ;;		___awdiv
  2526 ;;		___awmod
  2527 ;;		_printf
  2528 ;;		_putcm
  2529 ;; This function is called by:
  2530 ;;		_main
  2531 ;; This function uses a non-reentrant model
  2532 ;;
  2533                           
  2534                           	psect	text12
  2535  002EB2                     __ptext12:
  2536                           	callstack 0
  2537  002EB2                     _Alarma:
  2538                           	callstack 20
  2539  002EB2                     
  2540                           ;Funcional01.c: 364:     if(PORTAbits.RA1 == 0)
  2541  002EB2  B280               	btfsc	128,1,c	;volatile
  2542  002EB4  EF5E  F017         	goto	u6341
  2543  002EB8  EF60  F017         	goto	u6340
  2544  002EBC                     u6341:
  2545  002EBC  EF72  F017         	goto	l150
  2546  002EC0                     u6340:
  2547  002EC0                     
  2548                           ;Funcional01.c: 365:     {;Funcional01.c: 366:         PORTCbits.RC6 = 0;
  2549  002EC0  9C82               	bcf	130,6,c	;volatile
  2550  002EC2                     
  2551                           ;Funcional01.c: 367:         _delay((unsigned long)((300)*(8000000/4000.0)));
  2552  002EC2  0E04               	movlw	4
  2553  002EC4  6E5C               	movwf	(??_Alarma+1)^0,c
  2554  002EC6  0E0C               	movlw	12
  2555  002EC8  6E5B               	movwf	??_Alarma^0,c
  2556  002ECA  0E34               	movlw	52
  2557  002ECC                     u6597:
  2558  002ECC  2EE8               	decfsz	wreg,f,c
  2559  002ECE  D7FE               	bra	u6597
  2560  002ED0  2E5B               	decfsz	??_Alarma^0,f,c
  2561  002ED2  D7FC               	bra	u6597
  2562  002ED4  2E5C               	decfsz	(??_Alarma+1)^0,f,c
  2563  002ED6  D7FA               	bra	u6597
  2564  002ED8                     
  2565                           ;Funcional01.c: 368:         INTCONbits.GIE = 0;
  2566  002ED8  9EF2               	bcf	242,7,c	;volatile
  2567  002EDA                     
  2568                           ;Funcional01.c: 369:         INTCONbits.TMR0IF = 0;
  2569  002EDA  94F2               	bcf	242,2,c	;volatile
  2570  002EDC                     
  2571                           ;Funcional01.c: 370:         Cronometro();
  2572  002EDC  EC93  F020         	call	_Cronometro	;wreg free
  2573                           
  2574                           ;Funcional01.c: 371:     }
  2575  002EE0  EF59  F018         	goto	l159
  2576  002EE4                     l150:
  2577                           
  2578                           ;Funcional01.c: 373:     {;Funcional01.c: 374:         PORTCbits.RC6 = 1;
  2579  002EE4  8C82               	bsf	130,6,c	;volatile
  2580  002EE6                     
  2581                           ;Funcional01.c: 375:         _delay((unsigned long)((300)*(8000000/4000.0)));
  2582  002EE6  0E04               	movlw	4
  2583  002EE8  6E5C               	movwf	(??_Alarma+1)^0,c
  2584  002EEA  0E0C               	movlw	12
  2585  002EEC  6E5B               	movwf	??_Alarma^0,c
  2586  002EEE  0E34               	movlw	52
  2587  002EF0                     u6607:
  2588  002EF0  2EE8               	decfsz	wreg,f,c
  2589  002EF2  D7FE               	bra	u6607
  2590  002EF4  2E5B               	decfsz	??_Alarma^0,f,c
  2591  002EF6  D7FC               	bra	u6607
  2592  002EF8  2E5C               	decfsz	(??_Alarma+1)^0,f,c
  2593  002EFA  D7FA               	bra	u6607
  2594  002EFC                     
  2595                           ;Funcional01.c: 377:         putcm(0xC0);
  2596  002EFC  0EC0               	movlw	192
  2597  002EFE  ECBB  F023         	call	_putcm
  2598  002F02                     
  2599                           ;Funcional01.c: 378:         printf(" !!Modo Alarma!! ");
  2600  002F02  0E2F               	movlw	low STR_3
  2601  002F04  0100               	movlb	0	; () banked
  2602  002F06  6FB0               	movwf	printf@fmt& (0+255),b
  2603  002F08  0E08               	movlw	high STR_3
  2604  002F0A  6FB1               	movwf	(printf@fmt+1)& (0+255),b
  2605  002F0C  EC7E  F024         	call	_printf	;wreg free
  2606  002F10                     
  2607                           ;Funcional01.c: 379:         _delay((unsigned long)((1000)*(8000000/4000.0)));
  2608  002F10  0E0B               	movlw	11
  2609  002F12  6E5C               	movwf	(??_Alarma+1)^0,c
  2610  002F14  0E26               	movlw	38
  2611  002F16  6E5B               	movwf	??_Alarma^0,c
  2612  002F18  0E5E               	movlw	94
  2613  002F1A                     u6617:
  2614  002F1A  2EE8               	decfsz	wreg,f,c
  2615  002F1C  D7FE               	bra	u6617
  2616  002F1E  2E5B               	decfsz	??_Alarma^0,f,c
  2617  002F20  D7FC               	bra	u6617
  2618  002F22  2E5C               	decfsz	(??_Alarma+1)^0,f,c
  2619  002F24  D7FA               	bra	u6617
  2620  002F26                     
  2621                           ;Funcional01.c: 381:         INTCONbits.GIE = 1;
  2622  002F26  8EF2               	bsf	242,7,c	;volatile
  2623  002F28                     
  2624                           ;Funcional01.c: 382:         INTCONbits.PEIE = 1;
  2625  002F28  8CF2               	bsf	242,6,c	;volatile
  2626                           
  2627                           ;Funcional01.c: 383:         while(PORTAbits.RA1 == 1)
  2628  002F2A  EF47  F018         	goto	l4846
  2629  002F2E                     l153:
  2630                           
  2631                           ;Funcional01.c: 384:   {;Funcional01.c: 385:             if(PORTAbits.RA3 == 1)
  2632  002F2E  A680               	btfss	128,3,c	;volatile
  2633  002F30  EF9C  F017         	goto	u6351
  2634  002F34  EF9E  F017         	goto	u6350
  2635  002F38                     u6351:
  2636  002F38  EFDE  F017         	goto	l4830
  2637  002F3C                     u6350:
  2638  002F3C                     
  2639                           ;Funcional01.c: 386:    {;Funcional01.c: 387:                 DH = HORA / 10;
  2640  002F3C  C0E8  F006         	movff	_HORA,___awdiv@dividend
  2641  002F40  C0E9  F007         	movff	_HORA+1,___awdiv@dividend+1
  2642  002F44  0E00               	movlw	0
  2643  002F46  6E09               	movwf	(___awdiv@divisor+1)^0,c
  2644  002F48  0E0A               	movlw	10
  2645  002F4A  6E08               	movwf	___awdiv@divisor^0,c
  2646  002F4C  EC31  F020         	call	___awdiv	;wreg free
  2647  002F50  C006  F0E2         	movff	?___awdiv,_DH
  2648  002F54  C007  F0E3         	movff	?___awdiv+1,_DH+1
  2649                           
  2650                           ;Funcional01.c: 388:                 UH = HORA % 10;
  2651  002F58  C0E8  F001         	movff	_HORA,___awmod@dividend
  2652  002F5C  C0E9  F002         	movff	_HORA+1,___awmod@dividend+1
  2653  002F60  0E00               	movlw	0
  2654  002F62  6E04               	movwf	(___awmod@divisor+1)^0,c
  2655  002F64  0E0A               	movlw	10
  2656  002F66  6E03               	movwf	___awmod@divisor^0,c
  2657  002F68  ECED  F020         	call	___awmod	;wreg free
  2658  002F6C  C001  F0E0         	movff	?___awmod,_UH
  2659  002F70  C002  F0E1         	movff	?___awmod+1,_UH+1
  2660  002F74                     
  2661                           ;Funcional01.c: 389:                 _delay((unsigned long)((500)*(8000000/4000.0)));
  2662  002F74  0E06               	movlw	6
  2663  002F76  6E5C               	movwf	(??_Alarma+1)^0,c
  2664  002F78  0E13               	movlw	19
  2665  002F7A  6E5B               	movwf	??_Alarma^0,c
  2666  002F7C  0EAE               	movlw	174
  2667  002F7E                     u6627:
  2668  002F7E  2EE8               	decfsz	wreg,f,c
  2669  002F80  D7FE               	bra	u6627
  2670  002F82  2E5B               	decfsz	??_Alarma^0,f,c
  2671  002F84  D7FC               	bra	u6627
  2672  002F86  2E5C               	decfsz	(??_Alarma+1)^0,f,c
  2673  002F88  D7FA               	bra	u6627
  2674  002F8A                     
  2675                           ;Funcional01.c: 390:                 HORA = HORA + 1;
  2676  002F8A  0E01               	movlw	1
  2677  002F8C  0100               	movlb	0	; () banked
  2678  002F8E  25E8               	addwf	_HORA& (0+255),w,b
  2679  002F90  6FE8               	movwf	_HORA& (0+255),b
  2680  002F92  0E00               	movlw	0
  2681  002F94  21E9               	addwfc	(_HORA+1)& (0+255),w,b
  2682  002F96  6FE9               	movwf	(_HORA+1)& (0+255),b
  2683  002F98                     
  2684                           ; BSR set to: 0
  2685                           ;Funcional01.c: 391:                 if(HORA > 23)
  2686  002F98  BFE9               	btfsc	(_HORA+1)& (0+255),7,b
  2687  002F9A  EFD8  F017         	goto	u6361
  2688  002F9E  51E9               	movf	(_HORA+1)& (0+255),w,b
  2689  002FA0  E109               	bnz	u6360
  2690  002FA2  0E18               	movlw	24
  2691  002FA4  5DE8               	subwf	_HORA& (0+255),w,b
  2692  002FA6  A0D8               	btfss	status,0,c
  2693  002FA8  EFD8  F017         	goto	u6361
  2694  002FAC  EFDA  F017         	goto	u6360
  2695  002FB0                     u6361:
  2696  002FB0  EFDE  F017         	goto	l4830
  2697  002FB4                     u6360:
  2698  002FB4                     
  2699                           ; BSR set to: 0
  2700                           ;Funcional01.c: 392:                 {;Funcional01.c: 393:                     HORA=0;
  2701  002FB4  0E00               	movlw	0
  2702  002FB6  6FE9               	movwf	(_HORA+1)& (0+255),b
  2703  002FB8  0E00               	movlw	0
  2704  002FBA  6FE8               	movwf	_HORA& (0+255),b
  2705  002FBC                     l4830:
  2706                           
  2707                           ;Funcional01.c: 397:    if(PORTAbits.RA5 == 1)
  2708  002FBC  AA80               	btfss	128,5,c	;volatile
  2709  002FBE  EFE3  F017         	goto	u6371
  2710  002FC2  EFE5  F017         	goto	u6370
  2711  002FC6                     u6371:
  2712  002FC6  EF25  F018         	goto	l4842
  2713  002FCA                     u6370:
  2714  002FCA                     
  2715                           ;Funcional01.c: 398:             {;Funcional01.c: 399:                 DM = MINUTO / 10;
  2716  002FCA  C0E6  F006         	movff	_MINUTO,___awdiv@dividend
  2717  002FCE  C0E7  F007         	movff	_MINUTO+1,___awdiv@dividend+1
  2718  002FD2  0E00               	movlw	0
  2719  002FD4  6E09               	movwf	(___awdiv@divisor+1)^0,c
  2720  002FD6  0E0A               	movlw	10
  2721  002FD8  6E08               	movwf	___awdiv@divisor^0,c
  2722  002FDA  EC31  F020         	call	___awdiv	;wreg free
  2723  002FDE  C006  F0DE         	movff	?___awdiv,_DM
  2724  002FE2  C007  F0DF         	movff	?___awdiv+1,_DM+1
  2725                           
  2726                           ;Funcional01.c: 400:                 UM = MINUTO % 10;
  2727  002FE6  C0E6  F001         	movff	_MINUTO,___awmod@dividend
  2728  002FEA  C0E7  F002         	movff	_MINUTO+1,___awmod@dividend+1
  2729  002FEE  0E00               	movlw	0
  2730  002FF0  6E04               	movwf	(___awmod@divisor+1)^0,c
  2731  002FF2  0E0A               	movlw	10
  2732  002FF4  6E03               	movwf	___awmod@divisor^0,c
  2733  002FF6  ECED  F020         	call	___awmod	;wreg free
  2734  002FFA  C001  F0DC         	movff	?___awmod,_UM
  2735  002FFE  C002  F0DD         	movff	?___awmod+1,_UM+1
  2736  003002                     
  2737                           ;Funcional01.c: 401:                 _delay((unsigned long)((500)*(8000000/4000.0)));
  2738  003002  0E06               	movlw	6
  2739  003004  6E5C               	movwf	(??_Alarma+1)^0,c
  2740  003006  0E13               	movlw	19
  2741  003008  6E5B               	movwf	??_Alarma^0,c
  2742  00300A  0EAE               	movlw	174
  2743  00300C                     u6637:
  2744  00300C  2EE8               	decfsz	wreg,f,c
  2745  00300E  D7FE               	bra	u6637
  2746  003010  2E5B               	decfsz	??_Alarma^0,f,c
  2747  003012  D7FC               	bra	u6637
  2748  003014  2E5C               	decfsz	(??_Alarma+1)^0,f,c
  2749  003016  D7FA               	bra	u6637
  2750  003018                     
  2751                           ;Funcional01.c: 402:                 MINUTO = MINUTO + 1;
  2752  003018  0E01               	movlw	1
  2753  00301A  0100               	movlb	0	; () banked
  2754  00301C  25E6               	addwf	_MINUTO& (0+255),w,b
  2755  00301E  6FE6               	movwf	_MINUTO& (0+255),b
  2756  003020  0E00               	movlw	0
  2757  003022  21E7               	addwfc	(_MINUTO+1)& (0+255),w,b
  2758  003024  6FE7               	movwf	(_MINUTO+1)& (0+255),b
  2759  003026                     
  2760                           ; BSR set to: 0
  2761                           ;Funcional01.c: 403:                 if(MINUTO > 59)
  2762  003026  BFE7               	btfsc	(_MINUTO+1)& (0+255),7,b
  2763  003028  EF1F  F018         	goto	u6381
  2764  00302C  51E7               	movf	(_MINUTO+1)& (0+255),w,b
  2765  00302E  E109               	bnz	u6380
  2766  003030  0E3C               	movlw	60
  2767  003032  5DE6               	subwf	_MINUTO& (0+255),w,b
  2768  003034  A0D8               	btfss	status,0,c
  2769  003036  EF1F  F018         	goto	u6381
  2770  00303A  EF21  F018         	goto	u6380
  2771  00303E                     u6381:
  2772  00303E  EF25  F018         	goto	l4842
  2773  003042                     u6380:
  2774  003042                     
  2775                           ; BSR set to: 0
  2776                           ;Funcional01.c: 404:                 {;Funcional01.c: 405:                     MINUTO = 
      +                          0;
  2777  003042  0E00               	movlw	0
  2778  003044  6FE7               	movwf	(_MINUTO+1)& (0+255),b
  2779  003046  0E00               	movlw	0
  2780  003048  6FE6               	movwf	_MINUTO& (0+255),b
  2781  00304A                     l4842:
  2782                           
  2783                           ;Funcional01.c: 409:             putcm(0xC0);
  2784  00304A  0EC0               	movlw	192
  2785  00304C  ECBB  F023         	call	_putcm
  2786  003050                     
  2787                           ;Funcional01.c: 410:             printf("Alarma: %d%d:%d%d:%d%d",DH, UH, DM, UM, DS, US)
      +                          ;
  2788  003050  0E18               	movlw	low STR_4
  2789  003052  0100               	movlb	0	; () banked
  2790  003054  6FB0               	movwf	printf@fmt& (0+255),b
  2791  003056  0E08               	movlw	high STR_4
  2792  003058  6FB1               	movwf	(printf@fmt+1)& (0+255),b
  2793  00305A  C0E2  F0B2         	movff	_DH,?_printf+2
  2794  00305E  C0E3  F0B3         	movff	_DH+1,?_printf+3
  2795  003062  C0E0  F0B4         	movff	_UH,?_printf+4
  2796  003066  C0E1  F0B5         	movff	_UH+1,?_printf+5
  2797  00306A  C0DE  F0B6         	movff	_DM,?_printf+6
  2798  00306E  C0DF  F0B7         	movff	_DM+1,?_printf+7
  2799  003072  C0DC  F0B8         	movff	_UM,?_printf+8
  2800  003076  C0DD  F0B9         	movff	_UM+1,?_printf+9
  2801  00307A  C0DA  F0BA         	movff	_DS,?_printf+10
  2802  00307E  C0DB  F0BB         	movff	_DS+1,?_printf+11
  2803  003082  C0D8  F0BC         	movff	_US,?_printf+12
  2804  003086  C0D9  F0BD         	movff	_US+1,?_printf+13
  2805  00308A  EC7E  F024         	call	_printf	;wreg free
  2806  00308E                     l4846:
  2807                           
  2808                           ;Funcional01.c: 383:         while(PORTAbits.RA1 == 1)
  2809  00308E  B280               	btfsc	128,1,c	;volatile
  2810  003090  EF4C  F018         	goto	u6391
  2811  003094  EF4E  F018         	goto	u6390
  2812  003098                     u6391:
  2813  003098  EF97  F017         	goto	l153
  2814  00309C                     u6390:
  2815  00309C                     
  2816                           ;Funcional01.c: 423:   DS = 0;
  2817  00309C  0E00               	movlw	0
  2818  00309E  0100               	movlb	0	; () banked
  2819  0030A0  6FDB               	movwf	(_DS+1)& (0+255),b
  2820  0030A2  0E00               	movlw	0
  2821  0030A4  6FDA               	movwf	_DS& (0+255),b
  2822                           
  2823                           ;Funcional01.c: 424:   US = 0;
  2824  0030A6  0E00               	movlw	0
  2825  0030A8  6FD9               	movwf	(_US+1)& (0+255),b
  2826  0030AA  0E00               	movlw	0
  2827  0030AC  6FD8               	movwf	_US& (0+255),b
  2828  0030AE                     
  2829                           ; BSR set to: 0
  2830                           ;Funcional01.c: 426:         INTCONbits.GIE = 1;
  2831  0030AE  8EF2               	bsf	242,7,c	;volatile
  2832  0030B0                     
  2833                           ; BSR set to: 0
  2834                           ;Funcional01.c: 427:         INTCONbits.PEIE = 1;
  2835  0030B0  8CF2               	bsf	242,6,c	;volatile
  2836  0030B2                     l159:
  2837  0030B2  0012               	return		;funcret
  2838  0030B4                     __end_of_Alarma:
  2839                           	callstack 0
  2840                           
  2841 ;; *************** function _Cronometro *****************
  2842 ;; Defined at:
  2843 ;;		line 334 in file "Funcional01.c"
  2844 ;; Parameters:    Size  Location     Type
  2845 ;;		None
  2846 ;; Auto vars:     Size  Location     Type
  2847 ;;		None
  2848 ;; Return value:  Size  Location     Type
  2849 ;;                  1    wreg      void 
  2850 ;; Registers used:
  2851 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  2852 ;; Tracked objects:
  2853 ;;		On entry : 0/0
  2854 ;;		On exit  : 0/0
  2855 ;;		Unchanged: 0/0
  2856 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  2857 ;;      Params:         0       0       0       0       0       0       0       0       0
  2858 ;;      Locals:         0       0       0       0       0       0       0       0       0
  2859 ;;      Temps:          2       0       0       0       0       0       0       0       0
  2860 ;;      Totals:         2       0       0       0       0       0       0       0       0
  2861 ;;Total ram usage:        2 bytes
  2862 ;; Hardware stack levels used:    1
  2863 ;; Hardware stack levels required when called:    9
  2864 ;; This function calls:
  2865 ;;		_Mostrar_Reloj
  2866 ;; This function is called by:
  2867 ;;		_Alarma
  2868 ;; This function uses a non-reentrant model
  2869 ;;
  2870                           
  2871                           	psect	text13
  2872  004126                     __ptext13:
  2873                           	callstack 0
  2874  004126                     _Cronometro:
  2875                           	callstack 20
  2876  004126                     
  2877                           ;Funcional01.c: 336:     Mostrar_Reloj();
  2878  004126  ECAC  F01D         	call	_Mostrar_Reloj	;wreg free
  2879  00412A                     
  2880                           ;Funcional01.c: 337:     segundos = segundos + 1;
  2881  00412A  0E01               	movlw	1
  2882  00412C  0100               	movlb	0	; () banked
  2883  00412E  25F6               	addwf	_segundos& (0+255),w,b
  2884  004130  6FF6               	movwf	_segundos& (0+255),b
  2885  004132  0E00               	movlw	0
  2886  004134  21F7               	addwfc	(_segundos+1)& (0+255),w,b
  2887  004136  6FF7               	movwf	(_segundos+1)& (0+255),b
  2888  004138                     
  2889                           ; BSR set to: 0
  2890                           ;Funcional01.c: 338:  if(segundos > 59)
  2891  004138  BFF7               	btfsc	(_segundos+1)& (0+255),7,b
  2892  00413A  EFA8  F020         	goto	u6211
  2893  00413E  51F7               	movf	(_segundos+1)& (0+255),w,b
  2894  004140  E109               	bnz	u6210
  2895  004142  0E3C               	movlw	60
  2896  004144  5DF6               	subwf	_segundos& (0+255),w,b
  2897  004146  A0D8               	btfss	status,0,c
  2898  004148  EFA8  F020         	goto	u6211
  2899  00414C  EFAA  F020         	goto	u6210
  2900  004150                     u6211:
  2901  004150  EFDE  F020         	goto	l4672
  2902  004154                     u6210:
  2903  004154                     
  2904                           ; BSR set to: 0
  2905                           ;Funcional01.c: 339:  {;Funcional01.c: 340:   segundos = 0;
  2906  004154  0E00               	movlw	0
  2907  004156  6FF7               	movwf	(_segundos+1)& (0+255),b
  2908  004158  0E00               	movlw	0
  2909  00415A  6FF6               	movwf	_segundos& (0+255),b
  2910  00415C                     
  2911                           ; BSR set to: 0
  2912                           ;Funcional01.c: 341:   minutos = minutos + 1;
  2913  00415C  0E01               	movlw	1
  2914  00415E  25FA               	addwf	_minutos& (0+255),w,b
  2915  004160  6FFA               	movwf	_minutos& (0+255),b
  2916  004162  0E00               	movlw	0
  2917  004164  21FB               	addwfc	(_minutos+1)& (0+255),w,b
  2918  004166  6FFB               	movwf	(_minutos+1)& (0+255),b
  2919  004168                     
  2920                           ; BSR set to: 0
  2921                           ;Funcional01.c: 342:   if(minutos > 59)
  2922  004168  BFFB               	btfsc	(_minutos+1)& (0+255),7,b
  2923  00416A  EFC0  F020         	goto	u6221
  2924  00416E  51FB               	movf	(_minutos+1)& (0+255),w,b
  2925  004170  E109               	bnz	u6220
  2926  004172  0E3C               	movlw	60
  2927  004174  5DFA               	subwf	_minutos& (0+255),w,b
  2928  004176  A0D8               	btfss	status,0,c
  2929  004178  EFC0  F020         	goto	u6221
  2930  00417C  EFC2  F020         	goto	u6220
  2931  004180                     u6221:
  2932  004180  EFDE  F020         	goto	l4672
  2933  004184                     u6220:
  2934  004184                     
  2935                           ; BSR set to: 0
  2936                           ;Funcional01.c: 343:   {;Funcional01.c: 344:    minutos = 0;
  2937  004184  0E00               	movlw	0
  2938  004186  6FFB               	movwf	(_minutos+1)& (0+255),b
  2939  004188  0E00               	movlw	0
  2940  00418A  6FFA               	movwf	_minutos& (0+255),b
  2941  00418C                     
  2942                           ; BSR set to: 0
  2943                           ;Funcional01.c: 345:    horas = horas + 1;
  2944  00418C  0E01               	movlw	1
  2945  00418E  25F8               	addwf	_horas& (0+255),w,b
  2946  004190  6FF8               	movwf	_horas& (0+255),b
  2947  004192  0E00               	movlw	0
  2948  004194  21F9               	addwfc	(_horas+1)& (0+255),w,b
  2949  004196  6FF9               	movwf	(_horas+1)& (0+255),b
  2950  004198                     
  2951                           ; BSR set to: 0
  2952                           ;Funcional01.c: 346:    if(horas > 23)
  2953  004198  BFF9               	btfsc	(_horas+1)& (0+255),7,b
  2954  00419A  EFD8  F020         	goto	u6231
  2955  00419E  51F9               	movf	(_horas+1)& (0+255),w,b
  2956  0041A0  E109               	bnz	u6230
  2957  0041A2  0E18               	movlw	24
  2958  0041A4  5DF8               	subwf	_horas& (0+255),w,b
  2959  0041A6  A0D8               	btfss	status,0,c
  2960  0041A8  EFD8  F020         	goto	u6231
  2961  0041AC  EFDA  F020         	goto	u6230
  2962  0041B0                     u6231:
  2963  0041B0  EFDE  F020         	goto	l4672
  2964  0041B4                     u6230:
  2965  0041B4                     
  2966                           ; BSR set to: 0
  2967                           ;Funcional01.c: 347:    {;Funcional01.c: 348:     horas=0;
  2968  0041B4  0E00               	movlw	0
  2969  0041B6  6FF9               	movwf	(_horas+1)& (0+255),b
  2970  0041B8  0E00               	movlw	0
  2971  0041BA  6FF8               	movwf	_horas& (0+255),b
  2972  0041BC                     l4672:
  2973                           
  2974                           ; BSR set to: 0
  2975                           ;Funcional01.c: 352:     TMR0L = 0xFF;
  2976  0041BC  68D6               	setf	214,c	;volatile
  2977  0041BE                     
  2978                           ; BSR set to: 0
  2979                           ;Funcional01.c: 355:     INTCONbits.GIE = 1;
  2980  0041BE  8EF2               	bsf	242,7,c	;volatile
  2981  0041C0                     
  2982                           ; BSR set to: 0
  2983                           ;Funcional01.c: 356:     INTCONbits.PEIE = 1;
  2984  0041C0  8CF2               	bsf	242,6,c	;volatile
  2985  0041C2                     
  2986                           ; BSR set to: 0
  2987                           ;Funcional01.c: 357:     _delay((unsigned long)((1000)*(8000000/4000.0)));
  2988  0041C2  0E0B               	movlw	11
  2989  0041C4  6E5A               	movwf	(??_Cronometro+1)^0,c
  2990  0041C6  0E26               	movlw	38
  2991  0041C8  6E59               	movwf	??_Cronometro^0,c
  2992  0041CA  0E5E               	movlw	94
  2993  0041CC                     u6647:
  2994  0041CC  2EE8               	decfsz	wreg,f,c
  2995  0041CE  D7FE               	bra	u6647
  2996  0041D0  2E59               	decfsz	??_Cronometro^0,f,c
  2997  0041D2  D7FC               	bra	u6647
  2998  0041D4  2E5A               	decfsz	(??_Cronometro+1)^0,f,c
  2999  0041D6  D7FA               	bra	u6647
  3000  0041D8  0012               	return		;funcret
  3001  0041DA                     __end_of_Cronometro:
  3002                           	callstack 0
  3003                           
  3004 ;; *************** function _Mostrar_Reloj *****************
  3005 ;; Defined at:
  3006 ;;		line 308 in file "Funcional01.c"
  3007 ;; Parameters:    Size  Location     Type
  3008 ;;		None
  3009 ;; Auto vars:     Size  Location     Type
  3010 ;;		None
  3011 ;; Return value:  Size  Location     Type
  3012 ;;                  1    wreg      void 
  3013 ;; Registers used:
  3014 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  3015 ;; Tracked objects:
  3016 ;;		On entry : 0/0
  3017 ;;		On exit  : 0/0
  3018 ;;		Unchanged: 0/0
  3019 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  3020 ;;      Params:         0       0       0       0       0       0       0       0       0
  3021 ;;      Locals:         0       0       0       0       0       0       0       0       0
  3022 ;;      Temps:          0       0       0       0       0       0       0       0       0
  3023 ;;      Totals:         0       0       0       0       0       0       0       0       0
  3024 ;;Total ram usage:        0 bytes
  3025 ;; Hardware stack levels used:    1
  3026 ;; Hardware stack levels required when called:    8
  3027 ;; This function calls:
  3028 ;;		___awdiv
  3029 ;;		___awmod
  3030 ;;		_printf
  3031 ;;		_putcm
  3032 ;; This function is called by:
  3033 ;;		_Cronometro
  3034 ;; This function uses a non-reentrant model
  3035 ;;
  3036                           
  3037                           	psect	text14
  3038  003B58                     __ptext14:
  3039                           	callstack 0
  3040  003B58                     _Mostrar_Reloj:
  3041                           	callstack 20
  3042  003B58                     
  3043                           ;Funcional01.c: 311:  Decenas_Horas = horas / 10;
  3044  003B58  C0F8  F006         	movff	_horas,___awdiv@dividend
  3045  003B5C  C0F9  F007         	movff	_horas+1,___awdiv@dividend+1
  3046  003B60  0E00               	movlw	0
  3047  003B62  6E09               	movwf	(___awdiv@divisor+1)^0,c
  3048  003B64  0E0A               	movlw	10
  3049  003B66  6E08               	movwf	___awdiv@divisor^0,c
  3050  003B68  EC31  F020         	call	___awdiv	;wreg free
  3051  003B6C  C006  F0F2         	movff	?___awdiv,_Decenas_Horas
  3052  003B70  C007  F0F3         	movff	?___awdiv+1,_Decenas_Horas+1
  3053                           
  3054                           ;Funcional01.c: 312:  Unidades_Horas = horas % 10;
  3055  003B74  C0F8  F001         	movff	_horas,___awmod@dividend
  3056  003B78  C0F9  F002         	movff	_horas+1,___awmod@dividend+1
  3057  003B7C  0E00               	movlw	0
  3058  003B7E  6E04               	movwf	(___awmod@divisor+1)^0,c
  3059  003B80  0E0A               	movlw	10
  3060  003B82  6E03               	movwf	___awmod@divisor^0,c
  3061  003B84  ECED  F020         	call	___awmod	;wreg free
  3062  003B88  C001  F0F4         	movff	?___awmod,_Unidades_Horas
  3063  003B8C  C002  F0F5         	movff	?___awmod+1,_Unidades_Horas+1
  3064                           
  3065                           ;Funcional01.c: 313:  Decenas_Minutos = minutos / 10;
  3066  003B90  C0FA  F006         	movff	_minutos,___awdiv@dividend
  3067  003B94  C0FB  F007         	movff	_minutos+1,___awdiv@dividend+1
  3068  003B98  0E00               	movlw	0
  3069  003B9A  6E09               	movwf	(___awdiv@divisor+1)^0,c
  3070  003B9C  0E0A               	movlw	10
  3071  003B9E  6E08               	movwf	___awdiv@divisor^0,c
  3072  003BA0  EC31  F020         	call	___awdiv	;wreg free
  3073  003BA4  C006  F0EE         	movff	?___awdiv,_Decenas_Minutos
  3074  003BA8  C007  F0EF         	movff	?___awdiv+1,_Decenas_Minutos+1
  3075                           
  3076                           ;Funcional01.c: 314:  Unidades_Minutos = minutos % 10;
  3077  003BAC  C0FA  F001         	movff	_minutos,___awmod@dividend
  3078  003BB0  C0FB  F002         	movff	_minutos+1,___awmod@dividend+1
  3079  003BB4  0E00               	movlw	0
  3080  003BB6  6E04               	movwf	(___awmod@divisor+1)^0,c
  3081  003BB8  0E0A               	movlw	10
  3082  003BBA  6E03               	movwf	___awmod@divisor^0,c
  3083  003BBC  ECED  F020         	call	___awmod	;wreg free
  3084  003BC0  C001  F0F0         	movff	?___awmod,_Unidades_Minutos
  3085  003BC4  C002  F0F1         	movff	?___awmod+1,_Unidades_Minutos+1
  3086                           
  3087                           ;Funcional01.c: 315:  Decenas_Segundos = segundos / 10;
  3088  003BC8  C0F6  F006         	movff	_segundos,___awdiv@dividend
  3089  003BCC  C0F7  F007         	movff	_segundos+1,___awdiv@dividend+1
  3090  003BD0  0E00               	movlw	0
  3091  003BD2  6E09               	movwf	(___awdiv@divisor+1)^0,c
  3092  003BD4  0E0A               	movlw	10
  3093  003BD6  6E08               	movwf	___awdiv@divisor^0,c
  3094  003BD8  EC31  F020         	call	___awdiv	;wreg free
  3095  003BDC  C006  F0EA         	movff	?___awdiv,_Decenas_Segundos
  3096  003BE0  C007  F0EB         	movff	?___awdiv+1,_Decenas_Segundos+1
  3097                           
  3098                           ;Funcional01.c: 316:  Unidades_Segundos = segundos % 10;
  3099  003BE4  C0F6  F001         	movff	_segundos,___awmod@dividend
  3100  003BE8  C0F7  F002         	movff	_segundos+1,___awmod@dividend+1
  3101  003BEC  0E00               	movlw	0
  3102  003BEE  6E04               	movwf	(___awmod@divisor+1)^0,c
  3103  003BF0  0E0A               	movlw	10
  3104  003BF2  6E03               	movwf	___awmod@divisor^0,c
  3105  003BF4  ECED  F020         	call	___awmod	;wreg free
  3106  003BF8  C001  F0EC         	movff	?___awmod,_Unidades_Segundos
  3107  003BFC  C002  F0ED         	movff	?___awmod+1,_Unidades_Segundos+1
  3108                           
  3109                           ;Funcional01.c: 319:  putcm(0xC0);
  3110  003C00  0EC0               	movlw	192
  3111  003C02  ECBB  F023         	call	_putcm
  3112  003C06                     
  3113                           ;Funcional01.c: 320:  printf("RELOJ:  %d%d:%d%d:%d%d",Decenas_Horas, Unidades_Horas, Dec
      +                          enas_Minutos, Unidades_Minutos, Decenas_Segundos, Unidades_Segundos);
  3114  003C06  0E01               	movlw	low STR_2
  3115  003C08  0100               	movlb	0	; () banked
  3116  003C0A  6FB0               	movwf	printf@fmt& (0+255),b
  3117  003C0C  0E08               	movlw	high STR_2
  3118  003C0E  6FB1               	movwf	(printf@fmt+1)& (0+255),b
  3119  003C10  C0F2  F0B2         	movff	_Decenas_Horas,?_printf+2
  3120  003C14  C0F3  F0B3         	movff	_Decenas_Horas+1,?_printf+3
  3121  003C18  C0F4  F0B4         	movff	_Unidades_Horas,?_printf+4
  3122  003C1C  C0F5  F0B5         	movff	_Unidades_Horas+1,?_printf+5
  3123  003C20  C0EE  F0B6         	movff	_Decenas_Minutos,?_printf+6
  3124  003C24  C0EF  F0B7         	movff	_Decenas_Minutos+1,?_printf+7
  3125  003C28  C0F0  F0B8         	movff	_Unidades_Minutos,?_printf+8
  3126  003C2C  C0F1  F0B9         	movff	_Unidades_Minutos+1,?_printf+9
  3127  003C30  C0EA  F0BA         	movff	_Decenas_Segundos,?_printf+10
  3128  003C34  C0EB  F0BB         	movff	_Decenas_Segundos+1,?_printf+11
  3129  003C38  C0EC  F0BC         	movff	_Unidades_Segundos,?_printf+12
  3130  003C3C  C0ED  F0BD         	movff	_Unidades_Segundos+1,?_printf+13
  3131  003C40  EC7E  F024         	call	_printf	;wreg free
  3132  003C44  0012               	return		;funcret
  3133  003C46                     __end_of_Mostrar_Reloj:
  3134                           	callstack 0
  3135                           
  3136 ;; *************** function _putcm *****************
  3137 ;; Defined at:
  3138 ;;		line 232 in file "Funcional01.c"
  3139 ;; Parameters:    Size  Location     Type
  3140 ;;  data            1    wreg     unsigned char 
  3141 ;; Auto vars:     Size  Location     Type
  3142 ;;  data            1    1[COMRAM] unsigned char 
  3143 ;;  Activa          1    2[COMRAM] unsigned char 
  3144 ;; Return value:  Size  Location     Type
  3145 ;;                  1    wreg      void 
  3146 ;; Registers used:
  3147 ;;		wreg, status,2, status,0
  3148 ;; Tracked objects:
  3149 ;;		On entry : 0/0
  3150 ;;		On exit  : 0/0
  3151 ;;		Unchanged: 0/0
  3152 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  3153 ;;      Params:         0       0       0       0       0       0       0       0       0
  3154 ;;      Locals:         2       0       0       0       0       0       0       0       0
  3155 ;;      Temps:          1       0       0       0       0       0       0       0       0
  3156 ;;      Totals:         3       0       0       0       0       0       0       0       0
  3157 ;;Total ram usage:        3 bytes
  3158 ;; Hardware stack levels used:    1
  3159 ;; This function calls:
  3160 ;;		Nothing
  3161 ;; This function is called by:
  3162 ;;		_InicializaLCD
  3163 ;;		_SensorLM35
  3164 ;;		_Mostrar_Reloj
  3165 ;;		_Alarma
  3166 ;; This function uses a non-reentrant model
  3167 ;;
  3168                           
  3169                           	psect	text15
  3170  004776                     __ptext15:
  3171                           	callstack 0
  3172  004776                     _putcm:
  3173                           	callstack 29
  3174                           
  3175                           ;incstack = 0
  3176                           ;putcm@data stored from wreg
  3177  004776  6E02               	movwf	putcm@data^0,c
  3178  004778                     
  3179                           ;Funcional01.c: 232: void putcm(char data);Funcional01.c: 233: {;Funcional01.c: 234:    
      +                           char Activa;;Funcional01.c: 235:     Activa = data & 0xF0;
  3180  004778  5002               	movf	putcm@data^0,w,c
  3181  00477A  0BF0               	andlw	240
  3182  00477C  6E03               	movwf	putcm@Activa^0,c
  3183                           
  3184                           ;Funcional01.c: 236:     LATD = Activa | 0x04;
  3185  00477E  5003               	movf	putcm@Activa^0,w,c
  3186  004780  0904               	iorlw	4
  3187  004782  6E8C               	movwf	140,c	;volatile
  3188  004784                     
  3189                           ;Funcional01.c: 237:     _delay((unsigned long)((10)*(8000000/4000000.0)));
  3190  004784  0E06               	movlw	6
  3191  004786                     u6657:
  3192  004786  2EE8               	decfsz	wreg,f,c
  3193  004788  D7FE               	bra	u6657
  3194  00478A  D000               	nop2	
  3195  00478C                     
  3196                           ;Funcional01.c: 238:     LATD = Activa;
  3197  00478C  C003  FF8C         	movff	putcm@Activa,3980	;volatile
  3198  004790                     
  3199                           ;Funcional01.c: 239:     _delay((unsigned long)((1)*(8000000/4000.0)));
  3200  004790  0E03               	movlw	3
  3201  004792  6E01               	movwf	??_putcm^0,c
  3202  004794  0E98               	movlw	152
  3203  004796                     u6667:
  3204  004796  2EE8               	decfsz	wreg,f,c
  3205  004798  D7FE               	bra	u6667
  3206  00479A  2E01               	decfsz	??_putcm^0,f,c
  3207  00479C  D7FC               	bra	u6667
  3208                           
  3209                           ;Funcional01.c: 240:     Activa = (unsigned char)(data << 4);
  3210  00479E  3802               	swapf	putcm@data^0,w,c
  3211  0047A0  0BF0               	andlw	240
  3212  0047A2  6E03               	movwf	putcm@Activa^0,c
  3213                           
  3214                           ;Funcional01.c: 241:     LATD = Activa | 0x04;
  3215  0047A4  5003               	movf	putcm@Activa^0,w,c
  3216  0047A6  0904               	iorlw	4
  3217  0047A8  6E8C               	movwf	140,c	;volatile
  3218  0047AA                     
  3219                           ;Funcional01.c: 242:     _delay((unsigned long)((10)*(8000000/4000000.0)));
  3220  0047AA  0E06               	movlw	6
  3221  0047AC                     u6677:
  3222  0047AC  2EE8               	decfsz	wreg,f,c
  3223  0047AE  D7FE               	bra	u6677
  3224  0047B0  D000               	nop2	
  3225  0047B2                     
  3226                           ;Funcional01.c: 243:     LATD = Activa;
  3227  0047B2  C003  FF8C         	movff	putcm@Activa,3980	;volatile
  3228  0047B6  0012               	return		;funcret
  3229  0047B8                     __end_of_putcm:
  3230                           	callstack 0
  3231                           
  3232 ;; *************** function _printf *****************
  3233 ;; Defined at:
  3234 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\printf.c"
  3235 ;; Parameters:    Size  Location     Type
  3236 ;;  fmt             2   80[BANK0 ] PTR const unsigned char 
  3237 ;;		 -> STR_4(23), STR_3(18), STR_2(23), Valores(16), 
  3238 ;; Auto vars:     Size  Location     Type
  3239 ;;  ap              2   86[COMRAM] PTR void [1]
  3240 ;;		 -> ?_printf(2), ?_sprintf(2), 
  3241 ;;  ret             2    0        int 
  3242 ;; Return value:  Size  Location     Type
  3243 ;;                  2   80[BANK0 ] int 
  3244 ;; Registers used:
  3245 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  3246 ;; Tracked objects:
  3247 ;;		On entry : 0/0
  3248 ;;		On exit  : 0/0
  3249 ;;		Unchanged: 0/0
  3250 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  3251 ;;      Params:         0      14       0       0       0       0       0       0       0
  3252 ;;      Locals:         4       0       0       0       0       0       0       0       0
  3253 ;;      Temps:          0       0       0       0       0       0       0       0       0
  3254 ;;      Totals:         4      14       0       0       0       0       0       0       0
  3255 ;;Total ram usage:       18 bytes
  3256 ;; Hardware stack levels used:    1
  3257 ;; Hardware stack levels required when called:    7
  3258 ;; This function calls:
  3259 ;;		_vfprintf
  3260 ;; This function is called by:
  3261 ;;		_SensorLM35
  3262 ;;		_Mostrar_Reloj
  3263 ;;		_Alarma
  3264 ;; This function uses a non-reentrant model
  3265 ;;
  3266                           
  3267                           	psect	text16
  3268  0048FC                     __ptext16:
  3269                           	callstack 0
  3270  0048FC                     _printf:
  3271                           	callstack 22
  3272  0048FC  0EB2               	movlw	low (?_printf+2)
  3273  0048FE  6E57               	movwf	printf@ap^0,c
  3274  004900  0E00               	movlw	high (?_printf+2)
  3275  004902  6E58               	movwf	(printf@ap+1)^0,c
  3276  004904  0E00               	movlw	0
  3277  004906  6E4D               	movwf	vfprintf@fp^0,c
  3278  004908  0E00               	movlw	0
  3279  00490A  6E4E               	movwf	(vfprintf@fp+1)^0,c
  3280  00490C  C0B0  F04F         	movff	printf@fmt,vfprintf@fmt
  3281  004910  C0B1  F050         	movff	printf@fmt+1,vfprintf@fmt+1
  3282  004914  0E57               	movlw	low printf@ap
  3283  004916  6E51               	movwf	vfprintf@ap^0,c
  3284  004918  0E00               	movlw	high printf@ap
  3285  00491A  6E52               	movwf	(vfprintf@ap+1)^0,c
  3286  00491C  ECDE  F021         	call	_vfprintf	;wreg free
  3287  004920  0012               	return		;funcret
  3288  004922                     __end_of_printf:
  3289                           	callstack 0
  3290                           
  3291 ;; *************** function _vfprintf *****************
  3292 ;; Defined at:
  3293 ;;		line 1390 in file "C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c"
  3294 ;; Parameters:    Size  Location     Type
  3295 ;;  fp              2   76[COMRAM] PTR struct _IO_FILE
  3296 ;;		 -> NULL(0), sprintf@f(6), 
  3297 ;;  fmt             2   78[COMRAM] PTR const unsigned char 
  3298 ;;		 -> STR_4(23), STR_3(18), STR_2(23), STR_1(18), 
  3299 ;;		 -> Valores(16), 
  3300 ;;  ap              2   80[COMRAM] PTR PTR void 
  3301 ;;		 -> printf@ap(2), sprintf@ap(2), 
  3302 ;; Auto vars:     Size  Location     Type
  3303 ;;  cfmt            2   82[COMRAM] PTR unsigned char 
  3304 ;;		 -> STR_4(23), STR_3(18), STR_2(23), STR_1(18), 
  3305 ;;		 -> Valores(16), 
  3306 ;; Return value:  Size  Location     Type
  3307 ;;                  2   76[COMRAM] int 
  3308 ;; Registers used:
  3309 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  3310 ;; Tracked objects:
  3311 ;;		On entry : 0/0
  3312 ;;		On exit  : 0/0
  3313 ;;		Unchanged: 0/0
  3314 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  3315 ;;      Params:         6       0       0       0       0       0       0       0       0
  3316 ;;      Locals:         2       0       0       0       0       0       0       0       0
  3317 ;;      Temps:          0       0       0       0       0       0       0       0       0
  3318 ;;      Totals:         8       0       0       0       0       0       0       0       0
  3319 ;;Total ram usage:        8 bytes
  3320 ;; Hardware stack levels used:    1
  3321 ;; Hardware stack levels required when called:    6
  3322 ;; This function calls:
  3323 ;;		_vfpfcnvrt
  3324 ;; This function is called by:
  3325 ;;		_sprintf
  3326 ;;		_printf
  3327 ;; This function uses a non-reentrant model
  3328 ;;
  3329                           
  3330                           	psect	text17
  3331  0043BC                     __ptext17:
  3332                           	callstack 0
  3333  0043BC                     _vfprintf:
  3334                           	callstack 22
  3335  0043BC                     
  3336                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 1390: int vfprint
      +                          f(FILE *fp, const char *fmt, va_list ap);C:\Program Files\Microchip\xc8\v2.31\pic\source
      +                          s\c99\common\doprnt.c: 1391: {;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\comm
      +                          on\doprnt.c: 1393:     char *cfmt;;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\
      +                          common\doprnt.c: 1395:     cfmt = (char *)fmt;
  3337  0043BC  C04F  F053         	movff	vfprintf@fmt,vfprintf@cfmt
  3338  0043C0  C050  F054         	movff	vfprintf@fmt+1,vfprintf@cfmt+1
  3339  0043C4                     
  3340                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 1396:     nout = 
      +                          0;
  3341  0043C4  0E00               	movlw	0
  3342  0043C6  0100               	movlb	0	; () banked
  3343  0043C8  6FD1               	movwf	(_nout+1)& (0+255),b
  3344  0043CA  0E00               	movlw	0
  3345  0043CC  6FD0               	movwf	_nout& (0+255),b
  3346                           
  3347                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 1397:     while (
      +                          *cfmt) {
  3348  0043CE  EFFC  F021         	goto	l4574
  3349  0043D2                     l4572:
  3350                           
  3351                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 1398:         nou
      +                          t += vfpfcnvrt(fp, &cfmt, ap);
  3352  0043D2  C04D  F043         	movff	vfprintf@fp,vfpfcnvrt@fp
  3353  0043D6  C04E  F044         	movff	vfprintf@fp+1,vfpfcnvrt@fp+1
  3354  0043DA  0E53               	movlw	low vfprintf@cfmt
  3355  0043DC  6E45               	movwf	vfpfcnvrt@fmt^0,c
  3356  0043DE  0E00               	movlw	high vfprintf@cfmt
  3357  0043E0  6E46               	movwf	(vfpfcnvrt@fmt+1)^0,c
  3358  0043E2  C051  F047         	movff	vfprintf@ap,vfpfcnvrt@ap
  3359  0043E6  C052  F048         	movff	vfprintf@ap+1,vfpfcnvrt@ap+1
  3360  0043EA  EC60  F00A         	call	_vfpfcnvrt	;wreg free
  3361  0043EE  5043               	movf	?_vfpfcnvrt^0,w,c
  3362  0043F0  0100               	movlb	0	; () banked
  3363  0043F2  27D0               	addwf	_nout& (0+255),f,b
  3364  0043F4  5044               	movf	(?_vfpfcnvrt+1)^0,w,c
  3365  0043F6  23D1               	addwfc	(_nout+1)& (0+255),f,b
  3366  0043F8                     l4574:
  3367                           
  3368                           ; BSR set to: 0
  3369                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 1397:     while (
      +                          *cfmt) {
  3370  0043F8  C053  FFF6         	movff	vfprintf@cfmt,tblptrl
  3371  0043FC  C054  FFF7         	movff	vfprintf@cfmt+1,tblptrh
  3372  004400  6AF8               	clrf	tblptru,c
  3373  004402  0E07               	movlw	(high __ramtop+-1)
  3374  004404  64F7               	cpfsgt	tblptrh,c
  3375  004406  D003               	bra	u6177
  3376  004408  0008               	tblrd		*
  3377  00440A  50F5               	movf	tablat,w,c
  3378  00440C  D005               	bra	u6170
  3379  00440E                     u6177:
  3380  00440E  CFF6 FFE1          	movff	tblptrl,fsr1l
  3381  004412  CFF7 FFE2          	movff	tblptrh,fsr1h
  3382  004416  50E7               	movf	indf1,w,c
  3383  004418                     u6170:
  3384  004418  0900               	iorlw	0
  3385  00441A  A4D8               	btfss	status,2,c
  3386  00441C  EF12  F022         	goto	u6181
  3387  004420  EF14  F022         	goto	u6180
  3388  004424                     u6181:
  3389  004424  EFE9  F021         	goto	l4572
  3390  004428                     u6180:
  3391  004428                     
  3392                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 1400:     return 
      +                          nout;
  3393  004428  C0D0  F04D         	movff	_nout,?_vfprintf
  3394  00442C  C0D1  F04E         	movff	_nout+1,?_vfprintf+1
  3395  004430  0012               	return		;funcret
  3396  004432                     __end_of_vfprintf:
  3397                           	callstack 0
  3398                           
  3399 ;; *************** function _vfpfcnvrt *****************
  3400 ;; Defined at:
  3401 ;;		line 692 in file "C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c"
  3402 ;; Parameters:    Size  Location     Type
  3403 ;;  fp              2   66[COMRAM] PTR struct _IO_FILE
  3404 ;;		 -> NULL(0), sprintf@f(6), 
  3405 ;;  fmt             2   68[COMRAM] PTR PTR unsigned char 
  3406 ;;		 -> vfprintf@cfmt(2), 
  3407 ;;  ap              2   70[COMRAM] PTR PTR void 
  3408 ;;		 -> printf@ap(2), sprintf@ap(2), 
  3409 ;; Auto vars:     Size  Location     Type
  3410 ;;  ll              8   56[BANK0 ] long long 
  3411 ;;  llu             8    0        unsigned long long 
  3412 ;;  f               4   72[BANK0 ] unsigned long long 
  3413 ;;  ct              3   76[BANK0 ] unsigned char [3]
  3414 ;;  cp              3    0        PTR unsigned char 
  3415 ;;  vp              2   64[BANK0 ] PTR void 
  3416 ;;		 -> ?_printf(2), ?_sprintf(2), 
  3417 ;;  i               2    0        int 
  3418 ;;  done            2    0        int 
  3419 ;;  c               1   79[BANK0 ] unsigned char 
  3420 ;; Return value:  Size  Location     Type
  3421 ;;                  2   66[COMRAM] int 
  3422 ;; Registers used:
  3423 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  3424 ;; Tracked objects:
  3425 ;;		On entry : 0/0
  3426 ;;		On exit  : 0/0
  3427 ;;		Unchanged: 0/0
  3428 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  3429 ;;      Params:         6       0       0       0       0       0       0       0       0
  3430 ;;      Locals:         0      24       0       0       0       0       0       0       0
  3431 ;;      Temps:          4       0       0       0       0       0       0       0       0
  3432 ;;      Totals:        10      24       0       0       0       0       0       0       0
  3433 ;;Total ram usage:       34 bytes
  3434 ;; Hardware stack levels used:    1
  3435 ;; Hardware stack levels required when called:    5
  3436 ;; This function calls:
  3437 ;;		_atoi
  3438 ;;		_ctoa
  3439 ;;		_dtoa
  3440 ;;		_efgtoa
  3441 ;;		_fputc
  3442 ;;		_isdigit
  3443 ;;		_isupper
  3444 ;;		_strncmp
  3445 ;;		_tolower
  3446 ;; This function is called by:
  3447 ;;		_vfprintf
  3448 ;; This function uses a non-reentrant model
  3449 ;;
  3450                           
  3451                           	psect	text18
  3452  0014C0                     __ptext18:
  3453                           	callstack 0
  3454  0014C0                     _vfpfcnvrt:
  3455                           	callstack 22
  3456  0014C0                     
  3457                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 692: static int v
      +                          fpfcnvrt(FILE *fp, char *fmt[], va_list ap);C:\Program Files\Microchip\xc8\v2.31\pic\sou
      +                          rces\c99\common\doprnt.c: 693: {;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\co
      +                          mmon\doprnt.c: 694:     char c, *cp, ct[3];;C:\Program Files\Microchip\xc8\v2.31\pic\sou
      +                          rces\c99\common\doprnt.c: 695:     int done, i;;C:\Program Files\Microchip\xc8\v2.31\pic
      +                          \sources\c99\common\doprnt.c: 696:     long long ll;;C:\Program Files\Microchip\xc8\v2.3
      +                          1\pic\sources\c99\common\doprnt.c: 697:     unsigned long long llu;
  3458  0014C0  C045  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  3459  0014C4  C046  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  3460  0014C8  CFDE FFF6          	movff	postinc2,tblptrl
  3461  0014CC  CFDE FFF7          	movff	postinc2,tblptrh
  3462  0014D0  0E07               	movlw	(high __ramtop+-1)
  3463  0014D2  64F7               	cpfsgt	tblptrh,c
  3464  0014D4  D003               	bra	u5767
  3465  0014D6  0008               	tblrd		*
  3466  0014D8  50F5               	movf	tablat,w,c
  3467  0014DA  D005               	bra	u5760
  3468  0014DC                     u5767:
  3469  0014DC  CFF6 FFE1          	movff	tblptrl,fsr1l
  3470  0014E0  CFF7 FFE2          	movff	tblptrh,fsr1h
  3471  0014E4  50E7               	movf	indf1,w,c
  3472  0014E6                     u5760:
  3473  0014E6  0A25               	xorlw	37
  3474  0014E8  A4D8               	btfss	status,2,c
  3475  0014EA  EF79  F00A         	goto	u5771
  3476  0014EE  EF7B  F00A         	goto	u5770
  3477  0014F2                     u5771:
  3478  0014F2  EF75  F00E         	goto	l4560
  3479  0014F6                     u5770:
  3480  0014F6                     
  3481                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 703:         ++*f
      +                          mt;
  3482  0014F6  C045  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  3483  0014FA  C046  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  3484  0014FE  2ADE               	incf	postinc2,f,c
  3485  001500  0E00               	movlw	0
  3486  001502  22DD               	addwfc	postdec2,f,c
  3487  001504                     
  3488                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 705:         flag
      +                          s = width = 0;
  3489  001504  0E00               	movlw	0
  3490  001506  0100               	movlb	0	; () banked
  3491  001508  6FD3               	movwf	(_width+1)& (0+255),b
  3492  00150A  0E00               	movlw	0
  3493  00150C  6FD2               	movwf	_width& (0+255),b
  3494  00150E  C0D2  F0D6         	movff	_width,_flags
  3495  001512  C0D3  F0D7         	movff	_width+1,_flags+1
  3496  001516                     
  3497                           ; BSR set to: 0
  3498                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 706:         prec
      +                           = -1;
  3499  001516  69D4               	setf	_prec& (0+255),b
  3500  001518  69D5               	setf	(_prec+1)& (0+255),b
  3501  00151A                     
  3502                           ; BSR set to: 0
  3503                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 745:         if (
      +                          (*fmt)[0] == '*') {
  3504  00151A  C045  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  3505  00151E  C046  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  3506  001522  CFDE FFF6          	movff	postinc2,tblptrl
  3507  001526  CFDE FFF7          	movff	postinc2,tblptrh
  3508  00152A  0E07               	movlw	(high __ramtop+-1)
  3509  00152C  64F7               	cpfsgt	tblptrh,c
  3510  00152E  D003               	bra	u5787
  3511  001530  0008               	tblrd		*
  3512  001532  50F5               	movf	tablat,w,c
  3513  001534  D005               	bra	u5780
  3514  001536                     u5787:
  3515  001536  CFF6 FFE1          	movff	tblptrl,fsr1l
  3516  00153A  CFF7 FFE2          	movff	tblptrh,fsr1h
  3517  00153E  50E7               	movf	indf1,w,c
  3518  001540                     u5780:
  3519  001540  0A2A               	xorlw	42
  3520  001542  A4D8               	btfss	status,2,c
  3521  001544  EFA6  F00A         	goto	u5791
  3522  001548  EFA8  F00A         	goto	u5790
  3523  00154C                     u5791:
  3524  00154C  EFD2  F00A         	goto	l4448
  3525  001550                     u5790:
  3526  001550                     
  3527                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 746:             
      +                          ++*fmt;
  3528  001550  C045  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  3529  001554  C046  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  3530  001558  2ADE               	incf	postinc2,f,c
  3531  00155A  0E00               	movlw	0
  3532  00155C  22DD               	addwfc	postdec2,f,c
  3533                           
  3534                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 747:             
      +                          width = (*(int *)__va_arg(*(int **)ap, (int)0));
  3535  00155E  C047  FFD9         	movff	vfpfcnvrt@ap,fsr2l
  3536  001562  C048  FFDA         	movff	vfpfcnvrt@ap+1,fsr2h
  3537  001566  CFDF F049          	movff	indf2,??_vfpfcnvrt
  3538  00156A  0E02               	movlw	2
  3539  00156C  26DE               	addwf	postinc2,f,c
  3540  00156E  CFDF F04A          	movff	indf2,??_vfpfcnvrt+1
  3541  001572  0E00               	movlw	0
  3542  001574  22DD               	addwfc	postdec2,f,c
  3543  001576  C049  FFD9         	movff	??_vfpfcnvrt,fsr2l
  3544  00157A  C04A  FFDA         	movff	??_vfpfcnvrt+1,fsr2h
  3545  00157E  CFDE F0D2          	movff	postinc2,_width
  3546  001582  CFDD F0D3          	movff	postdec2,_width+1
  3547  001586                     
  3548                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 748:             
      +                          if (width < 0) {
  3549  001586  0100               	movlb	0	; () banked
  3550  001588  BFD3               	btfsc	(_width+1)& (0+255),7,b
  3551  00158A  EFCB  F00A         	goto	u5800
  3552  00158E  EFC9  F00A         	goto	u5801
  3553  001592                     u5801:
  3554  001592  EF1F  F00B         	goto	l4458
  3555  001596                     u5800:
  3556  001596                     
  3557                           ; BSR set to: 0
  3558                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 749:             
      +                              flags |= (1 << 0);
  3559  001596  81D6               	bsf	_flags& (0+255),0,b
  3560                           
  3561                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 750:             
      +                              width = -width;
  3562  001598  6DD2               	negf	_width& (0+255),b
  3563  00159A  1FD3               	comf	(_width+1)& (0+255),f,b
  3564  00159C  B0D8               	btfsc	status,0,c
  3565  00159E  2BD3               	incf	(_width+1)& (0+255),f,b
  3566  0015A0  EF1F  F00B         	goto	l4458
  3567  0015A4                     l4448:
  3568                           
  3569                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 753:             
      +                          width = atoi(*fmt);
  3570  0015A4  C045  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  3571  0015A8  C046  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  3572  0015AC  CFDE F008          	movff	postinc2,atoi@s
  3573  0015B0  CFDD F009          	movff	postdec2,atoi@s+1
  3574  0015B4  EC5A  F018         	call	_atoi	;wreg free
  3575  0015B8  C008  F0D2         	movff	?_atoi,_width
  3576  0015BC  C009  F0D3         	movff	?_atoi+1,_width+1
  3577                           
  3578                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 754:             
      +                          while ((0 ? isdigit((*fmt)[0]) : ((unsigned)((*fmt)[0])-'0') < 10)) {
  3579  0015C0  EFE9  F00A         	goto	l4452
  3580  0015C4                     l4450:
  3581                           
  3582                           ; BSR set to: 0
  3583                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 755:             
      +                              ++*fmt;
  3584  0015C4  C045  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  3585  0015C8  C046  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  3586  0015CC  2ADE               	incf	postinc2,f,c
  3587  0015CE  0E00               	movlw	0
  3588  0015D0  22DD               	addwfc	postdec2,f,c
  3589  0015D2                     l4452:
  3590  0015D2  0ED0               	movlw	208
  3591  0015D4  6E49               	movwf	??_vfpfcnvrt^0,c
  3592  0015D6  0EFF               	movlw	255
  3593  0015D8  6E4A               	movwf	(??_vfpfcnvrt+1)^0,c
  3594  0015DA  C045  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  3595  0015DE  C046  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  3596  0015E2  CFDE FFF6          	movff	postinc2,tblptrl
  3597  0015E6  CFDE FFF7          	movff	postinc2,tblptrh
  3598  0015EA  0E07               	movlw	(high __ramtop+-1)
  3599  0015EC  64F7               	cpfsgt	tblptrh,c
  3600  0015EE  D003               	bra	u5817
  3601  0015F0  0008               	tblrd		*
  3602  0015F2  50F5               	movf	tablat,w,c
  3603  0015F4  D005               	bra	u5810
  3604  0015F6                     u5817:
  3605  0015F6  CFF6 FFE1          	movff	tblptrl,fsr1l
  3606  0015FA  CFF7 FFE2          	movff	tblptrh,fsr1h
  3607  0015FE  50E7               	movf	indf1,w,c
  3608  001600                     u5810:
  3609  001600  6E4B               	movwf	(??_vfpfcnvrt+2)^0,c
  3610  001602  6A4C               	clrf	(??_vfpfcnvrt+3)^0,c
  3611  001604  5049               	movf	??_vfpfcnvrt^0,w,c
  3612  001606  264B               	addwf	(??_vfpfcnvrt+2)^0,f,c
  3613  001608  504A               	movf	(??_vfpfcnvrt+1)^0,w,c
  3614  00160A  224C               	addwfc	(??_vfpfcnvrt+3)^0,f,c
  3615  00160C  504C               	movf	(??_vfpfcnvrt+3)^0,w,c
  3616  00160E  E10A               	bnz	u5820
  3617  001610  0E0A               	movlw	10
  3618  001612  5C4B               	subwf	(??_vfpfcnvrt+2)^0,w,c
  3619  001614  A0D8               	btfss	status,0,c
  3620  001616  EF0F  F00B         	goto	u5821
  3621  00161A  EF12  F00B         	goto	u5820
  3622  00161E                     u5821:
  3623  00161E  0E01               	movlw	1
  3624  001620  EF13  F00B         	goto	u5830
  3625  001624                     u5820:
  3626  001624  0E00               	movlw	0
  3627  001626                     u5830:
  3628  001626  0100               	movlb	0	; () banked
  3629  001628  6FA2               	movwf	_vfpfcnvrt$1257& (0+255),b
  3630  00162A  6BA3               	clrf	(_vfpfcnvrt$1257+1)& (0+255),b
  3631  00162C                     
  3632                           ; BSR set to: 0
  3633  00162C  51A2               	movf	_vfpfcnvrt$1257& (0+255),w,b
  3634  00162E  11A3               	iorwf	(_vfpfcnvrt$1257+1)& (0+255),w,b
  3635  001630  A4D8               	btfss	status,2,c
  3636  001632  EF1D  F00B         	goto	u5841
  3637  001636  EF1F  F00B         	goto	u5840
  3638  00163A                     u5841:
  3639  00163A  EFE2  F00A         	goto	l4450
  3640  00163E                     u5840:
  3641  00163E                     l4458:
  3642                           
  3643                           ; BSR set to: 0
  3644                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 762:         if (
      +                          (*fmt)[0] == '.') {
  3645  00163E  C045  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  3646  001642  C046  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  3647  001646  CFDE FFF6          	movff	postinc2,tblptrl
  3648  00164A  CFDE FFF7          	movff	postinc2,tblptrh
  3649  00164E  0E07               	movlw	(high __ramtop+-1)
  3650  001650  64F7               	cpfsgt	tblptrh,c
  3651  001652  D003               	bra	u5857
  3652  001654  0008               	tblrd		*
  3653  001656  50F5               	movf	tablat,w,c
  3654  001658  D005               	bra	u5850
  3655  00165A                     u5857:
  3656  00165A  CFF6 FFE1          	movff	tblptrl,fsr1l
  3657  00165E  CFF7 FFE2          	movff	tblptrh,fsr1h
  3658  001662  50E7               	movf	indf1,w,c
  3659  001664                     u5850:
  3660  001664  0A2E               	xorlw	46
  3661  001666  A4D8               	btfss	status,2,c
  3662  001668  EF38  F00B         	goto	u5861
  3663  00166C  EF3A  F00B         	goto	u5860
  3664  001670                     u5861:
  3665  001670  EFCB  F00B         	goto	l4478
  3666  001674                     u5860:
  3667  001674                     
  3668                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 763:             
      +                          prec = 0;
  3669  001674  0E00               	movlw	0
  3670  001676  0100               	movlb	0	; () banked
  3671  001678  6FD5               	movwf	(_prec+1)& (0+255),b
  3672  00167A  0E00               	movlw	0
  3673  00167C  6FD4               	movwf	_prec& (0+255),b
  3674  00167E                     
  3675                           ; BSR set to: 0
  3676                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 764:             
      +                          ++*fmt;
  3677  00167E  C045  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  3678  001682  C046  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  3679  001686  2ADE               	incf	postinc2,f,c
  3680  001688  0E00               	movlw	0
  3681  00168A  22DD               	addwfc	postdec2,f,c
  3682  00168C                     
  3683                           ; BSR set to: 0
  3684                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 765:             
      +                          if ((*fmt)[0] == '*') {
  3685  00168C  C045  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  3686  001690  C046  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  3687  001694  CFDE FFF6          	movff	postinc2,tblptrl
  3688  001698  CFDE FFF7          	movff	postinc2,tblptrh
  3689  00169C  0E07               	movlw	(high __ramtop+-1)
  3690  00169E  64F7               	cpfsgt	tblptrh,c
  3691  0016A0  D003               	bra	u5877
  3692  0016A2  0008               	tblrd		*
  3693  0016A4  50F5               	movf	tablat,w,c
  3694  0016A6  D005               	bra	u5870
  3695  0016A8                     u5877:
  3696  0016A8  CFF6 FFE1          	movff	tblptrl,fsr1l
  3697  0016AC  CFF7 FFE2          	movff	tblptrh,fsr1h
  3698  0016B0  50E7               	movf	indf1,w,c
  3699  0016B2                     u5870:
  3700  0016B2  0A2A               	xorlw	42
  3701  0016B4  A4D8               	btfss	status,2,c
  3702  0016B6  EF5F  F00B         	goto	u5881
  3703  0016BA  EF61  F00B         	goto	u5880
  3704  0016BE                     u5881:
  3705  0016BE  EF7E  F00B         	goto	l4468
  3706  0016C2                     u5880:
  3707  0016C2                     
  3708                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 766:             
      +                              ++*fmt;
  3709  0016C2  C045  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  3710  0016C6  C046  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  3711  0016CA  2ADE               	incf	postinc2,f,c
  3712  0016CC  0E00               	movlw	0
  3713  0016CE  22DD               	addwfc	postdec2,f,c
  3714                           
  3715                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 767:             
      +                              prec = (*(int *)__va_arg(*(int **)ap, (int)0));
  3716  0016D0  C047  FFD9         	movff	vfpfcnvrt@ap,fsr2l
  3717  0016D4  C048  FFDA         	movff	vfpfcnvrt@ap+1,fsr2h
  3718  0016D8  CFDF F049          	movff	indf2,??_vfpfcnvrt
  3719  0016DC  0E02               	movlw	2
  3720  0016DE  26DE               	addwf	postinc2,f,c
  3721  0016E0  CFDF F04A          	movff	indf2,??_vfpfcnvrt+1
  3722  0016E4  0E00               	movlw	0
  3723  0016E6  22DD               	addwfc	postdec2,f,c
  3724  0016E8  C049  FFD9         	movff	??_vfpfcnvrt,fsr2l
  3725  0016EC  C04A  FFDA         	movff	??_vfpfcnvrt+1,fsr2h
  3726  0016F0  CFDE F0D4          	movff	postinc2,_prec
  3727  0016F4  CFDD F0D5          	movff	postdec2,_prec+1
  3728                           
  3729                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 768:             
      +                          } else {
  3730  0016F8  EFCB  F00B         	goto	l4478
  3731  0016FC                     l4468:
  3732                           
  3733                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 769:             
      +                              prec = atoi(*fmt);
  3734  0016FC  C045  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  3735  001700  C046  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  3736  001704  CFDE F008          	movff	postinc2,atoi@s
  3737  001708  CFDD F009          	movff	postdec2,atoi@s+1
  3738  00170C  EC5A  F018         	call	_atoi	;wreg free
  3739  001710  C008  F0D4         	movff	?_atoi,_prec
  3740  001714  C009  F0D5         	movff	?_atoi+1,_prec+1
  3741                           
  3742                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 770:             
      +                              while ((0 ? isdigit((*fmt)[0]) : ((unsigned)((*fmt)[0])-'0') < 10)) {
  3743  001718  EF95  F00B         	goto	l4472
  3744  00171C                     l4470:
  3745                           
  3746                           ; BSR set to: 0
  3747                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 771:             
      +                                  ++*fmt;
  3748  00171C  C045  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  3749  001720  C046  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  3750  001724  2ADE               	incf	postinc2,f,c
  3751  001726  0E00               	movlw	0
  3752  001728  22DD               	addwfc	postdec2,f,c
  3753  00172A                     l4472:
  3754  00172A  0ED0               	movlw	208
  3755  00172C  6E49               	movwf	??_vfpfcnvrt^0,c
  3756  00172E  0EFF               	movlw	255
  3757  001730  6E4A               	movwf	(??_vfpfcnvrt+1)^0,c
  3758  001732  C045  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  3759  001736  C046  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  3760  00173A  CFDE FFF6          	movff	postinc2,tblptrl
  3761  00173E  CFDE FFF7          	movff	postinc2,tblptrh
  3762  001742  0E07               	movlw	(high __ramtop+-1)
  3763  001744  64F7               	cpfsgt	tblptrh,c
  3764  001746  D003               	bra	u5897
  3765  001748  0008               	tblrd		*
  3766  00174A  50F5               	movf	tablat,w,c
  3767  00174C  D005               	bra	u5890
  3768  00174E                     u5897:
  3769  00174E  CFF6 FFE1          	movff	tblptrl,fsr1l
  3770  001752  CFF7 FFE2          	movff	tblptrh,fsr1h
  3771  001756  50E7               	movf	indf1,w,c
  3772  001758                     u5890:
  3773  001758  6E4B               	movwf	(??_vfpfcnvrt+2)^0,c
  3774  00175A  6A4C               	clrf	(??_vfpfcnvrt+3)^0,c
  3775  00175C  5049               	movf	??_vfpfcnvrt^0,w,c
  3776  00175E  264B               	addwf	(??_vfpfcnvrt+2)^0,f,c
  3777  001760  504A               	movf	(??_vfpfcnvrt+1)^0,w,c
  3778  001762  224C               	addwfc	(??_vfpfcnvrt+3)^0,f,c
  3779  001764  504C               	movf	(??_vfpfcnvrt+3)^0,w,c
  3780  001766  E10A               	bnz	u5900
  3781  001768  0E0A               	movlw	10
  3782  00176A  5C4B               	subwf	(??_vfpfcnvrt+2)^0,w,c
  3783  00176C  A0D8               	btfss	status,0,c
  3784  00176E  EFBB  F00B         	goto	u5901
  3785  001772  EFBE  F00B         	goto	u5900
  3786  001776                     u5901:
  3787  001776  0E01               	movlw	1
  3788  001778  EFBF  F00B         	goto	u5910
  3789  00177C                     u5900:
  3790  00177C  0E00               	movlw	0
  3791  00177E                     u5910:
  3792  00177E  0100               	movlb	0	; () banked
  3793  001780  6FA4               	movwf	_vfpfcnvrt$1258& (0+255),b
  3794  001782  6BA5               	clrf	(_vfpfcnvrt$1258+1)& (0+255),b
  3795  001784                     
  3796                           ; BSR set to: 0
  3797  001784  51A4               	movf	_vfpfcnvrt$1258& (0+255),w,b
  3798  001786  11A5               	iorwf	(_vfpfcnvrt$1258+1)& (0+255),w,b
  3799  001788  A4D8               	btfss	status,2,c
  3800  00178A  EFC9  F00B         	goto	u5921
  3801  00178E  EFCB  F00B         	goto	u5920
  3802  001792                     u5921:
  3803  001792  EF8E  F00B         	goto	l4470
  3804  001796                     u5920:
  3805  001796                     l4478:
  3806                           
  3807                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 779:         ct[0
      +                          ] = (char)tolower((int)(*fmt)[0]);
  3808  001796  C045  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  3809  00179A  C046  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  3810  00179E  CFDE FFF6          	movff	postinc2,tblptrl
  3811  0017A2  CFDE FFF7          	movff	postinc2,tblptrh
  3812  0017A6  0E07               	movlw	(high __ramtop+-1)
  3813  0017A8  64F7               	cpfsgt	tblptrh,c
  3814  0017AA  D003               	bra	u5937
  3815  0017AC  0008               	tblrd		*
  3816  0017AE  50F5               	movf	tablat,w,c
  3817  0017B0  D005               	bra	u5930
  3818  0017B2                     u5937:
  3819  0017B2  CFF6 FFE1          	movff	tblptrl,fsr1l
  3820  0017B6  CFF7 FFE2          	movff	tblptrh,fsr1h
  3821  0017BA  50E7               	movf	indf1,w,c
  3822  0017BC                     u5930:
  3823  0017BC  6E49               	movwf	??_vfpfcnvrt^0,c
  3824  0017BE  5049               	movf	??_vfpfcnvrt^0,w,c
  3825  0017C0  6E07               	movwf	tolower@c^0,c
  3826  0017C2  6A08               	clrf	(tolower@c+1)^0,c
  3827  0017C4  EC81  F022         	call	_tolower	;wreg free
  3828  0017C8  5007               	movf	?_tolower^0,w,c
  3829  0017CA  0100               	movlb	0	; () banked
  3830  0017CC  6FAC               	movwf	vfpfcnvrt@ct& (0+255),b
  3831  0017CE                     
  3832                           ; BSR set to: 0
  3833                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 780:         if (
      +                          ct[0]) {
  3834  0017CE  51AC               	movf	vfpfcnvrt@ct& (0+255),w,b
  3835  0017D0  B4D8               	btfsc	status,2,c
  3836  0017D2  EFED  F00B         	goto	u5941
  3837  0017D6  EFEF  F00B         	goto	u5940
  3838  0017DA                     u5941:
  3839  0017DA  EF41  F00C         	goto	l4488
  3840  0017DE                     u5940:
  3841  0017DE                     
  3842                           ; BSR set to: 0
  3843                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 781:             
      +                          ct[1] = (char)tolower((int)(*fmt)[1]);
  3844  0017DE  C045  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  3845  0017E2  C046  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  3846  0017E6  CFDE F049          	movff	postinc2,??_vfpfcnvrt
  3847  0017EA  CFDD F04A          	movff	postdec2,??_vfpfcnvrt+1
  3848  0017EE  0E01               	movlw	1
  3849  0017F0  2649               	addwf	??_vfpfcnvrt^0,f,c
  3850  0017F2  0E00               	movlw	0
  3851  0017F4  224A               	addwfc	(??_vfpfcnvrt+1)^0,f,c
  3852  0017F6  C049  FFF6         	movff	??_vfpfcnvrt,tblptrl
  3853  0017FA  C04A  FFF7         	movff	??_vfpfcnvrt+1,tblptrh
  3854  0017FE  6AF8               	clrf	tblptru,c
  3855  001800  0E07               	movlw	(high __ramtop+-1)
  3856  001802  64F7               	cpfsgt	tblptrh,c
  3857  001804  D003               	bra	u5957
  3858  001806  0008               	tblrd		*
  3859  001808  50F5               	movf	tablat,w,c
  3860  00180A  D005               	bra	u5950
  3861  00180C                     u5957:
  3862  00180C  CFF6 FFE1          	movff	tblptrl,fsr1l
  3863  001810  CFF7 FFE2          	movff	tblptrh,fsr1h
  3864  001814  50E7               	movf	indf1,w,c
  3865  001816                     u5950:
  3866  001816  6E4B               	movwf	(??_vfpfcnvrt+2)^0,c
  3867  001818  504B               	movf	(??_vfpfcnvrt+2)^0,w,c
  3868  00181A  6E07               	movwf	tolower@c^0,c
  3869  00181C  6A08               	clrf	(tolower@c+1)^0,c
  3870  00181E  EC81  F022         	call	_tolower	;wreg free
  3871  001822  5007               	movf	?_tolower^0,w,c
  3872  001824  0100               	movlb	0	; () banked
  3873  001826  6FAD               	movwf	(vfpfcnvrt@ct+1)& (0+255),b
  3874  001828                     
  3875                           ; BSR set to: 0
  3876                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 782:             
      +                          if (ct[1]) {
  3877  001828  51AD               	movf	(vfpfcnvrt@ct+1)& (0+255),w,b
  3878  00182A  B4D8               	btfsc	status,2,c
  3879  00182C  EF1A  F00C         	goto	u5961
  3880  001830  EF1C  F00C         	goto	u5960
  3881  001834                     u5961:
  3882  001834  EF41  F00C         	goto	l4488
  3883  001838                     u5960:
  3884  001838                     
  3885                           ; BSR set to: 0
  3886                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 783:             
      +                              ct[2] = (char)tolower((int)(*fmt)[2]);
  3887  001838  C045  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  3888  00183C  C046  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  3889  001840  CFDE F049          	movff	postinc2,??_vfpfcnvrt
  3890  001844  CFDD F04A          	movff	postdec2,??_vfpfcnvrt+1
  3891  001848  0E02               	movlw	2
  3892  00184A  2649               	addwf	??_vfpfcnvrt^0,f,c
  3893  00184C  0E00               	movlw	0
  3894  00184E  224A               	addwfc	(??_vfpfcnvrt+1)^0,f,c
  3895  001850  C049  FFF6         	movff	??_vfpfcnvrt,tblptrl
  3896  001854  C04A  FFF7         	movff	??_vfpfcnvrt+1,tblptrh
  3897  001858  6AF8               	clrf	tblptru,c
  3898  00185A  0E07               	movlw	(high __ramtop+-1)
  3899  00185C  64F7               	cpfsgt	tblptrh,c
  3900  00185E  D003               	bra	u5977
  3901  001860  0008               	tblrd		*
  3902  001862  50F5               	movf	tablat,w,c
  3903  001864  D005               	bra	u5970
  3904  001866                     u5977:
  3905  001866  CFF6 FFE1          	movff	tblptrl,fsr1l
  3906  00186A  CFF7 FFE2          	movff	tblptrh,fsr1h
  3907  00186E  50E7               	movf	indf1,w,c
  3908  001870                     u5970:
  3909  001870  6E4B               	movwf	(??_vfpfcnvrt+2)^0,c
  3910  001872  504B               	movf	(??_vfpfcnvrt+2)^0,w,c
  3911  001874  6E07               	movwf	tolower@c^0,c
  3912  001876  6A08               	clrf	(tolower@c+1)^0,c
  3913  001878  EC81  F022         	call	_tolower	;wreg free
  3914  00187C  5007               	movf	?_tolower^0,w,c
  3915  00187E  0100               	movlb	0	; () banked
  3916  001880  6FAE               	movwf	(vfpfcnvrt@ct+2)& (0+255),b
  3917  001882                     l4488:
  3918                           
  3919                           ; BSR set to: 0
  3920                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 814:         if (
      +                          *fmt[0] == 'c') {
  3921  001882  C045  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  3922  001886  C046  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  3923  00188A  CFDE FFF6          	movff	postinc2,tblptrl
  3924  00188E  CFDE FFF7          	movff	postinc2,tblptrh
  3925  001892  0E07               	movlw	(high __ramtop+-1)
  3926  001894  64F7               	cpfsgt	tblptrh,c
  3927  001896  D003               	bra	u5987
  3928  001898  0008               	tblrd		*
  3929  00189A  50F5               	movf	tablat,w,c
  3930  00189C  D005               	bra	u5980
  3931  00189E                     u5987:
  3932  00189E  CFF6 FFE1          	movff	tblptrl,fsr1l
  3933  0018A2  CFF7 FFE2          	movff	tblptrh,fsr1h
  3934  0018A6  50E7               	movf	indf1,w,c
  3935  0018A8                     u5980:
  3936  0018A8  0A63               	xorlw	99
  3937  0018AA  A4D8               	btfss	status,2,c
  3938  0018AC  EF5A  F00C         	goto	u5991
  3939  0018B0  EF5C  F00C         	goto	u5990
  3940  0018B4                     u5991:
  3941  0018B4  EF84  F00C         	goto	l4496
  3942  0018B8                     u5990:
  3943  0018B8                     
  3944                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 815:             
      +                          ++*fmt;
  3945  0018B8  C045  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  3946  0018BC  C046  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  3947  0018C0  2ADE               	incf	postinc2,f,c
  3948  0018C2  0E00               	movlw	0
  3949  0018C4  22DD               	addwfc	postdec2,f,c
  3950                           
  3951                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 816:             
      +                          c = (unsigned char)(*(int *)__va_arg(*(int **)ap, (int)0));
  3952  0018C6  C047  FFD9         	movff	vfpfcnvrt@ap,fsr2l
  3953  0018CA  C048  FFDA         	movff	vfpfcnvrt@ap+1,fsr2h
  3954  0018CE  CFDF F049          	movff	indf2,??_vfpfcnvrt
  3955  0018D2  0E02               	movlw	2
  3956  0018D4  26DE               	addwf	postinc2,f,c
  3957  0018D6  CFDF F04A          	movff	indf2,??_vfpfcnvrt+1
  3958  0018DA  0E00               	movlw	0
  3959  0018DC  22DD               	addwfc	postdec2,f,c
  3960  0018DE  C049  FFD9         	movff	??_vfpfcnvrt,fsr2l
  3961  0018E2  C04A  FFDA         	movff	??_vfpfcnvrt+1,fsr2h
  3962  0018E6  50DF               	movf	indf2,w,c
  3963  0018E8  0100               	movlb	0	; () banked
  3964  0018EA  6FAF               	movwf	vfpfcnvrt@c& (0+255),b
  3965  0018EC                     
  3966                           ; BSR set to: 0
  3967                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 817:             
      +                          return ctoa(fp, c);
  3968  0018EC  C043  F00D         	movff	vfpfcnvrt@fp,ctoa@fp
  3969  0018F0  C044  F00E         	movff	vfpfcnvrt@fp+1,ctoa@fp+1
  3970  0018F4  C0AF  F00F         	movff	vfpfcnvrt@c,ctoa@c
  3971  0018F8  EC92  F01E         	call	_ctoa	;wreg free
  3972  0018FC  C00D  F043         	movff	?_ctoa,?_vfpfcnvrt
  3973  001900  C00E  F044         	movff	?_ctoa+1,?_vfpfcnvrt+1
  3974  001904  EF9B  F00E         	goto	l1066
  3975  001908                     l4496:
  3976                           
  3977                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 847:         if (
      +                          (*fmt[0] == 'd') || (*fmt[0] == 'i')) {
  3978  001908  C045  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  3979  00190C  C046  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  3980  001910  CFDE FFF6          	movff	postinc2,tblptrl
  3981  001914  CFDE FFF7          	movff	postinc2,tblptrh
  3982  001918  0E07               	movlw	(high __ramtop+-1)
  3983  00191A  64F7               	cpfsgt	tblptrh,c
  3984  00191C  D003               	bra	u6007
  3985  00191E  0008               	tblrd		*
  3986  001920  50F5               	movf	tablat,w,c
  3987  001922  D005               	bra	u6000
  3988  001924                     u6007:
  3989  001924  CFF6 FFE1          	movff	tblptrl,fsr1l
  3990  001928  CFF7 FFE2          	movff	tblptrh,fsr1h
  3991  00192C  50E7               	movf	indf1,w,c
  3992  00192E                     u6000:
  3993  00192E  0A64               	xorlw	100
  3994  001930  B4D8               	btfsc	status,2,c
  3995  001932  EF9D  F00C         	goto	u6011
  3996  001936  EF9F  F00C         	goto	u6010
  3997  00193A                     u6011:
  3998  00193A  EFBA  F00C         	goto	l4500
  3999  00193E                     u6010:
  4000  00193E  C045  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  4001  001942  C046  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  4002  001946  CFDE FFF6          	movff	postinc2,tblptrl
  4003  00194A  CFDE FFF7          	movff	postinc2,tblptrh
  4004  00194E  0E07               	movlw	(high __ramtop+-1)
  4005  001950  64F7               	cpfsgt	tblptrh,c
  4006  001952  D003               	bra	u6027
  4007  001954  0008               	tblrd		*
  4008  001956  50F5               	movf	tablat,w,c
  4009  001958  D005               	bra	u6020
  4010  00195A                     u6027:
  4011  00195A  CFF6 FFE1          	movff	tblptrl,fsr1l
  4012  00195E  CFF7 FFE2          	movff	tblptrh,fsr1h
  4013  001962  50E7               	movf	indf1,w,c
  4014  001964                     u6020:
  4015  001964  0A69               	xorlw	105
  4016  001966  A4D8               	btfss	status,2,c
  4017  001968  EFB8  F00C         	goto	u6031
  4018  00196C  EFBA  F00C         	goto	u6030
  4019  001970                     u6031:
  4020  001970  EFFB  F00C         	goto	l4506
  4021  001974                     u6030:
  4022  001974                     l4500:
  4023                           
  4024                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 849:             
      +                          ++*fmt;
  4025  001974  C045  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  4026  001978  C046  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  4027  00197C  2ADE               	incf	postinc2,f,c
  4028  00197E  0E00               	movlw	0
  4029  001980  22DD               	addwfc	postdec2,f,c
  4030                           
  4031                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 850:             
      +                          ll = (long long)(*(int *)__va_arg(*(int **)ap, (int)0));
  4032  001982  C047  FFD9         	movff	vfpfcnvrt@ap,fsr2l
  4033  001986  C048  FFDA         	movff	vfpfcnvrt@ap+1,fsr2h
  4034  00198A  CFDF F049          	movff	indf2,??_vfpfcnvrt
  4035  00198E  0E02               	movlw	2
  4036  001990  26DE               	addwf	postinc2,f,c
  4037  001992  CFDF F04A          	movff	indf2,??_vfpfcnvrt+1
  4038  001996  0E00               	movlw	0
  4039  001998  22DD               	addwfc	postdec2,f,c
  4040  00199A  C049  FFD9         	movff	??_vfpfcnvrt,fsr2l
  4041  00199E  C04A  FFDA         	movff	??_vfpfcnvrt+1,fsr2h
  4042  0019A2  CFDE F098          	movff	postinc2,vfpfcnvrt@ll
  4043  0019A6  CFDD F099          	movff	postdec2,vfpfcnvrt@ll+1
  4044  0019AA  0100               	movlb	0	; () banked
  4045  0019AC  0E00               	movlw	0
  4046  0019AE  BF99               	btfsc	(vfpfcnvrt@ll+1)& (0+255),7,b
  4047  0019B0  0EFF               	movlw	-1
  4048  0019B2  6F9A               	movwf	(vfpfcnvrt@ll+2)& (0+255),b
  4049  0019B4  6F9B               	movwf	(vfpfcnvrt@ll+3)& (0+255),b
  4050  0019B6  6F9C               	movwf	(vfpfcnvrt@ll+4)& (0+255),b
  4051  0019B8  6F9D               	movwf	(vfpfcnvrt@ll+5)& (0+255),b
  4052  0019BA  6F9E               	movwf	(vfpfcnvrt@ll+6)& (0+255),b
  4053  0019BC  6F9F               	movwf	(vfpfcnvrt@ll+7)& (0+255),b
  4054  0019BE                     
  4055                           ; BSR set to: 0
  4056                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 852:             
      +                          return dtoa(fp, ll);
  4057  0019BE  C043  F01F         	movff	vfpfcnvrt@fp,dtoa@fp
  4058  0019C2  C044  F020         	movff	vfpfcnvrt@fp+1,dtoa@fp+1
  4059  0019C6  C098  F021         	movff	vfpfcnvrt@ll,dtoa@d
  4060  0019CA  C099  F022         	movff	vfpfcnvrt@ll+1,dtoa@d+1
  4061  0019CE  C09A  F023         	movff	vfpfcnvrt@ll+2,dtoa@d+2
  4062  0019D2  C09B  F024         	movff	vfpfcnvrt@ll+3,dtoa@d+3
  4063  0019D6  C09C  F025         	movff	vfpfcnvrt@ll+4,dtoa@d+4
  4064  0019DA  C09D  F026         	movff	vfpfcnvrt@ll+5,dtoa@d+5
  4065  0019DE  C09E  F027         	movff	vfpfcnvrt@ll+6,dtoa@d+6
  4066  0019E2  C09F  F028         	movff	vfpfcnvrt@ll+7,dtoa@d+7
  4067  0019E6  ECDE  F014         	call	_dtoa	;wreg free
  4068  0019EA  C01F  F043         	movff	?_dtoa,?_vfpfcnvrt
  4069  0019EE  C020  F044         	movff	?_dtoa+1,?_vfpfcnvrt+1
  4070  0019F2  EF9B  F00E         	goto	l1066
  4071  0019F6                     l4506:
  4072                           
  4073                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 942:         if (
      +                          ct[0] == 'f') {
  4074  0019F6  0E66               	movlw	102
  4075  0019F8  0100               	movlb	0	; () banked
  4076  0019FA  19AC               	xorwf	vfpfcnvrt@ct& (0+255),w,b
  4077  0019FC  A4D8               	btfss	status,2,c
  4078  0019FE  EF03  F00D         	goto	u6041
  4079  001A02  EF05  F00D         	goto	u6040
  4080  001A06                     u6041:
  4081  001A06  EF4F  F00D         	goto	l4518
  4082  001A0A                     u6040:
  4083  001A0A                     
  4084                           ; BSR set to: 0
  4085                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 944:             
      +                          c = (*fmt)[0];
  4086  001A0A  C045  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  4087  001A0E  C046  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  4088  001A12  CFDE FFF6          	movff	postinc2,tblptrl
  4089  001A16  CFDE FFF7          	movff	postinc2,tblptrh
  4090  001A1A  0E07               	movlw	(high __ramtop+-1)
  4091  001A1C  64F7               	cpfsgt	tblptrh,c
  4092  001A1E  D003               	bra	u6057
  4093  001A20  0008               	tblrd		*
  4094  001A22  50F5               	movf	tablat,w,c
  4095  001A24  D005               	bra	u6050
  4096  001A26                     u6057:
  4097  001A26  CFF6 FFE1          	movff	tblptrl,fsr1l
  4098  001A2A  CFF7 FFE2          	movff	tblptrh,fsr1h
  4099  001A2E  50E7               	movf	indf1,w,c
  4100  001A30                     u6050:
  4101  001A30  0100               	movlb	0	; () banked
  4102  001A32  6FAF               	movwf	vfpfcnvrt@c& (0+255),b
  4103  001A34                     
  4104                           ; BSR set to: 0
  4105                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 945:             
      +                          ++*fmt;
  4106  001A34  C045  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  4107  001A38  C046  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  4108  001A3C  2ADE               	incf	postinc2,f,c
  4109  001A3E  0E00               	movlw	0
  4110  001A40  22DD               	addwfc	postdec2,f,c
  4111  001A42                     
  4112                           ; BSR set to: 0
  4113                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 946:             
      +                          f = (long double)(*(double *)__va_arg(*(double **)ap, (double)0));
  4114  001A42  C047  FFD9         	movff	vfpfcnvrt@ap,fsr2l
  4115  001A46  C048  FFDA         	movff	vfpfcnvrt@ap+1,fsr2h
  4116  001A4A  CFDF F049          	movff	indf2,??_vfpfcnvrt
  4117  001A4E  0E04               	movlw	4
  4118  001A50  26DE               	addwf	postinc2,f,c
  4119  001A52  CFDF F04A          	movff	indf2,??_vfpfcnvrt+1
  4120  001A56  0E00               	movlw	0
  4121  001A58  22DD               	addwfc	postdec2,f,c
  4122  001A5A  C049  FFD9         	movff	??_vfpfcnvrt,fsr2l
  4123  001A5E  C04A  FFDA         	movff	??_vfpfcnvrt+1,fsr2h
  4124  001A62  CFDE F0A8          	movff	postinc2,vfpfcnvrt@f
  4125  001A66  CFDE F0A9          	movff	postinc2,vfpfcnvrt@f+1
  4126  001A6A  CFDE F0AA          	movff	postinc2,vfpfcnvrt@f+2
  4127  001A6E  CFDE F0AB          	movff	postinc2,vfpfcnvrt@f+3
  4128  001A72                     l4514:
  4129                           
  4130                           ; BSR set to: 0
  4131                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 948:             
      +                          return efgtoa(fp, f, c);
  4132  001A72  C043  F034         	movff	vfpfcnvrt@fp,efgtoa@fp
  4133  001A76  C044  F035         	movff	vfpfcnvrt@fp+1,efgtoa@fp+1
  4134  001A7A  C0A8  F036         	movff	vfpfcnvrt@f,efgtoa@f
  4135  001A7E  C0A9  F037         	movff	vfpfcnvrt@f+1,efgtoa@f+1
  4136  001A82  C0AA  F038         	movff	vfpfcnvrt@f+2,efgtoa@f+2
  4137  001A86  C0AB  F039         	movff	vfpfcnvrt@f+3,efgtoa@f+3
  4138  001A8A  C0AF  F03A         	movff	vfpfcnvrt@c,efgtoa@c
  4139  001A8E  EC34  F004         	call	_efgtoa	;wreg free
  4140  001A92  C034  F043         	movff	?_efgtoa,?_vfpfcnvrt
  4141  001A96  C035  F044         	movff	?_efgtoa+1,?_vfpfcnvrt+1
  4142  001A9A  EF9B  F00E         	goto	l1066
  4143  001A9E                     l4518:
  4144                           
  4145                           ; BSR set to: 0
  4146                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 950:         if (
      +                          !strncmp(ct, "lf", ((sizeof("lf")/sizeof("lf"[0]))-1))) {
  4147  001A9E  0EAC               	movlw	low vfpfcnvrt@ct
  4148  001AA0  6E01               	movwf	strncmp@_l^0,c
  4149  001AA2  0E00               	movlw	high vfpfcnvrt@ct
  4150  001AA4  6E02               	movwf	(strncmp@_l+1)^0,c
  4151  001AA6  0E63               	movlw	low STR_13
  4152  001AA8  6E03               	movwf	strncmp@_r^0,c
  4153  001AAA  0E08               	movlw	high STR_13
  4154  001AAC  6E04               	movwf	(strncmp@_r+1)^0,c
  4155  001AAE  0E00               	movlw	0
  4156  001AB0  6E06               	movwf	(strncmp@n+1)^0,c
  4157  001AB2  0E02               	movlw	2
  4158  001AB4  6E05               	movwf	strncmp@n^0,c
  4159  001AB6  ECFE  F01E         	call	_strncmp	;wreg free
  4160  001ABA  5001               	movf	?_strncmp^0,w,c
  4161  001ABC  1002               	iorwf	(?_strncmp+1)^0,w,c
  4162  001ABE  A4D8               	btfss	status,2,c
  4163  001AC0  EF64  F00D         	goto	u6061
  4164  001AC4  EF66  F00D         	goto	u6060
  4165  001AC8                     u6061:
  4166  001AC8  EFF6  F00D         	goto	l4534
  4167  001ACC                     u6060:
  4168  001ACC                     
  4169                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 953:             
      +                          if ((0 ? isupper((int)(*fmt)[0]) : ((unsigned)((int)(*fmt)[0])-'A') < 26)) {
  4170  001ACC  C045  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  4171  001AD0  C046  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  4172  001AD4  CFDE F049          	movff	postinc2,??_vfpfcnvrt
  4173  001AD8  CFDD F04A          	movff	postdec2,??_vfpfcnvrt+1
  4174  001ADC  0E01               	movlw	1
  4175  001ADE  2649               	addwf	??_vfpfcnvrt^0,f,c
  4176  001AE0  0E00               	movlw	0
  4177  001AE2  224A               	addwfc	(??_vfpfcnvrt+1)^0,f,c
  4178  001AE4  C049  FFF6         	movff	??_vfpfcnvrt,tblptrl
  4179  001AE8  C04A  FFF7         	movff	??_vfpfcnvrt+1,tblptrh
  4180  001AEC  6AF8               	clrf	tblptru,c
  4181  001AEE  0E07               	movlw	(high __ramtop+-1)
  4182  001AF0  64F7               	cpfsgt	tblptrh,c
  4183  001AF2  D003               	bra	u6077
  4184  001AF4  0008               	tblrd		*
  4185  001AF6  50F5               	movf	tablat,w,c
  4186  001AF8  D005               	bra	u6070
  4187  001AFA                     u6077:
  4188  001AFA  CFF6 FFE1          	movff	tblptrl,fsr1l
  4189  001AFE  CFF7 FFE2          	movff	tblptrh,fsr1h
  4190  001B02  50E7               	movf	indf1,w,c
  4191  001B04                     u6070:
  4192  001B04  0100               	movlb	0	; () banked
  4193  001B06  6FAF               	movwf	vfpfcnvrt@c& (0+255),b
  4194  001B08  0EBF               	movlw	191
  4195  001B0A  6E49               	movwf	??_vfpfcnvrt^0,c
  4196  001B0C  0EFF               	movlw	255
  4197  001B0E  6E4A               	movwf	(??_vfpfcnvrt+1)^0,c
  4198  001B10  C045  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  4199  001B14  C046  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  4200  001B18  CFDE FFF6          	movff	postinc2,tblptrl
  4201  001B1C  CFDE FFF7          	movff	postinc2,tblptrh
  4202  001B20  0E07               	movlw	(high __ramtop+-1)
  4203  001B22  64F7               	cpfsgt	tblptrh,c
  4204  001B24  D003               	bra	u6087
  4205  001B26  0008               	tblrd		*
  4206  001B28  50F5               	movf	tablat,w,c
  4207  001B2A  D005               	bra	u6080
  4208  001B2C                     u6087:
  4209  001B2C  CFF6 FFE1          	movff	tblptrl,fsr1l
  4210  001B30  CFF7 FFE2          	movff	tblptrh,fsr1h
  4211  001B34  50E7               	movf	indf1,w,c
  4212  001B36                     u6080:
  4213  001B36  6E4B               	movwf	(??_vfpfcnvrt+2)^0,c
  4214  001B38  6A4C               	clrf	(??_vfpfcnvrt+3)^0,c
  4215  001B3A  5049               	movf	??_vfpfcnvrt^0,w,c
  4216  001B3C  264B               	addwf	(??_vfpfcnvrt+2)^0,f,c
  4217  001B3E  504A               	movf	(??_vfpfcnvrt+1)^0,w,c
  4218  001B40  224C               	addwfc	(??_vfpfcnvrt+3)^0,f,c
  4219  001B42  504C               	movf	(??_vfpfcnvrt+3)^0,w,c
  4220  001B44  E10A               	bnz	u6090
  4221  001B46  0E1A               	movlw	26
  4222  001B48  5C4B               	subwf	(??_vfpfcnvrt+2)^0,w,c
  4223  001B4A  A0D8               	btfss	status,0,c
  4224  001B4C  EFAA  F00D         	goto	u6091
  4225  001B50  EFAD  F00D         	goto	u6090
  4226  001B54                     u6091:
  4227  001B54  0E01               	movlw	1
  4228  001B56  EFAE  F00D         	goto	u6100
  4229  001B5A                     u6090:
  4230  001B5A  0E00               	movlw	0
  4231  001B5C                     u6100:
  4232  001B5C  0100               	movlb	0	; () banked
  4233  001B5E  6FA6               	movwf	_vfpfcnvrt$1264& (0+255),b
  4234  001B60  6BA7               	clrf	(_vfpfcnvrt$1264+1)& (0+255),b
  4235  001B62                     
  4236                           ; BSR set to: 0
  4237  001B62  51A6               	movf	_vfpfcnvrt$1264& (0+255),w,b
  4238  001B64  11A7               	iorwf	(_vfpfcnvrt$1264+1)& (0+255),w,b
  4239  001B66  B4D8               	btfsc	status,2,c
  4240  001B68  EFB8  F00D         	goto	u6111
  4241  001B6C  EFBA  F00D         	goto	u6110
  4242  001B70                     u6111:
  4243  001B70  EFD4  F00D         	goto	l4528
  4244  001B74                     u6110:
  4245  001B74                     
  4246                           ; BSR set to: 0
  4247                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 954:             
      +                              f = (*(long double *)__va_arg(*(long double **)ap, (long double)0));
  4248  001B74  C047  FFD9         	movff	vfpfcnvrt@ap,fsr2l
  4249  001B78  C048  FFDA         	movff	vfpfcnvrt@ap+1,fsr2h
  4250  001B7C  CFDF F049          	movff	indf2,??_vfpfcnvrt
  4251  001B80  0E04               	movlw	4
  4252  001B82  26DE               	addwf	postinc2,f,c
  4253  001B84  CFDF F04A          	movff	indf2,??_vfpfcnvrt+1
  4254  001B88  0E00               	movlw	0
  4255  001B8A  22DD               	addwfc	postdec2,f,c
  4256  001B8C  C049  FFD9         	movff	??_vfpfcnvrt,fsr2l
  4257  001B90  C04A  FFDA         	movff	??_vfpfcnvrt+1,fsr2h
  4258  001B94  CFDE F0A8          	movff	postinc2,vfpfcnvrt@f
  4259  001B98  CFDE F0A9          	movff	postinc2,vfpfcnvrt@f+1
  4260  001B9C  CFDE F0AA          	movff	postinc2,vfpfcnvrt@f+2
  4261  001BA0  CFDE F0AB          	movff	postinc2,vfpfcnvrt@f+3
  4262                           
  4263                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 955:             
      +                          } else {
  4264  001BA4  EFEC  F00D         	goto	l1077
  4265  001BA8                     l4528:
  4266                           
  4267                           ; BSR set to: 0
  4268                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 956:             
      +                              f = (long double)(*(double *)__va_arg(*(double **)ap, (double)0));
  4269  001BA8  C047  FFD9         	movff	vfpfcnvrt@ap,fsr2l
  4270  001BAC  C048  FFDA         	movff	vfpfcnvrt@ap+1,fsr2h
  4271  001BB0  CFDF F049          	movff	indf2,??_vfpfcnvrt
  4272  001BB4  0E04               	movlw	4
  4273  001BB6  26DE               	addwf	postinc2,f,c
  4274  001BB8  CFDF F04A          	movff	indf2,??_vfpfcnvrt+1
  4275  001BBC  0E00               	movlw	0
  4276  001BBE  22DD               	addwfc	postdec2,f,c
  4277  001BC0  C049  FFD9         	movff	??_vfpfcnvrt,fsr2l
  4278  001BC4  C04A  FFDA         	movff	??_vfpfcnvrt+1,fsr2h
  4279  001BC8  CFDE F0A8          	movff	postinc2,vfpfcnvrt@f
  4280  001BCC  CFDE F0A9          	movff	postinc2,vfpfcnvrt@f+1
  4281  001BD0  CFDE F0AA          	movff	postinc2,vfpfcnvrt@f+2
  4282  001BD4  CFDE F0AB          	movff	postinc2,vfpfcnvrt@f+3
  4283  001BD8                     l1077:
  4284                           
  4285                           ; BSR set to: 0
  4286                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 958:             
      +                          *fmt += ((sizeof("lf")/sizeof("lf"[0]))-1);
  4287  001BD8  0E02               	movlw	2
  4288  001BDA  C045  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  4289  001BDE  C046  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  4290  001BE2  26DE               	addwf	postinc2,f,c
  4291  001BE4  0E00               	movlw	0
  4292  001BE6  22DD               	addwfc	postdec2,f,c
  4293  001BE8  EF39  F00D         	goto	l4514
  4294  001BEC                     l4534:
  4295                           
  4296                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 1099:         if 
      +                          (*fmt[0] == 'n') {
  4297  001BEC  C045  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  4298  001BF0  C046  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  4299  001BF4  CFDE FFF6          	movff	postinc2,tblptrl
  4300  001BF8  CFDE FFF7          	movff	postinc2,tblptrh
  4301  001BFC  0E07               	movlw	(high __ramtop+-1)
  4302  001BFE  64F7               	cpfsgt	tblptrh,c
  4303  001C00  D003               	bra	u6127
  4304  001C02  0008               	tblrd		*
  4305  001C04  50F5               	movf	tablat,w,c
  4306  001C06  D005               	bra	u6120
  4307  001C08                     u6127:
  4308  001C08  CFF6 FFE1          	movff	tblptrl,fsr1l
  4309  001C0C  CFF7 FFE2          	movff	tblptrh,fsr1h
  4310  001C10  50E7               	movf	indf1,w,c
  4311  001C12                     u6120:
  4312  001C12  0A6E               	xorlw	110
  4313  001C14  A4D8               	btfss	status,2,c
  4314  001C16  EF0F  F00E         	goto	u6131
  4315  001C1A  EF11  F00E         	goto	u6130
  4316  001C1E                     u6131:
  4317  001C1E  EF3A  F00E         	goto	l4544
  4318  001C22                     u6130:
  4319  001C22                     
  4320                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 1100:            
      +                           ++*fmt;
  4321  001C22  C045  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  4322  001C26  C046  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  4323  001C2A  2ADE               	incf	postinc2,f,c
  4324  001C2C  0E00               	movlw	0
  4325  001C2E  22DD               	addwfc	postdec2,f,c
  4326                           
  4327                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 1101:            
      +                           vp = (void *)(*(int * *)__va_arg(*(int * **)ap, (int *)0));
  4328  001C30  C047  FFD9         	movff	vfpfcnvrt@ap,fsr2l
  4329  001C34  C048  FFDA         	movff	vfpfcnvrt@ap+1,fsr2h
  4330  001C38  CFDF F049          	movff	indf2,??_vfpfcnvrt
  4331  001C3C  0E02               	movlw	2
  4332  001C3E  26DE               	addwf	postinc2,f,c
  4333  001C40  CFDF F04A          	movff	indf2,??_vfpfcnvrt+1
  4334  001C44  0E00               	movlw	0
  4335  001C46  22DD               	addwfc	postdec2,f,c
  4336  001C48  C049  FFD9         	movff	??_vfpfcnvrt,fsr2l
  4337  001C4C  C04A  FFDA         	movff	??_vfpfcnvrt+1,fsr2h
  4338  001C50  CFDE F0A0          	movff	postinc2,vfpfcnvrt@vp
  4339  001C54  CFDD F0A1          	movff	postdec2,vfpfcnvrt@vp+1
  4340  001C58                     
  4341                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 1102:            
      +                           *(int *)vp = nout;
  4342  001C58  C0A0  FFD9         	movff	vfpfcnvrt@vp,fsr2l
  4343  001C5C  C0A1  FFDA         	movff	vfpfcnvrt@vp+1,fsr2h
  4344  001C60  C0D0  FFDE         	movff	_nout,postinc2
  4345  001C64  C0D1  FFDD         	movff	_nout+1,postdec2
  4346  001C68                     l4540:
  4347                           
  4348                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 1103:            
      +                           return 0;
  4349  001C68  0E00               	movlw	0
  4350  001C6A  6E44               	movwf	(?_vfpfcnvrt+1)^0,c
  4351  001C6C  0E00               	movlw	0
  4352  001C6E  6E43               	movwf	?_vfpfcnvrt^0,c
  4353  001C70  EF9B  F00E         	goto	l1066
  4354  001C74                     l4544:
  4355                           
  4356                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 1372:         if 
      +                          ((*fmt)[0] == '%') {
  4357  001C74  C045  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  4358  001C78  C046  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  4359  001C7C  CFDE FFF6          	movff	postinc2,tblptrl
  4360  001C80  CFDE FFF7          	movff	postinc2,tblptrh
  4361  001C84  0E07               	movlw	(high __ramtop+-1)
  4362  001C86  64F7               	cpfsgt	tblptrh,c
  4363  001C88  D003               	bra	u6147
  4364  001C8A  0008               	tblrd		*
  4365  001C8C  50F5               	movf	tablat,w,c
  4366  001C8E  D005               	bra	u6140
  4367  001C90                     u6147:
  4368  001C90  CFF6 FFE1          	movff	tblptrl,fsr1l
  4369  001C94  CFF7 FFE2          	movff	tblptrh,fsr1h
  4370  001C98  50E7               	movf	indf1,w,c
  4371  001C9A                     u6140:
  4372  001C9A  0A25               	xorlw	37
  4373  001C9C  A4D8               	btfss	status,2,c
  4374  001C9E  EF53  F00E         	goto	u6151
  4375  001CA2  EF55  F00E         	goto	u6150
  4376  001CA6                     u6151:
  4377  001CA6  EF6C  F00E         	goto	l4554
  4378  001CAA                     u6150:
  4379  001CAA                     
  4380                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 1373:            
      +                           ++*fmt;
  4381  001CAA  C045  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  4382  001CAE  C046  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  4383  001CB2  2ADE               	incf	postinc2,f,c
  4384  001CB4  0E00               	movlw	0
  4385  001CB6  22DD               	addwfc	postdec2,f,c
  4386  001CB8                     
  4387                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 1374:            
      +                           fputc((int)'%', fp);
  4388  001CB8  0E00               	movlw	0
  4389  001CBA  6E05               	movwf	(fputc@c+1)^0,c
  4390  001CBC  0E25               	movlw	37
  4391  001CBE  6E04               	movwf	fputc@c^0,c
  4392  001CC0  C043  F006         	movff	vfpfcnvrt@fp,fputc@fp
  4393  001CC4  C044  F007         	movff	vfpfcnvrt@fp+1,fputc@fp+1
  4394  001CC8  EC69  F01F         	call	_fputc	;wreg free
  4395  001CCC                     l4550:
  4396                           
  4397                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 1375:            
      +                           return 1;
  4398  001CCC  0E00               	movlw	0
  4399  001CCE  6E44               	movwf	(?_vfpfcnvrt+1)^0,c
  4400  001CD0  0E01               	movlw	1
  4401  001CD2  6E43               	movwf	?_vfpfcnvrt^0,c
  4402  001CD4  EF9B  F00E         	goto	l1066
  4403  001CD8                     l4554:
  4404                           
  4405                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 1379:         ++*
      +                          fmt;
  4406  001CD8  C045  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  4407  001CDC  C046  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  4408  001CE0  2ADE               	incf	postinc2,f,c
  4409  001CE2  0E00               	movlw	0
  4410  001CE4  22DD               	addwfc	postdec2,f,c
  4411  001CE6  EF34  F00E         	goto	l4540
  4412  001CEA                     l4560:
  4413                           
  4414                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 1384:     fputc((
      +                          int)(*fmt)[0], fp);
  4415  001CEA  C045  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  4416  001CEE  C046  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  4417  001CF2  CFDE FFF6          	movff	postinc2,tblptrl
  4418  001CF6  CFDE FFF7          	movff	postinc2,tblptrh
  4419  001CFA  0E07               	movlw	(high __ramtop+-1)
  4420  001CFC  64F7               	cpfsgt	tblptrh,c
  4421  001CFE  D003               	bra	u6167
  4422  001D00  0008               	tblrd		*
  4423  001D02  50F5               	movf	tablat,w,c
  4424  001D04  D005               	bra	u6160
  4425  001D06                     u6167:
  4426  001D06  CFF6 FFE1          	movff	tblptrl,fsr1l
  4427  001D0A  CFF7 FFE2          	movff	tblptrh,fsr1h
  4428  001D0E  50E7               	movf	indf1,w,c
  4429  001D10                     u6160:
  4430  001D10  6E49               	movwf	??_vfpfcnvrt^0,c
  4431  001D12  5049               	movf	??_vfpfcnvrt^0,w,c
  4432  001D14  6E04               	movwf	fputc@c^0,c
  4433  001D16  6A05               	clrf	(fputc@c+1)^0,c
  4434  001D18  C043  F006         	movff	vfpfcnvrt@fp,fputc@fp
  4435  001D1C  C044  F007         	movff	vfpfcnvrt@fp+1,fputc@fp+1
  4436  001D20  EC69  F01F         	call	_fputc	;wreg free
  4437  001D24                     
  4438                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 1385:     ++*fmt;
  4439  001D24  C045  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  4440  001D28  C046  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  4441  001D2C  2ADE               	incf	postinc2,f,c
  4442  001D2E  0E00               	movlw	0
  4443  001D30  22DD               	addwfc	postdec2,f,c
  4444  001D32  EF66  F00E         	goto	l4550
  4445  001D36                     l1066:
  4446  001D36  0012               	return		;funcret
  4447  001D38                     __end_of_vfpfcnvrt:
  4448                           	callstack 0
  4449                           
  4450 ;; *************** function _strncmp *****************
  4451 ;; Defined at:
  4452 ;;		line 3 in file "C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\strncmp.c"
  4453 ;; Parameters:    Size  Location     Type
  4454 ;;  _l              2    0[COMRAM] PTR const unsigned char 
  4455 ;;		 -> vfpfcnvrt@ct(3), 
  4456 ;;  _r              2    2[COMRAM] PTR const unsigned char 
  4457 ;;		 -> STR_15(3), 
  4458 ;;  n               2    4[COMRAM] unsigned int 
  4459 ;; Auto vars:     Size  Location     Type
  4460 ;;  r               2    9[COMRAM] PTR const unsigned char 
  4461 ;;		 -> STR_15(3), 
  4462 ;;  l               2    7[COMRAM] PTR const unsigned char 
  4463 ;;		 -> vfpfcnvrt@ct(3), 
  4464 ;; Return value:  Size  Location     Type
  4465 ;;                  2    0[COMRAM] int 
  4466 ;; Registers used:
  4467 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru
  4468 ;; Tracked objects:
  4469 ;;		On entry : 0/0
  4470 ;;		On exit  : 0/0
  4471 ;;		Unchanged: 0/0
  4472 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  4473 ;;      Params:         6       0       0       0       0       0       0       0       0
  4474 ;;      Locals:         4       0       0       0       0       0       0       0       0
  4475 ;;      Temps:          1       0       0       0       0       0       0       0       0
  4476 ;;      Totals:        11       0       0       0       0       0       0       0       0
  4477 ;;Total ram usage:       11 bytes
  4478 ;; Hardware stack levels used:    1
  4479 ;; This function calls:
  4480 ;;		Nothing
  4481 ;; This function is called by:
  4482 ;;		_vfpfcnvrt
  4483 ;; This function uses a non-reentrant model
  4484 ;;
  4485                           
  4486                           	psect	text19
  4487  003DFC                     __ptext19:
  4488                           	callstack 0
  4489  003DFC                     _strncmp:
  4490                           	callstack 26
  4491  003DFC  C001  F008         	movff	strncmp@_l,strncmp@l
  4492  003E00  C002  F009         	movff	strncmp@_l+1,strncmp@l+1
  4493  003E04  C003  F00A         	movff	strncmp@_r,strncmp@r
  4494  003E08  C004  F00B         	movff	strncmp@_r+1,strncmp@r+1
  4495  003E0C  0605               	decf	strncmp@n^0,f,c
  4496  003E0E  A0D8               	btfss	status,0,c
  4497  003E10  0606               	decf	(strncmp@n+1)^0,f,c
  4498  003E12  2805               	incf	strncmp@n^0,w,c
  4499  003E14  E106               	bnz	u5711
  4500  003E16  2806               	incf	(strncmp@n+1)^0,w,c
  4501  003E18  A4D8               	btfss	status,2,c
  4502  003E1A  EF11  F01F         	goto	u5711
  4503  003E1E  EF13  F01F         	goto	u5710
  4504  003E22                     u5711:
  4505  003E22  EF20  F01F         	goto	l4420
  4506  003E26                     u5710:
  4507  003E26  0E00               	movlw	0
  4508  003E28  6E02               	movwf	(?_strncmp+1)^0,c
  4509  003E2A  0E00               	movlw	0
  4510  003E2C  6E01               	movwf	?_strncmp^0,c
  4511  003E2E  EF68  F01F         	goto	l1210
  4512  003E32                     l4418:
  4513  003E32  4A08               	infsnz	strncmp@l^0,f,c
  4514  003E34  2A09               	incf	(strncmp@l+1)^0,f,c
  4515  003E36  4A0A               	infsnz	strncmp@r^0,f,c
  4516  003E38  2A0B               	incf	(strncmp@r+1)^0,f,c
  4517  003E3A  0605               	decf	strncmp@n^0,f,c
  4518  003E3C  A0D8               	btfss	status,0,c
  4519  003E3E  0606               	decf	(strncmp@n+1)^0,f,c
  4520  003E40                     l4420:
  4521  003E40  C008  FFD9         	movff	strncmp@l,fsr2l
  4522  003E44  C009  FFDA         	movff	strncmp@l+1,fsr2h
  4523  003E48  50DF               	movf	indf2,w,c
  4524  003E4A  B4D8               	btfsc	status,2,c
  4525  003E4C  EF2A  F01F         	goto	u5721
  4526  003E50  EF2C  F01F         	goto	u5720
  4527  003E54                     u5721:
  4528  003E54  EF57  F01F         	goto	l4428
  4529  003E58                     u5720:
  4530  003E58  C00A  FFF6         	movff	strncmp@r,tblptrl
  4531  003E5C  C00B  FFF7         	movff	strncmp@r+1,tblptrh
  4532  003E60                     	if	0	;tblptru may be non-zero
  4533  003E60                     	endif
  4534  003E60                     	if	0	;tblptru may be non-zero
  4535  003E60                     	endif
  4536  003E60  0008               	tblrd		*
  4537  003E62  50F5               	movf	tablat,w,c
  4538  003E64  0900               	iorlw	0
  4539  003E66  B4D8               	btfsc	status,2,c
  4540  003E68  EF38  F01F         	goto	u5731
  4541  003E6C  EF3A  F01F         	goto	u5730
  4542  003E70                     u5731:
  4543  003E70  EF57  F01F         	goto	l4428
  4544  003E74                     u5730:
  4545  003E74  5005               	movf	strncmp@n^0,w,c
  4546  003E76  1006               	iorwf	(strncmp@n+1)^0,w,c
  4547  003E78  B4D8               	btfsc	status,2,c
  4548  003E7A  EF41  F01F         	goto	u5741
  4549  003E7E  EF43  F01F         	goto	u5740
  4550  003E82                     u5741:
  4551  003E82  EF57  F01F         	goto	l4428
  4552  003E86                     u5740:
  4553  003E86  C008  FFD9         	movff	strncmp@l,fsr2l
  4554  003E8A  C009  FFDA         	movff	strncmp@l+1,fsr2h
  4555  003E8E  50DF               	movf	indf2,w,c
  4556  003E90  6E07               	movwf	??_strncmp^0,c
  4557  003E92  C00A  FFF6         	movff	strncmp@r,tblptrl
  4558  003E96  C00B  FFF7         	movff	strncmp@r+1,tblptrh
  4559  003E9A                     	if	0	;tblptru may be non-zero
  4560  003E9A                     	endif
  4561  003E9A                     	if	0	;tblptru may be non-zero
  4562  003E9A                     	endif
  4563  003E9A  0008               	tblrd		*
  4564  003E9C  50F5               	movf	tablat,w,c
  4565  003E9E  1807               	xorwf	??_strncmp^0,w,c
  4566  003EA0  B4D8               	btfsc	status,2,c
  4567  003EA2  EF55  F01F         	goto	u5751
  4568  003EA6  EF57  F01F         	goto	u5750
  4569  003EAA                     u5751:
  4570  003EAA  EF19  F01F         	goto	l4418
  4571  003EAE                     u5750:
  4572  003EAE                     l4428:
  4573  003EAE  C008  FFD9         	movff	strncmp@l,fsr2l
  4574  003EB2  C009  FFDA         	movff	strncmp@l+1,fsr2h
  4575  003EB6  50DF               	movf	indf2,w,c
  4576  003EB8  6E07               	movwf	??_strncmp^0,c
  4577  003EBA  C00A  FFF6         	movff	strncmp@r,tblptrl
  4578  003EBE  C00B  FFF7         	movff	strncmp@r+1,tblptrh
  4579  003EC2                     	if	0	;tblptru may be non-zero
  4580  003EC2                     	endif
  4581  003EC2                     	if	0	;tblptru may be non-zero
  4582  003EC2                     	endif
  4583  003EC2  0008               	tblrd		*
  4584  003EC4  50F5               	movf	tablat,w,c
  4585  003EC6  5C07               	subwf	??_strncmp^0,w,c
  4586  003EC8  6E01               	movwf	?_strncmp^0,c
  4587  003ECA  6A02               	clrf	(?_strncmp+1)^0,c
  4588  003ECC  A0D8               	btfss	status,0,c
  4589  003ECE  0602               	decf	(?_strncmp+1)^0,f,c
  4590  003ED0                     l1210:
  4591  003ED0  0012               	return		;funcret
  4592  003ED2                     __end_of_strncmp:
  4593                           	callstack 0
  4594                           
  4595 ;; *************** function _efgtoa *****************
  4596 ;; Defined at:
  4597 ;;		line 332 in file "C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c"
  4598 ;; Parameters:    Size  Location     Type
  4599 ;;  fp              2   51[COMRAM] PTR struct _IO_FILE
  4600 ;;		 -> NULL(0), sprintf@f(6), 
  4601 ;;  f               4   53[COMRAM] PTR struct _IO_FILE
  4602 ;;  c               1   57[COMRAM] unsigned char 
  4603 ;; Auto vars:     Size  Location     Type
  4604 ;;  u               4   52[BANK0 ] unsigned char 
  4605 ;;  g               4   44[BANK0 ] unsigned char 
  4606 ;;  l               4   38[BANK0 ] unsigned char 
  4607 ;;  h               4   34[BANK0 ] unsigned char 
  4608 ;;  ou              4   20[BANK0 ] unsigned char 
  4609 ;;  n               2   50[BANK0 ] int 
  4610 ;;  e               2   48[BANK0 ] int 
  4611 ;;  i               2   42[BANK0 ] int 
  4612 ;;  w               2   30[BANK0 ] int 
  4613 ;;  p               2   28[BANK0 ] int 
  4614 ;;  sign            2   26[BANK0 ] int 
  4615 ;;  d               2   24[BANK0 ] int 
  4616 ;;  m               2   18[BANK0 ] int 
  4617 ;;  ne              2   16[BANK0 ] int 
  4618 ;;  pp              2   14[BANK0 ] int 
  4619 ;;  t               2   12[BANK0 ] int 
  4620 ;;  mode            1   33[BANK0 ] unsigned char 
  4621 ;;  nmode           1   32[BANK0 ] unsigned char 
  4622 ;; Return value:  Size  Location     Type
  4623 ;;                  2   51[COMRAM] int 
  4624 ;; Registers used:
  4625 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  4626 ;; Tracked objects:
  4627 ;;		On entry : 0/0
  4628 ;;		On exit  : 0/0
  4629 ;;		Unchanged: 0/0
  4630 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  4631 ;;      Params:         7       0       0       0       0       0       0       0       0
  4632 ;;      Locals:         0      56       0       0       0       0       0       0       0
  4633 ;;      Temps:          5       0       0       0       0       0       0       0       0
  4634 ;;      Totals:        12      56       0       0       0       0       0       0       0
  4635 ;;Total ram usage:       68 bytes
  4636 ;; Hardware stack levels used:    1
  4637 ;; Hardware stack levels required when called:    4
  4638 ;; This function calls:
  4639 ;;		___awdiv
  4640 ;;		___awmod
  4641 ;;		___fladd
  4642 ;;		___fldiv
  4643 ;;		___fleq
  4644 ;;		___flge
  4645 ;;		___flmul
  4646 ;;		___flneg
  4647 ;;		___flsub
  4648 ;;		___fltol
  4649 ;;		___fpclassifyf
  4650 ;;		_floorf
  4651 ;;		_isupper
  4652 ;;		_pad
  4653 ;;		_strcpy
  4654 ;;		_tolower
  4655 ;; This function is called by:
  4656 ;;		_vfpfcnvrt
  4657 ;; This function uses a non-reentrant model
  4658 ;;
  4659                           
  4660                           	psect	text20
  4661  000868                     __ptext20:
  4662                           	callstack 0
  4663  000868                     _efgtoa:
  4664                           	callstack 22
  4665  000868                     
  4666                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 332: static int e
      +                          fgtoa(FILE *fp, long double f, char c);C:\Program Files\Microchip\xc8\v2.31\pic\sources\
      +                          c99\common\doprnt.c: 333: {;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\
      +                          doprnt.c: 334:     char mode, nmode;;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c9
      +                          9\common\doprnt.c: 335:     int d, e, i, m, n, ne, p, pp, sign, t, w;;C:\Program Files\M
      +                          icrochip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 336:     long double g, h, l, ou, u;
  4667  000868  0E00               	movlw	0
  4668  00086A  0100               	movlb	0	; () banked
  4669  00086C  6F7B               	movwf	(efgtoa@sign+1)& (0+255),b
  4670  00086E  0E00               	movlw	0
  4671  000870  6F7A               	movwf	efgtoa@sign& (0+255),b
  4672  000872                     
  4673                           ; BSR set to: 0
  4674                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 340:     g = f;
  4675  000872  C036  F08C         	movff	efgtoa@f,efgtoa@g
  4676  000876  C037  F08D         	movff	efgtoa@f+1,efgtoa@g+1
  4677  00087A  C038  F08E         	movff	efgtoa@f+2,efgtoa@g+2
  4678  00087E  C039  F08F         	movff	efgtoa@f+3,efgtoa@g+3
  4679  000882                     
  4680                           ; BSR set to: 0
  4681                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 341:     if (g < 
      +                          0.0) {
  4682  000882  BF8F               	btfsc	(efgtoa@g+3)& (0+255),7,b
  4683  000884  EF48  F004         	goto	u5050
  4684  000888  EF46  F004         	goto	u5051
  4685  00088C                     u5051:
  4686  00088C  EF5E  F004         	goto	l4072
  4687  000890                     u5050:
  4688  000890                     
  4689                           ; BSR set to: 0
  4690                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 342:         sign
      +                           = 1;
  4691  000890  0E00               	movlw	0
  4692  000892  6F7B               	movwf	(efgtoa@sign+1)& (0+255),b
  4693  000894  0E01               	movlw	1
  4694  000896  6F7A               	movwf	efgtoa@sign& (0+255),b
  4695  000898                     
  4696                           ; BSR set to: 0
  4697                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 343:         g = 
      +                          -g;
  4698  000898  C08C  F001         	movff	efgtoa@g,___flneg@f1
  4699  00089C  C08D  F002         	movff	efgtoa@g+1,___flneg@f1+1
  4700  0008A0  C08E  F003         	movff	efgtoa@g+2,___flneg@f1+2
  4701  0008A4  C08F  F004         	movff	efgtoa@g+3,___flneg@f1+3
  4702  0008A8  EC18  F024         	call	___flneg	;wreg free
  4703  0008AC  C001  F08C         	movff	?___flneg,efgtoa@g
  4704  0008B0  C002  F08D         	movff	?___flneg+1,efgtoa@g+1
  4705  0008B4  C003  F08E         	movff	?___flneg+2,efgtoa@g+2
  4706  0008B8  C004  F08F         	movff	?___flneg+3,efgtoa@g+3
  4707  0008BC                     l4072:
  4708                           
  4709                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 347:     n = 0;
  4710  0008BC  0E00               	movlw	0
  4711  0008BE  0100               	movlb	0	; () banked
  4712  0008C0  6F93               	movwf	(efgtoa@n+1)& (0+255),b
  4713  0008C2  0E00               	movlw	0
  4714  0008C4  6F92               	movwf	efgtoa@n& (0+255),b
  4715  0008C6                     
  4716                           ; BSR set to: 0
  4717                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 348:     w = widt
      +                          h;
  4718  0008C6  C0D2  F07E         	movff	_width,efgtoa@w
  4719  0008CA  C0D3  F07F         	movff	_width+1,efgtoa@w+1
  4720  0008CE                     
  4721                           ; BSR set to: 0
  4722                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 349:     if (sign
      +                           || (flags & (1 << 2))) {
  4723  0008CE  517A               	movf	efgtoa@sign& (0+255),w,b
  4724  0008D0  117B               	iorwf	(efgtoa@sign+1)& (0+255),w,b
  4725  0008D2  A4D8               	btfss	status,2,c
  4726  0008D4  EF6E  F004         	goto	u5061
  4727  0008D8  EF70  F004         	goto	u5060
  4728  0008DC                     u5061:
  4729  0008DC  EF77  F004         	goto	l4080
  4730  0008E0                     u5060:
  4731  0008E0                     
  4732                           ; BSR set to: 0
  4733  0008E0  A5D6               	btfss	_flags& (0+255),2,b
  4734  0008E2  EF75  F004         	goto	u5071
  4735  0008E6  EF77  F004         	goto	u5070
  4736  0008EA                     u5071:
  4737  0008EA  EF91  F004         	goto	l4092
  4738  0008EE                     u5070:
  4739  0008EE                     l4080:
  4740                           
  4741                           ; BSR set to: 0
  4742                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 350:         dbuf
      +                          [n] = sign ? '-' : '+';
  4743  0008EE  517A               	movf	efgtoa@sign& (0+255),w,b
  4744  0008F0  117B               	iorwf	(efgtoa@sign+1)& (0+255),w,b
  4745  0008F2  A4D8               	btfss	status,2,c
  4746  0008F4  EF7E  F004         	goto	u5081
  4747  0008F8  EF80  F004         	goto	u5080
  4748  0008FC                     u5081:
  4749  0008FC  EF86  F004         	goto	l4084
  4750  000900                     u5080:
  4751  000900                     
  4752                           ; BSR set to: 0
  4753  000900  0E00               	movlw	0
  4754  000902  6F61               	movwf	(_efgtoa$1232+1)& (0+255),b
  4755  000904  0E2B               	movlw	43
  4756  000906  6F60               	movwf	_efgtoa$1232& (0+255),b
  4757  000908  EF8A  F004         	goto	l4086
  4758  00090C                     l4084:
  4759                           
  4760                           ; BSR set to: 0
  4761  00090C  0E00               	movlw	0
  4762  00090E  6F61               	movwf	(_efgtoa$1232+1)& (0+255),b
  4763  000910  0E2D               	movlw	45
  4764  000912  6F60               	movwf	_efgtoa$1232& (0+255),b
  4765  000914                     l4086:
  4766                           
  4767                           ; BSR set to: 0
  4768  000914  C060  F104         	movff	_efgtoa$1232,_dbuf
  4769  000918                     
  4770                           ; BSR set to: 0
  4771                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 351:         ++n;
  4772  000918  4B92               	infsnz	efgtoa@n& (0+255),f,b
  4773  00091A  2B93               	incf	(efgtoa@n+1)& (0+255),f,b
  4774  00091C                     
  4775                           ; BSR set to: 0
  4776                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 352:         --w;
  4777  00091C  077E               	decf	efgtoa@w& (0+255),f,b
  4778  00091E  A0D8               	btfss	status,0,c
  4779  000920  077F               	decf	(efgtoa@w+1)& (0+255),f,b
  4780  000922                     l4092:
  4781                           
  4782                           ; BSR set to: 0
  4783                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 357:         if (
      +                          (0 ? isupper((int)c) : ((unsigned)((int)c)-'A') < 26)) {
  4784  000922  C08C  F001         	movff	efgtoa@g,___fpclassifyf@x
  4785  000926  C08D  F002         	movff	efgtoa@g+1,___fpclassifyf@x+1
  4786  00092A  C08E  F003         	movff	efgtoa@g+2,___fpclassifyf@x+2
  4787  00092E  C08F  F004         	movff	efgtoa@g+3,___fpclassifyf@x+3
  4788  000932  EC2D  F01D         	call	___fpclassifyf	;wreg free
  4789  000936  0401               	decf	?___fpclassifyf^0,w,c
  4790  000938  1002               	iorwf	(?___fpclassifyf+1)^0,w,c
  4791  00093A  A4D8               	btfss	status,2,c
  4792  00093C  EFA2  F004         	goto	u5091
  4793  000940  EFA4  F004         	goto	u5090
  4794  000944                     u5091:
  4795  000944  EFFB  F004         	goto	l4110
  4796  000948                     u5090:
  4797  000948  0EBF               	movlw	191
  4798  00094A  6E3B               	movwf	??_efgtoa^0,c
  4799  00094C  0EFF               	movlw	255
  4800  00094E  6E3C               	movwf	(??_efgtoa+1)^0,c
  4801  000950  503A               	movf	efgtoa@c^0,w,c
  4802  000952  6E3D               	movwf	(??_efgtoa+2)^0,c
  4803  000954  6A3E               	clrf	(??_efgtoa+3)^0,c
  4804  000956  503B               	movf	??_efgtoa^0,w,c
  4805  000958  263D               	addwf	(??_efgtoa+2)^0,f,c
  4806  00095A  503C               	movf	(??_efgtoa+1)^0,w,c
  4807  00095C  223E               	addwfc	(??_efgtoa+3)^0,f,c
  4808  00095E  503E               	movf	(??_efgtoa+3)^0,w,c
  4809  000960  E10A               	bnz	u5100
  4810  000962  0E1A               	movlw	26
  4811  000964  5C3D               	subwf	(??_efgtoa+2)^0,w,c
  4812  000966  A0D8               	btfss	status,0,c
  4813  000968  EFB8  F004         	goto	u5101
  4814  00096C  EFBB  F004         	goto	u5100
  4815  000970                     u5101:
  4816  000970  0E01               	movlw	1
  4817  000972  EFBC  F004         	goto	u5110
  4818  000976                     u5100:
  4819  000976  0E00               	movlw	0
  4820  000978                     u5110:
  4821  000978  0100               	movlb	0	; () banked
  4822  00097A  6F62               	movwf	_efgtoa$1233& (0+255),b
  4823  00097C  6B63               	clrf	(_efgtoa$1233+1)& (0+255),b
  4824  00097E                     
  4825                           ; BSR set to: 0
  4826  00097E  5162               	movf	_efgtoa$1233& (0+255),w,b
  4827  000980  1163               	iorwf	(_efgtoa$1233+1)& (0+255),w,b
  4828  000982  B4D8               	btfsc	status,2,c
  4829  000984  EFC6  F004         	goto	u5121
  4830  000988  EFC8  F004         	goto	u5120
  4831  00098C                     u5121:
  4832  00098C  EFD6  F004         	goto	l4102
  4833  000990                     u5120:
  4834  000990                     
  4835                           ; BSR set to: 0
  4836                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 358:             
      +                          strcpy(&dbuf[n], "INF");
  4837  000990  0E04               	movlw	low _dbuf
  4838  000992  2592               	addwf	efgtoa@n& (0+255),w,b
  4839  000994  6E01               	movwf	strcpy@dest^0,c
  4840  000996  0E01               	movlw	high _dbuf
  4841  000998  2193               	addwfc	(efgtoa@n+1)& (0+255),w,b
  4842  00099A  6E02               	movwf	(strcpy@dest+1)^0,c
  4843  00099C  0E53               	movlw	low STR_5
  4844  00099E  6E03               	movwf	strcpy@src^0,c
  4845  0009A0  0E08               	movlw	high STR_5
  4846  0009A2  6E04               	movwf	(strcpy@src+1)^0,c
  4847  0009A4  ECB1  F022         	call	_strcpy	;wreg free
  4848                           
  4849                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 359:         } el
      +                          se {
  4850  0009A8  EFE2  F004         	goto	l4104
  4851  0009AC                     l4102:
  4852                           
  4853                           ; BSR set to: 0
  4854                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 360:             
      +                          strcpy(&dbuf[n], "inf");
  4855  0009AC  0E04               	movlw	low _dbuf
  4856  0009AE  2592               	addwf	efgtoa@n& (0+255),w,b
  4857  0009B0  6E01               	movwf	strcpy@dest^0,c
  4858  0009B2  0E01               	movlw	high _dbuf
  4859  0009B4  2193               	addwfc	(efgtoa@n+1)& (0+255),w,b
  4860  0009B6  6E02               	movwf	(strcpy@dest+1)^0,c
  4861  0009B8  0E5B               	movlw	low STR_6
  4862  0009BA  6E03               	movwf	strcpy@src^0,c
  4863  0009BC  0E08               	movlw	high STR_6
  4864  0009BE  6E04               	movwf	(strcpy@src+1)^0,c
  4865  0009C0  ECB1  F022         	call	_strcpy	;wreg free
  4866  0009C4                     l4104:
  4867                           
  4868                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 362:         w -=
      +                           ((sizeof("inf")/sizeof("inf"[0]))-1);
  4869  0009C4  0100               	movlb	0	; () banked
  4870  0009C6  0EFD               	movlw	253
  4871  0009C8  277E               	addwf	efgtoa@w& (0+255),f,b
  4872  0009CA  0EFF               	movlw	255
  4873  0009CC  237F               	addwfc	(efgtoa@w+1)& (0+255),f,b
  4874  0009CE                     l4106:
  4875                           
  4876                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 363:         retu
      +                          rn pad(fp, &dbuf[0], w);
  4877  0009CE  C034  F014         	movff	efgtoa@fp,pad@fp
  4878  0009D2  C035  F015         	movff	efgtoa@fp+1,pad@fp+1
  4879  0009D6  0E04               	movlw	low _dbuf
  4880  0009D8  6E16               	movwf	pad@buf^0,c
  4881  0009DA  0E01               	movlw	high _dbuf
  4882  0009DC  6E17               	movwf	(pad@buf+1)^0,c
  4883  0009DE  C07E  F018         	movff	efgtoa@w,pad@p
  4884  0009E2  C07F  F019         	movff	efgtoa@w+1,pad@p+1
  4885  0009E6  ECCE  F01F         	call	_pad	;wreg free
  4886  0009EA  C014  F034         	movff	?_pad,?_efgtoa
  4887  0009EE  C015  F035         	movff	?_pad+1,?_efgtoa+1
  4888  0009F2  EF5F  F00A         	goto	l964
  4889  0009F6                     l4110:
  4890                           
  4891                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 366:         if (
      +                          (0 ? isupper((int)c) : ((unsigned)((int)c)-'A') < 26)) {
  4892  0009F6  C08C  F001         	movff	efgtoa@g,___fpclassifyf@x
  4893  0009FA  C08D  F002         	movff	efgtoa@g+1,___fpclassifyf@x+1
  4894  0009FE  C08E  F003         	movff	efgtoa@g+2,___fpclassifyf@x+2
  4895  000A02  C08F  F004         	movff	efgtoa@g+3,___fpclassifyf@x+3
  4896  000A06  EC2D  F01D         	call	___fpclassifyf	;wreg free
  4897  000A0A  5001               	movf	?___fpclassifyf^0,w,c
  4898  000A0C  1002               	iorwf	(?___fpclassifyf+1)^0,w,c
  4899  000A0E  A4D8               	btfss	status,2,c
  4900  000A10  EF0C  F005         	goto	u5131
  4901  000A14  EF0E  F005         	goto	u5130
  4902  000A18                     u5131:
  4903  000A18  EF4E  F005         	goto	l4128
  4904  000A1C                     u5130:
  4905  000A1C  0EBF               	movlw	191
  4906  000A1E  6E3B               	movwf	??_efgtoa^0,c
  4907  000A20  0EFF               	movlw	255
  4908  000A22  6E3C               	movwf	(??_efgtoa+1)^0,c
  4909  000A24  503A               	movf	efgtoa@c^0,w,c
  4910  000A26  6E3D               	movwf	(??_efgtoa+2)^0,c
  4911  000A28  6A3E               	clrf	(??_efgtoa+3)^0,c
  4912  000A2A  503B               	movf	??_efgtoa^0,w,c
  4913  000A2C  263D               	addwf	(??_efgtoa+2)^0,f,c
  4914  000A2E  503C               	movf	(??_efgtoa+1)^0,w,c
  4915  000A30  223E               	addwfc	(??_efgtoa+3)^0,f,c
  4916  000A32  503E               	movf	(??_efgtoa+3)^0,w,c
  4917  000A34  E10A               	bnz	u5140
  4918  000A36  0E1A               	movlw	26
  4919  000A38  5C3D               	subwf	(??_efgtoa+2)^0,w,c
  4920  000A3A  A0D8               	btfss	status,0,c
  4921  000A3C  EF22  F005         	goto	u5141
  4922  000A40  EF25  F005         	goto	u5140
  4923  000A44                     u5141:
  4924  000A44  0E01               	movlw	1
  4925  000A46  EF26  F005         	goto	u5150
  4926  000A4A                     u5140:
  4927  000A4A  0E00               	movlw	0
  4928  000A4C                     u5150:
  4929  000A4C  0100               	movlb	0	; () banked
  4930  000A4E  6F64               	movwf	_efgtoa$1237& (0+255),b
  4931  000A50  6B65               	clrf	(_efgtoa$1237+1)& (0+255),b
  4932  000A52                     
  4933                           ; BSR set to: 0
  4934  000A52  5164               	movf	_efgtoa$1237& (0+255),w,b
  4935  000A54  1165               	iorwf	(_efgtoa$1237+1)& (0+255),w,b
  4936  000A56  B4D8               	btfsc	status,2,c
  4937  000A58  EF30  F005         	goto	u5161
  4938  000A5C  EF32  F005         	goto	u5160
  4939  000A60                     u5161:
  4940  000A60  EF40  F005         	goto	l4120
  4941  000A64                     u5160:
  4942  000A64                     
  4943                           ; BSR set to: 0
  4944                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 367:             
      +                          strcpy(&dbuf[n], "NAN");
  4945  000A64  0E04               	movlw	low _dbuf
  4946  000A66  2592               	addwf	efgtoa@n& (0+255),w,b
  4947  000A68  6E01               	movwf	strcpy@dest^0,c
  4948  000A6A  0E01               	movlw	high _dbuf
  4949  000A6C  2193               	addwfc	(efgtoa@n+1)& (0+255),w,b
  4950  000A6E  6E02               	movwf	(strcpy@dest+1)^0,c
  4951  000A70  0E57               	movlw	low STR_9
  4952  000A72  6E03               	movwf	strcpy@src^0,c
  4953  000A74  0E08               	movlw	high STR_9
  4954  000A76  6E04               	movwf	(strcpy@src+1)^0,c
  4955  000A78  ECB1  F022         	call	_strcpy	;wreg free
  4956                           
  4957                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 368:         } el
      +                          se {
  4958  000A7C  EFE2  F004         	goto	l4104
  4959  000A80                     l4120:
  4960                           
  4961                           ; BSR set to: 0
  4962                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 369:             
      +                          strcpy(&dbuf[n], "nan");
  4963  000A80  0E04               	movlw	low _dbuf
  4964  000A82  2592               	addwf	efgtoa@n& (0+255),w,b
  4965  000A84  6E01               	movwf	strcpy@dest^0,c
  4966  000A86  0E01               	movlw	high _dbuf
  4967  000A88  2193               	addwfc	(efgtoa@n+1)& (0+255),w,b
  4968  000A8A  6E02               	movwf	(strcpy@dest+1)^0,c
  4969  000A8C  0E5F               	movlw	low STR_10
  4970  000A8E  6E03               	movwf	strcpy@src^0,c
  4971  000A90  0E08               	movlw	high STR_10
  4972  000A92  6E04               	movwf	(strcpy@src+1)^0,c
  4973  000A94  ECB1  F022         	call	_strcpy	;wreg free
  4974  000A98  EFE2  F004         	goto	l4104
  4975  000A9C                     l4128:
  4976                           
  4977                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 376:     u = 1.0;
  4978  000A9C  0E00               	movlw	0
  4979  000A9E  0100               	movlb	0	; () banked
  4980  000AA0  6F94               	movwf	efgtoa@u& (0+255),b
  4981  000AA2  0E00               	movlw	0
  4982  000AA4  6F95               	movwf	(efgtoa@u+1)& (0+255),b
  4983  000AA6  0E80               	movlw	128
  4984  000AA8  6F96               	movwf	(efgtoa@u+2)& (0+255),b
  4985  000AAA  0E3F               	movlw	63
  4986  000AAC  6F97               	movwf	(efgtoa@u+3)& (0+255),b
  4987                           
  4988                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 377:     e = 0;
  4989  000AAE  0E00               	movlw	0
  4990  000AB0  6F91               	movwf	(efgtoa@e+1)& (0+255),b
  4991  000AB2  0E00               	movlw	0
  4992  000AB4  6F90               	movwf	efgtoa@e& (0+255),b
  4993  000AB6                     
  4994                           ; BSR set to: 0
  4995                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 378:     if (!(g 
      +                          == 0.0)) {
  4996  000AB6  C08C  F001         	movff	efgtoa@g,___fleq@ff1
  4997  000ABA  C08D  F002         	movff	efgtoa@g+1,___fleq@ff1+1
  4998  000ABE  C08E  F003         	movff	efgtoa@g+2,___fleq@ff1+2
  4999  000AC2  C08F  F004         	movff	efgtoa@g+3,___fleq@ff1+3
  5000  000AC6  0E00               	movlw	0
  5001  000AC8  6E05               	movwf	___fleq@ff2^0,c
  5002  000ACA  0E00               	movlw	0
  5003  000ACC  6E06               	movwf	(___fleq@ff2+1)^0,c
  5004  000ACE  0E00               	movlw	0
  5005  000AD0  6E07               	movwf	(___fleq@ff2+2)^0,c
  5006  000AD2  0E00               	movlw	0
  5007  000AD4  6E08               	movwf	(___fleq@ff2+3)^0,c
  5008  000AD6  EC45  F021         	call	___fleq	;wreg free
  5009  000ADA  B0D8               	btfsc	status,0,c
  5010  000ADC  EF72  F005         	goto	u5171
  5011  000AE0  EF74  F005         	goto	u5170
  5012  000AE4                     u5171:
  5013  000AE4  EFF7  F005         	goto	l4146
  5014  000AE8                     u5170:
  5015  000AE8  EF93  F005         	goto	l4138
  5016  000AEC                     l4134:
  5017                           
  5018                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 380:             
      +                          u = u*10.0;
  5019  000AEC  C094  F00F         	movff	efgtoa@u,___flmul@b
  5020  000AF0  C095  F010         	movff	efgtoa@u+1,___flmul@b+1
  5021  000AF4  C096  F011         	movff	efgtoa@u+2,___flmul@b+2
  5022  000AF8  C097  F012         	movff	efgtoa@u+3,___flmul@b+3
  5023  000AFC  0E00               	movlw	0
  5024  000AFE  6E13               	movwf	___flmul@a^0,c
  5025  000B00  0E00               	movlw	0
  5026  000B02  6E14               	movwf	(___flmul@a+1)^0,c
  5027  000B04  0E20               	movlw	32
  5028  000B06  6E15               	movwf	(___flmul@a+2)^0,c
  5029  000B08  0E41               	movlw	65
  5030  000B0A  6E16               	movwf	(___flmul@a+3)^0,c
  5031  000B0C  ECFC  F010         	call	___flmul	;wreg free
  5032  000B10  C00F  F094         	movff	?___flmul,efgtoa@u
  5033  000B14  C010  F095         	movff	?___flmul+1,efgtoa@u+1
  5034  000B18  C011  F096         	movff	?___flmul+2,efgtoa@u+2
  5035  000B1C  C012  F097         	movff	?___flmul+3,efgtoa@u+3
  5036  000B20                     
  5037                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 381:             
      +                          ++e;
  5038  000B20  0100               	movlb	0	; () banked
  5039  000B22  4B90               	infsnz	efgtoa@e& (0+255),f,b
  5040  000B24  2B91               	incf	(efgtoa@e+1)& (0+255),f,b
  5041  000B26                     l4138:
  5042                           
  5043                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 379:         whil
      +                          e (!(g < (u*10.0))) {
  5044  000B26  C08C  F028         	movff	efgtoa@g,___flge@ff1
  5045  000B2A  C08D  F029         	movff	efgtoa@g+1,___flge@ff1+1
  5046  000B2E  C08E  F02A         	movff	efgtoa@g+2,___flge@ff1+2
  5047  000B32  C08F  F02B         	movff	efgtoa@g+3,___flge@ff1+3
  5048  000B36  0E00               	movlw	0
  5049  000B38  6E13               	movwf	___flmul@a^0,c
  5050  000B3A  0E00               	movlw	0
  5051  000B3C  6E14               	movwf	(___flmul@a+1)^0,c
  5052  000B3E  0E20               	movlw	32
  5053  000B40  6E15               	movwf	(___flmul@a+2)^0,c
  5054  000B42  0E41               	movlw	65
  5055  000B44  6E16               	movwf	(___flmul@a+3)^0,c
  5056  000B46  C094  F00F         	movff	efgtoa@u,___flmul@b
  5057  000B4A  C095  F010         	movff	efgtoa@u+1,___flmul@b+1
  5058  000B4E  C096  F011         	movff	efgtoa@u+2,___flmul@b+2
  5059  000B52  C097  F012         	movff	efgtoa@u+3,___flmul@b+3
  5060  000B56  ECFC  F010         	call	___flmul	;wreg free
  5061  000B5A  C00F  F02C         	movff	?___flmul,___flge@ff2
  5062  000B5E  C010  F02D         	movff	?___flmul+1,___flge@ff2+1
  5063  000B62  C011  F02E         	movff	?___flmul+2,___flge@ff2+2
  5064  000B66  C012  F02F         	movff	?___flmul+3,___flge@ff2+3
  5065  000B6A  ECAB  F01C         	call	___flge	;wreg free
  5066  000B6E  B0D8               	btfsc	status,0,c
  5067  000B70  EFBC  F005         	goto	u5181
  5068  000B74  EFBE  F005         	goto	u5180
  5069  000B78                     u5181:
  5070  000B78  EF76  F005         	goto	l4134
  5071  000B7C                     u5180:
  5072  000B7C  EFDE  F005         	goto	l4144
  5073  000B80                     l4140:
  5074                           
  5075                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 384:             
      +                          u = u/10.0;
  5076  000B80  C094  F001         	movff	efgtoa@u,___fldiv@b
  5077  000B84  C095  F002         	movff	efgtoa@u+1,___fldiv@b+1
  5078  000B88  C096  F003         	movff	efgtoa@u+2,___fldiv@b+2
  5079  000B8C  C097  F004         	movff	efgtoa@u+3,___fldiv@b+3
  5080  000B90  0E00               	movlw	0
  5081  000B92  6E05               	movwf	___fldiv@a^0,c
  5082  000B94  0E00               	movlw	0
  5083  000B96  6E06               	movwf	(___fldiv@a+1)^0,c
  5084  000B98  0E20               	movlw	32
  5085  000B9A  6E07               	movwf	(___fldiv@a+2)^0,c
  5086  000B9C  0E41               	movlw	65
  5087  000B9E  6E08               	movwf	(___fldiv@a+3)^0,c
  5088  000BA0  EC11  F013         	call	___fldiv	;wreg free
  5089  000BA4  C001  F094         	movff	?___fldiv,efgtoa@u
  5090  000BA8  C002  F095         	movff	?___fldiv+1,efgtoa@u+1
  5091  000BAC  C003  F096         	movff	?___fldiv+2,efgtoa@u+2
  5092  000BB0  C004  F097         	movff	?___fldiv+3,efgtoa@u+3
  5093  000BB4                     
  5094                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 385:             
      +                          --e;
  5095  000BB4  0100               	movlb	0	; () banked
  5096  000BB6  0790               	decf	efgtoa@e& (0+255),f,b
  5097  000BB8  A0D8               	btfss	status,0,c
  5098  000BBA  0791               	decf	(efgtoa@e+1)& (0+255),f,b
  5099  000BBC                     l4144:
  5100                           
  5101                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 383:         whil
      +                          e (g < u) {
  5102  000BBC  C08C  F028         	movff	efgtoa@g,___flge@ff1
  5103  000BC0  C08D  F029         	movff	efgtoa@g+1,___flge@ff1+1
  5104  000BC4  C08E  F02A         	movff	efgtoa@g+2,___flge@ff1+2
  5105  000BC8  C08F  F02B         	movff	efgtoa@g+3,___flge@ff1+3
  5106  000BCC  C094  F02C         	movff	efgtoa@u,___flge@ff2
  5107  000BD0  C095  F02D         	movff	efgtoa@u+1,___flge@ff2+1
  5108  000BD4  C096  F02E         	movff	efgtoa@u+2,___flge@ff2+2
  5109  000BD8  C097  F02F         	movff	efgtoa@u+3,___flge@ff2+3
  5110  000BDC  ECAB  F01C         	call	___flge	;wreg free
  5111  000BE0  A0D8               	btfss	status,0,c
  5112  000BE2  EFF5  F005         	goto	u5191
  5113  000BE6  EFF7  F005         	goto	u5190
  5114  000BEA                     u5191:
  5115  000BEA  EFC0  F005         	goto	l4140
  5116  000BEE                     u5190:
  5117  000BEE                     l4146:
  5118                           
  5119                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 390:     mode = (
      +                          char)tolower((int)c);
  5120  000BEE  C03A  F007         	movff	efgtoa@c,tolower@c
  5121  000BF2  6A08               	clrf	(tolower@c+1)^0,c
  5122  000BF4  EC81  F022         	call	_tolower	;wreg free
  5123  000BF8  5007               	movf	?_tolower^0,w,c
  5124  000BFA  0100               	movlb	0	; () banked
  5125  000BFC  6F81               	movwf	efgtoa@mode& (0+255),b
  5126  000BFE                     
  5127                           ; BSR set to: 0
  5128                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 391:     nmode = 
      +                          mode;
  5129  000BFE  C081  F080         	movff	efgtoa@mode,efgtoa@nmode
  5130  000C02                     
  5131                           ; BSR set to: 0
  5132                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 392:     if (mode
      +                           == 'g') {
  5133  000C02  0E67               	movlw	103
  5134  000C04  1981               	xorwf	efgtoa@mode& (0+255),w,b
  5135  000C06  A4D8               	btfss	status,2,c
  5136  000C08  EF08  F006         	goto	u5201
  5137  000C0C  EF0A  F006         	goto	u5200
  5138  000C10                     u5201:
  5139  000C10  EF30  F006         	goto	l4160
  5140  000C14                     u5200:
  5141  000C14                     
  5142                           ; BSR set to: 0
  5143                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 393:   if (prec =
      +                          = 0) {
  5144  000C14  51D4               	movf	_prec& (0+255),w,b
  5145  000C16  11D5               	iorwf	(_prec+1)& (0+255),w,b
  5146  000C18  A4D8               	btfss	status,2,c
  5147  000C1A  EF11  F006         	goto	u5211
  5148  000C1E  EF13  F006         	goto	u5210
  5149  000C22                     u5211:
  5150  000C22  EF17  F006         	goto	l4156
  5151  000C26                     u5210:
  5152  000C26                     
  5153                           ; BSR set to: 0
  5154                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 394:    prec = 1;
  5155  000C26  0E00               	movlw	0
  5156  000C28  6FD5               	movwf	(_prec+1)& (0+255),b
  5157  000C2A  0E01               	movlw	1
  5158  000C2C  6FD4               	movwf	_prec& (0+255),b
  5159  000C2E                     l4156:
  5160                           
  5161                           ; BSR set to: 0
  5162                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 396:         p = 
      +                          (0 < prec) ? prec : 6;
  5163  000C2E  BFD5               	btfsc	(_prec+1)& (0+255),7,b
  5164  000C30  EF24  F006         	goto	u5220
  5165  000C34  51D5               	movf	(_prec+1)& (0+255),w,b
  5166  000C36  E106               	bnz	u5221
  5167  000C38  05D4               	decf	_prec& (0+255),w,b
  5168  000C3A  B0D8               	btfsc	status,0,c
  5169  000C3C  EF22  F006         	goto	u5221
  5170  000C40  EF24  F006         	goto	u5220
  5171  000C44                     u5221:
  5172  000C44  EF2A  F006         	goto	l982
  5173  000C48                     u5220:
  5174  000C48                     l4158:
  5175                           
  5176                           ; BSR set to: 0
  5177  000C48  0E00               	movlw	0
  5178  000C4A  6F7D               	movwf	(efgtoa@p+1)& (0+255),b
  5179  000C4C  0E06               	movlw	6
  5180  000C4E  6F7C               	movwf	efgtoa@p& (0+255),b
  5181  000C50  EF39  F006         	goto	l4166
  5182  000C54                     l982:
  5183                           
  5184                           ; BSR set to: 0
  5185  000C54  C0D4  F07C         	movff	_prec,efgtoa@p
  5186  000C58  C0D5  F07D         	movff	_prec+1,efgtoa@p+1
  5187  000C5C  EF39  F006         	goto	l4166
  5188  000C60                     l4160:
  5189                           
  5190                           ; BSR set to: 0
  5191                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 398:         p = 
      +                          (prec < 0) ? 6 : prec;
  5192  000C60  BFD5               	btfsc	(_prec+1)& (0+255),7,b
  5193  000C62  EF35  F006         	goto	u5231
  5194  000C66  EF37  F006         	goto	u5230
  5195  000C6A                     u5231:
  5196  000C6A  EF24  F006         	goto	l4158
  5197  000C6E                     u5230:
  5198  000C6E  EF2A  F006         	goto	l982
  5199  000C72                     l4166:
  5200                           
  5201                           ; BSR set to: 0
  5202                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 402:     if (mode
      +                           == 'g') {
  5203  000C72  0E67               	movlw	103
  5204  000C74  1981               	xorwf	efgtoa@mode& (0+255),w,b
  5205  000C76  A4D8               	btfss	status,2,c
  5206  000C78  EF40  F006         	goto	u5241
  5207  000C7C  EF42  F006         	goto	u5240
  5208  000C80                     u5241:
  5209  000C80  EF71  F006         	goto	l4176
  5210  000C84                     u5240:
  5211  000C84                     
  5212                           ; BSR set to: 0
  5213                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 403:         if (
      +                          !(e < -4) && !((p - 1) < e)) {
  5214  000C84  AF91               	btfss	(efgtoa@e+1)& (0+255),7,b
  5215  000C86  EF50  F006         	goto	u5250
  5216  000C8A  0EFC               	movlw	252
  5217  000C8C  5D90               	subwf	efgtoa@e& (0+255),w,b
  5218  000C8E  0EFF               	movlw	255
  5219  000C90  5991               	subwfb	(efgtoa@e+1)& (0+255),w,b
  5220  000C92  A0D8               	btfss	status,0,c
  5221  000C94  EF4E  F006         	goto	u5251
  5222  000C98  EF50  F006         	goto	u5250
  5223  000C9C                     u5251:
  5224  000C9C  EF6F  F006         	goto	l4174
  5225  000CA0                     u5250:
  5226  000CA0                     
  5227                           ; BSR set to: 0
  5228  000CA0  0EFF               	movlw	255
  5229  000CA2  6E3B               	movwf	??_efgtoa^0,c
  5230  000CA4  0EFF               	movlw	255
  5231  000CA6  6E3C               	movwf	(??_efgtoa+1)^0,c
  5232  000CA8  C07C  F03D         	movff	efgtoa@p,??_efgtoa+2
  5233  000CAC  C07D  F03E         	movff	efgtoa@p+1,??_efgtoa+3
  5234  000CB0  503B               	movf	??_efgtoa^0,w,c
  5235  000CB2  263D               	addwf	(??_efgtoa+2)^0,f,c
  5236  000CB4  503C               	movf	(??_efgtoa+1)^0,w,c
  5237  000CB6  223E               	addwfc	(??_efgtoa+3)^0,f,c
  5238  000CB8  5190               	movf	efgtoa@e& (0+255),w,b
  5239  000CBA  5C3D               	subwf	(??_efgtoa+2)^0,w,c
  5240  000CBC  503E               	movf	(??_efgtoa+3)^0,w,c
  5241  000CBE  0A80               	xorlw	128
  5242  000CC0  6E3F               	movwf	(??_efgtoa+4)^0,c
  5243  000CC2  5191               	movf	(efgtoa@e+1)& (0+255),w,b
  5244  000CC4  0A80               	xorlw	128
  5245  000CC6  583F               	subwfb	(??_efgtoa+4)^0,w,c
  5246  000CC8  A0D8               	btfss	status,0,c
  5247  000CCA  EF69  F006         	goto	u5261
  5248  000CCE  EF6B  F006         	goto	u5260
  5249  000CD2                     u5261:
  5250  000CD2  EF6F  F006         	goto	l4174
  5251  000CD6                     u5260:
  5252  000CD6                     
  5253                           ; BSR set to: 0
  5254                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 404:             
      +                          nmode = 'f';
  5255  000CD6  0E66               	movlw	102
  5256  000CD8  6F80               	movwf	efgtoa@nmode& (0+255),b
  5257                           
  5258                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 405:         } el
      +                          se {
  5259  000CDA  EF71  F006         	goto	l4176
  5260  000CDE                     l4174:
  5261                           
  5262                           ; BSR set to: 0
  5263                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 406:             
      +                          nmode = 'e';
  5264  000CDE  0E65               	movlw	101
  5265  000CE0  6F80               	movwf	efgtoa@nmode& (0+255),b
  5266  000CE2                     l4176:
  5267                           
  5268                           ; BSR set to: 0
  5269                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 411:     m = p;
  5270  000CE2  C07C  F072         	movff	efgtoa@p,efgtoa@m
  5271  000CE6  C07D  F073         	movff	efgtoa@p+1,efgtoa@m+1
  5272  000CEA                     
  5273                           ; BSR set to: 0
  5274                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 412:     if (!(mo
      +                          de == 'g') || ((nmode == 'f') && (e < 0))) {
  5275  000CEA  0E67               	movlw	103
  5276  000CEC  1981               	xorwf	efgtoa@mode& (0+255),w,b
  5277  000CEE  A4D8               	btfss	status,2,c
  5278  000CF0  EF7C  F006         	goto	u5271
  5279  000CF4  EF7E  F006         	goto	u5270
  5280  000CF8                     u5271:
  5281  000CF8  EF8E  F006         	goto	l4184
  5282  000CFC                     u5270:
  5283  000CFC                     
  5284                           ; BSR set to: 0
  5285  000CFC  0E66               	movlw	102
  5286  000CFE  1980               	xorwf	efgtoa@nmode& (0+255),w,b
  5287  000D00  A4D8               	btfss	status,2,c
  5288  000D02  EF85  F006         	goto	u5281
  5289  000D06  EF87  F006         	goto	u5280
  5290  000D0A                     u5281:
  5291  000D0A  EF90  F006         	goto	l4186
  5292  000D0E                     u5280:
  5293  000D0E                     
  5294                           ; BSR set to: 0
  5295  000D0E  BF91               	btfsc	(efgtoa@e+1)& (0+255),7,b
  5296  000D10  EF8E  F006         	goto	u5290
  5297  000D14  EF8C  F006         	goto	u5291
  5298  000D18                     u5291:
  5299  000D18  EF90  F006         	goto	l4186
  5300  000D1C                     u5290:
  5301  000D1C                     l4184:
  5302                           
  5303                           ; BSR set to: 0
  5304                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 413:         ++m;
  5305  000D1C  4B72               	infsnz	efgtoa@m& (0+255),f,b
  5306  000D1E  2B73               	incf	(efgtoa@m+1)& (0+255),f,b
  5307  000D20                     l4186:
  5308                           
  5309                           ; BSR set to: 0
  5310                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 417:     if (nmod
      +                          e == 'f') {
  5311  000D20  0E66               	movlw	102
  5312  000D22  1980               	xorwf	efgtoa@nmode& (0+255),w,b
  5313  000D24  A4D8               	btfss	status,2,c
  5314  000D26  EF97  F006         	goto	u5301
  5315  000D2A  EF99  F006         	goto	u5300
  5316  000D2E                     u5301:
  5317  000D2E  EFB9  F006         	goto	l4196
  5318  000D32                     u5300:
  5319  000D32                     
  5320                           ; BSR set to: 0
  5321                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 418:         if (
      +                          e < 0) {
  5322  000D32  BF91               	btfsc	(efgtoa@e+1)& (0+255),7,b
  5323  000D34  EFA0  F006         	goto	u5310
  5324  000D38  EF9E  F006         	goto	u5311
  5325  000D3C                     u5311:
  5326  000D3C  EFAC  F006         	goto	l4192
  5327  000D40                     u5310:
  5328  000D40                     
  5329                           ; BSR set to: 0
  5330                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 419:             
      +                          u = 1.0;
  5331  000D40  0E00               	movlw	0
  5332  000D42  6F94               	movwf	efgtoa@u& (0+255),b
  5333  000D44  0E00               	movlw	0
  5334  000D46  6F95               	movwf	(efgtoa@u+1)& (0+255),b
  5335  000D48  0E80               	movlw	128
  5336  000D4A  6F96               	movwf	(efgtoa@u+2)& (0+255),b
  5337  000D4C  0E3F               	movlw	63
  5338  000D4E  6F97               	movwf	(efgtoa@u+3)& (0+255),b
  5339                           
  5340                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 420:             
      +                          e = 0;
  5341  000D50  0E00               	movlw	0
  5342  000D52  6F91               	movwf	(efgtoa@e+1)& (0+255),b
  5343  000D54  0E00               	movlw	0
  5344  000D56  6F90               	movwf	efgtoa@e& (0+255),b
  5345  000D58                     l4192:
  5346                           
  5347                           ; BSR set to: 0
  5348                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 422:         if (
      +                          !(mode == 'g')) {
  5349  000D58  0E67               	movlw	103
  5350  000D5A  1981               	xorwf	efgtoa@mode& (0+255),w,b
  5351  000D5C  B4D8               	btfsc	status,2,c
  5352  000D5E  EFB3  F006         	goto	u5321
  5353  000D62  EFB5  F006         	goto	u5320
  5354  000D66                     u5321:
  5355  000D66  EFB9  F006         	goto	l4196
  5356  000D6A                     u5320:
  5357  000D6A                     
  5358                           ; BSR set to: 0
  5359                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 423:             
      +                          m += e;
  5360  000D6A  5190               	movf	efgtoa@e& (0+255),w,b
  5361  000D6C  2772               	addwf	efgtoa@m& (0+255),f,b
  5362  000D6E  5191               	movf	(efgtoa@e+1)& (0+255),w,b
  5363  000D70  2373               	addwfc	(efgtoa@m+1)& (0+255),f,b
  5364  000D72                     l4196:
  5365                           
  5366                           ; BSR set to: 0
  5367                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 428:     i = 0;
  5368  000D72  0E00               	movlw	0
  5369  000D74  6F8B               	movwf	(efgtoa@i+1)& (0+255),b
  5370  000D76  0E00               	movlw	0
  5371  000D78  6F8A               	movwf	efgtoa@i& (0+255),b
  5372  000D7A                     
  5373                           ; BSR set to: 0
  5374                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 429:     h = g;
  5375  000D7A  C08C  F082         	movff	efgtoa@g,efgtoa@h
  5376  000D7E  C08D  F083         	movff	efgtoa@g+1,efgtoa@h+1
  5377  000D82  C08E  F084         	movff	efgtoa@g+2,efgtoa@h+2
  5378  000D86  C08F  F085         	movff	efgtoa@g+3,efgtoa@h+3
  5379  000D8A                     
  5380                           ; BSR set to: 0
  5381                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 430:     ou = u;
  5382  000D8A  C094  F074         	movff	efgtoa@u,efgtoa@ou
  5383  000D8E  C095  F075         	movff	efgtoa@u+1,efgtoa@ou+1
  5384  000D92  C096  F076         	movff	efgtoa@u+2,efgtoa@ou+2
  5385  000D96  C097  F077         	movff	efgtoa@u+3,efgtoa@ou+3
  5386                           
  5387                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 431:     while (i
      +                           < m) {
  5388  000D9A  EF4A  F007         	goto	l4210
  5389  000D9E                     l4202:
  5390                           
  5391                           ; BSR set to: 0
  5392                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 432:         l = 
      +                          floorf(h/u);
  5393  000D9E  C082  F001         	movff	efgtoa@h,___fldiv@b
  5394  000DA2  C083  F002         	movff	efgtoa@h+1,___fldiv@b+1
  5395  000DA6  C084  F003         	movff	efgtoa@h+2,___fldiv@b+2
  5396  000DAA  C085  F004         	movff	efgtoa@h+3,___fldiv@b+3
  5397  000DAE  C094  F005         	movff	efgtoa@u,___fldiv@a
  5398  000DB2  C095  F006         	movff	efgtoa@u+1,___fldiv@a+1
  5399  000DB6  C096  F007         	movff	efgtoa@u+2,___fldiv@a+2
  5400  000DBA  C097  F008         	movff	efgtoa@u+3,___fldiv@a+3
  5401  000DBE  EC11  F013         	call	___fldiv	;wreg free
  5402  000DC2  C001  F01A         	movff	?___fldiv,floorf@x
  5403  000DC6  C002  F01B         	movff	?___fldiv+1,floorf@x+1
  5404  000DCA  C003  F01C         	movff	?___fldiv+2,floorf@x+2
  5405  000DCE  C004  F01D         	movff	?___fldiv+3,floorf@x+3
  5406  000DD2  EC50  F016         	call	_floorf	;wreg free
  5407  000DD6  C01A  F086         	movff	?_floorf,efgtoa@l
  5408  000DDA  C01B  F087         	movff	?_floorf+1,efgtoa@l+1
  5409  000DDE  C01C  F088         	movff	?_floorf+2,efgtoa@l+2
  5410  000DE2  C01D  F089         	movff	?_floorf+3,efgtoa@l+3
  5411                           
  5412                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 433:         d = 
      +                          (int)l;
  5413  000DE6  C086  F001         	movff	efgtoa@l,___fltol@f1
  5414  000DEA  C087  F002         	movff	efgtoa@l+1,___fltol@f1+1
  5415  000DEE  C088  F003         	movff	efgtoa@l+2,___fltol@f1+2
  5416  000DF2  C089  F004         	movff	efgtoa@l+3,___fltol@f1+3
  5417  000DF6  ECA6  F01B         	call	___fltol	;wreg free
  5418  000DFA  C001  F078         	movff	?___fltol,efgtoa@d
  5419  000DFE  C002  F079         	movff	?___fltol+1,efgtoa@d+1
  5420  000E02                     
  5421                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 434:         h -=
      +                           l*u;
  5422  000E02  C082  F028         	movff	efgtoa@h,___flsub@b
  5423  000E06  C083  F029         	movff	efgtoa@h+1,___flsub@b+1
  5424  000E0A  C084  F02A         	movff	efgtoa@h+2,___flsub@b+2
  5425  000E0E  C085  F02B         	movff	efgtoa@h+3,___flsub@b+3
  5426  000E12  C094  F013         	movff	efgtoa@u,___flmul@a
  5427  000E16  C095  F014         	movff	efgtoa@u+1,___flmul@a+1
  5428  000E1A  C096  F015         	movff	efgtoa@u+2,___flmul@a+2
  5429  000E1E  C097  F016         	movff	efgtoa@u+3,___flmul@a+3
  5430  000E22  C086  F00F         	movff	efgtoa@l,___flmul@b
  5431  000E26  C087  F010         	movff	efgtoa@l+1,___flmul@b+1
  5432  000E2A  C088  F011         	movff	efgtoa@l+2,___flmul@b+2
  5433  000E2E  C089  F012         	movff	efgtoa@l+3,___flmul@b+3
  5434  000E32  ECFC  F010         	call	___flmul	;wreg free
  5435  000E36  C00F  F02C         	movff	?___flmul,___flsub@a
  5436  000E3A  C010  F02D         	movff	?___flmul+1,___flsub@a+1
  5437  000E3E  C011  F02E         	movff	?___flmul+2,___flsub@a+2
  5438  000E42  C012  F02F         	movff	?___flmul+3,___flsub@a+3
  5439  000E46  EC53  F023         	call	___flsub	;wreg free
  5440  000E4A  C028  F082         	movff	?___flsub,efgtoa@h
  5441  000E4E  C029  F083         	movff	?___flsub+1,efgtoa@h+1
  5442  000E52  C02A  F084         	movff	?___flsub+2,efgtoa@h+2
  5443  000E56  C02B  F085         	movff	?___flsub+3,efgtoa@h+3
  5444  000E5A                     
  5445                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 435:         u = 
      +                          u/10.0;
  5446  000E5A  C094  F001         	movff	efgtoa@u,___fldiv@b
  5447  000E5E  C095  F002         	movff	efgtoa@u+1,___fldiv@b+1
  5448  000E62  C096  F003         	movff	efgtoa@u+2,___fldiv@b+2
  5449  000E66  C097  F004         	movff	efgtoa@u+3,___fldiv@b+3
  5450  000E6A  0E00               	movlw	0
  5451  000E6C  6E05               	movwf	___fldiv@a^0,c
  5452  000E6E  0E00               	movlw	0
  5453  000E70  6E06               	movwf	(___fldiv@a+1)^0,c
  5454  000E72  0E20               	movlw	32
  5455  000E74  6E07               	movwf	(___fldiv@a+2)^0,c
  5456  000E76  0E41               	movlw	65
  5457  000E78  6E08               	movwf	(___fldiv@a+3)^0,c
  5458  000E7A  EC11  F013         	call	___fldiv	;wreg free
  5459  000E7E  C001  F094         	movff	?___fldiv,efgtoa@u
  5460  000E82  C002  F095         	movff	?___fldiv+1,efgtoa@u+1
  5461  000E86  C003  F096         	movff	?___fldiv+2,efgtoa@u+2
  5462  000E8A  C004  F097         	movff	?___fldiv+3,efgtoa@u+3
  5463  000E8E                     
  5464                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 436:         ++i;
  5465  000E8E  0100               	movlb	0	; () banked
  5466  000E90  4B8A               	infsnz	efgtoa@i& (0+255),f,b
  5467  000E92  2B8B               	incf	(efgtoa@i+1)& (0+255),f,b
  5468  000E94                     l4210:
  5469                           
  5470                           ; BSR set to: 0
  5471                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 431:     while (i
      +                           < m) {
  5472  000E94  5172               	movf	efgtoa@m& (0+255),w,b
  5473  000E96  5D8A               	subwf	efgtoa@i& (0+255),w,b
  5474  000E98  518B               	movf	(efgtoa@i+1)& (0+255),w,b
  5475  000E9A  0A80               	xorlw	128
  5476  000E9C  6E3B               	movwf	??_efgtoa^0,c
  5477  000E9E  5173               	movf	(efgtoa@m+1)& (0+255),w,b
  5478  000EA0  0A80               	xorlw	128
  5479  000EA2  583B               	subwfb	??_efgtoa^0,w,c
  5480  000EA4  A0D8               	btfss	status,0,c
  5481  000EA6  EF57  F007         	goto	u5331
  5482  000EAA  EF59  F007         	goto	u5330
  5483  000EAE                     u5331:
  5484  000EAE  EFCF  F006         	goto	l4202
  5485  000EB2                     u5330:
  5486  000EB2                     
  5487                           ; BSR set to: 0
  5488                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 440:     l = u*5.
      +                          0;
  5489  000EB2  C094  F00F         	movff	efgtoa@u,___flmul@b
  5490  000EB6  C095  F010         	movff	efgtoa@u+1,___flmul@b+1
  5491  000EBA  C096  F011         	movff	efgtoa@u+2,___flmul@b+2
  5492  000EBE  C097  F012         	movff	efgtoa@u+3,___flmul@b+3
  5493  000EC2  0E00               	movlw	0
  5494  000EC4  6E13               	movwf	___flmul@a^0,c
  5495  000EC6  0E00               	movlw	0
  5496  000EC8  6E14               	movwf	(___flmul@a+1)^0,c
  5497  000ECA  0EA0               	movlw	160
  5498  000ECC  6E15               	movwf	(___flmul@a+2)^0,c
  5499  000ECE  0E40               	movlw	64
  5500  000ED0  6E16               	movwf	(___flmul@a+3)^0,c
  5501  000ED2  ECFC  F010         	call	___flmul	;wreg free
  5502  000ED6  C00F  F086         	movff	?___flmul,efgtoa@l
  5503  000EDA  C010  F087         	movff	?___flmul+1,efgtoa@l+1
  5504  000EDE  C011  F088         	movff	?___flmul+2,efgtoa@l+2
  5505  000EE2  C012  F089         	movff	?___flmul+3,efgtoa@l+3
  5506  000EE6                     
  5507                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 441:     if (h < 
      +                          l) {
  5508  000EE6  C082  F028         	movff	efgtoa@h,___flge@ff1
  5509  000EEA  C083  F029         	movff	efgtoa@h+1,___flge@ff1+1
  5510  000EEE  C084  F02A         	movff	efgtoa@h+2,___flge@ff1+2
  5511  000EF2  C085  F02B         	movff	efgtoa@h+3,___flge@ff1+3
  5512  000EF6  C086  F02C         	movff	efgtoa@l,___flge@ff2
  5513  000EFA  C087  F02D         	movff	efgtoa@l+1,___flge@ff2+1
  5514  000EFE  C088  F02E         	movff	efgtoa@l+2,___flge@ff2+2
  5515  000F02  C089  F02F         	movff	efgtoa@l+3,___flge@ff2+3
  5516  000F06  ECAB  F01C         	call	___flge	;wreg free
  5517  000F0A  B0D8               	btfsc	status,0,c
  5518  000F0C  EF8A  F007         	goto	u5341
  5519  000F10  EF8C  F007         	goto	u5340
  5520  000F14                     u5341:
  5521  000F14  EF97  F007         	goto	l4218
  5522  000F18                     u5340:
  5523  000F18                     
  5524                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 442:         l = 
      +                          0.0;
  5525  000F18  0E00               	movlw	0
  5526  000F1A  0100               	movlb	0	; () banked
  5527  000F1C  6F86               	movwf	efgtoa@l& (0+255),b
  5528  000F1E  0E00               	movlw	0
  5529  000F20  6F87               	movwf	(efgtoa@l+1)& (0+255),b
  5530  000F22  0E00               	movlw	0
  5531  000F24  6F88               	movwf	(efgtoa@l+2)& (0+255),b
  5532  000F26  0E00               	movlw	0
  5533  000F28  6F89               	movwf	(efgtoa@l+3)& (0+255),b
  5534                           
  5535                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 443:     } else {
  5536  000F2A  EFC0  F007         	goto	l4224
  5537  000F2E                     l4218:
  5538                           
  5539                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 445:         if (
      +                          (h == l) && !(d % 2)) {
  5540  000F2E  C082  F001         	movff	efgtoa@h,___fleq@ff1
  5541  000F32  C083  F002         	movff	efgtoa@h+1,___fleq@ff1+1
  5542  000F36  C084  F003         	movff	efgtoa@h+2,___fleq@ff1+2
  5543  000F3A  C085  F004         	movff	efgtoa@h+3,___fleq@ff1+3
  5544  000F3E  C086  F005         	movff	efgtoa@l,___fleq@ff2
  5545  000F42  C087  F006         	movff	efgtoa@l+1,___fleq@ff2+1
  5546  000F46  C088  F007         	movff	efgtoa@l+2,___fleq@ff2+2
  5547  000F4A  C089  F008         	movff	efgtoa@l+3,___fleq@ff2+3
  5548  000F4E  EC45  F021         	call	___fleq	;wreg free
  5549  000F52  A0D8               	btfss	status,0,c
  5550  000F54  EFAE  F007         	goto	u5351
  5551  000F58  EFB0  F007         	goto	u5350
  5552  000F5C                     u5351:
  5553  000F5C  EFC0  F007         	goto	l4224
  5554  000F60                     u5350:
  5555  000F60  0100               	movlb	0	; () banked
  5556  000F62  B178               	btfsc	efgtoa@d& (0+255),0,b
  5557  000F64  EFB6  F007         	goto	u5361
  5558  000F68  EFB8  F007         	goto	u5360
  5559  000F6C                     u5361:
  5560  000F6C  EFC0  F007         	goto	l4224
  5561  000F70                     u5360:
  5562  000F70                     
  5563                           ; BSR set to: 0
  5564                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 446:             
      +                          l = 0.0;
  5565  000F70  0E00               	movlw	0
  5566  000F72  6F86               	movwf	efgtoa@l& (0+255),b
  5567  000F74  0E00               	movlw	0
  5568  000F76  6F87               	movwf	(efgtoa@l+1)& (0+255),b
  5569  000F78  0E00               	movlw	0
  5570  000F7A  6F88               	movwf	(efgtoa@l+2)& (0+255),b
  5571  000F7C  0E00               	movlw	0
  5572  000F7E  6F89               	movwf	(efgtoa@l+3)& (0+255),b
  5573  000F80                     l4224:
  5574                           
  5575                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 451:     h = g + 
      +                          l;
  5576  000F80  C08C  F001         	movff	efgtoa@g,___fladd@b
  5577  000F84  C08D  F002         	movff	efgtoa@g+1,___fladd@b+1
  5578  000F88  C08E  F003         	movff	efgtoa@g+2,___fladd@b+2
  5579  000F8C  C08F  F004         	movff	efgtoa@g+3,___fladd@b+3
  5580  000F90  C086  F005         	movff	efgtoa@l,___fladd@a
  5581  000F94  C087  F006         	movff	efgtoa@l+1,___fladd@a+1
  5582  000F98  C088  F007         	movff	efgtoa@l+2,___fladd@a+2
  5583  000F9C  C089  F008         	movff	efgtoa@l+3,___fladd@a+3
  5584  000FA0  EC9C  F00E         	call	___fladd	;wreg free
  5585  000FA4  C001  F082         	movff	?___fladd,efgtoa@h
  5586  000FA8  C002  F083         	movff	?___fladd+1,efgtoa@h+1
  5587  000FAC  C003  F084         	movff	?___fladd+2,efgtoa@h+2
  5588  000FB0  C004  F085         	movff	?___fladd+3,efgtoa@h+3
  5589  000FB4                     
  5590                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 453:  if (h >= (o
      +                          u*10.0)) {
  5591  000FB4  C082  F028         	movff	efgtoa@h,___flge@ff1
  5592  000FB8  C083  F029         	movff	efgtoa@h+1,___flge@ff1+1
  5593  000FBC  C084  F02A         	movff	efgtoa@h+2,___flge@ff1+2
  5594  000FC0  C085  F02B         	movff	efgtoa@h+3,___flge@ff1+3
  5595  000FC4  0E00               	movlw	0
  5596  000FC6  6E13               	movwf	___flmul@a^0,c
  5597  000FC8  0E00               	movlw	0
  5598  000FCA  6E14               	movwf	(___flmul@a+1)^0,c
  5599  000FCC  0E20               	movlw	32
  5600  000FCE  6E15               	movwf	(___flmul@a+2)^0,c
  5601  000FD0  0E41               	movlw	65
  5602  000FD2  6E16               	movwf	(___flmul@a+3)^0,c
  5603  000FD4  C074  F00F         	movff	efgtoa@ou,___flmul@b
  5604  000FD8  C075  F010         	movff	efgtoa@ou+1,___flmul@b+1
  5605  000FDC  C076  F011         	movff	efgtoa@ou+2,___flmul@b+2
  5606  000FE0  C077  F012         	movff	efgtoa@ou+3,___flmul@b+3
  5607  000FE4  ECFC  F010         	call	___flmul	;wreg free
  5608  000FE8  C00F  F02C         	movff	?___flmul,___flge@ff2
  5609  000FEC  C010  F02D         	movff	?___flmul+1,___flge@ff2+1
  5610  000FF0  C011  F02E         	movff	?___flmul+2,___flge@ff2+2
  5611  000FF4  C012  F02F         	movff	?___flmul+3,___flge@ff2+3
  5612  000FF8  ECAB  F01C         	call	___flge	;wreg free
  5613  000FFC  A0D8               	btfss	status,0,c
  5614  000FFE  EF03  F008         	goto	u5371
  5615  001002  EF05  F008         	goto	u5370
  5616  001006                     u5371:
  5617  001006  EF2E  F008         	goto	l4236
  5618  00100A                     u5370:
  5619  00100A                     
  5620                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 454:   e++;
  5621  00100A  0100               	movlb	0	; () banked
  5622  00100C  4B90               	infsnz	efgtoa@e& (0+255),f,b
  5623  00100E  2B91               	incf	(efgtoa@e+1)& (0+255),f,b
  5624  001010                     
  5625                           ; BSR set to: 0
  5626                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 455:   ou *= 10.0
      +                          ;
  5627  001010  C074  F00F         	movff	efgtoa@ou,___flmul@b
  5628  001014  C075  F010         	movff	efgtoa@ou+1,___flmul@b+1
  5629  001018  C076  F011         	movff	efgtoa@ou+2,___flmul@b+2
  5630  00101C  C077  F012         	movff	efgtoa@ou+3,___flmul@b+3
  5631  001020  0E00               	movlw	0
  5632  001022  6E13               	movwf	___flmul@a^0,c
  5633  001024  0E00               	movlw	0
  5634  001026  6E14               	movwf	(___flmul@a+1)^0,c
  5635  001028  0E20               	movlw	32
  5636  00102A  6E15               	movwf	(___flmul@a+2)^0,c
  5637  00102C  0E41               	movlw	65
  5638  00102E  6E16               	movwf	(___flmul@a+3)^0,c
  5639  001030  ECFC  F010         	call	___flmul	;wreg free
  5640  001034  C00F  F074         	movff	?___flmul,efgtoa@ou
  5641  001038  C010  F075         	movff	?___flmul+1,efgtoa@ou+1
  5642  00103C  C011  F076         	movff	?___flmul+2,efgtoa@ou+2
  5643  001040  C012  F077         	movff	?___flmul+3,efgtoa@ou+3
  5644  001044                     
  5645                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 456:   if (nmode 
      +                          == 'f') {
  5646  001044  0E66               	movlw	102
  5647  001046  0100               	movlb	0	; () banked
  5648  001048  1980               	xorwf	efgtoa@nmode& (0+255),w,b
  5649  00104A  A4D8               	btfss	status,2,c
  5650  00104C  EF2A  F008         	goto	u5381
  5651  001050  EF2C  F008         	goto	u5380
  5652  001054                     u5381:
  5653  001054  EF2E  F008         	goto	l4236
  5654  001058                     u5380:
  5655  001058                     
  5656                           ; BSR set to: 0
  5657                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 458:    m++;
  5658  001058  4B72               	infsnz	efgtoa@m& (0+255),f,b
  5659  00105A  2B73               	incf	(efgtoa@m+1)& (0+255),f,b
  5660  00105C                     l4236:
  5661                           
  5662                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 463:     u = ou;
  5663  00105C  C074  F094         	movff	efgtoa@ou,efgtoa@u
  5664  001060  C075  F095         	movff	efgtoa@ou+1,efgtoa@u+1
  5665  001064  C076  F096         	movff	efgtoa@ou+2,efgtoa@u+2
  5666  001068  C077  F097         	movff	efgtoa@ou+3,efgtoa@u+3
  5667  00106C                     
  5668                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 464:     ne = (nm
      +                          ode == 'e') ? 0 : e;
  5669  00106C  0E65               	movlw	101
  5670  00106E  0100               	movlb	0	; () banked
  5671  001070  1980               	xorwf	efgtoa@nmode& (0+255),w,b
  5672  001072  B4D8               	btfsc	status,2,c
  5673  001074  EF3E  F008         	goto	u5391
  5674  001078  EF40  F008         	goto	u5390
  5675  00107C                     u5391:
  5676  00107C  EF46  F008         	goto	l4242
  5677  001080                     u5390:
  5678  001080                     
  5679                           ; BSR set to: 0
  5680  001080  C090  F070         	movff	efgtoa@e,efgtoa@ne
  5681  001084  C091  F071         	movff	efgtoa@e+1,efgtoa@ne+1
  5682  001088  EF4A  F008         	goto	l1010
  5683  00108C                     l4242:
  5684                           
  5685                           ; BSR set to: 0
  5686  00108C  0E00               	movlw	0
  5687  00108E  6F71               	movwf	(efgtoa@ne+1)& (0+255),b
  5688  001090  0E00               	movlw	0
  5689  001092  6F70               	movwf	efgtoa@ne& (0+255),b
  5690  001094                     l1010:
  5691                           
  5692                           ; BSR set to: 0
  5693                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 465:     pp = 0;
  5694  001094  0E00               	movlw	0
  5695  001096  6F6F               	movwf	(efgtoa@pp+1)& (0+255),b
  5696  001098  0E00               	movlw	0
  5697  00109A  6F6E               	movwf	efgtoa@pp& (0+255),b
  5698                           
  5699                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 466:     t = 0;
  5700  00109C  0E00               	movlw	0
  5701  00109E  6F6D               	movwf	(efgtoa@t+1)& (0+255),b
  5702  0010A0  0E00               	movlw	0
  5703  0010A2  6F6C               	movwf	efgtoa@t& (0+255),b
  5704                           
  5705                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 467:     i = 0;
  5706  0010A4  0E00               	movlw	0
  5707  0010A6  6F8B               	movwf	(efgtoa@i+1)& (0+255),b
  5708  0010A8  0E00               	movlw	0
  5709  0010AA  6F8A               	movwf	efgtoa@i& (0+255),b
  5710                           
  5711                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 468:     while ((
      +                          i < m) && (n < (80 - 5))) {
  5712  0010AC  EF45  F009         	goto	l4292
  5713  0010B0                     l4244:
  5714                           
  5715                           ; BSR set to: 0
  5716                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 469:         l = 
      +                          floorf(h/u);
  5717  0010B0  C082  F001         	movff	efgtoa@h,___fldiv@b
  5718  0010B4  C083  F002         	movff	efgtoa@h+1,___fldiv@b+1
  5719  0010B8  C084  F003         	movff	efgtoa@h+2,___fldiv@b+2
  5720  0010BC  C085  F004         	movff	efgtoa@h+3,___fldiv@b+3
  5721  0010C0  C094  F005         	movff	efgtoa@u,___fldiv@a
  5722  0010C4  C095  F006         	movff	efgtoa@u+1,___fldiv@a+1
  5723  0010C8  C096  F007         	movff	efgtoa@u+2,___fldiv@a+2
  5724  0010CC  C097  F008         	movff	efgtoa@u+3,___fldiv@a+3
  5725  0010D0  EC11  F013         	call	___fldiv	;wreg free
  5726  0010D4  C001  F01A         	movff	?___fldiv,floorf@x
  5727  0010D8  C002  F01B         	movff	?___fldiv+1,floorf@x+1
  5728  0010DC  C003  F01C         	movff	?___fldiv+2,floorf@x+2
  5729  0010E0  C004  F01D         	movff	?___fldiv+3,floorf@x+3
  5730  0010E4  EC50  F016         	call	_floorf	;wreg free
  5731  0010E8  C01A  F086         	movff	?_floorf,efgtoa@l
  5732  0010EC  C01B  F087         	movff	?_floorf+1,efgtoa@l+1
  5733  0010F0  C01C  F088         	movff	?_floorf+2,efgtoa@l+2
  5734  0010F4  C01D  F089         	movff	?_floorf+3,efgtoa@l+3
  5735                           
  5736                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 470:         d = 
      +                          (int)l;
  5737  0010F8  C086  F001         	movff	efgtoa@l,___fltol@f1
  5738  0010FC  C087  F002         	movff	efgtoa@l+1,___fltol@f1+1
  5739  001100  C088  F003         	movff	efgtoa@l+2,___fltol@f1+2
  5740  001104  C089  F004         	movff	efgtoa@l+3,___fltol@f1+3
  5741  001108  ECA6  F01B         	call	___fltol	;wreg free
  5742  00110C  C001  F078         	movff	?___fltol,efgtoa@d
  5743  001110  C002  F079         	movff	?___fltol+1,efgtoa@d+1
  5744  001114                     
  5745                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 471:         if (
      +                          !(flags & (1 << 4)) && !d && (mode == 'g') && (ne < 0)) {
  5746  001114  0100               	movlb	0	; () banked
  5747  001116  B9D6               	btfsc	_flags& (0+255),4,b
  5748  001118  EF90  F008         	goto	u5401
  5749  00111C  EF92  F008         	goto	u5400
  5750  001120                     u5401:
  5751  001120  EFAF  F008         	goto	l4256
  5752  001124                     u5400:
  5753  001124                     
  5754                           ; BSR set to: 0
  5755  001124  5178               	movf	efgtoa@d& (0+255),w,b
  5756  001126  1179               	iorwf	(efgtoa@d+1)& (0+255),w,b
  5757  001128  A4D8               	btfss	status,2,c
  5758  00112A  EF99  F008         	goto	u5411
  5759  00112E  EF9B  F008         	goto	u5410
  5760  001132                     u5411:
  5761  001132  EFAF  F008         	goto	l4256
  5762  001136                     u5410:
  5763  001136                     
  5764                           ; BSR set to: 0
  5765  001136  0E67               	movlw	103
  5766  001138  1981               	xorwf	efgtoa@mode& (0+255),w,b
  5767  00113A  A4D8               	btfss	status,2,c
  5768  00113C  EFA2  F008         	goto	u5421
  5769  001140  EFA4  F008         	goto	u5420
  5770  001144                     u5421:
  5771  001144  EFAF  F008         	goto	l4256
  5772  001148                     u5420:
  5773  001148                     
  5774                           ; BSR set to: 0
  5775  001148  BF71               	btfsc	(efgtoa@ne+1)& (0+255),7,b
  5776  00114A  EFAB  F008         	goto	u5430
  5777  00114E  EFA9  F008         	goto	u5431
  5778  001152                     u5431:
  5779  001152  EFAF  F008         	goto	l4256
  5780  001156                     u5430:
  5781  001156                     
  5782                           ; BSR set to: 0
  5783                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 472:             
      +                          ++t;
  5784  001156  4B6C               	infsnz	efgtoa@t& (0+255),f,b
  5785  001158  2B6D               	incf	(efgtoa@t+1)& (0+255),f,b
  5786                           
  5787                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 473:         } el
      +                          se {
  5788  00115A  EFF9  F008         	goto	l4284
  5789  00115E                     l4256:
  5790                           
  5791                           ; BSR set to: 0
  5792                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 474:             
      +                          if (!pp && (ne < 0)) {
  5793  00115E  516E               	movf	efgtoa@pp& (0+255),w,b
  5794  001160  116F               	iorwf	(efgtoa@pp+1)& (0+255),w,b
  5795  001162  A4D8               	btfss	status,2,c
  5796  001164  EFB6  F008         	goto	u5441
  5797  001168  EFB8  F008         	goto	u5440
  5798  00116C                     u5441:
  5799  00116C  EFE2  F008         	goto	l4276
  5800  001170                     u5440:
  5801  001170                     
  5802                           ; BSR set to: 0
  5803  001170  BF71               	btfsc	(efgtoa@ne+1)& (0+255),7,b
  5804  001172  EFBF  F008         	goto	u5450
  5805  001176  EFBD  F008         	goto	u5451
  5806  00117A                     u5451:
  5807  00117A  EFE2  F008         	goto	l4276
  5808  00117E                     u5450:
  5809  00117E                     
  5810                           ; BSR set to: 0
  5811                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 475:             
      +                              dbuf[n++] = '.';
  5812  00117E  0E04               	movlw	low _dbuf
  5813  001180  2592               	addwf	efgtoa@n& (0+255),w,b
  5814  001182  6ED9               	movwf	fsr2l,c
  5815  001184  0E01               	movlw	high _dbuf
  5816  001186  2193               	addwfc	(efgtoa@n+1)& (0+255),w,b
  5817  001188  6EDA               	movwf	fsr2h,c
  5818  00118A  0E2E               	movlw	46
  5819  00118C  6EDF               	movwf	indf2,c
  5820  00118E                     
  5821                           ; BSR set to: 0
  5822  00118E  4B92               	infsnz	efgtoa@n& (0+255),f,b
  5823  001190  2B93               	incf	(efgtoa@n+1)& (0+255),f,b
  5824  001192                     
  5825                           ; BSR set to: 0
  5826                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 476:             
      +                              --w;
  5827  001192  077E               	decf	efgtoa@w& (0+255),f,b
  5828  001194  A0D8               	btfss	status,0,c
  5829  001196  077F               	decf	(efgtoa@w+1)& (0+255),f,b
  5830  001198                     
  5831                           ; BSR set to: 0
  5832                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 477:             
      +                              pp = 1;
  5833  001198  0E00               	movlw	0
  5834  00119A  6F6F               	movwf	(efgtoa@pp+1)& (0+255),b
  5835  00119C  0E01               	movlw	1
  5836  00119E  6F6E               	movwf	efgtoa@pp& (0+255),b
  5837  0011A0  EFE2  F008         	goto	l4276
  5838  0011A4                     l4268:
  5839                           
  5840                           ; BSR set to: 0
  5841                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 480:             
      +                              dbuf[n++] = '0';
  5842  0011A4  0E04               	movlw	low _dbuf
  5843  0011A6  2592               	addwf	efgtoa@n& (0+255),w,b
  5844  0011A8  6ED9               	movwf	fsr2l,c
  5845  0011AA  0E01               	movlw	high _dbuf
  5846  0011AC  2193               	addwfc	(efgtoa@n+1)& (0+255),w,b
  5847  0011AE  6EDA               	movwf	fsr2h,c
  5848  0011B0  0E30               	movlw	48
  5849  0011B2  6EDF               	movwf	indf2,c
  5850  0011B4                     
  5851                           ; BSR set to: 0
  5852  0011B4  4B92               	infsnz	efgtoa@n& (0+255),f,b
  5853  0011B6  2B93               	incf	(efgtoa@n+1)& (0+255),f,b
  5854  0011B8                     
  5855                           ; BSR set to: 0
  5856                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 481:             
      +                              --w;
  5857  0011B8  077E               	decf	efgtoa@w& (0+255),f,b
  5858  0011BA  A0D8               	btfss	status,0,c
  5859  0011BC  077F               	decf	(efgtoa@w+1)& (0+255),f,b
  5860  0011BE                     
  5861                           ; BSR set to: 0
  5862                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 482:             
      +                              --t;
  5863  0011BE  076C               	decf	efgtoa@t& (0+255),f,b
  5864  0011C0  A0D8               	btfss	status,0,c
  5865  0011C2  076D               	decf	(efgtoa@t+1)& (0+255),f,b
  5866  0011C4                     l4276:
  5867                           
  5868                           ; BSR set to: 0
  5869                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 479:             
      +                          while (t) {
  5870  0011C4  516C               	movf	efgtoa@t& (0+255),w,b
  5871  0011C6  116D               	iorwf	(efgtoa@t+1)& (0+255),w,b
  5872  0011C8  A4D8               	btfss	status,2,c
  5873  0011CA  EFE9  F008         	goto	u5461
  5874  0011CE  EFEB  F008         	goto	u5460
  5875  0011D2                     u5461:
  5876  0011D2  EFD2  F008         	goto	l4268
  5877  0011D6                     u5460:
  5878  0011D6                     
  5879                           ; BSR set to: 0
  5880                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 484:             
      +                          dbuf[n++] = (char)((int)'0' + d);
  5881  0011D6  0E04               	movlw	low _dbuf
  5882  0011D8  2592               	addwf	efgtoa@n& (0+255),w,b
  5883  0011DA  6ED9               	movwf	fsr2l,c
  5884  0011DC  0E01               	movlw	high _dbuf
  5885  0011DE  2193               	addwfc	(efgtoa@n+1)& (0+255),w,b
  5886  0011E0  6EDA               	movwf	fsr2h,c
  5887  0011E2  5178               	movf	efgtoa@d& (0+255),w,b
  5888  0011E4  0F30               	addlw	48
  5889  0011E6  6EDF               	movwf	indf2,c
  5890  0011E8                     
  5891                           ; BSR set to: 0
  5892  0011E8  4B92               	infsnz	efgtoa@n& (0+255),f,b
  5893  0011EA  2B93               	incf	(efgtoa@n+1)& (0+255),f,b
  5894  0011EC                     
  5895                           ; BSR set to: 0
  5896                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 485:             
      +                          --w;
  5897  0011EC  077E               	decf	efgtoa@w& (0+255),f,b
  5898  0011EE  A0D8               	btfss	status,0,c
  5899  0011F0  077F               	decf	(efgtoa@w+1)& (0+255),f,b
  5900  0011F2                     l4284:
  5901                           
  5902                           ; BSR set to: 0
  5903                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 487:         h -=
      +                           l*u;
  5904  0011F2  C082  F028         	movff	efgtoa@h,___flsub@b
  5905  0011F6  C083  F029         	movff	efgtoa@h+1,___flsub@b+1
  5906  0011FA  C084  F02A         	movff	efgtoa@h+2,___flsub@b+2
  5907  0011FE  C085  F02B         	movff	efgtoa@h+3,___flsub@b+3
  5908  001202  C094  F013         	movff	efgtoa@u,___flmul@a
  5909  001206  C095  F014         	movff	efgtoa@u+1,___flmul@a+1
  5910  00120A  C096  F015         	movff	efgtoa@u+2,___flmul@a+2
  5911  00120E  C097  F016         	movff	efgtoa@u+3,___flmul@a+3
  5912  001212  C086  F00F         	movff	efgtoa@l,___flmul@b
  5913  001216  C087  F010         	movff	efgtoa@l+1,___flmul@b+1
  5914  00121A  C088  F011         	movff	efgtoa@l+2,___flmul@b+2
  5915  00121E  C089  F012         	movff	efgtoa@l+3,___flmul@b+3
  5916  001222  ECFC  F010         	call	___flmul	;wreg free
  5917  001226  C00F  F02C         	movff	?___flmul,___flsub@a
  5918  00122A  C010  F02D         	movff	?___flmul+1,___flsub@a+1
  5919  00122E  C011  F02E         	movff	?___flmul+2,___flsub@a+2
  5920  001232  C012  F02F         	movff	?___flmul+3,___flsub@a+3
  5921  001236  EC53  F023         	call	___flsub	;wreg free
  5922  00123A  C028  F082         	movff	?___flsub,efgtoa@h
  5923  00123E  C029  F083         	movff	?___flsub+1,efgtoa@h+1
  5924  001242  C02A  F084         	movff	?___flsub+2,efgtoa@h+2
  5925  001246  C02B  F085         	movff	?___flsub+3,efgtoa@h+3
  5926  00124A                     
  5927                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 488:         u = 
      +                          u/10.0;
  5928  00124A  C094  F001         	movff	efgtoa@u,___fldiv@b
  5929  00124E  C095  F002         	movff	efgtoa@u+1,___fldiv@b+1
  5930  001252  C096  F003         	movff	efgtoa@u+2,___fldiv@b+2
  5931  001256  C097  F004         	movff	efgtoa@u+3,___fldiv@b+3
  5932  00125A  0E00               	movlw	0
  5933  00125C  6E05               	movwf	___fldiv@a^0,c
  5934  00125E  0E00               	movlw	0
  5935  001260  6E06               	movwf	(___fldiv@a+1)^0,c
  5936  001262  0E20               	movlw	32
  5937  001264  6E07               	movwf	(___fldiv@a+2)^0,c
  5938  001266  0E41               	movlw	65
  5939  001268  6E08               	movwf	(___fldiv@a+3)^0,c
  5940  00126A  EC11  F013         	call	___fldiv	;wreg free
  5941  00126E  C001  F094         	movff	?___fldiv,efgtoa@u
  5942  001272  C002  F095         	movff	?___fldiv+1,efgtoa@u+1
  5943  001276  C003  F096         	movff	?___fldiv+2,efgtoa@u+2
  5944  00127A  C004  F097         	movff	?___fldiv+3,efgtoa@u+3
  5945  00127E                     
  5946                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 489:         --ne
      +                          ;
  5947  00127E  0100               	movlb	0	; () banked
  5948  001280  0770               	decf	efgtoa@ne& (0+255),f,b
  5949  001282  A0D8               	btfss	status,0,c
  5950  001284  0771               	decf	(efgtoa@ne+1)& (0+255),f,b
  5951  001286                     
  5952                           ; BSR set to: 0
  5953                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 490:         ++i;
  5954  001286  4B8A               	infsnz	efgtoa@i& (0+255),f,b
  5955  001288  2B8B               	incf	(efgtoa@i+1)& (0+255),f,b
  5956  00128A                     l4292:
  5957                           
  5958                           ; BSR set to: 0
  5959                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 468:     while ((
      +                          i < m) && (n < (80 - 5))) {
  5960  00128A  5172               	movf	efgtoa@m& (0+255),w,b
  5961  00128C  5D8A               	subwf	efgtoa@i& (0+255),w,b
  5962  00128E  518B               	movf	(efgtoa@i+1)& (0+255),w,b
  5963  001290  0A80               	xorlw	128
  5964  001292  6E3B               	movwf	??_efgtoa^0,c
  5965  001294  5173               	movf	(efgtoa@m+1)& (0+255),w,b
  5966  001296  0A80               	xorlw	128
  5967  001298  583B               	subwfb	??_efgtoa^0,w,c
  5968  00129A  B0D8               	btfsc	status,0,c
  5969  00129C  EF52  F009         	goto	u5471
  5970  0012A0  EF54  F009         	goto	u5470
  5971  0012A4                     u5471:
  5972  0012A4  EF62  F009         	goto	l4296
  5973  0012A8                     u5470:
  5974  0012A8                     
  5975                           ; BSR set to: 0
  5976  0012A8  BF93               	btfsc	(efgtoa@n+1)& (0+255),7,b
  5977  0012AA  EF60  F009         	goto	u5481
  5978  0012AE  5193               	movf	(efgtoa@n+1)& (0+255),w,b
  5979  0012B0  E109               	bnz	u5480
  5980  0012B2  0E4B               	movlw	75
  5981  0012B4  5D92               	subwf	efgtoa@n& (0+255),w,b
  5982  0012B6  A0D8               	btfss	status,0,c
  5983  0012B8  EF60  F009         	goto	u5481
  5984  0012BC  EF62  F009         	goto	u5480
  5985  0012C0                     u5481:
  5986  0012C0  EF58  F008         	goto	l4244
  5987  0012C4                     u5480:
  5988  0012C4                     l4296:
  5989                           
  5990                           ; BSR set to: 0
  5991                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 492:     if (!pp 
      +                          && (flags & (1 << 4))) {
  5992  0012C4  516E               	movf	efgtoa@pp& (0+255),w,b
  5993  0012C6  116F               	iorwf	(efgtoa@pp+1)& (0+255),w,b
  5994  0012C8  A4D8               	btfss	status,2,c
  5995  0012CA  EF69  F009         	goto	u5491
  5996  0012CE  EF6B  F009         	goto	u5490
  5997  0012D2                     u5491:
  5998  0012D2  EF7C  F009         	goto	l4304
  5999  0012D6                     u5490:
  6000  0012D6                     
  6001                           ; BSR set to: 0
  6002  0012D6  A9D6               	btfss	_flags& (0+255),4,b
  6003  0012D8  EF70  F009         	goto	u5501
  6004  0012DC  EF72  F009         	goto	u5500
  6005  0012E0                     u5501:
  6006  0012E0  EF7C  F009         	goto	l4304
  6007  0012E4                     u5500:
  6008  0012E4                     
  6009                           ; BSR set to: 0
  6010                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 493:         dbuf
      +                          [n++] = '.';
  6011  0012E4  0E04               	movlw	low _dbuf
  6012  0012E6  2592               	addwf	efgtoa@n& (0+255),w,b
  6013  0012E8  6ED9               	movwf	fsr2l,c
  6014  0012EA  0E01               	movlw	high _dbuf
  6015  0012EC  2193               	addwfc	(efgtoa@n+1)& (0+255),w,b
  6016  0012EE  6EDA               	movwf	fsr2h,c
  6017  0012F0  0E2E               	movlw	46
  6018  0012F2  6EDF               	movwf	indf2,c
  6019  0012F4                     
  6020                           ; BSR set to: 0
  6021  0012F4  4B92               	infsnz	efgtoa@n& (0+255),f,b
  6022  0012F6  2B93               	incf	(efgtoa@n+1)& (0+255),f,b
  6023  0012F8                     l4304:
  6024                           
  6025                           ; BSR set to: 0
  6026                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 495:     dbuf[n] 
      +                          = '\0';
  6027  0012F8  0E04               	movlw	low _dbuf
  6028  0012FA  2592               	addwf	efgtoa@n& (0+255),w,b
  6029  0012FC  6ED9               	movwf	fsr2l,c
  6030  0012FE  0E01               	movlw	high _dbuf
  6031  001300  2193               	addwfc	(efgtoa@n+1)& (0+255),w,b
  6032  001302  6EDA               	movwf	fsr2h,c
  6033  001304  0E00               	movlw	0
  6034  001306  6EDF               	movwf	indf2,c
  6035  001308                     
  6036                           ; BSR set to: 0
  6037                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 498:     if (nmod
      +                          e == 'e') {
  6038  001308  0E65               	movlw	101
  6039  00130A  1980               	xorwf	efgtoa@nmode& (0+255),w,b
  6040  00130C  A4D8               	btfss	status,2,c
  6041  00130E  EF8B  F009         	goto	u5511
  6042  001312  EF8D  F009         	goto	u5510
  6043  001316                     u5511:
  6044  001316  EFE7  F004         	goto	l4106
  6045  00131A                     u5510:
  6046  00131A                     
  6047                           ; BSR set to: 0
  6048                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 499:         i = 
      +                          sizeof(dbuf) - 1;
  6049  00131A  0E00               	movlw	0
  6050  00131C  6F8B               	movwf	(efgtoa@i+1)& (0+255),b
  6051  00131E  0E4F               	movlw	79
  6052  001320  6F8A               	movwf	efgtoa@i& (0+255),b
  6053  001322                     
  6054                           ; BSR set to: 0
  6055                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 500:         dbuf
      +                          [i] = '\0';
  6056  001322  0E04               	movlw	low _dbuf
  6057  001324  258A               	addwf	efgtoa@i& (0+255),w,b
  6058  001326  6ED9               	movwf	fsr2l,c
  6059  001328  0E01               	movlw	high _dbuf
  6060  00132A  218B               	addwfc	(efgtoa@i+1)& (0+255),w,b
  6061  00132C  6EDA               	movwf	fsr2h,c
  6062  00132E  0E00               	movlw	0
  6063  001330  6EDF               	movwf	indf2,c
  6064  001332                     
  6065                           ; BSR set to: 0
  6066                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 501:         sign
      +                           = 0;
  6067  001332  0E00               	movlw	0
  6068  001334  6F7B               	movwf	(efgtoa@sign+1)& (0+255),b
  6069  001336  0E00               	movlw	0
  6070  001338  6F7A               	movwf	efgtoa@sign& (0+255),b
  6071  00133A                     
  6072                           ; BSR set to: 0
  6073                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 502:         if (
      +                          e < 0) {
  6074  00133A  BF91               	btfsc	(efgtoa@e+1)& (0+255),7,b
  6075  00133C  EFA4  F009         	goto	u5520
  6076  001340  EFA2  F009         	goto	u5521
  6077  001344                     u5521:
  6078  001344  EFAC  F009         	goto	l4320
  6079  001348                     u5520:
  6080  001348                     
  6081                           ; BSR set to: 0
  6082                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 503:             
      +                          sign = 1;
  6083  001348  0E00               	movlw	0
  6084  00134A  6F7B               	movwf	(efgtoa@sign+1)& (0+255),b
  6085  00134C  0E01               	movlw	1
  6086  00134E  6F7A               	movwf	efgtoa@sign& (0+255),b
  6087  001350                     
  6088                           ; BSR set to: 0
  6089                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 504:             
      +                          e = -e;
  6090  001350  6D90               	negf	efgtoa@e& (0+255),b
  6091  001352  1F91               	comf	(efgtoa@e+1)& (0+255),f,b
  6092  001354  B0D8               	btfsc	status,0,c
  6093  001356  2B91               	incf	(efgtoa@e+1)& (0+255),f,b
  6094  001358                     l4320:
  6095                           
  6096                           ; BSR set to: 0
  6097                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 506:         p = 
      +                          2;
  6098  001358  0E00               	movlw	0
  6099  00135A  6F7D               	movwf	(efgtoa@p+1)& (0+255),b
  6100  00135C  0E02               	movlw	2
  6101  00135E  6F7C               	movwf	efgtoa@p& (0+255),b
  6102                           
  6103                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 507:         whil
      +                          e (e || (0 < p)) {
  6104  001360  EFDD  F009         	goto	l4332
  6105  001364                     l4322:
  6106                           
  6107                           ; BSR set to: 0
  6108                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 508:             
      +                          --i;
  6109  001364  078A               	decf	efgtoa@i& (0+255),f,b
  6110  001366  A0D8               	btfss	status,0,c
  6111  001368  078B               	decf	(efgtoa@i+1)& (0+255),f,b
  6112  00136A                     
  6113                           ; BSR set to: 0
  6114                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 509:             
      +                          dbuf[i] = '0' + (e % 10);
  6115  00136A  0E04               	movlw	low _dbuf
  6116  00136C  258A               	addwf	efgtoa@i& (0+255),w,b
  6117  00136E  6ED9               	movwf	fsr2l,c
  6118  001370  0E01               	movlw	high _dbuf
  6119  001372  218B               	addwfc	(efgtoa@i+1)& (0+255),w,b
  6120  001374  6EDA               	movwf	fsr2h,c
  6121  001376  C090  F001         	movff	efgtoa@e,___awmod@dividend
  6122  00137A  C091  F002         	movff	efgtoa@e+1,___awmod@dividend+1
  6123  00137E  0E00               	movlw	0
  6124  001380  6E04               	movwf	(___awmod@divisor+1)^0,c
  6125  001382  0E0A               	movlw	10
  6126  001384  6E03               	movwf	___awmod@divisor^0,c
  6127  001386  ECED  F020         	call	___awmod	;wreg free
  6128  00138A  5001               	movf	?___awmod^0,w,c
  6129  00138C  0F30               	addlw	48
  6130  00138E  6EDF               	movwf	indf2,c
  6131  001390                     
  6132                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 510:             
      +                          e = e / 10;
  6133  001390  C090  F006         	movff	efgtoa@e,___awdiv@dividend
  6134  001394  C091  F007         	movff	efgtoa@e+1,___awdiv@dividend+1
  6135  001398  0E00               	movlw	0
  6136  00139A  6E09               	movwf	(___awdiv@divisor+1)^0,c
  6137  00139C  0E0A               	movlw	10
  6138  00139E  6E08               	movwf	___awdiv@divisor^0,c
  6139  0013A0  EC31  F020         	call	___awdiv	;wreg free
  6140  0013A4  C006  F090         	movff	?___awdiv,efgtoa@e
  6141  0013A8  C007  F091         	movff	?___awdiv+1,efgtoa@e+1
  6142  0013AC                     
  6143                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 511:             
      +                          --p;
  6144  0013AC  0100               	movlb	0	; () banked
  6145  0013AE  077C               	decf	efgtoa@p& (0+255),f,b
  6146  0013B0  A0D8               	btfss	status,0,c
  6147  0013B2  077D               	decf	(efgtoa@p+1)& (0+255),f,b
  6148  0013B4                     
  6149                           ; BSR set to: 0
  6150                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 512:             
      +                          --w;
  6151  0013B4  077E               	decf	efgtoa@w& (0+255),f,b
  6152  0013B6  A0D8               	btfss	status,0,c
  6153  0013B8  077F               	decf	(efgtoa@w+1)& (0+255),f,b
  6154  0013BA                     l4332:
  6155                           
  6156                           ; BSR set to: 0
  6157                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 507:         whil
      +                          e (e || (0 < p)) {
  6158  0013BA  5190               	movf	efgtoa@e& (0+255),w,b
  6159  0013BC  1191               	iorwf	(efgtoa@e+1)& (0+255),w,b
  6160  0013BE  A4D8               	btfss	status,2,c
  6161  0013C0  EFE4  F009         	goto	u5531
  6162  0013C4  EFE6  F009         	goto	u5530
  6163  0013C8                     u5531:
  6164  0013C8  EFB2  F009         	goto	l4322
  6165  0013CC                     u5530:
  6166  0013CC                     
  6167                           ; BSR set to: 0
  6168  0013CC  BF7D               	btfsc	(efgtoa@p+1)& (0+255),7,b
  6169  0013CE  EFF3  F009         	goto	u5540
  6170  0013D2  517D               	movf	(efgtoa@p+1)& (0+255),w,b
  6171  0013D4  E106               	bnz	u5541
  6172  0013D6  057C               	decf	efgtoa@p& (0+255),w,b
  6173  0013D8  B0D8               	btfsc	status,0,c
  6174  0013DA  EFF1  F009         	goto	u5541
  6175  0013DE  EFF3  F009         	goto	u5540
  6176  0013E2                     u5541:
  6177  0013E2  EFB2  F009         	goto	l4322
  6178  0013E6                     u5540:
  6179  0013E6                     
  6180                           ; BSR set to: 0
  6181                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 514:         --i;
  6182  0013E6  078A               	decf	efgtoa@i& (0+255),f,b
  6183  0013E8  A0D8               	btfss	status,0,c
  6184  0013EA  078B               	decf	(efgtoa@i+1)& (0+255),f,b
  6185  0013EC                     
  6186                           ; BSR set to: 0
  6187                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 515:         dbuf
      +                          [i] = sign ? '-' : '+';
  6188  0013EC  517A               	movf	efgtoa@sign& (0+255),w,b
  6189  0013EE  117B               	iorwf	(efgtoa@sign+1)& (0+255),w,b
  6190  0013F0  A4D8               	btfss	status,2,c
  6191  0013F2  EFFD  F009         	goto	u5551
  6192  0013F6  EFFF  F009         	goto	u5550
  6193  0013FA                     u5551:
  6194  0013FA  EF05  F00A         	goto	l4342
  6195  0013FE                     u5550:
  6196  0013FE                     
  6197                           ; BSR set to: 0
  6198  0013FE  0E00               	movlw	0
  6199  001400  6F67               	movwf	(_efgtoa$1241+1)& (0+255),b
  6200  001402  0E2B               	movlw	43
  6201  001404  6F66               	movwf	_efgtoa$1241& (0+255),b
  6202  001406  EF09  F00A         	goto	l4344
  6203  00140A                     l4342:
  6204                           
  6205                           ; BSR set to: 0
  6206  00140A  0E00               	movlw	0
  6207  00140C  6F67               	movwf	(_efgtoa$1241+1)& (0+255),b
  6208  00140E  0E2D               	movlw	45
  6209  001410  6F66               	movwf	_efgtoa$1241& (0+255),b
  6210  001412                     l4344:
  6211                           
  6212                           ; BSR set to: 0
  6213  001412  0E04               	movlw	low _dbuf
  6214  001414  258A               	addwf	efgtoa@i& (0+255),w,b
  6215  001416  6ED9               	movwf	fsr2l,c
  6216  001418  0E01               	movlw	high _dbuf
  6217  00141A  218B               	addwfc	(efgtoa@i+1)& (0+255),w,b
  6218  00141C  6EDA               	movwf	fsr2h,c
  6219  00141E  C066  FFDF         	movff	_efgtoa$1241,indf2
  6220  001422                     
  6221                           ; BSR set to: 0
  6222                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 516:         --w;
  6223  001422  077E               	decf	efgtoa@w& (0+255),f,b
  6224  001424  A0D8               	btfss	status,0,c
  6225  001426  077F               	decf	(efgtoa@w+1)& (0+255),f,b
  6226  001428                     
  6227                           ; BSR set to: 0
  6228                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 518:         dbuf
      +                          [i] = (0 ? isupper((int)c) : ((unsigned)((int)c)-'A') < 26) ? 'E' : 'e';
  6229  001428  078A               	decf	efgtoa@i& (0+255),f,b
  6230  00142A  A0D8               	btfss	status,0,c
  6231  00142C  078B               	decf	(efgtoa@i+1)& (0+255),f,b
  6232  00142E                     
  6233                           ; BSR set to: 0
  6234  00142E  0EBF               	movlw	191
  6235  001430  6E3B               	movwf	??_efgtoa^0,c
  6236  001432  0EFF               	movlw	255
  6237  001434  6E3C               	movwf	(??_efgtoa+1)^0,c
  6238  001436  503A               	movf	efgtoa@c^0,w,c
  6239  001438  6E3D               	movwf	(??_efgtoa+2)^0,c
  6240  00143A  6A3E               	clrf	(??_efgtoa+3)^0,c
  6241  00143C  503B               	movf	??_efgtoa^0,w,c
  6242  00143E  263D               	addwf	(??_efgtoa+2)^0,f,c
  6243  001440  503C               	movf	(??_efgtoa+1)^0,w,c
  6244  001442  223E               	addwfc	(??_efgtoa+3)^0,f,c
  6245  001444  503E               	movf	(??_efgtoa+3)^0,w,c
  6246  001446  E10A               	bnz	u5560
  6247  001448  0E1A               	movlw	26
  6248  00144A  5C3D               	subwf	(??_efgtoa+2)^0,w,c
  6249  00144C  A0D8               	btfss	status,0,c
  6250  00144E  EF2B  F00A         	goto	u5561
  6251  001452  EF2E  F00A         	goto	u5560
  6252  001456                     u5561:
  6253  001456  0E01               	movlw	1
  6254  001458  EF2F  F00A         	goto	u5570
  6255  00145C                     u5560:
  6256  00145C  0E00               	movlw	0
  6257  00145E                     u5570:
  6258  00145E  6F6A               	movwf	_efgtoa$1243& (0+255),b
  6259  001460  6B6B               	clrf	(_efgtoa$1243+1)& (0+255),b
  6260  001462                     
  6261                           ; BSR set to: 0
  6262  001462  516A               	movf	_efgtoa$1243& (0+255),w,b
  6263  001464  116B               	iorwf	(_efgtoa$1243+1)& (0+255),w,b
  6264  001466  A4D8               	btfss	status,2,c
  6265  001468  EF38  F00A         	goto	u5581
  6266  00146C  EF3A  F00A         	goto	u5580
  6267  001470                     u5581:
  6268  001470  EF40  F00A         	goto	l4358
  6269  001474                     u5580:
  6270  001474                     
  6271                           ; BSR set to: 0
  6272  001474  0E00               	movlw	0
  6273  001476  6F69               	movwf	(_efgtoa$1242+1)& (0+255),b
  6274  001478  0E65               	movlw	101
  6275  00147A  6F68               	movwf	_efgtoa$1242& (0+255),b
  6276  00147C  EF44  F00A         	goto	l4360
  6277  001480                     l4358:
  6278                           
  6279                           ; BSR set to: 0
  6280  001480  0E00               	movlw	0
  6281  001482  6F69               	movwf	(_efgtoa$1242+1)& (0+255),b
  6282  001484  0E45               	movlw	69
  6283  001486  6F68               	movwf	_efgtoa$1242& (0+255),b
  6284  001488                     l4360:
  6285                           
  6286                           ; BSR set to: 0
  6287  001488  0E04               	movlw	low _dbuf
  6288  00148A  258A               	addwf	efgtoa@i& (0+255),w,b
  6289  00148C  6ED9               	movwf	fsr2l,c
  6290  00148E  0E01               	movlw	high _dbuf
  6291  001490  218B               	addwfc	(efgtoa@i+1)& (0+255),w,b
  6292  001492  6EDA               	movwf	fsr2h,c
  6293  001494  C068  FFDF         	movff	_efgtoa$1242,indf2
  6294  001498                     
  6295                           ; BSR set to: 0
  6296                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 519:         --w;
  6297  001498  077E               	decf	efgtoa@w& (0+255),f,b
  6298  00149A  A0D8               	btfss	status,0,c
  6299  00149C  077F               	decf	(efgtoa@w+1)& (0+255),f,b
  6300  00149E                     
  6301                           ; BSR set to: 0
  6302                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 520:         strc
      +                          py(&dbuf[n], &dbuf[i]);
  6303  00149E  0E04               	movlw	low _dbuf
  6304  0014A0  2592               	addwf	efgtoa@n& (0+255),w,b
  6305  0014A2  6E01               	movwf	strcpy@dest^0,c
  6306  0014A4  0E01               	movlw	high _dbuf
  6307  0014A6  2193               	addwfc	(efgtoa@n+1)& (0+255),w,b
  6308  0014A8  6E02               	movwf	(strcpy@dest+1)^0,c
  6309  0014AA  0E04               	movlw	low _dbuf
  6310  0014AC  258A               	addwf	efgtoa@i& (0+255),w,b
  6311  0014AE  6E03               	movwf	strcpy@src^0,c
  6312  0014B0  0E01               	movlw	high _dbuf
  6313  0014B2  218B               	addwfc	(efgtoa@i+1)& (0+255),w,b
  6314  0014B4  6E04               	movwf	(strcpy@src+1)^0,c
  6315  0014B6  ECB1  F022         	call	_strcpy	;wreg free
  6316  0014BA  EFE7  F004         	goto	l4106
  6317  0014BE                     l964:
  6318  0014BE  0012               	return		;funcret
  6319  0014C0                     __end_of_efgtoa:
  6320                           	callstack 0
  6321                           
  6322 ;; *************** function _tolower *****************
  6323 ;; Defined at:
  6324 ;;		line 4 in file "C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\tolower.c"
  6325 ;; Parameters:    Size  Location     Type
  6326 ;;  c               2    6[COMRAM] int 
  6327 ;; Auto vars:     Size  Location     Type
  6328 ;;		None
  6329 ;; Return value:  Size  Location     Type
  6330 ;;                  2    6[COMRAM] int 
  6331 ;; Registers used:
  6332 ;;		wreg, status,2, status,0
  6333 ;; Tracked objects:
  6334 ;;		On entry : 0/0
  6335 ;;		On exit  : 0/0
  6336 ;;		Unchanged: 0/0
  6337 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  6338 ;;      Params:         2       0       0       0       0       0       0       0       0
  6339 ;;      Locals:         2       0       0       0       0       0       0       0       0
  6340 ;;      Temps:          4       0       0       0       0       0       0       0       0
  6341 ;;      Totals:         8       0       0       0       0       0       0       0       0
  6342 ;;Total ram usage:        8 bytes
  6343 ;; Hardware stack levels used:    1
  6344 ;; Hardware stack levels required when called:    1
  6345 ;; This function calls:
  6346 ;;		_isupper
  6347 ;; This function is called by:
  6348 ;;		_efgtoa
  6349 ;;		_vfpfcnvrt
  6350 ;; This function uses a non-reentrant model
  6351 ;;
  6352                           
  6353                           	psect	text21
  6354  004502                     __ptext21:
  6355                           	callstack 0
  6356  004502                     _tolower:
  6357                           	callstack 25
  6358  004502  0EBF               	movlw	191
  6359  004504  6E09               	movwf	??_tolower^0,c
  6360  004506  0EFF               	movlw	255
  6361  004508  6E0A               	movwf	(??_tolower+1)^0,c
  6362  00450A  C007  F00B         	movff	tolower@c,??_tolower+2
  6363  00450E  C008  F00C         	movff	tolower@c+1,??_tolower+3
  6364  004512  5009               	movf	??_tolower^0,w,c
  6365  004514  260B               	addwf	(??_tolower+2)^0,f,c
  6366  004516  500A               	movf	(??_tolower+1)^0,w,c
  6367  004518  220C               	addwfc	(??_tolower+3)^0,f,c
  6368  00451A  500C               	movf	(??_tolower+3)^0,w,c
  6369  00451C  E10A               	bnz	u4680
  6370  00451E  0E1A               	movlw	26
  6371  004520  5C0B               	subwf	(??_tolower+2)^0,w,c
  6372  004522  A0D8               	btfss	status,0,c
  6373  004524  EF96  F022         	goto	u4681
  6374  004528  EF99  F022         	goto	u4680
  6375  00452C                     u4681:
  6376  00452C  0E01               	movlw	1
  6377  00452E  EF9A  F022         	goto	u4690
  6378  004532                     u4680:
  6379  004532  0E00               	movlw	0
  6380  004534                     u4690:
  6381  004534  6E0D               	movwf	_tolower$1401^0,c
  6382  004536  6A0E               	clrf	(_tolower$1401+1)^0,c
  6383  004538  500D               	movf	_tolower$1401^0,w,c
  6384  00453A  100E               	iorwf	(_tolower$1401+1)^0,w,c
  6385  00453C  B4D8               	btfsc	status,2,c
  6386  00453E  EFA3  F022         	goto	u4701
  6387  004542  EFA5  F022         	goto	u4700
  6388  004546                     u4701:
  6389  004546  EFAC  F022         	goto	l1220
  6390  00454A                     u4700:
  6391  00454A  0E20               	movlw	32
  6392  00454C  1007               	iorwf	tolower@c^0,w,c
  6393  00454E  6E07               	movwf	?_tolower^0,c
  6394  004550  5008               	movf	(tolower@c+1)^0,w,c
  6395  004552  6E08               	movwf	(?_tolower+1)^0,c
  6396  004554  EFB0  F022         	goto	l1225
  6397  004558                     l1220:
  6398  004558  C007  F007         	movff	tolower@c,?_tolower
  6399  00455C  C008  F008         	movff	tolower@c+1,?_tolower+1
  6400  004560                     l1225:
  6401  004560  0012               	return		;funcret
  6402  004562                     __end_of_tolower:
  6403                           	callstack 0
  6404                           
  6405 ;; *************** function _isupper *****************
  6406 ;; Defined at:
  6407 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\isupper.c"
  6408 ;; Parameters:    Size  Location     Type
  6409 ;;  c               2    0[COMRAM] int 
  6410 ;; Auto vars:     Size  Location     Type
  6411 ;;		None
  6412 ;; Return value:  Size  Location     Type
  6413 ;;                  2    0[COMRAM] int 
  6414 ;; Registers used:
  6415 ;;		wreg, status,2, status,0
  6416 ;; Tracked objects:
  6417 ;;		On entry : 0/0
  6418 ;;		On exit  : 0/0
  6419 ;;		Unchanged: 0/0
  6420 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  6421 ;;      Params:         2       0       0       0       0       0       0       0       0
  6422 ;;      Locals:         0       0       0       0       0       0       0       0       0
  6423 ;;      Temps:          4       0       0       0       0       0       0       0       0
  6424 ;;      Totals:         6       0       0       0       0       0       0       0       0
  6425 ;;Total ram usage:        6 bytes
  6426 ;; Hardware stack levels used:    1
  6427 ;; This function calls:
  6428 ;;		Nothing
  6429 ;; This function is called by:
  6430 ;;		_efgtoa
  6431 ;;		_vfpfcnvrt
  6432 ;;		_tolower
  6433 ;; This function uses a non-reentrant model
  6434 ;;
  6435                           
  6436                           	psect	text22
  6437  0047F8                     __ptext22:
  6438                           	callstack 0
  6439  0047F8                     _isupper:
  6440                           	callstack 25
  6441  0047F8  0EBF               	movlw	191
  6442  0047FA  6E03               	movwf	??_isupper^0,c
  6443  0047FC  0EFF               	movlw	255
  6444  0047FE  6E04               	movwf	(??_isupper+1)^0,c
  6445  004800  C001  F005         	movff	isupper@c,??_isupper+2
  6446  004804  C002  F006         	movff	isupper@c+1,??_isupper+3
  6447  004808  5003               	movf	??_isupper^0,w,c
  6448  00480A  2605               	addwf	(??_isupper+2)^0,f,c
  6449  00480C  5004               	movf	(??_isupper+1)^0,w,c
  6450  00480E  2206               	addwfc	(??_isupper+3)^0,f,c
  6451  004810  5006               	movf	(??_isupper+3)^0,w,c
  6452  004812  E10A               	bnz	u3690
  6453  004814  0E1A               	movlw	26
  6454  004816  5C05               	subwf	(??_isupper+2)^0,w,c
  6455  004818  A0D8               	btfss	status,0,c
  6456  00481A  EF11  F024         	goto	u3691
  6457  00481E  EF14  F024         	goto	u3690
  6458  004822                     u3691:
  6459  004822  0E01               	movlw	1
  6460  004824  EF15  F024         	goto	u3700
  6461  004828                     u3690:
  6462  004828  0E00               	movlw	0
  6463  00482A                     u3700:
  6464  00482A  6E01               	movwf	?_isupper^0,c
  6465  00482C  6A02               	clrf	(?_isupper+1)^0,c
  6466  00482E  0012               	return		;funcret
  6467  004830                     __end_of_isupper:
  6468                           	callstack 0
  6469                           
  6470 ;; *************** function _strcpy *****************
  6471 ;; Defined at:
  6472 ;;		line 3 in file "C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\strcpy.c"
  6473 ;; Parameters:    Size  Location     Type
  6474 ;;  dest            2    0[COMRAM] PTR unsigned char 
  6475 ;;		 -> dbuf(80), 
  6476 ;;  src             2    2[COMRAM] PTR const unsigned char 
  6477 ;;		 -> STR_10(4), STR_9(4), STR_6(4), STR_5(4), 
  6478 ;;		 -> dbuf(80), 
  6479 ;; Auto vars:     Size  Location     Type
  6480 ;;  d               2    8[COMRAM] PTR unsigned char 
  6481 ;;		 -> dbuf(80), 
  6482 ;;  s               2    6[COMRAM] PTR const unsigned char 
  6483 ;;		 -> STR_10(4), STR_9(4), STR_6(4), STR_5(4), 
  6484 ;;		 -> dbuf(80), 
  6485 ;; Return value:  Size  Location     Type
  6486 ;;                  2    0[COMRAM] PTR unsigned char 
  6487 ;; Registers used:
  6488 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru
  6489 ;; Tracked objects:
  6490 ;;		On entry : 0/0
  6491 ;;		On exit  : 0/0
  6492 ;;		Unchanged: 0/0
  6493 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  6494 ;;      Params:         4       0       0       0       0       0       0       0       0
  6495 ;;      Locals:         4       0       0       0       0       0       0       0       0
  6496 ;;      Temps:          2       0       0       0       0       0       0       0       0
  6497 ;;      Totals:        10       0       0       0       0       0       0       0       0
  6498 ;;Total ram usage:       10 bytes
  6499 ;; Hardware stack levels used:    1
  6500 ;; This function calls:
  6501 ;;		Nothing
  6502 ;; This function is called by:
  6503 ;;		_efgtoa
  6504 ;; This function uses a non-reentrant model
  6505 ;;
  6506                           
  6507                           	psect	text23
  6508  004562                     __ptext23:
  6509                           	callstack 0
  6510  004562                     _strcpy:
  6511                           	callstack 25
  6512  004562  C003  F007         	movff	strcpy@src,strcpy@s
  6513  004566  C004  F008         	movff	strcpy@src+1,strcpy@s+1
  6514  00456A  C001  F009         	movff	strcpy@dest,strcpy@d
  6515  00456E  C002  F00A         	movff	strcpy@dest+1,strcpy@d+1
  6516  004572                     l3916:
  6517  004572  5007               	movf	strcpy@s^0,w,c
  6518  004574  6E05               	movwf	??_strcpy^0,c
  6519  004576  5008               	movf	(strcpy@s+1)^0,w,c
  6520  004578  6E06               	movwf	(??_strcpy+1)^0,c
  6521  00457A  4A07               	infsnz	strcpy@s^0,f,c
  6522  00457C  2A08               	incf	(strcpy@s+1)^0,f,c
  6523  00457E  C005  FFF6         	movff	??_strcpy,tblptrl
  6524  004582  C006  FFF7         	movff	??_strcpy+1,tblptrh
  6525  004586  6AF8               	clrf	tblptru,c
  6526  004588  C009  FFD9         	movff	strcpy@d,fsr2l
  6527  00458C  C00A  FFDA         	movff	strcpy@d+1,fsr2h
  6528  004590  4A09               	infsnz	strcpy@d^0,f,c
  6529  004592  2A0A               	incf	(strcpy@d+1)^0,f,c
  6530  004594  0E07               	movlw	(high __ramtop+-1)
  6531  004596  64F7               	cpfsgt	tblptrh,c
  6532  004598  D003               	bra	u4667
  6533  00459A  0008               	tblrd		*
  6534  00459C  50F5               	movf	tablat,w,c
  6535  00459E  D005               	bra	u4660
  6536  0045A0                     u4667:
  6537  0045A0  CFF6 FFE1          	movff	tblptrl,fsr1l
  6538  0045A4  CFF7 FFE2          	movff	tblptrh,fsr1h
  6539  0045A8  50E7               	movf	indf1,w,c
  6540  0045AA                     u4660:
  6541  0045AA  6EDF               	movwf	indf2,c
  6542  0045AC  50DF               	movf	indf2,w,c
  6543  0045AE  A4D8               	btfss	status,2,c
  6544  0045B0  EFDC  F022         	goto	u4671
  6545  0045B4  EFDE  F022         	goto	u4670
  6546  0045B8                     u4671:
  6547  0045B8  EFB9  F022         	goto	l3916
  6548  0045BC                     u4670:
  6549  0045BC  0012               	return		;funcret
  6550  0045BE                     __end_of_strcpy:
  6551                           	callstack 0
  6552                           
  6553 ;; *************** function _floorf *****************
  6554 ;; Defined at:
  6555 ;;		line 3 in file "C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\floorf.c"
  6556 ;; Parameters:    Size  Location     Type
  6557 ;;  x               4   25[COMRAM] float 
  6558 ;; Auto vars:     Size  Location     Type
  6559 ;;  u               4   41[COMRAM] struct .
  6560 ;;  m               4   35[COMRAM] unsigned long 
  6561 ;;  e               2   39[COMRAM] int 
  6562 ;; Return value:  Size  Location     Type
  6563 ;;                  4   25[COMRAM] float 
  6564 ;; Registers used:
  6565 ;;		wreg, status,2, status,0
  6566 ;; Tracked objects:
  6567 ;;		On entry : 0/0
  6568 ;;		On exit  : 0/0
  6569 ;;		Unchanged: 0/0
  6570 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  6571 ;;      Params:         4       0       0       0       0       0       0       0       0
  6572 ;;      Locals:        10       0       0       0       0       0       0       0       0
  6573 ;;      Temps:          6       0       0       0       0       0       0       0       0
  6574 ;;      Totals:        20       0       0       0       0       0       0       0       0
  6575 ;;Total ram usage:       20 bytes
  6576 ;; Hardware stack levels used:    1
  6577 ;; This function calls:
  6578 ;;		Nothing
  6579 ;; This function is called by:
  6580 ;;		_efgtoa
  6581 ;; This function uses a non-reentrant model
  6582 ;;
  6583                           
  6584                           	psect	text24
  6585  002CA0                     __ptext24:
  6586                           	callstack 0
  6587  002CA0                     _floorf:
  6588                           	callstack 25
  6589  002CA0  C0C0  F02A         	movff	floorf@F527,floorf@u
  6590  002CA4  C0C1  F02B         	movff	floorf@F527+1,floorf@u+1
  6591  002CA8  C0C2  F02C         	movff	floorf@F527+2,floorf@u+2
  6592  002CAC  C0C3  F02D         	movff	floorf@F527+3,floorf@u+3
  6593  002CB0  C01A  F02A         	movff	floorf@x,floorf@u
  6594  002CB4  C01B  F02B         	movff	floorf@x+1,floorf@u+1
  6595  002CB8  C01C  F02C         	movff	floorf@x+2,floorf@u+2
  6596  002CBC  C01D  F02D         	movff	floorf@x+3,floorf@u+3
  6597  002CC0  0E81               	movlw	129
  6598  002CC2  6E1E               	movwf	??_floorf^0,c
  6599  002CC4  0EFF               	movlw	255
  6600  002CC6  6E1F               	movwf	(??_floorf+1)^0,c
  6601  002CC8  C02A  F020         	movff	floorf@u,??_floorf+2
  6602  002CCC  C02B  F021         	movff	floorf@u+1,??_floorf+3
  6603  002CD0  C02C  F022         	movff	floorf@u+2,??_floorf+4
  6604  002CD4  C02D  F023         	movff	floorf@u+3,??_floorf+5
  6605  002CD8  0E18               	movlw	24
  6606  002CDA  EF74  F016         	goto	u4710
  6607  002CDE                     u4715:
  6608  002CDE  90D8               	bcf	status,0,c
  6609  002CE0  3223               	rrcf	(??_floorf+5)^0,f,c
  6610  002CE2  3222               	rrcf	(??_floorf+4)^0,f,c
  6611  002CE4  3221               	rrcf	(??_floorf+3)^0,f,c
  6612  002CE6  3220               	rrcf	(??_floorf+2)^0,f,c
  6613  002CE8                     u4710:
  6614  002CE8  2EE8               	decfsz	wreg,f,c
  6615  002CEA  EF6F  F016         	goto	u4715
  6616  002CEE  5020               	movf	(??_floorf+2)^0,w,c
  6617  002CF0  241E               	addwf	??_floorf^0,w,c
  6618  002CF2  6E28               	movwf	floorf@e^0,c
  6619  002CF4  0E00               	movlw	0
  6620  002CF6  201F               	addwfc	(??_floorf+1)^0,w,c
  6621  002CF8  6E29               	movwf	(floorf@e+1)^0,c
  6622  002CFA  BE29               	btfsc	(floorf@e+1)^0,7,c
  6623  002CFC  EF89  F016         	goto	u4721
  6624  002D00  5029               	movf	(floorf@e+1)^0,w,c
  6625  002D02  E109               	bnz	u4720
  6626  002D04  0E17               	movlw	23
  6627  002D06  5C28               	subwf	floorf@e^0,w,c
  6628  002D08  A0D8               	btfss	status,0,c
  6629  002D0A  EF89  F016         	goto	u4721
  6630  002D0E  EF8B  F016         	goto	u4720
  6631  002D12                     u4721:
  6632  002D12  EF95  F016         	goto	l3934
  6633  002D16                     u4720:
  6634  002D16                     l3932:
  6635  002D16  C01A  F01A         	movff	floorf@x,?_floorf
  6636  002D1A  C01B  F01B         	movff	floorf@x+1,?_floorf+1
  6637  002D1E  C01C  F01C         	movff	floorf@x+2,?_floorf+2
  6638  002D22  C01D  F01D         	movff	floorf@x+3,?_floorf+3
  6639  002D26  EF58  F017         	goto	l1140
  6640  002D2A                     l3934:
  6641  002D2A  BE29               	btfsc	(floorf@e+1)^0,7,c
  6642  002D2C  EF9A  F016         	goto	u4731
  6643  002D30  EF9C  F016         	goto	u4730
  6644  002D34                     u4731:
  6645  002D34  EF0C  F017         	goto	l3944
  6646  002D38                     u4730:
  6647  002D38  C028  F01E         	movff	floorf@e,??_floorf
  6648  002D3C  0EFF               	movlw	255
  6649  002D3E  6E1F               	movwf	(??_floorf+1)^0,c
  6650  002D40  0EFF               	movlw	255
  6651  002D42  6E20               	movwf	(??_floorf+2)^0,c
  6652  002D44  0E7F               	movlw	127
  6653  002D46  6E21               	movwf	(??_floorf+3)^0,c
  6654  002D48  0E00               	movlw	0
  6655  002D4A  6E22               	movwf	(??_floorf+4)^0,c
  6656  002D4C                     u4745:
  6657  002D4C  661E               	tstfsz	??_floorf^0,c
  6658  002D4E  EFAB  F016         	goto	u4746
  6659  002D52  EFB3  F016         	goto	u4747
  6660  002D56                     u4746:
  6661  002D56  3422               	rlcf	(??_floorf+4)^0,w,c
  6662  002D58  3222               	rrcf	(??_floorf+4)^0,f,c
  6663  002D5A  3221               	rrcf	(??_floorf+3)^0,f,c
  6664  002D5C  3220               	rrcf	(??_floorf+2)^0,f,c
  6665  002D5E  321F               	rrcf	(??_floorf+1)^0,f,c
  6666  002D60  2E1E               	decfsz	??_floorf^0,f,c
  6667  002D62  EFA6  F016         	goto	u4745
  6668  002D66                     u4747:
  6669  002D66  C01F  F024         	movff	??_floorf+1,floorf@m
  6670  002D6A  C020  F025         	movff	??_floorf+2,floorf@m+1
  6671  002D6E  C021  F026         	movff	??_floorf+3,floorf@m+2
  6672  002D72  C022  F027         	movff	??_floorf+4,floorf@m+3
  6673  002D76  5024               	movf	floorf@m^0,w,c
  6674  002D78  142A               	andwf	floorf@u^0,w,c
  6675  002D7A  6E1E               	movwf	??_floorf^0,c
  6676  002D7C  5025               	movf	(floorf@m+1)^0,w,c
  6677  002D7E  142B               	andwf	(floorf@u+1)^0,w,c
  6678  002D80  6E1F               	movwf	(??_floorf+1)^0,c
  6679  002D82  5026               	movf	(floorf@m+2)^0,w,c
  6680  002D84  142C               	andwf	(floorf@u+2)^0,w,c
  6681  002D86  6E20               	movwf	(??_floorf+2)^0,c
  6682  002D88  5027               	movf	(floorf@m+3)^0,w,c
  6683  002D8A  142D               	andwf	(floorf@u+3)^0,w,c
  6684  002D8C  6E21               	movwf	(??_floorf+3)^0,c
  6685  002D8E  501E               	movf	??_floorf^0,w,c
  6686  002D90  101F               	iorwf	(??_floorf+1)^0,w,c
  6687  002D92  1020               	iorwf	(??_floorf+2)^0,w,c
  6688  002D94  1021               	iorwf	(??_floorf+3)^0,w,c
  6689  002D96  A4D8               	btfss	status,2,c
  6690  002D98  EFD0  F016         	goto	u4751
  6691  002D9C  EFD2  F016         	goto	u4750
  6692  002DA0                     u4751:
  6693  002DA0  EFD4  F016         	goto	l3940
  6694  002DA4                     u4750:
  6695  002DA4  EF8B  F016         	goto	l3932
  6696  002DA8                     l3940:
  6697  002DA8  C02A  F01E         	movff	floorf@u,??_floorf
  6698  002DAC  C02B  F01F         	movff	floorf@u+1,??_floorf+1
  6699  002DB0  C02C  F020         	movff	floorf@u+2,??_floorf+2
  6700  002DB4  C02D  F021         	movff	floorf@u+3,??_floorf+3
  6701  002DB8  0E20               	movlw	32
  6702  002DBA  EFE4  F016         	goto	u4760
  6703  002DBE                     u4765:
  6704  002DBE  90D8               	bcf	status,0,c
  6705  002DC0  3221               	rrcf	(??_floorf+3)^0,f,c
  6706  002DC2  3220               	rrcf	(??_floorf+2)^0,f,c
  6707  002DC4  321F               	rrcf	(??_floorf+1)^0,f,c
  6708  002DC6  321E               	rrcf	??_floorf^0,f,c
  6709  002DC8                     u4760:
  6710  002DC8  2EE8               	decfsz	wreg,f,c
  6711  002DCA  EFDF  F016         	goto	u4765
  6712  002DCE  501E               	movf	??_floorf^0,w,c
  6713  002DD0  101F               	iorwf	(??_floorf+1)^0,w,c
  6714  002DD2  1020               	iorwf	(??_floorf+2)^0,w,c
  6715  002DD4  1021               	iorwf	(??_floorf+3)^0,w,c
  6716  002DD6  B4D8               	btfsc	status,2,c
  6717  002DD8  EFF0  F016         	goto	u4771
  6718  002DDC  EFF2  F016         	goto	u4770
  6719  002DE0                     u4771:
  6720  002DE0  EFFA  F016         	goto	l1143
  6721  002DE4                     u4770:
  6722  002DE4  5024               	movf	floorf@m^0,w,c
  6723  002DE6  262A               	addwf	floorf@u^0,f,c
  6724  002DE8  5025               	movf	(floorf@m+1)^0,w,c
  6725  002DEA  222B               	addwfc	(floorf@u+1)^0,f,c
  6726  002DEC  5026               	movf	(floorf@m+2)^0,w,c
  6727  002DEE  222C               	addwfc	(floorf@u+2)^0,f,c
  6728  002DF0  5027               	movf	(floorf@m+3)^0,w,c
  6729  002DF2  222D               	addwfc	(floorf@u+3)^0,f,c
  6730  002DF4                     l1143:
  6731  002DF4  1C24               	comf	floorf@m^0,w,c
  6732  002DF6  6E1E               	movwf	??_floorf^0,c
  6733  002DF8  1C25               	comf	(floorf@m+1)^0,w,c
  6734  002DFA  6E1F               	movwf	(??_floorf+1)^0,c
  6735  002DFC  1C26               	comf	(floorf@m+2)^0,w,c
  6736  002DFE  6E20               	movwf	(??_floorf+2)^0,c
  6737  002E00  1C27               	comf	(floorf@m+3)^0,w,c
  6738  002E02  6E21               	movwf	(??_floorf+3)^0,c
  6739  002E04  501E               	movf	??_floorf^0,w,c
  6740  002E06  162A               	andwf	floorf@u^0,f,c
  6741  002E08  501F               	movf	(??_floorf+1)^0,w,c
  6742  002E0A  162B               	andwf	(floorf@u+1)^0,f,c
  6743  002E0C  5020               	movf	(??_floorf+2)^0,w,c
  6744  002E0E  162C               	andwf	(floorf@u+2)^0,f,c
  6745  002E10  5021               	movf	(??_floorf+3)^0,w,c
  6746  002E12  162D               	andwf	(floorf@u+3)^0,f,c
  6747  002E14  EF50  F017         	goto	l3952
  6748  002E18                     l3944:
  6749  002E18  C02A  F01E         	movff	floorf@u,??_floorf
  6750  002E1C  C02B  F01F         	movff	floorf@u+1,??_floorf+1
  6751  002E20  C02C  F020         	movff	floorf@u+2,??_floorf+2
  6752  002E24  C02D  F021         	movff	floorf@u+3,??_floorf+3
  6753  002E28  0E20               	movlw	32
  6754  002E2A  EF1C  F017         	goto	u4780
  6755  002E2E                     u4785:
  6756  002E2E  90D8               	bcf	status,0,c
  6757  002E30  3221               	rrcf	(??_floorf+3)^0,f,c
  6758  002E32  3220               	rrcf	(??_floorf+2)^0,f,c
  6759  002E34  321F               	rrcf	(??_floorf+1)^0,f,c
  6760  002E36  321E               	rrcf	??_floorf^0,f,c
  6761  002E38                     u4780:
  6762  002E38  2EE8               	decfsz	wreg,f,c
  6763  002E3A  EF17  F017         	goto	u4785
  6764  002E3E  501E               	movf	??_floorf^0,w,c
  6765  002E40  101F               	iorwf	(??_floorf+1)^0,w,c
  6766  002E42  1020               	iorwf	(??_floorf+2)^0,w,c
  6767  002E44  1021               	iorwf	(??_floorf+3)^0,w,c
  6768  002E46  A4D8               	btfss	status,2,c
  6769  002E48  EF28  F017         	goto	u4791
  6770  002E4C  EF2A  F017         	goto	u4790
  6771  002E50                     u4791:
  6772  002E50  EF34  F017         	goto	l3948
  6773  002E54                     u4790:
  6774  002E54  0E00               	movlw	0
  6775  002E56  6E2A               	movwf	floorf@u^0,c
  6776  002E58  0E00               	movlw	0
  6777  002E5A  6E2B               	movwf	(floorf@u+1)^0,c
  6778  002E5C  0E00               	movlw	0
  6779  002E5E  6E2C               	movwf	(floorf@u+2)^0,c
  6780  002E60  0E00               	movlw	0
  6781  002E62  6E2D               	movwf	(floorf@u+3)^0,c
  6782  002E64  EF50  F017         	goto	l3952
  6783  002E68                     l3948:
  6784  002E68  90D8               	bcf	status,0,c
  6785  002E6A  342A               	rlcf	floorf@u^0,w,c
  6786  002E6C  6E1E               	movwf	??_floorf^0,c
  6787  002E6E  342B               	rlcf	(floorf@u+1)^0,w,c
  6788  002E70  6E1F               	movwf	(??_floorf+1)^0,c
  6789  002E72  342C               	rlcf	(floorf@u+2)^0,w,c
  6790  002E74  6E20               	movwf	(??_floorf+2)^0,c
  6791  002E76  342D               	rlcf	(floorf@u+3)^0,w,c
  6792  002E78  6E21               	movwf	(??_floorf+3)^0,c
  6793  002E7A  501E               	movf	??_floorf^0,w,c
  6794  002E7C  101F               	iorwf	(??_floorf+1)^0,w,c
  6795  002E7E  1020               	iorwf	(??_floorf+2)^0,w,c
  6796  002E80  1021               	iorwf	(??_floorf+3)^0,w,c
  6797  002E82  B4D8               	btfsc	status,2,c
  6798  002E84  EF46  F017         	goto	u4801
  6799  002E88  EF48  F017         	goto	u4800
  6800  002E8C                     u4801:
  6801  002E8C  EF50  F017         	goto	l3952
  6802  002E90                     u4800:
  6803  002E90  0E00               	movlw	0
  6804  002E92  6E2A               	movwf	floorf@u^0,c
  6805  002E94  0E00               	movlw	0
  6806  002E96  6E2B               	movwf	(floorf@u+1)^0,c
  6807  002E98  0E80               	movlw	128
  6808  002E9A  6E2C               	movwf	(floorf@u+2)^0,c
  6809  002E9C  0EBF               	movlw	191
  6810  002E9E  6E2D               	movwf	(floorf@u+3)^0,c
  6811  002EA0                     l3952:
  6812  002EA0  C02A  F01A         	movff	floorf@u,?_floorf
  6813  002EA4  C02B  F01B         	movff	floorf@u+1,?_floorf+1
  6814  002EA8  C02C  F01C         	movff	floorf@u+2,?_floorf+2
  6815  002EAC  C02D  F01D         	movff	floorf@u+3,?_floorf+3
  6816  002EB0                     l1140:
  6817  002EB0  0012               	return		;funcret
  6818  002EB2                     __end_of_floorf:
  6819                           	callstack 0
  6820                           
  6821 ;; *************** function ___fpclassifyf *****************
  6822 ;; Defined at:
  6823 ;;		line 4 in file "C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\__fpclassifyf.c"
  6824 ;; Parameters:    Size  Location     Type
  6825 ;;  x               4    0[COMRAM] float 
  6826 ;; Auto vars:     Size  Location     Type
  6827 ;;  u               4   10[COMRAM] struct .
  6828 ;;  e               2    8[COMRAM] int 
  6829 ;; Return value:  Size  Location     Type
  6830 ;;                  2    0[COMRAM] int 
  6831 ;; Registers used:
  6832 ;;		wreg, status,2, status,0
  6833 ;; Tracked objects:
  6834 ;;		On entry : 0/0
  6835 ;;		On exit  : 0/0
  6836 ;;		Unchanged: 0/0
  6837 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  6838 ;;      Params:         4       0       0       0       0       0       0       0       0
  6839 ;;      Locals:         6       0       0       0       0       0       0       0       0
  6840 ;;      Temps:          4       0       0       0       0       0       0       0       0
  6841 ;;      Totals:        14       0       0       0       0       0       0       0       0
  6842 ;;Total ram usage:       14 bytes
  6843 ;; Hardware stack levels used:    1
  6844 ;; This function calls:
  6845 ;;		Nothing
  6846 ;; This function is called by:
  6847 ;;		_efgtoa
  6848 ;; This function uses a non-reentrant model
  6849 ;;
  6850                           
  6851                           	psect	text25
  6852  003A5A                     __ptext25:
  6853                           	callstack 0
  6854  003A5A                     ___fpclassifyf:
  6855                           	callstack 25
  6856  003A5A  C0C4  F00B         	movff	___fpclassifyf@F465,___fpclassifyf@u
  6857  003A5E  C0C5  F00C         	movff	___fpclassifyf@F465+1,___fpclassifyf@u+1
  6858  003A62  C0C6  F00D         	movff	___fpclassifyf@F465+2,___fpclassifyf@u+2
  6859  003A66  C0C7  F00E         	movff	___fpclassifyf@F465+3,___fpclassifyf@u+3
  6860  003A6A  C001  F00B         	movff	___fpclassifyf@x,___fpclassifyf@u
  6861  003A6E  C002  F00C         	movff	___fpclassifyf@x+1,___fpclassifyf@u+1
  6862  003A72  C003  F00D         	movff	___fpclassifyf@x+2,___fpclassifyf@u+2
  6863  003A76  C004  F00E         	movff	___fpclassifyf@x+3,___fpclassifyf@u+3
  6864  003A7A  C00B  F005         	movff	___fpclassifyf@u,??___fpclassifyf
  6865  003A7E  C00C  F006         	movff	___fpclassifyf@u+1,??___fpclassifyf+1
  6866  003A82  C00D  F007         	movff	___fpclassifyf@u+2,??___fpclassifyf+2
  6867  003A86  C00E  F008         	movff	___fpclassifyf@u+3,??___fpclassifyf+3
  6868  003A8A  0E18               	movlw	24
  6869  003A8C  EF4D  F01D         	goto	u4590
  6870  003A90                     u4595:
  6871  003A90  90D8               	bcf	status,0,c
  6872  003A92  3208               	rrcf	(??___fpclassifyf+3)^0,f,c
  6873  003A94  3207               	rrcf	(??___fpclassifyf+2)^0,f,c
  6874  003A96  3206               	rrcf	(??___fpclassifyf+1)^0,f,c
  6875  003A98  3205               	rrcf	??___fpclassifyf^0,f,c
  6876  003A9A                     u4590:
  6877  003A9A  2EE8               	decfsz	wreg,f,c
  6878  003A9C  EF48  F01D         	goto	u4595
  6879  003AA0  5005               	movf	??___fpclassifyf^0,w,c
  6880  003AA2  6E09               	movwf	___fpclassifyf@e^0,c
  6881  003AA4  6A0A               	clrf	(___fpclassifyf@e+1)^0,c
  6882  003AA6  5009               	movf	___fpclassifyf@e^0,w,c
  6883  003AA8  100A               	iorwf	(___fpclassifyf@e+1)^0,w,c
  6884  003AAA  A4D8               	btfss	status,2,c
  6885  003AAC  EF5A  F01D         	goto	u4601
  6886  003AB0  EF5C  F01D         	goto	u4600
  6887  003AB4                     u4601:
  6888  003AB4  EF7C  F01D         	goto	l3904
  6889  003AB8                     u4600:
  6890  003AB8  90D8               	bcf	status,0,c
  6891  003ABA  340B               	rlcf	___fpclassifyf@u^0,w,c
  6892  003ABC  6E05               	movwf	??___fpclassifyf^0,c
  6893  003ABE  340C               	rlcf	(___fpclassifyf@u+1)^0,w,c
  6894  003AC0  6E06               	movwf	(??___fpclassifyf+1)^0,c
  6895  003AC2  340D               	rlcf	(___fpclassifyf@u+2)^0,w,c
  6896  003AC4  6E07               	movwf	(??___fpclassifyf+2)^0,c
  6897  003AC6  340E               	rlcf	(___fpclassifyf@u+3)^0,w,c
  6898  003AC8  6E08               	movwf	(??___fpclassifyf+3)^0,c
  6899  003ACA  5005               	movf	??___fpclassifyf^0,w,c
  6900  003ACC  1006               	iorwf	(??___fpclassifyf+1)^0,w,c
  6901  003ACE  1007               	iorwf	(??___fpclassifyf+2)^0,w,c
  6902  003AD0  1008               	iorwf	(??___fpclassifyf+3)^0,w,c
  6903  003AD2  A4D8               	btfss	status,2,c
  6904  003AD4  EF6E  F01D         	goto	u4611
  6905  003AD8  EF70  F01D         	goto	u4610
  6906  003ADC                     u4611:
  6907  003ADC  EF76  F01D         	goto	l3900
  6908  003AE0                     u4610:
  6909  003AE0  0E00               	movlw	0
  6910  003AE2  6E02               	movwf	(?___fpclassifyf+1)^0,c
  6911  003AE4  0E02               	movlw	2
  6912  003AE6  6E01               	movwf	?___fpclassifyf^0,c
  6913  003AE8  EFAB  F01D         	goto	l1095
  6914  003AEC                     l3900:
  6915  003AEC  0E00               	movlw	0
  6916  003AEE  6E02               	movwf	(?___fpclassifyf+1)^0,c
  6917  003AF0  0E03               	movlw	3
  6918  003AF2  6E01               	movwf	?___fpclassifyf^0,c
  6919  003AF4  EFAB  F01D         	goto	l1095
  6920  003AF8                     l3904:
  6921  003AF8  2809               	incf	___fpclassifyf@e^0,w,c
  6922  003AFA  100A               	iorwf	(___fpclassifyf@e+1)^0,w,c
  6923  003AFC  A4D8               	btfss	status,2,c
  6924  003AFE  EF83  F01D         	goto	u4621
  6925  003B02  EF85  F01D         	goto	u4620
  6926  003B06                     u4621:
  6927  003B06  EFA7  F01D         	goto	l3910
  6928  003B0A                     u4620:
  6929  003B0A  C00B  F005         	movff	___fpclassifyf@u,??___fpclassifyf
  6930  003B0E  C00C  F006         	movff	___fpclassifyf@u+1,??___fpclassifyf+1
  6931  003B12  C00D  F007         	movff	___fpclassifyf@u+2,??___fpclassifyf+2
  6932  003B16  C00E  F008         	movff	___fpclassifyf@u+3,??___fpclassifyf+3
  6933  003B1A  0E09               	movlw	9
  6934  003B1C                     u4635:
  6935  003B1C  90D8               	bcf	status,0,c
  6936  003B1E  3605               	rlcf	??___fpclassifyf^0,f,c
  6937  003B20  3606               	rlcf	(??___fpclassifyf+1)^0,f,c
  6938  003B22  3607               	rlcf	(??___fpclassifyf+2)^0,f,c
  6939  003B24  3608               	rlcf	(??___fpclassifyf+3)^0,f,c
  6940  003B26  2EE8               	decfsz	wreg,f,c
  6941  003B28  EF8E  F01D         	goto	u4635
  6942  003B2C  5005               	movf	??___fpclassifyf^0,w,c
  6943  003B2E  1006               	iorwf	(??___fpclassifyf+1)^0,w,c
  6944  003B30  1007               	iorwf	(??___fpclassifyf+2)^0,w,c
  6945  003B32  1008               	iorwf	(??___fpclassifyf+3)^0,w,c
  6946  003B34  B4D8               	btfsc	status,2,c
  6947  003B36  EF9F  F01D         	goto	u4641
  6948  003B3A  EFA2  F01D         	goto	u4640
  6949  003B3E                     u4641:
  6950  003B3E  0E01               	movlw	1
  6951  003B40  EFA3  F01D         	goto	u4650
  6952  003B44                     u4640:
  6953  003B44  0E00               	movlw	0
  6954  003B46                     u4650:
  6955  003B46  6E01               	movwf	?___fpclassifyf^0,c
  6956  003B48  6A02               	clrf	(?___fpclassifyf+1)^0,c
  6957  003B4A  EFAB  F01D         	goto	l1095
  6958  003B4E                     l3910:
  6959  003B4E  0E00               	movlw	0
  6960  003B50  6E02               	movwf	(?___fpclassifyf+1)^0,c
  6961  003B52  0E04               	movlw	4
  6962  003B54  6E01               	movwf	?___fpclassifyf^0,c
  6963  003B56                     l1095:
  6964  003B56  0012               	return		;funcret
  6965  003B58                     __end_of___fpclassifyf:
  6966                           	callstack 0
  6967                           
  6968 ;; *************** function ___fltol *****************
  6969 ;; Defined at:
  6970 ;;		line 43 in file "C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\fltol.c"
  6971 ;; Parameters:    Size  Location     Type
  6972 ;;  f1              4    0[COMRAM] int 
  6973 ;; Auto vars:     Size  Location     Type
  6974 ;;  exp1            1    9[COMRAM] unsigned char 
  6975 ;;  sign1           1    8[COMRAM] unsigned char 
  6976 ;; Return value:  Size  Location     Type
  6977 ;;                  4    0[COMRAM] long 
  6978 ;; Registers used:
  6979 ;;		wreg, status,2, status,0
  6980 ;; Tracked objects:
  6981 ;;		On entry : 0/0
  6982 ;;		On exit  : 0/0
  6983 ;;		Unchanged: 0/0
  6984 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  6985 ;;      Params:         4       0       0       0       0       0       0       0       0
  6986 ;;      Locals:         2       0       0       0       0       0       0       0       0
  6987 ;;      Temps:          4       0       0       0       0       0       0       0       0
  6988 ;;      Totals:        10       0       0       0       0       0       0       0       0
  6989 ;;Total ram usage:       10 bytes
  6990 ;; Hardware stack levels used:    1
  6991 ;; This function calls:
  6992 ;;		Nothing
  6993 ;; This function is called by:
  6994 ;;		_efgtoa
  6995 ;; This function uses a non-reentrant model
  6996 ;;
  6997                           
  6998                           	psect	text26
  6999  00374C                     __ptext26:
  7000                           	callstack 0
  7001  00374C                     ___fltol:
  7002                           	callstack 25
  7003  00374C  3403               	rlcf	(___fltol@f1+2)^0,w,c
  7004  00374E  3404               	rlcf	(___fltol@f1+3)^0,w,c
  7005  003750  6E0A               	movwf	___fltol@exp1^0,c
  7006  003752  500A               	movf	___fltol@exp1^0,w,c
  7007  003754  A4D8               	btfss	status,2,c
  7008  003756  EFAF  F01B         	goto	u4471
  7009  00375A  EFB1  F01B         	goto	u4470
  7010  00375E                     u4471:
  7011  00375E  EFBB  F01B         	goto	l3828
  7012  003762                     u4470:
  7013  003762                     l3824:
  7014  003762  0E00               	movlw	0
  7015  003764  6E01               	movwf	?___fltol^0,c
  7016  003766  0E00               	movlw	0
  7017  003768  6E02               	movwf	(?___fltol+1)^0,c
  7018  00376A  0E00               	movlw	0
  7019  00376C  6E03               	movwf	(?___fltol+2)^0,c
  7020  00376E  0E00               	movlw	0
  7021  003770  6E04               	movwf	(?___fltol+3)^0,c
  7022  003772  EF28  F01C         	goto	l475
  7023  003776                     l3828:
  7024  003776  C001  F005         	movff	___fltol@f1,??___fltol
  7025  00377A  C002  F006         	movff	___fltol@f1+1,??___fltol+1
  7026  00377E  C003  F007         	movff	___fltol@f1+2,??___fltol+2
  7027  003782  C004  F008         	movff	___fltol@f1+3,??___fltol+3
  7028  003786  0E20               	movlw	32
  7029  003788  EFCB  F01B         	goto	u4480
  7030  00378C                     u4485:
  7031  00378C  90D8               	bcf	status,0,c
  7032  00378E  3208               	rrcf	(??___fltol+3)^0,f,c
  7033  003790  3207               	rrcf	(??___fltol+2)^0,f,c
  7034  003792  3206               	rrcf	(??___fltol+1)^0,f,c
  7035  003794  3205               	rrcf	??___fltol^0,f,c
  7036  003796                     u4480:
  7037  003796  2EE8               	decfsz	wreg,f,c
  7038  003798  EFC6  F01B         	goto	u4485
  7039  00379C  5005               	movf	??___fltol^0,w,c
  7040  00379E  6E09               	movwf	___fltol@sign1^0,c
  7041  0037A0  8E03               	bsf	(___fltol@f1+2)^0,7,c
  7042  0037A2  0EFF               	movlw	255
  7043  0037A4  1601               	andwf	___fltol@f1^0,f,c
  7044  0037A6  0EFF               	movlw	255
  7045  0037A8  1602               	andwf	(___fltol@f1+1)^0,f,c
  7046  0037AA  0EFF               	movlw	255
  7047  0037AC  1603               	andwf	(___fltol@f1+2)^0,f,c
  7048  0037AE  0E00               	movlw	0
  7049  0037B0  1604               	andwf	(___fltol@f1+3)^0,f,c
  7050  0037B2  0E96               	movlw	150
  7051  0037B4  5E0A               	subwf	___fltol@exp1^0,f,c
  7052  0037B6  BE0A               	btfsc	___fltol@exp1^0,7,c
  7053  0037B8  EFE2  F01B         	goto	u4490
  7054  0037BC  EFE0  F01B         	goto	u4491
  7055  0037C0                     u4491:
  7056  0037C0  EFF8  F01B         	goto	l3848
  7057  0037C4                     u4490:
  7058  0037C4  500A               	movf	___fltol@exp1^0,w,c
  7059  0037C6  0A80               	xorlw	128
  7060  0037C8  0F97               	addlw	151
  7061  0037CA  B0D8               	btfsc	status,0,c
  7062  0037CC  EFEA  F01B         	goto	u4501
  7063  0037D0  EFEC  F01B         	goto	u4500
  7064  0037D4                     u4501:
  7065  0037D4  EFEE  F01B         	goto	l3844
  7066  0037D8                     u4500:
  7067  0037D8  EFB1  F01B         	goto	l3824
  7068  0037DC                     l3844:
  7069  0037DC  90D8               	bcf	status,0,c
  7070  0037DE  3204               	rrcf	(___fltol@f1+3)^0,f,c
  7071  0037E0  3203               	rrcf	(___fltol@f1+2)^0,f,c
  7072  0037E2  3202               	rrcf	(___fltol@f1+1)^0,f,c
  7073  0037E4  3201               	rrcf	___fltol@f1^0,f,c
  7074  0037E6  3E0A               	incfsz	___fltol@exp1^0,f,c
  7075  0037E8  EFEE  F01B         	goto	l3844
  7076  0037EC  EF10  F01C         	goto	l3858
  7077  0037F0                     l3848:
  7078  0037F0  0E1F               	movlw	31
  7079  0037F2  640A               	cpfsgt	___fltol@exp1^0,c
  7080  0037F4  EFFE  F01B         	goto	u4511
  7081  0037F8  EF00  F01C         	goto	u4510
  7082  0037FC                     u4511:
  7083  0037FC  EF08  F01C         	goto	l3856
  7084  003800                     u4510:
  7085  003800  EFB1  F01B         	goto	l3824
  7086  003804                     l3854:
  7087  003804  90D8               	bcf	status,0,c
  7088  003806  3601               	rlcf	___fltol@f1^0,f,c
  7089  003808  3602               	rlcf	(___fltol@f1+1)^0,f,c
  7090  00380A  3603               	rlcf	(___fltol@f1+2)^0,f,c
  7091  00380C  3604               	rlcf	(___fltol@f1+3)^0,f,c
  7092  00380E  060A               	decf	___fltol@exp1^0,f,c
  7093  003810                     l3856:
  7094  003810  500A               	movf	___fltol@exp1^0,w,c
  7095  003812  A4D8               	btfss	status,2,c
  7096  003814  EF0E  F01C         	goto	u4521
  7097  003818  EF10  F01C         	goto	u4520
  7098  00381C                     u4521:
  7099  00381C  EF02  F01C         	goto	l3854
  7100  003820                     u4520:
  7101  003820                     l3858:
  7102  003820  5009               	movf	___fltol@sign1^0,w,c
  7103  003822  B4D8               	btfsc	status,2,c
  7104  003824  EF16  F01C         	goto	u4531
  7105  003828  EF18  F01C         	goto	u4530
  7106  00382C                     u4531:
  7107  00382C  EF20  F01C         	goto	l3862
  7108  003830                     u4530:
  7109  003830  1E04               	comf	(___fltol@f1+3)^0,f,c
  7110  003832  1E03               	comf	(___fltol@f1+2)^0,f,c
  7111  003834  1E02               	comf	(___fltol@f1+1)^0,f,c
  7112  003836  6C01               	negf	___fltol@f1^0,c
  7113  003838  0E00               	movlw	0
  7114  00383A  2202               	addwfc	(___fltol@f1+1)^0,f,c
  7115  00383C  2203               	addwfc	(___fltol@f1+2)^0,f,c
  7116  00383E  2204               	addwfc	(___fltol@f1+3)^0,f,c
  7117  003840                     l3862:
  7118  003840  C001  F001         	movff	___fltol@f1,?___fltol
  7119  003844  C002  F002         	movff	___fltol@f1+1,?___fltol+1
  7120  003848  C003  F003         	movff	___fltol@f1+2,?___fltol+2
  7121  00384C  C004  F004         	movff	___fltol@f1+3,?___fltol+3
  7122  003850                     l475:
  7123  003850  0012               	return		;funcret
  7124  003852                     __end_of___fltol:
  7125                           	callstack 0
  7126                           
  7127 ;; *************** function ___flsub *****************
  7128 ;; Defined at:
  7129 ;;		line 245 in file "C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\sprcadd.c"
  7130 ;; Parameters:    Size  Location     Type
  7131 ;;  b               4   39[COMRAM] long 
  7132 ;;  a               4   43[COMRAM] long 
  7133 ;; Auto vars:     Size  Location     Type
  7134 ;;		None
  7135 ;; Return value:  Size  Location     Type
  7136 ;;                  4   39[COMRAM] long 
  7137 ;; Registers used:
  7138 ;;		wreg, status,2, status,0, cstack
  7139 ;; Tracked objects:
  7140 ;;		On entry : 0/0
  7141 ;;		On exit  : 0/0
  7142 ;;		Unchanged: 0/0
  7143 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  7144 ;;      Params:         8       0       0       0       0       0       0       0       0
  7145 ;;      Locals:         0       0       0       0       0       0       0       0       0
  7146 ;;      Temps:          0       0       0       0       0       0       0       0       0
  7147 ;;      Totals:         8       0       0       0       0       0       0       0       0
  7148 ;;Total ram usage:        8 bytes
  7149 ;; Hardware stack levels used:    1
  7150 ;; Hardware stack levels required when called:    1
  7151 ;; This function calls:
  7152 ;;		___fladd
  7153 ;; This function is called by:
  7154 ;;		_efgtoa
  7155 ;; This function uses a non-reentrant model
  7156 ;;
  7157                           
  7158                           	psect	text27
  7159  0046A6                     __ptext27:
  7160                           	callstack 0
  7161  0046A6                     ___flsub:
  7162                           	callstack 24
  7163  0046A6  0E00               	movlw	0
  7164  0046A8  1A2C               	xorwf	___flsub@a^0,f,c
  7165  0046AA  0E00               	movlw	0
  7166  0046AC  1A2D               	xorwf	(___flsub@a+1)^0,f,c
  7167  0046AE  0E00               	movlw	0
  7168  0046B0  1A2E               	xorwf	(___flsub@a+2)^0,f,c
  7169  0046B2  0E80               	movlw	128
  7170  0046B4  1A2F               	xorwf	(___flsub@a+3)^0,f,c
  7171  0046B6  C028  F001         	movff	___flsub@b,___fladd@b
  7172  0046BA  C029  F002         	movff	___flsub@b+1,___fladd@b+1
  7173  0046BE  C02A  F003         	movff	___flsub@b+2,___fladd@b+2
  7174  0046C2  C02B  F004         	movff	___flsub@b+3,___fladd@b+3
  7175  0046C6  C02C  F005         	movff	___flsub@a,___fladd@a
  7176  0046CA  C02D  F006         	movff	___flsub@a+1,___fladd@a+1
  7177  0046CE  C02E  F007         	movff	___flsub@a+2,___fladd@a+2
  7178  0046D2  C02F  F008         	movff	___flsub@a+3,___fladd@a+3
  7179  0046D6  EC9C  F00E         	call	___fladd	;wreg free
  7180  0046DA  C001  F028         	movff	?___fladd,?___flsub
  7181  0046DE  C002  F029         	movff	?___fladd+1,?___flsub+1
  7182  0046E2  C003  F02A         	movff	?___fladd+2,?___flsub+2
  7183  0046E6  C004  F02B         	movff	?___fladd+3,?___flsub+3
  7184  0046EA  0012               	return		;funcret
  7185  0046EC                     __end_of___flsub:
  7186                           	callstack 0
  7187                           
  7188 ;; *************** function ___fladd *****************
  7189 ;; Defined at:
  7190 ;;		line 10 in file "C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\sprcadd.c"
  7191 ;; Parameters:    Size  Location     Type
  7192 ;;  b               4    0[COMRAM] long 
  7193 ;;  a               4    4[COMRAM] long 
  7194 ;; Auto vars:     Size  Location     Type
  7195 ;;  grs             1   15[COMRAM] unsigned char 
  7196 ;;  bexp            1   14[COMRAM] unsigned char 
  7197 ;;  aexp            1   13[COMRAM] unsigned char 
  7198 ;;  signs           1   12[COMRAM] unsigned char 
  7199 ;; Return value:  Size  Location     Type
  7200 ;;                  4    0[COMRAM] unsigned char 
  7201 ;; Registers used:
  7202 ;;		wreg, status,2, status,0
  7203 ;; Tracked objects:
  7204 ;;		On entry : 0/0
  7205 ;;		On exit  : 0/0
  7206 ;;		Unchanged: 0/0
  7207 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  7208 ;;      Params:         8       0       0       0       0       0       0       0       0
  7209 ;;      Locals:         4       0       0       0       0       0       0       0       0
  7210 ;;      Temps:          4       0       0       0       0       0       0       0       0
  7211 ;;      Totals:        16       0       0       0       0       0       0       0       0
  7212 ;;Total ram usage:       16 bytes
  7213 ;; Hardware stack levels used:    1
  7214 ;; This function calls:
  7215 ;;		Nothing
  7216 ;; This function is called by:
  7217 ;;		___flsub
  7218 ;;		_efgtoa
  7219 ;; This function uses a non-reentrant model
  7220 ;;
  7221                           
  7222                           	psect	text28
  7223  001D38                     __ptext28:
  7224                           	callstack 0
  7225  001D38                     ___fladd:
  7226                           	callstack 24
  7227  001D38  5004               	movf	(___fladd@b+3)^0,w,c
  7228  001D3A  0B80               	andlw	128
  7229  001D3C  6E0D               	movwf	___fladd@signs^0,c
  7230  001D3E  5004               	movf	(___fladd@b+3)^0,w,c
  7231  001D40  2404               	addwf	(___fladd@b+3)^0,w,c
  7232  001D42  6E0F               	movwf	___fladd@bexp^0,c
  7233  001D44  AE03               	btfss	(___fladd@b+2)^0,7,c
  7234  001D46  EFA7  F00E         	goto	u3281
  7235  001D4A  EFA9  F00E         	goto	u3280
  7236  001D4E                     u3281:
  7237  001D4E  EFAA  F00E         	goto	l3118
  7238  001D52                     u3280:
  7239  001D52  800F               	bsf	___fladd@bexp^0,0,c
  7240  001D54                     l3118:
  7241  001D54  500F               	movf	___fladd@bexp^0,w,c
  7242  001D56  B4D8               	btfsc	status,2,c
  7243  001D58  EFB0  F00E         	goto	u3291
  7244  001D5C  EFB2  F00E         	goto	u3290
  7245  001D60                     u3291:
  7246  001D60  EFC7  F00E         	goto	l3128
  7247  001D64                     u3290:
  7248  001D64  280F               	incf	___fladd@bexp^0,w,c
  7249  001D66  A4D8               	btfss	status,2,c
  7250  001D68  EFB8  F00E         	goto	u3301
  7251  001D6C  EFBA  F00E         	goto	u3300
  7252  001D70                     u3301:
  7253  001D70  EFC2  F00E         	goto	l3124
  7254  001D74                     u3300:
  7255  001D74  0E00               	movlw	0
  7256  001D76  6E01               	movwf	___fladd@b^0,c
  7257  001D78  0E00               	movlw	0
  7258  001D7A  6E02               	movwf	(___fladd@b+1)^0,c
  7259  001D7C  0E00               	movlw	0
  7260  001D7E  6E03               	movwf	(___fladd@b+2)^0,c
  7261  001D80  0E00               	movlw	0
  7262  001D82  6E04               	movwf	(___fladd@b+3)^0,c
  7263  001D84                     l3124:
  7264  001D84  8E03               	bsf	(___fladd@b+2)^0,7,c
  7265  001D86  0E00               	movlw	0
  7266  001D88  6E04               	movwf	(___fladd@b+3)^0,c
  7267  001D8A  EFCF  F00E         	goto	l3130
  7268  001D8E                     l3128:
  7269  001D8E  0E00               	movlw	0
  7270  001D90  6E01               	movwf	___fladd@b^0,c
  7271  001D92  0E00               	movlw	0
  7272  001D94  6E02               	movwf	(___fladd@b+1)^0,c
  7273  001D96  0E00               	movlw	0
  7274  001D98  6E03               	movwf	(___fladd@b+2)^0,c
  7275  001D9A  0E00               	movlw	0
  7276  001D9C  6E04               	movwf	(___fladd@b+3)^0,c
  7277  001D9E                     l3130:
  7278  001D9E  5008               	movf	(___fladd@a+3)^0,w,c
  7279  001DA0  0B80               	andlw	128
  7280  001DA2  6E0E               	movwf	___fladd@aexp^0,c
  7281  001DA4  500D               	movf	___fladd@signs^0,w,c
  7282  001DA6  180E               	xorwf	___fladd@aexp^0,w,c
  7283  001DA8  B4D8               	btfsc	status,2,c
  7284  001DAA  EFD9  F00E         	goto	u3311
  7285  001DAE  EFDB  F00E         	goto	u3310
  7286  001DB2                     u3311:
  7287  001DB2  EFDC  F00E         	goto	l3136
  7288  001DB6                     u3310:
  7289  001DB6  8C0D               	bsf	___fladd@signs^0,6,c
  7290  001DB8                     l3136:
  7291  001DB8  5008               	movf	(___fladd@a+3)^0,w,c
  7292  001DBA  2408               	addwf	(___fladd@a+3)^0,w,c
  7293  001DBC  6E0E               	movwf	___fladd@aexp^0,c
  7294  001DBE  AE07               	btfss	(___fladd@a+2)^0,7,c
  7295  001DC0  EFE4  F00E         	goto	u3321
  7296  001DC4  EFE6  F00E         	goto	u3320
  7297  001DC8                     u3321:
  7298  001DC8  EFE7  F00E         	goto	l3142
  7299  001DCC                     u3320:
  7300  001DCC  800E               	bsf	___fladd@aexp^0,0,c
  7301  001DCE                     l3142:
  7302  001DCE  500E               	movf	___fladd@aexp^0,w,c
  7303  001DD0  B4D8               	btfsc	status,2,c
  7304  001DD2  EFED  F00E         	goto	u3331
  7305  001DD6  EFEF  F00E         	goto	u3330
  7306  001DDA                     u3331:
  7307  001DDA  EF04  F00F         	goto	l3152
  7308  001DDE                     u3330:
  7309  001DDE  280E               	incf	___fladd@aexp^0,w,c
  7310  001DE0  A4D8               	btfss	status,2,c
  7311  001DE2  EFF5  F00E         	goto	u3341
  7312  001DE6  EFF7  F00E         	goto	u3340
  7313  001DEA                     u3341:
  7314  001DEA  EFFF  F00E         	goto	l3148
  7315  001DEE                     u3340:
  7316  001DEE  0E00               	movlw	0
  7317  001DF0  6E05               	movwf	___fladd@a^0,c
  7318  001DF2  0E00               	movlw	0
  7319  001DF4  6E06               	movwf	(___fladd@a+1)^0,c
  7320  001DF6  0E00               	movlw	0
  7321  001DF8  6E07               	movwf	(___fladd@a+2)^0,c
  7322  001DFA  0E00               	movlw	0
  7323  001DFC  6E08               	movwf	(___fladd@a+3)^0,c
  7324  001DFE                     l3148:
  7325  001DFE  8E07               	bsf	(___fladd@a+2)^0,7,c
  7326  001E00  0E00               	movlw	0
  7327  001E02  6E08               	movwf	(___fladd@a+3)^0,c
  7328  001E04  EF0C  F00F         	goto	l3154
  7329  001E08                     l3152:
  7330  001E08  0E00               	movlw	0
  7331  001E0A  6E05               	movwf	___fladd@a^0,c
  7332  001E0C  0E00               	movlw	0
  7333  001E0E  6E06               	movwf	(___fladd@a+1)^0,c
  7334  001E10  0E00               	movlw	0
  7335  001E12  6E07               	movwf	(___fladd@a+2)^0,c
  7336  001E14  0E00               	movlw	0
  7337  001E16  6E08               	movwf	(___fladd@a+3)^0,c
  7338  001E18                     l3154:
  7339  001E18  500F               	movf	___fladd@bexp^0,w,c
  7340  001E1A  5C0E               	subwf	___fladd@aexp^0,w,c
  7341  001E1C  B0D8               	btfsc	status,0,c
  7342  001E1E  EF13  F00F         	goto	u3351
  7343  001E22  EF15  F00F         	goto	u3350
  7344  001E26                     u3351:
  7345  001E26  EF3C  F00F         	goto	l3190
  7346  001E2A                     u3350:
  7347  001E2A  AC0D               	btfss	___fladd@signs^0,6,c
  7348  001E2C  EF1A  F00F         	goto	u3361
  7349  001E30  EF1C  F00F         	goto	u3360
  7350  001E34                     u3361:
  7351  001E34  EF1E  F00F         	goto	l3160
  7352  001E38                     u3360:
  7353  001E38  0E80               	movlw	128
  7354  001E3A  1A0D               	xorwf	___fladd@signs^0,f,c
  7355  001E3C                     l3160:
  7356  001E3C  C00F  F010         	movff	___fladd@bexp,___fladd@grs
  7357  001E40  C00E  F00F         	movff	___fladd@aexp,___fladd@bexp
  7358  001E44  C010  F00E         	movff	___fladd@grs,___fladd@aexp
  7359  001E48  C001  F010         	movff	___fladd@b,___fladd@grs
  7360  001E4C  C005  F001         	movff	___fladd@a,___fladd@b
  7361  001E50  C010  F005         	movff	___fladd@grs,___fladd@a
  7362  001E54  C002  F010         	movff	___fladd@b+1,___fladd@grs
  7363  001E58  C006  F002         	movff	___fladd@a+1,___fladd@b+1
  7364  001E5C  C010  F006         	movff	___fladd@grs,___fladd@a+1
  7365  001E60  C003  F010         	movff	___fladd@b+2,___fladd@grs
  7366  001E64  C007  F003         	movff	___fladd@a+2,___fladd@b+2
  7367  001E68  C010  F007         	movff	___fladd@grs,___fladd@a+2
  7368  001E6C  C004  F010         	movff	___fladd@b+3,___fladd@grs
  7369  001E70  C008  F004         	movff	___fladd@a+3,___fladd@b+3
  7370  001E74  C010  F008         	movff	___fladd@grs,___fladd@a+3
  7371  001E78                     l3190:
  7372  001E78  0E00               	movlw	0
  7373  001E7A  6E10               	movwf	___fladd@grs^0,c
  7374  001E7C  500F               	movf	___fladd@bexp^0,w,c
  7375  001E7E  C00E  F009         	movff	___fladd@aexp,??___fladd
  7376  001E82  6A0A               	clrf	(??___fladd+1)^0,c
  7377  001E84  5E09               	subwf	??___fladd^0,f,c
  7378  001E86  0E00               	movlw	0
  7379  001E88  5A0A               	subwfb	(??___fladd+1)^0,f,c
  7380  001E8A  BE0A               	btfsc	(??___fladd+1)^0,7,c
  7381  001E8C  EF51  F00F         	goto	u3371
  7382  001E90  500A               	movf	(??___fladd+1)^0,w,c
  7383  001E92  E109               	bnz	u3370
  7384  001E94  0E1A               	movlw	26
  7385  001E96  5C09               	subwf	??___fladd^0,w,c
  7386  001E98  A0D8               	btfss	status,0,c
  7387  001E9A  EF51  F00F         	goto	u3371
  7388  001E9E  EF53  F00F         	goto	u3370
  7389  001EA2                     u3371:
  7390  001EA2  EF8A  F00F         	goto	l707
  7391  001EA6                     u3370:
  7392  001EA6  5001               	movf	___fladd@b^0,w,c
  7393  001EA8  1002               	iorwf	(___fladd@b+1)^0,w,c
  7394  001EAA  1003               	iorwf	(___fladd@b+2)^0,w,c
  7395  001EAC  1004               	iorwf	(___fladd@b+3)^0,w,c
  7396  001EAE  A4D8               	btfss	status,2,c
  7397  001EB0  EF5C  F00F         	goto	u3381
  7398  001EB4  EF5F  F00F         	goto	u3380
  7399  001EB8                     u3381:
  7400  001EB8  0E01               	movlw	1
  7401  001EBA  EF60  F00F         	goto	u3390
  7402  001EBE                     u3380:
  7403  001EBE  0E00               	movlw	0
  7404  001EC0                     u3390:
  7405  001EC0  6E10               	movwf	___fladd@grs^0,c
  7406  001EC2  0E00               	movlw	0
  7407  001EC4  6E01               	movwf	___fladd@b^0,c
  7408  001EC6  0E00               	movlw	0
  7409  001EC8  6E02               	movwf	(___fladd@b+1)^0,c
  7410  001ECA  0E00               	movlw	0
  7411  001ECC  6E03               	movwf	(___fladd@b+2)^0,c
  7412  001ECE  0E00               	movlw	0
  7413  001ED0  6E04               	movwf	(___fladd@b+3)^0,c
  7414  001ED2  C00E  F00F         	movff	___fladd@aexp,___fladd@bexp
  7415  001ED6  EF93  F00F         	goto	l706
  7416  001EDA                     l708:
  7417  001EDA  A010               	btfss	___fladd@grs^0,0,c
  7418  001EDC  EF72  F00F         	goto	u3401
  7419  001EE0  EF74  F00F         	goto	u3400
  7420  001EE4                     u3401:
  7421  001EE4  EF7A  F00F         	goto	l3202
  7422  001EE8                     u3400:
  7423  001EE8  90D8               	bcf	status,0,c
  7424  001EEA  3010               	rrcf	___fladd@grs^0,w,c
  7425  001EEC  0901               	iorlw	1
  7426  001EEE  6E10               	movwf	___fladd@grs^0,c
  7427  001EF0  EF7C  F00F         	goto	l3204
  7428  001EF4                     l3202:
  7429  001EF4  90D8               	bcf	status,0,c
  7430  001EF6  3210               	rrcf	___fladd@grs^0,f,c
  7431  001EF8                     l3204:
  7432  001EF8  A001               	btfss	___fladd@b^0,0,c
  7433  001EFA  EF81  F00F         	goto	u3411
  7434  001EFE  EF83  F00F         	goto	u3410
  7435  001F02                     u3411:
  7436  001F02  EF84  F00F         	goto	l3208
  7437  001F06                     u3410:
  7438  001F06  8E10               	bsf	___fladd@grs^0,7,c
  7439  001F08                     l3208:
  7440  001F08  3404               	rlcf	(___fladd@b+3)^0,w,c
  7441  001F0A  3204               	rrcf	(___fladd@b+3)^0,f,c
  7442  001F0C  3203               	rrcf	(___fladd@b+2)^0,f,c
  7443  001F0E  3202               	rrcf	(___fladd@b+1)^0,f,c
  7444  001F10  3201               	rrcf	___fladd@b^0,f,c
  7445  001F12  2A0F               	incf	___fladd@bexp^0,f,c
  7446  001F14                     l707:
  7447  001F14  500E               	movf	___fladd@aexp^0,w,c
  7448  001F16  5C0F               	subwf	___fladd@bexp^0,w,c
  7449  001F18  A0D8               	btfss	status,0,c
  7450  001F1A  EF91  F00F         	goto	u3421
  7451  001F1E  EF93  F00F         	goto	u3420
  7452  001F22                     u3421:
  7453  001F22  EF6D  F00F         	goto	l708
  7454  001F26                     u3420:
  7455  001F26                     l706:
  7456  001F26  BC0D               	btfsc	___fladd@signs^0,6,c
  7457  001F28  EF98  F00F         	goto	u3431
  7458  001F2C  EF9A  F00F         	goto	u3430
  7459  001F30                     u3431:
  7460  001F30  EFDA  F00F         	goto	l3236
  7461  001F34                     u3430:
  7462  001F34  500F               	movf	___fladd@bexp^0,w,c
  7463  001F36  A4D8               	btfss	status,2,c
  7464  001F38  EFA0  F00F         	goto	u3441
  7465  001F3C  EFA2  F00F         	goto	u3440
  7466  001F40                     u3441:
  7467  001F40  EFAC  F00F         	goto	l3218
  7468  001F44                     u3440:
  7469  001F44  0E00               	movlw	0
  7470  001F46  6E01               	movwf	?___fladd^0,c
  7471  001F48  0E00               	movlw	0
  7472  001F4A  6E02               	movwf	(?___fladd+1)^0,c
  7473  001F4C  0E00               	movlw	0
  7474  001F4E  6E03               	movwf	(?___fladd+2)^0,c
  7475  001F50  0E00               	movlw	0
  7476  001F52  6E04               	movwf	(?___fladd+3)^0,c
  7477  001F54  EFFB  F010         	goto	l715
  7478  001F58                     l3218:
  7479  001F58  5005               	movf	___fladd@a^0,w,c
  7480  001F5A  2601               	addwf	___fladd@b^0,f,c
  7481  001F5C  5006               	movf	(___fladd@a+1)^0,w,c
  7482  001F5E  2202               	addwfc	(___fladd@b+1)^0,f,c
  7483  001F60  5007               	movf	(___fladd@a+2)^0,w,c
  7484  001F62  2203               	addwfc	(___fladd@b+2)^0,f,c
  7485  001F64  5008               	movf	(___fladd@a+3)^0,w,c
  7486  001F66  2204               	addwfc	(___fladd@b+3)^0,f,c
  7487  001F68  A004               	btfss	(___fladd@b+3)^0,0,c
  7488  001F6A  EFB9  F00F         	goto	u3451
  7489  001F6E  EFBB  F00F         	goto	u3450
  7490  001F72                     u3451:
  7491  001F72  EF67  F010         	goto	l3272
  7492  001F76                     u3450:
  7493  001F76  A010               	btfss	___fladd@grs^0,0,c
  7494  001F78  EFC0  F00F         	goto	u3461
  7495  001F7C  EFC2  F00F         	goto	u3460
  7496  001F80                     u3461:
  7497  001F80  EFC8  F00F         	goto	l3226
  7498  001F84                     u3460:
  7499  001F84  90D8               	bcf	status,0,c
  7500  001F86  3010               	rrcf	___fladd@grs^0,w,c
  7501  001F88  0901               	iorlw	1
  7502  001F8A  6E10               	movwf	___fladd@grs^0,c
  7503  001F8C  EFCA  F00F         	goto	l3228
  7504  001F90                     l3226:
  7505  001F90  90D8               	bcf	status,0,c
  7506  001F92  3210               	rrcf	___fladd@grs^0,f,c
  7507  001F94                     l3228:
  7508  001F94  A001               	btfss	___fladd@b^0,0,c
  7509  001F96  EFCF  F00F         	goto	u3471
  7510  001F9A  EFD1  F00F         	goto	u3470
  7511  001F9E                     u3471:
  7512  001F9E  EFD2  F00F         	goto	l3232
  7513  001FA2                     u3470:
  7514  001FA2  8E10               	bsf	___fladd@grs^0,7,c
  7515  001FA4                     l3232:
  7516  001FA4  3404               	rlcf	(___fladd@b+3)^0,w,c
  7517  001FA6  3204               	rrcf	(___fladd@b+3)^0,f,c
  7518  001FA8  3203               	rrcf	(___fladd@b+2)^0,f,c
  7519  001FAA  3202               	rrcf	(___fladd@b+1)^0,f,c
  7520  001FAC  3201               	rrcf	___fladd@b^0,f,c
  7521  001FAE  2A0F               	incf	___fladd@bexp^0,f,c
  7522  001FB0  EF67  F010         	goto	l3272
  7523  001FB4                     l3236:
  7524  001FB4  5005               	movf	___fladd@a^0,w,c
  7525  001FB6  5C01               	subwf	___fladd@b^0,w,c
  7526  001FB8  5006               	movf	(___fladd@a+1)^0,w,c
  7527  001FBA  5802               	subwfb	(___fladd@b+1)^0,w,c
  7528  001FBC  5007               	movf	(___fladd@a+2)^0,w,c
  7529  001FBE  5803               	subwfb	(___fladd@b+2)^0,w,c
  7530  001FC0  5004               	movf	(___fladd@b+3)^0,w,c
  7531  001FC2  0A80               	xorlw	128
  7532  001FC4  6E09               	movwf	??___fladd^0,c
  7533  001FC6  5008               	movf	(___fladd@a+3)^0,w,c
  7534  001FC8  0A80               	xorlw	128
  7535  001FCA  5809               	subwfb	??___fladd^0,w,c
  7536  001FCC  B0D8               	btfsc	status,0,c
  7537  001FCE  EFEB  F00F         	goto	u3481
  7538  001FD2  EFED  F00F         	goto	u3480
  7539  001FD6                     u3481:
  7540  001FD6  EF18  F010         	goto	l3246
  7541  001FDA                     u3480:
  7542  001FDA  5001               	movf	___fladd@b^0,w,c
  7543  001FDC  5C05               	subwf	___fladd@a^0,w,c
  7544  001FDE  6E09               	movwf	??___fladd^0,c
  7545  001FE0  5002               	movf	(___fladd@b+1)^0,w,c
  7546  001FE2  5806               	subwfb	(___fladd@a+1)^0,w,c
  7547  001FE4  6E0A               	movwf	(??___fladd+1)^0,c
  7548  001FE6  5003               	movf	(___fladd@b+2)^0,w,c
  7549  001FE8  5807               	subwfb	(___fladd@a+2)^0,w,c
  7550  001FEA  6E0B               	movwf	(??___fladd+2)^0,c
  7551  001FEC  5004               	movf	(___fladd@b+3)^0,w,c
  7552  001FEE  5808               	subwfb	(___fladd@a+3)^0,w,c
  7553  001FF0  6E0C               	movwf	(??___fladd+3)^0,c
  7554  001FF2  0EFF               	movlw	255
  7555  001FF4  2409               	addwf	??___fladd^0,w,c
  7556  001FF6  6E01               	movwf	___fladd@b^0,c
  7557  001FF8  0EFF               	movlw	255
  7558  001FFA  200A               	addwfc	(??___fladd+1)^0,w,c
  7559  001FFC  6E02               	movwf	(___fladd@b+1)^0,c
  7560  001FFE  0EFF               	movlw	255
  7561  002000  200B               	addwfc	(??___fladd+2)^0,w,c
  7562  002002  6E03               	movwf	(___fladd@b+2)^0,c
  7563  002004  0EFF               	movlw	255
  7564  002006  200C               	addwfc	(??___fladd+3)^0,w,c
  7565  002008  6E04               	movwf	(___fladd@b+3)^0,c
  7566  00200A  0E80               	movlw	128
  7567  00200C  1A0D               	xorwf	___fladd@signs^0,f,c
  7568  00200E  6C10               	negf	___fladd@grs^0,c
  7569  002010  5010               	movf	___fladd@grs^0,w,c
  7570  002012  A4D8               	btfss	status,2,c
  7571  002014  EF0E  F010         	goto	u3491
  7572  002018  EF10  F010         	goto	u3490
  7573  00201C                     u3491:
  7574  00201C  EF20  F010         	goto	l723
  7575  002020                     u3490:
  7576  002020  0E01               	movlw	1
  7577  002022  2601               	addwf	___fladd@b^0,f,c
  7578  002024  0E00               	movlw	0
  7579  002026  2202               	addwfc	(___fladd@b+1)^0,f,c
  7580  002028  2203               	addwfc	(___fladd@b+2)^0,f,c
  7581  00202A  2204               	addwfc	(___fladd@b+3)^0,f,c
  7582  00202C  EF20  F010         	goto	l723
  7583  002030                     l3246:
  7584  002030  5005               	movf	___fladd@a^0,w,c
  7585  002032  5E01               	subwf	___fladd@b^0,f,c
  7586  002034  5006               	movf	(___fladd@a+1)^0,w,c
  7587  002036  5A02               	subwfb	(___fladd@b+1)^0,f,c
  7588  002038  5007               	movf	(___fladd@a+2)^0,w,c
  7589  00203A  5A03               	subwfb	(___fladd@b+2)^0,f,c
  7590  00203C  5008               	movf	(___fladd@a+3)^0,w,c
  7591  00203E  5A04               	subwfb	(___fladd@b+3)^0,f,c
  7592  002040                     l723:
  7593  002040  5001               	movf	___fladd@b^0,w,c
  7594  002042  1002               	iorwf	(___fladd@b+1)^0,w,c
  7595  002044  1003               	iorwf	(___fladd@b+2)^0,w,c
  7596  002046  1004               	iorwf	(___fladd@b+3)^0,w,c
  7597  002048  A4D8               	btfss	status,2,c
  7598  00204A  EF29  F010         	goto	u3501
  7599  00204E  EF2B  F010         	goto	u3500
  7600  002052                     u3501:
  7601  002052  EF60  F010         	goto	l3270
  7602  002056                     u3500:
  7603  002056  5010               	movf	___fladd@grs^0,w,c
  7604  002058  A4D8               	btfss	status,2,c
  7605  00205A  EF31  F010         	goto	u3511
  7606  00205E  EF33  F010         	goto	u3510
  7607  002062                     u3511:
  7608  002062  EF60  F010         	goto	l3270
  7609  002066                     u3510:
  7610  002066  0E00               	movlw	0
  7611  002068  6E01               	movwf	?___fladd^0,c
  7612  00206A  0E00               	movlw	0
  7613  00206C  6E02               	movwf	(?___fladd+1)^0,c
  7614  00206E  0E00               	movlw	0
  7615  002070  6E03               	movwf	(?___fladd+2)^0,c
  7616  002072  0E00               	movlw	0
  7617  002074  6E04               	movwf	(?___fladd+3)^0,c
  7618  002076  EFFB  F010         	goto	l715
  7619  00207A                     l3254:
  7620  00207A  90D8               	bcf	status,0,c
  7621  00207C  3601               	rlcf	___fladd@b^0,f,c
  7622  00207E  3602               	rlcf	(___fladd@b+1)^0,f,c
  7623  002080  3603               	rlcf	(___fladd@b+2)^0,f,c
  7624  002082  3604               	rlcf	(___fladd@b+3)^0,f,c
  7625  002084  AE10               	btfss	___fladd@grs^0,7,c
  7626  002086  EF47  F010         	goto	u3521
  7627  00208A  EF49  F010         	goto	u3520
  7628  00208E                     u3521:
  7629  00208E  EF4A  F010         	goto	l3260
  7630  002092                     u3520:
  7631  002092  8001               	bsf	___fladd@b^0,0,c
  7632  002094                     l3260:
  7633  002094  A010               	btfss	___fladd@grs^0,0,c
  7634  002096  EF4F  F010         	goto	u3531
  7635  00209A  EF51  F010         	goto	u3530
  7636  00209E                     u3531:
  7637  00209E  EF55  F010         	goto	l3264
  7638  0020A2                     u3530:
  7639  0020A2  80D8               	bsf	status,0,c
  7640  0020A4  3610               	rlcf	___fladd@grs^0,f,c
  7641  0020A6  EF57  F010         	goto	l3266
  7642  0020AA                     l3264:
  7643  0020AA  90D8               	bcf	status,0,c
  7644  0020AC  3610               	rlcf	___fladd@grs^0,f,c
  7645  0020AE                     l3266:
  7646  0020AE  500F               	movf	___fladd@bexp^0,w,c
  7647  0020B0  B4D8               	btfsc	status,2,c
  7648  0020B2  EF5D  F010         	goto	u3541
  7649  0020B6  EF5F  F010         	goto	u3540
  7650  0020BA                     u3541:
  7651  0020BA  EF60  F010         	goto	l3270
  7652  0020BE                     u3540:
  7653  0020BE  060F               	decf	___fladd@bexp^0,f,c
  7654  0020C0                     l3270:
  7655  0020C0  AE03               	btfss	(___fladd@b+2)^0,7,c
  7656  0020C2  EF65  F010         	goto	u3551
  7657  0020C6  EF67  F010         	goto	u3550
  7658  0020CA                     u3551:
  7659  0020CA  EF3D  F010         	goto	l3254
  7660  0020CE                     u3550:
  7661  0020CE                     l3272:
  7662  0020CE  0E00               	movlw	0
  7663  0020D0  6E0E               	movwf	___fladd@aexp^0,c
  7664  0020D2  AE10               	btfss	___fladd@grs^0,7,c
  7665  0020D4  EF6E  F010         	goto	u3561
  7666  0020D8  EF70  F010         	goto	u3560
  7667  0020DC                     u3561:
  7668  0020DC  EF88  F010         	goto	l732
  7669  0020E0                     u3560:
  7670  0020E0  C010  F009         	movff	___fladd@grs,??___fladd
  7671  0020E4  0E7F               	movlw	127
  7672  0020E6  1609               	andwf	??___fladd^0,f,c
  7673  0020E8  B4D8               	btfsc	status,2,c
  7674  0020EA  EF79  F010         	goto	u3571
  7675  0020EE  EF7B  F010         	goto	u3570
  7676  0020F2                     u3571:
  7677  0020F2  EF7F  F010         	goto	l733
  7678  0020F6                     u3570:
  7679  0020F6                     l3278:
  7680  0020F6  0E01               	movlw	1
  7681  0020F8  6E0E               	movwf	___fladd@aexp^0,c
  7682  0020FA  EF88  F010         	goto	l732
  7683  0020FE                     l733:
  7684  0020FE  A001               	btfss	___fladd@b^0,0,c
  7685  002100  EF84  F010         	goto	u3581
  7686  002104  EF86  F010         	goto	u3580
  7687  002108                     u3581:
  7688  002108  EF88  F010         	goto	l732
  7689  00210C                     u3580:
  7690  00210C  EF7B  F010         	goto	l3278
  7691  002110                     l732:
  7692  002110  500E               	movf	___fladd@aexp^0,w,c
  7693  002112  B4D8               	btfsc	status,2,c
  7694  002114  EF8E  F010         	goto	u3591
  7695  002118  EF90  F010         	goto	u3590
  7696  00211C                     u3591:
  7697  00211C  EFBB  F010         	goto	l3290
  7698  002120                     u3590:
  7699  002120  0E01               	movlw	1
  7700  002122  2601               	addwf	___fladd@b^0,f,c
  7701  002124  0E00               	movlw	0
  7702  002126  2202               	addwfc	(___fladd@b+1)^0,f,c
  7703  002128  2203               	addwfc	(___fladd@b+2)^0,f,c
  7704  00212A  2204               	addwfc	(___fladd@b+3)^0,f,c
  7705  00212C  A004               	btfss	(___fladd@b+3)^0,0,c
  7706  00212E  EF9B  F010         	goto	u3601
  7707  002132  EF9D  F010         	goto	u3600
  7708  002136                     u3601:
  7709  002136  EFBB  F010         	goto	l3290
  7710  00213A                     u3600:
  7711  00213A  C001  F009         	movff	___fladd@b,??___fladd
  7712  00213E  C002  F00A         	movff	___fladd@b+1,??___fladd+1
  7713  002142  C003  F00B         	movff	___fladd@b+2,??___fladd+2
  7714  002146  C004  F00C         	movff	___fladd@b+3,??___fladd+3
  7715  00214A  340C               	rlcf	(??___fladd+3)^0,w,c
  7716  00214C  320C               	rrcf	(??___fladd+3)^0,f,c
  7717  00214E  320B               	rrcf	(??___fladd+2)^0,f,c
  7718  002150  320A               	rrcf	(??___fladd+1)^0,f,c
  7719  002152  3209               	rrcf	??___fladd^0,f,c
  7720  002154  C009  F001         	movff	??___fladd,___fladd@b
  7721  002158  C00A  F002         	movff	??___fladd+1,___fladd@b+1
  7722  00215C  C00B  F003         	movff	??___fladd+2,___fladd@b+2
  7723  002160  C00C  F004         	movff	??___fladd+3,___fladd@b+3
  7724  002164  280F               	incf	___fladd@bexp^0,w,c
  7725  002166  B4D8               	btfsc	status,2,c
  7726  002168  EFB8  F010         	goto	u3611
  7727  00216C  EFBA  F010         	goto	u3610
  7728  002170                     u3611:
  7729  002170  EFBB  F010         	goto	l3290
  7730  002174                     u3610:
  7731  002174  2A0F               	incf	___fladd@bexp^0,f,c
  7732  002176                     l3290:
  7733  002176  280F               	incf	___fladd@bexp^0,w,c
  7734  002178  B4D8               	btfsc	status,2,c
  7735  00217A  EFC1  F010         	goto	u3621
  7736  00217E  EFC3  F010         	goto	u3620
  7737  002182                     u3621:
  7738  002182  EFCB  F010         	goto	l3294
  7739  002186                     u3620:
  7740  002186  500F               	movf	___fladd@bexp^0,w,c
  7741  002188  A4D8               	btfss	status,2,c
  7742  00218A  EFC9  F010         	goto	u3631
  7743  00218E  EFCB  F010         	goto	u3630
  7744  002192                     u3631:
  7745  002192  EFDD  F010         	goto	l3298
  7746  002196                     u3630:
  7747  002196                     l3294:
  7748  002196  0E00               	movlw	0
  7749  002198  6E01               	movwf	___fladd@b^0,c
  7750  00219A  0E00               	movlw	0
  7751  00219C  6E02               	movwf	(___fladd@b+1)^0,c
  7752  00219E  0E00               	movlw	0
  7753  0021A0  6E03               	movwf	(___fladd@b+2)^0,c
  7754  0021A2  0E00               	movlw	0
  7755  0021A4  6E04               	movwf	(___fladd@b+3)^0,c
  7756  0021A6  500F               	movf	___fladd@bexp^0,w,c
  7757  0021A8  A4D8               	btfss	status,2,c
  7758  0021AA  EFD9  F010         	goto	u3641
  7759  0021AE  EFDB  F010         	goto	u3640
  7760  0021B2                     u3641:
  7761  0021B2  EFDD  F010         	goto	l3298
  7762  0021B6                     u3640:
  7763  0021B6  0E00               	movlw	0
  7764  0021B8  6E0D               	movwf	___fladd@signs^0,c
  7765  0021BA                     l3298:
  7766  0021BA  A00F               	btfss	___fladd@bexp^0,0,c
  7767  0021BC  EFE2  F010         	goto	u3651
  7768  0021C0  EFE4  F010         	goto	u3650
  7769  0021C4                     u3651:
  7770  0021C4  EFE7  F010         	goto	l3302
  7771  0021C8                     u3650:
  7772  0021C8  8E03               	bsf	(___fladd@b+2)^0,7,c
  7773  0021CA  EFE8  F010         	goto	l3304
  7774  0021CE                     l3302:
  7775  0021CE  9E03               	bcf	(___fladd@b+2)^0,7,c
  7776  0021D0                     l3304:
  7777  0021D0  90D8               	bcf	status,0,c
  7778  0021D2  300F               	rrcf	___fladd@bexp^0,w,c
  7779  0021D4  6E04               	movwf	(___fladd@b+3)^0,c
  7780  0021D6  AE0D               	btfss	___fladd@signs^0,7,c
  7781  0021D8  EFF0  F010         	goto	u3661
  7782  0021DC  EFF2  F010         	goto	u3660
  7783  0021E0                     u3661:
  7784  0021E0  EFF3  F010         	goto	l3310
  7785  0021E4                     u3660:
  7786  0021E4  8E04               	bsf	(___fladd@b+3)^0,7,c
  7787  0021E6                     l3310:
  7788  0021E6  C001  F001         	movff	___fladd@b,?___fladd
  7789  0021EA  C002  F002         	movff	___fladd@b+1,?___fladd+1
  7790  0021EE  C003  F003         	movff	___fladd@b+2,?___fladd+2
  7791  0021F2  C004  F004         	movff	___fladd@b+3,?___fladd+3
  7792  0021F6                     l715:
  7793  0021F6  0012               	return		;funcret
  7794  0021F8                     __end_of___fladd:
  7795                           	callstack 0
  7796                           
  7797 ;; *************** function ___flneg *****************
  7798 ;; Defined at:
  7799 ;;		line 15 in file "C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\flneg.c"
  7800 ;; Parameters:    Size  Location     Type
  7801 ;;  f1              4    0[COMRAM] unsigned char 
  7802 ;; Auto vars:     Size  Location     Type
  7803 ;;		None
  7804 ;; Return value:  Size  Location     Type
  7805 ;;                  4    0[COMRAM] unsigned char 
  7806 ;; Registers used:
  7807 ;;		wreg, status,2, status,0
  7808 ;; Tracked objects:
  7809 ;;		On entry : 0/0
  7810 ;;		On exit  : 0/0
  7811 ;;		Unchanged: 0/0
  7812 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  7813 ;;      Params:         4       0       0       0       0       0       0       0       0
  7814 ;;      Locals:         0       0       0       0       0       0       0       0       0
  7815 ;;      Temps:          0       0       0       0       0       0       0       0       0
  7816 ;;      Totals:         4       0       0       0       0       0       0       0       0
  7817 ;;Total ram usage:        4 bytes
  7818 ;; Hardware stack levels used:    1
  7819 ;; This function calls:
  7820 ;;		Nothing
  7821 ;; This function is called by:
  7822 ;;		_efgtoa
  7823 ;; This function uses a non-reentrant model
  7824 ;;
  7825                           
  7826                           	psect	text29
  7827  004830                     __ptext29:
  7828                           	callstack 0
  7829  004830                     ___flneg:
  7830                           	callstack 25
  7831  004830  5001               	movf	___flneg@f1^0,w,c
  7832  004832  1002               	iorwf	(___flneg@f1+1)^0,w,c
  7833  004834  1003               	iorwf	(___flneg@f1+2)^0,w,c
  7834  004836  1004               	iorwf	(___flneg@f1+3)^0,w,c
  7835  004838  B4D8               	btfsc	status,2,c
  7836  00483A  EF21  F024         	goto	u4461
  7837  00483E  EF23  F024         	goto	u4460
  7838  004842                     u4461:
  7839  004842  EF2B  F024         	goto	l3818
  7840  004846                     u4460:
  7841  004846  0E00               	movlw	0
  7842  004848  1A01               	xorwf	___flneg@f1^0,f,c
  7843  00484A  0E00               	movlw	0
  7844  00484C  1A02               	xorwf	(___flneg@f1+1)^0,f,c
  7845  00484E  0E00               	movlw	0
  7846  004850  1A03               	xorwf	(___flneg@f1+2)^0,f,c
  7847  004852  0E80               	movlw	128
  7848  004854  1A04               	xorwf	(___flneg@f1+3)^0,f,c
  7849  004856                     l3818:
  7850  004856  C001  F001         	movff	___flneg@f1,?___flneg
  7851  00485A  C002  F002         	movff	___flneg@f1+1,?___flneg+1
  7852  00485E  C003  F003         	movff	___flneg@f1+2,?___flneg+2
  7853  004862  C004  F004         	movff	___flneg@f1+3,?___flneg+3
  7854  004866  0012               	return		;funcret
  7855  004868                     __end_of___flneg:
  7856                           	callstack 0
  7857                           
  7858 ;; *************** function ___flmul *****************
  7859 ;; Defined at:
  7860 ;;		line 8 in file "C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\sprcmul.c"
  7861 ;; Parameters:    Size  Location     Type
  7862 ;;  b               4   14[COMRAM] unsigned char 
  7863 ;;  a               4   18[COMRAM] unsigned char 
  7864 ;; Auto vars:     Size  Location     Type
  7865 ;;  prod            4   33[COMRAM] struct .
  7866 ;;  grs             4   27[COMRAM] unsigned long 
  7867 ;;  temp            2   37[COMRAM] struct .
  7868 ;;  bexp            1   32[COMRAM] unsigned char 
  7869 ;;  aexp            1   31[COMRAM] unsigned char 
  7870 ;;  sign            1   26[COMRAM] unsigned char 
  7871 ;; Return value:  Size  Location     Type
  7872 ;;                  4   14[COMRAM] unsigned char 
  7873 ;; Registers used:
  7874 ;;		wreg, status,2, status,0, prodl, prodh
  7875 ;; Tracked objects:
  7876 ;;		On entry : 0/0
  7877 ;;		On exit  : 0/0
  7878 ;;		Unchanged: 0/0
  7879 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  7880 ;;      Params:         8       0       0       0       0       0       0       0       0
  7881 ;;      Locals:        13       0       0       0       0       0       0       0       0
  7882 ;;      Temps:          4       0       0       0       0       0       0       0       0
  7883 ;;      Totals:        25       0       0       0       0       0       0       0       0
  7884 ;;Total ram usage:       25 bytes
  7885 ;; Hardware stack levels used:    1
  7886 ;; This function calls:
  7887 ;;		Nothing
  7888 ;; This function is called by:
  7889 ;;		_SensorLM35
  7890 ;;		_efgtoa
  7891 ;; This function uses a non-reentrant model
  7892 ;;
  7893                           
  7894                           	psect	text30
  7895  0021F8                     __ptext30:
  7896                           	callstack 0
  7897  0021F8                     ___flmul:
  7898                           	callstack 25
  7899  0021F8  5012               	movf	(___flmul@b+3)^0,w,c
  7900  0021FA  0B80               	andlw	128
  7901  0021FC  6E1B               	movwf	___flmul@sign^0,c
  7902  0021FE  5012               	movf	(___flmul@b+3)^0,w,c
  7903  002200  2412               	addwf	(___flmul@b+3)^0,w,c
  7904  002202  6E21               	movwf	___flmul@bexp^0,c
  7905  002204  AE11               	btfss	(___flmul@b+2)^0,7,c
  7906  002206  EF07  F011         	goto	u4071
  7907  00220A  EF09  F011         	goto	u4070
  7908  00220E                     u4071:
  7909  00220E  EF0A  F011         	goto	l3566
  7910  002212                     u4070:
  7911  002212  8021               	bsf	___flmul@bexp^0,0,c
  7912  002214                     l3566:
  7913  002214  5021               	movf	___flmul@bexp^0,w,c
  7914  002216  B4D8               	btfsc	status,2,c
  7915  002218  EF10  F011         	goto	u4081
  7916  00221C  EF12  F011         	goto	u4080
  7917  002220                     u4081:
  7918  002220  EF25  F011         	goto	l3574
  7919  002224                     u4080:
  7920  002224  2821               	incf	___flmul@bexp^0,w,c
  7921  002226  A4D8               	btfss	status,2,c
  7922  002228  EF18  F011         	goto	u4091
  7923  00222C  EF1A  F011         	goto	u4090
  7924  002230                     u4091:
  7925  002230  EF22  F011         	goto	l3572
  7926  002234                     u4090:
  7927  002234  0E00               	movlw	0
  7928  002236  6E0F               	movwf	___flmul@b^0,c
  7929  002238  0E00               	movlw	0
  7930  00223A  6E10               	movwf	(___flmul@b+1)^0,c
  7931  00223C  0E00               	movlw	0
  7932  00223E  6E11               	movwf	(___flmul@b+2)^0,c
  7933  002240  0E00               	movlw	0
  7934  002242  6E12               	movwf	(___flmul@b+3)^0,c
  7935  002244                     l3572:
  7936  002244  8E11               	bsf	(___flmul@b+2)^0,7,c
  7937  002246  EF2D  F011         	goto	l3576
  7938  00224A                     l3574:
  7939  00224A  0E00               	movlw	0
  7940  00224C  6E0F               	movwf	___flmul@b^0,c
  7941  00224E  0E00               	movlw	0
  7942  002250  6E10               	movwf	(___flmul@b+1)^0,c
  7943  002252  0E00               	movlw	0
  7944  002254  6E11               	movwf	(___flmul@b+2)^0,c
  7945  002256  0E00               	movlw	0
  7946  002258  6E12               	movwf	(___flmul@b+3)^0,c
  7947  00225A                     l3576:
  7948  00225A  5016               	movf	(___flmul@a+3)^0,w,c
  7949  00225C  0B80               	andlw	128
  7950  00225E  1A1B               	xorwf	___flmul@sign^0,f,c
  7951  002260  5016               	movf	(___flmul@a+3)^0,w,c
  7952  002262  2416               	addwf	(___flmul@a+3)^0,w,c
  7953  002264  6E20               	movwf	___flmul@aexp^0,c
  7954  002266  AE15               	btfss	(___flmul@a+2)^0,7,c
  7955  002268  EF38  F011         	goto	u4101
  7956  00226C  EF3A  F011         	goto	u4100
  7957  002270                     u4101:
  7958  002270  EF3B  F011         	goto	l3584
  7959  002274                     u4100:
  7960  002274  8020               	bsf	___flmul@aexp^0,0,c
  7961  002276                     l3584:
  7962  002276  5020               	movf	___flmul@aexp^0,w,c
  7963  002278  B4D8               	btfsc	status,2,c
  7964  00227A  EF41  F011         	goto	u4111
  7965  00227E  EF43  F011         	goto	u4110
  7966  002282                     u4111:
  7967  002282  EF56  F011         	goto	l3592
  7968  002286                     u4110:
  7969  002286  2820               	incf	___flmul@aexp^0,w,c
  7970  002288  A4D8               	btfss	status,2,c
  7971  00228A  EF49  F011         	goto	u4121
  7972  00228E  EF4B  F011         	goto	u4120
  7973  002292                     u4121:
  7974  002292  EF53  F011         	goto	l3590
  7975  002296                     u4120:
  7976  002296  0E00               	movlw	0
  7977  002298  6E13               	movwf	___flmul@a^0,c
  7978  00229A  0E00               	movlw	0
  7979  00229C  6E14               	movwf	(___flmul@a+1)^0,c
  7980  00229E  0E00               	movlw	0
  7981  0022A0  6E15               	movwf	(___flmul@a+2)^0,c
  7982  0022A2  0E00               	movlw	0
  7983  0022A4  6E16               	movwf	(___flmul@a+3)^0,c
  7984  0022A6                     l3590:
  7985  0022A6  8E15               	bsf	(___flmul@a+2)^0,7,c
  7986  0022A8  EF5E  F011         	goto	l792
  7987  0022AC                     l3592:
  7988  0022AC  0E00               	movlw	0
  7989  0022AE  6E13               	movwf	___flmul@a^0,c
  7990  0022B0  0E00               	movlw	0
  7991  0022B2  6E14               	movwf	(___flmul@a+1)^0,c
  7992  0022B4  0E00               	movlw	0
  7993  0022B6  6E15               	movwf	(___flmul@a+2)^0,c
  7994  0022B8  0E00               	movlw	0
  7995  0022BA  6E16               	movwf	(___flmul@a+3)^0,c
  7996  0022BC                     l792:
  7997  0022BC  5020               	movf	___flmul@aexp^0,w,c
  7998  0022BE  B4D8               	btfsc	status,2,c
  7999  0022C0  EF64  F011         	goto	u4131
  8000  0022C4  EF66  F011         	goto	u4130
  8001  0022C8                     u4131:
  8002  0022C8  EF6E  F011         	goto	l3596
  8003  0022CC                     u4130:
  8004  0022CC  5021               	movf	___flmul@bexp^0,w,c
  8005  0022CE  A4D8               	btfss	status,2,c
  8006  0022D0  EF6C  F011         	goto	u4141
  8007  0022D4  EF6E  F011         	goto	u4140
  8008  0022D8                     u4141:
  8009  0022D8  EF78  F011         	goto	l3600
  8010  0022DC                     u4140:
  8011  0022DC                     l3596:
  8012  0022DC  0E00               	movlw	0
  8013  0022DE  6E0F               	movwf	?___flmul^0,c
  8014  0022E0  0E00               	movlw	0
  8015  0022E2  6E10               	movwf	(?___flmul+1)^0,c
  8016  0022E4  0E00               	movlw	0
  8017  0022E6  6E11               	movwf	(?___flmul+2)^0,c
  8018  0022E8  0E00               	movlw	0
  8019  0022EA  6E12               	movwf	(?___flmul+3)^0,c
  8020  0022EC  EF10  F013         	goto	l796
  8021  0022F0                     l3600:
  8022  0022F0  5015               	movf	(___flmul@a+2)^0,w,c
  8023  0022F2  020F               	mulwf	___flmul@b^0,c
  8024  0022F4  CFF3 F026          	movff	prodl,___flmul@temp
  8025  0022F8  CFF4 F027          	movff	prodh,___flmul@temp+1
  8026  0022FC  5026               	movf	___flmul@temp^0,w,c
  8027  0022FE  6E1C               	movwf	___flmul@grs^0,c
  8028  002300  6A1D               	clrf	(___flmul@grs+1)^0,c
  8029  002302  6A1E               	clrf	(___flmul@grs+2)^0,c
  8030  002304  6A1F               	clrf	(___flmul@grs+3)^0,c
  8031  002306  5027               	movf	(___flmul@temp+1)^0,w,c
  8032  002308  6E22               	movwf	___flmul@prod^0,c
  8033  00230A  6A23               	clrf	(___flmul@prod+1)^0,c
  8034  00230C  6A24               	clrf	(___flmul@prod+2)^0,c
  8035  00230E  6A25               	clrf	(___flmul@prod+3)^0,c
  8036  002310  5014               	movf	(___flmul@a+1)^0,w,c
  8037  002312  0210               	mulwf	(___flmul@b+1)^0,c
  8038  002314  CFF3 F026          	movff	prodl,___flmul@temp
  8039  002318  CFF4 F027          	movff	prodh,___flmul@temp+1
  8040  00231C  5026               	movf	___flmul@temp^0,w,c
  8041  00231E  261C               	addwf	___flmul@grs^0,f,c
  8042  002320  0E00               	movlw	0
  8043  002322  221D               	addwfc	(___flmul@grs+1)^0,f,c
  8044  002324  221E               	addwfc	(___flmul@grs+2)^0,f,c
  8045  002326  221F               	addwfc	(___flmul@grs+3)^0,f,c
  8046  002328  5027               	movf	(___flmul@temp+1)^0,w,c
  8047  00232A  2622               	addwf	___flmul@prod^0,f,c
  8048  00232C  0E00               	movlw	0
  8049  00232E  2223               	addwfc	(___flmul@prod+1)^0,f,c
  8050  002330  2224               	addwfc	(___flmul@prod+2)^0,f,c
  8051  002332  2225               	addwfc	(___flmul@prod+3)^0,f,c
  8052  002334  5013               	movf	___flmul@a^0,w,c
  8053  002336  0211               	mulwf	(___flmul@b+2)^0,c
  8054  002338  CFF3 F026          	movff	prodl,___flmul@temp
  8055  00233C  CFF4 F027          	movff	prodh,___flmul@temp+1
  8056  002340  5026               	movf	___flmul@temp^0,w,c
  8057  002342  261C               	addwf	___flmul@grs^0,f,c
  8058  002344  0E00               	movlw	0
  8059  002346  221D               	addwfc	(___flmul@grs+1)^0,f,c
  8060  002348  221E               	addwfc	(___flmul@grs+2)^0,f,c
  8061  00234A  221F               	addwfc	(___flmul@grs+3)^0,f,c
  8062  00234C  5027               	movf	(___flmul@temp+1)^0,w,c
  8063  00234E  2622               	addwf	___flmul@prod^0,f,c
  8064  002350  0E00               	movlw	0
  8065  002352  2223               	addwfc	(___flmul@prod+1)^0,f,c
  8066  002354  2224               	addwfc	(___flmul@prod+2)^0,f,c
  8067  002356  2225               	addwfc	(___flmul@prod+3)^0,f,c
  8068  002358  C01E  F01F         	movff	___flmul@grs+2,___flmul@grs+3
  8069  00235C  C01D  F01E         	movff	___flmul@grs+1,___flmul@grs+2
  8070  002360  C01C  F01D         	movff	___flmul@grs,___flmul@grs+1
  8071  002364  6A1C               	clrf	___flmul@grs^0,c
  8072  002366  5013               	movf	___flmul@a^0,w,c
  8073  002368  0210               	mulwf	(___flmul@b+1)^0,c
  8074  00236A  CFF3 F026          	movff	prodl,___flmul@temp
  8075  00236E  CFF4 F027          	movff	prodh,___flmul@temp+1
  8076  002372  5026               	movf	___flmul@temp^0,w,c
  8077  002374  261C               	addwf	___flmul@grs^0,f,c
  8078  002376  5027               	movf	(___flmul@temp+1)^0,w,c
  8079  002378  221D               	addwfc	(___flmul@grs+1)^0,f,c
  8080  00237A  0E00               	movlw	0
  8081  00237C  221E               	addwfc	(___flmul@grs+2)^0,f,c
  8082  00237E  0E00               	movlw	0
  8083  002380  221F               	addwfc	(___flmul@grs+3)^0,f,c
  8084  002382  5014               	movf	(___flmul@a+1)^0,w,c
  8085  002384  020F               	mulwf	___flmul@b^0,c
  8086  002386  CFF3 F026          	movff	prodl,___flmul@temp
  8087  00238A  CFF4 F027          	movff	prodh,___flmul@temp+1
  8088  00238E  5026               	movf	___flmul@temp^0,w,c
  8089  002390  261C               	addwf	___flmul@grs^0,f,c
  8090  002392  5027               	movf	(___flmul@temp+1)^0,w,c
  8091  002394  221D               	addwfc	(___flmul@grs+1)^0,f,c
  8092  002396  0E00               	movlw	0
  8093  002398  221E               	addwfc	(___flmul@grs+2)^0,f,c
  8094  00239A  0E00               	movlw	0
  8095  00239C  221F               	addwfc	(___flmul@grs+3)^0,f,c
  8096  00239E  C01E  F01F         	movff	___flmul@grs+2,___flmul@grs+3
  8097  0023A2  C01D  F01E         	movff	___flmul@grs+1,___flmul@grs+2
  8098  0023A6  C01C  F01D         	movff	___flmul@grs,___flmul@grs+1
  8099  0023AA  6A1C               	clrf	___flmul@grs^0,c
  8100  0023AC  5013               	movf	___flmul@a^0,w,c
  8101  0023AE  020F               	mulwf	___flmul@b^0,c
  8102  0023B0  CFF3 F026          	movff	prodl,___flmul@temp
  8103  0023B4  CFF4 F027          	movff	prodh,___flmul@temp+1
  8104  0023B8  5026               	movf	___flmul@temp^0,w,c
  8105  0023BA  261C               	addwf	___flmul@grs^0,f,c
  8106  0023BC  5027               	movf	(___flmul@temp+1)^0,w,c
  8107  0023BE  221D               	addwfc	(___flmul@grs+1)^0,f,c
  8108  0023C0  0E00               	movlw	0
  8109  0023C2  221E               	addwfc	(___flmul@grs+2)^0,f,c
  8110  0023C4  0E00               	movlw	0
  8111  0023C6  221F               	addwfc	(___flmul@grs+3)^0,f,c
  8112  0023C8  5015               	movf	(___flmul@a+2)^0,w,c
  8113  0023CA  0210               	mulwf	(___flmul@b+1)^0,c
  8114  0023CC  CFF3 F026          	movff	prodl,___flmul@temp
  8115  0023D0  CFF4 F027          	movff	prodh,___flmul@temp+1
  8116  0023D4  5026               	movf	___flmul@temp^0,w,c
  8117  0023D6  2622               	addwf	___flmul@prod^0,f,c
  8118  0023D8  5027               	movf	(___flmul@temp+1)^0,w,c
  8119  0023DA  2223               	addwfc	(___flmul@prod+1)^0,f,c
  8120  0023DC  0E00               	movlw	0
  8121  0023DE  2224               	addwfc	(___flmul@prod+2)^0,f,c
  8122  0023E0  0E00               	movlw	0
  8123  0023E2  2225               	addwfc	(___flmul@prod+3)^0,f,c
  8124  0023E4  5014               	movf	(___flmul@a+1)^0,w,c
  8125  0023E6  0211               	mulwf	(___flmul@b+2)^0,c
  8126  0023E8  CFF3 F026          	movff	prodl,___flmul@temp
  8127  0023EC  CFF4 F027          	movff	prodh,___flmul@temp+1
  8128  0023F0  5026               	movf	___flmul@temp^0,w,c
  8129  0023F2  2622               	addwf	___flmul@prod^0,f,c
  8130  0023F4  5027               	movf	(___flmul@temp+1)^0,w,c
  8131  0023F6  2223               	addwfc	(___flmul@prod+1)^0,f,c
  8132  0023F8  0E00               	movlw	0
  8133  0023FA  2224               	addwfc	(___flmul@prod+2)^0,f,c
  8134  0023FC  0E00               	movlw	0
  8135  0023FE  2225               	addwfc	(___flmul@prod+3)^0,f,c
  8136  002400  5015               	movf	(___flmul@a+2)^0,w,c
  8137  002402  0211               	mulwf	(___flmul@b+2)^0,c
  8138  002404  CFF3 F026          	movff	prodl,___flmul@temp
  8139  002408  CFF4 F027          	movff	prodh,___flmul@temp+1
  8140  00240C  5026               	movf	___flmul@temp^0,w,c
  8141  00240E  6E17               	movwf	??___flmul^0,c
  8142  002410  5027               	movf	(___flmul@temp+1)^0,w,c
  8143  002412  6E18               	movwf	(??___flmul+1)^0,c
  8144  002414  6A19               	clrf	(??___flmul+2)^0,c
  8145  002416  6A1A               	clrf	(??___flmul+3)^0,c
  8146  002418  C019  F01A         	movff	??___flmul+2,??___flmul+3
  8147  00241C  C018  F019         	movff	??___flmul+1,??___flmul+2
  8148  002420  C017  F018         	movff	??___flmul,??___flmul+1
  8149  002424  6A17               	clrf	??___flmul^0,c
  8150  002426  5017               	movf	??___flmul^0,w,c
  8151  002428  2622               	addwf	___flmul@prod^0,f,c
  8152  00242A  5018               	movf	(??___flmul+1)^0,w,c
  8153  00242C  2223               	addwfc	(___flmul@prod+1)^0,f,c
  8154  00242E  5019               	movf	(??___flmul+2)^0,w,c
  8155  002430  2224               	addwfc	(___flmul@prod+2)^0,f,c
  8156  002432  501A               	movf	(??___flmul+3)^0,w,c
  8157  002434  2225               	addwfc	(___flmul@prod+3)^0,f,c
  8158  002436  C01C  F017         	movff	___flmul@grs,??___flmul
  8159  00243A  C01D  F018         	movff	___flmul@grs+1,??___flmul+1
  8160  00243E  C01E  F019         	movff	___flmul@grs+2,??___flmul+2
  8161  002442  C01F  F01A         	movff	___flmul@grs+3,??___flmul+3
  8162  002446  0E19               	movlw	25
  8163  002448  EF2B  F012         	goto	u4150
  8164  00244C                     u4155:
  8165  00244C  90D8               	bcf	status,0,c
  8166  00244E  321A               	rrcf	(??___flmul+3)^0,f,c
  8167  002450  3219               	rrcf	(??___flmul+2)^0,f,c
  8168  002452  3218               	rrcf	(??___flmul+1)^0,f,c
  8169  002454  3217               	rrcf	??___flmul^0,f,c
  8170  002456                     u4150:
  8171  002456  2EE8               	decfsz	wreg,f,c
  8172  002458  EF26  F012         	goto	u4155
  8173  00245C  5017               	movf	??___flmul^0,w,c
  8174  00245E  2622               	addwf	___flmul@prod^0,f,c
  8175  002460  5018               	movf	(??___flmul+1)^0,w,c
  8176  002462  2223               	addwfc	(___flmul@prod+1)^0,f,c
  8177  002464  5019               	movf	(??___flmul+2)^0,w,c
  8178  002466  2224               	addwfc	(___flmul@prod+2)^0,f,c
  8179  002468  501A               	movf	(??___flmul+3)^0,w,c
  8180  00246A  2225               	addwfc	(___flmul@prod+3)^0,f,c
  8181  00246C  C01E  F01F         	movff	___flmul@grs+2,___flmul@grs+3
  8182  002470  C01D  F01E         	movff	___flmul@grs+1,___flmul@grs+2
  8183  002474  C01C  F01D         	movff	___flmul@grs,___flmul@grs+1
  8184  002478  6A1C               	clrf	___flmul@grs^0,c
  8185  00247A  5020               	movf	___flmul@aexp^0,w,c
  8186  00247C  C021  F017         	movff	___flmul@bexp,??___flmul
  8187  002480  6A18               	clrf	(??___flmul+1)^0,c
  8188  002482  2617               	addwf	??___flmul^0,f,c
  8189  002484  0E00               	movlw	0
  8190  002486  2218               	addwfc	(??___flmul+1)^0,f,c
  8191  002488  0E82               	movlw	130
  8192  00248A  2417               	addwf	??___flmul^0,w,c
  8193  00248C  6E26               	movwf	___flmul@temp^0,c
  8194  00248E  0EFF               	movlw	255
  8195  002490  2018               	addwfc	(??___flmul+1)^0,w,c
  8196  002492  6E27               	movwf	(___flmul@temp+1)^0,c
  8197  002494  EF61  F012         	goto	l3648
  8198  002498                     l3642:
  8199  002498  90D8               	bcf	status,0,c
  8200  00249A  3622               	rlcf	___flmul@prod^0,f,c
  8201  00249C  3623               	rlcf	(___flmul@prod+1)^0,f,c
  8202  00249E  3624               	rlcf	(___flmul@prod+2)^0,f,c
  8203  0024A0  3625               	rlcf	(___flmul@prod+3)^0,f,c
  8204  0024A2  AE1F               	btfss	(___flmul@grs+3)^0,7,c
  8205  0024A4  EF56  F012         	goto	u4161
  8206  0024A8  EF58  F012         	goto	u4160
  8207  0024AC                     u4161:
  8208  0024AC  EF59  F012         	goto	l799
  8209  0024B0                     u4160:
  8210  0024B0  8022               	bsf	___flmul@prod^0,0,c
  8211  0024B2                     l799:
  8212  0024B2  90D8               	bcf	status,0,c
  8213  0024B4  361C               	rlcf	___flmul@grs^0,f,c
  8214  0024B6  361D               	rlcf	(___flmul@grs+1)^0,f,c
  8215  0024B8  361E               	rlcf	(___flmul@grs+2)^0,f,c
  8216  0024BA  361F               	rlcf	(___flmul@grs+3)^0,f,c
  8217  0024BC  0626               	decf	___flmul@temp^0,f,c
  8218  0024BE  A0D8               	btfss	status,0,c
  8219  0024C0  0627               	decf	(___flmul@temp+1)^0,f,c
  8220  0024C2                     l3648:
  8221  0024C2  AE24               	btfss	(___flmul@prod+2)^0,7,c
  8222  0024C4  EF66  F012         	goto	u4171
  8223  0024C8  EF68  F012         	goto	u4170
  8224  0024CC                     u4171:
  8225  0024CC  EF4C  F012         	goto	l3642
  8226  0024D0                     u4170:
  8227  0024D0  0E00               	movlw	0
  8228  0024D2  6E20               	movwf	___flmul@aexp^0,c
  8229  0024D4  AE1F               	btfss	(___flmul@grs+3)^0,7,c
  8230  0024D6  EF6F  F012         	goto	u4181
  8231  0024DA  EF71  F012         	goto	u4180
  8232  0024DE                     u4181:
  8233  0024DE  EF95  F012         	goto	l801
  8234  0024E2                     u4180:
  8235  0024E2  0EFF               	movlw	255
  8236  0024E4  141C               	andwf	___flmul@grs^0,w,c
  8237  0024E6  6E17               	movwf	??___flmul^0,c
  8238  0024E8  0EFF               	movlw	255
  8239  0024EA  141D               	andwf	(___flmul@grs+1)^0,w,c
  8240  0024EC  6E18               	movwf	(??___flmul+1)^0,c
  8241  0024EE  0EFF               	movlw	255
  8242  0024F0  141E               	andwf	(___flmul@grs+2)^0,w,c
  8243  0024F2  6E19               	movwf	(??___flmul+2)^0,c
  8244  0024F4  0E7F               	movlw	127
  8245  0024F6  141F               	andwf	(___flmul@grs+3)^0,w,c
  8246  0024F8  6E1A               	movwf	(??___flmul+3)^0,c
  8247  0024FA  5017               	movf	??___flmul^0,w,c
  8248  0024FC  1018               	iorwf	(??___flmul+1)^0,w,c
  8249  0024FE  1019               	iorwf	(??___flmul+2)^0,w,c
  8250  002500  101A               	iorwf	(??___flmul+3)^0,w,c
  8251  002502  B4D8               	btfsc	status,2,c
  8252  002504  EF86  F012         	goto	u4191
  8253  002508  EF88  F012         	goto	u4190
  8254  00250C                     u4191:
  8255  00250C  EF8C  F012         	goto	l802
  8256  002510                     u4190:
  8257  002510                     l3656:
  8258  002510  0E01               	movlw	1
  8259  002512  6E20               	movwf	___flmul@aexp^0,c
  8260  002514  EF95  F012         	goto	l801
  8261  002518                     l802:
  8262  002518  A022               	btfss	___flmul@prod^0,0,c
  8263  00251A  EF91  F012         	goto	u4201
  8264  00251E  EF93  F012         	goto	u4200
  8265  002522                     u4201:
  8266  002522  EF95  F012         	goto	l801
  8267  002526                     u4200:
  8268  002526  EF88  F012         	goto	l3656
  8269  00252A                     l801:
  8270  00252A  5020               	movf	___flmul@aexp^0,w,c
  8271  00252C  B4D8               	btfsc	status,2,c
  8272  00252E  EF9B  F012         	goto	u4211
  8273  002532  EF9D  F012         	goto	u4210
  8274  002536                     u4211:
  8275  002536  EFC1  F012         	goto	l3668
  8276  00253A                     u4210:
  8277  00253A  0E01               	movlw	1
  8278  00253C  2622               	addwf	___flmul@prod^0,f,c
  8279  00253E  0E00               	movlw	0
  8280  002540  2223               	addwfc	(___flmul@prod+1)^0,f,c
  8281  002542  2224               	addwfc	(___flmul@prod+2)^0,f,c
  8282  002544  2225               	addwfc	(___flmul@prod+3)^0,f,c
  8283  002546  A025               	btfss	(___flmul@prod+3)^0,0,c
  8284  002548  EFA8  F012         	goto	u4221
  8285  00254C  EFAA  F012         	goto	u4220
  8286  002550                     u4221:
  8287  002550  EFC1  F012         	goto	l3668
  8288  002554                     u4220:
  8289  002554  C022  F017         	movff	___flmul@prod,??___flmul
  8290  002558  C023  F018         	movff	___flmul@prod+1,??___flmul+1
  8291  00255C  C024  F019         	movff	___flmul@prod+2,??___flmul+2
  8292  002560  C025  F01A         	movff	___flmul@prod+3,??___flmul+3
  8293  002564  341A               	rlcf	(??___flmul+3)^0,w,c
  8294  002566  321A               	rrcf	(??___flmul+3)^0,f,c
  8295  002568  3219               	rrcf	(??___flmul+2)^0,f,c
  8296  00256A  3218               	rrcf	(??___flmul+1)^0,f,c
  8297  00256C  3217               	rrcf	??___flmul^0,f,c
  8298  00256E  C017  F022         	movff	??___flmul,___flmul@prod
  8299  002572  C018  F023         	movff	??___flmul+1,___flmul@prod+1
  8300  002576  C019  F024         	movff	??___flmul+2,___flmul@prod+2
  8301  00257A  C01A  F025         	movff	??___flmul+3,___flmul@prod+3
  8302  00257E  4A26               	infsnz	___flmul@temp^0,f,c
  8303  002580  2A27               	incf	(___flmul@temp+1)^0,f,c
  8304  002582                     l3668:
  8305  002582  BE27               	btfsc	(___flmul@temp+1)^0,7,c
  8306  002584  EFCC  F012         	goto	u4231
  8307  002588  5027               	movf	(___flmul@temp+1)^0,w,c
  8308  00258A  E108               	bnz	u4230
  8309  00258C  2826               	incf	___flmul@temp^0,w,c
  8310  00258E  A0D8               	btfss	status,0,c
  8311  002590  EFCC  F012         	goto	u4231
  8312  002594  EFCE  F012         	goto	u4230
  8313  002598                     u4231:
  8314  002598  EFD8  F012         	goto	l3672
  8315  00259C                     u4230:
  8316  00259C  0E00               	movlw	0
  8317  00259E  6E22               	movwf	___flmul@prod^0,c
  8318  0025A0  0E00               	movlw	0
  8319  0025A2  6E23               	movwf	(___flmul@prod+1)^0,c
  8320  0025A4  0E80               	movlw	128
  8321  0025A6  6E24               	movwf	(___flmul@prod+2)^0,c
  8322  0025A8  0E7F               	movlw	127
  8323  0025AA  6E25               	movwf	(___flmul@prod+3)^0,c
  8324  0025AC  EF06  F013         	goto	l3684
  8325  0025B0                     l3672:
  8326  0025B0  BE27               	btfsc	(___flmul@temp+1)^0,7,c
  8327  0025B2  EFE5  F012         	goto	u4240
  8328  0025B6  5027               	movf	(___flmul@temp+1)^0,w,c
  8329  0025B8  E106               	bnz	u4241
  8330  0025BA  0426               	decf	___flmul@temp^0,w,c
  8331  0025BC  B0D8               	btfsc	status,0,c
  8332  0025BE  EFE3  F012         	goto	u4241
  8333  0025C2  EFE5  F012         	goto	u4240
  8334  0025C6                     u4241:
  8335  0025C6  EFF1  F012         	goto	l809
  8336  0025CA                     u4240:
  8337  0025CA  0E00               	movlw	0
  8338  0025CC  6E22               	movwf	___flmul@prod^0,c
  8339  0025CE  0E00               	movlw	0
  8340  0025D0  6E23               	movwf	(___flmul@prod+1)^0,c
  8341  0025D2  0E00               	movlw	0
  8342  0025D4  6E24               	movwf	(___flmul@prod+2)^0,c
  8343  0025D6  0E00               	movlw	0
  8344  0025D8  6E25               	movwf	(___flmul@prod+3)^0,c
  8345  0025DA  0E00               	movlw	0
  8346  0025DC  6E1B               	movwf	___flmul@sign^0,c
  8347  0025DE  EF06  F013         	goto	l3684
  8348  0025E2                     l809:
  8349  0025E2  C026  F021         	movff	___flmul@temp,___flmul@bexp
  8350  0025E6  0EFF               	movlw	255
  8351  0025E8  1622               	andwf	___flmul@prod^0,f,c
  8352  0025EA  0EFF               	movlw	255
  8353  0025EC  1623               	andwf	(___flmul@prod+1)^0,f,c
  8354  0025EE  0E7F               	movlw	127
  8355  0025F0  1624               	andwf	(___flmul@prod+2)^0,f,c
  8356  0025F2  0E00               	movlw	0
  8357  0025F4  1625               	andwf	(___flmul@prod+3)^0,f,c
  8358  0025F6  A021               	btfss	___flmul@bexp^0,0,c
  8359  0025F8  EF00  F013         	goto	u4251
  8360  0025FC  EF02  F013         	goto	u4250
  8361  002600                     u4251:
  8362  002600  EF03  F013         	goto	l3682
  8363  002604                     u4250:
  8364  002604  8E24               	bsf	(___flmul@prod+2)^0,7,c
  8365  002606                     l3682:
  8366  002606  90D8               	bcf	status,0,c
  8367  002608  3021               	rrcf	___flmul@bexp^0,w,c
  8368  00260A  6E25               	movwf	(___flmul@prod+3)^0,c
  8369  00260C                     l3684:
  8370  00260C  501B               	movf	___flmul@sign^0,w,c
  8371  00260E  1225               	iorwf	(___flmul@prod+3)^0,f,c
  8372  002610  C022  F00F         	movff	___flmul@prod,?___flmul
  8373  002614  C023  F010         	movff	___flmul@prod+1,?___flmul+1
  8374  002618  C024  F011         	movff	___flmul@prod+2,?___flmul+2
  8375  00261C  C025  F012         	movff	___flmul@prod+3,?___flmul+3
  8376  002620                     l796:
  8377  002620  0012               	return		;funcret
  8378  002622                     __end_of___flmul:
  8379                           	callstack 0
  8380                           
  8381 ;; *************** function ___flge *****************
  8382 ;; Defined at:
  8383 ;;		line 4 in file "C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\flge.c"
  8384 ;; Parameters:    Size  Location     Type
  8385 ;;  ff1             4   39[COMRAM] unsigned char 
  8386 ;;  ff2             4   43[COMRAM] unsigned char 
  8387 ;; Auto vars:     Size  Location     Type
  8388 ;;		None
  8389 ;; Return value:  Size  Location     Type
  8390 ;;		None               void
  8391 ;; Registers used:
  8392 ;;		wreg, status,2, status,0
  8393 ;; Tracked objects:
  8394 ;;		On entry : 0/0
  8395 ;;		On exit  : 0/0
  8396 ;;		Unchanged: 0/0
  8397 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  8398 ;;      Params:         8       0       0       0       0       0       0       0       0
  8399 ;;      Locals:         0       0       0       0       0       0       0       0       0
  8400 ;;      Temps:          4       0       0       0       0       0       0       0       0
  8401 ;;      Totals:        12       0       0       0       0       0       0       0       0
  8402 ;;Total ram usage:       12 bytes
  8403 ;; Hardware stack levels used:    1
  8404 ;; This function calls:
  8405 ;;		Nothing
  8406 ;; This function is called by:
  8407 ;;		_efgtoa
  8408 ;; This function uses a non-reentrant model
  8409 ;;
  8410                           
  8411                           	psect	text31
  8412  003956                     __ptext31:
  8413                           	callstack 0
  8414  003956                     ___flge:
  8415                           	callstack 25
  8416  003956  0E00               	movlw	0
  8417  003958  1428               	andwf	___flge@ff1^0,w,c
  8418  00395A  6E30               	movwf	??___flge^0,c
  8419  00395C  0E00               	movlw	0
  8420  00395E  1429               	andwf	(___flge@ff1+1)^0,w,c
  8421  003960  6E31               	movwf	(??___flge+1)^0,c
  8422  003962  0E80               	movlw	128
  8423  003964  142A               	andwf	(___flge@ff1+2)^0,w,c
  8424  003966  6E32               	movwf	(??___flge+2)^0,c
  8425  003968  0E7F               	movlw	127
  8426  00396A  142B               	andwf	(___flge@ff1+3)^0,w,c
  8427  00396C  6E33               	movwf	(??___flge+3)^0,c
  8428  00396E  5030               	movf	??___flge^0,w,c
  8429  003970  1031               	iorwf	(??___flge+1)^0,w,c
  8430  003972  1032               	iorwf	(??___flge+2)^0,w,c
  8431  003974  1033               	iorwf	(??___flge+3)^0,w,c
  8432  003976  A4D8               	btfss	status,2,c
  8433  003978  EFC0  F01C         	goto	u4411
  8434  00397C  EFC2  F01C         	goto	u4410
  8435  003980                     u4411:
  8436  003980  EFCA  F01C         	goto	l3796
  8437  003984                     u4410:
  8438  003984  0E00               	movlw	0
  8439  003986  6E28               	movwf	___flge@ff1^0,c
  8440  003988  0E00               	movlw	0
  8441  00398A  6E29               	movwf	(___flge@ff1+1)^0,c
  8442  00398C  0E00               	movlw	0
  8443  00398E  6E2A               	movwf	(___flge@ff1+2)^0,c
  8444  003990  0E00               	movlw	0
  8445  003992  6E2B               	movwf	(___flge@ff1+3)^0,c
  8446  003994                     l3796:
  8447  003994  0E00               	movlw	0
  8448  003996  142C               	andwf	___flge@ff2^0,w,c
  8449  003998  6E30               	movwf	??___flge^0,c
  8450  00399A  0E00               	movlw	0
  8451  00399C  142D               	andwf	(___flge@ff2+1)^0,w,c
  8452  00399E  6E31               	movwf	(??___flge+1)^0,c
  8453  0039A0  0E80               	movlw	128
  8454  0039A2  142E               	andwf	(___flge@ff2+2)^0,w,c
  8455  0039A4  6E32               	movwf	(??___flge+2)^0,c
  8456  0039A6  0E7F               	movlw	127
  8457  0039A8  142F               	andwf	(___flge@ff2+3)^0,w,c
  8458  0039AA  6E33               	movwf	(??___flge+3)^0,c
  8459  0039AC  5030               	movf	??___flge^0,w,c
  8460  0039AE  1031               	iorwf	(??___flge+1)^0,w,c
  8461  0039B0  1032               	iorwf	(??___flge+2)^0,w,c
  8462  0039B2  1033               	iorwf	(??___flge+3)^0,w,c
  8463  0039B4  A4D8               	btfss	status,2,c
  8464  0039B6  EFDF  F01C         	goto	u4421
  8465  0039BA  EFE1  F01C         	goto	u4420
  8466  0039BE                     u4421:
  8467  0039BE  EFE9  F01C         	goto	l3800
  8468  0039C2                     u4420:
  8469  0039C2  0E00               	movlw	0
  8470  0039C4  6E2C               	movwf	___flge@ff2^0,c
  8471  0039C6  0E00               	movlw	0
  8472  0039C8  6E2D               	movwf	(___flge@ff2+1)^0,c
  8473  0039CA  0E00               	movlw	0
  8474  0039CC  6E2E               	movwf	(___flge@ff2+2)^0,c
  8475  0039CE  0E00               	movlw	0
  8476  0039D0  6E2F               	movwf	(___flge@ff2+3)^0,c
  8477  0039D2                     l3800:
  8478  0039D2  AE2B               	btfss	(___flge@ff1+3)^0,7,c
  8479  0039D4  EFEE  F01C         	goto	u4431
  8480  0039D8  EFF0  F01C         	goto	u4430
  8481  0039DC                     u4431:
  8482  0039DC  EFF9  F01C         	goto	l3804
  8483  0039E0                     u4430:
  8484  0039E0  6C28               	negf	___flge@ff1^0,c
  8485  0039E2  1E29               	comf	(___flge@ff1+1)^0,f,c
  8486  0039E4  B0D8               	btfsc	status,0,c
  8487  0039E6  2A29               	incf	(___flge@ff1+1)^0,f,c
  8488  0039E8  1E2A               	comf	(___flge@ff1+2)^0,f,c
  8489  0039EA  B0D8               	btfsc	status,0,c
  8490  0039EC  2A2A               	incf	(___flge@ff1+2)^0,f,c
  8491  0039EE  0E80               	movlw	128
  8492  0039F0  562B               	subfwb	(___flge@ff1+3)^0,f,c
  8493  0039F2                     l3804:
  8494  0039F2  AE2F               	btfss	(___flge@ff2+3)^0,7,c
  8495  0039F4  EFFE  F01C         	goto	u4441
  8496  0039F8  EF00  F01D         	goto	u4440
  8497  0039FC                     u4441:
  8498  0039FC  EF09  F01D         	goto	l443
  8499  003A00                     u4440:
  8500  003A00  6C2C               	negf	___flge@ff2^0,c
  8501  003A02  1E2D               	comf	(___flge@ff2+1)^0,f,c
  8502  003A04  B0D8               	btfsc	status,0,c
  8503  003A06  2A2D               	incf	(___flge@ff2+1)^0,f,c
  8504  003A08  1E2E               	comf	(___flge@ff2+2)^0,f,c
  8505  003A0A  B0D8               	btfsc	status,0,c
  8506  003A0C  2A2E               	incf	(___flge@ff2+2)^0,f,c
  8507  003A0E  0E80               	movlw	128
  8508  003A10  562F               	subfwb	(___flge@ff2+3)^0,f,c
  8509  003A12                     l443:
  8510  003A12  0E00               	movlw	0
  8511  003A14  1A28               	xorwf	___flge@ff1^0,f,c
  8512  003A16  0E00               	movlw	0
  8513  003A18  1A29               	xorwf	(___flge@ff1+1)^0,f,c
  8514  003A1A  0E00               	movlw	0
  8515  003A1C  1A2A               	xorwf	(___flge@ff1+2)^0,f,c
  8516  003A1E  0E80               	movlw	128
  8517  003A20  1A2B               	xorwf	(___flge@ff1+3)^0,f,c
  8518  003A22  0E00               	movlw	0
  8519  003A24  1A2C               	xorwf	___flge@ff2^0,f,c
  8520  003A26  0E00               	movlw	0
  8521  003A28  1A2D               	xorwf	(___flge@ff2+1)^0,f,c
  8522  003A2A  0E00               	movlw	0
  8523  003A2C  1A2E               	xorwf	(___flge@ff2+2)^0,f,c
  8524  003A2E  0E80               	movlw	128
  8525  003A30  1A2F               	xorwf	(___flge@ff2+3)^0,f,c
  8526  003A32  502C               	movf	___flge@ff2^0,w,c
  8527  003A34  5C28               	subwf	___flge@ff1^0,w,c
  8528  003A36  502D               	movf	(___flge@ff2+1)^0,w,c
  8529  003A38  5829               	subwfb	(___flge@ff1+1)^0,w,c
  8530  003A3A  502E               	movf	(___flge@ff2+2)^0,w,c
  8531  003A3C  582A               	subwfb	(___flge@ff1+2)^0,w,c
  8532  003A3E  502F               	movf	(___flge@ff2+3)^0,w,c
  8533  003A40  582B               	subwfb	(___flge@ff1+3)^0,w,c
  8534  003A42  B0D8               	btfsc	status,0,c
  8535  003A44  EF26  F01D         	goto	u4451
  8536  003A48  EF28  F01D         	goto	u4450
  8537  003A4C                     u4451:
  8538  003A4C  EF2B  F01D         	goto	l3810
  8539  003A50                     u4450:
  8540  003A50  90D8               	bcf	status,0,c
  8541  003A52  EF2C  F01D         	goto	l448
  8542  003A56                     l3810:
  8543  003A56  80D8               	bsf	status,0,c
  8544  003A58                     l448:
  8545  003A58  0012               	return		;funcret
  8546  003A5A                     __end_of___flge:
  8547                           	callstack 0
  8548                           
  8549 ;; *************** function ___fleq *****************
  8550 ;; Defined at:
  8551 ;;		line 4 in file "C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\fleq.c"
  8552 ;; Parameters:    Size  Location     Type
  8553 ;;  ff1             4    0[COMRAM] unsigned char 
  8554 ;;  ff2             4    4[COMRAM] unsigned char 
  8555 ;; Auto vars:     Size  Location     Type
  8556 ;;		None
  8557 ;; Return value:  Size  Location     Type
  8558 ;;		None               void
  8559 ;; Registers used:
  8560 ;;		wreg, status,2, status,0
  8561 ;; Tracked objects:
  8562 ;;		On entry : 0/0
  8563 ;;		On exit  : 0/0
  8564 ;;		Unchanged: 0/0
  8565 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  8566 ;;      Params:         8       0       0       0       0       0       0       0       0
  8567 ;;      Locals:         0       0       0       0       0       0       0       0       0
  8568 ;;      Temps:          4       0       0       0       0       0       0       0       0
  8569 ;;      Totals:        12       0       0       0       0       0       0       0       0
  8570 ;;Total ram usage:       12 bytes
  8571 ;; Hardware stack levels used:    1
  8572 ;; This function calls:
  8573 ;;		Nothing
  8574 ;; This function is called by:
  8575 ;;		_efgtoa
  8576 ;; This function uses a non-reentrant model
  8577 ;;
  8578                           
  8579                           	psect	text32
  8580  00428A                     __ptext32:
  8581                           	callstack 0
  8582  00428A                     ___fleq:
  8583                           	callstack 25
  8584  00428A  0E00               	movlw	0
  8585  00428C  1401               	andwf	___fleq@ff1^0,w,c
  8586  00428E  6E09               	movwf	??___fleq^0,c
  8587  004290  0E00               	movlw	0
  8588  004292  1402               	andwf	(___fleq@ff1+1)^0,w,c
  8589  004294  6E0A               	movwf	(??___fleq+1)^0,c
  8590  004296  0E80               	movlw	128
  8591  004298  1403               	andwf	(___fleq@ff1+2)^0,w,c
  8592  00429A  6E0B               	movwf	(??___fleq+2)^0,c
  8593  00429C  0E7F               	movlw	127
  8594  00429E  1404               	andwf	(___fleq@ff1+3)^0,w,c
  8595  0042A0  6E0C               	movwf	(??___fleq+3)^0,c
  8596  0042A2  5009               	movf	??___fleq^0,w,c
  8597  0042A4  100A               	iorwf	(??___fleq+1)^0,w,c
  8598  0042A6  100B               	iorwf	(??___fleq+2)^0,w,c
  8599  0042A8  100C               	iorwf	(??___fleq+3)^0,w,c
  8600  0042AA  A4D8               	btfss	status,2,c
  8601  0042AC  EF5A  F021         	goto	u4381
  8602  0042B0  EF5C  F021         	goto	u4380
  8603  0042B4                     u4381:
  8604  0042B4  EF64  F021         	goto	l3780
  8605  0042B8                     u4380:
  8606  0042B8  0E00               	movlw	0
  8607  0042BA  6E01               	movwf	___fleq@ff1^0,c
  8608  0042BC  0E00               	movlw	0
  8609  0042BE  6E02               	movwf	(___fleq@ff1+1)^0,c
  8610  0042C0  0E00               	movlw	0
  8611  0042C2  6E03               	movwf	(___fleq@ff1+2)^0,c
  8612  0042C4  0E00               	movlw	0
  8613  0042C6  6E04               	movwf	(___fleq@ff1+3)^0,c
  8614  0042C8                     l3780:
  8615  0042C8  0E00               	movlw	0
  8616  0042CA  1405               	andwf	___fleq@ff2^0,w,c
  8617  0042CC  6E09               	movwf	??___fleq^0,c
  8618  0042CE  0E00               	movlw	0
  8619  0042D0  1406               	andwf	(___fleq@ff2+1)^0,w,c
  8620  0042D2  6E0A               	movwf	(??___fleq+1)^0,c
  8621  0042D4  0E80               	movlw	128
  8622  0042D6  1407               	andwf	(___fleq@ff2+2)^0,w,c
  8623  0042D8  6E0B               	movwf	(??___fleq+2)^0,c
  8624  0042DA  0E7F               	movlw	127
  8625  0042DC  1408               	andwf	(___fleq@ff2+3)^0,w,c
  8626  0042DE  6E0C               	movwf	(??___fleq+3)^0,c
  8627  0042E0  5009               	movf	??___fleq^0,w,c
  8628  0042E2  100A               	iorwf	(??___fleq+1)^0,w,c
  8629  0042E4  100B               	iorwf	(??___fleq+2)^0,w,c
  8630  0042E6  100C               	iorwf	(??___fleq+3)^0,w,c
  8631  0042E8  A4D8               	btfss	status,2,c
  8632  0042EA  EF79  F021         	goto	u4391
  8633  0042EE  EF7B  F021         	goto	u4390
  8634  0042F2                     u4391:
  8635  0042F2  EF83  F021         	goto	l3784
  8636  0042F6                     u4390:
  8637  0042F6  0E00               	movlw	0
  8638  0042F8  6E05               	movwf	___fleq@ff2^0,c
  8639  0042FA  0E00               	movlw	0
  8640  0042FC  6E06               	movwf	(___fleq@ff2+1)^0,c
  8641  0042FE  0E00               	movlw	0
  8642  004300  6E07               	movwf	(___fleq@ff2+2)^0,c
  8643  004302  0E00               	movlw	0
  8644  004304  6E08               	movwf	(___fleq@ff2+3)^0,c
  8645  004306                     l3784:
  8646  004306  5005               	movf	___fleq@ff2^0,w,c
  8647  004308  1801               	xorwf	___fleq@ff1^0,w,c
  8648  00430A  E10F               	bnz	u4400
  8649  00430C  5006               	movf	(___fleq@ff2+1)^0,w,c
  8650  00430E  1802               	xorwf	(___fleq@ff1+1)^0,w,c
  8651  004310  E10C               	bnz	u4400
  8652  004312  5007               	movf	(___fleq@ff2+2)^0,w,c
  8653  004314  1803               	xorwf	(___fleq@ff1+2)^0,w,c
  8654  004316  E109               	bnz	u4400
  8655  004318  5008               	movf	(___fleq@ff2+3)^0,w,c
  8656  00431A  1804               	xorwf	(___fleq@ff1+3)^0,w,c
  8657  00431C  B4D8               	btfsc	status,2,c
  8658  00431E  EF93  F021         	goto	u4401
  8659  004322  EF95  F021         	goto	u4400
  8660  004326                     u4401:
  8661  004326  EF98  F021         	goto	l3788
  8662  00432A                     u4400:
  8663  00432A  90D8               	bcf	status,0,c
  8664  00432C  EF99  F021         	goto	l437
  8665  004330                     l3788:
  8666  004330  80D8               	bsf	status,0,c
  8667  004332                     l437:
  8668  004332  0012               	return		;funcret
  8669  004334                     __end_of___fleq:
  8670                           	callstack 0
  8671                           
  8672 ;; *************** function ___fldiv *****************
  8673 ;; Defined at:
  8674 ;;		line 11 in file "C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\sprcdiv.c"
  8675 ;; Parameters:    Size  Location     Type
  8676 ;;  b               4    0[COMRAM] unsigned char 
  8677 ;;  a               4    4[COMRAM] unsigned char 
  8678 ;; Auto vars:     Size  Location     Type
  8679 ;;  grs             4   19[COMRAM] unsigned long 
  8680 ;;  rem             4   12[COMRAM] unsigned long 
  8681 ;;  new_exp         2   17[COMRAM] short 
  8682 ;;  aexp            1   24[COMRAM] unsigned char 
  8683 ;;  bexp            1   23[COMRAM] unsigned char 
  8684 ;;  sign            1   16[COMRAM] unsigned char 
  8685 ;; Return value:  Size  Location     Type
  8686 ;;                  4    0[COMRAM] unsigned char 
  8687 ;; Registers used:
  8688 ;;		wreg, status,2, status,0
  8689 ;; Tracked objects:
  8690 ;;		On entry : 0/0
  8691 ;;		On exit  : 0/0
  8692 ;;		Unchanged: 0/0
  8693 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  8694 ;;      Params:         8       0       0       0       0       0       0       0       0
  8695 ;;      Locals:        13       0       0       0       0       0       0       0       0
  8696 ;;      Temps:          4       0       0       0       0       0       0       0       0
  8697 ;;      Totals:        25       0       0       0       0       0       0       0       0
  8698 ;;Total ram usage:       25 bytes
  8699 ;; Hardware stack levels used:    1
  8700 ;; This function calls:
  8701 ;;		Nothing
  8702 ;; This function is called by:
  8703 ;;		_efgtoa
  8704 ;; This function uses a non-reentrant model
  8705 ;;
  8706                           
  8707                           	psect	text33
  8708  002622                     __ptext33:
  8709                           	callstack 0
  8710  002622                     ___fldiv:
  8711                           	callstack 25
  8712  002622  5004               	movf	(___fldiv@b+3)^0,w,c
  8713  002624  0B80               	andlw	128
  8714  002626  6E11               	movwf	___fldiv@sign^0,c
  8715  002628  5004               	movf	(___fldiv@b+3)^0,w,c
  8716  00262A  2404               	addwf	(___fldiv@b+3)^0,w,c
  8717  00262C  6E18               	movwf	___fldiv@bexp^0,c
  8718  00262E  AE03               	btfss	(___fldiv@b+2)^0,7,c
  8719  002630  EF1C  F013         	goto	u3841
  8720  002634  EF1E  F013         	goto	u3840
  8721  002638                     u3841:
  8722  002638  EF1F  F013         	goto	l3428
  8723  00263C                     u3840:
  8724  00263C  8018               	bsf	___fldiv@bexp^0,0,c
  8725  00263E                     l3428:
  8726  00263E  5018               	movf	___fldiv@bexp^0,w,c
  8727  002640  B4D8               	btfsc	status,2,c
  8728  002642  EF25  F013         	goto	u3851
  8729  002646  EF27  F013         	goto	u3850
  8730  00264A                     u3851:
  8731  00264A  EF3C  F013         	goto	l3438
  8732  00264E                     u3850:
  8733  00264E  2818               	incf	___fldiv@bexp^0,w,c
  8734  002650  A4D8               	btfss	status,2,c
  8735  002652  EF2D  F013         	goto	u3861
  8736  002656  EF2F  F013         	goto	u3860
  8737  00265A                     u3861:
  8738  00265A  EF37  F013         	goto	l3434
  8739  00265E                     u3860:
  8740  00265E  0E00               	movlw	0
  8741  002660  6E01               	movwf	___fldiv@b^0,c
  8742  002662  0E00               	movlw	0
  8743  002664  6E02               	movwf	(___fldiv@b+1)^0,c
  8744  002666  0E00               	movlw	0
  8745  002668  6E03               	movwf	(___fldiv@b+2)^0,c
  8746  00266A  0E00               	movlw	0
  8747  00266C  6E04               	movwf	(___fldiv@b+3)^0,c
  8748  00266E                     l3434:
  8749  00266E  8E03               	bsf	(___fldiv@b+2)^0,7,c
  8750  002670  0E00               	movlw	0
  8751  002672  6E04               	movwf	(___fldiv@b+3)^0,c
  8752  002674  EF44  F013         	goto	l3440
  8753  002678                     l3438:
  8754  002678  0E00               	movlw	0
  8755  00267A  6E01               	movwf	___fldiv@b^0,c
  8756  00267C  0E00               	movlw	0
  8757  00267E  6E02               	movwf	(___fldiv@b+1)^0,c
  8758  002680  0E00               	movlw	0
  8759  002682  6E03               	movwf	(___fldiv@b+2)^0,c
  8760  002684  0E00               	movlw	0
  8761  002686  6E04               	movwf	(___fldiv@b+3)^0,c
  8762  002688                     l3440:
  8763  002688  5008               	movf	(___fldiv@a+3)^0,w,c
  8764  00268A  0B80               	andlw	128
  8765  00268C  1A11               	xorwf	___fldiv@sign^0,f,c
  8766  00268E  5008               	movf	(___fldiv@a+3)^0,w,c
  8767  002690  2408               	addwf	(___fldiv@a+3)^0,w,c
  8768  002692  6E19               	movwf	___fldiv@aexp^0,c
  8769  002694  AE07               	btfss	(___fldiv@a+2)^0,7,c
  8770  002696  EF4F  F013         	goto	u3871
  8771  00269A  EF51  F013         	goto	u3870
  8772  00269E                     u3871:
  8773  00269E  EF52  F013         	goto	l3448
  8774  0026A2                     u3870:
  8775  0026A2  8019               	bsf	___fldiv@aexp^0,0,c
  8776  0026A4                     l3448:
  8777  0026A4  5019               	movf	___fldiv@aexp^0,w,c
  8778  0026A6  B4D8               	btfsc	status,2,c
  8779  0026A8  EF58  F013         	goto	u3881
  8780  0026AC  EF5A  F013         	goto	u3880
  8781  0026B0                     u3881:
  8782  0026B0  EF6F  F013         	goto	l3458
  8783  0026B4                     u3880:
  8784  0026B4  2819               	incf	___fldiv@aexp^0,w,c
  8785  0026B6  A4D8               	btfss	status,2,c
  8786  0026B8  EF60  F013         	goto	u3891
  8787  0026BC  EF62  F013         	goto	u3890
  8788  0026C0                     u3891:
  8789  0026C0  EF6A  F013         	goto	l3454
  8790  0026C4                     u3890:
  8791  0026C4  0E00               	movlw	0
  8792  0026C6  6E05               	movwf	___fldiv@a^0,c
  8793  0026C8  0E00               	movlw	0
  8794  0026CA  6E06               	movwf	(___fldiv@a+1)^0,c
  8795  0026CC  0E00               	movlw	0
  8796  0026CE  6E07               	movwf	(___fldiv@a+2)^0,c
  8797  0026D0  0E00               	movlw	0
  8798  0026D2  6E08               	movwf	(___fldiv@a+3)^0,c
  8799  0026D4                     l3454:
  8800  0026D4  8E07               	bsf	(___fldiv@a+2)^0,7,c
  8801  0026D6  0E00               	movlw	0
  8802  0026D8  6E08               	movwf	(___fldiv@a+3)^0,c
  8803  0026DA  EF77  F013         	goto	l3460
  8804  0026DE                     l3458:
  8805  0026DE  0E00               	movlw	0
  8806  0026E0  6E05               	movwf	___fldiv@a^0,c
  8807  0026E2  0E00               	movlw	0
  8808  0026E4  6E06               	movwf	(___fldiv@a+1)^0,c
  8809  0026E6  0E00               	movlw	0
  8810  0026E8  6E07               	movwf	(___fldiv@a+2)^0,c
  8811  0026EA  0E00               	movlw	0
  8812  0026EC  6E08               	movwf	(___fldiv@a+3)^0,c
  8813  0026EE                     l3460:
  8814  0026EE  5005               	movf	___fldiv@a^0,w,c
  8815  0026F0  1006               	iorwf	(___fldiv@a+1)^0,w,c
  8816  0026F2  1007               	iorwf	(___fldiv@a+2)^0,w,c
  8817  0026F4  1008               	iorwf	(___fldiv@a+3)^0,w,c
  8818  0026F6  A4D8               	btfss	status,2,c
  8819  0026F8  EF80  F013         	goto	u3901
  8820  0026FC  EF82  F013         	goto	u3900
  8821  002700                     u3901:
  8822  002700  EF9A  F013         	goto	l3472
  8823  002704                     u3900:
  8824  002704  0E00               	movlw	0
  8825  002706  6E01               	movwf	___fldiv@b^0,c
  8826  002708  0E00               	movlw	0
  8827  00270A  6E02               	movwf	(___fldiv@b+1)^0,c
  8828  00270C  0E00               	movlw	0
  8829  00270E  6E03               	movwf	(___fldiv@b+2)^0,c
  8830  002710  0E00               	movlw	0
  8831  002712  6E04               	movwf	(___fldiv@b+3)^0,c
  8832  002714  0E80               	movlw	128
  8833  002716  1203               	iorwf	(___fldiv@b+2)^0,f,c
  8834  002718  0E7F               	movlw	127
  8835  00271A  1204               	iorwf	(___fldiv@b+3)^0,f,c
  8836  00271C                     l3466:
  8837  00271C  5011               	movf	___fldiv@sign^0,w,c
  8838  00271E  1204               	iorwf	(___fldiv@b+3)^0,f,c
  8839  002720  C001  F001         	movff	___fldiv@b,?___fldiv
  8840  002724  C002  F002         	movff	___fldiv@b+1,?___fldiv+1
  8841  002728  C003  F003         	movff	___fldiv@b+2,?___fldiv+2
  8842  00272C  C004  F004         	movff	___fldiv@b+3,?___fldiv+3
  8843  002730  EFDD  F014         	goto	l760
  8844  002734                     l3472:
  8845  002734  5018               	movf	___fldiv@bexp^0,w,c
  8846  002736  A4D8               	btfss	status,2,c
  8847  002738  EFA0  F013         	goto	u3911
  8848  00273C  EFA2  F013         	goto	u3910
  8849  002740                     u3911:
  8850  002740  EFAC  F013         	goto	l3480
  8851  002744                     u3910:
  8852  002744  0E00               	movlw	0
  8853  002746  6E01               	movwf	?___fldiv^0,c
  8854  002748  0E00               	movlw	0
  8855  00274A  6E02               	movwf	(?___fldiv+1)^0,c
  8856  00274C  0E00               	movlw	0
  8857  00274E  6E03               	movwf	(?___fldiv+2)^0,c
  8858  002750  0E00               	movlw	0
  8859  002752  6E04               	movwf	(?___fldiv+3)^0,c
  8860  002754  EFDD  F014         	goto	l760
  8861  002758                     l3480:
  8862  002758  5019               	movf	___fldiv@aexp^0,w,c
  8863  00275A  C018  F009         	movff	___fldiv@bexp,??___fldiv
  8864  00275E  6A0A               	clrf	(??___fldiv+1)^0,c
  8865  002760  5E09               	subwf	??___fldiv^0,f,c
  8866  002762  0E00               	movlw	0
  8867  002764  5A0A               	subwfb	(??___fldiv+1)^0,f,c
  8868  002766  0E7F               	movlw	127
  8869  002768  2409               	addwf	??___fldiv^0,w,c
  8870  00276A  6E12               	movwf	___fldiv@new_exp^0,c
  8871  00276C  0E00               	movlw	0
  8872  00276E  200A               	addwfc	(??___fldiv+1)^0,w,c
  8873  002770  6E13               	movwf	(___fldiv@new_exp+1)^0,c
  8874  002772  C001  F00D         	movff	___fldiv@b,___fldiv@rem
  8875  002776  C002  F00E         	movff	___fldiv@b+1,___fldiv@rem+1
  8876  00277A  C003  F00F         	movff	___fldiv@b+2,___fldiv@rem+2
  8877  00277E  C004  F010         	movff	___fldiv@b+3,___fldiv@rem+3
  8878  002782  0E00               	movlw	0
  8879  002784  6E01               	movwf	___fldiv@b^0,c
  8880  002786  0E00               	movlw	0
  8881  002788  6E02               	movwf	(___fldiv@b+1)^0,c
  8882  00278A  0E00               	movlw	0
  8883  00278C  6E03               	movwf	(___fldiv@b+2)^0,c
  8884  00278E  0E00               	movlw	0
  8885  002790  6E04               	movwf	(___fldiv@b+3)^0,c
  8886  002792  0E00               	movlw	0
  8887  002794  6E14               	movwf	___fldiv@grs^0,c
  8888  002796  0E00               	movlw	0
  8889  002798  6E15               	movwf	(___fldiv@grs+1)^0,c
  8890  00279A  0E00               	movlw	0
  8891  00279C  6E16               	movwf	(___fldiv@grs+2)^0,c
  8892  00279E  0E00               	movlw	0
  8893  0027A0  6E17               	movwf	(___fldiv@grs+3)^0,c
  8894  0027A2  0E00               	movlw	0
  8895  0027A4  6E19               	movwf	___fldiv@aexp^0,c
  8896  0027A6  EF0D  F014         	goto	l762
  8897  0027AA                     l3490:
  8898  0027AA  5019               	movf	___fldiv@aexp^0,w,c
  8899  0027AC  B4D8               	btfsc	status,2,c
  8900  0027AE  EFDB  F013         	goto	u3921
  8901  0027B2  EFDD  F013         	goto	u3920
  8902  0027B6                     u3921:
  8903  0027B6  EFF4  F013         	goto	l3498
  8904  0027BA                     u3920:
  8905  0027BA  90D8               	bcf	status,0,c
  8906  0027BC  360D               	rlcf	___fldiv@rem^0,f,c
  8907  0027BE  360E               	rlcf	(___fldiv@rem+1)^0,f,c
  8908  0027C0  360F               	rlcf	(___fldiv@rem+2)^0,f,c
  8909  0027C2  3610               	rlcf	(___fldiv@rem+3)^0,f,c
  8910  0027C4  90D8               	bcf	status,0,c
  8911  0027C6  3601               	rlcf	___fldiv@b^0,f,c
  8912  0027C8  3602               	rlcf	(___fldiv@b+1)^0,f,c
  8913  0027CA  3603               	rlcf	(___fldiv@b+2)^0,f,c
  8914  0027CC  3604               	rlcf	(___fldiv@b+3)^0,f,c
  8915  0027CE  AE17               	btfss	(___fldiv@grs+3)^0,7,c
  8916  0027D0  EFEC  F013         	goto	u3931
  8917  0027D4  EFEE  F013         	goto	u3930
  8918  0027D8                     u3931:
  8919  0027D8  EFEF  F013         	goto	l765
  8920  0027DC                     u3930:
  8921  0027DC  8001               	bsf	___fldiv@b^0,0,c
  8922  0027DE                     l765:
  8923  0027DE  90D8               	bcf	status,0,c
  8924  0027E0  3614               	rlcf	___fldiv@grs^0,f,c
  8925  0027E2  3615               	rlcf	(___fldiv@grs+1)^0,f,c
  8926  0027E4  3616               	rlcf	(___fldiv@grs+2)^0,f,c
  8927  0027E6  3617               	rlcf	(___fldiv@grs+3)^0,f,c
  8928  0027E8                     l3498:
  8929  0027E8  5005               	movf	___fldiv@a^0,w,c
  8930  0027EA  5C0D               	subwf	___fldiv@rem^0,w,c
  8931  0027EC  5006               	movf	(___fldiv@a+1)^0,w,c
  8932  0027EE  580E               	subwfb	(___fldiv@rem+1)^0,w,c
  8933  0027F0  5007               	movf	(___fldiv@a+2)^0,w,c
  8934  0027F2  580F               	subwfb	(___fldiv@rem+2)^0,w,c
  8935  0027F4  5008               	movf	(___fldiv@a+3)^0,w,c
  8936  0027F6  5810               	subwfb	(___fldiv@rem+3)^0,w,c
  8937  0027F8  A0D8               	btfss	status,0,c
  8938  0027FA  EF01  F014         	goto	u3941
  8939  0027FE  EF03  F014         	goto	u3940
  8940  002802                     u3941:
  8941  002802  EF0C  F014         	goto	l3504
  8942  002806                     u3940:
  8943  002806  8C17               	bsf	(___fldiv@grs+3)^0,6,c
  8944  002808  5005               	movf	___fldiv@a^0,w,c
  8945  00280A  5E0D               	subwf	___fldiv@rem^0,f,c
  8946  00280C  5006               	movf	(___fldiv@a+1)^0,w,c
  8947  00280E  5A0E               	subwfb	(___fldiv@rem+1)^0,f,c
  8948  002810  5007               	movf	(___fldiv@a+2)^0,w,c
  8949  002812  5A0F               	subwfb	(___fldiv@rem+2)^0,f,c
  8950  002814  5008               	movf	(___fldiv@a+3)^0,w,c
  8951  002816  5A10               	subwfb	(___fldiv@rem+3)^0,f,c
  8952  002818                     l3504:
  8953  002818  2A19               	incf	___fldiv@aexp^0,f,c
  8954  00281A                     l762:
  8955  00281A  0E19               	movlw	25
  8956  00281C  6419               	cpfsgt	___fldiv@aexp^0,c
  8957  00281E  EF13  F014         	goto	u3951
  8958  002822  EF15  F014         	goto	u3950
  8959  002826                     u3951:
  8960  002826  EFD5  F013         	goto	l3490
  8961  00282A                     u3950:
  8962  00282A  500D               	movf	___fldiv@rem^0,w,c
  8963  00282C  100E               	iorwf	(___fldiv@rem+1)^0,w,c
  8964  00282E  100F               	iorwf	(___fldiv@rem+2)^0,w,c
  8965  002830  1010               	iorwf	(___fldiv@rem+3)^0,w,c
  8966  002832  B4D8               	btfsc	status,2,c
  8967  002834  EF1E  F014         	goto	u3961
  8968  002838  EF20  F014         	goto	u3960
  8969  00283C                     u3961:
  8970  00283C  EF38  F014         	goto	l3516
  8971  002840                     u3960:
  8972  002840  8014               	bsf	___fldiv@grs^0,0,c
  8973  002842  EF38  F014         	goto	l3516
  8974  002846                     l3510:
  8975  002846  90D8               	bcf	status,0,c
  8976  002848  3601               	rlcf	___fldiv@b^0,f,c
  8977  00284A  3602               	rlcf	(___fldiv@b+1)^0,f,c
  8978  00284C  3603               	rlcf	(___fldiv@b+2)^0,f,c
  8979  00284E  3604               	rlcf	(___fldiv@b+3)^0,f,c
  8980  002850  AE17               	btfss	(___fldiv@grs+3)^0,7,c
  8981  002852  EF2D  F014         	goto	u3971
  8982  002856  EF2F  F014         	goto	u3970
  8983  00285A                     u3971:
  8984  00285A  EF30  F014         	goto	l771
  8985  00285E                     u3970:
  8986  00285E  8001               	bsf	___fldiv@b^0,0,c
  8987  002860                     l771:
  8988  002860  90D8               	bcf	status,0,c
  8989  002862  3614               	rlcf	___fldiv@grs^0,f,c
  8990  002864  3615               	rlcf	(___fldiv@grs+1)^0,f,c
  8991  002866  3616               	rlcf	(___fldiv@grs+2)^0,f,c
  8992  002868  3617               	rlcf	(___fldiv@grs+3)^0,f,c
  8993  00286A  0612               	decf	___fldiv@new_exp^0,f,c
  8994  00286C  A0D8               	btfss	status,0,c
  8995  00286E  0613               	decf	(___fldiv@new_exp+1)^0,f,c
  8996  002870                     l3516:
  8997  002870  AE03               	btfss	(___fldiv@b+2)^0,7,c
  8998  002872  EF3D  F014         	goto	u3981
  8999  002876  EF3F  F014         	goto	u3980
  9000  00287A                     u3981:
  9001  00287A  EF23  F014         	goto	l3510
  9002  00287E                     u3980:
  9003  00287E  0E00               	movlw	0
  9004  002880  6E19               	movwf	___fldiv@aexp^0,c
  9005  002882  AE17               	btfss	(___fldiv@grs+3)^0,7,c
  9006  002884  EF46  F014         	goto	u3991
  9007  002888  EF48  F014         	goto	u3990
  9008  00288C                     u3991:
  9009  00288C  EF6C  F014         	goto	l773
  9010  002890                     u3990:
  9011  002890  0EFF               	movlw	255
  9012  002892  1414               	andwf	___fldiv@grs^0,w,c
  9013  002894  6E09               	movwf	??___fldiv^0,c
  9014  002896  0EFF               	movlw	255
  9015  002898  1415               	andwf	(___fldiv@grs+1)^0,w,c
  9016  00289A  6E0A               	movwf	(??___fldiv+1)^0,c
  9017  00289C  0EFF               	movlw	255
  9018  00289E  1416               	andwf	(___fldiv@grs+2)^0,w,c
  9019  0028A0  6E0B               	movwf	(??___fldiv+2)^0,c
  9020  0028A2  0E7F               	movlw	127
  9021  0028A4  1417               	andwf	(___fldiv@grs+3)^0,w,c
  9022  0028A6  6E0C               	movwf	(??___fldiv+3)^0,c
  9023  0028A8  5009               	movf	??___fldiv^0,w,c
  9024  0028AA  100A               	iorwf	(??___fldiv+1)^0,w,c
  9025  0028AC  100B               	iorwf	(??___fldiv+2)^0,w,c
  9026  0028AE  100C               	iorwf	(??___fldiv+3)^0,w,c
  9027  0028B0  B4D8               	btfsc	status,2,c
  9028  0028B2  EF5D  F014         	goto	u4001
  9029  0028B6  EF5F  F014         	goto	u4000
  9030  0028BA                     u4001:
  9031  0028BA  EF63  F014         	goto	l774
  9032  0028BE                     u4000:
  9033  0028BE                     l3524:
  9034  0028BE  0E01               	movlw	1
  9035  0028C0  6E19               	movwf	___fldiv@aexp^0,c
  9036  0028C2  EF6C  F014         	goto	l773
  9037  0028C6                     l774:
  9038  0028C6  A001               	btfss	___fldiv@b^0,0,c
  9039  0028C8  EF68  F014         	goto	u4011
  9040  0028CC  EF6A  F014         	goto	u4010
  9041  0028D0                     u4011:
  9042  0028D0  EF6C  F014         	goto	l773
  9043  0028D4                     u4010:
  9044  0028D4  EF5F  F014         	goto	l3524
  9045  0028D8                     l773:
  9046  0028D8  5019               	movf	___fldiv@aexp^0,w,c
  9047  0028DA  B4D8               	btfsc	status,2,c
  9048  0028DC  EF72  F014         	goto	u4021
  9049  0028E0  EF74  F014         	goto	u4020
  9050  0028E4                     u4021:
  9051  0028E4  EF98  F014         	goto	l3536
  9052  0028E8                     u4020:
  9053  0028E8  0E01               	movlw	1
  9054  0028EA  2601               	addwf	___fldiv@b^0,f,c
  9055  0028EC  0E00               	movlw	0
  9056  0028EE  2202               	addwfc	(___fldiv@b+1)^0,f,c
  9057  0028F0  2203               	addwfc	(___fldiv@b+2)^0,f,c
  9058  0028F2  2204               	addwfc	(___fldiv@b+3)^0,f,c
  9059  0028F4  A004               	btfss	(___fldiv@b+3)^0,0,c
  9060  0028F6  EF7F  F014         	goto	u4031
  9061  0028FA  EF81  F014         	goto	u4030
  9062  0028FE                     u4031:
  9063  0028FE  EF98  F014         	goto	l3536
  9064  002902                     u4030:
  9065  002902  C001  F009         	movff	___fldiv@b,??___fldiv
  9066  002906  C002  F00A         	movff	___fldiv@b+1,??___fldiv+1
  9067  00290A  C003  F00B         	movff	___fldiv@b+2,??___fldiv+2
  9068  00290E  C004  F00C         	movff	___fldiv@b+3,??___fldiv+3
  9069  002912  340C               	rlcf	(??___fldiv+3)^0,w,c
  9070  002914  320C               	rrcf	(??___fldiv+3)^0,f,c
  9071  002916  320B               	rrcf	(??___fldiv+2)^0,f,c
  9072  002918  320A               	rrcf	(??___fldiv+1)^0,f,c
  9073  00291A  3209               	rrcf	??___fldiv^0,f,c
  9074  00291C  C009  F001         	movff	??___fldiv,___fldiv@b
  9075  002920  C00A  F002         	movff	??___fldiv+1,___fldiv@b+1
  9076  002924  C00B  F003         	movff	??___fldiv+2,___fldiv@b+2
  9077  002928  C00C  F004         	movff	??___fldiv+3,___fldiv@b+3
  9078  00292C  4A12               	infsnz	___fldiv@new_exp^0,f,c
  9079  00292E  2A13               	incf	(___fldiv@new_exp+1)^0,f,c
  9080  002930                     l3536:
  9081  002930  BE13               	btfsc	(___fldiv@new_exp+1)^0,7,c
  9082  002932  EFA3  F014         	goto	u4041
  9083  002936  5013               	movf	(___fldiv@new_exp+1)^0,w,c
  9084  002938  E108               	bnz	u4040
  9085  00293A  2812               	incf	___fldiv@new_exp^0,w,c
  9086  00293C  A0D8               	btfss	status,0,c
  9087  00293E  EFA3  F014         	goto	u4041
  9088  002942  EFA5  F014         	goto	u4040
  9089  002946                     u4041:
  9090  002946  EFB0  F014         	goto	l3540
  9091  00294A                     u4040:
  9092  00294A  0E00               	movlw	0
  9093  00294C  6E13               	movwf	(___fldiv@new_exp+1)^0,c
  9094  00294E  6812               	setf	___fldiv@new_exp^0,c
  9095  002950  0E00               	movlw	0
  9096  002952  6E01               	movwf	___fldiv@b^0,c
  9097  002954  0E00               	movlw	0
  9098  002956  6E02               	movwf	(___fldiv@b+1)^0,c
  9099  002958  0E00               	movlw	0
  9100  00295A  6E03               	movwf	(___fldiv@b+2)^0,c
  9101  00295C  0E00               	movlw	0
  9102  00295E  6E04               	movwf	(___fldiv@b+3)^0,c
  9103  002960                     l3540:
  9104  002960  BE13               	btfsc	(___fldiv@new_exp+1)^0,7,c
  9105  002962  EFBD  F014         	goto	u4050
  9106  002966  5013               	movf	(___fldiv@new_exp+1)^0,w,c
  9107  002968  E106               	bnz	u4051
  9108  00296A  0412               	decf	___fldiv@new_exp^0,w,c
  9109  00296C  B0D8               	btfsc	status,0,c
  9110  00296E  EFBB  F014         	goto	u4051
  9111  002972  EFBD  F014         	goto	u4050
  9112  002976                     u4051:
  9113  002976  EFCB  F014         	goto	l3544
  9114  00297A                     u4050:
  9115  00297A  0E00               	movlw	0
  9116  00297C  6E13               	movwf	(___fldiv@new_exp+1)^0,c
  9117  00297E  0E00               	movlw	0
  9118  002980  6E12               	movwf	___fldiv@new_exp^0,c
  9119  002982  0E00               	movlw	0
  9120  002984  6E01               	movwf	___fldiv@b^0,c
  9121  002986  0E00               	movlw	0
  9122  002988  6E02               	movwf	(___fldiv@b+1)^0,c
  9123  00298A  0E00               	movlw	0
  9124  00298C  6E03               	movwf	(___fldiv@b+2)^0,c
  9125  00298E  0E00               	movlw	0
  9126  002990  6E04               	movwf	(___fldiv@b+3)^0,c
  9127  002992  0E00               	movlw	0
  9128  002994  6E11               	movwf	___fldiv@sign^0,c
  9129  002996                     l3544:
  9130  002996  C012  F018         	movff	___fldiv@new_exp,___fldiv@bexp
  9131  00299A  A018               	btfss	___fldiv@bexp^0,0,c
  9132  00299C  EFD2  F014         	goto	u4061
  9133  0029A0  EFD4  F014         	goto	u4060
  9134  0029A4                     u4061:
  9135  0029A4  EFD7  F014         	goto	l3550
  9136  0029A8                     u4060:
  9137  0029A8  8E03               	bsf	(___fldiv@b+2)^0,7,c
  9138  0029AA  EFD8  F014         	goto	l3552
  9139  0029AE                     l3550:
  9140  0029AE  9E03               	bcf	(___fldiv@b+2)^0,7,c
  9141  0029B0                     l3552:
  9142  0029B0  90D8               	bcf	status,0,c
  9143  0029B2  3018               	rrcf	___fldiv@bexp^0,w,c
  9144  0029B4  6E04               	movwf	(___fldiv@b+3)^0,c
  9145  0029B6  EF8E  F013         	goto	l3466
  9146  0029BA                     l760:
  9147  0029BA  0012               	return		;funcret
  9148  0029BC                     __end_of___fldiv:
  9149                           	callstack 0
  9150                           
  9151 ;; *************** function ___awmod *****************
  9152 ;; Defined at:
  9153 ;;		line 7 in file "C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\awmod.c"
  9154 ;; Parameters:    Size  Location     Type
  9155 ;;  dividend        2    0[COMRAM] int 
  9156 ;;  divisor         2    2[COMRAM] int 
  9157 ;; Auto vars:     Size  Location     Type
  9158 ;;  sign            1    5[COMRAM] unsigned char 
  9159 ;;  counter         1    4[COMRAM] unsigned char 
  9160 ;; Return value:  Size  Location     Type
  9161 ;;                  2    0[COMRAM] int 
  9162 ;; Registers used:
  9163 ;;		wreg, status,2, status,0
  9164 ;; Tracked objects:
  9165 ;;		On entry : 0/0
  9166 ;;		On exit  : 0/0
  9167 ;;		Unchanged: 0/0
  9168 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  9169 ;;      Params:         4       0       0       0       0       0       0       0       0
  9170 ;;      Locals:         2       0       0       0       0       0       0       0       0
  9171 ;;      Temps:          0       0       0       0       0       0       0       0       0
  9172 ;;      Totals:         6       0       0       0       0       0       0       0       0
  9173 ;;Total ram usage:        6 bytes
  9174 ;; Hardware stack levels used:    1
  9175 ;; This function calls:
  9176 ;;		Nothing
  9177 ;; This function is called by:
  9178 ;;		_Mostrar_Reloj
  9179 ;;		_Alarma
  9180 ;;		_efgtoa
  9181 ;; This function uses a non-reentrant model
  9182 ;;
  9183                           
  9184                           	psect	text34
  9185  0041DA                     __ptext34:
  9186                           	callstack 0
  9187  0041DA                     ___awmod:
  9188                           	callstack 25
  9189  0041DA  0E00               	movlw	0
  9190  0041DC  6E06               	movwf	___awmod@sign^0,c
  9191  0041DE  BE02               	btfsc	(___awmod@dividend+1)^0,7,c
  9192  0041E0  EFF6  F020         	goto	u4320
  9193  0041E4  EFF4  F020         	goto	u4321
  9194  0041E8                     u4321:
  9195  0041E8  EFFC  F020         	goto	l3748
  9196  0041EC                     u4320:
  9197  0041EC  6C01               	negf	___awmod@dividend^0,c
  9198  0041EE  1E02               	comf	(___awmod@dividend+1)^0,f,c
  9199  0041F0  B0D8               	btfsc	status,0,c
  9200  0041F2  2A02               	incf	(___awmod@dividend+1)^0,f,c
  9201  0041F4  0E01               	movlw	1
  9202  0041F6  6E06               	movwf	___awmod@sign^0,c
  9203  0041F8                     l3748:
  9204  0041F8  BE04               	btfsc	(___awmod@divisor+1)^0,7,c
  9205  0041FA  EF03  F021         	goto	u4330
  9206  0041FE  EF01  F021         	goto	u4331
  9207  004202                     u4331:
  9208  004202  EF07  F021         	goto	l3752
  9209  004206                     u4330:
  9210  004206  6C03               	negf	___awmod@divisor^0,c
  9211  004208  1E04               	comf	(___awmod@divisor+1)^0,f,c
  9212  00420A  B0D8               	btfsc	status,0,c
  9213  00420C  2A04               	incf	(___awmod@divisor+1)^0,f,c
  9214  00420E                     l3752:
  9215  00420E  5003               	movf	___awmod@divisor^0,w,c
  9216  004210  1004               	iorwf	(___awmod@divisor+1)^0,w,c
  9217  004212  B4D8               	btfsc	status,2,c
  9218  004214  EF0E  F021         	goto	u4341
  9219  004218  EF10  F021         	goto	u4340
  9220  00421C                     u4341:
  9221  00421C  EF34  F021         	goto	l3768
  9222  004220                     u4340:
  9223  004220  0E01               	movlw	1
  9224  004222  6E05               	movwf	___awmod@counter^0,c
  9225  004224  EF18  F021         	goto	l3758
  9226  004228                     l3756:
  9227  004228  90D8               	bcf	status,0,c
  9228  00422A  3603               	rlcf	___awmod@divisor^0,f,c
  9229  00422C  3604               	rlcf	(___awmod@divisor+1)^0,f,c
  9230  00422E  2A05               	incf	___awmod@counter^0,f,c
  9231  004230                     l3758:
  9232  004230  AE04               	btfss	(___awmod@divisor+1)^0,7,c
  9233  004232  EF1D  F021         	goto	u4351
  9234  004236  EF1F  F021         	goto	u4350
  9235  00423A                     u4351:
  9236  00423A  EF14  F021         	goto	l3756
  9237  00423E                     u4350:
  9238  00423E                     l3760:
  9239  00423E  5003               	movf	___awmod@divisor^0,w,c
  9240  004240  5C01               	subwf	___awmod@dividend^0,w,c
  9241  004242  5004               	movf	(___awmod@divisor+1)^0,w,c
  9242  004244  5802               	subwfb	(___awmod@dividend+1)^0,w,c
  9243  004246  A0D8               	btfss	status,0,c
  9244  004248  EF28  F021         	goto	u4361
  9245  00424C  EF2A  F021         	goto	u4360
  9246  004250                     u4361:
  9247  004250  EF2E  F021         	goto	l3764
  9248  004254                     u4360:
  9249  004254  5003               	movf	___awmod@divisor^0,w,c
  9250  004256  5E01               	subwf	___awmod@dividend^0,f,c
  9251  004258  5004               	movf	(___awmod@divisor+1)^0,w,c
  9252  00425A  5A02               	subwfb	(___awmod@dividend+1)^0,f,c
  9253  00425C                     l3764:
  9254  00425C  90D8               	bcf	status,0,c
  9255  00425E  3204               	rrcf	(___awmod@divisor+1)^0,f,c
  9256  004260  3203               	rrcf	___awmod@divisor^0,f,c
  9257  004262  2E05               	decfsz	___awmod@counter^0,f,c
  9258  004264  EF1F  F021         	goto	l3760
  9259  004268                     l3768:
  9260  004268  5006               	movf	___awmod@sign^0,w,c
  9261  00426A  B4D8               	btfsc	status,2,c
  9262  00426C  EF3A  F021         	goto	u4371
  9263  004270  EF3C  F021         	goto	u4370
  9264  004274                     u4371:
  9265  004274  EF40  F021         	goto	l3772
  9266  004278                     u4370:
  9267  004278  6C01               	negf	___awmod@dividend^0,c
  9268  00427A  1E02               	comf	(___awmod@dividend+1)^0,f,c
  9269  00427C  B0D8               	btfsc	status,0,c
  9270  00427E  2A02               	incf	(___awmod@dividend+1)^0,f,c
  9271  004280                     l3772:
  9272  004280  C001  F001         	movff	___awmod@dividend,?___awmod
  9273  004284  C002  F002         	movff	___awmod@dividend+1,?___awmod+1
  9274  004288  0012               	return		;funcret
  9275  00428A                     __end_of___awmod:
  9276                           	callstack 0
  9277                           
  9278 ;; *************** function ___awdiv *****************
  9279 ;; Defined at:
  9280 ;;		line 7 in file "C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\awdiv.c"
  9281 ;; Parameters:    Size  Location     Type
  9282 ;;  dividend        2    5[COMRAM] int 
  9283 ;;  divisor         2    7[COMRAM] int 
  9284 ;; Auto vars:     Size  Location     Type
  9285 ;;  quotient        2   11[COMRAM] int 
  9286 ;;  sign            1   10[COMRAM] unsigned char 
  9287 ;;  counter         1    9[COMRAM] unsigned char 
  9288 ;; Return value:  Size  Location     Type
  9289 ;;                  2    5[COMRAM] int 
  9290 ;; Registers used:
  9291 ;;		wreg, status,2, status,0
  9292 ;; Tracked objects:
  9293 ;;		On entry : 0/0
  9294 ;;		On exit  : 0/0
  9295 ;;		Unchanged: 0/0
  9296 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  9297 ;;      Params:         4       0       0       0       0       0       0       0       0
  9298 ;;      Locals:         4       0       0       0       0       0       0       0       0
  9299 ;;      Temps:          0       0       0       0       0       0       0       0       0
  9300 ;;      Totals:         8       0       0       0       0       0       0       0       0
  9301 ;;Total ram usage:        8 bytes
  9302 ;; Hardware stack levels used:    1
  9303 ;; This function calls:
  9304 ;;		Nothing
  9305 ;; This function is called by:
  9306 ;;		_SensorLM35
  9307 ;;		_Mostrar_Reloj
  9308 ;;		_Alarma
  9309 ;;		_efgtoa
  9310 ;; This function uses a non-reentrant model
  9311 ;;
  9312                           
  9313                           	psect	text35
  9314  004062                     __ptext35:
  9315                           	callstack 0
  9316  004062                     ___awdiv:
  9317                           	callstack 25
  9318  004062  0E00               	movlw	0
  9319  004064  6E0B               	movwf	___awdiv@sign^0,c
  9320  004066  BE09               	btfsc	(___awdiv@divisor+1)^0,7,c
  9321  004068  EF3A  F020         	goto	u4260
  9322  00406C  EF38  F020         	goto	u4261
  9323  004070                     u4261:
  9324  004070  EF40  F020         	goto	l3704
  9325  004074                     u4260:
  9326  004074  6C08               	negf	___awdiv@divisor^0,c
  9327  004076  1E09               	comf	(___awdiv@divisor+1)^0,f,c
  9328  004078  B0D8               	btfsc	status,0,c
  9329  00407A  2A09               	incf	(___awdiv@divisor+1)^0,f,c
  9330  00407C  0E01               	movlw	1
  9331  00407E  6E0B               	movwf	___awdiv@sign^0,c
  9332  004080                     l3704:
  9333  004080  BE07               	btfsc	(___awdiv@dividend+1)^0,7,c
  9334  004082  EF47  F020         	goto	u4270
  9335  004086  EF45  F020         	goto	u4271
  9336  00408A                     u4271:
  9337  00408A  EF4D  F020         	goto	l3710
  9338  00408E                     u4270:
  9339  00408E  6C06               	negf	___awdiv@dividend^0,c
  9340  004090  1E07               	comf	(___awdiv@dividend+1)^0,f,c
  9341  004092  B0D8               	btfsc	status,0,c
  9342  004094  2A07               	incf	(___awdiv@dividend+1)^0,f,c
  9343  004096  0E01               	movlw	1
  9344  004098  1A0B               	xorwf	___awdiv@sign^0,f,c
  9345  00409A                     l3710:
  9346  00409A  0E00               	movlw	0
  9347  00409C  6E0D               	movwf	(___awdiv@quotient+1)^0,c
  9348  00409E  0E00               	movlw	0
  9349  0040A0  6E0C               	movwf	___awdiv@quotient^0,c
  9350  0040A2  5008               	movf	___awdiv@divisor^0,w,c
  9351  0040A4  1009               	iorwf	(___awdiv@divisor+1)^0,w,c
  9352  0040A6  B4D8               	btfsc	status,2,c
  9353  0040A8  EF58  F020         	goto	u4281
  9354  0040AC  EF5A  F020         	goto	u4280
  9355  0040B0                     u4281:
  9356  0040B0  EF82  F020         	goto	l3732
  9357  0040B4                     u4280:
  9358  0040B4  0E01               	movlw	1
  9359  0040B6  6E0A               	movwf	___awdiv@counter^0,c
  9360  0040B8  EF62  F020         	goto	l3718
  9361  0040BC                     l3716:
  9362  0040BC  90D8               	bcf	status,0,c
  9363  0040BE  3608               	rlcf	___awdiv@divisor^0,f,c
  9364  0040C0  3609               	rlcf	(___awdiv@divisor+1)^0,f,c
  9365  0040C2  2A0A               	incf	___awdiv@counter^0,f,c
  9366  0040C4                     l3718:
  9367  0040C4  AE09               	btfss	(___awdiv@divisor+1)^0,7,c
  9368  0040C6  EF67  F020         	goto	u4291
  9369  0040CA  EF69  F020         	goto	u4290
  9370  0040CE                     u4291:
  9371  0040CE  EF5E  F020         	goto	l3716
  9372  0040D2                     u4290:
  9373  0040D2                     l3720:
  9374  0040D2  90D8               	bcf	status,0,c
  9375  0040D4  360C               	rlcf	___awdiv@quotient^0,f,c
  9376  0040D6  360D               	rlcf	(___awdiv@quotient+1)^0,f,c
  9377  0040D8  5008               	movf	___awdiv@divisor^0,w,c
  9378  0040DA  5C06               	subwf	___awdiv@dividend^0,w,c
  9379  0040DC  5009               	movf	(___awdiv@divisor+1)^0,w,c
  9380  0040DE  5807               	subwfb	(___awdiv@dividend+1)^0,w,c
  9381  0040E0  A0D8               	btfss	status,0,c
  9382  0040E2  EF75  F020         	goto	u4301
  9383  0040E6  EF77  F020         	goto	u4300
  9384  0040EA                     u4301:
  9385  0040EA  EF7C  F020         	goto	l3728
  9386  0040EE                     u4300:
  9387  0040EE  5008               	movf	___awdiv@divisor^0,w,c
  9388  0040F0  5E06               	subwf	___awdiv@dividend^0,f,c
  9389  0040F2  5009               	movf	(___awdiv@divisor+1)^0,w,c
  9390  0040F4  5A07               	subwfb	(___awdiv@dividend+1)^0,f,c
  9391  0040F6  800C               	bsf	___awdiv@quotient^0,0,c
  9392  0040F8                     l3728:
  9393  0040F8  90D8               	bcf	status,0,c
  9394  0040FA  3209               	rrcf	(___awdiv@divisor+1)^0,f,c
  9395  0040FC  3208               	rrcf	___awdiv@divisor^0,f,c
  9396  0040FE  2E0A               	decfsz	___awdiv@counter^0,f,c
  9397  004100  EF69  F020         	goto	l3720
  9398  004104                     l3732:
  9399  004104  500B               	movf	___awdiv@sign^0,w,c
  9400  004106  B4D8               	btfsc	status,2,c
  9401  004108  EF88  F020         	goto	u4311
  9402  00410C  EF8A  F020         	goto	u4310
  9403  004110                     u4311:
  9404  004110  EF8E  F020         	goto	l3736
  9405  004114                     u4310:
  9406  004114  6C0C               	negf	___awdiv@quotient^0,c
  9407  004116  1E0D               	comf	(___awdiv@quotient+1)^0,f,c
  9408  004118  B0D8               	btfsc	status,0,c
  9409  00411A  2A0D               	incf	(___awdiv@quotient+1)^0,f,c
  9410  00411C                     l3736:
  9411  00411C  C00C  F006         	movff	___awdiv@quotient,?___awdiv
  9412  004120  C00D  F007         	movff	___awdiv@quotient+1,?___awdiv+1
  9413  004124  0012               	return		;funcret
  9414  004126                     __end_of___awdiv:
  9415                           	callstack 0
  9416                           
  9417 ;; *************** function _dtoa *****************
  9418 ;; Defined at:
  9419 ;;		line 287 in file "C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c"
  9420 ;; Parameters:    Size  Location     Type
  9421 ;;  fp              2   30[COMRAM] PTR struct _IO_FILE
  9422 ;;		 -> NULL(0), sprintf@f(6), 
  9423 ;;  d               8   32[COMRAM] long long 
  9424 ;; Auto vars:     Size  Location     Type
  9425 ;;  n               8   56[COMRAM] long long 
  9426 ;;  i               2   64[COMRAM] int 
  9427 ;;  s               2   54[COMRAM] int 
  9428 ;;  w               2   52[COMRAM] int 
  9429 ;;  p               2   50[COMRAM] int 
  9430 ;; Return value:  Size  Location     Type
  9431 ;;                  2   30[COMRAM] int 
  9432 ;; Registers used:
  9433 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
  9434 ;; Tracked objects:
  9435 ;;		On entry : 0/0
  9436 ;;		On exit  : 0/0
  9437 ;;		Unchanged: 0/0
  9438 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  9439 ;;      Params:        10       0       0       0       0       0       0       0       0
  9440 ;;      Locals:        18       0       0       0       0       0       0       0       0
  9441 ;;      Temps:          8       0       0       0       0       0       0       0       0
  9442 ;;      Totals:        36       0       0       0       0       0       0       0       0
  9443 ;;Total ram usage:       36 bytes
  9444 ;; Hardware stack levels used:    1
  9445 ;; Hardware stack levels required when called:    4
  9446 ;; This function calls:
  9447 ;;		___aodiv
  9448 ;;		___aomod
  9449 ;;		_abs
  9450 ;;		_pad
  9451 ;; This function is called by:
  9452 ;;		_vfpfcnvrt
  9453 ;; This function uses a non-reentrant model
  9454 ;;
  9455                           
  9456                           	psect	text36
  9457  0029BC                     __ptext36:
  9458                           	callstack 0
  9459  0029BC                     _dtoa:
  9460                           	callstack 22
  9461  0029BC                     
  9462                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 287: static int d
      +                          toa(FILE *fp, long long d);C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\d
      +                          oprnt.c: 288: {;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 28
      +                          9:     int i, p, s, w;;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprn
      +                          t.c: 290:     long long n;;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\d
      +                          oprnt.c: 293:     n = d;
  9463  0029BC  C021  F039         	movff	dtoa@d,dtoa@n
  9464  0029C0  C022  F03A         	movff	dtoa@d+1,dtoa@n+1
  9465  0029C4  C023  F03B         	movff	dtoa@d+2,dtoa@n+2
  9466  0029C8  C024  F03C         	movff	dtoa@d+3,dtoa@n+3
  9467  0029CC  C025  F03D         	movff	dtoa@d+4,dtoa@n+4
  9468  0029D0  C026  F03E         	movff	dtoa@d+5,dtoa@n+5
  9469  0029D4  C027  F03F         	movff	dtoa@d+6,dtoa@n+6
  9470  0029D8  C028  F040         	movff	dtoa@d+7,dtoa@n+7
  9471  0029DC                     
  9472                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 294:     s = n < 
      +                          0 ? 1 : 0;
  9473  0029DC  BE40               	btfsc	(dtoa@n+7)^0,7,c
  9474  0029DE  EFF3  F014         	goto	u4901
  9475  0029E2  EFF6  F014         	goto	u4900
  9476  0029E6                     u4901:
  9477  0029E6  0E01               	movlw	1
  9478  0029E8  EFF7  F014         	goto	u4910
  9479  0029EC                     u4900:
  9480  0029EC  0E00               	movlw	0
  9481  0029EE                     u4910:
  9482  0029EE  6E37               	movwf	dtoa@s^0,c
  9483  0029F0  6A38               	clrf	(dtoa@s+1)^0,c
  9484                           
  9485                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 295:     if (s) {
  9486  0029F2  5037               	movf	dtoa@s^0,w,c
  9487  0029F4  1038               	iorwf	(dtoa@s+1)^0,w,c
  9488  0029F6  B4D8               	btfsc	status,2,c
  9489  0029F8  EF00  F015         	goto	u4921
  9490  0029FC  EF02  F015         	goto	u4920
  9491  002A00                     u4921:
  9492  002A00  EF12  F015         	goto	l4006
  9493  002A04                     u4920:
  9494  002A04                     
  9495                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 296:         n = 
      +                          -n;
  9496  002A04  1E40               	comf	(dtoa@n+7)^0,f,c
  9497  002A06  1E3F               	comf	(dtoa@n+6)^0,f,c
  9498  002A08  1E3E               	comf	(dtoa@n+5)^0,f,c
  9499  002A0A  1E3D               	comf	(dtoa@n+4)^0,f,c
  9500  002A0C  1E3C               	comf	(dtoa@n+3)^0,f,c
  9501  002A0E  1E3B               	comf	(dtoa@n+2)^0,f,c
  9502  002A10  1E3A               	comf	(dtoa@n+1)^0,f,c
  9503  002A12  6C39               	negf	dtoa@n^0,c
  9504  002A14  0E00               	movlw	0
  9505  002A16  223A               	addwfc	(dtoa@n+1)^0,f,c
  9506  002A18  223B               	addwfc	(dtoa@n+2)^0,f,c
  9507  002A1A  223C               	addwfc	(dtoa@n+3)^0,f,c
  9508  002A1C  223D               	addwfc	(dtoa@n+4)^0,f,c
  9509  002A1E  223E               	addwfc	(dtoa@n+5)^0,f,c
  9510  002A20  223F               	addwfc	(dtoa@n+6)^0,f,c
  9511  002A22  2240               	addwfc	(dtoa@n+7)^0,f,c
  9512  002A24                     l4006:
  9513                           
  9514                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 300:     if (!(pr
      +                          ec < 0)) {
  9515  002A24  0100               	movlb	0	; () banked
  9516  002A26  BFD5               	btfsc	(_prec+1)& (0+255),7,b
  9517  002A28  EF18  F015         	goto	u4931
  9518  002A2C  EF1A  F015         	goto	u4930
  9519  002A30                     u4931:
  9520  002A30  EF1B  F015         	goto	l4010
  9521  002A34                     u4930:
  9522  002A34                     
  9523                           ; BSR set to: 0
  9524                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 301:         flag
      +                          s &= ~(1 << 1);
  9525  002A34  93D6               	bcf	_flags& (0+255),1,b
  9526  002A36                     l4010:
  9527                           
  9528                           ; BSR set to: 0
  9529                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 303:     p = (0 <
      +                           prec) ? prec : 1;
  9530  002A36  BFD5               	btfsc	(_prec+1)& (0+255),7,b
  9531  002A38  EF28  F015         	goto	u4940
  9532  002A3C  51D5               	movf	(_prec+1)& (0+255),w,b
  9533  002A3E  E106               	bnz	u4941
  9534  002A40  05D4               	decf	_prec& (0+255),w,b
  9535  002A42  B0D8               	btfsc	status,0,c
  9536  002A44  EF26  F015         	goto	u4941
  9537  002A48  EF28  F015         	goto	u4940
  9538  002A4C                     u4941:
  9539  002A4C  EF2E  F015         	goto	l926
  9540  002A50                     u4940:
  9541  002A50                     
  9542                           ; BSR set to: 0
  9543  002A50  0E00               	movlw	0
  9544  002A52  6E34               	movwf	(dtoa@p+1)^0,c
  9545  002A54  0E01               	movlw	1
  9546  002A56  6E33               	movwf	dtoa@p^0,c
  9547  002A58  EF32  F015         	goto	l928
  9548  002A5C                     l926:
  9549                           
  9550                           ; BSR set to: 0
  9551  002A5C  C0D4  F033         	movff	_prec,dtoa@p
  9552  002A60  C0D5  F034         	movff	_prec+1,dtoa@p+1
  9553  002A64                     l928:
  9554                           
  9555                           ; BSR set to: 0
  9556                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 304:     w = widt
      +                          h;
  9557  002A64  C0D2  F035         	movff	_width,dtoa@w
  9558  002A68  C0D3  F036         	movff	_width+1,dtoa@w+1
  9559  002A6C                     
  9560                           ; BSR set to: 0
  9561                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 305:     if (s ||
      +                           (flags & (1 << 2))) {
  9562  002A6C  5037               	movf	dtoa@s^0,w,c
  9563  002A6E  1038               	iorwf	(dtoa@s+1)^0,w,c
  9564  002A70  A4D8               	btfss	status,2,c
  9565  002A72  EF3D  F015         	goto	u4951
  9566  002A76  EF3F  F015         	goto	u4950
  9567  002A7A                     u4951:
  9568  002A7A  EF46  F015         	goto	l4018
  9569  002A7E                     u4950:
  9570  002A7E                     
  9571                           ; BSR set to: 0
  9572  002A7E  A5D6               	btfss	_flags& (0+255),2,b
  9573  002A80  EF44  F015         	goto	u4961
  9574  002A84  EF46  F015         	goto	u4960
  9575  002A88                     u4961:
  9576  002A88  EF49  F015         	goto	l4020
  9577  002A8C                     u4960:
  9578  002A8C                     l4018:
  9579                           
  9580                           ; BSR set to: 0
  9581                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 306:         --w;
  9582  002A8C  0635               	decf	dtoa@w^0,f,c
  9583  002A8E  A0D8               	btfss	status,0,c
  9584  002A90  0636               	decf	(dtoa@w+1)^0,f,c
  9585  002A92                     l4020:
  9586                           
  9587                           ; BSR set to: 0
  9588                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 310:     i = size
      +                          of(dbuf) - 1;
  9589  002A92  0E00               	movlw	0
  9590  002A94  6E42               	movwf	(dtoa@i+1)^0,c
  9591  002A96  0E4F               	movlw	79
  9592  002A98  6E41               	movwf	dtoa@i^0,c
  9593  002A9A                     
  9594                           ; BSR set to: 0
  9595                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 311:     dbuf[i] 
      +                          = '\0';
  9596  002A9A  0E00               	movlw	0
  9597  002A9C  0101               	movlb	1	; () banked
  9598  002A9E  6F53               	movwf	(_dbuf+79)& (0+255),b
  9599                           
  9600                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 312:     while (!
      +                          (i < 1) && (n || (0 < p) || ((0 < w) && (flags & (1 << 1))))) {
  9601  002AA0  EFCE  F015         	goto	l4034
  9602  002AA4                     l4024:
  9603                           
  9604                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 313:         --i;
  9605  002AA4  0641               	decf	dtoa@i^0,f,c
  9606  002AA6  A0D8               	btfss	status,0,c
  9607  002AA8  0642               	decf	(dtoa@i+1)^0,f,c
  9608  002AAA                     
  9609                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 314:         dbuf
      +                          [i] = (char)((int)'0' + abs(n % 10));
  9610  002AAA  0E04               	movlw	low _dbuf
  9611  002AAC  2441               	addwf	dtoa@i^0,w,c
  9612  002AAE  6ED9               	movwf	fsr2l,c
  9613  002AB0  0E01               	movlw	high _dbuf
  9614  002AB2  2042               	addwfc	(dtoa@i+1)^0,w,c
  9615  002AB4  6EDA               	movwf	fsr2h,c
  9616  002AB6  C039  F001         	movff	dtoa@n,___aomod@dividend
  9617  002ABA  C03A  F002         	movff	dtoa@n+1,___aomod@dividend+1
  9618  002ABE  C03B  F003         	movff	dtoa@n+2,___aomod@dividend+2
  9619  002AC2  C03C  F004         	movff	dtoa@n+3,___aomod@dividend+3
  9620  002AC6  C03D  F005         	movff	dtoa@n+4,___aomod@dividend+4
  9621  002ACA  C03E  F006         	movff	dtoa@n+5,___aomod@dividend+5
  9622  002ACE  C03F  F007         	movff	dtoa@n+6,___aomod@dividend+6
  9623  002AD2  C040  F008         	movff	dtoa@n+7,___aomod@dividend+7
  9624  002AD6  0E0A               	movlw	10
  9625  002AD8  6E09               	movwf	___aomod@divisor^0,c
  9626  002ADA  0E00               	movlw	0
  9627  002ADC  6E0A               	movwf	(___aomod@divisor+1)^0,c
  9628  002ADE  0E00               	movlw	0
  9629  002AE0  6E0B               	movwf	(___aomod@divisor+2)^0,c
  9630  002AE2  0E00               	movlw	0
  9631  002AE4  6E0C               	movwf	(___aomod@divisor+3)^0,c
  9632  002AE6  0E00               	movlw	0
  9633  002AE8  6E0D               	movwf	(___aomod@divisor+4)^0,c
  9634  002AEA  0E00               	movlw	0
  9635  002AEC  6E0E               	movwf	(___aomod@divisor+5)^0,c
  9636  002AEE  0E00               	movlw	0
  9637  002AF0  6E0F               	movwf	(___aomod@divisor+6)^0,c
  9638  002AF2  0E00               	movlw	0
  9639  002AF4  6E10               	movwf	(___aomod@divisor+7)^0,c
  9640  002AF6  ECF4  F01A         	call	___aomod	;wreg free
  9641  002AFA  C001  F029         	movff	?___aomod,??_dtoa
  9642  002AFE  C002  F02A         	movff	?___aomod+1,??_dtoa+1
  9643  002B02  C003  F02B         	movff	?___aomod+2,??_dtoa+2
  9644  002B06  C004  F02C         	movff	?___aomod+3,??_dtoa+3
  9645  002B0A  C005  F02D         	movff	?___aomod+4,??_dtoa+4
  9646  002B0E  C006  F02E         	movff	?___aomod+5,??_dtoa+5
  9647  002B12  C007  F02F         	movff	?___aomod+6,??_dtoa+6
  9648  002B16  C008  F030         	movff	?___aomod+7,??_dtoa+7
  9649  002B1A  C029  F013         	movff	??_dtoa,abs@a
  9650  002B1E  C02B  F014         	movff	??_dtoa+2,abs@a+1
  9651  002B22  ECDC  F023         	call	_abs	;wreg free
  9652  002B26  5013               	movf	?_abs^0,w,c
  9653  002B28  0F30               	addlw	48
  9654  002B2A  6EDF               	movwf	indf2,c
  9655  002B2C                     
  9656                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 315:         --p;
  9657  002B2C  0633               	decf	dtoa@p^0,f,c
  9658  002B2E  A0D8               	btfss	status,0,c
  9659  002B30  0634               	decf	(dtoa@p+1)^0,f,c
  9660  002B32                     
  9661                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 316:         --w;
  9662  002B32  0635               	decf	dtoa@w^0,f,c
  9663  002B34  A0D8               	btfss	status,0,c
  9664  002B36  0636               	decf	(dtoa@w+1)^0,f,c
  9665  002B38                     
  9666                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 317:         n = 
      +                          n / 10;
  9667  002B38  C039  F001         	movff	dtoa@n,___aodiv@dividend
  9668  002B3C  C03A  F002         	movff	dtoa@n+1,___aodiv@dividend+1
  9669  002B40  C03B  F003         	movff	dtoa@n+2,___aodiv@dividend+2
  9670  002B44  C03C  F004         	movff	dtoa@n+3,___aodiv@dividend+3
  9671  002B48  C03D  F005         	movff	dtoa@n+4,___aodiv@dividend+4
  9672  002B4C  C03E  F006         	movff	dtoa@n+5,___aodiv@dividend+5
  9673  002B50  C03F  F007         	movff	dtoa@n+6,___aodiv@dividend+6
  9674  002B54  C040  F008         	movff	dtoa@n+7,___aodiv@dividend+7
  9675  002B58  0E0A               	movlw	10
  9676  002B5A  6E09               	movwf	___aodiv@divisor^0,c
  9677  002B5C  0E00               	movlw	0
  9678  002B5E  6E0A               	movwf	(___aodiv@divisor+1)^0,c
  9679  002B60  0E00               	movlw	0
  9680  002B62  6E0B               	movwf	(___aodiv@divisor+2)^0,c
  9681  002B64  0E00               	movlw	0
  9682  002B66  6E0C               	movwf	(___aodiv@divisor+3)^0,c
  9683  002B68  0E00               	movlw	0
  9684  002B6A  6E0D               	movwf	(___aodiv@divisor+4)^0,c
  9685  002B6C  0E00               	movlw	0
  9686  002B6E  6E0E               	movwf	(___aodiv@divisor+5)^0,c
  9687  002B70  0E00               	movlw	0
  9688  002B72  6E0F               	movwf	(___aodiv@divisor+6)^0,c
  9689  002B74  0E00               	movlw	0
  9690  002B76  6E10               	movwf	(___aodiv@divisor+7)^0,c
  9691  002B78  EC30  F01A         	call	___aodiv	;wreg free
  9692  002B7C  C001  F039         	movff	?___aodiv,dtoa@n
  9693  002B80  C002  F03A         	movff	?___aodiv+1,dtoa@n+1
  9694  002B84  C003  F03B         	movff	?___aodiv+2,dtoa@n+2
  9695  002B88  C004  F03C         	movff	?___aodiv+3,dtoa@n+3
  9696  002B8C  C005  F03D         	movff	?___aodiv+4,dtoa@n+4
  9697  002B90  C006  F03E         	movff	?___aodiv+5,dtoa@n+5
  9698  002B94  C007  F03F         	movff	?___aodiv+6,dtoa@n+6
  9699  002B98  C008  F040         	movff	?___aodiv+7,dtoa@n+7
  9700  002B9C                     l4034:
  9701                           
  9702                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 312:     while (!
      +                          (i < 1) && (n || (0 < p) || ((0 < w) && (flags & (1 << 1))))) {
  9703  002B9C  BE42               	btfsc	(dtoa@i+1)^0,7,c
  9704  002B9E  EFD9  F015         	goto	u4971
  9705  002BA2  5042               	movf	(dtoa@i+1)^0,w,c
  9706  002BA4  E108               	bnz	u4970
  9707  002BA6  0441               	decf	dtoa@i^0,w,c
  9708  002BA8  A0D8               	btfss	status,0,c
  9709  002BAA  EFD9  F015         	goto	u4971
  9710  002BAE  EFDB  F015         	goto	u4970
  9711  002BB2                     u4971:
  9712  002BB2  EF0C  F016         	goto	l4044
  9713  002BB6                     u4970:
  9714  002BB6  5039               	movf	dtoa@n^0,w,c
  9715  002BB8  103A               	iorwf	(dtoa@n+1)^0,w,c
  9716  002BBA  103B               	iorwf	(dtoa@n+2)^0,w,c
  9717  002BBC  103C               	iorwf	(dtoa@n+3)^0,w,c
  9718  002BBE  103D               	iorwf	(dtoa@n+4)^0,w,c
  9719  002BC0  103E               	iorwf	(dtoa@n+5)^0,w,c
  9720  002BC2  103F               	iorwf	(dtoa@n+6)^0,w,c
  9721  002BC4  1040               	iorwf	(dtoa@n+7)^0,w,c
  9722  002BC6  A4D8               	btfss	status,2,c
  9723  002BC8  EFE8  F015         	goto	u4981
  9724  002BCC  EFEA  F015         	goto	u4980
  9725  002BD0                     u4981:
  9726  002BD0  EF52  F015         	goto	l4024
  9727  002BD4                     u4980:
  9728  002BD4  BE34               	btfsc	(dtoa@p+1)^0,7,c
  9729  002BD6  EFF7  F015         	goto	u4990
  9730  002BDA  5034               	movf	(dtoa@p+1)^0,w,c
  9731  002BDC  E106               	bnz	u4991
  9732  002BDE  0433               	decf	dtoa@p^0,w,c
  9733  002BE0  B0D8               	btfsc	status,0,c
  9734  002BE2  EFF5  F015         	goto	u4991
  9735  002BE6  EFF7  F015         	goto	u4990
  9736  002BEA                     u4991:
  9737  002BEA  EF52  F015         	goto	l4024
  9738  002BEE                     u4990:
  9739  002BEE  BE36               	btfsc	(dtoa@w+1)^0,7,c
  9740  002BF0  EF02  F016         	goto	u5001
  9741  002BF4  5036               	movf	(dtoa@w+1)^0,w,c
  9742  002BF6  E108               	bnz	u5000
  9743  002BF8  0435               	decf	dtoa@w^0,w,c
  9744  002BFA  A0D8               	btfss	status,0,c
  9745  002BFC  EF02  F016         	goto	u5001
  9746  002C00  EF04  F016         	goto	u5000
  9747  002C04                     u5001:
  9748  002C04  EF0C  F016         	goto	l4044
  9749  002C08                     u5000:
  9750  002C08  0100               	movlb	0	; () banked
  9751  002C0A  B3D6               	btfsc	_flags& (0+255),1,b
  9752  002C0C  EF0A  F016         	goto	u5011
  9753  002C10  EF0C  F016         	goto	u5010
  9754  002C14                     u5011:
  9755  002C14  EF52  F015         	goto	l4024
  9756  002C18                     u5010:
  9757  002C18                     l4044:
  9758                           
  9759                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 321:     if (s ||
      +                           (flags & (1 << 2))) {
  9760  002C18  5037               	movf	dtoa@s^0,w,c
  9761  002C1A  1038               	iorwf	(dtoa@s+1)^0,w,c
  9762  002C1C  A4D8               	btfss	status,2,c
  9763  002C1E  EF13  F016         	goto	u5021
  9764  002C22  EF15  F016         	goto	u5020
  9765  002C26                     u5021:
  9766  002C26  EF1D  F016         	goto	l4048
  9767  002C2A                     u5020:
  9768  002C2A  0100               	movlb	0	; () banked
  9769  002C2C  A5D6               	btfss	_flags& (0+255),2,b
  9770  002C2E  EF1B  F016         	goto	u5031
  9771  002C32  EF1D  F016         	goto	u5030
  9772  002C36                     u5031:
  9773  002C36  EF3B  F016         	goto	l4058
  9774  002C3A                     u5030:
  9775  002C3A                     l4048:
  9776                           
  9777                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 322:         --i;
  9778  002C3A  0641               	decf	dtoa@i^0,f,c
  9779  002C3C  A0D8               	btfss	status,0,c
  9780  002C3E  0642               	decf	(dtoa@i+1)^0,f,c
  9781  002C40                     
  9782                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 323:         dbuf
      +                          [i] = s ? '-' : '+';
  9783  002C40  5037               	movf	dtoa@s^0,w,c
  9784  002C42  1038               	iorwf	(dtoa@s+1)^0,w,c
  9785  002C44  A4D8               	btfss	status,2,c
  9786  002C46  EF27  F016         	goto	u5041
  9787  002C4A  EF29  F016         	goto	u5040
  9788  002C4E                     u5041:
  9789  002C4E  EF2F  F016         	goto	l4054
  9790  002C52                     u5040:
  9791  002C52  0E00               	movlw	0
  9792  002C54  6E32               	movwf	(_dtoa$1208+1)^0,c
  9793  002C56  0E2B               	movlw	43
  9794  002C58  6E31               	movwf	_dtoa$1208^0,c
  9795  002C5A  EF33  F016         	goto	l4056
  9796  002C5E                     l4054:
  9797  002C5E  0E00               	movlw	0
  9798  002C60  6E32               	movwf	(_dtoa$1208+1)^0,c
  9799  002C62  0E2D               	movlw	45
  9800  002C64  6E31               	movwf	_dtoa$1208^0,c
  9801  002C66                     l4056:
  9802  002C66  0E04               	movlw	low _dbuf
  9803  002C68  2441               	addwf	dtoa@i^0,w,c
  9804  002C6A  6ED9               	movwf	fsr2l,c
  9805  002C6C  0E01               	movlw	high _dbuf
  9806  002C6E  2042               	addwfc	(dtoa@i+1)^0,w,c
  9807  002C70  6EDA               	movwf	fsr2h,c
  9808  002C72  C031  FFDF         	movff	_dtoa$1208,indf2
  9809  002C76                     l4058:
  9810                           
  9811                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 327:     return p
      +                          ad(fp, &dbuf[i], w);
  9812  002C76  C01F  F014         	movff	dtoa@fp,pad@fp
  9813  002C7A  C020  F015         	movff	dtoa@fp+1,pad@fp+1
  9814  002C7E  0E04               	movlw	low _dbuf
  9815  002C80  2441               	addwf	dtoa@i^0,w,c
  9816  002C82  6E16               	movwf	pad@buf^0,c
  9817  002C84  0E01               	movlw	high _dbuf
  9818  002C86  2042               	addwfc	(dtoa@i+1)^0,w,c
  9819  002C88  6E17               	movwf	(pad@buf+1)^0,c
  9820  002C8A  C035  F018         	movff	dtoa@w,pad@p
  9821  002C8E  C036  F019         	movff	dtoa@w+1,pad@p+1
  9822  002C92  ECCE  F01F         	call	_pad	;wreg free
  9823  002C96  C014  F01F         	movff	?_pad,?_dtoa
  9824  002C9A  C015  F020         	movff	?_pad+1,?_dtoa+1
  9825  002C9E  0012               	return		;funcret
  9826  002CA0                     __end_of_dtoa:
  9827                           	callstack 0
  9828                           
  9829 ;; *************** function _pad *****************
  9830 ;; Defined at:
  9831 ;;		line 72 in file "C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c"
  9832 ;; Parameters:    Size  Location     Type
  9833 ;;  fp              2   19[COMRAM] PTR struct _IO_FILE
  9834 ;;		 -> NULL(0), sprintf@f(6), 
  9835 ;;  buf             2   21[COMRAM] PTR unsigned char 
  9836 ;;		 -> dbuf(80), 
  9837 ;;  p               2   23[COMRAM] int 
  9838 ;; Auto vars:     Size  Location     Type
  9839 ;;  w               2   28[COMRAM] int 
  9840 ;;  i               2   26[COMRAM] int 
  9841 ;; Return value:  Size  Location     Type
  9842 ;;                  2   19[COMRAM] int 
  9843 ;; Registers used:
  9844 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
  9845 ;; Tracked objects:
  9846 ;;		On entry : 0/0
  9847 ;;		On exit  : 0/0
  9848 ;;		Unchanged: 0/0
  9849 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  9850 ;;      Params:         6       0       0       0       0       0       0       0       0
  9851 ;;      Locals:         4       0       0       0       0       0       0       0       0
  9852 ;;      Temps:          1       0       0       0       0       0       0       0       0
  9853 ;;      Totals:        11       0       0       0       0       0       0       0       0
  9854 ;;Total ram usage:       11 bytes
  9855 ;; Hardware stack levels used:    1
  9856 ;; Hardware stack levels required when called:    3
  9857 ;; This function calls:
  9858 ;;		_fputc
  9859 ;;		_fputs
  9860 ;;		_strlen
  9861 ;; This function is called by:
  9862 ;;		_dtoa
  9863 ;;		_efgtoa
  9864 ;; This function uses a non-reentrant model
  9865 ;;
  9866                           
  9867                           	psect	text37
  9868  003F9C                     __ptext37:
  9869                           	callstack 0
  9870  003F9C                     _pad:
  9871                           	callstack 22
  9872  003F9C                     
  9873                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 72: static int pa
      +                          d(FILE *fp, char *buf, int p);C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\commo
      +                          n\doprnt.c: 73: {;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 
      +                          74:     int i, w;;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 
      +                          77:     if (flags & (1 << 0)) {
  9874  003F9C  0100               	movlb	0	; () banked
  9875  003F9E  A1D6               	btfss	_flags& (0+255),0,b
  9876  003FA0  EFD4  F01F         	goto	u4541
  9877  003FA4  EFD6  F01F         	goto	u4540
  9878  003FA8                     u4541:
  9879  003FA8  EFE0  F01F         	goto	l3870
  9880  003FAC                     u4540:
  9881  003FAC                     
  9882                           ; BSR set to: 0
  9883                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 78:         fputs
      +                          ((const char *)buf, fp);
  9884  003FAC  C016  F00D         	movff	pad@buf,fputs@s
  9885  003FB0  C017  F00E         	movff	pad@buf+1,fputs@s+1
  9886  003FB4  C014  F00F         	movff	pad@fp,fputs@fp
  9887  003FB8  C015  F010         	movff	pad@fp+1,fputs@fp+1
  9888  003FBC  EC99  F023         	call	_fputs	;wreg free
  9889  003FC0                     l3870:
  9890                           
  9891                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 82:     w = (p < 
      +                          0) ? 0 : p;
  9892  003FC0  BE19               	btfsc	(pad@p+1)^0,7,c
  9893  003FC2  EFE5  F01F         	goto	u4551
  9894  003FC6  EFE7  F01F         	goto	u4550
  9895  003FCA                     u4551:
  9896  003FCA  EFED  F01F         	goto	l3874
  9897  003FCE                     u4550:
  9898  003FCE  C018  F01D         	movff	pad@p,pad@w
  9899  003FD2  C019  F01E         	movff	pad@p+1,pad@w+1
  9900  003FD6  EFF1  F01F         	goto	l899
  9901  003FDA                     l3874:
  9902  003FDA  0E00               	movlw	0
  9903  003FDC  6E1E               	movwf	(pad@w+1)^0,c
  9904  003FDE  0E00               	movlw	0
  9905  003FE0  6E1D               	movwf	pad@w^0,c
  9906  003FE2                     l899:
  9907                           
  9908                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 83:     i = 0;
  9909  003FE2  0E00               	movlw	0
  9910  003FE4  6E1C               	movwf	(pad@i+1)^0,c
  9911  003FE6  0E00               	movlw	0
  9912  003FE8  6E1B               	movwf	pad@i^0,c
  9913                           
  9914                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 84:     while (i 
      +                          < w) {
  9915  003FEA  EF03  F020         	goto	l3880
  9916  003FEE                     l3876:
  9917                           
  9918                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 85:         fputc
      +                          (' ', fp);
  9919  003FEE  0E00               	movlw	0
  9920  003FF0  6E05               	movwf	(fputc@c+1)^0,c
  9921  003FF2  0E20               	movlw	32
  9922  003FF4  6E04               	movwf	fputc@c^0,c
  9923  003FF6  C014  F006         	movff	pad@fp,fputc@fp
  9924  003FFA  C015  F007         	movff	pad@fp+1,fputc@fp+1
  9925  003FFE  EC69  F01F         	call	_fputc	;wreg free
  9926  004002                     
  9927                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 86:         ++i;
  9928  004002  4A1B               	infsnz	pad@i^0,f,c
  9929  004004  2A1C               	incf	(pad@i+1)^0,f,c
  9930  004006                     l3880:
  9931                           
  9932                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 84:     while (i 
      +                          < w) {
  9933  004006  501D               	movf	pad@w^0,w,c
  9934  004008  5C1B               	subwf	pad@i^0,w,c
  9935  00400A  501C               	movf	(pad@i+1)^0,w,c
  9936  00400C  0A80               	xorlw	128
  9937  00400E  6E1A               	movwf	??_pad^0,c
  9938  004010  501E               	movf	(pad@w+1)^0,w,c
  9939  004012  0A80               	xorlw	128
  9940  004014  581A               	subwfb	??_pad^0,w,c
  9941  004016  A0D8               	btfss	status,0,c
  9942  004018  EF10  F020         	goto	u4561
  9943  00401C  EF12  F020         	goto	u4560
  9944  004020                     u4561:
  9945  004020  EFF7  F01F         	goto	l3876
  9946  004024                     u4560:
  9947  004024                     
  9948                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 90:     if (!(fla
      +                          gs & (1 << 0))) {
  9949  004024  0100               	movlb	0	; () banked
  9950  004026  B1D6               	btfsc	_flags& (0+255),0,b
  9951  004028  EF18  F020         	goto	u4571
  9952  00402C  EF1A  F020         	goto	u4570
  9953  004030                     u4571:
  9954  004030  EF24  F020         	goto	l3884
  9955  004034                     u4570:
  9956  004034                     
  9957                           ; BSR set to: 0
  9958                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 91:         fputs
      +                          ((const char *)buf, fp);
  9959  004034  C016  F00D         	movff	pad@buf,fputs@s
  9960  004038  C017  F00E         	movff	pad@buf+1,fputs@s+1
  9961  00403C  C014  F00F         	movff	pad@fp,fputs@fp
  9962  004040  C015  F010         	movff	pad@fp+1,fputs@fp+1
  9963  004044  EC99  F023         	call	_fputs	;wreg free
  9964  004048                     l3884:
  9965                           
  9966                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 94:     return (i
      +                          nt)(strlen(buf) + (size_t)w);
  9967  004048  C016  F001         	movff	pad@buf,strlen@s
  9968  00404C  C017  F002         	movff	pad@buf+1,strlen@s+1
  9969  004050  EC50  F024         	call	_strlen	;wreg free
  9970  004054  501D               	movf	pad@w^0,w,c
  9971  004056  2401               	addwf	?_strlen^0,w,c
  9972  004058  6E14               	movwf	?_pad^0,c
  9973  00405A  501E               	movf	(pad@w+1)^0,w,c
  9974  00405C  2002               	addwfc	(?_strlen+1)^0,w,c
  9975  00405E  6E15               	movwf	(?_pad+1)^0,c
  9976  004060  0012               	return		;funcret
  9977  004062                     __end_of_pad:
  9978                           	callstack 0
  9979                           
  9980 ;; *************** function _strlen *****************
  9981 ;; Defined at:
  9982 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\strlen.c"
  9983 ;; Parameters:    Size  Location     Type
  9984 ;;  s               2    0[COMRAM] PTR const unsigned char 
  9985 ;;		 -> dbuf(80), 
  9986 ;; Auto vars:     Size  Location     Type
  9987 ;;  a               2    2[COMRAM] PTR const unsigned char 
  9988 ;;		 -> dbuf(80), 
  9989 ;; Return value:  Size  Location     Type
  9990 ;;                  2    0[COMRAM] unsigned int 
  9991 ;; Registers used:
  9992 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  9993 ;; Tracked objects:
  9994 ;;		On entry : 0/0
  9995 ;;		On exit  : 0/0
  9996 ;;		Unchanged: 0/0
  9997 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  9998 ;;      Params:         2       0       0       0       0       0       0       0       0
  9999 ;;      Locals:         2       0       0       0       0       0       0       0       0
 10000 ;;      Temps:          0       0       0       0       0       0       0       0       0
 10001 ;;      Totals:         4       0       0       0       0       0       0       0       0
 10002 ;;Total ram usage:        4 bytes
 10003 ;; Hardware stack levels used:    1
 10004 ;; This function calls:
 10005 ;;		Nothing
 10006 ;; This function is called by:
 10007 ;;		_pad
 10008 ;; This function uses a non-reentrant model
 10009 ;;
 10010                           
 10011                           	psect	text38
 10012  0048A0                     __ptext38:
 10013                           	callstack 0
 10014  0048A0                     _strlen:
 10015                           	callstack 24
 10016  0048A0  C001  F003         	movff	strlen@s,strlen@a
 10017  0048A4  C002  F004         	movff	strlen@s+1,strlen@a+1
 10018  0048A8  EF58  F024         	goto	l3326
 10019  0048AC                     l3324:
 10020  0048AC  4A01               	infsnz	strlen@s^0,f,c
 10021  0048AE  2A02               	incf	(strlen@s+1)^0,f,c
 10022  0048B0                     l3326:
 10023  0048B0  C001  FFD9         	movff	strlen@s,fsr2l
 10024  0048B4  C002  FFDA         	movff	strlen@s+1,fsr2h
 10025  0048B8  50DF               	movf	indf2,w,c
 10026  0048BA  A4D8               	btfss	status,2,c
 10027  0048BC  EF62  F024         	goto	u3681
 10028  0048C0  EF64  F024         	goto	u3680
 10029  0048C4                     u3681:
 10030  0048C4  EF56  F024         	goto	l3324
 10031  0048C8                     u3680:
 10032  0048C8  5003               	movf	strlen@a^0,w,c
 10033  0048CA  5C01               	subwf	strlen@s^0,w,c
 10034  0048CC  6E01               	movwf	?_strlen^0,c
 10035  0048CE  5004               	movf	(strlen@a+1)^0,w,c
 10036  0048D0  5802               	subwfb	(strlen@s+1)^0,w,c
 10037  0048D2  6E02               	movwf	(?_strlen+1)^0,c
 10038  0048D4  0012               	return		;funcret
 10039  0048D6                     __end_of_strlen:
 10040                           	callstack 0
 10041                           
 10042 ;; *************** function _fputs *****************
 10043 ;; Defined at:
 10044 ;;		line 8 in file "C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\nf_fputs.c"
 10045 ;; Parameters:    Size  Location     Type
 10046 ;;  s               2   12[COMRAM] PTR const unsigned char 
 10047 ;;		 -> dbuf(80), 
 10048 ;;  fp              2   14[COMRAM] PTR struct _IO_FILE
 10049 ;;		 -> NULL(0), sprintf@f(6), 
 10050 ;; Auto vars:     Size  Location     Type
 10051 ;;  i               2   17[COMRAM] int 
 10052 ;;  c               1   16[COMRAM] unsigned char 
 10053 ;; Return value:  Size  Location     Type
 10054 ;;                  2   12[COMRAM] int 
 10055 ;; Registers used:
 10056 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
 10057 ;; Tracked objects:
 10058 ;;		On entry : 0/0
 10059 ;;		On exit  : 0/0
 10060 ;;		Unchanged: 0/0
 10061 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 10062 ;;      Params:         4       0       0       0       0       0       0       0       0
 10063 ;;      Locals:         3       0       0       0       0       0       0       0       0
 10064 ;;      Temps:          0       0       0       0       0       0       0       0       0
 10065 ;;      Totals:         7       0       0       0       0       0       0       0       0
 10066 ;;Total ram usage:        7 bytes
 10067 ;; Hardware stack levels used:    1
 10068 ;; Hardware stack levels required when called:    2
 10069 ;; This function calls:
 10070 ;;		_fputc
 10071 ;; This function is called by:
 10072 ;;		_pad
 10073 ;; This function uses a non-reentrant model
 10074 ;;
 10075                           
 10076                           	psect	text39
 10077  004732                     __ptext39:
 10078                           	callstack 0
 10079  004732                     _fputs:
 10080                           	callstack 22
 10081  004732  0E00               	movlw	0
 10082  004734  6E13               	movwf	(fputs@i+1)^0,c
 10083  004736  0E00               	movlw	0
 10084  004738  6E12               	movwf	fputs@i^0,c
 10085  00473A  EFAA  F023         	goto	l3320
 10086  00473E                     l3316:
 10087  00473E  C011  F004         	movff	fputs@c,fputc@c
 10088  004742  6A05               	clrf	(fputc@c+1)^0,c
 10089  004744  C00F  F006         	movff	fputs@fp,fputc@fp
 10090  004748  C010  F007         	movff	fputs@fp+1,fputc@fp+1
 10091  00474C  EC69  F01F         	call	_fputc	;wreg free
 10092  004750  4A12               	infsnz	fputs@i^0,f,c
 10093  004752  2A13               	incf	(fputs@i+1)^0,f,c
 10094  004754                     l3320:
 10095  004754  5012               	movf	fputs@i^0,w,c
 10096  004756  240D               	addwf	fputs@s^0,w,c
 10097  004758  6ED9               	movwf	fsr2l,c
 10098  00475A  5013               	movf	(fputs@i+1)^0,w,c
 10099  00475C  200E               	addwfc	(fputs@s+1)^0,w,c
 10100  00475E  6EDA               	movwf	fsr2h,c
 10101  004760  50DF               	movf	indf2,w,c
 10102  004762  6E11               	movwf	fputs@c^0,c
 10103  004764  5011               	movf	fputs@c^0,w,c
 10104  004766  A4D8               	btfss	status,2,c
 10105  004768  EFB8  F023         	goto	u3671
 10106  00476C  EFBA  F023         	goto	u3670
 10107  004770                     u3671:
 10108  004770  EF9F  F023         	goto	l3316
 10109  004774                     u3670:
 10110  004774  0012               	return		;funcret
 10111  004776                     __end_of_fputs:
 10112                           	callstack 0
 10113                           
 10114 ;; *************** function _abs *****************
 10115 ;; Defined at:
 10116 ;;		line 1 in file "C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\abs.c"
 10117 ;; Parameters:    Size  Location     Type
 10118 ;;  a               2   18[COMRAM] int 
 10119 ;; Auto vars:     Size  Location     Type
 10120 ;;		None
 10121 ;; Return value:  Size  Location     Type
 10122 ;;                  2   18[COMRAM] int 
 10123 ;; Registers used:
 10124 ;;		wreg, status,2, status,0
 10125 ;; Tracked objects:
 10126 ;;		On entry : 0/0
 10127 ;;		On exit  : 0/0
 10128 ;;		Unchanged: 0/0
 10129 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 10130 ;;      Params:         2       0       0       0       0       0       0       0       0
 10131 ;;      Locals:         0       0       0       0       0       0       0       0       0
 10132 ;;      Temps:          2       0       0       0       0       0       0       0       0
 10133 ;;      Totals:         4       0       0       0       0       0       0       0       0
 10134 ;;Total ram usage:        4 bytes
 10135 ;; Hardware stack levels used:    1
 10136 ;; This function calls:
 10137 ;;		Nothing
 10138 ;; This function is called by:
 10139 ;;		_dtoa
 10140 ;; This function uses a non-reentrant model
 10141 ;;
 10142                           
 10143                           	psect	text40
 10144  0047B8                     __ptext40:
 10145                           	callstack 0
 10146  0047B8                     _abs:
 10147                           	callstack 25
 10148  0047B8  BE14               	btfsc	(abs@a+1)^0,7,c
 10149  0047BA  EFE9  F023         	goto	u4580
 10150  0047BE  5014               	movf	(abs@a+1)^0,w,c
 10151  0047C0  E106               	bnz	u4581
 10152  0047C2  0413               	decf	abs@a^0,w,c
 10153  0047C4  B0D8               	btfsc	status,0,c
 10154  0047C6  EFE7  F023         	goto	u4581
 10155  0047CA  EFE9  F023         	goto	u4580
 10156  0047CE                     u4581:
 10157  0047CE  EFF7  F023         	goto	l1100
 10158  0047D2                     u4580:
 10159  0047D2  C013  F015         	movff	abs@a,??_abs
 10160  0047D6  C014  F016         	movff	abs@a+1,??_abs+1
 10161  0047DA  1E15               	comf	??_abs^0,f,c
 10162  0047DC  1E16               	comf	(??_abs+1)^0,f,c
 10163  0047DE  4A15               	infsnz	??_abs^0,f,c
 10164  0047E0  2A16               	incf	(??_abs+1)^0,f,c
 10165  0047E2  C015  F013         	movff	??_abs,?_abs
 10166  0047E6  C016  F014         	movff	??_abs+1,?_abs+1
 10167  0047EA  EFFB  F023         	goto	l1103
 10168  0047EE                     l1100:
 10169  0047EE  C013  F013         	movff	abs@a,?_abs
 10170  0047F2  C014  F014         	movff	abs@a+1,?_abs+1
 10171  0047F6                     l1103:
 10172  0047F6  0012               	return		;funcret
 10173  0047F8                     __end_of_abs:
 10174                           	callstack 0
 10175                           
 10176 ;; *************** function ___aomod *****************
 10177 ;; Defined at:
 10178 ;;		line 9 in file "C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\aomod.c"
 10179 ;; Parameters:    Size  Location     Type
 10180 ;;  dividend        8    0[COMRAM] long long 
 10181 ;;  divisor         8    8[COMRAM] long long 
 10182 ;; Auto vars:     Size  Location     Type
 10183 ;;  sign            1   17[COMRAM] unsigned char 
 10184 ;;  counter         1   16[COMRAM] unsigned char 
 10185 ;; Return value:  Size  Location     Type
 10186 ;;                  8    0[COMRAM] long long 
 10187 ;; Registers used:
 10188 ;;		wreg, status,2, status,0
 10189 ;; Tracked objects:
 10190 ;;		On entry : 0/0
 10191 ;;		On exit  : 0/0
 10192 ;;		Unchanged: 0/0
 10193 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 10194 ;;      Params:        16       0       0       0       0       0       0       0       0
 10195 ;;      Locals:         2       0       0       0       0       0       0       0       0
 10196 ;;      Temps:          0       0       0       0       0       0       0       0       0
 10197 ;;      Totals:        18       0       0       0       0       0       0       0       0
 10198 ;;Total ram usage:       18 bytes
 10199 ;; Hardware stack levels used:    1
 10200 ;; This function calls:
 10201 ;;		Nothing
 10202 ;; This function is called by:
 10203 ;;		_dtoa
 10204 ;; This function uses a non-reentrant model
 10205 ;;
 10206                           
 10207                           	psect	text41
 10208  0035E8                     __ptext41:
 10209                           	callstack 0
 10210  0035E8                     ___aomod:
 10211                           	callstack 25
 10212  0035E8  0E00               	movlw	0
 10213  0035EA  6E12               	movwf	___aomod@sign^0,c
 10214  0035EC  BE08               	btfsc	(___aomod@dividend+7)^0,7,c
 10215  0035EE  EFFD  F01A         	goto	u3780
 10216  0035F2  EFFB  F01A         	goto	u3781
 10217  0035F6                     u3781:
 10218  0035F6  EF0F  F01B         	goto	l3394
 10219  0035FA                     u3780:
 10220  0035FA  1E08               	comf	(___aomod@dividend+7)^0,f,c
 10221  0035FC  1E07               	comf	(___aomod@dividend+6)^0,f,c
 10222  0035FE  1E06               	comf	(___aomod@dividend+5)^0,f,c
 10223  003600  1E05               	comf	(___aomod@dividend+4)^0,f,c
 10224  003602  1E04               	comf	(___aomod@dividend+3)^0,f,c
 10225  003604  1E03               	comf	(___aomod@dividend+2)^0,f,c
 10226  003606  1E02               	comf	(___aomod@dividend+1)^0,f,c
 10227  003608  6C01               	negf	___aomod@dividend^0,c
 10228  00360A  0E00               	movlw	0
 10229  00360C  2202               	addwfc	(___aomod@dividend+1)^0,f,c
 10230  00360E  2203               	addwfc	(___aomod@dividend+2)^0,f,c
 10231  003610  2204               	addwfc	(___aomod@dividend+3)^0,f,c
 10232  003612  2205               	addwfc	(___aomod@dividend+4)^0,f,c
 10233  003614  2206               	addwfc	(___aomod@dividend+5)^0,f,c
 10234  003616  2207               	addwfc	(___aomod@dividend+6)^0,f,c
 10235  003618  2208               	addwfc	(___aomod@dividend+7)^0,f,c
 10236  00361A  0E01               	movlw	1
 10237  00361C  6E12               	movwf	___aomod@sign^0,c
 10238  00361E                     l3394:
 10239  00361E  BE10               	btfsc	(___aomod@divisor+7)^0,7,c
 10240  003620  EF16  F01B         	goto	u3790
 10241  003624  EF14  F01B         	goto	u3791
 10242  003628                     u3791:
 10243  003628  EF26  F01B         	goto	l3398
 10244  00362C                     u3790:
 10245  00362C  1E10               	comf	(___aomod@divisor+7)^0,f,c
 10246  00362E  1E0F               	comf	(___aomod@divisor+6)^0,f,c
 10247  003630  1E0E               	comf	(___aomod@divisor+5)^0,f,c
 10248  003632  1E0D               	comf	(___aomod@divisor+4)^0,f,c
 10249  003634  1E0C               	comf	(___aomod@divisor+3)^0,f,c
 10250  003636  1E0B               	comf	(___aomod@divisor+2)^0,f,c
 10251  003638  1E0A               	comf	(___aomod@divisor+1)^0,f,c
 10252  00363A  6C09               	negf	___aomod@divisor^0,c
 10253  00363C  0E00               	movlw	0
 10254  00363E  220A               	addwfc	(___aomod@divisor+1)^0,f,c
 10255  003640  220B               	addwfc	(___aomod@divisor+2)^0,f,c
 10256  003642  220C               	addwfc	(___aomod@divisor+3)^0,f,c
 10257  003644  220D               	addwfc	(___aomod@divisor+4)^0,f,c
 10258  003646  220E               	addwfc	(___aomod@divisor+5)^0,f,c
 10259  003648  220F               	addwfc	(___aomod@divisor+6)^0,f,c
 10260  00364A  2210               	addwfc	(___aomod@divisor+7)^0,f,c
 10261  00364C                     l3398:
 10262  00364C  5009               	movf	___aomod@divisor^0,w,c
 10263  00364E  100A               	iorwf	(___aomod@divisor+1)^0,w,c
 10264  003650  100B               	iorwf	(___aomod@divisor+2)^0,w,c
 10265  003652  100C               	iorwf	(___aomod@divisor+3)^0,w,c
 10266  003654  100D               	iorwf	(___aomod@divisor+4)^0,w,c
 10267  003656  100E               	iorwf	(___aomod@divisor+5)^0,w,c
 10268  003658  100F               	iorwf	(___aomod@divisor+6)^0,w,c
 10269  00365A  1010               	iorwf	(___aomod@divisor+7)^0,w,c
 10270  00365C  B4D8               	btfsc	status,2,c
 10271  00365E  EF33  F01B         	goto	u3801
 10272  003662  EF35  F01B         	goto	u3800
 10273  003666                     u3801:
 10274  003666  EF7D  F01B         	goto	l3414
 10275  00366A                     u3800:
 10276  00366A  0E01               	movlw	1
 10277  00366C  6E11               	movwf	___aomod@counter^0,c
 10278  00366E  EF43  F01B         	goto	l3404
 10279  003672                     l3402:
 10280  003672  90D8               	bcf	status,0,c
 10281  003674  3609               	rlcf	___aomod@divisor^0,f,c
 10282  003676  360A               	rlcf	(___aomod@divisor+1)^0,f,c
 10283  003678  360B               	rlcf	(___aomod@divisor+2)^0,f,c
 10284  00367A  360C               	rlcf	(___aomod@divisor+3)^0,f,c
 10285  00367C  360D               	rlcf	(___aomod@divisor+4)^0,f,c
 10286  00367E  360E               	rlcf	(___aomod@divisor+5)^0,f,c
 10287  003680  360F               	rlcf	(___aomod@divisor+6)^0,f,c
 10288  003682  3610               	rlcf	(___aomod@divisor+7)^0,f,c
 10289  003684  2A11               	incf	___aomod@counter^0,f,c
 10290  003686                     l3404:
 10291  003686  AE10               	btfss	(___aomod@divisor+7)^0,7,c
 10292  003688  EF48  F01B         	goto	u3811
 10293  00368C  EF4A  F01B         	goto	u3810
 10294  003690                     u3811:
 10295  003690  EF39  F01B         	goto	l3402
 10296  003694                     u3810:
 10297  003694                     l3406:
 10298  003694  5009               	movf	___aomod@divisor^0,w,c
 10299  003696  5C01               	subwf	___aomod@dividend^0,w,c
 10300  003698  500A               	movf	(___aomod@divisor+1)^0,w,c
 10301  00369A  5802               	subwfb	(___aomod@dividend+1)^0,w,c
 10302  00369C  500B               	movf	(___aomod@divisor+2)^0,w,c
 10303  00369E  5803               	subwfb	(___aomod@dividend+2)^0,w,c
 10304  0036A0  500C               	movf	(___aomod@divisor+3)^0,w,c
 10305  0036A2  5804               	subwfb	(___aomod@dividend+3)^0,w,c
 10306  0036A4  500D               	movf	(___aomod@divisor+4)^0,w,c
 10307  0036A6  5805               	subwfb	(___aomod@dividend+4)^0,w,c
 10308  0036A8  500E               	movf	(___aomod@divisor+5)^0,w,c
 10309  0036AA  5806               	subwfb	(___aomod@dividend+5)^0,w,c
 10310  0036AC  500F               	movf	(___aomod@divisor+6)^0,w,c
 10311  0036AE  5807               	subwfb	(___aomod@dividend+6)^0,w,c
 10312  0036B0  5010               	movf	(___aomod@divisor+7)^0,w,c
 10313  0036B2  5808               	subwfb	(___aomod@dividend+7)^0,w,c
 10314  0036B4  A0D8               	btfss	status,0,c
 10315  0036B6  EF5F  F01B         	goto	u3821
 10316  0036BA  EF61  F01B         	goto	u3820
 10317  0036BE                     u3821:
 10318  0036BE  EF71  F01B         	goto	l3410
 10319  0036C2                     u3820:
 10320  0036C2  5009               	movf	___aomod@divisor^0,w,c
 10321  0036C4  5E01               	subwf	___aomod@dividend^0,f,c
 10322  0036C6  500A               	movf	(___aomod@divisor+1)^0,w,c
 10323  0036C8  5A02               	subwfb	(___aomod@dividend+1)^0,f,c
 10324  0036CA  500B               	movf	(___aomod@divisor+2)^0,w,c
 10325  0036CC  5A03               	subwfb	(___aomod@dividend+2)^0,f,c
 10326  0036CE  500C               	movf	(___aomod@divisor+3)^0,w,c
 10327  0036D0  5A04               	subwfb	(___aomod@dividend+3)^0,f,c
 10328  0036D2  500D               	movf	(___aomod@divisor+4)^0,w,c
 10329  0036D4  5A05               	subwfb	(___aomod@dividend+4)^0,f,c
 10330  0036D6  500E               	movf	(___aomod@divisor+5)^0,w,c
 10331  0036D8  5A06               	subwfb	(___aomod@dividend+5)^0,f,c
 10332  0036DA  500F               	movf	(___aomod@divisor+6)^0,w,c
 10333  0036DC  5A07               	subwfb	(___aomod@dividend+6)^0,f,c
 10334  0036DE  5010               	movf	(___aomod@divisor+7)^0,w,c
 10335  0036E0  5A08               	subwfb	(___aomod@dividend+7)^0,f,c
 10336  0036E2                     l3410:
 10337  0036E2  90D8               	bcf	status,0,c
 10338  0036E4  3210               	rrcf	(___aomod@divisor+7)^0,f,c
 10339  0036E6  320F               	rrcf	(___aomod@divisor+6)^0,f,c
 10340  0036E8  320E               	rrcf	(___aomod@divisor+5)^0,f,c
 10341  0036EA  320D               	rrcf	(___aomod@divisor+4)^0,f,c
 10342  0036EC  320C               	rrcf	(___aomod@divisor+3)^0,f,c
 10343  0036EE  320B               	rrcf	(___aomod@divisor+2)^0,f,c
 10344  0036F0  320A               	rrcf	(___aomod@divisor+1)^0,f,c
 10345  0036F2  3209               	rrcf	___aomod@divisor^0,f,c
 10346  0036F4  2E11               	decfsz	___aomod@counter^0,f,c
 10347  0036F6  EF4A  F01B         	goto	l3406
 10348  0036FA                     l3414:
 10349  0036FA  5012               	movf	___aomod@sign^0,w,c
 10350  0036FC  B4D8               	btfsc	status,2,c
 10351  0036FE  EF83  F01B         	goto	u3831
 10352  003702  EF85  F01B         	goto	u3830
 10353  003706                     u3831:
 10354  003706  EF95  F01B         	goto	l3418
 10355  00370A                     u3830:
 10356  00370A  1E08               	comf	(___aomod@dividend+7)^0,f,c
 10357  00370C  1E07               	comf	(___aomod@dividend+6)^0,f,c
 10358  00370E  1E06               	comf	(___aomod@dividend+5)^0,f,c
 10359  003710  1E05               	comf	(___aomod@dividend+4)^0,f,c
 10360  003712  1E04               	comf	(___aomod@dividend+3)^0,f,c
 10361  003714  1E03               	comf	(___aomod@dividend+2)^0,f,c
 10362  003716  1E02               	comf	(___aomod@dividend+1)^0,f,c
 10363  003718  6C01               	negf	___aomod@dividend^0,c
 10364  00371A  0E00               	movlw	0
 10365  00371C  2202               	addwfc	(___aomod@dividend+1)^0,f,c
 10366  00371E  2203               	addwfc	(___aomod@dividend+2)^0,f,c
 10367  003720  2204               	addwfc	(___aomod@dividend+3)^0,f,c
 10368  003722  2205               	addwfc	(___aomod@dividend+4)^0,f,c
 10369  003724  2206               	addwfc	(___aomod@dividend+5)^0,f,c
 10370  003726  2207               	addwfc	(___aomod@dividend+6)^0,f,c
 10371  003728  2208               	addwfc	(___aomod@dividend+7)^0,f,c
 10372  00372A                     l3418:
 10373  00372A  C001  F001         	movff	___aomod@dividend,?___aomod
 10374  00372E  C002  F002         	movff	___aomod@dividend+1,?___aomod+1
 10375  003732  C003  F003         	movff	___aomod@dividend+2,?___aomod+2
 10376  003736  C004  F004         	movff	___aomod@dividend+3,?___aomod+3
 10377  00373A  C005  F005         	movff	___aomod@dividend+4,?___aomod+4
 10378  00373E  C006  F006         	movff	___aomod@dividend+5,?___aomod+5
 10379  003742  C007  F007         	movff	___aomod@dividend+6,?___aomod+6
 10380  003746  C008  F008         	movff	___aomod@dividend+7,?___aomod+7
 10381  00374A  0012               	return		;funcret
 10382  00374C                     __end_of___aomod:
 10383                           	callstack 0
 10384                           
 10385 ;; *************** function ___aodiv *****************
 10386 ;; Defined at:
 10387 ;;		line 9 in file "C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\aodiv.c"
 10388 ;; Parameters:    Size  Location     Type
 10389 ;;  dividend        8    0[COMRAM] long long 
 10390 ;;  divisor         8    8[COMRAM] long long 
 10391 ;; Auto vars:     Size  Location     Type
 10392 ;;  quotient        8   18[COMRAM] long long 
 10393 ;;  sign            1   17[COMRAM] unsigned char 
 10394 ;;  counter         1   16[COMRAM] unsigned char 
 10395 ;; Return value:  Size  Location     Type
 10396 ;;                  8    0[COMRAM] long long 
 10397 ;; Registers used:
 10398 ;;		wreg, fsr2l, fsr2h, status,2, status,0
 10399 ;; Tracked objects:
 10400 ;;		On entry : 0/0
 10401 ;;		On exit  : 0/0
 10402 ;;		Unchanged: 0/0
 10403 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 10404 ;;      Params:        16       0       0       0       0       0       0       0       0
 10405 ;;      Locals:        10       0       0       0       0       0       0       0       0
 10406 ;;      Temps:          0       0       0       0       0       0       0       0       0
 10407 ;;      Totals:        26       0       0       0       0       0       0       0       0
 10408 ;;Total ram usage:       26 bytes
 10409 ;; Hardware stack levels used:    1
 10410 ;; This function calls:
 10411 ;;		Nothing
 10412 ;; This function is called by:
 10413 ;;		_dtoa
 10414 ;; This function uses a non-reentrant model
 10415 ;;
 10416                           
 10417                           	psect	text42
 10418  003460                     __ptext42:
 10419                           	callstack 0
 10420  003460                     ___aodiv:
 10421                           	callstack 25
 10422  003460  0E00               	movlw	0
 10423  003462  6E12               	movwf	___aodiv@sign^0,c
 10424  003464  BE10               	btfsc	(___aodiv@divisor+7)^0,7,c
 10425  003466  EF39  F01A         	goto	u3710
 10426  00346A  EF37  F01A         	goto	u3711
 10427  00346E                     u3711:
 10428  00346E  EF4B  F01A         	goto	l3350
 10429  003472                     u3710:
 10430  003472  1E10               	comf	(___aodiv@divisor+7)^0,f,c
 10431  003474  1E0F               	comf	(___aodiv@divisor+6)^0,f,c
 10432  003476  1E0E               	comf	(___aodiv@divisor+5)^0,f,c
 10433  003478  1E0D               	comf	(___aodiv@divisor+4)^0,f,c
 10434  00347A  1E0C               	comf	(___aodiv@divisor+3)^0,f,c
 10435  00347C  1E0B               	comf	(___aodiv@divisor+2)^0,f,c
 10436  00347E  1E0A               	comf	(___aodiv@divisor+1)^0,f,c
 10437  003480  6C09               	negf	___aodiv@divisor^0,c
 10438  003482  0E00               	movlw	0
 10439  003484  220A               	addwfc	(___aodiv@divisor+1)^0,f,c
 10440  003486  220B               	addwfc	(___aodiv@divisor+2)^0,f,c
 10441  003488  220C               	addwfc	(___aodiv@divisor+3)^0,f,c
 10442  00348A  220D               	addwfc	(___aodiv@divisor+4)^0,f,c
 10443  00348C  220E               	addwfc	(___aodiv@divisor+5)^0,f,c
 10444  00348E  220F               	addwfc	(___aodiv@divisor+6)^0,f,c
 10445  003490  2210               	addwfc	(___aodiv@divisor+7)^0,f,c
 10446  003492  0E01               	movlw	1
 10447  003494  6E12               	movwf	___aodiv@sign^0,c
 10448  003496                     l3350:
 10449  003496  BE08               	btfsc	(___aodiv@dividend+7)^0,7,c
 10450  003498  EF52  F01A         	goto	u3720
 10451  00349C  EF50  F01A         	goto	u3721
 10452  0034A0                     u3721:
 10453  0034A0  EF64  F01A         	goto	l3356
 10454  0034A4                     u3720:
 10455  0034A4  1E08               	comf	(___aodiv@dividend+7)^0,f,c
 10456  0034A6  1E07               	comf	(___aodiv@dividend+6)^0,f,c
 10457  0034A8  1E06               	comf	(___aodiv@dividend+5)^0,f,c
 10458  0034AA  1E05               	comf	(___aodiv@dividend+4)^0,f,c
 10459  0034AC  1E04               	comf	(___aodiv@dividend+3)^0,f,c
 10460  0034AE  1E03               	comf	(___aodiv@dividend+2)^0,f,c
 10461  0034B0  1E02               	comf	(___aodiv@dividend+1)^0,f,c
 10462  0034B2  6C01               	negf	___aodiv@dividend^0,c
 10463  0034B4  0E00               	movlw	0
 10464  0034B6  2202               	addwfc	(___aodiv@dividend+1)^0,f,c
 10465  0034B8  2203               	addwfc	(___aodiv@dividend+2)^0,f,c
 10466  0034BA  2204               	addwfc	(___aodiv@dividend+3)^0,f,c
 10467  0034BC  2205               	addwfc	(___aodiv@dividend+4)^0,f,c
 10468  0034BE  2206               	addwfc	(___aodiv@dividend+5)^0,f,c
 10469  0034C0  2207               	addwfc	(___aodiv@dividend+6)^0,f,c
 10470  0034C2  2208               	addwfc	(___aodiv@dividend+7)^0,f,c
 10471  0034C4  0E01               	movlw	1
 10472  0034C6  1A12               	xorwf	___aodiv@sign^0,f,c
 10473  0034C8                     l3356:
 10474  0034C8  EE20  F013         	lfsr	2,___aodiv@quotient
 10475  0034CC  0E07               	movlw	7
 10476  0034CE                     u3731:
 10477  0034CE  6ADE               	clrf	postinc2,c
 10478  0034D0  06E8               	decf	wreg,f,c
 10479  0034D2  E2FD               	bc	u3731
 10480  0034D4  5009               	movf	___aodiv@divisor^0,w,c
 10481  0034D6  100A               	iorwf	(___aodiv@divisor+1)^0,w,c
 10482  0034D8  100B               	iorwf	(___aodiv@divisor+2)^0,w,c
 10483  0034DA  100C               	iorwf	(___aodiv@divisor+3)^0,w,c
 10484  0034DC  100D               	iorwf	(___aodiv@divisor+4)^0,w,c
 10485  0034DE  100E               	iorwf	(___aodiv@divisor+5)^0,w,c
 10486  0034E0  100F               	iorwf	(___aodiv@divisor+6)^0,w,c
 10487  0034E2  1010               	iorwf	(___aodiv@divisor+7)^0,w,c
 10488  0034E4  B4D8               	btfsc	status,2,c
 10489  0034E6  EF77  F01A         	goto	u3741
 10490  0034EA  EF79  F01A         	goto	u3740
 10491  0034EE                     u3741:
 10492  0034EE  EFCB  F01A         	goto	l3378
 10493  0034F2                     u3740:
 10494  0034F2  0E01               	movlw	1
 10495  0034F4  6E11               	movwf	___aodiv@counter^0,c
 10496  0034F6  EF87  F01A         	goto	l3364
 10497  0034FA                     l3362:
 10498  0034FA  90D8               	bcf	status,0,c
 10499  0034FC  3609               	rlcf	___aodiv@divisor^0,f,c
 10500  0034FE  360A               	rlcf	(___aodiv@divisor+1)^0,f,c
 10501  003500  360B               	rlcf	(___aodiv@divisor+2)^0,f,c
 10502  003502  360C               	rlcf	(___aodiv@divisor+3)^0,f,c
 10503  003504  360D               	rlcf	(___aodiv@divisor+4)^0,f,c
 10504  003506  360E               	rlcf	(___aodiv@divisor+5)^0,f,c
 10505  003508  360F               	rlcf	(___aodiv@divisor+6)^0,f,c
 10506  00350A  3610               	rlcf	(___aodiv@divisor+7)^0,f,c
 10507  00350C  2A11               	incf	___aodiv@counter^0,f,c
 10508  00350E                     l3364:
 10509  00350E  AE10               	btfss	(___aodiv@divisor+7)^0,7,c
 10510  003510  EF8C  F01A         	goto	u3751
 10511  003514  EF8E  F01A         	goto	u3750
 10512  003518                     u3751:
 10513  003518  EF7D  F01A         	goto	l3362
 10514  00351C                     u3750:
 10515  00351C                     l3366:
 10516  00351C  90D8               	bcf	status,0,c
 10517  00351E  3613               	rlcf	___aodiv@quotient^0,f,c
 10518  003520  3614               	rlcf	(___aodiv@quotient+1)^0,f,c
 10519  003522  3615               	rlcf	(___aodiv@quotient+2)^0,f,c
 10520  003524  3616               	rlcf	(___aodiv@quotient+3)^0,f,c
 10521  003526  3617               	rlcf	(___aodiv@quotient+4)^0,f,c
 10522  003528  3618               	rlcf	(___aodiv@quotient+5)^0,f,c
 10523  00352A  3619               	rlcf	(___aodiv@quotient+6)^0,f,c
 10524  00352C  361A               	rlcf	(___aodiv@quotient+7)^0,f,c
 10525  00352E  5009               	movf	___aodiv@divisor^0,w,c
 10526  003530  5C01               	subwf	___aodiv@dividend^0,w,c
 10527  003532  500A               	movf	(___aodiv@divisor+1)^0,w,c
 10528  003534  5802               	subwfb	(___aodiv@dividend+1)^0,w,c
 10529  003536  500B               	movf	(___aodiv@divisor+2)^0,w,c
 10530  003538  5803               	subwfb	(___aodiv@dividend+2)^0,w,c
 10531  00353A  500C               	movf	(___aodiv@divisor+3)^0,w,c
 10532  00353C  5804               	subwfb	(___aodiv@dividend+3)^0,w,c
 10533  00353E  500D               	movf	(___aodiv@divisor+4)^0,w,c
 10534  003540  5805               	subwfb	(___aodiv@dividend+4)^0,w,c
 10535  003542  500E               	movf	(___aodiv@divisor+5)^0,w,c
 10536  003544  5806               	subwfb	(___aodiv@dividend+5)^0,w,c
 10537  003546  500F               	movf	(___aodiv@divisor+6)^0,w,c
 10538  003548  5807               	subwfb	(___aodiv@dividend+6)^0,w,c
 10539  00354A  5010               	movf	(___aodiv@divisor+7)^0,w,c
 10540  00354C  5808               	subwfb	(___aodiv@dividend+7)^0,w,c
 10541  00354E  A0D8               	btfss	status,0,c
 10542  003550  EFAC  F01A         	goto	u3761
 10543  003554  EFAE  F01A         	goto	u3760
 10544  003558                     u3761:
 10545  003558  EFBF  F01A         	goto	l3374
 10546  00355C                     u3760:
 10547  00355C  5009               	movf	___aodiv@divisor^0,w,c
 10548  00355E  5E01               	subwf	___aodiv@dividend^0,f,c
 10549  003560  500A               	movf	(___aodiv@divisor+1)^0,w,c
 10550  003562  5A02               	subwfb	(___aodiv@dividend+1)^0,f,c
 10551  003564  500B               	movf	(___aodiv@divisor+2)^0,w,c
 10552  003566  5A03               	subwfb	(___aodiv@dividend+2)^0,f,c
 10553  003568  500C               	movf	(___aodiv@divisor+3)^0,w,c
 10554  00356A  5A04               	subwfb	(___aodiv@dividend+3)^0,f,c
 10555  00356C  500D               	movf	(___aodiv@divisor+4)^0,w,c
 10556  00356E  5A05               	subwfb	(___aodiv@dividend+4)^0,f,c
 10557  003570  500E               	movf	(___aodiv@divisor+5)^0,w,c
 10558  003572  5A06               	subwfb	(___aodiv@dividend+5)^0,f,c
 10559  003574  500F               	movf	(___aodiv@divisor+6)^0,w,c
 10560  003576  5A07               	subwfb	(___aodiv@dividend+6)^0,f,c
 10561  003578  5010               	movf	(___aodiv@divisor+7)^0,w,c
 10562  00357A  5A08               	subwfb	(___aodiv@dividend+7)^0,f,c
 10563  00357C  8013               	bsf	___aodiv@quotient^0,0,c
 10564  00357E                     l3374:
 10565  00357E  90D8               	bcf	status,0,c
 10566  003580  3210               	rrcf	(___aodiv@divisor+7)^0,f,c
 10567  003582  320F               	rrcf	(___aodiv@divisor+6)^0,f,c
 10568  003584  320E               	rrcf	(___aodiv@divisor+5)^0,f,c
 10569  003586  320D               	rrcf	(___aodiv@divisor+4)^0,f,c
 10570  003588  320C               	rrcf	(___aodiv@divisor+3)^0,f,c
 10571  00358A  320B               	rrcf	(___aodiv@divisor+2)^0,f,c
 10572  00358C  320A               	rrcf	(___aodiv@divisor+1)^0,f,c
 10573  00358E  3209               	rrcf	___aodiv@divisor^0,f,c
 10574  003590  2E11               	decfsz	___aodiv@counter^0,f,c
 10575  003592  EF8E  F01A         	goto	l3366
 10576  003596                     l3378:
 10577  003596  5012               	movf	___aodiv@sign^0,w,c
 10578  003598  B4D8               	btfsc	status,2,c
 10579  00359A  EFD1  F01A         	goto	u3771
 10580  00359E  EFD3  F01A         	goto	u3770
 10581  0035A2                     u3771:
 10582  0035A2  EFE3  F01A         	goto	l3382
 10583  0035A6                     u3770:
 10584  0035A6  1E1A               	comf	(___aodiv@quotient+7)^0,f,c
 10585  0035A8  1E19               	comf	(___aodiv@quotient+6)^0,f,c
 10586  0035AA  1E18               	comf	(___aodiv@quotient+5)^0,f,c
 10587  0035AC  1E17               	comf	(___aodiv@quotient+4)^0,f,c
 10588  0035AE  1E16               	comf	(___aodiv@quotient+3)^0,f,c
 10589  0035B0  1E15               	comf	(___aodiv@quotient+2)^0,f,c
 10590  0035B2  1E14               	comf	(___aodiv@quotient+1)^0,f,c
 10591  0035B4  6C13               	negf	___aodiv@quotient^0,c
 10592  0035B6  0E00               	movlw	0
 10593  0035B8  2214               	addwfc	(___aodiv@quotient+1)^0,f,c
 10594  0035BA  2215               	addwfc	(___aodiv@quotient+2)^0,f,c
 10595  0035BC  2216               	addwfc	(___aodiv@quotient+3)^0,f,c
 10596  0035BE  2217               	addwfc	(___aodiv@quotient+4)^0,f,c
 10597  0035C0  2218               	addwfc	(___aodiv@quotient+5)^0,f,c
 10598  0035C2  2219               	addwfc	(___aodiv@quotient+6)^0,f,c
 10599  0035C4  221A               	addwfc	(___aodiv@quotient+7)^0,f,c
 10600  0035C6                     l3382:
 10601  0035C6  C013  F001         	movff	___aodiv@quotient,?___aodiv
 10602  0035CA  C014  F002         	movff	___aodiv@quotient+1,?___aodiv+1
 10603  0035CE  C015  F003         	movff	___aodiv@quotient+2,?___aodiv+2
 10604  0035D2  C016  F004         	movff	___aodiv@quotient+3,?___aodiv+3
 10605  0035D6  C017  F005         	movff	___aodiv@quotient+4,?___aodiv+4
 10606  0035DA  C018  F006         	movff	___aodiv@quotient+5,?___aodiv+5
 10607  0035DE  C019  F007         	movff	___aodiv@quotient+6,?___aodiv+6
 10608  0035E2  C01A  F008         	movff	___aodiv@quotient+7,?___aodiv+7
 10609  0035E6  0012               	return		;funcret
 10610  0035E8                     __end_of___aodiv:
 10611                           	callstack 0
 10612                           
 10613 ;; *************** function _ctoa *****************
 10614 ;; Defined at:
 10615 ;;		line 259 in file "C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c"
 10616 ;; Parameters:    Size  Location     Type
 10617 ;;  fp              2   12[COMRAM] PTR struct _IO_FILE
 10618 ;;		 -> NULL(0), sprintf@f(6), 
 10619 ;;  c               1   14[COMRAM] unsigned char 
 10620 ;; Auto vars:     Size  Location     Type
 10621 ;;  w               2   18[COMRAM] int 
 10622 ;;  l               2   16[COMRAM] int 
 10623 ;; Return value:  Size  Location     Type
 10624 ;;                  2   12[COMRAM] int 
 10625 ;; Registers used:
 10626 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
 10627 ;; Tracked objects:
 10628 ;;		On entry : 0/0
 10629 ;;		On exit  : 0/0
 10630 ;;		Unchanged: 0/0
 10631 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 10632 ;;      Params:         3       0       0       0       0       0       0       0       0
 10633 ;;      Locals:         4       0       0       0       0       0       0       0       0
 10634 ;;      Temps:          1       0       0       0       0       0       0       0       0
 10635 ;;      Totals:         8       0       0       0       0       0       0       0       0
 10636 ;;Total ram usage:        8 bytes
 10637 ;; Hardware stack levels used:    1
 10638 ;; Hardware stack levels required when called:    2
 10639 ;; This function calls:
 10640 ;;		_fputc
 10641 ;; This function is called by:
 10642 ;;		_vfpfcnvrt
 10643 ;; This function uses a non-reentrant model
 10644 ;;
 10645                           
 10646                           	psect	text43
 10647  003D24                     __ptext43:
 10648                           	callstack 0
 10649  003D24                     _ctoa:
 10650                           	callstack 24
 10651  003D24                     
 10652                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 259: static int c
      +                          toa(FILE *fp, char c);C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt
      +                          .c: 260: {;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 261:   
      +                            int l, w;;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 264:  
      +                             w = width ? width - 1 : width;
 10653  003D24  0100               	movlb	0	; () banked
 10654  003D26  51D2               	movf	_width& (0+255),w,b
 10655  003D28  11D3               	iorwf	(_width+1)& (0+255),w,b
 10656  003D2A  A4D8               	btfss	status,2,c
 10657  003D2C  EF9A  F01E         	goto	u4851
 10658  003D30  EF9C  F01E         	goto	u4850
 10659  003D34                     u4851:
 10660  003D34  EFA2  F01E         	goto	l3976
 10661  003D38                     u4850:
 10662  003D38                     
 10663                           ; BSR set to: 0
 10664  003D38  C0D2  F013         	movff	_width,ctoa@w
 10665  003D3C  C0D3  F014         	movff	_width+1,ctoa@w+1
 10666  003D40  EFA8  F01E         	goto	l3978
 10667  003D44                     l3976:
 10668                           
 10669                           ; BSR set to: 0
 10670  003D44  0EFF               	movlw	255
 10671  003D46  25D2               	addwf	_width& (0+255),w,b
 10672  003D48  6E13               	movwf	ctoa@w^0,c
 10673  003D4A  0EFF               	movlw	255
 10674  003D4C  21D3               	addwfc	(_width+1)& (0+255),w,b
 10675  003D4E  6E14               	movwf	(ctoa@w+1)^0,c
 10676  003D50                     l3978:
 10677                           
 10678                           ; BSR set to: 0
 10679                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 267:     if (flag
      +                          s & (1 << 0)) {
 10680  003D50  A1D6               	btfss	_flags& (0+255),0,b
 10681  003D52  EFAD  F01E         	goto	u4861
 10682  003D56  EFAF  F01E         	goto	u4860
 10683  003D5A                     u4861:
 10684  003D5A  EFB8  F01E         	goto	l3982
 10685  003D5E                     u4860:
 10686  003D5E                     
 10687                           ; BSR set to: 0
 10688                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 268:         fput
      +                          c(c, fp);
 10689  003D5E  C00F  F004         	movff	ctoa@c,fputc@c
 10690  003D62  6A05               	clrf	(fputc@c+1)^0,c
 10691  003D64  C00D  F006         	movff	ctoa@fp,fputc@fp
 10692  003D68  C00E  F007         	movff	ctoa@fp+1,fputc@fp+1
 10693  003D6C  EC69  F01F         	call	_fputc	;wreg free
 10694  003D70                     l3982:
 10695                           
 10696                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 271:     w = (w <
      +                           0) ? 0 : w;
 10697  003D70  BE14               	btfsc	(ctoa@w+1)^0,7,c
 10698  003D72  EFBD  F01E         	goto	u4871
 10699  003D76  EFBF  F01E         	goto	u4870
 10700  003D7A                     u4871:
 10701  003D7A  EFC1  F01E         	goto	l3986
 10702  003D7E                     u4870:
 10703  003D7E  EFC5  F01E         	goto	l915
 10704  003D82                     l3986:
 10705  003D82  0E00               	movlw	0
 10706  003D84  6E14               	movwf	(ctoa@w+1)^0,c
 10707  003D86  0E00               	movlw	0
 10708  003D88  6E13               	movwf	ctoa@w^0,c
 10709  003D8A                     l915:
 10710                           
 10711                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 272:     l = 0;
 10712  003D8A  0E00               	movlw	0
 10713  003D8C  6E12               	movwf	(ctoa@l+1)^0,c
 10714  003D8E  0E00               	movlw	0
 10715  003D90  6E11               	movwf	ctoa@l^0,c
 10716                           
 10717                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 273:     while (l
      +                           < w) {
 10718  003D92  EFD7  F01E         	goto	l3992
 10719  003D96                     l3988:
 10720                           
 10721                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 274:         fput
      +                          c(' ', fp);
 10722  003D96  0E00               	movlw	0
 10723  003D98  6E05               	movwf	(fputc@c+1)^0,c
 10724  003D9A  0E20               	movlw	32
 10725  003D9C  6E04               	movwf	fputc@c^0,c
 10726  003D9E  C00D  F006         	movff	ctoa@fp,fputc@fp
 10727  003DA2  C00E  F007         	movff	ctoa@fp+1,fputc@fp+1
 10728  003DA6  EC69  F01F         	call	_fputc	;wreg free
 10729  003DAA                     
 10730                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 275:         ++l;
 10731  003DAA  4A11               	infsnz	ctoa@l^0,f,c
 10732  003DAC  2A12               	incf	(ctoa@l+1)^0,f,c
 10733  003DAE                     l3992:
 10734                           
 10735                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 273:     while (l
      +                           < w) {
 10736  003DAE  5013               	movf	ctoa@w^0,w,c
 10737  003DB0  5C11               	subwf	ctoa@l^0,w,c
 10738  003DB2  5012               	movf	(ctoa@l+1)^0,w,c
 10739  003DB4  0A80               	xorlw	128
 10740  003DB6  6E10               	movwf	??_ctoa^0,c
 10741  003DB8  5014               	movf	(ctoa@w+1)^0,w,c
 10742  003DBA  0A80               	xorlw	128
 10743  003DBC  5810               	subwfb	??_ctoa^0,w,c
 10744  003DBE  A0D8               	btfss	status,0,c
 10745  003DC0  EFE4  F01E         	goto	u4881
 10746  003DC4  EFE6  F01E         	goto	u4880
 10747  003DC8                     u4881:
 10748  003DC8  EFCB  F01E         	goto	l3988
 10749  003DCC                     u4880:
 10750  003DCC                     
 10751                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 278:     if (!(fl
      +                          ags & (1 << 0))) {
 10752  003DCC  0100               	movlb	0	; () banked
 10753  003DCE  B1D6               	btfsc	_flags& (0+255),0,b
 10754  003DD0  EFEC  F01E         	goto	u4891
 10755  003DD4  EFEE  F01E         	goto	u4890
 10756  003DD8                     u4891:
 10757  003DD8  EFF7  F01E         	goto	l3996
 10758  003DDC                     u4890:
 10759  003DDC                     
 10760                           ; BSR set to: 0
 10761                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 279:         fput
      +                          c(c, fp);
 10762  003DDC  C00F  F004         	movff	ctoa@c,fputc@c
 10763  003DE0  6A05               	clrf	(fputc@c+1)^0,c
 10764  003DE2  C00D  F006         	movff	ctoa@fp,fputc@fp
 10765  003DE6  C00E  F007         	movff	ctoa@fp+1,fputc@fp+1
 10766  003DEA  EC69  F01F         	call	_fputc	;wreg free
 10767  003DEE                     l3996:
 10768                           
 10769                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 282:     return l
      +                          +1;
 10770  003DEE  0E01               	movlw	1
 10771  003DF0  2411               	addwf	ctoa@l^0,w,c
 10772  003DF2  6E0D               	movwf	?_ctoa^0,c
 10773  003DF4  0E00               	movlw	0
 10774  003DF6  2012               	addwfc	(ctoa@l+1)^0,w,c
 10775  003DF8  6E0E               	movwf	(?_ctoa+1)^0,c
 10776  003DFA  0012               	return		;funcret
 10777  003DFC                     __end_of_ctoa:
 10778                           	callstack 0
 10779                           
 10780 ;; *************** function _fputc *****************
 10781 ;; Defined at:
 10782 ;;		line 8 in file "C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\nf_fputc.c"
 10783 ;; Parameters:    Size  Location     Type
 10784 ;;  c               2    3[COMRAM] int 
 10785 ;;  fp              2    5[COMRAM] PTR struct _IO_FILE
 10786 ;;		 -> NULL(0), sprintf@f(6), 
 10787 ;; Auto vars:     Size  Location     Type
 10788 ;;		None
 10789 ;; Return value:  Size  Location     Type
 10790 ;;                  2    3[COMRAM] int 
 10791 ;; Registers used:
 10792 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
 10793 ;; Tracked objects:
 10794 ;;		On entry : 0/0
 10795 ;;		On exit  : 0/0
 10796 ;;		Unchanged: 0/0
 10797 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 10798 ;;      Params:         4       0       0       0       0       0       0       0       0
 10799 ;;      Locals:         0       0       0       0       0       0       0       0       0
 10800 ;;      Temps:          5       0       0       0       0       0       0       0       0
 10801 ;;      Totals:         9       0       0       0       0       0       0       0       0
 10802 ;;Total ram usage:        9 bytes
 10803 ;; Hardware stack levels used:    1
 10804 ;; Hardware stack levels required when called:    1
 10805 ;; This function calls:
 10806 ;;		_putch
 10807 ;; This function is called by:
 10808 ;;		_pad
 10809 ;;		_ctoa
 10810 ;;		_vfpfcnvrt
 10811 ;;		_fputs
 10812 ;; This function uses a non-reentrant model
 10813 ;;
 10814                           
 10815                           	psect	text44
 10816  003ED2                     __ptext44:
 10817                           	callstack 0
 10818  003ED2                     _fputc:
 10819                           	callstack 25
 10820  003ED2  5006               	movf	fputc@fp^0,w,c
 10821  003ED4  1007               	iorwf	(fputc@fp+1)^0,w,c
 10822  003ED6  B4D8               	btfsc	status,2,c
 10823  003ED8  EF70  F01F         	goto	u3241
 10824  003EDC  EF72  F01F         	goto	u3240
 10825  003EE0                     u3241:
 10826  003EE0  EF7B  F01F         	goto	l3102
 10827  003EE4                     u3240:
 10828  003EE4  5006               	movf	fputc@fp^0,w,c
 10829  003EE6  1007               	iorwf	(fputc@fp+1)^0,w,c
 10830  003EE8  A4D8               	btfss	status,2,c
 10831  003EEA  EF79  F01F         	goto	u3251
 10832  003EEE  EF7B  F01F         	goto	u3250
 10833  003EF2                     u3251:
 10834  003EF2  EF80  F01F         	goto	l3104
 10835  003EF6                     u3250:
 10836  003EF6                     l3102:
 10837  003EF6  5004               	movf	fputc@c^0,w,c
 10838  003EF8  EC76  F023         	call	_putch
 10839  003EFC  EFCD  F01F         	goto	l1179
 10840  003F00                     l3104:
 10841  003F00  EE20 F004          	lfsr	2,4
 10842  003F04  5006               	movf	fputc@fp^0,w,c
 10843  003F06  26D9               	addwf	fsr2l,f,c
 10844  003F08  5007               	movf	(fputc@fp+1)^0,w,c
 10845  003F0A  22DA               	addwfc	fsr2h,f,c
 10846  003F0C  50DE               	movf	postinc2,w,c
 10847  003F0E  10DE               	iorwf	postinc2,w,c
 10848  003F10  B4D8               	btfsc	status,2,c
 10849  003F12  EF8D  F01F         	goto	u3261
 10850  003F16  EF8F  F01F         	goto	u3260
 10851  003F1A                     u3261:
 10852  003F1A  EFAA  F01F         	goto	l3108
 10853  003F1E                     u3260:
 10854  003F1E  EE20 F004          	lfsr	2,4
 10855  003F22  5006               	movf	fputc@fp^0,w,c
 10856  003F24  26D9               	addwf	fsr2l,f,c
 10857  003F26  5007               	movf	(fputc@fp+1)^0,w,c
 10858  003F28  22DA               	addwfc	fsr2h,f,c
 10859  003F2A  EE10 F002          	lfsr	1,2
 10860  003F2E  5006               	movf	fputc@fp^0,w,c
 10861  003F30  26E1               	addwf	fsr1l,f,c
 10862  003F32  5007               	movf	(fputc@fp+1)^0,w,c
 10863  003F34  22E2               	addwfc	fsr1h,f,c
 10864  003F36  50DE               	movf	postinc2,w,c
 10865  003F38  5CE6               	subwf	postinc1,w,c
 10866  003F3A  50E6               	movf	postinc1,w,c
 10867  003F3C  0A80               	xorlw	128
 10868  003F3E  6E0C               	movwf	(??_fputc+4)^0,c
 10869  003F40  50DE               	movf	postinc2,w,c
 10870  003F42  0A80               	xorlw	128
 10871  003F44  580C               	subwfb	(??_fputc+4)^0,w,c
 10872  003F46  B0D8               	btfsc	status,0,c
 10873  003F48  EFA8  F01F         	goto	u3271
 10874  003F4C  EFAA  F01F         	goto	u3270
 10875  003F50                     u3271:
 10876  003F50  EFCD  F01F         	goto	l1179
 10877  003F54                     u3270:
 10878  003F54                     l3108:
 10879  003F54  EE20 F002          	lfsr	2,2
 10880  003F58  5006               	movf	fputc@fp^0,w,c
 10881  003F5A  26D9               	addwf	fsr2l,f,c
 10882  003F5C  5007               	movf	(fputc@fp+1)^0,w,c
 10883  003F5E  22DA               	addwfc	fsr2h,f,c
 10884  003F60  CFDE F008          	movff	postinc2,??_fputc
 10885  003F64  CFDD F009          	movff	postdec2,??_fputc+1
 10886  003F68  C006  FFD9         	movff	fputc@fp,fsr2l
 10887  003F6C  C007  FFDA         	movff	fputc@fp+1,fsr2h
 10888  003F70  CFDE F00A          	movff	postinc2,??_fputc+2
 10889  003F74  CFDD F00B          	movff	postdec2,??_fputc+3
 10890  003F78  5008               	movf	??_fputc^0,w,c
 10891  003F7A  240A               	addwf	(??_fputc+2)^0,w,c
 10892  003F7C  6ED9               	movwf	fsr2l,c
 10893  003F7E  5009               	movf	(??_fputc+1)^0,w,c
 10894  003F80  200B               	addwfc	(??_fputc+3)^0,w,c
 10895  003F82  6EDA               	movwf	fsr2h,c
 10896  003F84  C004  FFDF         	movff	fputc@c,indf2
 10897  003F88  EE20 F002          	lfsr	2,2
 10898  003F8C  5006               	movf	fputc@fp^0,w,c
 10899  003F8E  26D9               	addwf	fsr2l,f,c
 10900  003F90  5007               	movf	(fputc@fp+1)^0,w,c
 10901  003F92  22DA               	addwfc	fsr2h,f,c
 10902  003F94  2ADE               	incf	postinc2,f,c
 10903  003F96  0E00               	movlw	0
 10904  003F98  22DD               	addwfc	postdec2,f,c
 10905  003F9A                     l1179:
 10906  003F9A  0012               	return		;funcret
 10907  003F9C                     __end_of_fputc:
 10908                           	callstack 0
 10909                           
 10910 ;; *************** function _putch *****************
 10911 ;; Defined at:
 10912 ;;		line 216 in file "Funcional01.c"
 10913 ;; Parameters:    Size  Location     Type
 10914 ;;  data            1    wreg     unsigned char 
 10915 ;; Auto vars:     Size  Location     Type
 10916 ;;  data            1    1[COMRAM] unsigned char 
 10917 ;;  Activa          1    2[COMRAM] unsigned char 
 10918 ;; Return value:  Size  Location     Type
 10919 ;;                  1    wreg      void 
 10920 ;; Registers used:
 10921 ;;		wreg, status,2, status,0
 10922 ;; Tracked objects:
 10923 ;;		On entry : 0/0
 10924 ;;		On exit  : 0/0
 10925 ;;		Unchanged: 0/0
 10926 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 10927 ;;      Params:         0       0       0       0       0       0       0       0       0
 10928 ;;      Locals:         2       0       0       0       0       0       0       0       0
 10929 ;;      Temps:          1       0       0       0       0       0       0       0       0
 10930 ;;      Totals:         3       0       0       0       0       0       0       0       0
 10931 ;;Total ram usage:        3 bytes
 10932 ;; Hardware stack levels used:    1
 10933 ;; This function calls:
 10934 ;;		Nothing
 10935 ;; This function is called by:
 10936 ;;		_fputc
 10937 ;; This function uses a non-reentrant model
 10938 ;;
 10939                           
 10940                           	psect	text45
 10941  0046EC                     __ptext45:
 10942                           	callstack 0
 10943  0046EC                     _putch:
 10944                           	callstack 25
 10945                           
 10946                           ;incstack = 0
 10947                           ;putch@data stored from wreg
 10948  0046EC  6E02               	movwf	putch@data^0,c
 10949  0046EE                     
 10950                           ;Funcional01.c: 216: void putch(char data);Funcional01.c: 217: {;Funcional01.c: 218:    
      +                           char Activa;;Funcional01.c: 219:     Activa = data & 0xF0;
 10951  0046EE  5002               	movf	putch@data^0,w,c
 10952  0046F0  0BF0               	andlw	240
 10953  0046F2  6E03               	movwf	putch@Activa^0,c
 10954                           
 10955                           ;Funcional01.c: 220:     LATD = Activa | 0x05;
 10956  0046F4  5003               	movf	putch@Activa^0,w,c
 10957  0046F6  0905               	iorlw	5
 10958  0046F8  6E8C               	movwf	140,c	;volatile
 10959  0046FA                     
 10960                           ;Funcional01.c: 222:     _delay((unsigned long)((10)*(8000000/4000000.0)));
 10961  0046FA  0E06               	movlw	6
 10962  0046FC                     u6687:
 10963  0046FC  2EE8               	decfsz	wreg,f,c
 10964  0046FE  D7FE               	bra	u6687
 10965  004700  D000               	nop2	
 10966  004702                     
 10967                           ;Funcional01.c: 223:     LATD = Activa | 0x01;
 10968  004702  5003               	movf	putch@Activa^0,w,c
 10969  004704  0901               	iorlw	1
 10970  004706  6E8C               	movwf	140,c	;volatile
 10971                           
 10972                           ;Funcional01.c: 225:     _delay((unsigned long)((1)*(8000000/4000.0)));
 10973  004708  0E03               	movlw	3
 10974  00470A  6E01               	movwf	??_putch^0,c
 10975  00470C  0E98               	movlw	152
 10976  00470E                     u6697:
 10977  00470E  2EE8               	decfsz	wreg,f,c
 10978  004710  D7FE               	bra	u6697
 10979  004712  2E01               	decfsz	??_putch^0,f,c
 10980  004714  D7FC               	bra	u6697
 10981  004716                     
 10982                           ;Funcional01.c: 226:     Activa = (unsigned char)(data << 4);
 10983  004716  3802               	swapf	putch@data^0,w,c
 10984  004718  0BF0               	andlw	240
 10985  00471A  6E03               	movwf	putch@Activa^0,c
 10986  00471C                     
 10987                           ;Funcional01.c: 227:     LATD = Activa | 0x05;
 10988  00471C  5003               	movf	putch@Activa^0,w,c
 10989  00471E  0905               	iorlw	5
 10990  004720  6E8C               	movwf	140,c	;volatile
 10991                           
 10992                           ;Funcional01.c: 228:     _delay((unsigned long)((10)*(8000000/4000000.0)));
 10993  004722  0E06               	movlw	6
 10994  004724                     u6707:
 10995  004724  2EE8               	decfsz	wreg,f,c
 10996  004726  D7FE               	bra	u6707
 10997  004728  D000               	nop2	
 10998  00472A                     
 10999                           ;Funcional01.c: 229:     LATD = Activa | 0x01;
 11000  00472A  5003               	movf	putch@Activa^0,w,c
 11001  00472C  0901               	iorlw	1
 11002  00472E  6E8C               	movwf	140,c	;volatile
 11003  004730  0012               	return		;funcret
 11004  004732                     __end_of_putch:
 11005                           	callstack 0
 11006                           
 11007 ;; *************** function _atoi *****************
 11008 ;; Defined at:
 11009 ;;		line 4 in file "C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\atoi.c"
 11010 ;; Parameters:    Size  Location     Type
 11011 ;;  s               2    7[COMRAM] PTR const unsigned char 
 11012 ;;		 -> STR_4(23), STR_3(18), STR_2(23), STR_1(18), 
 11013 ;;		 -> Valores(16), 
 11014 ;; Auto vars:     Size  Location     Type
 11015 ;;  n               2   20[COMRAM] int 
 11016 ;;  neg             2   13[COMRAM] int 
 11017 ;; Return value:  Size  Location     Type
 11018 ;;                  2    7[COMRAM] int 
 11019 ;; Registers used:
 11020 ;;		wreg, fsr1l, fsr1h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 11021 ;; Tracked objects:
 11022 ;;		On entry : 0/0
 11023 ;;		On exit  : 0/0
 11024 ;;		Unchanged: 0/0
 11025 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 11026 ;;      Params:         2       0       0       0       0       0       0       0       0
 11027 ;;      Locals:         9       0       0       0       0       0       0       0       0
 11028 ;;      Temps:          4       0       0       0       0       0       0       0       0
 11029 ;;      Totals:        15       0       0       0       0       0       0       0       0
 11030 ;;Total ram usage:       15 bytes
 11031 ;; Hardware stack levels used:    1
 11032 ;; Hardware stack levels required when called:    1
 11033 ;; This function calls:
 11034 ;;		___wmul
 11035 ;;		_isdigit
 11036 ;;		_isspace
 11037 ;; This function is called by:
 11038 ;;		_vfpfcnvrt
 11039 ;; This function uses a non-reentrant model
 11040 ;;
 11041                           
 11042                           	psect	text46
 11043  0030B4                     __ptext46:
 11044                           	callstack 0
 11045  0030B4                     _atoi:
 11046                           	callstack 25
 11047  0030B4  0E00               	movlw	0
 11048  0030B6  6E16               	movwf	(atoi@n+1)^0,c
 11049  0030B8  0E00               	movlw	0
 11050  0030BA  6E15               	movwf	atoi@n^0,c
 11051  0030BC  0E00               	movlw	0
 11052  0030BE  6E0F               	movwf	(atoi@neg+1)^0,c
 11053  0030C0  0E00               	movlw	0
 11054  0030C2  6E0E               	movwf	atoi@neg^0,c
 11055  0030C4  EF66  F018         	goto	l4374
 11056  0030C8                     l4372:
 11057  0030C8  4A08               	infsnz	atoi@s^0,f,c
 11058  0030CA  2A09               	incf	(atoi@s+1)^0,f,c
 11059  0030CC                     l4374:
 11060  0030CC  0E01               	movlw	1
 11061  0030CE  6E14               	movwf	_atoi$1302^0,c
 11062  0030D0  C008  FFF6         	movff	atoi@s,tblptrl
 11063  0030D4  C009  FFF7         	movff	atoi@s+1,tblptrh
 11064  0030D8  6AF8               	clrf	tblptru,c
 11065  0030DA  0E07               	movlw	(high __ramtop+-1)
 11066  0030DC  64F7               	cpfsgt	tblptrh,c
 11067  0030DE  D003               	bra	u5597
 11068  0030E0  0008               	tblrd		*
 11069  0030E2  50F5               	movf	tablat,w,c
 11070  0030E4  D005               	bra	u5590
 11071  0030E6                     u5597:
 11072  0030E6  CFF6 FFE1          	movff	tblptrl,fsr1l
 11073  0030EA  CFF7 FFE2          	movff	tblptrh,fsr1h
 11074  0030EE  50E7               	movf	indf1,w,c
 11075  0030F0                     u5590:
 11076  0030F0  0A20               	xorlw	32
 11077  0030F2  B4D8               	btfsc	status,2,c
 11078  0030F4  EF7E  F018         	goto	u5601
 11079  0030F8  EF80  F018         	goto	u5600
 11080  0030FC                     u5601:
 11081  0030FC  EFA7  F018         	goto	l4382
 11082  003100                     u5600:
 11083  003100  0EF7               	movlw	247
 11084  003102  6E0A               	movwf	??_atoi^0,c
 11085  003104  0EFF               	movlw	255
 11086  003106  6E0B               	movwf	(??_atoi+1)^0,c
 11087  003108  C008  FFF6         	movff	atoi@s,tblptrl
 11088  00310C  C009  FFF7         	movff	atoi@s+1,tblptrh
 11089  003110  6AF8               	clrf	tblptru,c
 11090  003112  0E07               	movlw	(high __ramtop+-1)
 11091  003114  64F7               	cpfsgt	tblptrh,c
 11092  003116  D003               	bra	u5617
 11093  003118  0008               	tblrd		*
 11094  00311A  50F5               	movf	tablat,w,c
 11095  00311C  D005               	bra	u5610
 11096  00311E                     u5617:
 11097  00311E  CFF6 FFE1          	movff	tblptrl,fsr1l
 11098  003122  CFF7 FFE2          	movff	tblptrh,fsr1h
 11099  003126  50E7               	movf	indf1,w,c
 11100  003128                     u5610:
 11101  003128  6E0C               	movwf	(??_atoi+2)^0,c
 11102  00312A  6A0D               	clrf	(??_atoi+3)^0,c
 11103  00312C  500A               	movf	??_atoi^0,w,c
 11104  00312E  260C               	addwf	(??_atoi+2)^0,f,c
 11105  003130  500B               	movf	(??_atoi+1)^0,w,c
 11106  003132  220D               	addwfc	(??_atoi+3)^0,f,c
 11107  003134  500D               	movf	(??_atoi+3)^0,w,c
 11108  003136  E109               	bnz	u5620
 11109  003138  0E05               	movlw	5
 11110  00313A  5C0C               	subwf	(??_atoi+2)^0,w,c
 11111  00313C  A0D8               	btfss	status,0,c
 11112  00313E  EFA3  F018         	goto	u5621
 11113  003142  EFA5  F018         	goto	u5620
 11114  003146                     u5621:
 11115  003146  EFA7  F018         	goto	l4382
 11116  00314A                     u5620:
 11117  00314A  0E00               	movlw	0
 11118  00314C  6E14               	movwf	_atoi$1302^0,c
 11119  00314E                     l4382:
 11120  00314E  C014  F010         	movff	_atoi$1302,_atoi$1301
 11121  003152  6A11               	clrf	(_atoi$1301+1)^0,c
 11122  003154  5010               	movf	_atoi$1301^0,w,c
 11123  003156  1011               	iorwf	(_atoi$1301+1)^0,w,c
 11124  003158  A4D8               	btfss	status,2,c
 11125  00315A  EFB1  F018         	goto	u5631
 11126  00315E  EFB3  F018         	goto	u5630
 11127  003162                     u5631:
 11128  003162  EF64  F018         	goto	l4372
 11129  003166                     u5630:
 11130  003166  EFBD  F018         	goto	l4392
 11131  00316A                     l4388:
 11132  00316A  0E00               	movlw	0
 11133  00316C  6E0F               	movwf	(atoi@neg+1)^0,c
 11134  00316E  0E01               	movlw	1
 11135  003170  6E0E               	movwf	atoi@neg^0,c
 11136  003172                     l4390:
 11137  003172  4A08               	infsnz	atoi@s^0,f,c
 11138  003174  2A09               	incf	(atoi@s+1)^0,f,c
 11139  003176  EF08  F019         	goto	l4398
 11140  00317A                     l4392:
 11141  00317A  C008  FFF6         	movff	atoi@s,tblptrl
 11142  00317E  C009  FFF7         	movff	atoi@s+1,tblptrh
 11143  003182  6AF8               	clrf	tblptru,c
 11144  003184  0E07               	movlw	(high __ramtop+-1)
 11145  003186  64F7               	cpfsgt	tblptrh,c
 11146  003188  D003               	bra	u5647
 11147  00318A  0008               	tblrd		*
 11148  00318C  50F5               	movf	tablat,w,c
 11149  00318E  D005               	bra	u5640
 11150  003190                     u5647:
 11151  003190  CFF6 FFE1          	movff	tblptrl,fsr1l
 11152  003194  CFF7 FFE2          	movff	tblptrh,fsr1h
 11153  003198  50E7               	movf	indf1,w,c
 11154  00319A                     u5640:
 11155  00319A  6E0A               	movwf	??_atoi^0,c
 11156  00319C  6A0B               	clrf	(??_atoi+1)^0,c
 11157                           
 11158                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
 11159                           ; Switch size 1, requested type "simple"
 11160                           ; Number of cases is 1, Range of values is 0 to 0
 11161                           ; switch strategies available:
 11162                           ; Name         Instructions Cycles
 11163                           ; simple_byte            4     3 (average)
 11164                           ;	Chosen strategy is simple_byte
 11165  00319E  500B               	movf	(??_atoi+1)^0,w,c
 11166  0031A0  0A00               	xorlw	0	; case 0
 11167  0031A2  B4D8               	btfsc	status,2,c
 11168  0031A4  EFD6  F018         	goto	l4944
 11169  0031A8  EF08  F019         	goto	l4398
 11170  0031AC                     l4944:
 11171                           
 11172                           ; Switch size 1, requested type "simple"
 11173                           ; Number of cases is 2, Range of values is 43 to 45
 11174                           ; switch strategies available:
 11175                           ; Name         Instructions Cycles
 11176                           ; simple_byte            7     4 (average)
 11177                           ;	Chosen strategy is simple_byte
 11178  0031AC  500A               	movf	??_atoi^0,w,c
 11179  0031AE  0A2B               	xorlw	43	; case 43
 11180  0031B0  B4D8               	btfsc	status,2,c
 11181  0031B2  EFB9  F018         	goto	l4390
 11182  0031B6  0A06               	xorlw	6	; case 45
 11183  0031B8  B4D8               	btfsc	status,2,c
 11184  0031BA  EFB5  F018         	goto	l4388
 11185  0031BE  EF08  F019         	goto	l4398
 11186  0031C2                     l4394:
 11187  0031C2  C015  F001         	movff	atoi@n,___wmul@multiplier
 11188  0031C6  C016  F002         	movff	atoi@n+1,___wmul@multiplier+1
 11189  0031CA  0E00               	movlw	0
 11190  0031CC  6E04               	movwf	(___wmul@multiplicand+1)^0,c
 11191  0031CE  0E0A               	movlw	10
 11192  0031D0  6E03               	movwf	___wmul@multiplicand^0,c
 11193  0031D2  EC91  F024         	call	___wmul	;wreg free
 11194  0031D6  C008  FFF6         	movff	atoi@s,tblptrl
 11195  0031DA  C009  FFF7         	movff	atoi@s+1,tblptrh
 11196  0031DE  6AF8               	clrf	tblptru,c
 11197  0031E0  0E07               	movlw	(high __ramtop+-1)
 11198  0031E2  64F7               	cpfsgt	tblptrh,c
 11199  0031E4  D003               	bra	u5657
 11200  0031E6  0008               	tblrd		*
 11201  0031E8  50F5               	movf	tablat,w,c
 11202  0031EA  D005               	bra	u5650
 11203  0031EC                     u5657:
 11204  0031EC  CFF6 FFE1          	movff	tblptrl,fsr1l
 11205  0031F0  CFF7 FFE2          	movff	tblptrh,fsr1h
 11206  0031F4  50E7               	movf	indf1,w,c
 11207  0031F6                     u5650:
 11208  0031F6  6E0A               	movwf	??_atoi^0,c
 11209  0031F8  500A               	movf	??_atoi^0,w,c
 11210  0031FA  5E01               	subwf	?___wmul^0,f,c
 11211  0031FC  0E00               	movlw	0
 11212  0031FE  5A02               	subwfb	(?___wmul+1)^0,f,c
 11213  003200  0E30               	movlw	48
 11214  003202  2401               	addwf	?___wmul^0,w,c
 11215  003204  6E15               	movwf	atoi@n^0,c
 11216  003206  0E00               	movlw	0
 11217  003208  2002               	addwfc	(?___wmul+1)^0,w,c
 11218  00320A  6E16               	movwf	(atoi@n+1)^0,c
 11219  00320C  EFB9  F018         	goto	l4390
 11220  003210                     l4398:
 11221  003210  0ED0               	movlw	208
 11222  003212  6E0A               	movwf	??_atoi^0,c
 11223  003214  0EFF               	movlw	255
 11224  003216  6E0B               	movwf	(??_atoi+1)^0,c
 11225  003218  C008  FFF6         	movff	atoi@s,tblptrl
 11226  00321C  C009  FFF7         	movff	atoi@s+1,tblptrh
 11227  003220  6AF8               	clrf	tblptru,c
 11228  003222  0E07               	movlw	(high __ramtop+-1)
 11229  003224  64F7               	cpfsgt	tblptrh,c
 11230  003226  D003               	bra	u5667
 11231  003228  0008               	tblrd		*
 11232  00322A  50F5               	movf	tablat,w,c
 11233  00322C  D005               	bra	u5660
 11234  00322E                     u5667:
 11235  00322E  CFF6 FFE1          	movff	tblptrl,fsr1l
 11236  003232  CFF7 FFE2          	movff	tblptrh,fsr1h
 11237  003236  50E7               	movf	indf1,w,c
 11238  003238                     u5660:
 11239  003238  6E0C               	movwf	(??_atoi+2)^0,c
 11240  00323A  6A0D               	clrf	(??_atoi+3)^0,c
 11241  00323C  500A               	movf	??_atoi^0,w,c
 11242  00323E  260C               	addwf	(??_atoi+2)^0,f,c
 11243  003240  500B               	movf	(??_atoi+1)^0,w,c
 11244  003242  220D               	addwfc	(??_atoi+3)^0,f,c
 11245  003244  500D               	movf	(??_atoi+3)^0,w,c
 11246  003246  E10A               	bnz	u5670
 11247  003248  0E0A               	movlw	10
 11248  00324A  5C0C               	subwf	(??_atoi+2)^0,w,c
 11249  00324C  A0D8               	btfss	status,0,c
 11250  00324E  EF2B  F019         	goto	u5671
 11251  003252  EF2E  F019         	goto	u5670
 11252  003256                     u5671:
 11253  003256  0E01               	movlw	1
 11254  003258  EF2F  F019         	goto	u5680
 11255  00325C                     u5670:
 11256  00325C  0E00               	movlw	0
 11257  00325E                     u5680:
 11258  00325E  6E12               	movwf	_atoi$1303^0,c
 11259  003260  6A13               	clrf	(_atoi$1303+1)^0,c
 11260  003262  5012               	movf	_atoi$1303^0,w,c
 11261  003264  1013               	iorwf	(_atoi$1303+1)^0,w,c
 11262  003266  A4D8               	btfss	status,2,c
 11263  003268  EF38  F019         	goto	u5691
 11264  00326C  EF3A  F019         	goto	u5690
 11265  003270                     u5691:
 11266  003270  EFE1  F018         	goto	l4394
 11267  003274                     u5690:
 11268  003274  500E               	movf	atoi@neg^0,w,c
 11269  003276  100F               	iorwf	(atoi@neg+1)^0,w,c
 11270  003278  A4D8               	btfss	status,2,c
 11271  00327A  EF41  F019         	goto	u5701
 11272  00327E  EF43  F019         	goto	u5700
 11273  003282                     u5701:
 11274  003282  EF51  F019         	goto	l1131
 11275  003286                     u5700:
 11276  003286  C015  F00A         	movff	atoi@n,??_atoi
 11277  00328A  C016  F00B         	movff	atoi@n+1,??_atoi+1
 11278  00328E  1E0A               	comf	??_atoi^0,f,c
 11279  003290  1E0B               	comf	(??_atoi+1)^0,f,c
 11280  003292  4A0A               	infsnz	??_atoi^0,f,c
 11281  003294  2A0B               	incf	(??_atoi+1)^0,f,c
 11282  003296  C00A  F008         	movff	??_atoi,?_atoi
 11283  00329A  C00B  F009         	movff	??_atoi+1,?_atoi+1
 11284  00329E  EF55  F019         	goto	l1134
 11285  0032A2                     l1131:
 11286  0032A2  C015  F008         	movff	atoi@n,?_atoi
 11287  0032A6  C016  F009         	movff	atoi@n+1,?_atoi+1
 11288  0032AA                     l1134:
 11289  0032AA  0012               	return		;funcret
 11290  0032AC                     __end_of_atoi:
 11291                           	callstack 0
 11292                           
 11293 ;; *************** function _isspace *****************
 11294 ;; Defined at:
 11295 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\isspace.c"
 11296 ;; Parameters:    Size  Location     Type
 11297 ;;  c               2    0[COMRAM] int 
 11298 ;; Auto vars:     Size  Location     Type
 11299 ;;		None
 11300 ;; Return value:  Size  Location     Type
 11301 ;;                  2    0[COMRAM] int 
 11302 ;; Registers used:
 11303 ;;		wreg, status,2, status,0
 11304 ;; Tracked objects:
 11305 ;;		On entry : 0/0
 11306 ;;		On exit  : 0/0
 11307 ;;		Unchanged: 0/0
 11308 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 11309 ;;      Params:         2       0       0       0       0       0       0       0       0
 11310 ;;      Locals:         1       0       0       0       0       0       0       0       0
 11311 ;;      Temps:          4       0       0       0       0       0       0       0       0
 11312 ;;      Totals:         7       0       0       0       0       0       0       0       0
 11313 ;;Total ram usage:        7 bytes
 11314 ;; Hardware stack levels used:    1
 11315 ;; This function calls:
 11316 ;;		Nothing
 11317 ;; This function is called by:
 11318 ;;		_atoi
 11319 ;; This function uses a non-reentrant model
 11320 ;;
 11321                           
 11322                           	psect	text47
 11323  0045BE                     __ptext47:
 11324                           	callstack 0
 11325  0045BE                     _isspace:
 11326                           	callstack 25
 11327  0045BE  0E01               	movlw	1
 11328  0045C0  6E07               	movwf	_isspace$1332^0,c
 11329  0045C2  0E20               	movlw	32
 11330  0045C4  1801               	xorwf	isspace@c^0,w,c
 11331  0045C6  1002               	iorwf	(isspace@c+1)^0,w,c
 11332  0045C8  B4D8               	btfsc	status,2,c
 11333  0045CA  EFE9  F022         	goto	u4831
 11334  0045CE  EFEB  F022         	goto	u4830
 11335  0045D2                     u4831:
 11336  0045D2  EF04  F023         	goto	l3968
 11337  0045D6                     u4830:
 11338  0045D6  0EF7               	movlw	247
 11339  0045D8  6E03               	movwf	??_isspace^0,c
 11340  0045DA  0EFF               	movlw	255
 11341  0045DC  6E04               	movwf	(??_isspace+1)^0,c
 11342  0045DE  C001  F005         	movff	isspace@c,??_isspace+2
 11343  0045E2  C002  F006         	movff	isspace@c+1,??_isspace+3
 11344  0045E6  5003               	movf	??_isspace^0,w,c
 11345  0045E8  2605               	addwf	(??_isspace+2)^0,f,c
 11346  0045EA  5004               	movf	(??_isspace+1)^0,w,c
 11347  0045EC  2206               	addwfc	(??_isspace+3)^0,f,c
 11348  0045EE  5006               	movf	(??_isspace+3)^0,w,c
 11349  0045F0  E109               	bnz	u4840
 11350  0045F2  0E05               	movlw	5
 11351  0045F4  5C05               	subwf	(??_isspace+2)^0,w,c
 11352  0045F6  A0D8               	btfss	status,0,c
 11353  0045F8  EF00  F023         	goto	u4841
 11354  0045FC  EF02  F023         	goto	u4840
 11355  004600                     u4841:
 11356  004600  EF04  F023         	goto	l3968
 11357  004604                     u4840:
 11358  004604  0E00               	movlw	0
 11359  004606  6E07               	movwf	_isspace$1332^0,c
 11360  004608                     l3968:
 11361  004608  C007  F001         	movff	_isspace$1332,?_isspace
 11362  00460C  6A02               	clrf	(?_isspace+1)^0,c
 11363  00460E  0012               	return		;funcret
 11364  004610                     __end_of_isspace:
 11365                           	callstack 0
 11366                           
 11367 ;; *************** function _isdigit *****************
 11368 ;; Defined at:
 11369 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\isdigit.c"
 11370 ;; Parameters:    Size  Location     Type
 11371 ;;  c               2    0[COMRAM] int 
 11372 ;; Auto vars:     Size  Location     Type
 11373 ;;		None
 11374 ;; Return value:  Size  Location     Type
 11375 ;;                  2    0[COMRAM] int 
 11376 ;; Registers used:
 11377 ;;		wreg, status,2, status,0
 11378 ;; Tracked objects:
 11379 ;;		On entry : 0/0
 11380 ;;		On exit  : 0/0
 11381 ;;		Unchanged: 0/0
 11382 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 11383 ;;      Params:         2       0       0       0       0       0       0       0       0
 11384 ;;      Locals:         0       0       0       0       0       0       0       0       0
 11385 ;;      Temps:          4       0       0       0       0       0       0       0       0
 11386 ;;      Totals:         6       0       0       0       0       0       0       0       0
 11387 ;;Total ram usage:        6 bytes
 11388 ;; Hardware stack levels used:    1
 11389 ;; This function calls:
 11390 ;;		Nothing
 11391 ;; This function is called by:
 11392 ;;		_vfpfcnvrt
 11393 ;;		_atoi
 11394 ;; This function uses a non-reentrant model
 11395 ;;
 11396                           
 11397                           	psect	text48
 11398  004868                     __ptext48:
 11399                           	callstack 0
 11400  004868                     _isdigit:
 11401                           	callstack 26
 11402  004868  0ED0               	movlw	208
 11403  00486A  6E03               	movwf	??_isdigit^0,c
 11404  00486C  0EFF               	movlw	255
 11405  00486E  6E04               	movwf	(??_isdigit+1)^0,c
 11406  004870  C001  F005         	movff	isdigit@c,??_isdigit+2
 11407  004874  C002  F006         	movff	isdigit@c+1,??_isdigit+3
 11408  004878  5003               	movf	??_isdigit^0,w,c
 11409  00487A  2605               	addwf	(??_isdigit+2)^0,f,c
 11410  00487C  5004               	movf	(??_isdigit+1)^0,w,c
 11411  00487E  2206               	addwfc	(??_isdigit+3)^0,f,c
 11412  004880  5006               	movf	(??_isdigit+3)^0,w,c
 11413  004882  E10A               	bnz	u4810
 11414  004884  0E0A               	movlw	10
 11415  004886  5C05               	subwf	(??_isdigit+2)^0,w,c
 11416  004888  A0D8               	btfss	status,0,c
 11417  00488A  EF49  F024         	goto	u4811
 11418  00488E  EF4C  F024         	goto	u4810
 11419  004892                     u4811:
 11420  004892  0E01               	movlw	1
 11421  004894  EF4D  F024         	goto	u4820
 11422  004898                     u4810:
 11423  004898  0E00               	movlw	0
 11424  00489A                     u4820:
 11425  00489A  6E01               	movwf	?_isdigit^0,c
 11426  00489C  6A02               	clrf	(?_isdigit+1)^0,c
 11427  00489E  0012               	return		;funcret
 11428  0048A0                     __end_of_isdigit:
 11429                           	callstack 0
 11430                           
 11431 ;; *************** function ___wmul *****************
 11432 ;; Defined at:
 11433 ;;		line 15 in file "C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\Umul16.c"
 11434 ;; Parameters:    Size  Location     Type
 11435 ;;  multiplier      2    0[COMRAM] unsigned int 
 11436 ;;  multiplicand    2    2[COMRAM] unsigned int 
 11437 ;; Auto vars:     Size  Location     Type
 11438 ;;  product         2    4[COMRAM] unsigned int 
 11439 ;; Return value:  Size  Location     Type
 11440 ;;                  2    0[COMRAM] unsigned int 
 11441 ;; Registers used:
 11442 ;;		wreg, status,2, status,0, prodl, prodh
 11443 ;; Tracked objects:
 11444 ;;		On entry : 0/0
 11445 ;;		On exit  : 0/0
 11446 ;;		Unchanged: 0/0
 11447 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 11448 ;;      Params:         4       0       0       0       0       0       0       0       0
 11449 ;;      Locals:         2       0       0       0       0       0       0       0       0
 11450 ;;      Temps:          0       0       0       0       0       0       0       0       0
 11451 ;;      Totals:         6       0       0       0       0       0       0       0       0
 11452 ;;Total ram usage:        6 bytes
 11453 ;; Hardware stack levels used:    1
 11454 ;; This function calls:
 11455 ;;		Nothing
 11456 ;; This function is called by:
 11457 ;;		_atoi
 11458 ;; This function uses a non-reentrant model
 11459 ;;
 11460                           
 11461                           	psect	text49
 11462  004922                     __ptext49:
 11463                           	callstack 0
 11464  004922                     ___wmul:
 11465                           	callstack 25
 11466  004922  5001               	movf	___wmul@multiplier^0,w,c
 11467  004924  0203               	mulwf	___wmul@multiplicand^0,c
 11468  004926  CFF3 F005          	movff	prodl,___wmul@product
 11469  00492A  CFF4 F006          	movff	prodh,___wmul@product+1
 11470  00492E  5001               	movf	___wmul@multiplier^0,w,c
 11471  004930  0204               	mulwf	(___wmul@multiplicand+1)^0,c
 11472  004932  50F3               	movf	243,w,c
 11473  004934  2606               	addwf	(___wmul@product+1)^0,f,c
 11474  004936  5002               	movf	(___wmul@multiplier+1)^0,w,c
 11475  004938  0203               	mulwf	___wmul@multiplicand^0,c
 11476  00493A  50F3               	movf	243,w,c
 11477  00493C  2606               	addwf	(___wmul@product+1)^0,f,c
 11478  00493E  C005  F001         	movff	___wmul@product,?___wmul
 11479  004942  C006  F002         	movff	___wmul@product+1,?___wmul+1
 11480  004946  0012               	return		;funcret
 11481  004948                     __end_of___wmul:
 11482                           	callstack 0
 11483                           
 11484                           	psect	rparam
 11485  0000                     
 11486                           	psect	idloc
 11487                           
 11488                           ;Config register IDLOC0 @ 0x200000
 11489                           ;	unspecified, using default values
 11490  200000                     	org	2097152
 11491  200000  FF                 	db	255
 11492                           
 11493                           ;Config register IDLOC1 @ 0x200001
 11494                           ;	unspecified, using default values
 11495  200001                     	org	2097153
 11496  200001  FF                 	db	255
 11497                           
 11498                           ;Config register IDLOC2 @ 0x200002
 11499                           ;	unspecified, using default values
 11500  200002                     	org	2097154
 11501  200002  FF                 	db	255
 11502                           
 11503                           ;Config register IDLOC3 @ 0x200003
 11504                           ;	unspecified, using default values
 11505  200003                     	org	2097155
 11506  200003  FF                 	db	255
 11507                           
 11508                           ;Config register IDLOC4 @ 0x200004
 11509                           ;	unspecified, using default values
 11510  200004                     	org	2097156
 11511  200004  FF                 	db	255
 11512                           
 11513                           ;Config register IDLOC5 @ 0x200005
 11514                           ;	unspecified, using default values
 11515  200005                     	org	2097157
 11516  200005  FF                 	db	255
 11517                           
 11518                           ;Config register IDLOC6 @ 0x200006
 11519                           ;	unspecified, using default values
 11520  200006                     	org	2097158
 11521  200006  FF                 	db	255
 11522                           
 11523                           ;Config register IDLOC7 @ 0x200007
 11524                           ;	unspecified, using default values
 11525  200007                     	org	2097159
 11526  200007  FF                 	db	255
 11527                           
 11528                           	psect	config
 11529                           
 11530                           ;Config register CONFIG1L @ 0x300000
 11531                           ;	PLL Selection
 11532                           ;	PLLSEL = 0x0, unprogrammed default
 11533                           ;	PLL Enable Configuration bit
 11534                           ;	CFGPLLEN = OFF, PLL Disabled (firmware controlled)
 11535                           ;	CPU System Clock Postscaler
 11536                           ;	CPUDIV = 0x0, unprogrammed default
 11537                           ;	Low Speed USB mode with 48 MHz system clock
 11538                           ;	LS48MHZ = 0x0, unprogrammed default
 11539  300000                     	org	3145728
 11540  300000  00                 	db	0
 11541                           
 11542                           ;Config register CONFIG1H @ 0x300001
 11543                           ;	Oscillator Selection
 11544                           ;	FOSC = INTOSCIO, Internal oscillator
 11545                           ;	Primary Oscillator Shutdown
 11546                           ;	PCLKEN = 0x1, unprogrammed default
 11547                           ;	Fail-Safe Clock Monitor
 11548                           ;	FCMEN = OFF, Fail-Safe Clock Monitor disabled
 11549                           ;	Internal/External Oscillator Switchover
 11550                           ;	IESO = OFF, Oscillator Switchover mode disabled
 11551  300001                     	org	3145729
 11552  300001  28                 	db	40
 11553                           
 11554                           ;Config register CONFIG2L @ 0x300002
 11555                           ;	Power-up Timer Enable
 11556                           ;	nPWRTEN = OFF, Power up timer disabled
 11557                           ;	Brown-out Reset Enable
 11558                           ;	BOREN = 0x3, unprogrammed default
 11559                           ;	Brown-out Reset Voltage
 11560                           ;	BORV = 0x3, unprogrammed default
 11561                           ;	Low-Power Brown-out Reset
 11562                           ;	nLPBOR = OFF, Low-Power Brown-out Reset disabled
 11563  300002                     	org	3145730
 11564  300002  5F                 	db	95
 11565                           
 11566                           ;Config register CONFIG2H @ 0x300003
 11567                           ;	Watchdog Timer Enable bits
 11568                           ;	WDTEN = OFF, WDT disabled in hardware (SWDTEN ignored)
 11569                           ;	Watchdog Timer Postscaler
 11570                           ;	WDTPS = 0xF, unprogrammed default
 11571  300003                     	org	3145731
 11572  300003  3C                 	db	60
 11573                           
 11574                           ; Padding undefined space
 11575  300004                     	org	3145732
 11576  300004  FF                 	db	255
 11577                           
 11578                           ;Config register CONFIG3H @ 0x300005
 11579                           ;	CCP2 MUX bit
 11580                           ;	CCP2MX = 0x1, unprogrammed default
 11581                           ;	PORTB A/D Enable bit
 11582                           ;	PBADEN = 0x1, unprogrammed default
 11583                           ;	Timer3 Clock Input MUX bit
 11584                           ;	T3CMX = 0x1, unprogrammed default
 11585                           ;	SDO Output MUX bit
 11586                           ;	SDOMX = 0x1, unprogrammed default
 11587                           ;	Master Clear Reset Pin Enable
 11588                           ;	MCLRE = ON, MCLR pin enabled; RE3 input disabled
 11589  300005                     	org	3145733
 11590  300005  D3                 	db	211
 11591                           
 11592                           ;Config register CONFIG4L @ 0x300006
 11593                           ;	Stack Full/Underflow Reset
 11594                           ;	STVREN = 0x1, unprogrammed default
 11595                           ;	Single-Supply ICSP Enable bit
 11596                           ;	LVP = OFF, Single-Supply ICSP disabled
 11597                           ;	Dedicated In-Circuit Debug/Programming Port Enable
 11598                           ;	ICPRT = OFF, ICPORT disabled
 11599                           ;	Extended Instruction Set Enable bit
 11600                           ;	XINST = OFF, Instruction set extension and Indexed Addressing mode disabled
 11601                           ;	Background Debugger Enable bit
 11602                           ;	DEBUG = 0x1, unprogrammed default
 11603  300006                     	org	3145734
 11604  300006  81                 	db	129
 11605                           
 11606                           ; Padding undefined space
 11607  300007                     	org	3145735
 11608  300007  FF                 	db	255
 11609                           
 11610                           ;Config register CONFIG5L @ 0x300008
 11611                           ;	Block 0 Code Protect
 11612                           ;	CP0 = OFF, Block 0 is not code-protected
 11613                           ;	Block 1 Code Protect
 11614                           ;	CP1 = OFF, Block 1 is not code-protected
 11615                           ;	Block 2 Code Protect
 11616                           ;	CP2 = OFF, Block 2 is not code-protected
 11617                           ;	Block 3 Code Protect
 11618                           ;	CP3 = OFF, Block 3 is not code-protected
 11619  300008                     	org	3145736
 11620  300008  0F                 	db	15
 11621                           
 11622                           ;Config register CONFIG5H @ 0x300009
 11623                           ;	Boot Block Code Protect
 11624                           ;	CPB = OFF, Boot block is not code-protected
 11625                           ;	Data EEPROM Code Protect
 11626                           ;	CPD = OFF, Data EEPROM is not code-protected
 11627  300009                     	org	3145737
 11628  300009  C0                 	db	192
 11629                           
 11630                           ;Config register CONFIG6L @ 0x30000A
 11631                           ;	Block 0 Write Protect
 11632                           ;	WRT0 = OFF, Block 0 (0800-1FFFh) is not write-protected
 11633                           ;	Block 1 Write Protect
 11634                           ;	WRT1 = OFF, Block 1 (2000-3FFFh) is not write-protected
 11635                           ;	Block 2 Write Protect
 11636                           ;	WRT2 = OFF, Block 2 (04000-5FFFh) is not write-protected
 11637                           ;	Block 3 Write Protect
 11638                           ;	WRT3 = OFF, Block 3 (06000-7FFFh) is not write-protected
 11639  30000A                     	org	3145738
 11640  30000A  0F                 	db	15
 11641                           
 11642                           ;Config register CONFIG6H @ 0x30000B
 11643                           ;	Configuration Registers Write Protect
 11644                           ;	WRTC = OFF, Configuration registers (300000-3000FFh) are not write-protected
 11645                           ;	Boot Block Write Protect
 11646                           ;	WRTB = OFF, Boot block (0000-7FFh) is not write-protected
 11647                           ;	Data EEPROM Write Protect
 11648                           ;	WRTD = OFF, Data EEPROM is not write-protected
 11649  30000B                     	org	3145739
 11650  30000B  E0                 	db	224
 11651                           
 11652                           ;Config register CONFIG7L @ 0x30000C
 11653                           ;	Block 0 Table Read Protect
 11654                           ;	EBTR0 = OFF, Block 0 is not protected from table reads executed in other blocks
 11655                           ;	Block 1 Table Read Protect
 11656                           ;	EBTR1 = OFF, Block 1 is not protected from table reads executed in other blocks
 11657                           ;	Block 2 Table Read Protect
 11658                           ;	EBTR2 = OFF, Block 2 is not protected from table reads executed in other blocks
 11659                           ;	Block 3 Table Read Protect
 11660                           ;	EBTR3 = OFF, Block 3 is not protected from table reads executed in other blocks
 11661  30000C                     	org	3145740
 11662  30000C  0F                 	db	15
 11663                           
 11664                           ;Config register CONFIG7H @ 0x30000D
 11665                           ;	Boot Block Table Read Protect
 11666                           ;	EBTRB = OFF, Boot block is not protected from table reads executed in other blocks
 11667  30000D                     	org	3145741
 11668  30000D  40                 	db	64
 11669                           tosu	equ	0xFFF
 11670                           tosh	equ	0xFFE
 11671                           tosl	equ	0xFFD
 11672                           stkptr	equ	0xFFC
 11673                           pclatu	equ	0xFFB
 11674                           pclath	equ	0xFFA
 11675                           pcl	equ	0xFF9
 11676                           tblptru	equ	0xFF8
 11677                           tblptrh	equ	0xFF7
 11678                           tblptrl	equ	0xFF6
 11679                           tablat	equ	0xFF5
 11680                           prodh	equ	0xFF4
 11681                           prodl	equ	0xFF3
 11682                           indf0	equ	0xFEF
 11683                           postinc0	equ	0xFEE
 11684                           postdec0	equ	0xFED
 11685                           preinc0	equ	0xFEC
 11686                           plusw0	equ	0xFEB
 11687                           fsr0h	equ	0xFEA
 11688                           fsr0l	equ	0xFE9
 11689                           wreg	equ	0xFE8
 11690                           indf1	equ	0xFE7
 11691                           postinc1	equ	0xFE6
 11692                           postdec1	equ	0xFE5
 11693                           preinc1	equ	0xFE4
 11694                           plusw1	equ	0xFE3
 11695                           fsr1h	equ	0xFE2
 11696                           fsr1l	equ	0xFE1
 11697                           bsr	equ	0xFE0
 11698                           indf2	equ	0xFDF
 11699                           postinc2	equ	0xFDE
 11700                           postdec2	equ	0xFDD
 11701                           preinc2	equ	0xFDC
 11702                           plusw2	equ	0xFDB
 11703                           fsr2h	equ	0xFDA
 11704                           fsr2l	equ	0xFD9
 11705                           status	equ	0xFD8

Data Sizes:
    Strings     101
    Constant    0
    Data        0
    BSS         164
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM           95     94      94
    BANK0           160     96     160
    BANK1           256      0     100
    BANK2           256      0       0
    BANK3           256      0       0
    BANK4           256      0       0
    BANK5           256      0       0
    BANK6           256      0       0
    BANK7           256      0       0

Pointer List with Targets:

    strncmp@_r	PTR const unsigned char  size(2) Largest target is 3
		 -> STR_15(CODE[3]), 

    strncmp@r	PTR const unsigned char  size(2) Largest target is 3
		 -> STR_15(CODE[3]), 

    strncmp@_l	PTR const unsigned char  size(2) Largest target is 3
		 -> vfpfcnvrt@ct(BANK0[3]), 

    strncmp@l	PTR const unsigned char  size(2) Largest target is 3
		 -> vfpfcnvrt@ct(BANK0[3]), 

    strlen@s	PTR const unsigned char  size(2) Largest target is 80
		 -> dbuf(BANK1[80]), 

    strlen@a	PTR const unsigned char  size(2) Largest target is 80
		 -> dbuf(BANK1[80]), 

    strcpy@dest	PTR unsigned char  size(2) Largest target is 80
		 -> dbuf(BANK1[80]), 

    strcpy@d	PTR unsigned char  size(2) Largest target is 80
		 -> dbuf(BANK1[80]), 

    strcpy@src	PTR const unsigned char  size(2) Largest target is 80
		 -> STR_10(CODE[4]), STR_9(CODE[4]), STR_6(CODE[4]), STR_5(CODE[4]), 
		 -> dbuf(BANK1[80]), 

    strcpy@s	PTR const unsigned char  size(2) Largest target is 80
		 -> STR_10(CODE[4]), STR_9(CODE[4]), STR_6(CODE[4]), STR_5(CODE[4]), 
		 -> dbuf(BANK1[80]), 

    printf@fmt	PTR const unsigned char  size(2) Largest target is 23
		 -> STR_4(CODE[23]), STR_3(CODE[18]), STR_2(CODE[23]), Valores(BANK1[16]), 

    printf@ap	PTR void [1] size(2) Largest target is 2
		 -> ?_printf(BANK0[2]), ?_sprintf(BANK0[2]), 

    fputs@s	PTR const unsigned char  size(2) Largest target is 80
		 -> dbuf(BANK1[80]), 

    fputs@fp	PTR struct _IO_FILE size(2) Largest target is 7
		 -> NULL(NULL[0]), sprintf@f(COMRAM[6]), 

    fputc@fp.buffer	PTR unsigned char  size(2) Largest target is 16
		 -> Valores(BANK1[16]), 

    fputc@fp	PTR struct _IO_FILE size(2) Largest target is 7
		 -> NULL(NULL[0]), sprintf@f(COMRAM[6]), 

    atoi@s	PTR const unsigned char  size(2) Largest target is 23
		 -> STR_4(CODE[23]), STR_3(CODE[18]), STR_2(CODE[23]), STR_1(CODE[18]), 
		 -> Valores(BANK1[16]), 

    vfprintf@ap	PTR PTR void  size(2) Largest target is 2
		 -> printf@ap(COMRAM[2]), sprintf@ap(COMRAM[2]), 

    vfprintf@fp	PTR struct _IO_FILE size(2) Largest target is 7
		 -> NULL(NULL[0]), sprintf@f(COMRAM[6]), 

    vfprintf@fmt	PTR const unsigned char  size(2) Largest target is 23
		 -> STR_4(CODE[23]), STR_3(CODE[18]), STR_2(CODE[23]), STR_1(CODE[18]), 
		 -> Valores(BANK1[16]), 

    vfprintf@cfmt	PTR unsigned char  size(2) Largest target is 23
		 -> STR_4(CODE[23]), STR_3(CODE[18]), STR_2(CODE[23]), STR_1(CODE[18]), 
		 -> Valores(BANK1[16]), 

    vfpfcnvrt@vp	PTR void  size(2) Largest target is 2
		 -> ?_printf(BANK0[2]), ?_sprintf(BANK0[2]), 

    vfpfcnvrt@fp	PTR struct _IO_FILE size(2) Largest target is 7
		 -> NULL(NULL[0]), sprintf@f(COMRAM[6]), 

    vfpfcnvrt@ap	PTR PTR void  size(2) Largest target is 2
		 -> printf@ap(COMRAM[2]), sprintf@ap(COMRAM[2]), 

    vfpfcnvrt@fmt	PTR PTR unsigned char  size(2) Largest target is 2
		 -> vfprintf@cfmt(COMRAM[2]), 

    efgtoa@fp	PTR struct _IO_FILE size(2) Largest target is 7
		 -> NULL(NULL[0]), sprintf@f(COMRAM[6]), 

    sp__strcpy	PTR unsigned char  size(2) Largest target is 80
		 -> dbuf(BANK1[80]), 

    dtoa@fp	PTR struct _IO_FILE size(2) Largest target is 7
		 -> NULL(NULL[0]), sprintf@f(COMRAM[6]), 

    ctoa@fp	PTR struct _IO_FILE size(2) Largest target is 7
		 -> NULL(NULL[0]), sprintf@f(COMRAM[6]), 

    pad@fp	PTR struct _IO_FILE size(2) Largest target is 7
		 -> NULL(NULL[0]), sprintf@f(COMRAM[6]), 

    pad@buf	PTR unsigned char  size(2) Largest target is 80
		 -> dbuf(BANK1[80]), 

    sprintf@fmt	PTR const unsigned char  size(2) Largest target is 18
		 -> STR_1(CODE[18]), 

    sprintf@s	PTR unsigned char  size(2) Largest target is 16
		 -> Valores(BANK1[16]), 

    sprintf@ap	PTR void [1] size(2) Largest target is 2
		 -> ?_printf(BANK0[2]), ?_sprintf(BANK0[2]), 

    S1087_IO_FILE$buffer	PTR unsigned char  size(2) Largest target is 16
		 -> Valores(BANK1[16]), 

    f.buffer	PTR unsigned char  size(2) Largest target is 16
		 -> Valores(BANK1[16]), 


Critical Paths under _main in COMRAM

    _SensorLM35->_sprintf
    _sprintf->_vfprintf
    _LCD_COMANDOS->_Get_DATA
    _Get_DATA->_Set_DATA
    _InicializaLCD->_putcm
    _Alarma->_Cronometro
    _Mostrar_Reloj->_printf
    _printf->_vfprintf
    _vfprintf->_vfpfcnvrt
    _vfpfcnvrt->_dtoa
    _efgtoa->___flge
    _tolower->_isupper
    _floorf->___fldiv
    ___flsub->___flmul
    ___flmul->___xxtofl
    ___flge->___flmul
    ___awdiv->_Read_ADC
    _dtoa->_pad
    _pad->_fputs
    _fputs->_fputc
    _abs->___aomod
    _ctoa->_fputc
    _fputc->_putch
    _atoi->_isspace

Critical Paths under _main in BANK0

    _main->_SensorLM35
    _SensorLM35->_printf
    _Alarma->_printf
    _Mostrar_Reloj->_printf
    _vfprintf->_vfpfcnvrt
    _vfpfcnvrt->_efgtoa

Critical Paths under _main in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _main in BANK6

    None.

Critical Paths under _main in BANK7

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 0     0      0  174913
                             _Alarma
                         _Alarma_LED
                      _Configuracion
                      _InicializaLCD
                       _LCD_COMANDOS
                         _SensorLM35
                _Timer0Configuration
 ---------------------------------------------------------------------------------
 (1) _Timer0Configuration                                  0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _SensorLM35                                           2     2      0   86965
                                             94 BANK0      2     2      0
                           _Read_ADC
                            ___awdiv
                            ___flmul
                           ___xxtofl
                             _printf
                              _putcm
                            _sprintf
 ---------------------------------------------------------------------------------
 (2) _sprintf                                             20    10     10   41116
                                             84 COMRAM    10    10      0
                                             80 BANK0     10     0     10
                           _vfprintf
 ---------------------------------------------------------------------------------
 (2) ___xxtofl                                            14    10      4     398
                                              0 COMRAM    14    10      4
 ---------------------------------------------------------------------------------
 (2) _Read_ADC                                             5     3      2      22
                                              0 COMRAM     5     3      2
 ---------------------------------------------------------------------------------
 (1) _LCD_COMANDOS                                         1     1      0     132
                                              3 COMRAM     1     1      0
                           _Get_DATA
 ---------------------------------------------------------------------------------
 (2) _Get_DATA                                             2     2      0      88
                                              1 COMRAM     2     2      0
                           _Set_DATA
 ---------------------------------------------------------------------------------
 (3) _Set_DATA                                             1     1      0       0
                                              0 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (1) _InicializaLCD                                        1     1      0     134
                                              3 COMRAM     1     1      0
                              _putcm
 ---------------------------------------------------------------------------------
 (1) _Configuracion                                        0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _Alarma_LED                                           3     3      0      24
                                              0 COMRAM     3     3      0
 ---------------------------------------------------------------------------------
 (1) _Alarma                                               2     2      0   87658
                                             90 COMRAM     2     2      0
                         _Cronometro
                            ___awdiv
                            ___awmod
                             _printf
                              _putcm
 ---------------------------------------------------------------------------------
 (2) _Cronometro                                           2     2      0   43829
                                             88 COMRAM     2     2      0
                      _Mostrar_Reloj
 ---------------------------------------------------------------------------------
 (3) _Mostrar_Reloj                                        0     0      0   43829
                            ___awdiv
                            ___awmod
                             _printf
                              _putcm
 ---------------------------------------------------------------------------------
 (2) _putcm                                                3     3      0     134
                                              0 COMRAM     3     3      0
 ---------------------------------------------------------------------------------
 (2) _printf                                              18     4     14   41123
                                             84 COMRAM     4     4      0
                                             80 BANK0     14     0     14
                           _vfprintf
 ---------------------------------------------------------------------------------
 (3) _vfprintf                                             8     2      6   40751
                                             76 COMRAM     8     2      6
                          _vfpfcnvrt
 ---------------------------------------------------------------------------------
 (4) _vfpfcnvrt                                           49    43      6   40133
                                             66 COMRAM    10     4      6
                                             56 BANK0     24    24      0
                               _atoi
                               _ctoa
                               _dtoa
                             _efgtoa
                              _fputc
                            _isdigit
                            _isupper
                            _strncmp
                            _tolower
 ---------------------------------------------------------------------------------
 (5) _strncmp                                             11     5      6     453
                                              0 COMRAM    11     5      6
 ---------------------------------------------------------------------------------
 (5) _efgtoa                                              68    61      7   25320
                                             51 COMRAM    12     5      7
                                              0 BANK0     56    56      0
                            ___awdiv
                            ___awmod
                            ___fladd
                            ___fldiv
                             ___fleq
                             ___flge
                            ___flmul
                            ___flneg
                            ___flsub
                            ___fltol
                      ___fpclassifyf
                             _floorf
                            _isupper
                                _pad
                             _strcpy
                            _tolower
 ---------------------------------------------------------------------------------
 (5) _tolower                                              8     6      2     944
                                              6 COMRAM     8     6      2
                            _isupper
 ---------------------------------------------------------------------------------
 (6) _isupper                                              6     4      2     465
                                              0 COMRAM     6     4      2
 ---------------------------------------------------------------------------------
 (6) _strcpy                                              10     6      4     856
                                              0 COMRAM    10     6      4
 ---------------------------------------------------------------------------------
 (6) _floorf                                              20    16      4     490
                                             25 COMRAM    20    16      4
                            ___fldiv (ARG)
 ---------------------------------------------------------------------------------
 (6) ___fpclassifyf                                       14    10      4     287
                                              0 COMRAM    14    10      4
 ---------------------------------------------------------------------------------
 (6) ___fltol                                             10     6      4     381
                                              0 COMRAM    10     6      4
 ---------------------------------------------------------------------------------
 (6) ___flsub                                              8     0      8    2889
                                             39 COMRAM     8     0      8
                            ___fladd
                            ___flmul (ARG)
 ---------------------------------------------------------------------------------
 (7) ___fladd                                             16     8      8    2414
                                              0 COMRAM    16     8      8
 ---------------------------------------------------------------------------------
 (6) ___flneg                                              4     0      4     121
                                              0 COMRAM     4     0      4
 ---------------------------------------------------------------------------------
 (6) ___flmul                                             25    17      8    2808
                                             14 COMRAM    25    17      8
                           ___xxtofl (ARG)
 ---------------------------------------------------------------------------------
 (6) ___flge                                              12     4      8     790
                                             39 COMRAM    12     4      8
                            ___flmul (ARG)
 ---------------------------------------------------------------------------------
 (6) ___fleq                                              12     4      8     646
                                              0 COMRAM    12     4      8
 ---------------------------------------------------------------------------------
 (6) ___fldiv                                             25    17      8    2007
                                              0 COMRAM    25    17      8
 ---------------------------------------------------------------------------------
 (6) ___awmod                                              6     2      4    1208
                                              0 COMRAM     6     2      4
 ---------------------------------------------------------------------------------
 (6) ___awdiv                                              8     4      4    1364
                                              5 COMRAM     8     4      4
                           _Read_ADC (ARG)
 ---------------------------------------------------------------------------------
 (5) _dtoa                                                36    26     10    6222
                                             30 COMRAM    36    26     10
                            ___aodiv
                            ___aomod
                                _abs
                                _pad
 ---------------------------------------------------------------------------------
 (6) _pad                                                 11     5      6    4573
                                             19 COMRAM    11     5      6
                              _fputc
                              _fputs
                             _strlen
 ---------------------------------------------------------------------------------
 (7) _strlen                                               4     2      2     166
                                              0 COMRAM     4     2      2
 ---------------------------------------------------------------------------------
 (7) _fputs                                                7     3      4    1825
                                             12 COMRAM     7     3      4
                              _fputc
 ---------------------------------------------------------------------------------
 (6) _abs                                                  4     2      2     142
                                             18 COMRAM     4     2      2
                            ___aomod (ARG)
 ---------------------------------------------------------------------------------
 (6) ___aomod                                             18     2     16     448
                                              0 COMRAM    18     2     16
 ---------------------------------------------------------------------------------
 (6) ___aodiv                                             26    10     16     452
                                              0 COMRAM    26    10     16
 ---------------------------------------------------------------------------------
 (5) _ctoa                                                 8     5      3    1779
                                             12 COMRAM     8     5      3
                              _fputc
 ---------------------------------------------------------------------------------
 (5) _fputc                                                9     5      4    1424
                                              3 COMRAM     9     5      4
                              _putch
 ---------------------------------------------------------------------------------
 (6) _putch                                                3     3      0     134
                                              0 COMRAM     3     3      0
 ---------------------------------------------------------------------------------
 (5) _atoi                                                15    13      2    1488
                                              7 COMRAM    15    13      2
                             ___wmul
                            _isdigit
                            _isspace
 ---------------------------------------------------------------------------------
 (6) _isspace                                              7     5      2     207
                                              0 COMRAM     7     5      2
 ---------------------------------------------------------------------------------
 (5) _isdigit                                              6     4      2     313
                                              0 COMRAM     6     4      2
 ---------------------------------------------------------------------------------
 (6) ___wmul                                               6     2      4     495
                                              0 COMRAM     6     2      4
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 7
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _Alarma
     _Cronometro
       _Mostrar_Reloj
         ___awdiv
           _Read_ADC (ARG)
         ___awmod
         _printf
           _vfprintf
             _vfpfcnvrt
               _atoi
                 ___wmul
                 _isdigit
                 _isspace
               _ctoa
                 _fputc
                   _putch
               _dtoa
                 ___aodiv
                 ___aomod
                 _abs
                   ___aomod (ARG)
                 _pad
                   _fputc
                     _putch
                   _fputs
                     _fputc
                       _putch
                   _strlen
               _efgtoa
                 ___awdiv
                   _Read_ADC (ARG)
                 ___awmod
                 ___fladd
                 ___fldiv
                 ___fleq
                 ___flge
                   ___flmul (ARG)
                     ___xxtofl (ARG)
                 ___flmul
                   ___xxtofl (ARG)
                 ___flneg
                 ___flsub
                   ___fladd
                   ___flmul (ARG)
                     ___xxtofl (ARG)
                 ___fltol
                 ___fpclassifyf
                 _floorf
                   ___fldiv (ARG)
                 _isupper
                 _pad
                   _fputc
                     _putch
                   _fputs
                     _fputc
                       _putch
                   _strlen
                 _strcpy
                 _tolower
                   _isupper
               _fputc
                 _putch
               _isdigit
               _isupper
               _strncmp
               _tolower
                 _isupper
         _putcm
     ___awdiv
       _Read_ADC (ARG)
     ___awmod
     _printf
       _vfprintf
         _vfpfcnvrt
           _atoi
             ___wmul
             _isdigit
             _isspace
           _ctoa
             _fputc
               _putch
           _dtoa
             ___aodiv
             ___aomod
             _abs
               ___aomod (ARG)
             _pad
               _fputc
                 _putch
               _fputs
                 _fputc
                   _putch
               _strlen
           _efgtoa
             ___awdiv
               _Read_ADC (ARG)
             ___awmod
             ___fladd
             ___fldiv
             ___fleq
             ___flge
               ___flmul (ARG)
                 ___xxtofl (ARG)
             ___flmul
               ___xxtofl (ARG)
             ___flneg
             ___flsub
               ___fladd
               ___flmul (ARG)
                 ___xxtofl (ARG)
             ___fltol
             ___fpclassifyf
             _floorf
               ___fldiv (ARG)
             _isupper
             _pad
               _fputc
                 _putch
               _fputs
                 _fputc
                   _putch
               _strlen
             _strcpy
             _tolower
               _isupper
           _fputc
             _putch
           _isdigit
           _isupper
           _strncmp
           _tolower
             _isupper
     _putcm
   _Alarma_LED
   _Configuracion
   _InicializaLCD
     _putcm
   _LCD_COMANDOS
     _Get_DATA
       _Set_DATA
   _SensorLM35
     _Read_ADC
     ___awdiv
       _Read_ADC (ARG)
     ___flmul
       ___xxtofl (ARG)
     ___xxtofl
     _printf
       _vfprintf
         _vfpfcnvrt
           _atoi
             ___wmul
             _isdigit
             _isspace
           _ctoa
             _fputc
               _putch
           _dtoa
             ___aodiv
             ___aomod
             _abs
               ___aomod (ARG)
             _pad
               _fputc
                 _putch
               _fputs
                 _fputc
                   _putch
               _strlen
           _efgtoa
             ___awdiv
               _Read_ADC (ARG)
             ___awmod
             ___fladd
             ___fldiv
             ___fleq
             ___flge
               ___flmul (ARG)
                 ___xxtofl (ARG)
             ___flmul
               ___xxtofl (ARG)
             ___flneg
             ___flsub
               ___fladd
               ___flmul (ARG)
                 ___xxtofl (ARG)
             ___fltol
             ___fpclassifyf
             _floorf
               ___fldiv (ARG)
             _isupper
             _pad
               _fputc
                 _putch
               _fputs
                 _fputc
                   _putch
               _strlen
             _strcpy
             _tolower
               _isupper
           _fputc
             _putch
           _isdigit
           _isupper
           _strncmp
           _tolower
             _isupper
     _putcm
     _sprintf
       _vfprintf
         _vfpfcnvrt
           _atoi
             ___wmul
             _isdigit
             _isspace
           _ctoa
             _fputc
               _putch
           _dtoa
             ___aodiv
             ___aomod
             _abs
               ___aomod (ARG)
             _pad
               _fputc
                 _putch
               _fputs
                 _fputc
                   _putch
               _strlen
           _efgtoa
             ___awdiv
               _Read_ADC (ARG)
             ___awmod
             ___fladd
             ___fldiv
             ___fleq
             ___flge
               ___flmul (ARG)
                 ___xxtofl (ARG)
             ___flmul
               ___xxtofl (ARG)
             ___flneg
             ___flsub
               ___fladd
               ___flmul (ARG)
                 ___xxtofl (ARG)
             ___fltol
             ___fpclassifyf
             _floorf
               ___fldiv (ARG)
             _isupper
             _pad
               _fputc
                 _putch
               _fputs
                 _fputc
                   _putch
               _strlen
             _strcpy
             _tolower
               _isupper
           _fputc
             _putch
           _isdigit
           _isupper
           _strncmp
           _tolower
             _isupper
   _Timer0Configuration

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             7FF      0       0      21        0.0%
EEDATA             100      0       0       0        0.0%
BITBANK7           100      0       0      19        0.0%
BANK7              100      0       0      20        0.0%
BITBANK6           100      0       0      17        0.0%
BANK6              100      0       0      18        0.0%
BITBANK5           100      0       0      15        0.0%
BANK5              100      0       0      16        0.0%
BITBANK4           100      0       0      13        0.0%
BANK4              100      0       0      14        0.0%
BITBANK3           100      0       0      11        0.0%
BANK3              100      0       0      12        0.0%
BITBANK2           100      0       0       9        0.0%
BANK2              100      0       0      10        0.0%
BITBANK1           100      0       0       7        0.0%
BANK1              100      0      64       8       39.1%
BITBANK0            A0      0       0       4        0.0%
BANK0               A0     60      A0       5      100.0%
BITCOMRAM           5F      0       0       0        0.0%
COMRAM              5F     5E      5E       1       98.9%
BITSFR_1             0      0       0     200        0.0%
SFR_1                0      0       0     200        0.0%
BITSFR               0      0       0     200        0.0%
SFR                  0      0       0     200        0.0%
STACK                0      0       0       2        0.0%
NULL                 0      0       0       0        0.0%
ABS                  0      0     162       6        0.0%
DATA                 0      0     162       3        0.0%
CODE                 0      0       0       0        0.0%


Microchip Technology PIC18 Macro Assembler V2.31 build 20201012212115 
Symbol Table                                                                                   Wed Apr 21 15:28:43 2021

                ___fldiv@aexp 0019                  ___fldiv@bexp 0018                  ___fldiv@sign 0011  
                          _DH 00E2                            _DM 00DE                            _DS 00DA  
                          _UH 00E0                            _UM 00DC                            _US 00D8  
                ___awdiv@sign 000B           ___wmul@multiplicand 0003                ??_LCD_COMANDOS 0004  
                         l111 449E                           l120 4500                           l114 48FA  
                         l123 499A                           l132 43BA                           l108 447E  
                         l141 3C44                           l117 49AE                 _InicializaLCD 4334  
                         l126 4730                           l150 2EE4                           l135 3D22  
                         l305 374A                           l129 47B6                           l153 2F2E  
                         l138 4982                           l147 41D8                           l164 38EC  
                         l422 4288                           l159 30B2                           l167 3954  
                         _ADC 00FE                           l409 4124                           l178 4946  
                         l443 3A12                           l292 35E6                           l452 4866  
                         l437 4332                           l448 3A58                           l801 252A  
                         l802 2518                           l706 1F26                           l723 2040  
                         l715 21F6                           l707 1F14                           l475 3850  
                         l732 2110                           l708 1EDA                           l733 20FE  
                         l902 4024                           l920 3DFA                           l904 4060  
                         l760 29BA                           l840 339A                           l809 25E2  
                         l833 3302                           l762 281A                           l915 3D8A  
                         l771 2860                           l748 46EA                           l836 345E  
                         l773 28D8                           l765 27DE                           l918 3DCC  
                         l926 2A5C                           l774 28C6                           l847 33F6  
                         l928 2A64                           l792 22BC                           l856 465E  
                         l946 2C9E                           l796 2620                           l964 14BE  
                         l982 0C54                           l799 24B2                           l899 3FE2  
                         _abs 47B8                           _pad 3F9C                  ___awmod@sign 0006  
                         wreg 000FE8                  ___flmul@aexp 0020                  ___flmul@bexp 0021  
                ___flmul@sign 001B                  ___flmul@temp 0026                  ___flmul@prod 0022  
                ___fltol@exp1 000A                          l1010 1094                          l1100 47EE  
                        l1103 47F6                          l1200 45BC                          l1210 3ED0  
                        l1131 32A2                          ?_abs 0013                          l1140 2EB0  
                        l1220 4558                          l1150 489E                          l1134 32AA  
                        l1206 48D4                          l1143 2DF4                          l1225 4560  
                        l1066 1D36                          l3100 3EE4                          l1164 482E  
                        l1084 4428                          l1077 1BD8                          l1085 4430  
                        l1158 460E                          l3102 3EF6                          l1095 3B56  
                        l3104 3F00                          l4000 29BC                          l3200 1EE8  
                        l3120 1D64                          l3112 1D38                          l3106 3F1E  
                        l4010 2A36                          l4002 29DC                          l3210 1F12  
                        l3202 1EF4                          l3130 1D9E                          l3122 1D74  
                        l3114 1D44                          l1194 4920                          l1179 3F9A  
                        l1187 4774                          l3108 3F54                          l4020 2A92  
                        l4012 2A50                          l4004 2A04                          l3300 21C8  
                        l3220 1F68                          l3212 1F34                          l3204 1EF8  
                        l3140 1DCC                          l3132 1DA4                          l3124 1D84  
                        l3116 1D52                          l4100 0990                          l4030 2B32  
                        l4022 2A9A                          l4014 2A6C                          l4006 2A24  
                        l3310 21E6                          l3302 21CE                          l3230 1FA2  
                        l3222 1F76                          l3214 1F44                          l3206 1F06  
                        l3150 1E00                          l3142 1DCE                          l3134 1DB6  
                        l3126 1D86                          l3118 1D54                          l4102 09AC  
                        l4110 09F6                          l3400 366A                          l3320 4754  
                        l4040 2BEE                          l4032 2B38                          l4024 2AA4  
                        l4016 2A7E                          l4008 2A34                          l3304 21D0  
                        l3240 200E                          l3232 1FA4                          l3224 1F84  
                        l3208 1F08                          l3160 1E3C                          l3144 1DDE  
                        l3152 1E08                          l3136 1DB8                          l3128 1D8E  
                        l4200 0D8A                          l4120 0A80                          l4112 0A1C  
                        l4104 09C4                          l3090 4702                          l3410 36E2  
                        l3402 3672                          l3314 4732                          l3322 48A0  
                        l4050 2C40                          l4042 2C08                          l4026 2AAA  
                        l4034 2B9C                          l4018 2A8C                          l3306 21D6  
                        l3250 2066                          l3242 2010                          l3234 1FAE  
                        l3226 1F90                          l3218 1F58                          l3170 1E50  
                        l3162 1E40                          l3154 1E18                          l3146 1DEE  
                        l3138 1DBE                          l4202 0D9E                          l4210 0E94  
                        l4130 0AB6                          l4106 09CE                          l3092 4716  
                        l3412 36F4                          l3404 3686                          l3316 473E  
                        l3324 48AC                          l4052 2C52                          l4036 2BB6  
                        l4044 2C18                          l4028 2B2C                          l3500 2806  
                        l3308 21E4                          l3260 2094                          l3244 2020  
                        l3228 1F94                          l3236 1FB4                          l3180 1E64  
                        l3172 1E54                          l3164 1E44                          l3156 1E2A  
                        l3148 1DFE                          l3332 47F8                          l4300 12E4  
                        l4220 0F60                          l4212 0EB2                          l4204 0E02  
                        l4140 0B80                          l4116 0A52                          l3094 471C  
                        l3086 46EE                          l3350 3496                          l3342 3460  
                        l3406 3694                          l3414 36FA                          l3318 4750  
                        l3326 48B0                          l4054 2C5E                          l4046 2C2A  
                        l4038 2BD4                          l3510 2846                          l3502 2808  
                        l3430 264E                          l3422 2622                          l3262 20A2  
                        l3254 207A                          l3270 20C0                          l3238 1FDA  
                        l3246 2030                          l3182 1E68                          l3174 1E58  
                        l3166 1E48                          l3158 1E38                          l3190 1E78  
                        l4310 1322                          l4302 12F4                          l4230 1010  
                        l4222 0F70                          l4214 0EE6                          l4206 0E5A  
                        l4150 0C02                          l4142 0BB4                          l4134 0AEC  
                        l4118 0A64                          l4070 0898                          l4062 0868  
                        l3336 4922                          l3096 472A                          l3088 46FA  
                        l3360 34F2                          l3352 34A4                          l3344 3464  
                        l3416 370A                          l3408 36C2                          l3328 48C8  
                        l4056 2C66                          l4048 2C3A                          l3520 2882  
                        l3512 2850                          l3504 2818                          l3440 2688  
                        l3432 265E                          l3424 262E                          l3600 22F0  
                        l3264 20AA                          l3256 2084                          l3248 2056  
                        l3272 20CE                          l3192 1E7C                          l3184 1E6C  
                        l3176 1E5C                          l3168 1E4C                          l4320 1358  
                        l4312 1332                          l4304 12F8                          l4240 1080  
                        l4232 1044                          l4224 0F80                          l4216 0F18  
                        l4208 0E8E                          l4152 0C14                          l4160 0C60  
                        l4144 0BBC                          l4136 0B20                          l4128 0A9C  
                        l4080 08EE                          l4072 08BC                          l4064 0872  
                        l3338 493E                          l4402 3262                          l3098 3ED2  
                        l3370 355C                          l3362 34FA                          l3354 34C4  
                        l3346 3472                          l3418 372A                          l4058 2C76  
                        l3530 28F4                          l3522 2890                          l3514 285E  
                        l3506 282A                          l3450 26B4                          l3442 268E  
                        l3434 266E                          l3426 263C                          l3610 2340  
                        l3602 22FC                          l3282 2120                          l3290 2176  
                        l3274 20D2                          l3266 20AE                          l3258 2092  
                        l3194 1EA6                          l3186 1E70                          l3178 1E60  
                        l4330 13B4                          l4322 1364                          l4314 133A  
                        l4306 1308                          l4250 1136                          l4242 108C  
                        l4234 1058                          l4226 0FB4                          l4218 0F2E  
                        l4170 0CA0                          l4154 0C26                          l4138 0B26  
                        l4146 0BEE                          l4090 091C                          l4082 0900  
                        l4074 08C6                          l4066 0882                          l4404 3274  
                        l3380 35A6                          l3372 357C                          l3364 350E  
                        l3356 34C8                          l3348 3492                          l3700 4074  
                        l3540 2960                          l3532 2902                          l3524 28BE  
                        l3508 2840                          l3516 2870                          l3460 26EE  
                        l3452 26C4                          l3444 2694                          l3436 2670  
                        l3428 263E                          l3620 2382                          l3612 234C  
                        l3604 2306                          l3292 2186                          l3284 212C  
                        l3276 20E0                          l3268 20BE                          l3196 1EC2  
                        l3188 1E74                          l4340 13FE                          l4324 136A  
                        l4332 13BA                          l4316 1348                          l4308 131A  
                        l4260 117E                          l4252 1148                          l4244 10B0  
                        l4228 100A                          l4236 105C                          l4180 0CFC  
                        l4172 0CD6                          l4156 0C2E                          l4148 0BFE  
                        l4084 090C                          l4092 0922                          l4076 08CE  
                        l4068 0890                          l4420 3E40                          l4412 3DFC  
                        l4500 1974                          l4406 3286                          l3382 35C6  
                        l3374 357E                          l3366 351C                          l3358 34D4  
                        l3390 35FA                          l3710 409A                          l3702 407C  
                        l3550 29AE                          l3542 297A                          l3534 292C  
                        l3518 287E                          l3462 2704                          l3454 26D4  
                        l3446 26A2                          l3438 2678                          l3630 23E4  
                        l3622 238E                          l3614 2358                          l3606 231C  
                        l3294 2196                          l3286 213A                          l3278 20F6  
                        l3198 1ED2                          l4350 142E                          l4342 140A  
                        l4334 13CC                          l4326 1390                          l4318 1350  
                        l4270 11B4                          l4262 118E                          l4254 1156  
                        l4246 1114                          l4238 106C                          l4190 0D40  
                        l4182 0D0E                          l4174 0CDE                          l4166 0C72  
                        l4158 0C48                          l4094 0948                          l4086 0914  
                        l4078 08E0                          l4422 3E58                          l4414 3E26  
                        l4510 1A34                          l4502 19BE                          l3376 3590  
                        l3368 352E                          l3392 361A                          l3720 40D2  
                        l3712 40A2                          l3704 4080                          l3552 29B0  
                        l3544 2996                          l3528 28E8                          l3536 2930  
                        l3480 2758                          l3464 2714                          l3472 2734  
                        l3456 26D6                          l3448 26A4                          l3800 39D2  
                        l3640 247A                          l3632 23F0                          l3624 239E  
                        l3616 2366                          l3608 2328                          l3560 21F8  
                        l3296 21B6                          l3288 2174                          l4360 1488  
                        l4344 1412                          l4336 13E6                          l4328 13AC  
                        l4280 11E8                          l4272 11B8                          l4264 1192  
                        l4248 1124                          l4256 115E                          l4192 0D58  
                        l4184 0D1C                          l4168 0C84                          l4176 0CE2  
                        l4088 0918                          l4424 3E74                          l4520 1ACC  
                        l4512 1A42                          l4440 151A                          l4432 14C0  
                        l4370 30B4                          l3378 3596                          l3394 361E  
                        l3386 35E8                          l3730 40FE                          l3722 40D8  
                        l3714 40B4                          l3706 408E                          l3546 299A  
                        l3538 294A                          l3490 27AA                          l3482 2772  
                        l3474 2744                          l3466 271C                          l3458 26DE  
                        l3810 3A56                          l3802 39E0                          l3650 24D0  
                        l3642 2498                          l3634 240C                          l3626 23B8  
                        l3618 2372                          l3570 2234                          l3562 2204  
                        l3298 21BA                          l4362 1498                          l4354 1462  
                        l4346 1422                          l4338 13EC                          l4290 1286  
                        l4282 11EC                          l4274 11BE                          l4266 1198  
                        l4258 1170                          l4194 0D6A                          l4186 0D20  
                        l4178 0CEA                          l4098 097E                          l4426 3E86  
                        l4418 3E32                          l4514 1A72                          l4506 19F6  
                        l4450 15C4                          l4442 1550                          l4434 14F6  
                        l4602 3B58                          l4380 314A                          l4372 30C8  
                        l3396 362C                          l3388 35EC                          l3724 40EE  
                        l3716 40BC                          l3732 4104                          l3708 4096  
                        l3740 41DA                          l3548 29A8                          l3492 27BA  
                        l3484 2782                          l3476 2744                          l3468 2720  
                        l3804 39F2                          l3660 253A                          l3652 24D4  
                        l3644 24A2                          l3636 2436                          l3628 23C8  
                        l3580 2266                          l3572 2244                          l3564 2212  
                        l3900 3AEC                          l4364 149E                          l4356 1474  
                        l4348 1428                          l4268 11A4                          l4276 11C4  
                        l4284 11F2                          l4292 128A                          l4188 0D32  
                        l4196 0D72                          l4428 3EAE                          l4540 1C68  
                        l4524 1B62                          l4508 1A0A                          l4460 1674  
                        l4452 15D2                          l4444 1586                          l4436 1504  
                        l4604 3C06                          l4620 448C                          l4612 4454  
                        l4700 3384                          l4390 3172                          l4382 314E  
                        l4374 30CC                          l3398 364C                          l3734 4114  
                        l3726 40F6                          l3718 40C4                          l3750 4206  
                        l3742 41DE                          l3494 27CE                          l3486 2792  
                        l3806 3A00                          l3670 259C                          l3662 2546  
                        l3654 24E2                          l3646 24B0                          l3638 246C  
                        l3590 22A6                          l3582 2274                          l3574 224A  
                        l3566 2214                          l3814 4830                          l3830 37A0  
                        l3822 374C                          l3910 3B4E                          l4358 1480  
                        l4294 12A8                          l4286 124A                          l4278 11D6  
                        l4198 0D7A                          l4550 1CCC                          l4526 1B74  
                        l4534 1BEC                          l4518 1A9E                          l4470 171C  
                        l4462 167E                          l4446 1596                          l4438 1516  
                        l4630 44AC                          l4614 4476                          l4606 4434  
                        l4710 3404                          l4702 3390                          ?_pad 0014  
                        l4392 317A                          l4376 30D0                          l3736 411C  
                        l3728 40F8                          l3760 423E                          l3752 420E  
                        l3744 41EC                          l3496 27DC                          l3488 27A2  
                        l3808 3A50                          l3680 2604                          l3672 25B0  
                        l3664 2554                          l3656 2510                          l3648 24C2  
                        l3592 22AC                          l3584 2276                          l3576 225A  
                        l3568 2224                          l3816 4846                          l3832 37A2  
                        l3824 3762                          l3904 3AF8                          l4296 12C4  
                        l4288 127E                          l4536 1C22                          l4544 1C74  
                        l4528 1BA8                          l4480 17CE                          l4472 172A  
                        l4464 168C                          l4456 162C                          l4448 15A4  
                        l4560 1CEA                          l4800 2EC2                          l4632 44C2  
                        l4616 447A                          l4608 444C                          l4720 344C  
                        l4712 3406                          l4704 33CC                          l4640 4610  
                        l4394 31C2                          l4386 3154                          l4378 3100  
                        l3770 4278                          l3762 4254                          l3754 4220  
                        l3746 41F4                          l3498 27E8                          l3682 2606  
                        l3674 25CA                          l3666 257E                          l3594 22CC  
                        l3586 2286                          l3578 2260                          l3818 4856  
                        l3690 46A6                          l3834 37B2                          l3906 3B0A  
                        l3930 2CC0                          l3914 4562                          l3922 4538  
                        l4298 12D6                          l4562 1D24                          l4546 1CAA  
                        l4554 1CD8                          l4538 1C58                          l4490 18B8  
                        l4482 17DE                          l4466 16C2                          l4458 163E  
                        l4570 43C4                          l4810 2EFC                          l4802 2ED8  
                        l4730 48E0                          l4634 44DE                          l4618 447C  
                        l4722 344E                          l4714 340A                          l4706 33D8  
                        l4642 4620                          l4388 316A                          l3772 4280  
                        l3764 425C                          l3756 4228                          l3748 41F8  
                        l3780 42C8                          l3676 25E6                          l3684 260C  
                        l3668 2582                          l3596 22DC                          l3588 2296  
                        l3692 46B6                          l3860 3830                          l3844 37DC  
                        l3836 37B6                          l3828 3776                          l3940 2DA8  
                        l3932 2D16                          l3916 4572                          l3924 454A  
                        l4548 1CB8                          l4492 18EC                          l4484 1828  
                        l4476 1784                          l4468 16FC                          l4572 43D2  
                        l4580 478C                          l4660 415C                          l4652 4126  
                        l4820 2F3C                          l4812 2F02                          l4804 2EDA  
                        l4740 48EC                          l4732 48E4                          l4636 44FC  
                        l4628 44A2                          l4716 342E                          l4708 33E6  
                        l4644 4628                          l4900 469A                          l4398 3210  
                        l3870 3FC0                          l3766 4262                          l3758 4230  
                        l3782 42F6                          l3686 2610                          l3678 25F6  
                        l3862 3840                          l3854 3804                          l3846 37E6  
                        l3838 37C4                          l3950 2E90                          l3942 2DE4  
                        l3934 2D2A                          l3918 4502                          l4486 1838  
                        l4478 1796                          l4574 43F8                          l4590 4904  
                        l4582 4790                          l4670 41B4                          l4662 4168  
                        l4654 412A                          l4822 2F74                          l4830 2FBC  
                        l4814 2F10                          l4806 2EDC                          l4734 48E6  
                        l4726 48D6                          l4750 4342                          l4742 4986  
                        l4718 343E                          l4646 4630                          l3960 45BE  
                        l3880 4006                          l3872 3FCE                          l3696 4062  
                        l3768 4268                          l3784 4306                          l3776 428A  
                        l3792 3956                          l3856 3810                          l3848 37F0  
                        l3952 2EA0                          l3936 2D38                          l3944 2E18  
                        l3928 2CA0                          l4496 1908                          l4488 1882  
                        l4568 43BC                          l4584 47AA                          l4576 4778  
                        l4664 4184                          l4672 41BC                          l4656 4138  
                        l4840 3042                          l4832 2FCA                          l4824 2F8A  
                        l4816 2F26                          l4808 2EE6                          l4736 48E8  
                        l4728 48D8                          l4760 4384                          l4752 4348  
                        l4744 4988                          l4680 32AE                          l4648 464C  
                        l3962 45C2                          l3890 47D2                          l3882 4034  
                        l3874 3FDA                          l3866 3F9C                          l3698 4066  
                        l3786 432A                          l3778 42B8                          l3794 3984  
                        l3858 3820                          l3946 2E54                          l4498 193E  
                        l4586 47B2                          l4578 4784                          l4674 41BE  
                        l4666 418C                          l4658 4154                          l4850 30AE  
                        l4834 3002                          l4842 304A                          l4826 2F98  
                        l4818 2F28                          l4738 48EA                          l4762 4398  
                        l4754 435C                          l4594 499C                          l4682 32BE  
                        l4770 3C7A                          l3956 4868                          l3964 45D6  
                        l3980 3D5E                          l3972 3D24                          l3884 4048  
                        l3876 3FEE                          l3868 3FAC                          l3788 4330  
                        l3796 3994                          l3892 3A5A                          l3948 2E68  
                        l4588 48FC                          l4676 41C0                          l4668 4198  
                        l4852 30B0                          l4844 3050                          l4836 3018  
                        l4828 2FB4                          l4860 389C                          l4764 43A6  
                        l4756 436A                          l4748 4334                          l4596 499E  
                        l4692 333C                          l4684 32CC                          l4772 3CC6  
                        l4780 496A                          l3966 4604                          l3990 3DAA  
                        l3982 3D70                          l3974 3D38                          l3878 4002  
                        l3798 39C2                          l3894 3A7A                          l4678 41C2  
                        l4838 3026                          l4846 308E                          l4870 3906  
                        l4862 38B4                          l4854 3852                          l4758 437E  
                        l4598 49AC                          l4942 4468                          l4694 3344  
                        l4686 3312                          l4774 3CCC                          l4766 3C46  
                        l4790 497C                          l4782 4972                          l3968 4608  
                        l4944 31AC                          l3992 3DAE                          l3976 3D44  
                        l3888 47B8                          l3896 3AB8                          l4848 309C  
                        l4880 393C                          l4872 390A                          l4864 38CC  
                        l4856 386C                          l4696 3350                          l4688 3328  
                        l4776 3CFA                          l4768 3C68                          l4792 497E  
                        l4784 4976                          l3994 3DDC                          l3986 3D82  
                        l3978 3D50                          l3898 3AE0                          l4874 3922  
                        l4866 38E4                          l4858 3884                          l4698 3382  
                        l4778 3D14                          l4794 4980                          l4786 4978  
                        l4890 4678                          l4882 4660                          l3996 3DEE  
                        l3988 3D96                          l4796 2EB2                          l4868 38EE  
                        l4876 3924                          l4788 497A                          l4892 4682  
                        l4884 4668                          l4798 2EC0                          l4878 3938  
                        l4894 468A                          l4886 466C                          l4896 4692  
                        l4888 4672                          l4898 4696                          STR_1 0841  
                        STR_2 0801                          STR_3 082F                          STR_4 0818  
                        STR_5 0853                          STR_6 085B                          STR_9 0857  
                        _LATB 000F8A                          u4000 28BE                          _LATD 000F8C  
                        u4001 28BA                          u4010 28D4                          u4011 28D0  
                        u4020 28E8                          u4100 2274                          u3300 1D74  
                        u4021 28E4                          u4101 2270                          u3301 1D70  
                        u4030 2902                          u4110 2286                          u3310 1DB6  
                        u4031 28FE                          u4111 2282                          u3311 1DB2  
                        u3240 3EE4                          u5000 2C08                          u4040 294A  
                        u4200 2526                          u4120 2296                          u3400 1EE8  
                        u3320 1DCC                          u3241 3EE0                          u5001 2C04  
                        u4041 2946                          u4201 2522                          u4121 2292  
                        u3401 1EE4                          u3321 1DC8                          u3250 3EF6  
                        u5010 2C18                          u4050 297A                          u4210 253A  
                        u4130 22CC                          u3410 1F06                          u3330 1DDE  
                        u3251 3EF2                          u5011 2C14                          u4051 2976  
                        u4211 2536                          u4131 22C8                          u3411 1F02  
                        u3331 1DDA                          u3260 3F1E                          u5020 2C2A  
                        u4300 40EE                          u4060 29A8                          u4220 2554  
                        u4140 22DC                          u3500 2056                          u3420 1F26  
                        u3340 1DEE                          u5100 0976                          u3261 3F1A  
                        u5021 2C26                          u4301 40EA                          u4061 29A4  
                        u4221 2550                          u4141 22D8                          u3501 2052  
                        u3421 1F22                          u3341 1DEA                          u5101 0970  
                        u3270 3F54                          u5030 2C3A                          u4310 4114  
                        u4230 259C                          u4150 2456                          u4070 2212  
                        u3510 2066                          u3430 1F34                          u3350 1E2A  
                        u5110 0978                          u3271 3F50                          u5031 2C36  
                        u4311 4110                          u4231 2598                          u4071 220E  
                        u3511 2062                          u3431 1F30                          u3351 1E26  
                        u5040 2C52                          u4320 41EC                          u4400 432A  
                        u4240 25CA                          u4160 24B0                          u4080 2224  
                        u3600 213A                          u3520 2092                          u3440 1F44  
                        u3360 1E38                          u3280 1D52                          u5200 0C14  
                        u5120 0990                          u6000 192E                          u5041 2C4E  
                        u4321 41E8                          u4401 4326                          u4241 25C6  
                        u4161 24AC                          u4081 2220                          u3601 2136  
                        u3521 208E                          u3441 1F40                          u3361 1E34  
                        u3281 1D4E                          u5201 0C10                          u5121 098C  
                        _HORA 00E8                          u4330 4206                          u4410 3984  
                        u4250 2604                          u4170 24D0                          u4090 2234  
                        u3610 2174                          u3530 20A2                          u3450 1F76  
                        u3370 1EA6                          u3290 1D64                          u5210 0C26  
                        u5130 0A1C                          u5050 0890                          u6010 193E  
                        u4331 4202                          u4411 3980                          u4251 2600  
                        u4171 24CC                          u4155 244C                          u4091 2230  
                        u3611 2170                          u3531 209E                          u3451 1F72  
                        u3371 1EA2                          u3291 1D60                          u5211 0C22  
                        u5131 0A18                          u5051 088C                          u6011 193A  
                        u4260 4074                          u4340 4220                          u4420 39C2  
                        u4180 24E2                          u3620 2186                          u3540 20BE  
                        u3460 1F84                          u3380 1EBE                          u4500 37D8  
                        u3700 482A                          u5300 0D32                          u5220 0C48  
                        u5140 0A4A                          u5060 08E0                          u6100 1B5C  
                        u6020 1964                          u4261 4070                          u4341 421C  
                        u4421 39BE                          u4181 24DE                          u3621 2182  
                        u3541 20BA                          u3461 1F80                          u3381 1EB8  
                        u4501 37D4                          u5301 0D2E                          u5221 0C44  
                        u5141 0A44                          u5061 08DC                          u3710 3472  
                        u4270 408E                          u4350 423E                          u4430 39E0  
                        u4190 2510                          u3630 2196                          u3550 20CE  
                        u3470 1FA2                          u3390 1EC0                          u4510 3800  
                        u5310 0D40                          u5230 0C6E                          u5150 0A4C  
                        u5070 08EE                          u6110 1B74                          u6030 1974  
                        u3711 346E                          u4271 408A                          u4351 423A  
                        u4431 39DC                          u4191 250C                          u3631 2192  
                        u3551 20CA                          u3471 1F9E                          u4511 37FC  
                        u5311 0D3C                          u5231 0C6A                          u5071 08EA  
                        u6111 1B70                          u6031 1970                          u6007 1924  
                        u3720 34A4                          u3800 366A                          u4280 40B4  
                        u4360 4254                          u4440 3A00                          u3640 21B6  
                        u3560 20E0                          u3480 1FDA                          u4520 3820  
                        u4600 3AB8                          u5400 1124                          u5320 0D6A  
                        u5240 0C84                          u5160 0A64                          u5080 0900  
                        u6120 1C12                          u6040 1A0A                          u3721 34A0  
                        u3801 3666                          u4281 40B0                          u4361 4250  
                        u4441 39FC                          u3641 21B2                          u3561 20DC  
                        u3481 1FD6                          u4521 381C                          u4601 3AB4  
                        u5401 1120                          u5321 0D66                          u5241 0C80  
                        u5161 0A60                          u5081 08FC                          u6041 1A06  
                        u3810 3694                          u4290 40D2                          u4370 4278  
                        u4450 3A50                          u3650 21C8                          u3570 20F6  
                        u3490 2020                          u4530 3830                          u4610 3AE0  
                        u5410 1136                          u5330 0EB2                          u5250 0CA0  
                        u5170 0AE8                          u5090 0948                          u6130 1C22  
                        u6050 1A30                          u6210 4154                          u3731 34CE  
                        u3811 3690                          u4291 40CE                          u4371 4274  
                        u4451 3A4C                          u3651 21C4                          u3571 20F2  
                        u3491 201C                          u4531 382C                          u4611 3ADC  
                        u5411 1132                          u5331 0EAE                          u5251 0C9C  
                        u5171 0AE4                          u5091 0944                          u6131 1C1E  
                        u6027 195A                          u6211 4150                          u3740 34F2  
                        u3820 36C2                          u4540 3FAC                          u3900 2704  
                        u4380 42B8                          u4460 4846                          u3660 21E4  
                        u3580 210C                          u4620 3B0A                          u4700 454A  
                        u5500 12E4                          u5420 1148                          u5340 0F18  
                        u5260 0CD6                          u5180 0B7C                          u6140 1C9A  
                        u6060 1ACC                          u6220 4184                          u6300 33F6  
                        u3741 34EE                          u3821 36BE                          u4541 3FA8  
                        u3901 2700                          u4381 42B4                          u4461 4842  
                        u3661 21E0                          u3581 2108                          u4621 3B06  
                        u4701 4546                          u5501 12E0                          u5421 1144  
                        u5341 0F14                          u5261 0CD2                          u5181 0B78  
                        u6061 1AC8                          u6221 4180                          u6205 44AA  
                        u6301 33F2                          u3750 351C                          u3830 370A  
                        u3670 4774                          u4550 3FCE                          u3910 2744  
                        u4390 42F6                          u3590 2120                          u4470 3762  
                        u4710 2CE8                          u5510 131A                          u5430 1156  
                        u5350 0F60                          u5270 0CFC                          u5190 0BEE  
                        u6150 1CAA                          u6070 1B04                          u6230 41B4  
                        u6206 44AC                          u6310 3404                          u3751 3518  
                        u3831 3706                          u3671 4770                          u4551 3FCA  
                        u3911 2740                          u4391 42F2                          u3591 211C  
                        u4471 375E                          u5511 1316                          u5431 1152  
                        u5351 0F5C                          u5271 0CF8                          u5191 0BEA  
                        u6151 1CA6                          u6127 1C08                          u6231 41B0  
                        u6311 3400                          u5600 3100                          u3760 355C  
                        u3680 48C8                          u4560 4024                          u3920 27BA  
                        u3840 263C                          u4480 3796                          u4640 3B44  
                        u4800 2E90                          u4720 2D16                          u5520 1348  
                        u5440 1170                          u5360 0F70                          u5280 0D0E  
                        u6160 1D10                          u6080 1B36                          u6400 386C  
                        u6320 343E                          u6240 32BE                          u5601 30FC  
                        u3761 3558                          u3681 48C4                          u4561 4020  
                        u3921 27B6                          u3841 2638                          u4641 3B3E  
                        u4801 2E8C                          u4721 2D12                          u5521 1344  
                        u5441 116C                          u5361 0F6C                          u5281 0D0A  
                        u6057 1A26                          u6401 3868                          u6321 343A  
                        u6241 32BA                          u4810 4898                          u5610 3128  
                        u3770 35A6                          u4570 4034                          u3930 27DC  
                        u3850 264E                          u4490 37C4                          u4650 3B46  
                        u4730 2D38                          u3690 4828                          u5530 13CC  
                        u5450 117E                          u5370 100A                          u5290 0D1C  
                        u6090 1B5A                          u6170 4418                          u6410 3884  
                        u6330 344C                          u6250 32CC                          u4811 4892  
                        u3771 35A2                          u4571 4030                          u3931 27D8  
                        u3851 264A                          u4491 37C0                          u4635 3B1C  
                        u4731 2D34                          u4715 2CDE                          u3691 4822  
                        u5531 13C8                          u5451 117A                          u5371 1006  
                        u5291 0D18                          u6147 1C90                          u6091 1B54  
                        u6411 3880                          u6331 3448                          u6251 32C8  
                        u4820 489A                          u5700 3286                          u5620 314A  
                        u3780 35FA                          u4580 47D2                          u4900 29EC  
                        u3940 2806                          u3860 265E                          u4660 45AA  
                        u5540 13E6                          u5460 11D6                          u5380 1058  
                        u6180 4428                          u6340 2EC0                          u6420 389C  
                        u6260 3328                          u5701 3282                          u5621 3146  
                        u3781 35F6                          u4581 47CE                          u4901 29E6  
                        u3941 2802                          u3861 265A                          u4485 378C  
                        u5541 13E2                          u5461 11D2                          u5381 1054  
                        u6077 1AFA                          u6181 4424                          u6341 2EBC  
                        u6421 3898                          u6261 3324                          u4830 45D6  
                        u5630 3166                          u3790 362C                          u4910 29EE  
                        u3950 282A                          u3870 26A2                          u4590 3A9A  
                        u4750 2DA4                          u4670 45BC                          u5550 13FE  
                        u5470 12A8                          u5390 1080                          u5710 3E26  
                        u6350 2F3C                          u6430 38B4                          u6190 448C  
                        u6270 337E                          u4831 45D2                          u5631 3162  
                        u3791 3628                          u3951 2826                          u3871 269E  
                        u4751 2DA0                          u4671 45B8                          u5551 13FA  
                        u5471 12A4                          u5391 107C                          u5711 3E22  
                        u6167 1D06                          u6087 1B2C                          u6351 2F38  
                        u6431 38B0                          u6191 4488                          u6271 337A  
                        u4840 4604                          u5640 319A                          u4920 2A04  
                        u3960 2840                          u3880 26B4                          u4760 2DC8  
                        u4680 4532                          u5560 145C                          u5480 12C4  
                        u5720 3E58                          u5800 1596                          u6360 2FB4  
                        u6440 38CC                          u6280 33C8                          u4841 4600  
                        u5617 311E                          u4921 2A00                          u3961 283C  
                        u3881 26B0                          u4745 2D4C                          u4681 452C  
                        u5561 1456                          u5481 12C0                          u5721 3E54  
                        u5801 1592                          u6177 440E                          u6361 2FB0  
                        u6441 38C8                          u6281 33C4                          u5650 31F6  
                        u4850 3D38                          u4930 2A34                          u3970 285E  
                        u3890 26C4                          u4770 2DE4                          u4746 2D56  
                        u4690 4534                          u5570 145E                          u5490 12D6  
                        u5730 3E74                          u5810 1600                          u6370 2FCA  
                        u6450 38E4                          u6290 33E6                          u4851 3D34  
                        u4931 2A30                          u3971 285A                          u3891 26C0  
                        u4595 3A90                          u4771 2DE0                          u4747 2D66  
                        u4667 45A0                          u5491 12D2                          u5731 3E70  
                        u6371 2FC6                          u6451 38E0                          u6507 434E  
                        u6291 33E2                          u5660 3238                          u4860 3D5E  
                        u4940 2A50                          u3980 287E                          u4780 2E38  
                        u5580 1474                          u5740 3E86                          u5900 177C  
                        u5820 1624                          u6380 3042                          u6460 3934  
                        u4861 3D5A                          u4941 2A4C                          u3981 287A  
                        u4765 2DBE                          u5581 1470                          u5741 3E82  
                        u5901 1776                          u5821 161E                          u6381 303E  
                        u6461 3930                          u6517 4362                          u5670 325C  
                        u5590 30F0                          u4870 3D7E                          u4950 2A7E  
                        u3990 2890                          u4790 2E54                          u5750 3EAE  
                        u5910 177E                          u5830 1626                          u6390 309C  
                        u5671 3256                          u5647 3190                          u4871 3D7A  
                        u4951 2A7A                          u3991 288C                          u4791 2E50  
                        u5751 3EAA                          u6391 3098                          u6607 2EF0  
                        u6527 4376                          u5680 325E                          u4880 3DCC  
                        u4960 2A8C                          u5920 1796                          u5840 163E  
                        u5760 14E6                          u5657 31EC                          u4881 3DC8  
                        u4961 2A88                          u4785 2E2E                          u5921 1792  
                        u5841 163A                          u5817 15F6                          u6617 2F1A  
                        u6537 438A                          u5690 3274                          u4890 3DDC  
                        u4970 2BB6                          u5930 17BC                          u5850 1664  
                        u5770 14F6                          u5691 3270                          u5667 322E  
                        u6707 4724                          u4891 3DD8                          u4971 2BB2  
                        u5771 14F2                          u6627 2F7E                          u6547 439E  
                        u4980 2BD4                          u5940 17DE                          u5860 1674  
                        u5780 1540                          u5597 30E6                          u4981 2BD0  
                        u5941 17DA                          u5861 1670                          u6637 300C  
                        u6557 43B2                          u6477 3D06                          u4990 2BEE  
                        u5950 1816                          u5870 16B2                          u5790 1550  
                        u4991 2BEA                          u5791 154C                          u5767 14DC  
                        u6647 41CC                          u6567 38F8                          u6487 49A4  
                        u5960 1838                          u5880 16C2                          u5961 1834  
                        u5937 17B2                          u5881 16BE                          u5857 165A  
                        u6657 4786                          u6577 3914                          u6497 433A  
                        u5970 1870                          u5890 1758                          u5787 1536  
                        u6667 4796                          u6587 3946                          u5980 18A8  
                        u5957 180C                          u5877 16A8                          u6677 47AC  
                        u6597 2ECC                          u5990 18B8                          u6687 46FC  
                        u5991 18B4                          u6697 470E                          u5977 1866  
                        u5897 174E                          u5987 189E                    _Alarma_LED 3852  
                        abs@a 0013                          _dbuf 0104                          _atoi 30B4  
                        _ctoa 3D24                          _main 4660                          _dtoa 29BC  
                        _prec 00D4                          _nout 00D0                          pad@i 001B  
                        pad@p 0018                          fsr1h 000FE2                          fsr2h 000FDA  
                        indf1 000FE7                          indf2 000FDF                          fsr1l 000FE1  
                        pad@w 001D                          fsr2l 000FD9                 ___fpclassifyf 3A5A  
                        prodh 000FF4                          prodl 000FF3                          start 0000  
             ___fldiv@new_exp 0012         ??_Timer0Configuration 0001                  _tolower$1401 000D  
                ___param_bank 000000                         ??_abs 0015                         ??_pad 001A  
              ?_InicializaLCD 0001                 ___fltol@sign1 0009               __end_of___aodiv 35E8  
                       ?_atoi 0008                         ?_ctoa 000D               __end_of___fladd 21F8  
                       ?_main 0001                         ?_dtoa 001F               __end_of___aomod 374C  
             __end_of___fldiv 29BC               __end_of___awdiv 4126               __end_of___flneg 4868  
                       STR_10 085F                         STR_13 0863                         STR_15 0863  
             __end_of___awmod 428A               __end_of___flmul 2622               __end_of___flsub 46EC  
             __end_of___fltol 3852               ___awdiv@divisor 0008               ___awdiv@counter 000A  
                vfpfcnvrt@fmt 0045                         _TMR0L 000FD6                         _PORTB 000F81  
                       _TRISA 000F92                         _TRISB 000F93                         _TRISD 000F95  
                       _R_CAD 0100                         _flags 00D6                         _horas 00F8  
                       _fputc 3ED2                         _fputs 4732               __end_of_isdigit 48A0  
                       atoi@n 0015                         pad@fp 0014                         atoi@s 0008  
                       _width 00D2                         ctoa@c 000F                         _putch 46EC  
                       ctoa@l 0011                         _putcm 4776                         ctoa@w 0013  
                       dtoa@d 0021                         dtoa@i 0041                         dtoa@n 0039  
                       dtoa@p 0033                         dtoa@s 0037                         dtoa@w 0035  
             __end_of_isspace 4610               __end_of_isupper 4830                         tablat 000FF5  
                       status 000FD8               __end_of_sprintf 4660                ?___fpclassifyf 0001  
             __end_of_tolower 4562               __end_of_strncmp 3ED2              __end_of_Get_DATA 4502  
                  _Cronometro 4126               __initialization 4948                  __end_of_atoi 32AC  
                __end_of_ctoa 3DFC                  __end_of_main 46A6                  __end_of_dtoa 2CA0  
            __end_of_Read_ADC 44A0              __end_of_Set_DATA 49B0                        ??_atoi 000A  
                      ??_ctoa 0010                        ??_main 005F                        ??_dtoa 0029  
               __activetblptr 000002                        _ADCON0 000FC2                        _ADCON2 000FC0  
                      ?_fputc 0004                        ?_fputs 000D                        _ADRESH 000FC4  
                      _ADRESL 000FC3              ___awdiv@dividend 0006                        ?_putch 0001  
                      _ANSELB 000F5C                        ?_putcm 0001                   ?_Alarma_LED 0001  
                      _MINUTO 00E6                        _OSCCON 000FD3          __end_of_LCD_COMANDOS 499C  
                      _R_LM35 00CC              __end_of___xxtofl 3460                        _Alarma 2EB2  
                  _SensorLM35 3C46                  vfprintf@cfmt 0053         __end_of_Mostrar_Reloj 3C46  
                      ___flge 3956                        ___fleq 428A                     ??___aodiv 0011  
                   ??___fladd 0009                     ??___aomod 0011                        ___wmul 4922  
                      _cambio 00FC                     ??___fldiv 0009                     ??___awdiv 000A  
                   ??___flneg 0005                     ??___awmod 0005                     ??___flmul 0017  
                   ??___flsub 0030                     ??___fltol 0005                        _efgtoa 0868  
             ??_InicializaLCD 0004                        _floorf 2CA0                        clear_0 494E  
                      clear_1 495A              ___awdiv@quotient 000C               ___awmod@divisor 0003  
             ___awmod@counter 0005                        _printf 48FC                        pad@buf 0016  
                      ctoa@fp 000D                        dtoa@fp 001F                        _strcpy 4562  
                      _strlen 48A0                        fputc@c 0004                        fputs@c 0011  
                      fputs@i 0012                        fputs@s 000D                     ??_isdigit 0003  
             ___fpclassifyf@e 0009               ___fpclassifyf@u 000B               ___fpclassifyf@x 0001  
                __mediumconst 0000                     ??_isspace 0003                        tblptrh 000FF7  
                   ??_isupper 0003                        tblptrl 000FF6                        tblptru 000FF8  
            __end_of_vfprintf 4432                     ??_sprintf 0055                     ??_tolower 0009  
                   ??_strncmp 0007               _Decenas_Minutos 00EE                    ___flge@ff1 0028  
                  ___flge@ff2 002C               ??___fpclassifyf 0005                  ___xxtofl@arg 000B  
                ___xxtofl@exp 000A                  ___xxtofl@val 0001                    ___fleq@ff1 0001  
                  ___fleq@ff2 0005                    __accesstop 0060       __end_of__initialization 4960  
                  ___flneg@f1 0001                   ?_Cronometro 0001                 ___rparam_used 000001  
                  ___fltol@f1 0001                __pcstackCOMRAM 0001                 __end_of_fputc 3F9C  
               __end_of_fputs 4776                 __end_of_putch 4732                 __end_of_putcm 47B8  
         __size_of_Alarma_LED 0104                     ?_Get_DATA 0001                 Read_ADC@canal 0005  
                     ??_fputc 0008                       ??_fputs 0011                       ??_putch 0001  
                     ??_putcm 0001                 _Decenas_Horas 00F2                    __pbssBANK0 00C0  
                  __pbssBANK1 0100         __end_of_Configuracion 48FC                     ?_Read_ADC 0001  
                   ?_Set_DATA 0001                       ?_Alarma 0001                   ?_SensorLM35 0001  
                     ?___flge 0028                       ?___fleq 0001                       ?___wmul 0001  
                     ?_efgtoa 0034                       ?_floorf 001A                       ?_printf 00B0  
                     ?_strcpy 0001                       ?_strlen 0001                     ?___xxtofl 0001  
         __size_of_Cronometro 00B4                    ??_Get_DATA 0002                       _SEGUNDO 00E4  
          __size_of_vfpfcnvrt 0878         __size_of_LCD_COMANDOS 0018                    ??_Read_ADC 0003  
 __end_of_Timer0Configuration 4984                    ??_Set_DATA 0001               __size_of_Alarma 0202  
                     __Hparam 0000                       __Lparam 0000                       _Valores 0154  
             __size_of___flge 0104               __size_of___fleq 00AA                       ___aodiv 3460  
                     ___fladd 1D38                       ___aomod 35E8                       ___fldiv 2622  
                     ___awdiv 4062                       ___flneg 4830                       ___awmod 41DA  
                     ___flmul 21F8                       ___flsub 46A6                       ___fltol 374C  
             __size_of___wmul 0026                     ?_vfprintf 004D                  __psmallconst 0800  
             __size_of_efgtoa 0C58               __size_of_floorf 0212                       __pcinit 4948  
                     __ramtop 0800                       __ptext0 4660                       __ptext1 496A  
                     __ptext2 3C46                       __ptext3 4610                       __ptext4 32AC  
                     __ptext5 4432                       __ptext6 4984                       __ptext7 44A0  
                     __ptext8 499C                       __ptext9 4334               __size_of_printf 0026  
                _LCD_COMANDOS 4984                     _T0CONbits 000FD5               __size_of_strcpy 005C  
             __size_of_strlen 0036                  __size_of_abs 0040                  __size_of_pad 00C6  
                     _isdigit 4868                    ??___xxtofl 0005              ___awmod@dividend 0001  
                     _isspace 45BE                       _minutos 00FA                       _isupper 47F8  
                     efgtoa@c 003A                       efgtoa@d 0078                       efgtoa@e 0090  
                     efgtoa@f 0036                       efgtoa@g 008C                       efgtoa@h 0082  
                     efgtoa@i 008A                       efgtoa@l 0086                       efgtoa@m 0072  
                     efgtoa@n 0092                       efgtoa@p 007C                       efgtoa@t 006C  
                     efgtoa@u 0094                       efgtoa@w 007E                       atoi@neg 000E  
         __size_of_SensorLM35 00DE                       _sprintf 4610                       _tolower 4502  
                     _strncmp 3DFC          end_of_initialization 4960                       floorf@e 0028  
                     floorf@m 0024                       floorf@u 002A                       floorf@x 001A  
                ??_Alarma_LED 0001                       fputc@fp 0006                 __Lmediumconst 0000  
                     fputs@fp 000F              _Unidades_Minutos 00F0             __end_of_vfpfcnvrt 1D38  
                  efgtoa@mode 0081                    efgtoa@sign 007A                       postdec2 000FDD  
                     postinc0 000FEE                       postinc1 000FE6                       postinc2 000FDE  
                  ??_vfprintf 0053                       strcpy@d 0009                       strlen@a 0003  
                     strcpy@s 0007                       strlen@s 0001                     _PORTAbits 000F80  
                   _PORTCbits 000F82            __end_of_Alarma_LED 3956              _Decenas_Segundos 00EA  
                 ___fladd@grs 0010                 ___xxtofl@sign 0009                     _TRISCbits 000F94  
                 ___fldiv@grs 0014                   ___fldiv@rem 000D                   ___flmul@grs 001C  
                ??_Cronometro 0059                __end_of_Alarma 30B4                __end_of___flge 3A5A  
              __end_of___fleq 4334                   vfpfcnvrt@ap 0047                   vfpfcnvrt@ct 00AC  
                 vfpfcnvrt@fp 0043                   vfpfcnvrt@ll 0098                __end_of___wmul 4948  
                 vfpfcnvrt@vp 00A0                __end_of_efgtoa 14C0                   putch@Activa 0003  
       __end_of_InicializaLCD 43BC                __end_of_floorf 2EB2                    floorf@F527 00C0  
              __end_of_printf 4922                __end_of_strcpy 45BE                __end_of_strlen 48D6  
                 putcm@Activa 0003           start_initialization 4948            __end_of_Cronometro 41DA  
                 __end_of_abs 47F8                   __end_of_pad 4062             __size_of_Get_DATA 0062  
      __size_of_Mostrar_Reloj 00EE                  Get_DATA@data 0003         __end_of___fpclassifyf 3B58  
                    ??_Alarma 005B             __size_of_Read_ADC 006E             __size_of_Set_DATA 0014  
                ??_SensorLM35 00BE                   vfprintf@fmt 004F                      ??___flge 0030  
                    ??___fleq 0009                      ??___wmul 0005                      ??_efgtoa 003B  
                    ??_floorf 001E                _Unidades_Horas 00F4                      ??_printf 0055  
                    ??_strcpy 0005                      ??_strlen 0003                     ___fladd@a 0005  
                   ___fladd@b 0001                     ___fldiv@a 0005                     ___fldiv@b 0001  
                   ___flmul@a 0013                     ___flmul@b 000F                     ___flsub@a 002C  
                   ___flsub@b 0028                 __pcstackBANK0 0060              ___aodiv@dividend 0001  
           __size_of___xxtofl 01B4            __end_of_SensorLM35 3D24                     _atoi$1301 0010  
                   _atoi$1302 0014                     _atoi$1303 0012                   _efgtoa$1232 0060  
                 _efgtoa$1241 0066                   _efgtoa$1233 0062                   _efgtoa$1242 0068  
                 _efgtoa$1243 006A                   _efgtoa$1237 0064                     _dtoa$1208 0031  
                    ?___aodiv 0001                      ?___fladd 0001                 _Mostrar_Reloj 3B58  
                    ?___aomod 0001                      ?___fldiv 0001                      ?___awdiv 0006  
            ___aodiv@quotient 0013                      ?___flneg 0001                      ?___awmod 0001  
                    ?___flmul 000F                      ?___flsub 0028                      ?___fltol 0001  
      __size_of_Configuracion 0026             __size_of_vfprintf 0076                   __smallconst 0800  
                    ?_isdigit 0001                      ?_isspace 0001                      ?_isupper 0001  
                    ?_sprintf 00B0                      ?_tolower 0007                __size_of_fputc 00CA  
              __size_of_fputs 0044                      ?_strncmp 0001                __size_of_putch 0046  
              __size_of_putcm 0042                ___wmul@product 0005                      _LATCbits 000F8B  
                    _LATDbits 000F8C  __size_of_Timer0Configuration 001A                ?_Mostrar_Reloj 0001  
                   _vfpfcnvrt 14C0                    _ADCON0bits 000FC2                    _ADCON1bits 000FC1  
           ___wmul@multiplier 0001                   Alarma_LED@A 0003                      _Get_DATA 44A0  
                _isspace$1332 0007                    vfpfcnvrt@c 00AF                    vfpfcnvrt@f 00A8  
                    _Read_ADC 4432                 _Configuracion 48D6                      _Set_DATA 499C  
                    __Hrparam 0000                    vfprintf@ap 0051                      __Lrparam 0000  
                  vfprintf@fp 004D              __size_of___aodiv 0188              __size_of___fladd 04C0  
            __size_of___aomod 0164              __size_of___fldiv 039A              __size_of___awdiv 00C4  
            __size_of___flneg 0038              __size_of___awmod 00B0              __size_of___flmul 042A  
            __size_of___flsub 0046              __size_of___fltol 0106                    ?_vfpfcnvrt 0043  
             ___aodiv@divisor 0009               ___aodiv@counter 0011                    _ANSELAbits 000F5B  
                  _ANSELCbits 000F5D            ___fpclassifyf@F465 00C4                    sprintf@fmt 00B2  
                    ___xxtofl 32AC              __size_of_isdigit 0038              __size_of_isspace 0052  
                    __ptext10 48D6                      __ptext11 3852                      __ptext20 0868  
                    __ptext12 2EB2                      __ptext21 4502                      __ptext13 4126  
                    __ptext30 21F8                      __ptext22 47F8                      __ptext14 3B58  
                    __ptext31 3956                      __ptext23 4562                      __ptext15 4776  
                    __ptext40 47B8                      __ptext32 428A                      __ptext24 2CA0  
                    __ptext16 48FC                      __ptext41 35E8                      __ptext33 2622  
                    __ptext25 3A5A                      __ptext17 43BC                      __ptext42 3460  
                    __ptext34 41DA                      __ptext26 374C                      __ptext18 14C0  
                    __ptext43 3D24                      __ptext35 4062                      __ptext27 46A6  
                    __ptext19 3DFC                      __ptext44 3ED2                      __ptext36 29BC  
                    __ptext28 1D38                      __ptext45 46EC                      __ptext37 3F9C  
                    __ptext29 4830                      __ptext46 30B4                      __ptext38 48A0  
                    __ptext47 45BE                      __ptext39 4732                      __ptext48 4868  
                    __ptext49 4922              __size_of_isupper 0038              __size_of_sprintf 0050  
            __size_of_tolower 0060                ?_Configuracion 0001                    strcpy@dest 0001  
            __size_of_strncmp 00D6                 __size_of_atoi 01F8                 __size_of_ctoa 00D8  
               __size_of_main 0046                 __size_of_dtoa 02E4               ??_Mostrar_Reloj 0059  
                    _segundos 00F6                      efgtoa@fp 0034                      efgtoa@ne 0070  
                    efgtoa@pp 006E                      efgtoa@ou 0074                      _vfprintf 43BC  
                   printf@fmt 00B0              ___aomod@dividend 0001                     putch@data 0002  
              _vfpfcnvrt$1264 00A6                _vfpfcnvrt$1257 00A2                _vfpfcnvrt$1258 00A4  
                  _INTCONbits 000FF2                     putcm@data 0002                      isdigit@c 0001  
                   sprintf@ap 0057                      isspace@c 0001        __size_of_InicializaLCD 0088  
                   strcpy@src 0003             _Unidades_Segundos 00EC                      isupper@c 0001  
                   strncmp@_l 0001                     strncmp@_r 0003                   efgtoa@nmode 0080  
                    printf@ap 0057               ___aomod@divisor 0009                   ??_vfpfcnvrt 0049  
             ___aomod@counter 0011                 ?_LCD_COMANDOS 0001                   _temperatura 00C8  
                    sprintf@f 0059                      tolower@c 0007                      sprintf@s 00B0  
      __size_of___fpclassifyf 00FE                      strncmp@l 0008                      strncmp@n 0005  
                    strncmp@r 000A           _Timer0Configuration 496A           LCD_COMANDOS@comando 0004  
             ??_Configuracion 0001                 ___fladd@signs 000D                  ___aodiv@sign 0012  
                ___fladd@aexp 000E                  ___fladd@bexp 000F                  ___aomod@sign 0012  
        ?_Timer0Configuration 0001  
